// Copyright 2013-2023, University of Colorado Boulder

/**
 * The 'Slope-Intercept' screen. Conforms to the contract specified in joist/Screen.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import Property from '../../../axon/js/Property.js';
import Screen from '../../../joist/js/Screen.js';
import GLColors from '../common/GLColors.js';
import GLIconFactory from '../common/view/GLIconFactory.js';
import graphingLines from '../graphingLines.js';
import GraphingLinesStrings from '../GraphingLinesStrings.js';
import SlopeInterceptModel from './model/SlopeInterceptModel.js';
import SlopeInterceptScreenView from './view/SlopeInterceptScreenView.js';
export default class SlopeInterceptScreen extends Screen {
  constructor(tandem, backgroundColorProperty = new Property(GLColors.SCREEN_BACKGROUND)) {
    const options = {
      name: GraphingLinesStrings.screen.slopeInterceptStringProperty,
      backgroundColorProperty: backgroundColorProperty,
      homeScreenIcon: GLIconFactory.createSlopeInterceptScreenIcon(),
      tandem: tandem
    };
    super(() => new SlopeInterceptModel(tandem.createTandem('model')), model => new SlopeInterceptScreenView(model, tandem.createTandem('view')), options);
  }
}
graphingLines.register('SlopeInterceptScreen', SlopeInterceptScreen);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQcm9wZXJ0eSIsIlNjcmVlbiIsIkdMQ29sb3JzIiwiR0xJY29uRmFjdG9yeSIsImdyYXBoaW5nTGluZXMiLCJHcmFwaGluZ0xpbmVzU3RyaW5ncyIsIlNsb3BlSW50ZXJjZXB0TW9kZWwiLCJTbG9wZUludGVyY2VwdFNjcmVlblZpZXciLCJTbG9wZUludGVyY2VwdFNjcmVlbiIsImNvbnN0cnVjdG9yIiwidGFuZGVtIiwiYmFja2dyb3VuZENvbG9yUHJvcGVydHkiLCJTQ1JFRU5fQkFDS0dST1VORCIsIm9wdGlvbnMiLCJuYW1lIiwic2NyZWVuIiwic2xvcGVJbnRlcmNlcHRTdHJpbmdQcm9wZXJ0eSIsImhvbWVTY3JlZW5JY29uIiwiY3JlYXRlU2xvcGVJbnRlcmNlcHRTY3JlZW5JY29uIiwiY3JlYXRlVGFuZGVtIiwibW9kZWwiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIlNsb3BlSW50ZXJjZXB0U2NyZWVuLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDEzLTIwMjMsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIFRoZSAnU2xvcGUtSW50ZXJjZXB0JyBzY3JlZW4uIENvbmZvcm1zIHRvIHRoZSBjb250cmFjdCBzcGVjaWZpZWQgaW4gam9pc3QvU2NyZWVuLlxyXG4gKlxyXG4gKiBAYXV0aG9yIENocmlzIE1hbGxleSAoUGl4ZWxab29tLCBJbmMuKVxyXG4gKi9cclxuXHJcbmltcG9ydCBQcm9wZXJ0eSBmcm9tICcuLi8uLi8uLi9heG9uL2pzL1Byb3BlcnR5LmpzJztcclxuaW1wb3J0IFNjcmVlbiBmcm9tICcuLi8uLi8uLi9qb2lzdC9qcy9TY3JlZW4uanMnO1xyXG5pbXBvcnQgeyBDb2xvciB9IGZyb20gJy4uLy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XHJcbmltcG9ydCBUYW5kZW0gZnJvbSAnLi4vLi4vLi4vdGFuZGVtL2pzL1RhbmRlbS5qcyc7XHJcbmltcG9ydCBHTENvbG9ycyBmcm9tICcuLi9jb21tb24vR0xDb2xvcnMuanMnO1xyXG5pbXBvcnQgR0xJY29uRmFjdG9yeSBmcm9tICcuLi9jb21tb24vdmlldy9HTEljb25GYWN0b3J5LmpzJztcclxuaW1wb3J0IGdyYXBoaW5nTGluZXMgZnJvbSAnLi4vZ3JhcGhpbmdMaW5lcy5qcyc7XHJcbmltcG9ydCBHcmFwaGluZ0xpbmVzU3RyaW5ncyBmcm9tICcuLi9HcmFwaGluZ0xpbmVzU3RyaW5ncy5qcyc7XHJcbmltcG9ydCBTbG9wZUludGVyY2VwdE1vZGVsIGZyb20gJy4vbW9kZWwvU2xvcGVJbnRlcmNlcHRNb2RlbC5qcyc7XHJcbmltcG9ydCBTbG9wZUludGVyY2VwdFNjcmVlblZpZXcgZnJvbSAnLi92aWV3L1Nsb3BlSW50ZXJjZXB0U2NyZWVuVmlldy5qcyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTbG9wZUludGVyY2VwdFNjcmVlbiBleHRlbmRzIFNjcmVlbjxTbG9wZUludGVyY2VwdE1vZGVsLCBTbG9wZUludGVyY2VwdFNjcmVlblZpZXc+IHtcclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKCB0YW5kZW06IFRhbmRlbSwgYmFja2dyb3VuZENvbG9yUHJvcGVydHkgPSBuZXcgUHJvcGVydHk8Q29sb3IgfCBzdHJpbmc+KCBHTENvbG9ycy5TQ1JFRU5fQkFDS0dST1VORCApICkge1xyXG5cclxuICAgIGNvbnN0IG9wdGlvbnMgPSB7XHJcbiAgICAgIG5hbWU6IEdyYXBoaW5nTGluZXNTdHJpbmdzLnNjcmVlbi5zbG9wZUludGVyY2VwdFN0cmluZ1Byb3BlcnR5LFxyXG4gICAgICBiYWNrZ3JvdW5kQ29sb3JQcm9wZXJ0eTogYmFja2dyb3VuZENvbG9yUHJvcGVydHksXHJcbiAgICAgIGhvbWVTY3JlZW5JY29uOiBHTEljb25GYWN0b3J5LmNyZWF0ZVNsb3BlSW50ZXJjZXB0U2NyZWVuSWNvbigpLFxyXG4gICAgICB0YW5kZW06IHRhbmRlbVxyXG4gICAgfTtcclxuXHJcbiAgICBzdXBlcihcclxuICAgICAgKCkgPT4gbmV3IFNsb3BlSW50ZXJjZXB0TW9kZWwoIHRhbmRlbS5jcmVhdGVUYW5kZW0oICdtb2RlbCcgKSApLFxyXG4gICAgICBtb2RlbCA9PiBuZXcgU2xvcGVJbnRlcmNlcHRTY3JlZW5WaWV3KCBtb2RlbCwgdGFuZGVtLmNyZWF0ZVRhbmRlbSggJ3ZpZXcnICkgKSxcclxuICAgICAgb3B0aW9uc1xyXG4gICAgKTtcclxuICB9XHJcbn1cclxuXHJcbmdyYXBoaW5nTGluZXMucmVnaXN0ZXIoICdTbG9wZUludGVyY2VwdFNjcmVlbicsIFNsb3BlSW50ZXJjZXB0U2NyZWVuICk7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLFFBQVEsTUFBTSw4QkFBOEI7QUFDbkQsT0FBT0MsTUFBTSxNQUFNLDZCQUE2QjtBQUdoRCxPQUFPQyxRQUFRLE1BQU0sdUJBQXVCO0FBQzVDLE9BQU9DLGFBQWEsTUFBTSxpQ0FBaUM7QUFDM0QsT0FBT0MsYUFBYSxNQUFNLHFCQUFxQjtBQUMvQyxPQUFPQyxvQkFBb0IsTUFBTSw0QkFBNEI7QUFDN0QsT0FBT0MsbUJBQW1CLE1BQU0sZ0NBQWdDO0FBQ2hFLE9BQU9DLHdCQUF3QixNQUFNLG9DQUFvQztBQUV6RSxlQUFlLE1BQU1DLG9CQUFvQixTQUFTUCxNQUFNLENBQWdEO0VBRS9GUSxXQUFXQSxDQUFFQyxNQUFjLEVBQUVDLHVCQUF1QixHQUFHLElBQUlYLFFBQVEsQ0FBa0JFLFFBQVEsQ0FBQ1UsaUJBQWtCLENBQUMsRUFBRztJQUV6SCxNQUFNQyxPQUFPLEdBQUc7TUFDZEMsSUFBSSxFQUFFVCxvQkFBb0IsQ0FBQ1UsTUFBTSxDQUFDQyw0QkFBNEI7TUFDOURMLHVCQUF1QixFQUFFQSx1QkFBdUI7TUFDaERNLGNBQWMsRUFBRWQsYUFBYSxDQUFDZSw4QkFBOEIsQ0FBQyxDQUFDO01BQzlEUixNQUFNLEVBQUVBO0lBQ1YsQ0FBQztJQUVELEtBQUssQ0FDSCxNQUFNLElBQUlKLG1CQUFtQixDQUFFSSxNQUFNLENBQUNTLFlBQVksQ0FBRSxPQUFRLENBQUUsQ0FBQyxFQUMvREMsS0FBSyxJQUFJLElBQUliLHdCQUF3QixDQUFFYSxLQUFLLEVBQUVWLE1BQU0sQ0FBQ1MsWUFBWSxDQUFFLE1BQU8sQ0FBRSxDQUFDLEVBQzdFTixPQUNGLENBQUM7RUFDSDtBQUNGO0FBRUFULGFBQWEsQ0FBQ2lCLFFBQVEsQ0FBRSxzQkFBc0IsRUFBRWIsb0JBQXFCLENBQUMifQ==