// Copyright 2020-2022, University of Colorado Boulder

/**
 * Displays a node that tells the user that all collection boxes are full. Allows the user
 * to create a new collection.
 *
 * @author Denzell Barnett (PhET Interactive Simulations)
 * @author Jonathan Olson <jonathan.olson@colorado.edu>
 */

import Vector2 from '../../../../dot/js/Vector2.js';
import merge from '../../../../phet-core/js/merge.js';
import FaceNode from '../../../../scenery-phet/js/FaceNode.js';
import PhetFont from '../../../../scenery-phet/js/PhetFont.js';
import { Color, Text, VBox } from '../../../../scenery/js/imports.js';
import TextPushButton from '../../../../sun/js/buttons/TextPushButton.js';
import Dialog from '../../../../sun/js/Dialog.js';
import nullSoundPlayer from '../../../../tambo/js/shared-sound-players/nullSoundPlayer.js';
import buildAMolecule from '../../buildAMolecule.js';
import BuildAMoleculeStrings from '../../BuildAMoleculeStrings.js';
import BAMConstants from '../BAMConstants.js';
class AllFilledDialog extends Dialog {
  /**
   * @param {Property.<Boolean>} buttonClickedProperty
   * @param {function} regenerateCallback
   * @param {Object} [options]
   */
  constructor(buttonClickedProperty, regenerateCallback, options) {
    options = merge({
      stroke: new Color(0, 0, 0),
      fill: BAMConstants.COMPLETE_BACKGROUND_COLOR,
      center: Vector2.ZERO,
      bottomMargin: 10,
      cornerRadius: BAMConstants.CORNER_RADIUS,
      layoutStrategy: (dialog, simBounds, screenBounds, scale) => {
        this.center = dialog.layoutBounds.center.minusXY(75, 75);
      }
    }, options);
    super(new VBox({
      spacing: 7,
      align: 'center',
      children: [
      // Add smiley face
      new FaceNode(120).smile(),
      // Add a message regarding the completed collection
      new Text(BuildAMoleculeStrings.youCompletedYourCollection, {
        font: new PhetFont({
          size: 20,
          weight: 'bold'
        }),
        maxWidth: BAMConstants.TEXT_MAX_WIDTH * 1.5
      }),
      // Add the next collection button
      new TextPushButton(BuildAMoleculeStrings.nextCollection, {
        font: new PhetFont({
          size: 18,
          weight: 'bold'
        }),
        maxWidth: BAMConstants.TEXT_MAX_WIDTH * 1.5,
        touchAreaXDilation: 20,
        touchAreaYDilation: 20,
        baseColor: Color.ORANGE,
        soundPlayer: nullSoundPlayer,
        listener: () => {
          buttonClickedProperty.value = true;
          regenerateCallback();
          this.hide();
        }
      })]
    }), options);
  }
}
buildAMolecule.register('AllFilledDialog', AllFilledDialog);
export default AllFilledDialog;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJWZWN0b3IyIiwibWVyZ2UiLCJGYWNlTm9kZSIsIlBoZXRGb250IiwiQ29sb3IiLCJUZXh0IiwiVkJveCIsIlRleHRQdXNoQnV0dG9uIiwiRGlhbG9nIiwibnVsbFNvdW5kUGxheWVyIiwiYnVpbGRBTW9sZWN1bGUiLCJCdWlsZEFNb2xlY3VsZVN0cmluZ3MiLCJCQU1Db25zdGFudHMiLCJBbGxGaWxsZWREaWFsb2ciLCJjb25zdHJ1Y3RvciIsImJ1dHRvbkNsaWNrZWRQcm9wZXJ0eSIsInJlZ2VuZXJhdGVDYWxsYmFjayIsIm9wdGlvbnMiLCJzdHJva2UiLCJmaWxsIiwiQ09NUExFVEVfQkFDS0dST1VORF9DT0xPUiIsImNlbnRlciIsIlpFUk8iLCJib3R0b21NYXJnaW4iLCJjb3JuZXJSYWRpdXMiLCJDT1JORVJfUkFESVVTIiwibGF5b3V0U3RyYXRlZ3kiLCJkaWFsb2ciLCJzaW1Cb3VuZHMiLCJzY3JlZW5Cb3VuZHMiLCJzY2FsZSIsImxheW91dEJvdW5kcyIsIm1pbnVzWFkiLCJzcGFjaW5nIiwiYWxpZ24iLCJjaGlsZHJlbiIsInNtaWxlIiwieW91Q29tcGxldGVkWW91ckNvbGxlY3Rpb24iLCJmb250Iiwic2l6ZSIsIndlaWdodCIsIm1heFdpZHRoIiwiVEVYVF9NQVhfV0lEVEgiLCJuZXh0Q29sbGVjdGlvbiIsInRvdWNoQXJlYVhEaWxhdGlvbiIsInRvdWNoQXJlYVlEaWxhdGlvbiIsImJhc2VDb2xvciIsIk9SQU5HRSIsInNvdW5kUGxheWVyIiwibGlzdGVuZXIiLCJ2YWx1ZSIsImhpZGUiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIkFsbEZpbGxlZERpYWxvZy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMC0yMDIyLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBEaXNwbGF5cyBhIG5vZGUgdGhhdCB0ZWxscyB0aGUgdXNlciB0aGF0IGFsbCBjb2xsZWN0aW9uIGJveGVzIGFyZSBmdWxsLiBBbGxvd3MgdGhlIHVzZXJcclxuICogdG8gY3JlYXRlIGEgbmV3IGNvbGxlY3Rpb24uXHJcbiAqXHJcbiAqIEBhdXRob3IgRGVuemVsbCBCYXJuZXR0IChQaEVUIEludGVyYWN0aXZlIFNpbXVsYXRpb25zKVxyXG4gKiBAYXV0aG9yIEpvbmF0aGFuIE9sc29uIDxqb25hdGhhbi5vbHNvbkBjb2xvcmFkby5lZHU+XHJcbiAqL1xyXG5cclxuaW1wb3J0IFZlY3RvcjIgZnJvbSAnLi4vLi4vLi4vLi4vZG90L2pzL1ZlY3RvcjIuanMnO1xyXG5pbXBvcnQgbWVyZ2UgZnJvbSAnLi4vLi4vLi4vLi4vcGhldC1jb3JlL2pzL21lcmdlLmpzJztcclxuaW1wb3J0IEZhY2VOb2RlIGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnktcGhldC9qcy9GYWNlTm9kZS5qcyc7XHJcbmltcG9ydCBQaGV0Rm9udCBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5LXBoZXQvanMvUGhldEZvbnQuanMnO1xyXG5pbXBvcnQgeyBDb2xvciwgVGV4dCwgVkJveCB9IGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XHJcbmltcG9ydCBUZXh0UHVzaEJ1dHRvbiBmcm9tICcuLi8uLi8uLi8uLi9zdW4vanMvYnV0dG9ucy9UZXh0UHVzaEJ1dHRvbi5qcyc7XHJcbmltcG9ydCBEaWFsb2cgZnJvbSAnLi4vLi4vLi4vLi4vc3VuL2pzL0RpYWxvZy5qcyc7XHJcbmltcG9ydCBudWxsU291bmRQbGF5ZXIgZnJvbSAnLi4vLi4vLi4vLi4vdGFtYm8vanMvc2hhcmVkLXNvdW5kLXBsYXllcnMvbnVsbFNvdW5kUGxheWVyLmpzJztcclxuaW1wb3J0IGJ1aWxkQU1vbGVjdWxlIGZyb20gJy4uLy4uL2J1aWxkQU1vbGVjdWxlLmpzJztcclxuaW1wb3J0IEJ1aWxkQU1vbGVjdWxlU3RyaW5ncyBmcm9tICcuLi8uLi9CdWlsZEFNb2xlY3VsZVN0cmluZ3MuanMnO1xyXG5pbXBvcnQgQkFNQ29uc3RhbnRzIGZyb20gJy4uL0JBTUNvbnN0YW50cy5qcyc7XHJcblxyXG5jbGFzcyBBbGxGaWxsZWREaWFsb2cgZXh0ZW5kcyBEaWFsb2cge1xyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSB7UHJvcGVydHkuPEJvb2xlYW4+fSBidXR0b25DbGlja2VkUHJvcGVydHlcclxuICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSByZWdlbmVyYXRlQ2FsbGJhY2tcclxuICAgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXHJcbiAgICovXHJcbiAgY29uc3RydWN0b3IoIGJ1dHRvbkNsaWNrZWRQcm9wZXJ0eSwgcmVnZW5lcmF0ZUNhbGxiYWNrLCBvcHRpb25zICkge1xyXG4gICAgb3B0aW9ucyA9IG1lcmdlKCB7XHJcbiAgICAgIHN0cm9rZTogbmV3IENvbG9yKCAwLCAwLCAwICksXHJcbiAgICAgIGZpbGw6IEJBTUNvbnN0YW50cy5DT01QTEVURV9CQUNLR1JPVU5EX0NPTE9SLFxyXG4gICAgICBjZW50ZXI6IFZlY3RvcjIuWkVSTyxcclxuICAgICAgYm90dG9tTWFyZ2luOiAxMCxcclxuICAgICAgY29ybmVyUmFkaXVzOiBCQU1Db25zdGFudHMuQ09STkVSX1JBRElVUyxcclxuICAgICAgbGF5b3V0U3RyYXRlZ3k6ICggZGlhbG9nLCBzaW1Cb3VuZHMsIHNjcmVlbkJvdW5kcywgc2NhbGUgKSA9PiB7XHJcbiAgICAgICAgdGhpcy5jZW50ZXIgPSBkaWFsb2cubGF5b3V0Qm91bmRzLmNlbnRlci5taW51c1hZKCA3NSwgNzUgKTtcclxuICAgICAgfVxyXG4gICAgfSwgb3B0aW9ucyApO1xyXG5cclxuICAgIHN1cGVyKCBuZXcgVkJveCgge1xyXG4gICAgICBzcGFjaW5nOiA3LFxyXG4gICAgICBhbGlnbjogJ2NlbnRlcicsXHJcbiAgICAgIGNoaWxkcmVuOiBbXHJcblxyXG4gICAgICAgIC8vIEFkZCBzbWlsZXkgZmFjZVxyXG4gICAgICAgIG5ldyBGYWNlTm9kZSggMTIwICkuc21pbGUoKSxcclxuXHJcbiAgICAgICAgLy8gQWRkIGEgbWVzc2FnZSByZWdhcmRpbmcgdGhlIGNvbXBsZXRlZCBjb2xsZWN0aW9uXHJcbiAgICAgICAgbmV3IFRleHQoIEJ1aWxkQU1vbGVjdWxlU3RyaW5ncy55b3VDb21wbGV0ZWRZb3VyQ29sbGVjdGlvbiwge1xyXG4gICAgICAgICAgZm9udDogbmV3IFBoZXRGb250KCB7XHJcbiAgICAgICAgICAgIHNpemU6IDIwLFxyXG4gICAgICAgICAgICB3ZWlnaHQ6ICdib2xkJ1xyXG4gICAgICAgICAgfSApLFxyXG4gICAgICAgICAgbWF4V2lkdGg6IEJBTUNvbnN0YW50cy5URVhUX01BWF9XSURUSCAqIDEuNVxyXG4gICAgICAgIH0gKSxcclxuXHJcbiAgICAgICAgLy8gQWRkIHRoZSBuZXh0IGNvbGxlY3Rpb24gYnV0dG9uXHJcbiAgICAgICAgbmV3IFRleHRQdXNoQnV0dG9uKCBCdWlsZEFNb2xlY3VsZVN0cmluZ3MubmV4dENvbGxlY3Rpb24sIHtcclxuICAgICAgICAgIGZvbnQ6IG5ldyBQaGV0Rm9udCgge1xyXG4gICAgICAgICAgICBzaXplOiAxOCxcclxuICAgICAgICAgICAgd2VpZ2h0OiAnYm9sZCdcclxuICAgICAgICAgIH0gKSxcclxuICAgICAgICAgIG1heFdpZHRoOiBCQU1Db25zdGFudHMuVEVYVF9NQVhfV0lEVEggKiAxLjUsXHJcbiAgICAgICAgICB0b3VjaEFyZWFYRGlsYXRpb246IDIwLFxyXG4gICAgICAgICAgdG91Y2hBcmVhWURpbGF0aW9uOiAyMCxcclxuICAgICAgICAgIGJhc2VDb2xvcjogQ29sb3IuT1JBTkdFLFxyXG4gICAgICAgICAgc291bmRQbGF5ZXI6IG51bGxTb3VuZFBsYXllcixcclxuICAgICAgICAgIGxpc3RlbmVyOiAoKSA9PiB7XHJcbiAgICAgICAgICAgIGJ1dHRvbkNsaWNrZWRQcm9wZXJ0eS52YWx1ZSA9IHRydWU7XHJcbiAgICAgICAgICAgIHJlZ2VuZXJhdGVDYWxsYmFjaygpO1xyXG4gICAgICAgICAgICB0aGlzLmhpZGUoKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9IClcclxuICAgICAgXVxyXG4gICAgfSApLCBvcHRpb25zICk7XHJcbiAgfVxyXG59XHJcblxyXG5idWlsZEFNb2xlY3VsZS5yZWdpc3RlciggJ0FsbEZpbGxlZERpYWxvZycsIEFsbEZpbGxlZERpYWxvZyApO1xyXG5leHBvcnQgZGVmYXVsdCBBbGxGaWxsZWREaWFsb2c7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxPQUFPLE1BQU0sK0JBQStCO0FBQ25ELE9BQU9DLEtBQUssTUFBTSxtQ0FBbUM7QUFDckQsT0FBT0MsUUFBUSxNQUFNLHlDQUF5QztBQUM5RCxPQUFPQyxRQUFRLE1BQU0seUNBQXlDO0FBQzlELFNBQVNDLEtBQUssRUFBRUMsSUFBSSxFQUFFQyxJQUFJLFFBQVEsbUNBQW1DO0FBQ3JFLE9BQU9DLGNBQWMsTUFBTSw4Q0FBOEM7QUFDekUsT0FBT0MsTUFBTSxNQUFNLDhCQUE4QjtBQUNqRCxPQUFPQyxlQUFlLE1BQU0sOERBQThEO0FBQzFGLE9BQU9DLGNBQWMsTUFBTSx5QkFBeUI7QUFDcEQsT0FBT0MscUJBQXFCLE1BQU0sZ0NBQWdDO0FBQ2xFLE9BQU9DLFlBQVksTUFBTSxvQkFBb0I7QUFFN0MsTUFBTUMsZUFBZSxTQUFTTCxNQUFNLENBQUM7RUFDbkM7QUFDRjtBQUNBO0FBQ0E7QUFDQTtFQUNFTSxXQUFXQSxDQUFFQyxxQkFBcUIsRUFBRUMsa0JBQWtCLEVBQUVDLE9BQU8sRUFBRztJQUNoRUEsT0FBTyxHQUFHaEIsS0FBSyxDQUFFO01BQ2ZpQixNQUFNLEVBQUUsSUFBSWQsS0FBSyxDQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBRSxDQUFDO01BQzVCZSxJQUFJLEVBQUVQLFlBQVksQ0FBQ1EseUJBQXlCO01BQzVDQyxNQUFNLEVBQUVyQixPQUFPLENBQUNzQixJQUFJO01BQ3BCQyxZQUFZLEVBQUUsRUFBRTtNQUNoQkMsWUFBWSxFQUFFWixZQUFZLENBQUNhLGFBQWE7TUFDeENDLGNBQWMsRUFBRUEsQ0FBRUMsTUFBTSxFQUFFQyxTQUFTLEVBQUVDLFlBQVksRUFBRUMsS0FBSyxLQUFNO1FBQzVELElBQUksQ0FBQ1QsTUFBTSxHQUFHTSxNQUFNLENBQUNJLFlBQVksQ0FBQ1YsTUFBTSxDQUFDVyxPQUFPLENBQUUsRUFBRSxFQUFFLEVBQUcsQ0FBQztNQUM1RDtJQUNGLENBQUMsRUFBRWYsT0FBUSxDQUFDO0lBRVosS0FBSyxDQUFFLElBQUlYLElBQUksQ0FBRTtNQUNmMkIsT0FBTyxFQUFFLENBQUM7TUFDVkMsS0FBSyxFQUFFLFFBQVE7TUFDZkMsUUFBUSxFQUFFO01BRVI7TUFDQSxJQUFJakMsUUFBUSxDQUFFLEdBQUksQ0FBQyxDQUFDa0MsS0FBSyxDQUFDLENBQUM7TUFFM0I7TUFDQSxJQUFJL0IsSUFBSSxDQUFFTSxxQkFBcUIsQ0FBQzBCLDBCQUEwQixFQUFFO1FBQzFEQyxJQUFJLEVBQUUsSUFBSW5DLFFBQVEsQ0FBRTtVQUNsQm9DLElBQUksRUFBRSxFQUFFO1VBQ1JDLE1BQU0sRUFBRTtRQUNWLENBQUUsQ0FBQztRQUNIQyxRQUFRLEVBQUU3QixZQUFZLENBQUM4QixjQUFjLEdBQUc7TUFDMUMsQ0FBRSxDQUFDO01BRUg7TUFDQSxJQUFJbkMsY0FBYyxDQUFFSSxxQkFBcUIsQ0FBQ2dDLGNBQWMsRUFBRTtRQUN4REwsSUFBSSxFQUFFLElBQUluQyxRQUFRLENBQUU7VUFDbEJvQyxJQUFJLEVBQUUsRUFBRTtVQUNSQyxNQUFNLEVBQUU7UUFDVixDQUFFLENBQUM7UUFDSEMsUUFBUSxFQUFFN0IsWUFBWSxDQUFDOEIsY0FBYyxHQUFHLEdBQUc7UUFDM0NFLGtCQUFrQixFQUFFLEVBQUU7UUFDdEJDLGtCQUFrQixFQUFFLEVBQUU7UUFDdEJDLFNBQVMsRUFBRTFDLEtBQUssQ0FBQzJDLE1BQU07UUFDdkJDLFdBQVcsRUFBRXZDLGVBQWU7UUFDNUJ3QyxRQUFRLEVBQUVBLENBQUEsS0FBTTtVQUNkbEMscUJBQXFCLENBQUNtQyxLQUFLLEdBQUcsSUFBSTtVQUNsQ2xDLGtCQUFrQixDQUFDLENBQUM7VUFDcEIsSUFBSSxDQUFDbUMsSUFBSSxDQUFDLENBQUM7UUFDYjtNQUNGLENBQUUsQ0FBQztJQUVQLENBQUUsQ0FBQyxFQUFFbEMsT0FBUSxDQUFDO0VBQ2hCO0FBQ0Y7QUFFQVAsY0FBYyxDQUFDMEMsUUFBUSxDQUFFLGlCQUFpQixFQUFFdkMsZUFBZ0IsQ0FBQztBQUM3RCxlQUFlQSxlQUFlIn0=