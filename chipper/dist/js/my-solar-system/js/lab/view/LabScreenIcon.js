// Copyright 2022-2023, University of Colorado Boulder

/**
 *
 * Definition of the Lab Screen Icon: A sun with two elliptical orbits around it
 *
 * @author Agust√≠n Vallejo (PhET Interactive Simulations)
 */

import mySolarSystem from '../../mySolarSystem.js';
import ScreenIcon from '../../../../joist/js/ScreenIcon.js';
import { Node, Path } from '../../../../scenery/js/imports.js';
import { Shape } from '../../../../kite/js/imports.js';
import ShadedSphereNode from '../../../../scenery-phet/js/ShadedSphereNode.js';
import SolarSystemCommonColors from '../../../../solar-system-common/js/SolarSystemCommonColors.js';
export default class LabScreenIcon extends ScreenIcon {
  constructor() {
    // Ellipses parameters
    // Big ellipse
    const bigEllipseSemiMajorAxis = 20;
    const bigEllipseSemiMinorAxis = 15;

    // calculate focal point
    const bigEllipseFocalPoint = Math.sqrt(bigEllipseSemiMajorAxis * bigEllipseSemiMajorAxis - bigEllipseSemiMinorAxis * bigEllipseSemiMinorAxis);

    // Small ellipse
    const smallEllipseSemiMajorAxis = 15;
    const smallEllipseSemiMinorAxis = 10;

    // Calculate center if periapsis is the same as the one of the big ellipse
    const smallEllipseCenterX = smallEllipseSemiMajorAxis - bigEllipseSemiMajorAxis;
    super(new Node({
      children: [new Path(new Shape().ellipse(0, 0, smallEllipseSemiMajorAxis, smallEllipseSemiMinorAxis, 0), {
        stroke: SolarSystemCommonColors.secondBodyColorProperty,
        lineWidth: 0.8,
        x: smallEllipseCenterX
      }), new Path(new Shape().ellipse(0, 0, bigEllipseSemiMajorAxis, bigEllipseSemiMinorAxis, 0), {
        stroke: SolarSystemCommonColors.thirdBodyColorProperty,
        lineWidth: 1
      }), new ShadedSphereNode(8, {
        mainColor: SolarSystemCommonColors.firstBodyColorProperty,
        x: -bigEllipseFocalPoint
      }), new ShadedSphereNode(3, {
        mainColor: SolarSystemCommonColors.secondBodyColorProperty,
        x: smallEllipseSemiMajorAxis + smallEllipseCenterX
      }), new ShadedSphereNode(3, {
        mainColor: SolarSystemCommonColors.thirdBodyColorProperty,
        x: bigEllipseSemiMajorAxis
      })]
    }), {
      fill: SolarSystemCommonColors.backgroundProperty
    });
  }
}
mySolarSystem.register('LabScreenIcon', LabScreenIcon);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJteVNvbGFyU3lzdGVtIiwiU2NyZWVuSWNvbiIsIk5vZGUiLCJQYXRoIiwiU2hhcGUiLCJTaGFkZWRTcGhlcmVOb2RlIiwiU29sYXJTeXN0ZW1Db21tb25Db2xvcnMiLCJMYWJTY3JlZW5JY29uIiwiY29uc3RydWN0b3IiLCJiaWdFbGxpcHNlU2VtaU1ham9yQXhpcyIsImJpZ0VsbGlwc2VTZW1pTWlub3JBeGlzIiwiYmlnRWxsaXBzZUZvY2FsUG9pbnQiLCJNYXRoIiwic3FydCIsInNtYWxsRWxsaXBzZVNlbWlNYWpvckF4aXMiLCJzbWFsbEVsbGlwc2VTZW1pTWlub3JBeGlzIiwic21hbGxFbGxpcHNlQ2VudGVyWCIsImNoaWxkcmVuIiwiZWxsaXBzZSIsInN0cm9rZSIsInNlY29uZEJvZHlDb2xvclByb3BlcnR5IiwibGluZVdpZHRoIiwieCIsInRoaXJkQm9keUNvbG9yUHJvcGVydHkiLCJtYWluQ29sb3IiLCJmaXJzdEJvZHlDb2xvclByb3BlcnR5IiwiZmlsbCIsImJhY2tncm91bmRQcm9wZXJ0eSIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiTGFiU2NyZWVuSWNvbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMi0yMDIzLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKlxyXG4gKiBEZWZpbml0aW9uIG9mIHRoZSBMYWIgU2NyZWVuIEljb246IEEgc3VuIHdpdGggdHdvIGVsbGlwdGljYWwgb3JiaXRzIGFyb3VuZCBpdFxyXG4gKlxyXG4gKiBAYXV0aG9yIEFndXN0w61uIFZhbGxlam8gKFBoRVQgSW50ZXJhY3RpdmUgU2ltdWxhdGlvbnMpXHJcbiAqL1xyXG5cclxuaW1wb3J0IG15U29sYXJTeXN0ZW0gZnJvbSAnLi4vLi4vbXlTb2xhclN5c3RlbS5qcyc7XHJcbmltcG9ydCBTY3JlZW5JY29uIGZyb20gJy4uLy4uLy4uLy4uL2pvaXN0L2pzL1NjcmVlbkljb24uanMnO1xyXG5pbXBvcnQgeyBOb2RlLCBQYXRoIH0gZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IHsgU2hhcGUgfSBmcm9tICcuLi8uLi8uLi8uLi9raXRlL2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgU2hhZGVkU3BoZXJlTm9kZSBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5LXBoZXQvanMvU2hhZGVkU3BoZXJlTm9kZS5qcyc7XHJcbmltcG9ydCBTb2xhclN5c3RlbUNvbW1vbkNvbG9ycyBmcm9tICcuLi8uLi8uLi8uLi9zb2xhci1zeXN0ZW0tY29tbW9uL2pzL1NvbGFyU3lzdGVtQ29tbW9uQ29sb3JzLmpzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIExhYlNjcmVlbkljb24gZXh0ZW5kcyBTY3JlZW5JY29uIHtcclxuICBwdWJsaWMgY29uc3RydWN0b3IoKSB7XHJcblxyXG4gICAgLy8gRWxsaXBzZXMgcGFyYW1ldGVyc1xyXG4gICAgLy8gQmlnIGVsbGlwc2VcclxuICAgIGNvbnN0IGJpZ0VsbGlwc2VTZW1pTWFqb3JBeGlzID0gMjA7XHJcbiAgICBjb25zdCBiaWdFbGxpcHNlU2VtaU1pbm9yQXhpcyA9IDE1O1xyXG5cclxuICAgIC8vIGNhbGN1bGF0ZSBmb2NhbCBwb2ludFxyXG4gICAgY29uc3QgYmlnRWxsaXBzZUZvY2FsUG9pbnQgPSBNYXRoLnNxcnQoIGJpZ0VsbGlwc2VTZW1pTWFqb3JBeGlzICogYmlnRWxsaXBzZVNlbWlNYWpvckF4aXMgLSBiaWdFbGxpcHNlU2VtaU1pbm9yQXhpcyAqIGJpZ0VsbGlwc2VTZW1pTWlub3JBeGlzICk7XHJcblxyXG4gICAgLy8gU21hbGwgZWxsaXBzZVxyXG4gICAgY29uc3Qgc21hbGxFbGxpcHNlU2VtaU1ham9yQXhpcyA9IDE1O1xyXG4gICAgY29uc3Qgc21hbGxFbGxpcHNlU2VtaU1pbm9yQXhpcyA9IDEwO1xyXG5cclxuICAgIC8vIENhbGN1bGF0ZSBjZW50ZXIgaWYgcGVyaWFwc2lzIGlzIHRoZSBzYW1lIGFzIHRoZSBvbmUgb2YgdGhlIGJpZyBlbGxpcHNlXHJcbiAgICBjb25zdCBzbWFsbEVsbGlwc2VDZW50ZXJYID0gc21hbGxFbGxpcHNlU2VtaU1ham9yQXhpcyAtIGJpZ0VsbGlwc2VTZW1pTWFqb3JBeGlzO1xyXG5cclxuICAgIHN1cGVyKFxyXG4gICAgICAgIG5ldyBOb2RlKCB7XHJcbiAgICAgICAgICBjaGlsZHJlbjogW1xyXG4gICAgICAgICAgICBuZXcgUGF0aChcclxuICAgICAgICAgICAgICBuZXcgU2hhcGUoKS5lbGxpcHNlKCAwLCAwLCBzbWFsbEVsbGlwc2VTZW1pTWFqb3JBeGlzLCBzbWFsbEVsbGlwc2VTZW1pTWlub3JBeGlzLCAwICksXHJcbiAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgc3Ryb2tlOiBTb2xhclN5c3RlbUNvbW1vbkNvbG9ycy5zZWNvbmRCb2R5Q29sb3JQcm9wZXJ0eSxcclxuICAgICAgICAgICAgICAgIGxpbmVXaWR0aDogMC44LFxyXG4gICAgICAgICAgICAgICAgeDogc21hbGxFbGxpcHNlQ2VudGVyWFxyXG4gICAgICAgICAgICAgIH0gKSxcclxuICAgICAgICAgICAgbmV3IFBhdGgoXHJcbiAgICAgICAgICAgICAgbmV3IFNoYXBlKCkuZWxsaXBzZSggMCwgMCwgYmlnRWxsaXBzZVNlbWlNYWpvckF4aXMsIGJpZ0VsbGlwc2VTZW1pTWlub3JBeGlzLCAwICksXHJcbiAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgc3Ryb2tlOiBTb2xhclN5c3RlbUNvbW1vbkNvbG9ycy50aGlyZEJvZHlDb2xvclByb3BlcnR5LFxyXG4gICAgICAgICAgICAgICAgbGluZVdpZHRoOiAxXHJcbiAgICAgICAgICAgICAgfSApLFxyXG4gICAgICAgICAgICBuZXcgU2hhZGVkU3BoZXJlTm9kZSggOCwge1xyXG4gICAgICAgICAgICAgIG1haW5Db2xvcjogU29sYXJTeXN0ZW1Db21tb25Db2xvcnMuZmlyc3RCb2R5Q29sb3JQcm9wZXJ0eSxcclxuICAgICAgICAgICAgICB4OiAtYmlnRWxsaXBzZUZvY2FsUG9pbnRcclxuICAgICAgICAgICAgfSApLFxyXG4gICAgICAgICAgICBuZXcgU2hhZGVkU3BoZXJlTm9kZSggMywge1xyXG4gICAgICAgICAgICAgIG1haW5Db2xvcjogU29sYXJTeXN0ZW1Db21tb25Db2xvcnMuc2Vjb25kQm9keUNvbG9yUHJvcGVydHksXHJcbiAgICAgICAgICAgICAgeDogc21hbGxFbGxpcHNlU2VtaU1ham9yQXhpcyArIHNtYWxsRWxsaXBzZUNlbnRlclhcclxuICAgICAgICAgICAgfSApLFxyXG4gICAgICAgICAgICBuZXcgU2hhZGVkU3BoZXJlTm9kZSggMywge1xyXG4gICAgICAgICAgICAgIG1haW5Db2xvcjogU29sYXJTeXN0ZW1Db21tb25Db2xvcnMudGhpcmRCb2R5Q29sb3JQcm9wZXJ0eSxcclxuICAgICAgICAgICAgICB4OiBiaWdFbGxpcHNlU2VtaU1ham9yQXhpc1xyXG4gICAgICAgICAgICB9IClcclxuICAgICAgICAgIF1cclxuICAgICAgICB9ICksXHJcbiAgICAgICAgeyBmaWxsOiBTb2xhclN5c3RlbUNvbW1vbkNvbG9ycy5iYWNrZ3JvdW5kUHJvcGVydHkgfVxyXG4gICAgICApO1xyXG4gIH1cclxufVxyXG5cclxubXlTb2xhclN5c3RlbS5yZWdpc3RlciggJ0xhYlNjcmVlbkljb24nLCBMYWJTY3JlZW5JY29uICk7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsYUFBYSxNQUFNLHdCQUF3QjtBQUNsRCxPQUFPQyxVQUFVLE1BQU0sb0NBQW9DO0FBQzNELFNBQVNDLElBQUksRUFBRUMsSUFBSSxRQUFRLG1DQUFtQztBQUM5RCxTQUFTQyxLQUFLLFFBQVEsZ0NBQWdDO0FBQ3RELE9BQU9DLGdCQUFnQixNQUFNLGlEQUFpRDtBQUM5RSxPQUFPQyx1QkFBdUIsTUFBTSwrREFBK0Q7QUFFbkcsZUFBZSxNQUFNQyxhQUFhLFNBQVNOLFVBQVUsQ0FBQztFQUM3Q08sV0FBV0EsQ0FBQSxFQUFHO0lBRW5CO0lBQ0E7SUFDQSxNQUFNQyx1QkFBdUIsR0FBRyxFQUFFO0lBQ2xDLE1BQU1DLHVCQUF1QixHQUFHLEVBQUU7O0lBRWxDO0lBQ0EsTUFBTUMsb0JBQW9CLEdBQUdDLElBQUksQ0FBQ0MsSUFBSSxDQUFFSix1QkFBdUIsR0FBR0EsdUJBQXVCLEdBQUdDLHVCQUF1QixHQUFHQSx1QkFBd0IsQ0FBQzs7SUFFL0k7SUFDQSxNQUFNSSx5QkFBeUIsR0FBRyxFQUFFO0lBQ3BDLE1BQU1DLHlCQUF5QixHQUFHLEVBQUU7O0lBRXBDO0lBQ0EsTUFBTUMsbUJBQW1CLEdBQUdGLHlCQUF5QixHQUFHTCx1QkFBdUI7SUFFL0UsS0FBSyxDQUNELElBQUlQLElBQUksQ0FBRTtNQUNSZSxRQUFRLEVBQUUsQ0FDUixJQUFJZCxJQUFJLENBQ04sSUFBSUMsS0FBSyxDQUFDLENBQUMsQ0FBQ2MsT0FBTyxDQUFFLENBQUMsRUFBRSxDQUFDLEVBQUVKLHlCQUF5QixFQUFFQyx5QkFBeUIsRUFBRSxDQUFFLENBQUMsRUFDcEY7UUFDRUksTUFBTSxFQUFFYix1QkFBdUIsQ0FBQ2MsdUJBQXVCO1FBQ3ZEQyxTQUFTLEVBQUUsR0FBRztRQUNkQyxDQUFDLEVBQUVOO01BQ0wsQ0FBRSxDQUFDLEVBQ0wsSUFBSWIsSUFBSSxDQUNOLElBQUlDLEtBQUssQ0FBQyxDQUFDLENBQUNjLE9BQU8sQ0FBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFVCx1QkFBdUIsRUFBRUMsdUJBQXVCLEVBQUUsQ0FBRSxDQUFDLEVBQ2hGO1FBQ0VTLE1BQU0sRUFBRWIsdUJBQXVCLENBQUNpQixzQkFBc0I7UUFDdERGLFNBQVMsRUFBRTtNQUNiLENBQUUsQ0FBQyxFQUNMLElBQUloQixnQkFBZ0IsQ0FBRSxDQUFDLEVBQUU7UUFDdkJtQixTQUFTLEVBQUVsQix1QkFBdUIsQ0FBQ21CLHNCQUFzQjtRQUN6REgsQ0FBQyxFQUFFLENBQUNYO01BQ04sQ0FBRSxDQUFDLEVBQ0gsSUFBSU4sZ0JBQWdCLENBQUUsQ0FBQyxFQUFFO1FBQ3ZCbUIsU0FBUyxFQUFFbEIsdUJBQXVCLENBQUNjLHVCQUF1QjtRQUMxREUsQ0FBQyxFQUFFUix5QkFBeUIsR0FBR0U7TUFDakMsQ0FBRSxDQUFDLEVBQ0gsSUFBSVgsZ0JBQWdCLENBQUUsQ0FBQyxFQUFFO1FBQ3ZCbUIsU0FBUyxFQUFFbEIsdUJBQXVCLENBQUNpQixzQkFBc0I7UUFDekRELENBQUMsRUFBRWI7TUFDTCxDQUFFLENBQUM7SUFFUCxDQUFFLENBQUMsRUFDSDtNQUFFaUIsSUFBSSxFQUFFcEIsdUJBQXVCLENBQUNxQjtJQUFtQixDQUNyRCxDQUFDO0VBQ0w7QUFDRjtBQUVBM0IsYUFBYSxDQUFDNEIsUUFBUSxDQUFFLGVBQWUsRUFBRXJCLGFBQWMsQ0FBQyJ9