// Copyright 2020-2023, University of Colorado Boulder

/**
 * Screen view for the Intro Screen
 *
 * @author Agust√≠n Vallejo (PhET Interactive Simulations)
 */

import mySolarSystem from '../../mySolarSystem.js';
import MySolarSystemScreenView from '../../common/view/MySolarSystemScreenView.js';
import optionize from '../../../../phet-core/js/optionize.js';
import { Node } from '../../../../scenery/js/imports.js';
import MySolarSystemStrings from '../../MySolarSystemStrings.js';
export default class IntroScreenView extends MySolarSystemScreenView {
  constructor(model, providedOptions) {
    const options = optionize()({
      // pdom
      screenSummaryContent: new IntroScreenViewSummaryContentNode()
    }, providedOptions);
    super(model, options);
  }
}
class IntroScreenViewSummaryContentNode extends Node {
  constructor() {
    const playAreaDescriptionNode = new Node({
      tagName: 'p',
      innerContent: MySolarSystemStrings.a11y.introScreen.screenSummary.playAreaDescriptionStringProperty
    });
    const controlAreaDescriptionNode = new Node({
      tagName: 'p',
      innerContent: MySolarSystemStrings.a11y.introScreen.screenSummary.controlAreaDescriptionStringProperty
    });
    super({
      children: [playAreaDescriptionNode, controlAreaDescriptionNode]
    });
  }
}
mySolarSystem.register('IntroScreenView', IntroScreenView);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJteVNvbGFyU3lzdGVtIiwiTXlTb2xhclN5c3RlbVNjcmVlblZpZXciLCJvcHRpb25pemUiLCJOb2RlIiwiTXlTb2xhclN5c3RlbVN0cmluZ3MiLCJJbnRyb1NjcmVlblZpZXciLCJjb25zdHJ1Y3RvciIsIm1vZGVsIiwicHJvdmlkZWRPcHRpb25zIiwib3B0aW9ucyIsInNjcmVlblN1bW1hcnlDb250ZW50IiwiSW50cm9TY3JlZW5WaWV3U3VtbWFyeUNvbnRlbnROb2RlIiwicGxheUFyZWFEZXNjcmlwdGlvbk5vZGUiLCJ0YWdOYW1lIiwiaW5uZXJDb250ZW50IiwiYTExeSIsImludHJvU2NyZWVuIiwic2NyZWVuU3VtbWFyeSIsInBsYXlBcmVhRGVzY3JpcHRpb25TdHJpbmdQcm9wZXJ0eSIsImNvbnRyb2xBcmVhRGVzY3JpcHRpb25Ob2RlIiwiY29udHJvbEFyZWFEZXNjcmlwdGlvblN0cmluZ1Byb3BlcnR5IiwiY2hpbGRyZW4iLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIkludHJvU2NyZWVuVmlldy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMC0yMDIzLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBTY3JlZW4gdmlldyBmb3IgdGhlIEludHJvIFNjcmVlblxyXG4gKlxyXG4gKiBAYXV0aG9yIEFndXN0w61uIFZhbGxlam8gKFBoRVQgSW50ZXJhY3RpdmUgU2ltdWxhdGlvbnMpXHJcbiAqL1xyXG5cclxuaW1wb3J0IG15U29sYXJTeXN0ZW0gZnJvbSAnLi4vLi4vbXlTb2xhclN5c3RlbS5qcyc7XHJcbmltcG9ydCBJbnRyb01vZGVsIGZyb20gJy4uL21vZGVsL0ludHJvTW9kZWwuanMnO1xyXG5pbXBvcnQgTXlTb2xhclN5c3RlbVNjcmVlblZpZXcsIHsgSW50cm9MYWJTY3JlZW5WaWV3T3B0aW9ucyB9IGZyb20gJy4uLy4uL2NvbW1vbi92aWV3L015U29sYXJTeXN0ZW1TY3JlZW5WaWV3LmpzJztcclxuaW1wb3J0IG9wdGlvbml6ZSwgeyBFbXB0eVNlbGZPcHRpb25zIH0gZnJvbSAnLi4vLi4vLi4vLi4vcGhldC1jb3JlL2pzL29wdGlvbml6ZS5qcyc7XHJcbmltcG9ydCB7IE5vZGUgfSBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgTXlTb2xhclN5c3RlbVN0cmluZ3MgZnJvbSAnLi4vLi4vTXlTb2xhclN5c3RlbVN0cmluZ3MuanMnO1xyXG5cclxudHlwZSBTZWxmT3B0aW9ucyA9IEVtcHR5U2VsZk9wdGlvbnM7XHJcbmV4cG9ydCB0eXBlIEludHJvU2NyZWVuVmlld09wdGlvbnMgPSBJbnRyb0xhYlNjcmVlblZpZXdPcHRpb25zO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSW50cm9TY3JlZW5WaWV3IGV4dGVuZHMgTXlTb2xhclN5c3RlbVNjcmVlblZpZXcge1xyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvciggbW9kZWw6IEludHJvTW9kZWwsIHByb3ZpZGVkT3B0aW9uczogSW50cm9TY3JlZW5WaWV3T3B0aW9ucyApIHtcclxuICAgIGNvbnN0IG9wdGlvbnMgPSBvcHRpb25pemU8SW50cm9TY3JlZW5WaWV3T3B0aW9ucywgU2VsZk9wdGlvbnMsIEludHJvTGFiU2NyZWVuVmlld09wdGlvbnM+KCkoIHtcclxuXHJcbiAgICAgIC8vIHBkb21cclxuICAgICAgc2NyZWVuU3VtbWFyeUNvbnRlbnQ6IG5ldyBJbnRyb1NjcmVlblZpZXdTdW1tYXJ5Q29udGVudE5vZGUoKVxyXG4gICAgfSwgcHJvdmlkZWRPcHRpb25zICk7XHJcbiAgICBzdXBlciggbW9kZWwsIG9wdGlvbnMgKTtcclxuICB9XHJcbn1cclxuXHJcbmNsYXNzIEludHJvU2NyZWVuVmlld1N1bW1hcnlDb250ZW50Tm9kZSBleHRlbmRzIE5vZGUge1xyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvcigpIHtcclxuXHJcbiAgICBjb25zdCBwbGF5QXJlYURlc2NyaXB0aW9uTm9kZSA9IG5ldyBOb2RlKCB7XHJcbiAgICAgIHRhZ05hbWU6ICdwJyxcclxuICAgICAgaW5uZXJDb250ZW50OiBNeVNvbGFyU3lzdGVtU3RyaW5ncy5hMTF5LmludHJvU2NyZWVuLnNjcmVlblN1bW1hcnkucGxheUFyZWFEZXNjcmlwdGlvblN0cmluZ1Byb3BlcnR5XHJcbiAgICB9ICk7XHJcbiAgICBjb25zdCBjb250cm9sQXJlYURlc2NyaXB0aW9uTm9kZSA9IG5ldyBOb2RlKCB7XHJcbiAgICAgIHRhZ05hbWU6ICdwJyxcclxuICAgICAgaW5uZXJDb250ZW50OiBNeVNvbGFyU3lzdGVtU3RyaW5ncy5hMTF5LmludHJvU2NyZWVuLnNjcmVlblN1bW1hcnkuY29udHJvbEFyZWFEZXNjcmlwdGlvblN0cmluZ1Byb3BlcnR5XHJcbiAgICB9ICk7XHJcblxyXG4gICAgc3VwZXIoIHtcclxuICAgICAgY2hpbGRyZW46IFsgcGxheUFyZWFEZXNjcmlwdGlvbk5vZGUsIGNvbnRyb2xBcmVhRGVzY3JpcHRpb25Ob2RlIF1cclxuICAgIH0gKTtcclxuICB9XHJcbn1cclxuXHJcbm15U29sYXJTeXN0ZW0ucmVnaXN0ZXIoICdJbnRyb1NjcmVlblZpZXcnLCBJbnRyb1NjcmVlblZpZXcgKTsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsYUFBYSxNQUFNLHdCQUF3QjtBQUVsRCxPQUFPQyx1QkFBdUIsTUFBcUMsOENBQThDO0FBQ2pILE9BQU9DLFNBQVMsTUFBNEIsdUNBQXVDO0FBQ25GLFNBQVNDLElBQUksUUFBUSxtQ0FBbUM7QUFDeEQsT0FBT0Msb0JBQW9CLE1BQU0sK0JBQStCO0FBS2hFLGVBQWUsTUFBTUMsZUFBZSxTQUFTSix1QkFBdUIsQ0FBQztFQUM1REssV0FBV0EsQ0FBRUMsS0FBaUIsRUFBRUMsZUFBdUMsRUFBRztJQUMvRSxNQUFNQyxPQUFPLEdBQUdQLFNBQVMsQ0FBaUUsQ0FBQyxDQUFFO01BRTNGO01BQ0FRLG9CQUFvQixFQUFFLElBQUlDLGlDQUFpQyxDQUFDO0lBQzlELENBQUMsRUFBRUgsZUFBZ0IsQ0FBQztJQUNwQixLQUFLLENBQUVELEtBQUssRUFBRUUsT0FBUSxDQUFDO0VBQ3pCO0FBQ0Y7QUFFQSxNQUFNRSxpQ0FBaUMsU0FBU1IsSUFBSSxDQUFDO0VBQzVDRyxXQUFXQSxDQUFBLEVBQUc7SUFFbkIsTUFBTU0sdUJBQXVCLEdBQUcsSUFBSVQsSUFBSSxDQUFFO01BQ3hDVSxPQUFPLEVBQUUsR0FBRztNQUNaQyxZQUFZLEVBQUVWLG9CQUFvQixDQUFDVyxJQUFJLENBQUNDLFdBQVcsQ0FBQ0MsYUFBYSxDQUFDQztJQUNwRSxDQUFFLENBQUM7SUFDSCxNQUFNQywwQkFBMEIsR0FBRyxJQUFJaEIsSUFBSSxDQUFFO01BQzNDVSxPQUFPLEVBQUUsR0FBRztNQUNaQyxZQUFZLEVBQUVWLG9CQUFvQixDQUFDVyxJQUFJLENBQUNDLFdBQVcsQ0FBQ0MsYUFBYSxDQUFDRztJQUNwRSxDQUFFLENBQUM7SUFFSCxLQUFLLENBQUU7TUFDTEMsUUFBUSxFQUFFLENBQUVULHVCQUF1QixFQUFFTywwQkFBMEI7SUFDakUsQ0FBRSxDQUFDO0VBQ0w7QUFDRjtBQUVBbkIsYUFBYSxDQUFDc0IsUUFBUSxDQUFFLGlCQUFpQixFQUFFakIsZUFBZ0IsQ0FBQyJ9