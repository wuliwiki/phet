// Copyright 2017-2021, University of Colorado Boulder

/**
 * Constants used throughout this simulation.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import Range from '../../../dot/js/Range.js';
import PhetFont from '../../../scenery-phet/js/PhetFont.js';
import unitRates from '../unitRates.js';
const URConstants = {
  // screen
  SCREEN_X_MARGIN: 15,
  SCREEN_Y_MARGIN: 10,
  // image scaling
  BAG_IMAGE_SCALE: 0.5,
  SHOPPING_ITEM_IMAGE_SCALE: 0.5,
  EDIT_ICON_SCALE: 0.032,
  // double number lines
  SHOPPING_AXIS_LENGTH: 816,
  // determined empirically, to take up the full width of the screen
  RACING_LAB_AXIS_LENGTH: 582,
  // determined empirically

  // AccordionBoxes
  ACCORDION_BOX_OPTIONS: {
    titleBarExpandCollapse: false,
    titleAlignX: 'left',
    titleXMargin: 10,
    titleYMargin: 4,
    showTitleWhenExpanded: true,
    fill: 'white',
    cornerRadius: 5,
    buttonXMargin: 10,
    buttonYMargin: 4,
    contentXMargin: 10,
    contentYMargin: 8,
    contentYSpacing: 4,
    expandCollapseButtonOptions: {
      sideLength: 16,
      touchAreaXDilation: 8,
      touchAreaYDilation: 10,
      touchAreaYShift: -4,
      mouseAreaXDilation: 4,
      mouseAreaYDilation: 4
    }
  },
  ACCORDION_BOX_TITLE_FONT: new PhetFont(14),
  // Rate pickers (aka spinners)
  NUMBER_PICKER_OPTIONS: {
    xMargin: 8,
    cornerRadius: 4
  },
  COST_RANGE: new Range(1, 20),
  QUANTITY_RANGE: new Range(1, 20),
  MILES_RANGE: new Range(20, 100),
  HOURS_RANGE: new Range(0.5, 10),
  MILES_DELTA: 5,
  HOURS_DELTA: 0.5,
  HOURS_DECIMALS: 1,
  // decimal places in pickers for miles

  // markers on the double number line
  MAJOR_MARKER_LENGTH: 55,
  MINOR_MARKER_LENGTH: 30,
  MARKER_Y_SPACING: 1 // space between the marker line and its values
};

unitRates.register('URConstants', URConstants);
export default URConstants;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSYW5nZSIsIlBoZXRGb250IiwidW5pdFJhdGVzIiwiVVJDb25zdGFudHMiLCJTQ1JFRU5fWF9NQVJHSU4iLCJTQ1JFRU5fWV9NQVJHSU4iLCJCQUdfSU1BR0VfU0NBTEUiLCJTSE9QUElOR19JVEVNX0lNQUdFX1NDQUxFIiwiRURJVF9JQ09OX1NDQUxFIiwiU0hPUFBJTkdfQVhJU19MRU5HVEgiLCJSQUNJTkdfTEFCX0FYSVNfTEVOR1RIIiwiQUNDT1JESU9OX0JPWF9PUFRJT05TIiwidGl0bGVCYXJFeHBhbmRDb2xsYXBzZSIsInRpdGxlQWxpZ25YIiwidGl0bGVYTWFyZ2luIiwidGl0bGVZTWFyZ2luIiwic2hvd1RpdGxlV2hlbkV4cGFuZGVkIiwiZmlsbCIsImNvcm5lclJhZGl1cyIsImJ1dHRvblhNYXJnaW4iLCJidXR0b25ZTWFyZ2luIiwiY29udGVudFhNYXJnaW4iLCJjb250ZW50WU1hcmdpbiIsImNvbnRlbnRZU3BhY2luZyIsImV4cGFuZENvbGxhcHNlQnV0dG9uT3B0aW9ucyIsInNpZGVMZW5ndGgiLCJ0b3VjaEFyZWFYRGlsYXRpb24iLCJ0b3VjaEFyZWFZRGlsYXRpb24iLCJ0b3VjaEFyZWFZU2hpZnQiLCJtb3VzZUFyZWFYRGlsYXRpb24iLCJtb3VzZUFyZWFZRGlsYXRpb24iLCJBQ0NPUkRJT05fQk9YX1RJVExFX0ZPTlQiLCJOVU1CRVJfUElDS0VSX09QVElPTlMiLCJ4TWFyZ2luIiwiQ09TVF9SQU5HRSIsIlFVQU5USVRZX1JBTkdFIiwiTUlMRVNfUkFOR0UiLCJIT1VSU19SQU5HRSIsIk1JTEVTX0RFTFRBIiwiSE9VUlNfREVMVEEiLCJIT1VSU19ERUNJTUFMUyIsIk1BSk9SX01BUktFUl9MRU5HVEgiLCJNSU5PUl9NQVJLRVJfTEVOR1RIIiwiTUFSS0VSX1lfU1BBQ0lORyIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiVVJDb25zdGFudHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTctMjAyMSwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogQ29uc3RhbnRzIHVzZWQgdGhyb3VnaG91dCB0aGlzIHNpbXVsYXRpb24uXHJcbiAqXHJcbiAqIEBhdXRob3IgQ2hyaXMgTWFsbGV5IChQaXhlbFpvb20sIEluYy4pXHJcbiAqL1xyXG5cclxuaW1wb3J0IFJhbmdlIGZyb20gJy4uLy4uLy4uL2RvdC9qcy9SYW5nZS5qcyc7XHJcbmltcG9ydCBQaGV0Rm9udCBmcm9tICcuLi8uLi8uLi9zY2VuZXJ5LXBoZXQvanMvUGhldEZvbnQuanMnO1xyXG5pbXBvcnQgdW5pdFJhdGVzIGZyb20gJy4uL3VuaXRSYXRlcy5qcyc7XHJcblxyXG5jb25zdCBVUkNvbnN0YW50cyA9IHtcclxuXHJcbiAgLy8gc2NyZWVuXHJcbiAgU0NSRUVOX1hfTUFSR0lOOiAxNSxcclxuICBTQ1JFRU5fWV9NQVJHSU46IDEwLFxyXG5cclxuICAvLyBpbWFnZSBzY2FsaW5nXHJcbiAgQkFHX0lNQUdFX1NDQUxFOiAwLjUsXHJcbiAgU0hPUFBJTkdfSVRFTV9JTUFHRV9TQ0FMRTogMC41LFxyXG4gIEVESVRfSUNPTl9TQ0FMRTogMC4wMzIsXHJcblxyXG4gIC8vIGRvdWJsZSBudW1iZXIgbGluZXNcclxuICBTSE9QUElOR19BWElTX0xFTkdUSDogODE2LCAvLyBkZXRlcm1pbmVkIGVtcGlyaWNhbGx5LCB0byB0YWtlIHVwIHRoZSBmdWxsIHdpZHRoIG9mIHRoZSBzY3JlZW5cclxuICBSQUNJTkdfTEFCX0FYSVNfTEVOR1RIOiA1ODIsIC8vIGRldGVybWluZWQgZW1waXJpY2FsbHlcclxuXHJcbiAgLy8gQWNjb3JkaW9uQm94ZXNcclxuICBBQ0NPUkRJT05fQk9YX09QVElPTlM6IHtcclxuICAgIHRpdGxlQmFyRXhwYW5kQ29sbGFwc2U6IGZhbHNlLFxyXG4gICAgdGl0bGVBbGlnblg6ICdsZWZ0JyxcclxuICAgIHRpdGxlWE1hcmdpbjogMTAsXHJcbiAgICB0aXRsZVlNYXJnaW46IDQsXHJcbiAgICBzaG93VGl0bGVXaGVuRXhwYW5kZWQ6IHRydWUsXHJcbiAgICBmaWxsOiAnd2hpdGUnLFxyXG4gICAgY29ybmVyUmFkaXVzOiA1LFxyXG4gICAgYnV0dG9uWE1hcmdpbjogMTAsXHJcbiAgICBidXR0b25ZTWFyZ2luOiA0LFxyXG4gICAgY29udGVudFhNYXJnaW46IDEwLFxyXG4gICAgY29udGVudFlNYXJnaW46IDgsXHJcbiAgICBjb250ZW50WVNwYWNpbmc6IDQsXHJcbiAgICBleHBhbmRDb2xsYXBzZUJ1dHRvbk9wdGlvbnM6IHtcclxuICAgICAgc2lkZUxlbmd0aDogMTYsXHJcbiAgICAgIHRvdWNoQXJlYVhEaWxhdGlvbjogOCxcclxuICAgICAgdG91Y2hBcmVhWURpbGF0aW9uOiAxMCxcclxuICAgICAgdG91Y2hBcmVhWVNoaWZ0OiAtNCxcclxuICAgICAgbW91c2VBcmVhWERpbGF0aW9uOiA0LFxyXG4gICAgICBtb3VzZUFyZWFZRGlsYXRpb246IDRcclxuICAgIH1cclxuICB9LFxyXG4gIEFDQ09SRElPTl9CT1hfVElUTEVfRk9OVDogbmV3IFBoZXRGb250KCAxNCApLFxyXG5cclxuICAvLyBSYXRlIHBpY2tlcnMgKGFrYSBzcGlubmVycylcclxuICBOVU1CRVJfUElDS0VSX09QVElPTlM6IHtcclxuICAgIHhNYXJnaW46IDgsXHJcbiAgICBjb3JuZXJSYWRpdXM6IDRcclxuICB9LFxyXG4gIENPU1RfUkFOR0U6IG5ldyBSYW5nZSggMSwgMjAgKSxcclxuICBRVUFOVElUWV9SQU5HRTogbmV3IFJhbmdlKCAxLCAyMCApLFxyXG4gIE1JTEVTX1JBTkdFOiBuZXcgUmFuZ2UoIDIwLCAxMDAgKSxcclxuICBIT1VSU19SQU5HRTogbmV3IFJhbmdlKCAwLjUsIDEwICksXHJcbiAgTUlMRVNfREVMVEE6IDUsXHJcbiAgSE9VUlNfREVMVEE6IDAuNSxcclxuICBIT1VSU19ERUNJTUFMUzogMSwgLy8gZGVjaW1hbCBwbGFjZXMgaW4gcGlja2VycyBmb3IgbWlsZXNcclxuXHJcbiAgLy8gbWFya2VycyBvbiB0aGUgZG91YmxlIG51bWJlciBsaW5lXHJcbiAgTUFKT1JfTUFSS0VSX0xFTkdUSDogNTUsXHJcbiAgTUlOT1JfTUFSS0VSX0xFTkdUSDogMzAsXHJcbiAgTUFSS0VSX1lfU1BBQ0lORzogMSAgLy8gc3BhY2UgYmV0d2VlbiB0aGUgbWFya2VyIGxpbmUgYW5kIGl0cyB2YWx1ZXNcclxufTtcclxuXHJcbnVuaXRSYXRlcy5yZWdpc3RlciggJ1VSQ29uc3RhbnRzJywgVVJDb25zdGFudHMgKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFVSQ29uc3RhbnRzOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxLQUFLLE1BQU0sMEJBQTBCO0FBQzVDLE9BQU9DLFFBQVEsTUFBTSxzQ0FBc0M7QUFDM0QsT0FBT0MsU0FBUyxNQUFNLGlCQUFpQjtBQUV2QyxNQUFNQyxXQUFXLEdBQUc7RUFFbEI7RUFDQUMsZUFBZSxFQUFFLEVBQUU7RUFDbkJDLGVBQWUsRUFBRSxFQUFFO0VBRW5CO0VBQ0FDLGVBQWUsRUFBRSxHQUFHO0VBQ3BCQyx5QkFBeUIsRUFBRSxHQUFHO0VBQzlCQyxlQUFlLEVBQUUsS0FBSztFQUV0QjtFQUNBQyxvQkFBb0IsRUFBRSxHQUFHO0VBQUU7RUFDM0JDLHNCQUFzQixFQUFFLEdBQUc7RUFBRTs7RUFFN0I7RUFDQUMscUJBQXFCLEVBQUU7SUFDckJDLHNCQUFzQixFQUFFLEtBQUs7SUFDN0JDLFdBQVcsRUFBRSxNQUFNO0lBQ25CQyxZQUFZLEVBQUUsRUFBRTtJQUNoQkMsWUFBWSxFQUFFLENBQUM7SUFDZkMscUJBQXFCLEVBQUUsSUFBSTtJQUMzQkMsSUFBSSxFQUFFLE9BQU87SUFDYkMsWUFBWSxFQUFFLENBQUM7SUFDZkMsYUFBYSxFQUFFLEVBQUU7SUFDakJDLGFBQWEsRUFBRSxDQUFDO0lBQ2hCQyxjQUFjLEVBQUUsRUFBRTtJQUNsQkMsY0FBYyxFQUFFLENBQUM7SUFDakJDLGVBQWUsRUFBRSxDQUFDO0lBQ2xCQywyQkFBMkIsRUFBRTtNQUMzQkMsVUFBVSxFQUFFLEVBQUU7TUFDZEMsa0JBQWtCLEVBQUUsQ0FBQztNQUNyQkMsa0JBQWtCLEVBQUUsRUFBRTtNQUN0QkMsZUFBZSxFQUFFLENBQUMsQ0FBQztNQUNuQkMsa0JBQWtCLEVBQUUsQ0FBQztNQUNyQkMsa0JBQWtCLEVBQUU7SUFDdEI7RUFDRixDQUFDO0VBQ0RDLHdCQUF3QixFQUFFLElBQUk5QixRQUFRLENBQUUsRUFBRyxDQUFDO0VBRTVDO0VBQ0ErQixxQkFBcUIsRUFBRTtJQUNyQkMsT0FBTyxFQUFFLENBQUM7SUFDVmYsWUFBWSxFQUFFO0VBQ2hCLENBQUM7RUFDRGdCLFVBQVUsRUFBRSxJQUFJbEMsS0FBSyxDQUFFLENBQUMsRUFBRSxFQUFHLENBQUM7RUFDOUJtQyxjQUFjLEVBQUUsSUFBSW5DLEtBQUssQ0FBRSxDQUFDLEVBQUUsRUFBRyxDQUFDO0VBQ2xDb0MsV0FBVyxFQUFFLElBQUlwQyxLQUFLLENBQUUsRUFBRSxFQUFFLEdBQUksQ0FBQztFQUNqQ3FDLFdBQVcsRUFBRSxJQUFJckMsS0FBSyxDQUFFLEdBQUcsRUFBRSxFQUFHLENBQUM7RUFDakNzQyxXQUFXLEVBQUUsQ0FBQztFQUNkQyxXQUFXLEVBQUUsR0FBRztFQUNoQkMsY0FBYyxFQUFFLENBQUM7RUFBRTs7RUFFbkI7RUFDQUMsbUJBQW1CLEVBQUUsRUFBRTtFQUN2QkMsbUJBQW1CLEVBQUUsRUFBRTtFQUN2QkMsZ0JBQWdCLEVBQUUsQ0FBQyxDQUFFO0FBQ3ZCLENBQUM7O0FBRUR6QyxTQUFTLENBQUMwQyxRQUFRLENBQUUsYUFBYSxFQUFFekMsV0FBWSxDQUFDO0FBRWhELGVBQWVBLFdBQVcifQ==