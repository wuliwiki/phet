// Copyright 2016-2023, University of Colorado Boulder

/**
 * NumberOfCarsRadioButtonGroup switches between 1 and 2 cars in the 'Racing Lab' screen.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import merge from '../../../../phet-core/js/merge.js';
import { Image, VBox } from '../../../../scenery/js/imports.js';
import RectangularRadioButtonGroup from '../../../../sun/js/buttons/RectangularRadioButtonGroup.js';
import blueCar_png from '../../../images/blueCar_png.js';
import redCar_png from '../../../images/redCar_png.js';
import unitRates from '../../unitRates.js';
export default class NumberOfCarsRadioButtonGroup extends RectangularRadioButtonGroup {
  /**
   * @param {Property.<boolean>} car2VisibleProperty - is car2 visible?
   * @param {Object} [options]
   */
  constructor(car2VisibleProperty, options) {
    options = merge({
      // NumberOfCarsRadioButtonGroup options
      buttonWidth: 68,
      // RectangularRadioButtonGroup options
      orientation: 'vertical',
      spacing: 11,
      // space between the buttons
      radioButtonOptions: {
        baseColor: 'white',
        xMargin: 12,
        yMargin: 10
      }
    }, options);
    const maxCarWidth = options.buttonWidth - 2 * options.radioButtonOptions.xMargin;
    super(car2VisibleProperty, [{
      value: false,
      createNode: () => createOneCarIcon(maxCarWidth)
    }, {
      value: true,
      createNode: () => createTwoCarsIcon(maxCarWidth)
    }], options);
  }
}

/**
 * Creates the icon for the 1-car scene, scaled to fit a specified width.
 * @param {number} maxCarWidth
 * @returns {Node}
 */
function createOneCarIcon(maxCarWidth) {
  return createCarImage(redCar_png, maxCarWidth);
}

/**
 * Creates the icon for the 2-cars scene, scaled to fit a specified width.
 * @param {number} maxCarWidth
 * @returns {Node}
 */
function createTwoCarsIcon(maxCarWidth) {
  return new VBox({
    spacing: 7,
    // space between the 2 cars
    children: [createCarImage(redCar_png, maxCarWidth), createCarImage(blueCar_png, maxCarWidth)]
  });
}

/**
 * Creates a car icon, scaled to fit a specified width.
 * @param {HTMLImageElement} imageFile
 * @param {number} maxCarWidth
 * @returns {Node}
 */
function createCarImage(imageFile, maxCarWidth) {
  const carImage = new Image(imageFile);
  carImage.setScaleMagnitude(maxCarWidth / carImage.width);
  return carImage;
}
unitRates.register('NumberOfCarsRadioButtonGroup', NumberOfCarsRadioButtonGroup);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtZXJnZSIsIkltYWdlIiwiVkJveCIsIlJlY3Rhbmd1bGFyUmFkaW9CdXR0b25Hcm91cCIsImJsdWVDYXJfcG5nIiwicmVkQ2FyX3BuZyIsInVuaXRSYXRlcyIsIk51bWJlck9mQ2Fyc1JhZGlvQnV0dG9uR3JvdXAiLCJjb25zdHJ1Y3RvciIsImNhcjJWaXNpYmxlUHJvcGVydHkiLCJvcHRpb25zIiwiYnV0dG9uV2lkdGgiLCJvcmllbnRhdGlvbiIsInNwYWNpbmciLCJyYWRpb0J1dHRvbk9wdGlvbnMiLCJiYXNlQ29sb3IiLCJ4TWFyZ2luIiwieU1hcmdpbiIsIm1heENhcldpZHRoIiwidmFsdWUiLCJjcmVhdGVOb2RlIiwiY3JlYXRlT25lQ2FySWNvbiIsImNyZWF0ZVR3b0NhcnNJY29uIiwiY3JlYXRlQ2FySW1hZ2UiLCJjaGlsZHJlbiIsImltYWdlRmlsZSIsImNhckltYWdlIiwic2V0U2NhbGVNYWduaXR1ZGUiLCJ3aWR0aCIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiTnVtYmVyT2ZDYXJzUmFkaW9CdXR0b25Hcm91cC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxNi0yMDIzLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBOdW1iZXJPZkNhcnNSYWRpb0J1dHRvbkdyb3VwIHN3aXRjaGVzIGJldHdlZW4gMSBhbmQgMiBjYXJzIGluIHRoZSAnUmFjaW5nIExhYicgc2NyZWVuLlxyXG4gKlxyXG4gKiBAYXV0aG9yIENocmlzIE1hbGxleSAoUGl4ZWxab29tLCBJbmMuKVxyXG4gKi9cclxuXHJcbmltcG9ydCBtZXJnZSBmcm9tICcuLi8uLi8uLi8uLi9waGV0LWNvcmUvanMvbWVyZ2UuanMnO1xyXG5pbXBvcnQgeyBJbWFnZSwgVkJveCB9IGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XHJcbmltcG9ydCBSZWN0YW5ndWxhclJhZGlvQnV0dG9uR3JvdXAgZnJvbSAnLi4vLi4vLi4vLi4vc3VuL2pzL2J1dHRvbnMvUmVjdGFuZ3VsYXJSYWRpb0J1dHRvbkdyb3VwLmpzJztcclxuaW1wb3J0IGJsdWVDYXJfcG5nIGZyb20gJy4uLy4uLy4uL2ltYWdlcy9ibHVlQ2FyX3BuZy5qcyc7XHJcbmltcG9ydCByZWRDYXJfcG5nIGZyb20gJy4uLy4uLy4uL2ltYWdlcy9yZWRDYXJfcG5nLmpzJztcclxuaW1wb3J0IHVuaXRSYXRlcyBmcm9tICcuLi8uLi91bml0UmF0ZXMuanMnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTnVtYmVyT2ZDYXJzUmFkaW9CdXR0b25Hcm91cCBleHRlbmRzIFJlY3Rhbmd1bGFyUmFkaW9CdXR0b25Hcm91cCB7XHJcblxyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSB7UHJvcGVydHkuPGJvb2xlYW4+fSBjYXIyVmlzaWJsZVByb3BlcnR5IC0gaXMgY2FyMiB2aXNpYmxlP1xyXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc11cclxuICAgKi9cclxuICBjb25zdHJ1Y3RvciggY2FyMlZpc2libGVQcm9wZXJ0eSwgb3B0aW9ucyApIHtcclxuXHJcbiAgICBvcHRpb25zID0gbWVyZ2UoIHtcclxuXHJcbiAgICAgIC8vIE51bWJlck9mQ2Fyc1JhZGlvQnV0dG9uR3JvdXAgb3B0aW9uc1xyXG4gICAgICBidXR0b25XaWR0aDogNjgsXHJcblxyXG4gICAgICAvLyBSZWN0YW5ndWxhclJhZGlvQnV0dG9uR3JvdXAgb3B0aW9uc1xyXG4gICAgICBvcmllbnRhdGlvbjogJ3ZlcnRpY2FsJyxcclxuICAgICAgc3BhY2luZzogMTEsIC8vIHNwYWNlIGJldHdlZW4gdGhlIGJ1dHRvbnNcclxuICAgICAgcmFkaW9CdXR0b25PcHRpb25zOiB7XHJcbiAgICAgICAgYmFzZUNvbG9yOiAnd2hpdGUnLFxyXG4gICAgICAgIHhNYXJnaW46IDEyLFxyXG4gICAgICAgIHlNYXJnaW46IDEwXHJcbiAgICAgIH1cclxuICAgIH0sIG9wdGlvbnMgKTtcclxuXHJcbiAgICBjb25zdCBtYXhDYXJXaWR0aCA9IG9wdGlvbnMuYnV0dG9uV2lkdGggLSAoIDIgKiBvcHRpb25zLnJhZGlvQnV0dG9uT3B0aW9ucy54TWFyZ2luICk7XHJcblxyXG4gICAgc3VwZXIoIGNhcjJWaXNpYmxlUHJvcGVydHksIFtcclxuICAgICAgeyB2YWx1ZTogZmFsc2UsIGNyZWF0ZU5vZGU6ICgpID0+IGNyZWF0ZU9uZUNhckljb24oIG1heENhcldpZHRoICkgfSxcclxuICAgICAgeyB2YWx1ZTogdHJ1ZSwgY3JlYXRlTm9kZTogKCkgPT4gY3JlYXRlVHdvQ2Fyc0ljb24oIG1heENhcldpZHRoICkgfVxyXG4gICAgXSwgb3B0aW9ucyApO1xyXG4gIH1cclxufVxyXG5cclxuLyoqXHJcbiAqIENyZWF0ZXMgdGhlIGljb24gZm9yIHRoZSAxLWNhciBzY2VuZSwgc2NhbGVkIHRvIGZpdCBhIHNwZWNpZmllZCB3aWR0aC5cclxuICogQHBhcmFtIHtudW1iZXJ9IG1heENhcldpZHRoXHJcbiAqIEByZXR1cm5zIHtOb2RlfVxyXG4gKi9cclxuZnVuY3Rpb24gY3JlYXRlT25lQ2FySWNvbiggbWF4Q2FyV2lkdGggKSB7XHJcbiAgcmV0dXJuIGNyZWF0ZUNhckltYWdlKCByZWRDYXJfcG5nLCBtYXhDYXJXaWR0aCApO1xyXG59XHJcblxyXG4vKipcclxuICogQ3JlYXRlcyB0aGUgaWNvbiBmb3IgdGhlIDItY2FycyBzY2VuZSwgc2NhbGVkIHRvIGZpdCBhIHNwZWNpZmllZCB3aWR0aC5cclxuICogQHBhcmFtIHtudW1iZXJ9IG1heENhcldpZHRoXHJcbiAqIEByZXR1cm5zIHtOb2RlfVxyXG4gKi9cclxuZnVuY3Rpb24gY3JlYXRlVHdvQ2Fyc0ljb24oIG1heENhcldpZHRoICkge1xyXG4gIHJldHVybiBuZXcgVkJveCgge1xyXG4gICAgc3BhY2luZzogNywgLy8gc3BhY2UgYmV0d2VlbiB0aGUgMiBjYXJzXHJcbiAgICBjaGlsZHJlbjogW1xyXG4gICAgICBjcmVhdGVDYXJJbWFnZSggcmVkQ2FyX3BuZywgbWF4Q2FyV2lkdGggKSxcclxuICAgICAgY3JlYXRlQ2FySW1hZ2UoIGJsdWVDYXJfcG5nLCBtYXhDYXJXaWR0aCApXHJcbiAgICBdXHJcbiAgfSApO1xyXG59XHJcblxyXG4vKipcclxuICogQ3JlYXRlcyBhIGNhciBpY29uLCBzY2FsZWQgdG8gZml0IGEgc3BlY2lmaWVkIHdpZHRoLlxyXG4gKiBAcGFyYW0ge0hUTUxJbWFnZUVsZW1lbnR9IGltYWdlRmlsZVxyXG4gKiBAcGFyYW0ge251bWJlcn0gbWF4Q2FyV2lkdGhcclxuICogQHJldHVybnMge05vZGV9XHJcbiAqL1xyXG5mdW5jdGlvbiBjcmVhdGVDYXJJbWFnZSggaW1hZ2VGaWxlLCBtYXhDYXJXaWR0aCApIHtcclxuICBjb25zdCBjYXJJbWFnZSA9IG5ldyBJbWFnZSggaW1hZ2VGaWxlICk7XHJcbiAgY2FySW1hZ2Uuc2V0U2NhbGVNYWduaXR1ZGUoIG1heENhcldpZHRoIC8gY2FySW1hZ2Uud2lkdGggKTtcclxuICByZXR1cm4gY2FySW1hZ2U7XHJcbn1cclxuXHJcbnVuaXRSYXRlcy5yZWdpc3RlciggJ051bWJlck9mQ2Fyc1JhZGlvQnV0dG9uR3JvdXAnLCBOdW1iZXJPZkNhcnNSYWRpb0J1dHRvbkdyb3VwICk7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLEtBQUssTUFBTSxtQ0FBbUM7QUFDckQsU0FBU0MsS0FBSyxFQUFFQyxJQUFJLFFBQVEsbUNBQW1DO0FBQy9ELE9BQU9DLDJCQUEyQixNQUFNLDJEQUEyRDtBQUNuRyxPQUFPQyxXQUFXLE1BQU0sZ0NBQWdDO0FBQ3hELE9BQU9DLFVBQVUsTUFBTSwrQkFBK0I7QUFDdEQsT0FBT0MsU0FBUyxNQUFNLG9CQUFvQjtBQUUxQyxlQUFlLE1BQU1DLDRCQUE0QixTQUFTSiwyQkFBMkIsQ0FBQztFQUVwRjtBQUNGO0FBQ0E7QUFDQTtFQUNFSyxXQUFXQSxDQUFFQyxtQkFBbUIsRUFBRUMsT0FBTyxFQUFHO0lBRTFDQSxPQUFPLEdBQUdWLEtBQUssQ0FBRTtNQUVmO01BQ0FXLFdBQVcsRUFBRSxFQUFFO01BRWY7TUFDQUMsV0FBVyxFQUFFLFVBQVU7TUFDdkJDLE9BQU8sRUFBRSxFQUFFO01BQUU7TUFDYkMsa0JBQWtCLEVBQUU7UUFDbEJDLFNBQVMsRUFBRSxPQUFPO1FBQ2xCQyxPQUFPLEVBQUUsRUFBRTtRQUNYQyxPQUFPLEVBQUU7TUFDWDtJQUNGLENBQUMsRUFBRVAsT0FBUSxDQUFDO0lBRVosTUFBTVEsV0FBVyxHQUFHUixPQUFPLENBQUNDLFdBQVcsR0FBSyxDQUFDLEdBQUdELE9BQU8sQ0FBQ0ksa0JBQWtCLENBQUNFLE9BQVM7SUFFcEYsS0FBSyxDQUFFUCxtQkFBbUIsRUFBRSxDQUMxQjtNQUFFVSxLQUFLLEVBQUUsS0FBSztNQUFFQyxVQUFVLEVBQUVBLENBQUEsS0FBTUMsZ0JBQWdCLENBQUVILFdBQVk7SUFBRSxDQUFDLEVBQ25FO01BQUVDLEtBQUssRUFBRSxJQUFJO01BQUVDLFVBQVUsRUFBRUEsQ0FBQSxLQUFNRSxpQkFBaUIsQ0FBRUosV0FBWTtJQUFFLENBQUMsQ0FDcEUsRUFBRVIsT0FBUSxDQUFDO0VBQ2Q7QUFDRjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBU1csZ0JBQWdCQSxDQUFFSCxXQUFXLEVBQUc7RUFDdkMsT0FBT0ssY0FBYyxDQUFFbEIsVUFBVSxFQUFFYSxXQUFZLENBQUM7QUFDbEQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVNJLGlCQUFpQkEsQ0FBRUosV0FBVyxFQUFHO0VBQ3hDLE9BQU8sSUFBSWhCLElBQUksQ0FBRTtJQUNmVyxPQUFPLEVBQUUsQ0FBQztJQUFFO0lBQ1pXLFFBQVEsRUFBRSxDQUNSRCxjQUFjLENBQUVsQixVQUFVLEVBQUVhLFdBQVksQ0FBQyxFQUN6Q0ssY0FBYyxDQUFFbkIsV0FBVyxFQUFFYyxXQUFZLENBQUM7RUFFOUMsQ0FBRSxDQUFDO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBU0ssY0FBY0EsQ0FBRUUsU0FBUyxFQUFFUCxXQUFXLEVBQUc7RUFDaEQsTUFBTVEsUUFBUSxHQUFHLElBQUl6QixLQUFLLENBQUV3QixTQUFVLENBQUM7RUFDdkNDLFFBQVEsQ0FBQ0MsaUJBQWlCLENBQUVULFdBQVcsR0FBR1EsUUFBUSxDQUFDRSxLQUFNLENBQUM7RUFDMUQsT0FBT0YsUUFBUTtBQUNqQjtBQUVBcEIsU0FBUyxDQUFDdUIsUUFBUSxDQUFFLDhCQUE4QixFQUFFdEIsNEJBQTZCLENBQUMifQ==