// Copyright 2016-2023, University of Colorado Boulder

/**
 * View components that are specific to a scene in the 'Shopping' screen.
 * Adds a Questions accordion box to the base type.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import URConstants from '../../common/URConstants.js';
import unitRates from '../../unitRates.js';
import BaseShoppingSceneNode from './BaseShoppingSceneNode.js';
import ShoppingQuestionsAccordionBox from './ShoppingQuestionsAccordionBox.js';
export default class ShoppingSceneNode extends BaseShoppingSceneNode {
  /**
   * @param {ShoppingScene} shoppingScene
   * @param {Bounds2} layoutBounds
   * @param {KeypadLayer} keypadLayer
   * @param {ShoppingViewProperties} viewProperties
   * @param {Object} [options]
   */
  constructor(shoppingScene, layoutBounds, keypadLayer, viewProperties, options) {
    super(shoppingScene, layoutBounds, keypadLayer, viewProperties, options);

    // Questions, dispose required
    const questionsAccordionBox = new ShoppingQuestionsAccordionBox(shoppingScene, keypadLayer, {
      expandedProperty: viewProperties.questionsExpandedProperty,
      right: layoutBounds.right - URConstants.SCREEN_X_MARGIN,
      top: this.doubleNumberLineAccordionBox.bottom + 10
    });
    this.addChild(questionsAccordionBox);
    questionsAccordionBox.moveToBack();

    // @private
    this.disposeShoppingSceneNode = () => {
      questionsAccordionBox.dispose();
    };
  }

  /**
   * @public
   * @override
   */
  dispose() {
    this.disposeShoppingSceneNode();
    super.dispose();
  }
}
unitRates.register('ShoppingSceneNode', ShoppingSceneNode);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJVUkNvbnN0YW50cyIsInVuaXRSYXRlcyIsIkJhc2VTaG9wcGluZ1NjZW5lTm9kZSIsIlNob3BwaW5nUXVlc3Rpb25zQWNjb3JkaW9uQm94IiwiU2hvcHBpbmdTY2VuZU5vZGUiLCJjb25zdHJ1Y3RvciIsInNob3BwaW5nU2NlbmUiLCJsYXlvdXRCb3VuZHMiLCJrZXlwYWRMYXllciIsInZpZXdQcm9wZXJ0aWVzIiwib3B0aW9ucyIsInF1ZXN0aW9uc0FjY29yZGlvbkJveCIsImV4cGFuZGVkUHJvcGVydHkiLCJxdWVzdGlvbnNFeHBhbmRlZFByb3BlcnR5IiwicmlnaHQiLCJTQ1JFRU5fWF9NQVJHSU4iLCJ0b3AiLCJkb3VibGVOdW1iZXJMaW5lQWNjb3JkaW9uQm94IiwiYm90dG9tIiwiYWRkQ2hpbGQiLCJtb3ZlVG9CYWNrIiwiZGlzcG9zZVNob3BwaW5nU2NlbmVOb2RlIiwiZGlzcG9zZSIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiU2hvcHBpbmdTY2VuZU5vZGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTYtMjAyMywgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogVmlldyBjb21wb25lbnRzIHRoYXQgYXJlIHNwZWNpZmljIHRvIGEgc2NlbmUgaW4gdGhlICdTaG9wcGluZycgc2NyZWVuLlxyXG4gKiBBZGRzIGEgUXVlc3Rpb25zIGFjY29yZGlvbiBib3ggdG8gdGhlIGJhc2UgdHlwZS5cclxuICpcclxuICogQGF1dGhvciBDaHJpcyBNYWxsZXkgKFBpeGVsWm9vbSwgSW5jLilcclxuICovXHJcblxyXG5pbXBvcnQgVVJDb25zdGFudHMgZnJvbSAnLi4vLi4vY29tbW9uL1VSQ29uc3RhbnRzLmpzJztcclxuaW1wb3J0IHVuaXRSYXRlcyBmcm9tICcuLi8uLi91bml0UmF0ZXMuanMnO1xyXG5pbXBvcnQgQmFzZVNob3BwaW5nU2NlbmVOb2RlIGZyb20gJy4vQmFzZVNob3BwaW5nU2NlbmVOb2RlLmpzJztcclxuaW1wb3J0IFNob3BwaW5nUXVlc3Rpb25zQWNjb3JkaW9uQm94IGZyb20gJy4vU2hvcHBpbmdRdWVzdGlvbnNBY2NvcmRpb25Cb3guanMnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2hvcHBpbmdTY2VuZU5vZGUgZXh0ZW5kcyBCYXNlU2hvcHBpbmdTY2VuZU5vZGUge1xyXG5cclxuICAvKipcclxuICAgKiBAcGFyYW0ge1Nob3BwaW5nU2NlbmV9IHNob3BwaW5nU2NlbmVcclxuICAgKiBAcGFyYW0ge0JvdW5kczJ9IGxheW91dEJvdW5kc1xyXG4gICAqIEBwYXJhbSB7S2V5cGFkTGF5ZXJ9IGtleXBhZExheWVyXHJcbiAgICogQHBhcmFtIHtTaG9wcGluZ1ZpZXdQcm9wZXJ0aWVzfSB2aWV3UHJvcGVydGllc1xyXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc11cclxuICAgKi9cclxuICBjb25zdHJ1Y3Rvciggc2hvcHBpbmdTY2VuZSwgbGF5b3V0Qm91bmRzLCBrZXlwYWRMYXllciwgdmlld1Byb3BlcnRpZXMsIG9wdGlvbnMgKSB7XHJcblxyXG4gICAgc3VwZXIoIHNob3BwaW5nU2NlbmUsIGxheW91dEJvdW5kcywga2V5cGFkTGF5ZXIsIHZpZXdQcm9wZXJ0aWVzLCBvcHRpb25zICk7XHJcblxyXG4gICAgLy8gUXVlc3Rpb25zLCBkaXNwb3NlIHJlcXVpcmVkXHJcbiAgICBjb25zdCBxdWVzdGlvbnNBY2NvcmRpb25Cb3ggPSBuZXcgU2hvcHBpbmdRdWVzdGlvbnNBY2NvcmRpb25Cb3goIHNob3BwaW5nU2NlbmUsIGtleXBhZExheWVyLCB7XHJcbiAgICAgIGV4cGFuZGVkUHJvcGVydHk6IHZpZXdQcm9wZXJ0aWVzLnF1ZXN0aW9uc0V4cGFuZGVkUHJvcGVydHksXHJcbiAgICAgIHJpZ2h0OiBsYXlvdXRCb3VuZHMucmlnaHQgLSBVUkNvbnN0YW50cy5TQ1JFRU5fWF9NQVJHSU4sXHJcbiAgICAgIHRvcDogdGhpcy5kb3VibGVOdW1iZXJMaW5lQWNjb3JkaW9uQm94LmJvdHRvbSArIDEwXHJcbiAgICB9ICk7XHJcbiAgICB0aGlzLmFkZENoaWxkKCBxdWVzdGlvbnNBY2NvcmRpb25Cb3ggKTtcclxuICAgIHF1ZXN0aW9uc0FjY29yZGlvbkJveC5tb3ZlVG9CYWNrKCk7XHJcblxyXG4gICAgLy8gQHByaXZhdGVcclxuICAgIHRoaXMuZGlzcG9zZVNob3BwaW5nU2NlbmVOb2RlID0gKCkgPT4ge1xyXG4gICAgICBxdWVzdGlvbnNBY2NvcmRpb25Cb3guZGlzcG9zZSgpO1xyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBwdWJsaWNcclxuICAgKiBAb3ZlcnJpZGVcclxuICAgKi9cclxuICBkaXNwb3NlKCkge1xyXG4gICAgdGhpcy5kaXNwb3NlU2hvcHBpbmdTY2VuZU5vZGUoKTtcclxuICAgIHN1cGVyLmRpc3Bvc2UoKTtcclxuICB9XHJcbn1cclxuXHJcbnVuaXRSYXRlcy5yZWdpc3RlciggJ1Nob3BwaW5nU2NlbmVOb2RlJywgU2hvcHBpbmdTY2VuZU5vZGUgKTsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxXQUFXLE1BQU0sNkJBQTZCO0FBQ3JELE9BQU9DLFNBQVMsTUFBTSxvQkFBb0I7QUFDMUMsT0FBT0MscUJBQXFCLE1BQU0sNEJBQTRCO0FBQzlELE9BQU9DLDZCQUE2QixNQUFNLG9DQUFvQztBQUU5RSxlQUFlLE1BQU1DLGlCQUFpQixTQUFTRixxQkFBcUIsQ0FBQztFQUVuRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtFQUNFRyxXQUFXQSxDQUFFQyxhQUFhLEVBQUVDLFlBQVksRUFBRUMsV0FBVyxFQUFFQyxjQUFjLEVBQUVDLE9BQU8sRUFBRztJQUUvRSxLQUFLLENBQUVKLGFBQWEsRUFBRUMsWUFBWSxFQUFFQyxXQUFXLEVBQUVDLGNBQWMsRUFBRUMsT0FBUSxDQUFDOztJQUUxRTtJQUNBLE1BQU1DLHFCQUFxQixHQUFHLElBQUlSLDZCQUE2QixDQUFFRyxhQUFhLEVBQUVFLFdBQVcsRUFBRTtNQUMzRkksZ0JBQWdCLEVBQUVILGNBQWMsQ0FBQ0kseUJBQXlCO01BQzFEQyxLQUFLLEVBQUVQLFlBQVksQ0FBQ08sS0FBSyxHQUFHZCxXQUFXLENBQUNlLGVBQWU7TUFDdkRDLEdBQUcsRUFBRSxJQUFJLENBQUNDLDRCQUE0QixDQUFDQyxNQUFNLEdBQUc7SUFDbEQsQ0FBRSxDQUFDO0lBQ0gsSUFBSSxDQUFDQyxRQUFRLENBQUVSLHFCQUFzQixDQUFDO0lBQ3RDQSxxQkFBcUIsQ0FBQ1MsVUFBVSxDQUFDLENBQUM7O0lBRWxDO0lBQ0EsSUFBSSxDQUFDQyx3QkFBd0IsR0FBRyxNQUFNO01BQ3BDVixxQkFBcUIsQ0FBQ1csT0FBTyxDQUFDLENBQUM7SUFDakMsQ0FBQztFQUNIOztFQUVBO0FBQ0Y7QUFDQTtBQUNBO0VBQ0VBLE9BQU9BLENBQUEsRUFBRztJQUNSLElBQUksQ0FBQ0Qsd0JBQXdCLENBQUMsQ0FBQztJQUMvQixLQUFLLENBQUNDLE9BQU8sQ0FBQyxDQUFDO0VBQ2pCO0FBQ0Y7QUFFQXJCLFNBQVMsQ0FBQ3NCLFFBQVEsQ0FBRSxtQkFBbUIsRUFBRW5CLGlCQUFrQixDQUFDIn0=