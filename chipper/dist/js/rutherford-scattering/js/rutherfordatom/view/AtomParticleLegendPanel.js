// Copyright 2016-2022, University of Colorado Boulder

/**
 * Legend for particles related to the atom screens and scenes in the sim.
 *
 * @author Dave Schmitz (Schmitzware)
 * @author Jesse Greenberg
 */

import ParticleLegendPanel from '../../common/view/ParticleLegendPanel.js';
import ParticleNodeFactory from '../../common/view/ParticleNodeFactory.js';
import rutherfordScattering from '../../rutherfordScattering.js';
import RutherfordScatteringStrings from '../../RutherfordScatteringStrings.js';
const alphaParticleTraceString = RutherfordScatteringStrings.alphaParticleTrace;
const electronEnergyLevelString = RutherfordScatteringStrings.electronEnergyLevel;
const nucleusString = RutherfordScatteringStrings.nucleus;
class AtomParticleLegendPanel extends ParticleLegendPanel {
  /**
   * @param {Node} content
   * @param {Object} [options]
   */
  constructor(content, options) {
    super(content, options);
  }

  /**
   * Create the content that is to be contained in this panel.
   *
   * @param  {Object} [options]
   * @returns {Node}
   * @public
   */
  static createPanelContent(options) {
    // add the legend particle entries
    const content = [];
    content.push(ParticleLegendPanel.createParticleBox(ParticleNodeFactory.createNucleus(), nucleusString));
    content.push(ParticleLegendPanel.createParticleBox(ParticleNodeFactory.createEnergyLevel(), electronEnergyLevelString));
    content.push(ParticleLegendPanel.createParticleBox(ParticleNodeFactory.createParticleTrace(), alphaParticleTraceString));
    return ParticleLegendPanel.createPanelContent(content, options);
  }
}
rutherfordScattering.register('AtomParticleLegendPanel', AtomParticleLegendPanel);
export default AtomParticleLegendPanel;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQYXJ0aWNsZUxlZ2VuZFBhbmVsIiwiUGFydGljbGVOb2RlRmFjdG9yeSIsInJ1dGhlcmZvcmRTY2F0dGVyaW5nIiwiUnV0aGVyZm9yZFNjYXR0ZXJpbmdTdHJpbmdzIiwiYWxwaGFQYXJ0aWNsZVRyYWNlU3RyaW5nIiwiYWxwaGFQYXJ0aWNsZVRyYWNlIiwiZWxlY3Ryb25FbmVyZ3lMZXZlbFN0cmluZyIsImVsZWN0cm9uRW5lcmd5TGV2ZWwiLCJudWNsZXVzU3RyaW5nIiwibnVjbGV1cyIsIkF0b21QYXJ0aWNsZUxlZ2VuZFBhbmVsIiwiY29uc3RydWN0b3IiLCJjb250ZW50Iiwib3B0aW9ucyIsImNyZWF0ZVBhbmVsQ29udGVudCIsInB1c2giLCJjcmVhdGVQYXJ0aWNsZUJveCIsImNyZWF0ZU51Y2xldXMiLCJjcmVhdGVFbmVyZ3lMZXZlbCIsImNyZWF0ZVBhcnRpY2xlVHJhY2UiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIkF0b21QYXJ0aWNsZUxlZ2VuZFBhbmVsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE2LTIwMjIsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIExlZ2VuZCBmb3IgcGFydGljbGVzIHJlbGF0ZWQgdG8gdGhlIGF0b20gc2NyZWVucyBhbmQgc2NlbmVzIGluIHRoZSBzaW0uXHJcbiAqXHJcbiAqIEBhdXRob3IgRGF2ZSBTY2htaXR6IChTY2htaXR6d2FyZSlcclxuICogQGF1dGhvciBKZXNzZSBHcmVlbmJlcmdcclxuICovXHJcblxyXG5pbXBvcnQgUGFydGljbGVMZWdlbmRQYW5lbCBmcm9tICcuLi8uLi9jb21tb24vdmlldy9QYXJ0aWNsZUxlZ2VuZFBhbmVsLmpzJztcclxuaW1wb3J0IFBhcnRpY2xlTm9kZUZhY3RvcnkgZnJvbSAnLi4vLi4vY29tbW9uL3ZpZXcvUGFydGljbGVOb2RlRmFjdG9yeS5qcyc7XHJcbmltcG9ydCBydXRoZXJmb3JkU2NhdHRlcmluZyBmcm9tICcuLi8uLi9ydXRoZXJmb3JkU2NhdHRlcmluZy5qcyc7XHJcbmltcG9ydCBSdXRoZXJmb3JkU2NhdHRlcmluZ1N0cmluZ3MgZnJvbSAnLi4vLi4vUnV0aGVyZm9yZFNjYXR0ZXJpbmdTdHJpbmdzLmpzJztcclxuXHJcbmNvbnN0IGFscGhhUGFydGljbGVUcmFjZVN0cmluZyA9IFJ1dGhlcmZvcmRTY2F0dGVyaW5nU3RyaW5ncy5hbHBoYVBhcnRpY2xlVHJhY2U7XHJcbmNvbnN0IGVsZWN0cm9uRW5lcmd5TGV2ZWxTdHJpbmcgPSBSdXRoZXJmb3JkU2NhdHRlcmluZ1N0cmluZ3MuZWxlY3Ryb25FbmVyZ3lMZXZlbDtcclxuY29uc3QgbnVjbGV1c1N0cmluZyA9IFJ1dGhlcmZvcmRTY2F0dGVyaW5nU3RyaW5ncy5udWNsZXVzO1xyXG5cclxuY2xhc3MgQXRvbVBhcnRpY2xlTGVnZW5kUGFuZWwgZXh0ZW5kcyBQYXJ0aWNsZUxlZ2VuZFBhbmVsIHtcclxuXHJcbiAgLyoqXHJcbiAgICogQHBhcmFtIHtOb2RlfSBjb250ZW50XHJcbiAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxyXG4gICAqL1xyXG4gIGNvbnN0cnVjdG9yKCBjb250ZW50LCBvcHRpb25zICkge1xyXG4gICAgc3VwZXIoIGNvbnRlbnQsIG9wdGlvbnMgKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIENyZWF0ZSB0aGUgY29udGVudCB0aGF0IGlzIHRvIGJlIGNvbnRhaW5lZCBpbiB0aGlzIHBhbmVsLlxyXG4gICAqXHJcbiAgICogQHBhcmFtICB7T2JqZWN0fSBbb3B0aW9uc11cclxuICAgKiBAcmV0dXJucyB7Tm9kZX1cclxuICAgKiBAcHVibGljXHJcbiAgICovXHJcbiAgc3RhdGljIGNyZWF0ZVBhbmVsQ29udGVudCggb3B0aW9ucyApIHtcclxuXHJcbiAgICAvLyBhZGQgdGhlIGxlZ2VuZCBwYXJ0aWNsZSBlbnRyaWVzXHJcbiAgICBjb25zdCBjb250ZW50ID0gW107XHJcbiAgICBjb250ZW50LnB1c2goIFBhcnRpY2xlTGVnZW5kUGFuZWwuY3JlYXRlUGFydGljbGVCb3goIFBhcnRpY2xlTm9kZUZhY3RvcnkuY3JlYXRlTnVjbGV1cygpLCBudWNsZXVzU3RyaW5nICkgKTtcclxuICAgIGNvbnRlbnQucHVzaCggUGFydGljbGVMZWdlbmRQYW5lbC5jcmVhdGVQYXJ0aWNsZUJveCggUGFydGljbGVOb2RlRmFjdG9yeS5jcmVhdGVFbmVyZ3lMZXZlbCgpLCBlbGVjdHJvbkVuZXJneUxldmVsU3RyaW5nICkgKTtcclxuICAgIGNvbnRlbnQucHVzaCggUGFydGljbGVMZWdlbmRQYW5lbC5jcmVhdGVQYXJ0aWNsZUJveCggUGFydGljbGVOb2RlRmFjdG9yeS5jcmVhdGVQYXJ0aWNsZVRyYWNlKCksIGFscGhhUGFydGljbGVUcmFjZVN0cmluZyApICk7XHJcblxyXG4gICAgcmV0dXJuIFBhcnRpY2xlTGVnZW5kUGFuZWwuY3JlYXRlUGFuZWxDb250ZW50KCBjb250ZW50LCBvcHRpb25zICk7XHJcbiAgfVxyXG59XHJcblxyXG5ydXRoZXJmb3JkU2NhdHRlcmluZy5yZWdpc3RlciggJ0F0b21QYXJ0aWNsZUxlZ2VuZFBhbmVsJywgQXRvbVBhcnRpY2xlTGVnZW5kUGFuZWwgKTtcclxuZXhwb3J0IGRlZmF1bHQgQXRvbVBhcnRpY2xlTGVnZW5kUGFuZWw7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsbUJBQW1CLE1BQU0sMENBQTBDO0FBQzFFLE9BQU9DLG1CQUFtQixNQUFNLDBDQUEwQztBQUMxRSxPQUFPQyxvQkFBb0IsTUFBTSwrQkFBK0I7QUFDaEUsT0FBT0MsMkJBQTJCLE1BQU0sc0NBQXNDO0FBRTlFLE1BQU1DLHdCQUF3QixHQUFHRCwyQkFBMkIsQ0FBQ0Usa0JBQWtCO0FBQy9FLE1BQU1DLHlCQUF5QixHQUFHSCwyQkFBMkIsQ0FBQ0ksbUJBQW1CO0FBQ2pGLE1BQU1DLGFBQWEsR0FBR0wsMkJBQTJCLENBQUNNLE9BQU87QUFFekQsTUFBTUMsdUJBQXVCLFNBQVNWLG1CQUFtQixDQUFDO0VBRXhEO0FBQ0Y7QUFDQTtBQUNBO0VBQ0VXLFdBQVdBLENBQUVDLE9BQU8sRUFBRUMsT0FBTyxFQUFHO0lBQzlCLEtBQUssQ0FBRUQsT0FBTyxFQUFFQyxPQUFRLENBQUM7RUFDM0I7O0VBRUE7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7RUFDRSxPQUFPQyxrQkFBa0JBLENBQUVELE9BQU8sRUFBRztJQUVuQztJQUNBLE1BQU1ELE9BQU8sR0FBRyxFQUFFO0lBQ2xCQSxPQUFPLENBQUNHLElBQUksQ0FBRWYsbUJBQW1CLENBQUNnQixpQkFBaUIsQ0FBRWYsbUJBQW1CLENBQUNnQixhQUFhLENBQUMsQ0FBQyxFQUFFVCxhQUFjLENBQUUsQ0FBQztJQUMzR0ksT0FBTyxDQUFDRyxJQUFJLENBQUVmLG1CQUFtQixDQUFDZ0IsaUJBQWlCLENBQUVmLG1CQUFtQixDQUFDaUIsaUJBQWlCLENBQUMsQ0FBQyxFQUFFWix5QkFBMEIsQ0FBRSxDQUFDO0lBQzNITSxPQUFPLENBQUNHLElBQUksQ0FBRWYsbUJBQW1CLENBQUNnQixpQkFBaUIsQ0FBRWYsbUJBQW1CLENBQUNrQixtQkFBbUIsQ0FBQyxDQUFDLEVBQUVmLHdCQUF5QixDQUFFLENBQUM7SUFFNUgsT0FBT0osbUJBQW1CLENBQUNjLGtCQUFrQixDQUFFRixPQUFPLEVBQUVDLE9BQVEsQ0FBQztFQUNuRTtBQUNGO0FBRUFYLG9CQUFvQixDQUFDa0IsUUFBUSxDQUFFLHlCQUF5QixFQUFFVix1QkFBd0IsQ0FBQztBQUNuRixlQUFlQSx1QkFBdUIifQ==