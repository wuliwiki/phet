// Copyright 2016-2022, University of Colorado Boulder

/**
 * The material target which which the particle gun is directed towards.
 *
 * @author Dave Schmitz (Schmitzware)
 */

import Dimension2 from '../../../../dot/js/Dimension2.js';
import { Shape } from '../../../../kite/js/imports.js';
import { LinearGradient, Node, Path } from '../../../../scenery/js/imports.js';
import rutherfordScattering from '../../rutherfordScattering.js';

// constants
const BACK_DEPTH = 30;
const BACK_OFFSET = 0.10;
const BOX_SIZE = new Dimension2(120, 120);
const BACK_COLOR = '#8c7e29';
const FRONT_COLOR = '#d6cb86';
class TargetMaterialNode extends Node {
  /**
   * @param {Object} [options]
   */
  constructor(options) {
    options = options || {};

    // top face, in perspective
    const topNode = new Path(new Shape().moveTo(BACK_OFFSET * BOX_SIZE.width, 0).lineTo((1 - BACK_OFFSET) * BOX_SIZE.width, 0).lineTo(BOX_SIZE.width, BACK_DEPTH).lineTo(0, BACK_DEPTH).close(), {
      fill: new LinearGradient(0, 0, 0, BACK_DEPTH).addColorStop(0, BACK_COLOR).addColorStop(1, FRONT_COLOR),
      stroke: 'black',
      lineWidth: 1
    });
    assert && assert(!options.children, 'additional children not supported');
    options.children = [topNode];
    super(options);
  }
}
rutherfordScattering.register('TargetMaterialNode', TargetMaterialNode);
export default TargetMaterialNode;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJEaW1lbnNpb24yIiwiU2hhcGUiLCJMaW5lYXJHcmFkaWVudCIsIk5vZGUiLCJQYXRoIiwicnV0aGVyZm9yZFNjYXR0ZXJpbmciLCJCQUNLX0RFUFRIIiwiQkFDS19PRkZTRVQiLCJCT1hfU0laRSIsIkJBQ0tfQ09MT1IiLCJGUk9OVF9DT0xPUiIsIlRhcmdldE1hdGVyaWFsTm9kZSIsImNvbnN0cnVjdG9yIiwib3B0aW9ucyIsInRvcE5vZGUiLCJtb3ZlVG8iLCJ3aWR0aCIsImxpbmVUbyIsImNsb3NlIiwiZmlsbCIsImFkZENvbG9yU3RvcCIsInN0cm9rZSIsImxpbmVXaWR0aCIsImFzc2VydCIsImNoaWxkcmVuIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJUYXJnZXRNYXRlcmlhbE5vZGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTYtMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogVGhlIG1hdGVyaWFsIHRhcmdldCB3aGljaCB3aGljaCB0aGUgcGFydGljbGUgZ3VuIGlzIGRpcmVjdGVkIHRvd2FyZHMuXHJcbiAqXHJcbiAqIEBhdXRob3IgRGF2ZSBTY2htaXR6IChTY2htaXR6d2FyZSlcclxuICovXHJcblxyXG5pbXBvcnQgRGltZW5zaW9uMiBmcm9tICcuLi8uLi8uLi8uLi9kb3QvanMvRGltZW5zaW9uMi5qcyc7XHJcbmltcG9ydCB7IFNoYXBlIH0gZnJvbSAnLi4vLi4vLi4vLi4va2l0ZS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IHsgTGluZWFyR3JhZGllbnQsIE5vZGUsIFBhdGggfSBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgcnV0aGVyZm9yZFNjYXR0ZXJpbmcgZnJvbSAnLi4vLi4vcnV0aGVyZm9yZFNjYXR0ZXJpbmcuanMnO1xyXG5cclxuLy8gY29uc3RhbnRzXHJcbmNvbnN0IEJBQ0tfREVQVEggPSAzMDtcclxuY29uc3QgQkFDS19PRkZTRVQgPSAwLjEwO1xyXG5jb25zdCBCT1hfU0laRSA9IG5ldyBEaW1lbnNpb24yKCAxMjAsIDEyMCApO1xyXG5jb25zdCBCQUNLX0NPTE9SID0gJyM4YzdlMjknO1xyXG5jb25zdCBGUk9OVF9DT0xPUiA9ICcjZDZjYjg2JztcclxuXHJcbmNsYXNzIFRhcmdldE1hdGVyaWFsTm9kZSBleHRlbmRzIE5vZGUge1xyXG5cclxuICAvKipcclxuICAgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXHJcbiAgICovXHJcbiAgY29uc3RydWN0b3IoIG9wdGlvbnMgKSB7XHJcblxyXG4gICAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XHJcblxyXG4gICAgLy8gdG9wIGZhY2UsIGluIHBlcnNwZWN0aXZlXHJcbiAgICBjb25zdCB0b3BOb2RlID0gbmV3IFBhdGgoIG5ldyBTaGFwZSgpXHJcbiAgICAgIC5tb3ZlVG8oIEJBQ0tfT0ZGU0VUICogQk9YX1NJWkUud2lkdGgsIDAgKVxyXG4gICAgICAubGluZVRvKCAoIDEgLSBCQUNLX09GRlNFVCApICogQk9YX1NJWkUud2lkdGgsIDAgKVxyXG4gICAgICAubGluZVRvKCBCT1hfU0laRS53aWR0aCwgQkFDS19ERVBUSCApXHJcbiAgICAgIC5saW5lVG8oIDAsIEJBQ0tfREVQVEggKVxyXG4gICAgICAuY2xvc2UoKSwge1xyXG4gICAgICBmaWxsOiBuZXcgTGluZWFyR3JhZGllbnQoIDAsIDAsIDAsIEJBQ0tfREVQVEggKS5hZGRDb2xvclN0b3AoIDAsIEJBQ0tfQ09MT1IgKS5hZGRDb2xvclN0b3AoIDEsIEZST05UX0NPTE9SICksXHJcbiAgICAgIHN0cm9rZTogJ2JsYWNrJyxcclxuICAgICAgbGluZVdpZHRoOiAxXHJcbiAgICB9ICk7XHJcblxyXG4gICAgYXNzZXJ0ICYmIGFzc2VydCggIW9wdGlvbnMuY2hpbGRyZW4sICdhZGRpdGlvbmFsIGNoaWxkcmVuIG5vdCBzdXBwb3J0ZWQnICk7XHJcbiAgICBvcHRpb25zLmNoaWxkcmVuID0gWyB0b3BOb2RlIF07XHJcblxyXG4gICAgc3VwZXIoIG9wdGlvbnMgKTtcclxuICB9XHJcbn1cclxuXHJcbnJ1dGhlcmZvcmRTY2F0dGVyaW5nLnJlZ2lzdGVyKCAnVGFyZ2V0TWF0ZXJpYWxOb2RlJywgVGFyZ2V0TWF0ZXJpYWxOb2RlICk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBUYXJnZXRNYXRlcmlhbE5vZGU7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLFVBQVUsTUFBTSxrQ0FBa0M7QUFDekQsU0FBU0MsS0FBSyxRQUFRLGdDQUFnQztBQUN0RCxTQUFTQyxjQUFjLEVBQUVDLElBQUksRUFBRUMsSUFBSSxRQUFRLG1DQUFtQztBQUM5RSxPQUFPQyxvQkFBb0IsTUFBTSwrQkFBK0I7O0FBRWhFO0FBQ0EsTUFBTUMsVUFBVSxHQUFHLEVBQUU7QUFDckIsTUFBTUMsV0FBVyxHQUFHLElBQUk7QUFDeEIsTUFBTUMsUUFBUSxHQUFHLElBQUlSLFVBQVUsQ0FBRSxHQUFHLEVBQUUsR0FBSSxDQUFDO0FBQzNDLE1BQU1TLFVBQVUsR0FBRyxTQUFTO0FBQzVCLE1BQU1DLFdBQVcsR0FBRyxTQUFTO0FBRTdCLE1BQU1DLGtCQUFrQixTQUFTUixJQUFJLENBQUM7RUFFcEM7QUFDRjtBQUNBO0VBQ0VTLFdBQVdBLENBQUVDLE9BQU8sRUFBRztJQUVyQkEsT0FBTyxHQUFHQSxPQUFPLElBQUksQ0FBQyxDQUFDOztJQUV2QjtJQUNBLE1BQU1DLE9BQU8sR0FBRyxJQUFJVixJQUFJLENBQUUsSUFBSUgsS0FBSyxDQUFDLENBQUMsQ0FDbENjLE1BQU0sQ0FBRVIsV0FBVyxHQUFHQyxRQUFRLENBQUNRLEtBQUssRUFBRSxDQUFFLENBQUMsQ0FDekNDLE1BQU0sQ0FBRSxDQUFFLENBQUMsR0FBR1YsV0FBVyxJQUFLQyxRQUFRLENBQUNRLEtBQUssRUFBRSxDQUFFLENBQUMsQ0FDakRDLE1BQU0sQ0FBRVQsUUFBUSxDQUFDUSxLQUFLLEVBQUVWLFVBQVcsQ0FBQyxDQUNwQ1csTUFBTSxDQUFFLENBQUMsRUFBRVgsVUFBVyxDQUFDLENBQ3ZCWSxLQUFLLENBQUMsQ0FBQyxFQUFFO01BQ1ZDLElBQUksRUFBRSxJQUFJakIsY0FBYyxDQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFSSxVQUFXLENBQUMsQ0FBQ2MsWUFBWSxDQUFFLENBQUMsRUFBRVgsVUFBVyxDQUFDLENBQUNXLFlBQVksQ0FBRSxDQUFDLEVBQUVWLFdBQVksQ0FBQztNQUM1R1csTUFBTSxFQUFFLE9BQU87TUFDZkMsU0FBUyxFQUFFO0lBQ2IsQ0FBRSxDQUFDO0lBRUhDLE1BQU0sSUFBSUEsTUFBTSxDQUFFLENBQUNWLE9BQU8sQ0FBQ1csUUFBUSxFQUFFLG1DQUFvQyxDQUFDO0lBQzFFWCxPQUFPLENBQUNXLFFBQVEsR0FBRyxDQUFFVixPQUFPLENBQUU7SUFFOUIsS0FBSyxDQUFFRCxPQUFRLENBQUM7RUFDbEI7QUFDRjtBQUVBUixvQkFBb0IsQ0FBQ29CLFFBQVEsQ0FBRSxvQkFBb0IsRUFBRWQsa0JBQW1CLENBQUM7QUFFekUsZUFBZUEsa0JBQWtCIn0=