// Copyright 2023, University of Colorado Boulder

/**
 * Gets the dependencies.json from a given branch of a repo
 *
 * @author Jonathan Olson <jonathan.olson@colorado.edu>
 */

const getGitFile = require('./getGitFile');
const createLocalBranchFromRemote = require('./createLocalBranchFromRemote');

/**
 * Gets the dependencies.json from a given branch of a repo
 * @public
 *
 * @param {string} repo - The repository name
 * @param {string} branch - The branch name
 * @param {string} filename - The file name
 * @returns {Promise} - Resolves to the file contents
 * @rejects {ExecuteError}
 */
module.exports = async function getFileAtBranch(repo, branch, filename) {
  try {
    return await getGitFile(repo, branch, filename);
  } catch (e) {
    if (e.message.includes('invalid object name') && e.message.includes(branch)) {
      await createLocalBranchFromRemote(repo, branch);
      return getGitFile(repo, branch, filename);
    } else {
      throw e;
    }
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJnZXRHaXRGaWxlIiwicmVxdWlyZSIsImNyZWF0ZUxvY2FsQnJhbmNoRnJvbVJlbW90ZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJnZXRGaWxlQXRCcmFuY2giLCJyZXBvIiwiYnJhbmNoIiwiZmlsZW5hbWUiLCJlIiwibWVzc2FnZSIsImluY2x1ZGVzIl0sInNvdXJjZXMiOlsiZ2V0RmlsZUF0QnJhbmNoLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIzLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBHZXRzIHRoZSBkZXBlbmRlbmNpZXMuanNvbiBmcm9tIGEgZ2l2ZW4gYnJhbmNoIG9mIGEgcmVwb1xyXG4gKlxyXG4gKiBAYXV0aG9yIEpvbmF0aGFuIE9sc29uIDxqb25hdGhhbi5vbHNvbkBjb2xvcmFkby5lZHU+XHJcbiAqL1xyXG5cclxuY29uc3QgZ2V0R2l0RmlsZSA9IHJlcXVpcmUoICcuL2dldEdpdEZpbGUnICk7XHJcbmNvbnN0IGNyZWF0ZUxvY2FsQnJhbmNoRnJvbVJlbW90ZSA9IHJlcXVpcmUoICcuL2NyZWF0ZUxvY2FsQnJhbmNoRnJvbVJlbW90ZScgKTtcclxuXHJcbi8qKlxyXG4gKiBHZXRzIHRoZSBkZXBlbmRlbmNpZXMuanNvbiBmcm9tIGEgZ2l2ZW4gYnJhbmNoIG9mIGEgcmVwb1xyXG4gKiBAcHVibGljXHJcbiAqXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSByZXBvIC0gVGhlIHJlcG9zaXRvcnkgbmFtZVxyXG4gKiBAcGFyYW0ge3N0cmluZ30gYnJhbmNoIC0gVGhlIGJyYW5jaCBuYW1lXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBmaWxlbmFtZSAtIFRoZSBmaWxlIG5hbWVcclxuICogQHJldHVybnMge1Byb21pc2V9IC0gUmVzb2x2ZXMgdG8gdGhlIGZpbGUgY29udGVudHNcclxuICogQHJlamVjdHMge0V4ZWN1dGVFcnJvcn1cclxuICovXHJcbm1vZHVsZS5leHBvcnRzID0gYXN5bmMgZnVuY3Rpb24gZ2V0RmlsZUF0QnJhbmNoKCByZXBvLCBicmFuY2gsIGZpbGVuYW1lICkge1xyXG5cclxuICB0cnkge1xyXG4gICAgcmV0dXJuIGF3YWl0IGdldEdpdEZpbGUoIHJlcG8sIGJyYW5jaCwgZmlsZW5hbWUgKTtcclxuICB9XHJcbiAgY2F0Y2goIGUgKSB7XHJcbiAgICBpZiAoIGUubWVzc2FnZS5pbmNsdWRlcyggJ2ludmFsaWQgb2JqZWN0IG5hbWUnICkgJiYgZS5tZXNzYWdlLmluY2x1ZGVzKCBicmFuY2ggKSApIHtcclxuXHJcbiAgICAgIGF3YWl0IGNyZWF0ZUxvY2FsQnJhbmNoRnJvbVJlbW90ZSggcmVwbywgYnJhbmNoICk7XHJcbiAgICAgIHJldHVybiBnZXRHaXRGaWxlKCByZXBvLCBicmFuY2gsIGZpbGVuYW1lICk7XHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgdGhyb3cgZTtcclxuICAgIH1cclxuICB9XHJcbn07XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxNQUFNQSxVQUFVLEdBQUdDLE9BQU8sQ0FBRSxjQUFlLENBQUM7QUFDNUMsTUFBTUMsMkJBQTJCLEdBQUdELE9BQU8sQ0FBRSwrQkFBZ0MsQ0FBQzs7QUFFOUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQUUsTUFBTSxDQUFDQyxPQUFPLEdBQUcsZUFBZUMsZUFBZUEsQ0FBRUMsSUFBSSxFQUFFQyxNQUFNLEVBQUVDLFFBQVEsRUFBRztFQUV4RSxJQUFJO0lBQ0YsT0FBTyxNQUFNUixVQUFVLENBQUVNLElBQUksRUFBRUMsTUFBTSxFQUFFQyxRQUFTLENBQUM7RUFDbkQsQ0FBQyxDQUNELE9BQU9DLENBQUMsRUFBRztJQUNULElBQUtBLENBQUMsQ0FBQ0MsT0FBTyxDQUFDQyxRQUFRLENBQUUscUJBQXNCLENBQUMsSUFBSUYsQ0FBQyxDQUFDQyxPQUFPLENBQUNDLFFBQVEsQ0FBRUosTUFBTyxDQUFDLEVBQUc7TUFFakYsTUFBTUwsMkJBQTJCLENBQUVJLElBQUksRUFBRUMsTUFBTyxDQUFDO01BQ2pELE9BQU9QLFVBQVUsQ0FBRU0sSUFBSSxFQUFFQyxNQUFNLEVBQUVDLFFBQVMsQ0FBQztJQUM3QyxDQUFDLE1BQ0k7TUFDSCxNQUFNQyxDQUFDO0lBQ1Q7RUFDRjtBQUNGLENBQUMifQ==