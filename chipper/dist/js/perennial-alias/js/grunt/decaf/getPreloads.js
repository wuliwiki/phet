// Copyright 2019-2020, University of Colorado Boulder

/**
 * Launch an instance of the simulation using puppeteer, gather the cheerpj resources for optimization.
 * @author Sam Reid (PhET Interactive Simulations)
 */

const puppeteer = require('puppeteer');
module.exports = async url => {
  let runtimeResources = null;
  return new Promise(async (resolve, reject) => {
    // eslint-disable-line no-async-promise-executor

    let receivedResources = false;
    const browser = await puppeteer.launch();
    const page = await browser.newPage();
    page.on('console', async msg => {
      if (msg.text().indexOf('Simulation started...') >= 0) {
        receivedResources = true;
        runtimeResources = await page.evaluate(() => window.cjGetRuntimeResources());
        await resolved(runtimeResources);
      } else if (msg.type() === 'error') {
        const location = msg.location ? `:\n  ${msg.location().url}` : '';
        const message = msg.text() + location;
        console.error('Error from sim:', message);
      }
    });
    const resolved = async runtimeResources => {
      if (receivedResources) {
        await browser.close();
        resolve(runtimeResources);
      }
    };
    page.on('error', msg => reject(msg));
    page.on('pageerror', msg => reject(msg));
    try {
      await page.goto(url);
    } catch (e) {
      reject(e);
    }
  });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJwdXBwZXRlZXIiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsInVybCIsInJ1bnRpbWVSZXNvdXJjZXMiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsInJlY2VpdmVkUmVzb3VyY2VzIiwiYnJvd3NlciIsImxhdW5jaCIsInBhZ2UiLCJuZXdQYWdlIiwib24iLCJtc2ciLCJ0ZXh0IiwiaW5kZXhPZiIsImV2YWx1YXRlIiwid2luZG93IiwiY2pHZXRSdW50aW1lUmVzb3VyY2VzIiwicmVzb2x2ZWQiLCJ0eXBlIiwibG9jYXRpb24iLCJtZXNzYWdlIiwiY29uc29sZSIsImVycm9yIiwiY2xvc2UiLCJnb3RvIiwiZSJdLCJzb3VyY2VzIjpbImdldFByZWxvYWRzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE5LTIwMjAsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIExhdW5jaCBhbiBpbnN0YW5jZSBvZiB0aGUgc2ltdWxhdGlvbiB1c2luZyBwdXBwZXRlZXIsIGdhdGhlciB0aGUgY2hlZXJwaiByZXNvdXJjZXMgZm9yIG9wdGltaXphdGlvbi5cclxuICogQGF1dGhvciBTYW0gUmVpZCAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcclxuICovXHJcblxyXG5cclxuY29uc3QgcHVwcGV0ZWVyID0gcmVxdWlyZSggJ3B1cHBldGVlcicgKTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gYXN5bmMgdXJsID0+IHtcclxuXHJcbiAgbGV0IHJ1bnRpbWVSZXNvdXJjZXMgPSBudWxsO1xyXG5cclxuICByZXR1cm4gbmV3IFByb21pc2UoIGFzeW5jICggcmVzb2x2ZSwgcmVqZWN0ICkgPT4geyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWFzeW5jLXByb21pc2UtZXhlY3V0b3JcclxuXHJcbiAgICBsZXQgcmVjZWl2ZWRSZXNvdXJjZXMgPSBmYWxzZTtcclxuXHJcbiAgICBjb25zdCBicm93c2VyID0gYXdhaXQgcHVwcGV0ZWVyLmxhdW5jaCgpO1xyXG4gICAgY29uc3QgcGFnZSA9IGF3YWl0IGJyb3dzZXIubmV3UGFnZSgpO1xyXG5cclxuICAgIHBhZ2Uub24oICdjb25zb2xlJywgYXN5bmMgbXNnID0+IHtcclxuICAgICAgaWYgKCBtc2cudGV4dCgpLmluZGV4T2YoICdTaW11bGF0aW9uIHN0YXJ0ZWQuLi4nICkgPj0gMCApIHtcclxuICAgICAgICByZWNlaXZlZFJlc291cmNlcyA9IHRydWU7XHJcblxyXG4gICAgICAgIHJ1bnRpbWVSZXNvdXJjZXMgPSBhd2FpdCBwYWdlLmV2YWx1YXRlKCAoKSA9PiB3aW5kb3cuY2pHZXRSdW50aW1lUmVzb3VyY2VzKCkgKTtcclxuXHJcbiAgICAgICAgYXdhaXQgcmVzb2x2ZWQoIHJ1bnRpbWVSZXNvdXJjZXMgKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgZWxzZSBpZiAoIG1zZy50eXBlKCkgPT09ICdlcnJvcicgKSB7XHJcbiAgICAgICAgY29uc3QgbG9jYXRpb24gPSBtc2cubG9jYXRpb24gPyBgOlxcbiAgJHttc2cubG9jYXRpb24oKS51cmx9YCA6ICcnO1xyXG4gICAgICAgIGNvbnN0IG1lc3NhZ2UgPSBtc2cudGV4dCgpICsgbG9jYXRpb247XHJcbiAgICAgICAgY29uc29sZS5lcnJvciggJ0Vycm9yIGZyb20gc2ltOicsIG1lc3NhZ2UgKTtcclxuICAgICAgfVxyXG4gICAgfSApO1xyXG5cclxuICAgIGNvbnN0IHJlc29sdmVkID0gYXN5bmMgcnVudGltZVJlc291cmNlcyA9PiB7XHJcbiAgICAgIGlmICggcmVjZWl2ZWRSZXNvdXJjZXMgKSB7XHJcbiAgICAgICAgYXdhaXQgYnJvd3Nlci5jbG9zZSgpO1xyXG4gICAgICAgIHJlc29sdmUoIHJ1bnRpbWVSZXNvdXJjZXMgKTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICBwYWdlLm9uKCAnZXJyb3InLCBtc2cgPT4gcmVqZWN0KCBtc2cgKSApO1xyXG4gICAgcGFnZS5vbiggJ3BhZ2VlcnJvcicsIG1zZyA9PiByZWplY3QoIG1zZyApICk7XHJcblxyXG4gICAgdHJ5IHtcclxuICAgICAgYXdhaXQgcGFnZS5nb3RvKCB1cmwgKTtcclxuICAgIH1cclxuICAgIGNhdGNoKCBlICkge1xyXG4gICAgICByZWplY3QoIGUgKTtcclxuICAgIH1cclxuICB9ICk7XHJcbn07Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFHQSxNQUFNQSxTQUFTLEdBQUdDLE9BQU8sQ0FBRSxXQUFZLENBQUM7QUFFeENDLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHLE1BQU1DLEdBQUcsSUFBSTtFQUU1QixJQUFJQyxnQkFBZ0IsR0FBRyxJQUFJO0VBRTNCLE9BQU8sSUFBSUMsT0FBTyxDQUFFLE9BQVFDLE9BQU8sRUFBRUMsTUFBTSxLQUFNO0lBQUU7O0lBRWpELElBQUlDLGlCQUFpQixHQUFHLEtBQUs7SUFFN0IsTUFBTUMsT0FBTyxHQUFHLE1BQU1WLFNBQVMsQ0FBQ1csTUFBTSxDQUFDLENBQUM7SUFDeEMsTUFBTUMsSUFBSSxHQUFHLE1BQU1GLE9BQU8sQ0FBQ0csT0FBTyxDQUFDLENBQUM7SUFFcENELElBQUksQ0FBQ0UsRUFBRSxDQUFFLFNBQVMsRUFBRSxNQUFNQyxHQUFHLElBQUk7TUFDL0IsSUFBS0EsR0FBRyxDQUFDQyxJQUFJLENBQUMsQ0FBQyxDQUFDQyxPQUFPLENBQUUsdUJBQXdCLENBQUMsSUFBSSxDQUFDLEVBQUc7UUFDeERSLGlCQUFpQixHQUFHLElBQUk7UUFFeEJKLGdCQUFnQixHQUFHLE1BQU1PLElBQUksQ0FBQ00sUUFBUSxDQUFFLE1BQU1DLE1BQU0sQ0FBQ0MscUJBQXFCLENBQUMsQ0FBRSxDQUFDO1FBRTlFLE1BQU1DLFFBQVEsQ0FBRWhCLGdCQUFpQixDQUFDO01BQ3BDLENBQUMsTUFFSSxJQUFLVSxHQUFHLENBQUNPLElBQUksQ0FBQyxDQUFDLEtBQUssT0FBTyxFQUFHO1FBQ2pDLE1BQU1DLFFBQVEsR0FBR1IsR0FBRyxDQUFDUSxRQUFRLEdBQUksUUFBT1IsR0FBRyxDQUFDUSxRQUFRLENBQUMsQ0FBQyxDQUFDbkIsR0FBSSxFQUFDLEdBQUcsRUFBRTtRQUNqRSxNQUFNb0IsT0FBTyxHQUFHVCxHQUFHLENBQUNDLElBQUksQ0FBQyxDQUFDLEdBQUdPLFFBQVE7UUFDckNFLE9BQU8sQ0FBQ0MsS0FBSyxDQUFFLGlCQUFpQixFQUFFRixPQUFRLENBQUM7TUFDN0M7SUFDRixDQUFFLENBQUM7SUFFSCxNQUFNSCxRQUFRLEdBQUcsTUFBTWhCLGdCQUFnQixJQUFJO01BQ3pDLElBQUtJLGlCQUFpQixFQUFHO1FBQ3ZCLE1BQU1DLE9BQU8sQ0FBQ2lCLEtBQUssQ0FBQyxDQUFDO1FBQ3JCcEIsT0FBTyxDQUFFRixnQkFBaUIsQ0FBQztNQUM3QjtJQUNGLENBQUM7SUFFRE8sSUFBSSxDQUFDRSxFQUFFLENBQUUsT0FBTyxFQUFFQyxHQUFHLElBQUlQLE1BQU0sQ0FBRU8sR0FBSSxDQUFFLENBQUM7SUFDeENILElBQUksQ0FBQ0UsRUFBRSxDQUFFLFdBQVcsRUFBRUMsR0FBRyxJQUFJUCxNQUFNLENBQUVPLEdBQUksQ0FBRSxDQUFDO0lBRTVDLElBQUk7TUFDRixNQUFNSCxJQUFJLENBQUNnQixJQUFJLENBQUV4QixHQUFJLENBQUM7SUFDeEIsQ0FBQyxDQUNELE9BQU95QixDQUFDLEVBQUc7TUFDVHJCLE1BQU0sQ0FBRXFCLENBQUUsQ0FBQztJQUNiO0VBQ0YsQ0FBRSxDQUFDO0FBQ0wsQ0FBQyJ9