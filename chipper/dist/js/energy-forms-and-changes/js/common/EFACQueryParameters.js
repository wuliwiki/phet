// Copyright 2018-2020, University of Colorado Boulder

/**
 * query parameters supported by this simulation
 *
 * @author John Blanco
 * @author Chris Klusendorf (PhET Interactive Simulations)
 */

import energyFormsAndChanges from '../energyFormsAndChanges.js';
import EFACConstants from './EFACConstants.js';

// constants
const defaultElements = [EFACConstants.IRON_KEY, EFACConstants.BRICK_KEY, EFACConstants.WATER_KEY, EFACConstants.OLIVE_OIL_KEY];
const EFACQueryParameters = QueryStringMachine.getAll({
  // show the 2D bounds of the block, which is what is actually modeled
  // For internal use only, not public facing.
  show2DBlockBounds: {
    type: 'flag'
  },
  // show the bounds of the air
  // For internal use only, not public facing.
  showAirBounds: {
    type: 'flag'
  },
  // show some shapes that are helpful for debugging, such as the container slices
  // For internal use only, not public facing.
  showHelperShapes: {
    type: 'flag'
  },
  // show the 2D bounds of the beaker
  // For internal use only, not public facing.
  show2DBeakerBounds: {
    type: 'flag'
  },
  // show the normal/fast forward buttons on the first screen
  // For internal use only, not public facing.
  showSpeedControls: {
    type: 'flag'
  },
  // make the first screen burners sticky
  // @public, see https://github.com/phetsims/energy-forms-and-changes/issues/232
  stickyBurners: {
    type: 'flag',
    public: true
  },
  // force the energy chunk distributor to use a particular algorithm
  // For internal use only, not public facing.
  ecDistribution: {
    type: 'string',
    defaultValue: null,
    validValues: [null,
    // use the default
    'repulsive',
    // always use the repulsive algorithm
    'spiral',
    // use the spiral algorithm, which is after than repulsive but doesn't generally look as good
    'simple' // use the simple algorithm, which just puts all chunks in the center of the slice
    ]
  },

  // number of burners to create on startup
  // @public, for phet-io clients
  burners: {
    type: 'number',
    defaultValue: EFACConstants.MAX_NUMBER_OF_INTRO_BURNERS,
    // create an array with integer values 1-N, where N is the max number of burners on the intro screen
    validValues: [...Array(EFACConstants.MAX_NUMBER_OF_INTRO_BURNERS)].map((n, i) => ++i),
    public: true
  },
  // select the startup block configuration
  // @public, for phet-io clients
  elements: {
    type: 'array',
    defaultValue: defaultElements,
    elementSchema: {
      type: 'string'
    },
    isValidValue: values => {
      const beakers = _.filter(values, value => value === EFACConstants.WATER_KEY || value === EFACConstants.OLIVE_OIL_KEY);
      return _.difference(values, defaultElements).length === 0 && values.length <= EFACConstants.MAX_NUMBER_OF_INTRO_ELEMENTS && beakers.length <= EFACConstants.MAX_NUMBER_OF_INTRO_BEAKERS;
    },
    public: true
  }
});
energyFormsAndChanges.register('EFACQueryParameters', EFACQueryParameters);
export default EFACQueryParameters;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJlbmVyZ3lGb3Jtc0FuZENoYW5nZXMiLCJFRkFDQ29uc3RhbnRzIiwiZGVmYXVsdEVsZW1lbnRzIiwiSVJPTl9LRVkiLCJCUklDS19LRVkiLCJXQVRFUl9LRVkiLCJPTElWRV9PSUxfS0VZIiwiRUZBQ1F1ZXJ5UGFyYW1ldGVycyIsIlF1ZXJ5U3RyaW5nTWFjaGluZSIsImdldEFsbCIsInNob3cyREJsb2NrQm91bmRzIiwidHlwZSIsInNob3dBaXJCb3VuZHMiLCJzaG93SGVscGVyU2hhcGVzIiwic2hvdzJEQmVha2VyQm91bmRzIiwic2hvd1NwZWVkQ29udHJvbHMiLCJzdGlja3lCdXJuZXJzIiwicHVibGljIiwiZWNEaXN0cmlidXRpb24iLCJkZWZhdWx0VmFsdWUiLCJ2YWxpZFZhbHVlcyIsImJ1cm5lcnMiLCJNQVhfTlVNQkVSX09GX0lOVFJPX0JVUk5FUlMiLCJBcnJheSIsIm1hcCIsIm4iLCJpIiwiZWxlbWVudHMiLCJlbGVtZW50U2NoZW1hIiwiaXNWYWxpZFZhbHVlIiwidmFsdWVzIiwiYmVha2VycyIsIl8iLCJmaWx0ZXIiLCJ2YWx1ZSIsImRpZmZlcmVuY2UiLCJsZW5ndGgiLCJNQVhfTlVNQkVSX09GX0lOVFJPX0VMRU1FTlRTIiwiTUFYX05VTUJFUl9PRl9JTlRST19CRUFLRVJTIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJFRkFDUXVlcnlQYXJhbWV0ZXJzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE4LTIwMjAsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIHF1ZXJ5IHBhcmFtZXRlcnMgc3VwcG9ydGVkIGJ5IHRoaXMgc2ltdWxhdGlvblxyXG4gKlxyXG4gKiBAYXV0aG9yIEpvaG4gQmxhbmNvXHJcbiAqIEBhdXRob3IgQ2hyaXMgS2x1c2VuZG9yZiAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcclxuICovXHJcblxyXG5pbXBvcnQgZW5lcmd5Rm9ybXNBbmRDaGFuZ2VzIGZyb20gJy4uL2VuZXJneUZvcm1zQW5kQ2hhbmdlcy5qcyc7XHJcbmltcG9ydCBFRkFDQ29uc3RhbnRzIGZyb20gJy4vRUZBQ0NvbnN0YW50cy5qcyc7XHJcblxyXG4vLyBjb25zdGFudHNcclxuY29uc3QgZGVmYXVsdEVsZW1lbnRzID0gWyBFRkFDQ29uc3RhbnRzLklST05fS0VZLCBFRkFDQ29uc3RhbnRzLkJSSUNLX0tFWSwgRUZBQ0NvbnN0YW50cy5XQVRFUl9LRVksIEVGQUNDb25zdGFudHMuT0xJVkVfT0lMX0tFWSBdO1xyXG5cclxuY29uc3QgRUZBQ1F1ZXJ5UGFyYW1ldGVycyA9IFF1ZXJ5U3RyaW5nTWFjaGluZS5nZXRBbGwoIHtcclxuXHJcbiAgLy8gc2hvdyB0aGUgMkQgYm91bmRzIG9mIHRoZSBibG9jaywgd2hpY2ggaXMgd2hhdCBpcyBhY3R1YWxseSBtb2RlbGVkXHJcbiAgLy8gRm9yIGludGVybmFsIHVzZSBvbmx5LCBub3QgcHVibGljIGZhY2luZy5cclxuICBzaG93MkRCbG9ja0JvdW5kczogeyB0eXBlOiAnZmxhZycgfSxcclxuXHJcbiAgLy8gc2hvdyB0aGUgYm91bmRzIG9mIHRoZSBhaXJcclxuICAvLyBGb3IgaW50ZXJuYWwgdXNlIG9ubHksIG5vdCBwdWJsaWMgZmFjaW5nLlxyXG4gIHNob3dBaXJCb3VuZHM6IHsgdHlwZTogJ2ZsYWcnIH0sXHJcblxyXG4gIC8vIHNob3cgc29tZSBzaGFwZXMgdGhhdCBhcmUgaGVscGZ1bCBmb3IgZGVidWdnaW5nLCBzdWNoIGFzIHRoZSBjb250YWluZXIgc2xpY2VzXHJcbiAgLy8gRm9yIGludGVybmFsIHVzZSBvbmx5LCBub3QgcHVibGljIGZhY2luZy5cclxuICBzaG93SGVscGVyU2hhcGVzOiB7IHR5cGU6ICdmbGFnJyB9LFxyXG5cclxuICAvLyBzaG93IHRoZSAyRCBib3VuZHMgb2YgdGhlIGJlYWtlclxyXG4gIC8vIEZvciBpbnRlcm5hbCB1c2Ugb25seSwgbm90IHB1YmxpYyBmYWNpbmcuXHJcbiAgc2hvdzJEQmVha2VyQm91bmRzOiB7IHR5cGU6ICdmbGFnJyB9LFxyXG5cclxuICAvLyBzaG93IHRoZSBub3JtYWwvZmFzdCBmb3J3YXJkIGJ1dHRvbnMgb24gdGhlIGZpcnN0IHNjcmVlblxyXG4gIC8vIEZvciBpbnRlcm5hbCB1c2Ugb25seSwgbm90IHB1YmxpYyBmYWNpbmcuXHJcbiAgc2hvd1NwZWVkQ29udHJvbHM6IHsgdHlwZTogJ2ZsYWcnIH0sXHJcblxyXG4gIC8vIG1ha2UgdGhlIGZpcnN0IHNjcmVlbiBidXJuZXJzIHN0aWNreVxyXG4gIC8vIEBwdWJsaWMsIHNlZSBodHRwczovL2dpdGh1Yi5jb20vcGhldHNpbXMvZW5lcmd5LWZvcm1zLWFuZC1jaGFuZ2VzL2lzc3Vlcy8yMzJcclxuICBzdGlja3lCdXJuZXJzOiB7XHJcbiAgICB0eXBlOiAnZmxhZycsXHJcbiAgICBwdWJsaWM6IHRydWVcclxuICB9LFxyXG5cclxuICAvLyBmb3JjZSB0aGUgZW5lcmd5IGNodW5rIGRpc3RyaWJ1dG9yIHRvIHVzZSBhIHBhcnRpY3VsYXIgYWxnb3JpdGhtXHJcbiAgLy8gRm9yIGludGVybmFsIHVzZSBvbmx5LCBub3QgcHVibGljIGZhY2luZy5cclxuICBlY0Rpc3RyaWJ1dGlvbjoge1xyXG4gICAgdHlwZTogJ3N0cmluZycsXHJcbiAgICBkZWZhdWx0VmFsdWU6IG51bGwsXHJcbiAgICB2YWxpZFZhbHVlczogW1xyXG4gICAgICBudWxsLCAvLyB1c2UgdGhlIGRlZmF1bHRcclxuICAgICAgJ3JlcHVsc2l2ZScsIC8vIGFsd2F5cyB1c2UgdGhlIHJlcHVsc2l2ZSBhbGdvcml0aG1cclxuICAgICAgJ3NwaXJhbCcsIC8vIHVzZSB0aGUgc3BpcmFsIGFsZ29yaXRobSwgd2hpY2ggaXMgYWZ0ZXIgdGhhbiByZXB1bHNpdmUgYnV0IGRvZXNuJ3QgZ2VuZXJhbGx5IGxvb2sgYXMgZ29vZFxyXG4gICAgICAnc2ltcGxlJyAvLyB1c2UgdGhlIHNpbXBsZSBhbGdvcml0aG0sIHdoaWNoIGp1c3QgcHV0cyBhbGwgY2h1bmtzIGluIHRoZSBjZW50ZXIgb2YgdGhlIHNsaWNlXHJcbiAgICBdXHJcbiAgfSxcclxuXHJcbiAgLy8gbnVtYmVyIG9mIGJ1cm5lcnMgdG8gY3JlYXRlIG9uIHN0YXJ0dXBcclxuICAvLyBAcHVibGljLCBmb3IgcGhldC1pbyBjbGllbnRzXHJcbiAgYnVybmVyczoge1xyXG4gICAgdHlwZTogJ251bWJlcicsXHJcbiAgICBkZWZhdWx0VmFsdWU6IEVGQUNDb25zdGFudHMuTUFYX05VTUJFUl9PRl9JTlRST19CVVJORVJTLFxyXG5cclxuICAgIC8vIGNyZWF0ZSBhbiBhcnJheSB3aXRoIGludGVnZXIgdmFsdWVzIDEtTiwgd2hlcmUgTiBpcyB0aGUgbWF4IG51bWJlciBvZiBidXJuZXJzIG9uIHRoZSBpbnRybyBzY3JlZW5cclxuICAgIHZhbGlkVmFsdWVzOiBbIC4uLkFycmF5KCBFRkFDQ29uc3RhbnRzLk1BWF9OVU1CRVJfT0ZfSU5UUk9fQlVSTkVSUyApIF0ubWFwKCAoIG4sIGkgKSA9PiArK2kgKSxcclxuICAgIHB1YmxpYzogdHJ1ZVxyXG4gIH0sXHJcblxyXG4gIC8vIHNlbGVjdCB0aGUgc3RhcnR1cCBibG9jayBjb25maWd1cmF0aW9uXHJcbiAgLy8gQHB1YmxpYywgZm9yIHBoZXQtaW8gY2xpZW50c1xyXG4gIGVsZW1lbnRzOiB7XHJcbiAgICB0eXBlOiAnYXJyYXknLFxyXG4gICAgZGVmYXVsdFZhbHVlOiBkZWZhdWx0RWxlbWVudHMsXHJcbiAgICBlbGVtZW50U2NoZW1hOiB7IHR5cGU6ICdzdHJpbmcnIH0sXHJcbiAgICBpc1ZhbGlkVmFsdWU6IHZhbHVlcyA9PiB7XHJcbiAgICAgIGNvbnN0IGJlYWtlcnMgPSBfLmZpbHRlciggdmFsdWVzLCB2YWx1ZSA9PiB2YWx1ZSA9PT0gRUZBQ0NvbnN0YW50cy5XQVRFUl9LRVkgfHwgdmFsdWUgPT09IEVGQUNDb25zdGFudHMuT0xJVkVfT0lMX0tFWSApO1xyXG5cclxuICAgICAgcmV0dXJuIF8uZGlmZmVyZW5jZSggdmFsdWVzLCBkZWZhdWx0RWxlbWVudHMgKS5sZW5ndGggPT09IDAgJiZcclxuICAgICAgICAgICAgIHZhbHVlcy5sZW5ndGggPD0gRUZBQ0NvbnN0YW50cy5NQVhfTlVNQkVSX09GX0lOVFJPX0VMRU1FTlRTICYmXHJcbiAgICAgICAgICAgICBiZWFrZXJzLmxlbmd0aCA8PSBFRkFDQ29uc3RhbnRzLk1BWF9OVU1CRVJfT0ZfSU5UUk9fQkVBS0VSUztcclxuICAgIH0sXHJcbiAgICBwdWJsaWM6IHRydWVcclxuICB9XHJcblxyXG59ICk7XHJcblxyXG5lbmVyZ3lGb3Jtc0FuZENoYW5nZXMucmVnaXN0ZXIoICdFRkFDUXVlcnlQYXJhbWV0ZXJzJywgRUZBQ1F1ZXJ5UGFyYW1ldGVycyApO1xyXG5leHBvcnQgZGVmYXVsdCBFRkFDUXVlcnlQYXJhbWV0ZXJzOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLHFCQUFxQixNQUFNLDZCQUE2QjtBQUMvRCxPQUFPQyxhQUFhLE1BQU0sb0JBQW9COztBQUU5QztBQUNBLE1BQU1DLGVBQWUsR0FBRyxDQUFFRCxhQUFhLENBQUNFLFFBQVEsRUFBRUYsYUFBYSxDQUFDRyxTQUFTLEVBQUVILGFBQWEsQ0FBQ0ksU0FBUyxFQUFFSixhQUFhLENBQUNLLGFBQWEsQ0FBRTtBQUVqSSxNQUFNQyxtQkFBbUIsR0FBR0Msa0JBQWtCLENBQUNDLE1BQU0sQ0FBRTtFQUVyRDtFQUNBO0VBQ0FDLGlCQUFpQixFQUFFO0lBQUVDLElBQUksRUFBRTtFQUFPLENBQUM7RUFFbkM7RUFDQTtFQUNBQyxhQUFhLEVBQUU7SUFBRUQsSUFBSSxFQUFFO0VBQU8sQ0FBQztFQUUvQjtFQUNBO0VBQ0FFLGdCQUFnQixFQUFFO0lBQUVGLElBQUksRUFBRTtFQUFPLENBQUM7RUFFbEM7RUFDQTtFQUNBRyxrQkFBa0IsRUFBRTtJQUFFSCxJQUFJLEVBQUU7RUFBTyxDQUFDO0VBRXBDO0VBQ0E7RUFDQUksaUJBQWlCLEVBQUU7SUFBRUosSUFBSSxFQUFFO0VBQU8sQ0FBQztFQUVuQztFQUNBO0VBQ0FLLGFBQWEsRUFBRTtJQUNiTCxJQUFJLEVBQUUsTUFBTTtJQUNaTSxNQUFNLEVBQUU7RUFDVixDQUFDO0VBRUQ7RUFDQTtFQUNBQyxjQUFjLEVBQUU7SUFDZFAsSUFBSSxFQUFFLFFBQVE7SUFDZFEsWUFBWSxFQUFFLElBQUk7SUFDbEJDLFdBQVcsRUFBRSxDQUNYLElBQUk7SUFBRTtJQUNOLFdBQVc7SUFBRTtJQUNiLFFBQVE7SUFBRTtJQUNWLFFBQVEsQ0FBQztJQUFBO0VBRWIsQ0FBQzs7RUFFRDtFQUNBO0VBQ0FDLE9BQU8sRUFBRTtJQUNQVixJQUFJLEVBQUUsUUFBUTtJQUNkUSxZQUFZLEVBQUVsQixhQUFhLENBQUNxQiwyQkFBMkI7SUFFdkQ7SUFDQUYsV0FBVyxFQUFFLENBQUUsR0FBR0csS0FBSyxDQUFFdEIsYUFBYSxDQUFDcUIsMkJBQTRCLENBQUMsQ0FBRSxDQUFDRSxHQUFHLENBQUUsQ0FBRUMsQ0FBQyxFQUFFQyxDQUFDLEtBQU0sRUFBRUEsQ0FBRSxDQUFDO0lBQzdGVCxNQUFNLEVBQUU7RUFDVixDQUFDO0VBRUQ7RUFDQTtFQUNBVSxRQUFRLEVBQUU7SUFDUmhCLElBQUksRUFBRSxPQUFPO0lBQ2JRLFlBQVksRUFBRWpCLGVBQWU7SUFDN0IwQixhQUFhLEVBQUU7TUFBRWpCLElBQUksRUFBRTtJQUFTLENBQUM7SUFDakNrQixZQUFZLEVBQUVDLE1BQU0sSUFBSTtNQUN0QixNQUFNQyxPQUFPLEdBQUdDLENBQUMsQ0FBQ0MsTUFBTSxDQUFFSCxNQUFNLEVBQUVJLEtBQUssSUFBSUEsS0FBSyxLQUFLakMsYUFBYSxDQUFDSSxTQUFTLElBQUk2QixLQUFLLEtBQUtqQyxhQUFhLENBQUNLLGFBQWMsQ0FBQztNQUV2SCxPQUFPMEIsQ0FBQyxDQUFDRyxVQUFVLENBQUVMLE1BQU0sRUFBRTVCLGVBQWdCLENBQUMsQ0FBQ2tDLE1BQU0sS0FBSyxDQUFDLElBQ3BETixNQUFNLENBQUNNLE1BQU0sSUFBSW5DLGFBQWEsQ0FBQ29DLDRCQUE0QixJQUMzRE4sT0FBTyxDQUFDSyxNQUFNLElBQUluQyxhQUFhLENBQUNxQywyQkFBMkI7SUFDcEUsQ0FBQztJQUNEckIsTUFBTSxFQUFFO0VBQ1Y7QUFFRixDQUFFLENBQUM7QUFFSGpCLHFCQUFxQixDQUFDdUMsUUFBUSxDQUFFLHFCQUFxQixFQUFFaEMsbUJBQW9CLENBQUM7QUFDNUUsZUFBZUEsbUJBQW1CIn0=