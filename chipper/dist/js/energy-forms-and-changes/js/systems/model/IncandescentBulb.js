// Copyright 2016-2022, University of Colorado Boulder

/**
 * a type that models an incandescent light bulb in an energy system
 *
 * @author John Blanco
 * @author Andrew Adare
 */

import merge from '../../../../phet-core/js/merge.js';
import { Image } from '../../../../scenery/js/imports.js';
import Tandem from '../../../../tandem/js/Tandem.js';
import incandescentIcon_png from '../../../images/incandescentIcon_png.js';
import energyFormsAndChanges from '../../energyFormsAndChanges.js';
import EnergyFormsAndChangesStrings from '../../EnergyFormsAndChangesStrings.js';
import LightBulb from './LightBulb.js';
class IncandescentBulb extends LightBulb {
  /**
   * @param {BooleanProperty} energyChunksVisibleProperty
   * @param {EnergyChunkGroup} energyChunkGroup
   * @param {EnergyChunkPathMoverGroup} energyChunkPathMoverGroup
   * @param {Object} [options]
   */
  constructor(energyChunksVisibleProperty, energyChunkGroup, energyChunkPathMoverGroup, options) {
    options = merge({
      tandem: Tandem.REQUIRED
    }, options);
    super(new Image(incandescentIcon_png), true, energyChunksVisibleProperty, energyChunkGroup, energyChunkPathMoverGroup, options);

    // @public {string} - a11y name
    this.a11yName = EnergyFormsAndChangesStrings.a11y.incandescentLightBulb;
  }
}
energyFormsAndChanges.register('IncandescentBulb', IncandescentBulb);
export default IncandescentBulb;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtZXJnZSIsIkltYWdlIiwiVGFuZGVtIiwiaW5jYW5kZXNjZW50SWNvbl9wbmciLCJlbmVyZ3lGb3Jtc0FuZENoYW5nZXMiLCJFbmVyZ3lGb3Jtc0FuZENoYW5nZXNTdHJpbmdzIiwiTGlnaHRCdWxiIiwiSW5jYW5kZXNjZW50QnVsYiIsImNvbnN0cnVjdG9yIiwiZW5lcmd5Q2h1bmtzVmlzaWJsZVByb3BlcnR5IiwiZW5lcmd5Q2h1bmtHcm91cCIsImVuZXJneUNodW5rUGF0aE1vdmVyR3JvdXAiLCJvcHRpb25zIiwidGFuZGVtIiwiUkVRVUlSRUQiLCJhMTF5TmFtZSIsImExMXkiLCJpbmNhbmRlc2NlbnRMaWdodEJ1bGIiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIkluY2FuZGVzY2VudEJ1bGIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTYtMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogYSB0eXBlIHRoYXQgbW9kZWxzIGFuIGluY2FuZGVzY2VudCBsaWdodCBidWxiIGluIGFuIGVuZXJneSBzeXN0ZW1cclxuICpcclxuICogQGF1dGhvciBKb2huIEJsYW5jb1xyXG4gKiBAYXV0aG9yIEFuZHJldyBBZGFyZVxyXG4gKi9cclxuXHJcbmltcG9ydCBtZXJnZSBmcm9tICcuLi8uLi8uLi8uLi9waGV0LWNvcmUvanMvbWVyZ2UuanMnO1xyXG5pbXBvcnQgeyBJbWFnZSB9IGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XHJcbmltcG9ydCBUYW5kZW0gZnJvbSAnLi4vLi4vLi4vLi4vdGFuZGVtL2pzL1RhbmRlbS5qcyc7XHJcbmltcG9ydCBpbmNhbmRlc2NlbnRJY29uX3BuZyBmcm9tICcuLi8uLi8uLi9pbWFnZXMvaW5jYW5kZXNjZW50SWNvbl9wbmcuanMnO1xyXG5pbXBvcnQgZW5lcmd5Rm9ybXNBbmRDaGFuZ2VzIGZyb20gJy4uLy4uL2VuZXJneUZvcm1zQW5kQ2hhbmdlcy5qcyc7XHJcbmltcG9ydCBFbmVyZ3lGb3Jtc0FuZENoYW5nZXNTdHJpbmdzIGZyb20gJy4uLy4uL0VuZXJneUZvcm1zQW5kQ2hhbmdlc1N0cmluZ3MuanMnO1xyXG5pbXBvcnQgTGlnaHRCdWxiIGZyb20gJy4vTGlnaHRCdWxiLmpzJztcclxuXHJcbmNsYXNzIEluY2FuZGVzY2VudEJ1bGIgZXh0ZW5kcyBMaWdodEJ1bGIge1xyXG5cclxuICAvKipcclxuICAgKiBAcGFyYW0ge0Jvb2xlYW5Qcm9wZXJ0eX0gZW5lcmd5Q2h1bmtzVmlzaWJsZVByb3BlcnR5XHJcbiAgICogQHBhcmFtIHtFbmVyZ3lDaHVua0dyb3VwfSBlbmVyZ3lDaHVua0dyb3VwXHJcbiAgICogQHBhcmFtIHtFbmVyZ3lDaHVua1BhdGhNb3Zlckdyb3VwfSBlbmVyZ3lDaHVua1BhdGhNb3Zlckdyb3VwXHJcbiAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxyXG4gICAqL1xyXG4gIGNvbnN0cnVjdG9yKCBlbmVyZ3lDaHVua3NWaXNpYmxlUHJvcGVydHksIGVuZXJneUNodW5rR3JvdXAsIGVuZXJneUNodW5rUGF0aE1vdmVyR3JvdXAsIG9wdGlvbnMgKSB7XHJcblxyXG4gICAgb3B0aW9ucyA9IG1lcmdlKCB7XHJcbiAgICAgIHRhbmRlbTogVGFuZGVtLlJFUVVJUkVEXHJcbiAgICB9LCBvcHRpb25zICk7XHJcblxyXG4gICAgc3VwZXIoIG5ldyBJbWFnZSggaW5jYW5kZXNjZW50SWNvbl9wbmcgKSwgdHJ1ZSwgZW5lcmd5Q2h1bmtzVmlzaWJsZVByb3BlcnR5LCBlbmVyZ3lDaHVua0dyb3VwLCBlbmVyZ3lDaHVua1BhdGhNb3Zlckdyb3VwLCBvcHRpb25zICk7XHJcblxyXG4gICAgLy8gQHB1YmxpYyB7c3RyaW5nfSAtIGExMXkgbmFtZVxyXG4gICAgdGhpcy5hMTF5TmFtZSA9IEVuZXJneUZvcm1zQW5kQ2hhbmdlc1N0cmluZ3MuYTExeS5pbmNhbmRlc2NlbnRMaWdodEJ1bGI7XHJcbiAgfVxyXG59XHJcblxyXG5lbmVyZ3lGb3Jtc0FuZENoYW5nZXMucmVnaXN0ZXIoICdJbmNhbmRlc2NlbnRCdWxiJywgSW5jYW5kZXNjZW50QnVsYiApO1xyXG5leHBvcnQgZGVmYXVsdCBJbmNhbmRlc2NlbnRCdWxiOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLEtBQUssTUFBTSxtQ0FBbUM7QUFDckQsU0FBU0MsS0FBSyxRQUFRLG1DQUFtQztBQUN6RCxPQUFPQyxNQUFNLE1BQU0saUNBQWlDO0FBQ3BELE9BQU9DLG9CQUFvQixNQUFNLHlDQUF5QztBQUMxRSxPQUFPQyxxQkFBcUIsTUFBTSxnQ0FBZ0M7QUFDbEUsT0FBT0MsNEJBQTRCLE1BQU0sdUNBQXVDO0FBQ2hGLE9BQU9DLFNBQVMsTUFBTSxnQkFBZ0I7QUFFdEMsTUFBTUMsZ0JBQWdCLFNBQVNELFNBQVMsQ0FBQztFQUV2QztBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7RUFDRUUsV0FBV0EsQ0FBRUMsMkJBQTJCLEVBQUVDLGdCQUFnQixFQUFFQyx5QkFBeUIsRUFBRUMsT0FBTyxFQUFHO0lBRS9GQSxPQUFPLEdBQUdaLEtBQUssQ0FBRTtNQUNmYSxNQUFNLEVBQUVYLE1BQU0sQ0FBQ1k7SUFDakIsQ0FBQyxFQUFFRixPQUFRLENBQUM7SUFFWixLQUFLLENBQUUsSUFBSVgsS0FBSyxDQUFFRSxvQkFBcUIsQ0FBQyxFQUFFLElBQUksRUFBRU0sMkJBQTJCLEVBQUVDLGdCQUFnQixFQUFFQyx5QkFBeUIsRUFBRUMsT0FBUSxDQUFDOztJQUVuSTtJQUNBLElBQUksQ0FBQ0csUUFBUSxHQUFHViw0QkFBNEIsQ0FBQ1csSUFBSSxDQUFDQyxxQkFBcUI7RUFDekU7QUFDRjtBQUVBYixxQkFBcUIsQ0FBQ2MsUUFBUSxDQUFFLGtCQUFrQixFQUFFWCxnQkFBaUIsQ0FBQztBQUN0RSxlQUFlQSxnQkFBZ0IifQ==