// Copyright 2020-2022, University of Colorado Boulder

/**
 * Auto-generated from modulify, DO NOT manually modify.
 */
/* eslint-disable */
import getStringModule from '../../chipper/js/getStringModule.js';
import inverseSquareLawCommon from './inverseSquareLawCommon.js';
const InverseSquareLawCommonStrings = getStringModule('INVERSE_SQUARE_LAW_COMMON');
inverseSquareLawCommon.register('InverseSquareLawCommonStrings', InverseSquareLawCommonStrings);
export default InverseSquareLawCommonStrings;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,