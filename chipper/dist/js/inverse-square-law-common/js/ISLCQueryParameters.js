// Copyright 2017-2021, University of Colorado Boulder

/**
 * Query parameters for inverse-square-law-common
 *
 * @author Jesse Greenberg
 */

import inverseSquareLawCommon from './inverseSquareLawCommon.js';
const ISLCQueryParameters = QueryStringMachine.getAll({
  // when flagged, shows a grid in the ScreenView that visualizes the possible positions
  // for the objects (kept after code review for future development debugging)
  showGrid: {
    type: 'flag'
  },
  // Add horizontal lines at the ruler region boundaries, add crosshairs on the ruler so you can see the point that
  // is being tested, and print the region names to the console, so you can see them in the developer tools.
  showRulerRegions: {
    type: 'flag'
  },
  // Shows boundary positions of the two objects, as .  The boundary positions for each
  // object will change depending on the size and position of both objects.
  showDragBounds: {
    type: 'flag'
  }
});
inverseSquareLawCommon.register('ISLCQueryParameters', ISLCQueryParameters);
export default ISLCQueryParameters;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJpbnZlcnNlU3F1YXJlTGF3Q29tbW9uIiwiSVNMQ1F1ZXJ5UGFyYW1ldGVycyIsIlF1ZXJ5U3RyaW5nTWFjaGluZSIsImdldEFsbCIsInNob3dHcmlkIiwidHlwZSIsInNob3dSdWxlclJlZ2lvbnMiLCJzaG93RHJhZ0JvdW5kcyIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiSVNMQ1F1ZXJ5UGFyYW1ldGVycy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxNy0yMDIxLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBRdWVyeSBwYXJhbWV0ZXJzIGZvciBpbnZlcnNlLXNxdWFyZS1sYXctY29tbW9uXHJcbiAqXHJcbiAqIEBhdXRob3IgSmVzc2UgR3JlZW5iZXJnXHJcbiAqL1xyXG5cclxuaW1wb3J0IGludmVyc2VTcXVhcmVMYXdDb21tb24gZnJvbSAnLi9pbnZlcnNlU3F1YXJlTGF3Q29tbW9uLmpzJztcclxuXHJcbmNvbnN0IElTTENRdWVyeVBhcmFtZXRlcnMgPSBRdWVyeVN0cmluZ01hY2hpbmUuZ2V0QWxsKCB7XHJcblxyXG4gIC8vIHdoZW4gZmxhZ2dlZCwgc2hvd3MgYSBncmlkIGluIHRoZSBTY3JlZW5WaWV3IHRoYXQgdmlzdWFsaXplcyB0aGUgcG9zc2libGUgcG9zaXRpb25zXHJcbiAgLy8gZm9yIHRoZSBvYmplY3RzIChrZXB0IGFmdGVyIGNvZGUgcmV2aWV3IGZvciBmdXR1cmUgZGV2ZWxvcG1lbnQgZGVidWdnaW5nKVxyXG4gIHNob3dHcmlkOiB7XHJcbiAgICB0eXBlOiAnZmxhZydcclxuICB9LFxyXG5cclxuICAvLyBBZGQgaG9yaXpvbnRhbCBsaW5lcyBhdCB0aGUgcnVsZXIgcmVnaW9uIGJvdW5kYXJpZXMsIGFkZCBjcm9zc2hhaXJzIG9uIHRoZSBydWxlciBzbyB5b3UgY2FuIHNlZSB0aGUgcG9pbnQgdGhhdFxyXG4gIC8vIGlzIGJlaW5nIHRlc3RlZCwgYW5kIHByaW50IHRoZSByZWdpb24gbmFtZXMgdG8gdGhlIGNvbnNvbGUsIHNvIHlvdSBjYW4gc2VlIHRoZW0gaW4gdGhlIGRldmVsb3BlciB0b29scy5cclxuICBzaG93UnVsZXJSZWdpb25zOiB7XHJcbiAgICB0eXBlOiAnZmxhZydcclxuICB9LFxyXG5cclxuICAvLyBTaG93cyBib3VuZGFyeSBwb3NpdGlvbnMgb2YgdGhlIHR3byBvYmplY3RzLCBhcyAuICBUaGUgYm91bmRhcnkgcG9zaXRpb25zIGZvciBlYWNoXHJcbiAgLy8gb2JqZWN0IHdpbGwgY2hhbmdlIGRlcGVuZGluZyBvbiB0aGUgc2l6ZSBhbmQgcG9zaXRpb24gb2YgYm90aCBvYmplY3RzLlxyXG4gIHNob3dEcmFnQm91bmRzOiB7IHR5cGU6ICdmbGFnJyB9XHJcbn0gKTtcclxuXHJcbmludmVyc2VTcXVhcmVMYXdDb21tb24ucmVnaXN0ZXIoICdJU0xDUXVlcnlQYXJhbWV0ZXJzJywgSVNMQ1F1ZXJ5UGFyYW1ldGVycyApO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgSVNMQ1F1ZXJ5UGFyYW1ldGVyczsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0Esc0JBQXNCLE1BQU0sNkJBQTZCO0FBRWhFLE1BQU1DLG1CQUFtQixHQUFHQyxrQkFBa0IsQ0FBQ0MsTUFBTSxDQUFFO0VBRXJEO0VBQ0E7RUFDQUMsUUFBUSxFQUFFO0lBQ1JDLElBQUksRUFBRTtFQUNSLENBQUM7RUFFRDtFQUNBO0VBQ0FDLGdCQUFnQixFQUFFO0lBQ2hCRCxJQUFJLEVBQUU7RUFDUixDQUFDO0VBRUQ7RUFDQTtFQUNBRSxjQUFjLEVBQUU7SUFBRUYsSUFBSSxFQUFFO0VBQU87QUFDakMsQ0FBRSxDQUFDO0FBRUhMLHNCQUFzQixDQUFDUSxRQUFRLENBQUUscUJBQXFCLEVBQUVQLG1CQUFvQixDQUFDO0FBRTdFLGVBQWVBLG1CQUFtQiJ9