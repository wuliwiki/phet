// Copyright 2022-2023, University of Colorado Boulder

/**
 * Button with a curved back arrow (points left) that can indicate returning an object to a location, or undoing a behavior.
 *
 * @author Jonathan Olson <jonathan.olson@colorado.edu>
 * @author Chris Klusendorf (PhET Interactive Simulations)
 * @author Luisa Vargas
 */

import optionize from '../../../phet-core/js/optionize.js';
import RectangularPushButton from '../../../sun/js/buttons/RectangularPushButton.js';
import { Color, Path } from '../../../scenery/js/imports.js';
import sceneryPhet from '../sceneryPhet.js';
import { Shape } from '../../../kite/js/imports.js';
const ICON_HEIGHT = 17;
class ReturnButton extends RectangularPushButton {
  constructor(listener, providedOptions) {
    const options = optionize()({
      xMargin: 5,
      yMargin: 5,
      baseColor: Color.YELLOW,
      listener: listener
    }, providedOptions);
    const backArrowShape = new Shape().moveTo(0, 0).lineTo(0, ICON_HEIGHT).lineTo(ICON_HEIGHT, ICON_HEIGHT).lineTo(ICON_HEIGHT * 0.7, ICON_HEIGHT * 0.7).quadraticCurveTo(ICON_HEIGHT * 1.25, -ICON_HEIGHT * 0.1, ICON_HEIGHT * 2, ICON_HEIGHT * 0.75).quadraticCurveTo(ICON_HEIGHT * 1.25, -ICON_HEIGHT * 0.5, ICON_HEIGHT * 0.3, ICON_HEIGHT * 0.3).close();
    const backArrowPath = new Path(backArrowShape, {
      fill: 'black',
      scale: 0.7
    });
    options.content = backArrowPath;
    super(options);
  }
}
sceneryPhet.register('ReturnButton', ReturnButton);
export default ReturnButton;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJvcHRpb25pemUiLCJSZWN0YW5ndWxhclB1c2hCdXR0b24iLCJDb2xvciIsIlBhdGgiLCJzY2VuZXJ5UGhldCIsIlNoYXBlIiwiSUNPTl9IRUlHSFQiLCJSZXR1cm5CdXR0b24iLCJjb25zdHJ1Y3RvciIsImxpc3RlbmVyIiwicHJvdmlkZWRPcHRpb25zIiwib3B0aW9ucyIsInhNYXJnaW4iLCJ5TWFyZ2luIiwiYmFzZUNvbG9yIiwiWUVMTE9XIiwiYmFja0Fycm93U2hhcGUiLCJtb3ZlVG8iLCJsaW5lVG8iLCJxdWFkcmF0aWNDdXJ2ZVRvIiwiY2xvc2UiLCJiYWNrQXJyb3dQYXRoIiwiZmlsbCIsInNjYWxlIiwiY29udGVudCIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiUmV0dXJuQnV0dG9uLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIyLTIwMjMsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIEJ1dHRvbiB3aXRoIGEgY3VydmVkIGJhY2sgYXJyb3cgKHBvaW50cyBsZWZ0KSB0aGF0IGNhbiBpbmRpY2F0ZSByZXR1cm5pbmcgYW4gb2JqZWN0IHRvIGEgbG9jYXRpb24sIG9yIHVuZG9pbmcgYSBiZWhhdmlvci5cclxuICpcclxuICogQGF1dGhvciBKb25hdGhhbiBPbHNvbiA8am9uYXRoYW4ub2xzb25AY29sb3JhZG8uZWR1PlxyXG4gKiBAYXV0aG9yIENocmlzIEtsdXNlbmRvcmYgKFBoRVQgSW50ZXJhY3RpdmUgU2ltdWxhdGlvbnMpXHJcbiAqIEBhdXRob3IgTHVpc2EgVmFyZ2FzXHJcbiAqL1xyXG5cclxuaW1wb3J0IG9wdGlvbml6ZSwgeyBFbXB0eVNlbGZPcHRpb25zIH0gZnJvbSAnLi4vLi4vLi4vcGhldC1jb3JlL2pzL29wdGlvbml6ZS5qcyc7XHJcbmltcG9ydCBSZWN0YW5ndWxhclB1c2hCdXR0b24sIHsgUmVjdGFuZ3VsYXJQdXNoQnV0dG9uT3B0aW9ucyB9IGZyb20gJy4uLy4uLy4uL3N1bi9qcy9idXR0b25zL1JlY3Rhbmd1bGFyUHVzaEJ1dHRvbi5qcyc7XHJcbmltcG9ydCB7IENvbG9yLCBQYXRoIH0gZnJvbSAnLi4vLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IFN0cmljdE9taXQgZnJvbSAnLi4vLi4vLi4vcGhldC1jb3JlL2pzL3R5cGVzL1N0cmljdE9taXQuanMnO1xyXG5pbXBvcnQgc2NlbmVyeVBoZXQgZnJvbSAnLi4vc2NlbmVyeVBoZXQuanMnO1xyXG5pbXBvcnQgeyBTaGFwZSB9IGZyb20gJy4uLy4uLy4uL2tpdGUvanMvaW1wb3J0cy5qcyc7XHJcblxyXG5jb25zdCBJQ09OX0hFSUdIVCA9IDE3O1xyXG5cclxudHlwZSBTZWxmT3B0aW9ucyA9IEVtcHR5U2VsZk9wdGlvbnM7XHJcbnR5cGUgUmV0dXJuQnV0dG9uU2VsZk9wdGlvbnMgPSBTZWxmT3B0aW9ucyAmIFN0cmljdE9taXQ8UmVjdGFuZ3VsYXJQdXNoQnV0dG9uT3B0aW9ucywgJ2NvbnRlbnQnPjtcclxuXHJcbmNsYXNzIFJldHVybkJ1dHRvbiBleHRlbmRzIFJlY3Rhbmd1bGFyUHVzaEJ1dHRvbiB7XHJcblxyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvciggbGlzdGVuZXI6ICgpID0+IHZvaWQsIHByb3ZpZGVkT3B0aW9ucz86IFJldHVybkJ1dHRvblNlbGZPcHRpb25zICkge1xyXG5cclxuICAgIGNvbnN0IG9wdGlvbnMgPSBvcHRpb25pemU8UmV0dXJuQnV0dG9uU2VsZk9wdGlvbnMsIFNlbGZPcHRpb25zLCBSZWN0YW5ndWxhclB1c2hCdXR0b25PcHRpb25zPigpKCB7XHJcbiAgICAgIHhNYXJnaW46IDUsXHJcbiAgICAgIHlNYXJnaW46IDUsXHJcbiAgICAgIGJhc2VDb2xvcjogQ29sb3IuWUVMTE9XLFxyXG4gICAgICBsaXN0ZW5lcjogbGlzdGVuZXJcclxuICAgIH0sIHByb3ZpZGVkT3B0aW9ucyApO1xyXG5cclxuICAgIGNvbnN0IGJhY2tBcnJvd1NoYXBlID0gbmV3IFNoYXBlKClcclxuICAgICAgLm1vdmVUbyggMCwgMCApXHJcbiAgICAgIC5saW5lVG8oIDAsIElDT05fSEVJR0hUIClcclxuICAgICAgLmxpbmVUbyggSUNPTl9IRUlHSFQsIElDT05fSEVJR0hUIClcclxuICAgICAgLmxpbmVUbyggSUNPTl9IRUlHSFQgKiAwLjcsIElDT05fSEVJR0hUICogMC43IClcclxuICAgICAgLnF1YWRyYXRpY0N1cnZlVG8oIElDT05fSEVJR0hUICogMS4yNSwgLUlDT05fSEVJR0hUICogMC4xLCBJQ09OX0hFSUdIVCAqIDIsIElDT05fSEVJR0hUICogMC43NSApXHJcbiAgICAgIC5xdWFkcmF0aWNDdXJ2ZVRvKCBJQ09OX0hFSUdIVCAqIDEuMjUsIC1JQ09OX0hFSUdIVCAqIDAuNSwgSUNPTl9IRUlHSFQgKiAwLjMsIElDT05fSEVJR0hUICogMC4zIClcclxuICAgICAgLmNsb3NlKCk7XHJcblxyXG4gICAgY29uc3QgYmFja0Fycm93UGF0aCA9IG5ldyBQYXRoKCBiYWNrQXJyb3dTaGFwZSwge1xyXG4gICAgICBmaWxsOiAnYmxhY2snLFxyXG4gICAgICBzY2FsZTogMC43XHJcbiAgICB9ICk7XHJcblxyXG4gICAgb3B0aW9ucy5jb250ZW50ID0gYmFja0Fycm93UGF0aDtcclxuXHJcbiAgICBzdXBlciggb3B0aW9ucyApO1xyXG4gIH1cclxufVxyXG5cclxuc2NlbmVyeVBoZXQucmVnaXN0ZXIoICdSZXR1cm5CdXR0b24nLCBSZXR1cm5CdXR0b24gKTtcclxuZXhwb3J0IGRlZmF1bHQgUmV0dXJuQnV0dG9uOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsU0FBUyxNQUE0QixvQ0FBb0M7QUFDaEYsT0FBT0MscUJBQXFCLE1BQXdDLGtEQUFrRDtBQUN0SCxTQUFTQyxLQUFLLEVBQUVDLElBQUksUUFBUSxnQ0FBZ0M7QUFFNUQsT0FBT0MsV0FBVyxNQUFNLG1CQUFtQjtBQUMzQyxTQUFTQyxLQUFLLFFBQVEsNkJBQTZCO0FBRW5ELE1BQU1DLFdBQVcsR0FBRyxFQUFFO0FBS3RCLE1BQU1DLFlBQVksU0FBU04scUJBQXFCLENBQUM7RUFFeENPLFdBQVdBLENBQUVDLFFBQW9CLEVBQUVDLGVBQXlDLEVBQUc7SUFFcEYsTUFBTUMsT0FBTyxHQUFHWCxTQUFTLENBQXFFLENBQUMsQ0FBRTtNQUMvRlksT0FBTyxFQUFFLENBQUM7TUFDVkMsT0FBTyxFQUFFLENBQUM7TUFDVkMsU0FBUyxFQUFFWixLQUFLLENBQUNhLE1BQU07TUFDdkJOLFFBQVEsRUFBRUE7SUFDWixDQUFDLEVBQUVDLGVBQWdCLENBQUM7SUFFcEIsTUFBTU0sY0FBYyxHQUFHLElBQUlYLEtBQUssQ0FBQyxDQUFDLENBQy9CWSxNQUFNLENBQUUsQ0FBQyxFQUFFLENBQUUsQ0FBQyxDQUNkQyxNQUFNLENBQUUsQ0FBQyxFQUFFWixXQUFZLENBQUMsQ0FDeEJZLE1BQU0sQ0FBRVosV0FBVyxFQUFFQSxXQUFZLENBQUMsQ0FDbENZLE1BQU0sQ0FBRVosV0FBVyxHQUFHLEdBQUcsRUFBRUEsV0FBVyxHQUFHLEdBQUksQ0FBQyxDQUM5Q2EsZ0JBQWdCLENBQUViLFdBQVcsR0FBRyxJQUFJLEVBQUUsQ0FBQ0EsV0FBVyxHQUFHLEdBQUcsRUFBRUEsV0FBVyxHQUFHLENBQUMsRUFBRUEsV0FBVyxHQUFHLElBQUssQ0FBQyxDQUMvRmEsZ0JBQWdCLENBQUViLFdBQVcsR0FBRyxJQUFJLEVBQUUsQ0FBQ0EsV0FBVyxHQUFHLEdBQUcsRUFBRUEsV0FBVyxHQUFHLEdBQUcsRUFBRUEsV0FBVyxHQUFHLEdBQUksQ0FBQyxDQUNoR2MsS0FBSyxDQUFDLENBQUM7SUFFVixNQUFNQyxhQUFhLEdBQUcsSUFBSWxCLElBQUksQ0FBRWEsY0FBYyxFQUFFO01BQzlDTSxJQUFJLEVBQUUsT0FBTztNQUNiQyxLQUFLLEVBQUU7SUFDVCxDQUFFLENBQUM7SUFFSFosT0FBTyxDQUFDYSxPQUFPLEdBQUdILGFBQWE7SUFFL0IsS0FBSyxDQUFFVixPQUFRLENBQUM7RUFDbEI7QUFDRjtBQUVBUCxXQUFXLENBQUNxQixRQUFRLENBQUUsY0FBYyxFQUFFbEIsWUFBYSxDQUFDO0FBQ3BELGVBQWVBLFlBQVkifQ==