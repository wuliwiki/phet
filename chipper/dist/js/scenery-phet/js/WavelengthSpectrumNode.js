// Copyright 2014-2022, University of Colorado Boulder

/**
 * WavelengthSpectrumNode displays a rectangle of the visible spectrum.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 * @author Sam Reid (PhET Interactive Simulations)
 */

import optionize from '../../phet-core/js/optionize.js';
import Tandem from '../../tandem/js/Tandem.js';
import sceneryPhet from './sceneryPhet.js';
import SpectrumNode from './SpectrumNode.js';
import VisibleColor from './VisibleColor.js';
export default class WavelengthSpectrumNode extends SpectrumNode {
  constructor(providedOptions) {
    const options = optionize()({
      valueToColor: value => VisibleColor.wavelengthToColor(value),
      minWavelength: VisibleColor.MIN_WAVELENGTH,
      maxWavelength: VisibleColor.MAX_WAVELENGTH,
      tandem: Tandem.OPTIONAL
    }, providedOptions);

    // validation
    assert && assert(options.minWavelength < options.maxWavelength);
    assert && assert(options.minWavelength >= VisibleColor.MIN_WAVELENGTH && options.minWavelength <= VisibleColor.MAX_WAVELENGTH);
    assert && assert(options.maxWavelength >= VisibleColor.MIN_WAVELENGTH && options.maxWavelength <= VisibleColor.MAX_WAVELENGTH);
    options.minValue = options.minWavelength;
    options.maxValue = options.maxWavelength;
    super(options);
  }
}
sceneryPhet.register('WavelengthSpectrumNode', WavelengthSpectrumNode);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJvcHRpb25pemUiLCJUYW5kZW0iLCJzY2VuZXJ5UGhldCIsIlNwZWN0cnVtTm9kZSIsIlZpc2libGVDb2xvciIsIldhdmVsZW5ndGhTcGVjdHJ1bU5vZGUiLCJjb25zdHJ1Y3RvciIsInByb3ZpZGVkT3B0aW9ucyIsIm9wdGlvbnMiLCJ2YWx1ZVRvQ29sb3IiLCJ2YWx1ZSIsIndhdmVsZW5ndGhUb0NvbG9yIiwibWluV2F2ZWxlbmd0aCIsIk1JTl9XQVZFTEVOR1RIIiwibWF4V2F2ZWxlbmd0aCIsIk1BWF9XQVZFTEVOR1RIIiwidGFuZGVtIiwiT1BUSU9OQUwiLCJhc3NlcnQiLCJtaW5WYWx1ZSIsIm1heFZhbHVlIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJXYXZlbGVuZ3RoU3BlY3RydW1Ob2RlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE0LTIwMjIsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIFdhdmVsZW5ndGhTcGVjdHJ1bU5vZGUgZGlzcGxheXMgYSByZWN0YW5nbGUgb2YgdGhlIHZpc2libGUgc3BlY3RydW0uXHJcbiAqXHJcbiAqIEBhdXRob3IgQ2hyaXMgTWFsbGV5IChQaXhlbFpvb20sIEluYy4pXHJcbiAqIEBhdXRob3IgU2FtIFJlaWQgKFBoRVQgSW50ZXJhY3RpdmUgU2ltdWxhdGlvbnMpXHJcbiAqL1xyXG5cclxuaW1wb3J0IG9wdGlvbml6ZSBmcm9tICcuLi8uLi9waGV0LWNvcmUvanMvb3B0aW9uaXplLmpzJztcclxuaW1wb3J0IFN0cmljdE9taXQgZnJvbSAnLi4vLi4vcGhldC1jb3JlL2pzL3R5cGVzL1N0cmljdE9taXQuanMnO1xyXG5pbXBvcnQgVGFuZGVtIGZyb20gJy4uLy4uL3RhbmRlbS9qcy9UYW5kZW0uanMnO1xyXG5pbXBvcnQgc2NlbmVyeVBoZXQgZnJvbSAnLi9zY2VuZXJ5UGhldC5qcyc7XHJcbmltcG9ydCBTcGVjdHJ1bU5vZGUsIHsgU3BlY3RydW1Ob2RlT3B0aW9ucyB9IGZyb20gJy4vU3BlY3RydW1Ob2RlLmpzJztcclxuaW1wb3J0IFZpc2libGVDb2xvciBmcm9tICcuL1Zpc2libGVDb2xvci5qcyc7XHJcblxyXG50eXBlIFNlbGZPcHRpb25zID0ge1xyXG4gIG1pbldhdmVsZW5ndGg/OiBudW1iZXI7XHJcbiAgbWF4V2F2ZWxlbmd0aD86IG51bWJlcjtcclxufTtcclxuXHJcbmV4cG9ydCB0eXBlIFdhdmVsZW5ndGhTcGVjdHJ1bU5vZGVPcHRpb25zID0gU2VsZk9wdGlvbnMgJiBTdHJpY3RPbWl0PFNwZWN0cnVtTm9kZU9wdGlvbnMsICdtaW5WYWx1ZScgfCAnbWF4VmFsdWUnPjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFdhdmVsZW5ndGhTcGVjdHJ1bU5vZGUgZXh0ZW5kcyBTcGVjdHJ1bU5vZGUge1xyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoIHByb3ZpZGVkT3B0aW9ucz86IFdhdmVsZW5ndGhTcGVjdHJ1bU5vZGVPcHRpb25zICkge1xyXG5cclxuICAgIGNvbnN0IG9wdGlvbnMgPSBvcHRpb25pemU8V2F2ZWxlbmd0aFNwZWN0cnVtTm9kZU9wdGlvbnMsIFNlbGZPcHRpb25zLCBTcGVjdHJ1bU5vZGVPcHRpb25zPigpKCB7XHJcbiAgICAgIHZhbHVlVG9Db2xvcjogKCB2YWx1ZTogbnVtYmVyICkgPT4gVmlzaWJsZUNvbG9yLndhdmVsZW5ndGhUb0NvbG9yKCB2YWx1ZSApLFxyXG4gICAgICBtaW5XYXZlbGVuZ3RoOiBWaXNpYmxlQ29sb3IuTUlOX1dBVkVMRU5HVEgsXHJcbiAgICAgIG1heFdhdmVsZW5ndGg6IFZpc2libGVDb2xvci5NQVhfV0FWRUxFTkdUSCxcclxuICAgICAgdGFuZGVtOiBUYW5kZW0uT1BUSU9OQUxcclxuICAgIH0sIHByb3ZpZGVkT3B0aW9ucyApO1xyXG5cclxuICAgIC8vIHZhbGlkYXRpb25cclxuICAgIGFzc2VydCAmJiBhc3NlcnQoIG9wdGlvbnMubWluV2F2ZWxlbmd0aCA8IG9wdGlvbnMubWF4V2F2ZWxlbmd0aCApO1xyXG4gICAgYXNzZXJ0ICYmIGFzc2VydCggb3B0aW9ucy5taW5XYXZlbGVuZ3RoID49IFZpc2libGVDb2xvci5NSU5fV0FWRUxFTkdUSCAmJiBvcHRpb25zLm1pbldhdmVsZW5ndGggPD0gVmlzaWJsZUNvbG9yLk1BWF9XQVZFTEVOR1RIICk7XHJcbiAgICBhc3NlcnQgJiYgYXNzZXJ0KCBvcHRpb25zLm1heFdhdmVsZW5ndGggPj0gVmlzaWJsZUNvbG9yLk1JTl9XQVZFTEVOR1RIICYmIG9wdGlvbnMubWF4V2F2ZWxlbmd0aCA8PSBWaXNpYmxlQ29sb3IuTUFYX1dBVkVMRU5HVEggKTtcclxuXHJcbiAgICBvcHRpb25zLm1pblZhbHVlID0gb3B0aW9ucy5taW5XYXZlbGVuZ3RoO1xyXG4gICAgb3B0aW9ucy5tYXhWYWx1ZSA9IG9wdGlvbnMubWF4V2F2ZWxlbmd0aDtcclxuXHJcbiAgICBzdXBlciggb3B0aW9ucyApO1xyXG4gIH1cclxufVxyXG5cclxuc2NlbmVyeVBoZXQucmVnaXN0ZXIoICdXYXZlbGVuZ3RoU3BlY3RydW1Ob2RlJywgV2F2ZWxlbmd0aFNwZWN0cnVtTm9kZSApOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLFNBQVMsTUFBTSxpQ0FBaUM7QUFFdkQsT0FBT0MsTUFBTSxNQUFNLDJCQUEyQjtBQUM5QyxPQUFPQyxXQUFXLE1BQU0sa0JBQWtCO0FBQzFDLE9BQU9DLFlBQVksTUFBK0IsbUJBQW1CO0FBQ3JFLE9BQU9DLFlBQVksTUFBTSxtQkFBbUI7QUFTNUMsZUFBZSxNQUFNQyxzQkFBc0IsU0FBU0YsWUFBWSxDQUFDO0VBRXhERyxXQUFXQSxDQUFFQyxlQUErQyxFQUFHO0lBRXBFLE1BQU1DLE9BQU8sR0FBR1IsU0FBUyxDQUFrRSxDQUFDLENBQUU7TUFDNUZTLFlBQVksRUFBSUMsS0FBYSxJQUFNTixZQUFZLENBQUNPLGlCQUFpQixDQUFFRCxLQUFNLENBQUM7TUFDMUVFLGFBQWEsRUFBRVIsWUFBWSxDQUFDUyxjQUFjO01BQzFDQyxhQUFhLEVBQUVWLFlBQVksQ0FBQ1csY0FBYztNQUMxQ0MsTUFBTSxFQUFFZixNQUFNLENBQUNnQjtJQUNqQixDQUFDLEVBQUVWLGVBQWdCLENBQUM7O0lBRXBCO0lBQ0FXLE1BQU0sSUFBSUEsTUFBTSxDQUFFVixPQUFPLENBQUNJLGFBQWEsR0FBR0osT0FBTyxDQUFDTSxhQUFjLENBQUM7SUFDakVJLE1BQU0sSUFBSUEsTUFBTSxDQUFFVixPQUFPLENBQUNJLGFBQWEsSUFBSVIsWUFBWSxDQUFDUyxjQUFjLElBQUlMLE9BQU8sQ0FBQ0ksYUFBYSxJQUFJUixZQUFZLENBQUNXLGNBQWUsQ0FBQztJQUNoSUcsTUFBTSxJQUFJQSxNQUFNLENBQUVWLE9BQU8sQ0FBQ00sYUFBYSxJQUFJVixZQUFZLENBQUNTLGNBQWMsSUFBSUwsT0FBTyxDQUFDTSxhQUFhLElBQUlWLFlBQVksQ0FBQ1csY0FBZSxDQUFDO0lBRWhJUCxPQUFPLENBQUNXLFFBQVEsR0FBR1gsT0FBTyxDQUFDSSxhQUFhO0lBQ3hDSixPQUFPLENBQUNZLFFBQVEsR0FBR1osT0FBTyxDQUFDTSxhQUFhO0lBRXhDLEtBQUssQ0FBRU4sT0FBUSxDQUFDO0VBQ2xCO0FBQ0Y7QUFFQU4sV0FBVyxDQUFDbUIsUUFBUSxDQUFFLHdCQUF3QixFQUFFaEIsc0JBQXVCLENBQUMifQ==