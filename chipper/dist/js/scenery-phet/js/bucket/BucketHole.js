// Copyright 2013-2022, University of Colorado Boulder

/*
 * The hole of a bucket
 *
 * @author Jonathan Olson
 */

import Matrix3 from '../../../dot/js/Matrix3.js';
import { LinearGradient, Node, Path } from '../../../scenery/js/imports.js';
import sceneryPhet from '../sceneryPhet.js';
export default class BucketHole extends Node {
  constructor(bucket, modelViewTransform, providedOptions) {
    super(providedOptions);
    const scaleMatrix = Matrix3.scaling(modelViewTransform.getMatrix().m00(), modelViewTransform.getMatrix().m11());
    const transformedShape = bucket.holeShape.transformed(scaleMatrix);
    const gradientPaint = new LinearGradient(transformedShape.bounds.getMinX(), 0, transformedShape.bounds.getMaxX(), 0);
    gradientPaint.addColorStop(0, 'black');
    gradientPaint.addColorStop(1, '#c0c0c0');
    this.addChild(new Path(transformedShape, {
      fill: gradientPaint,
      stroke: '#777',
      lineWidth: 1
    }));

    // Set initial position.
    this.translation = modelViewTransform.modelToViewPosition(bucket.position);
  }
}
sceneryPhet.register('BucketHole', BucketHole);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJNYXRyaXgzIiwiTGluZWFyR3JhZGllbnQiLCJOb2RlIiwiUGF0aCIsInNjZW5lcnlQaGV0IiwiQnVja2V0SG9sZSIsImNvbnN0cnVjdG9yIiwiYnVja2V0IiwibW9kZWxWaWV3VHJhbnNmb3JtIiwicHJvdmlkZWRPcHRpb25zIiwic2NhbGVNYXRyaXgiLCJzY2FsaW5nIiwiZ2V0TWF0cml4IiwibTAwIiwibTExIiwidHJhbnNmb3JtZWRTaGFwZSIsImhvbGVTaGFwZSIsInRyYW5zZm9ybWVkIiwiZ3JhZGllbnRQYWludCIsImJvdW5kcyIsImdldE1pblgiLCJnZXRNYXhYIiwiYWRkQ29sb3JTdG9wIiwiYWRkQ2hpbGQiLCJmaWxsIiwic3Ryb2tlIiwibGluZVdpZHRoIiwidHJhbnNsYXRpb24iLCJtb2RlbFRvVmlld1Bvc2l0aW9uIiwicG9zaXRpb24iLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIkJ1Y2tldEhvbGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTMtMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKlxyXG4gKiBUaGUgaG9sZSBvZiBhIGJ1Y2tldFxyXG4gKlxyXG4gKiBAYXV0aG9yIEpvbmF0aGFuIE9sc29uXHJcbiAqL1xyXG5cclxuaW1wb3J0IEJ1Y2tldCBmcm9tICcuLi8uLi8uLi9waGV0Y29tbW9uL2pzL21vZGVsL0J1Y2tldC5qcyc7XHJcbmltcG9ydCBNYXRyaXgzIGZyb20gJy4uLy4uLy4uL2RvdC9qcy9NYXRyaXgzLmpzJztcclxuaW1wb3J0IE1vZGVsVmlld1RyYW5zZm9ybTIgZnJvbSAnLi4vLi4vLi4vcGhldGNvbW1vbi9qcy92aWV3L01vZGVsVmlld1RyYW5zZm9ybTIuanMnO1xyXG5pbXBvcnQgeyBMaW5lYXJHcmFkaWVudCwgTm9kZSwgTm9kZU9wdGlvbnMsIFBhdGggfSBmcm9tICcuLi8uLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgc2NlbmVyeVBoZXQgZnJvbSAnLi4vc2NlbmVyeVBoZXQuanMnO1xyXG5pbXBvcnQgeyBFbXB0eVNlbGZPcHRpb25zIH0gZnJvbSAnLi4vLi4vLi4vcGhldC1jb3JlL2pzL29wdGlvbml6ZS5qcyc7XHJcblxyXG50eXBlIFNlbGZPcHRpb25zID0gRW1wdHlTZWxmT3B0aW9ucztcclxuXHJcbmV4cG9ydCB0eXBlIEJ1Y2tldEhvbGVPcHRpb25zID0gU2VsZk9wdGlvbnMgJiBOb2RlT3B0aW9ucztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJ1Y2tldEhvbGUgZXh0ZW5kcyBOb2RlIHtcclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKCBidWNrZXQ6IEJ1Y2tldCwgbW9kZWxWaWV3VHJhbnNmb3JtOiBNb2RlbFZpZXdUcmFuc2Zvcm0yLCBwcm92aWRlZE9wdGlvbnM/OiBCdWNrZXRIb2xlT3B0aW9ucyApIHtcclxuXHJcbiAgICBzdXBlciggcHJvdmlkZWRPcHRpb25zICk7XHJcblxyXG4gICAgY29uc3Qgc2NhbGVNYXRyaXggPSBNYXRyaXgzLnNjYWxpbmcoIG1vZGVsVmlld1RyYW5zZm9ybS5nZXRNYXRyaXgoKS5tMDAoKSwgbW9kZWxWaWV3VHJhbnNmb3JtLmdldE1hdHJpeCgpLm0xMSgpICk7XHJcbiAgICBjb25zdCB0cmFuc2Zvcm1lZFNoYXBlID0gYnVja2V0LmhvbGVTaGFwZS50cmFuc2Zvcm1lZCggc2NhbGVNYXRyaXggKTtcclxuICAgIGNvbnN0IGdyYWRpZW50UGFpbnQgPSBuZXcgTGluZWFyR3JhZGllbnQoIHRyYW5zZm9ybWVkU2hhcGUuYm91bmRzLmdldE1pblgoKSwgMCwgdHJhbnNmb3JtZWRTaGFwZS5ib3VuZHMuZ2V0TWF4WCgpLCAwICk7XHJcbiAgICBncmFkaWVudFBhaW50LmFkZENvbG9yU3RvcCggMCwgJ2JsYWNrJyApO1xyXG4gICAgZ3JhZGllbnRQYWludC5hZGRDb2xvclN0b3AoIDEsICcjYzBjMGMwJyApO1xyXG5cclxuICAgIHRoaXMuYWRkQ2hpbGQoIG5ldyBQYXRoKCB0cmFuc2Zvcm1lZFNoYXBlLCB7XHJcbiAgICAgIGZpbGw6IGdyYWRpZW50UGFpbnQsXHJcbiAgICAgIHN0cm9rZTogJyM3NzcnLFxyXG4gICAgICBsaW5lV2lkdGg6IDFcclxuICAgIH0gKSApO1xyXG5cclxuICAgIC8vIFNldCBpbml0aWFsIHBvc2l0aW9uLlxyXG4gICAgdGhpcy50cmFuc2xhdGlvbiA9IG1vZGVsVmlld1RyYW5zZm9ybS5tb2RlbFRvVmlld1Bvc2l0aW9uKCBidWNrZXQucG9zaXRpb24gKTtcclxuICB9XHJcbn1cclxuXHJcbnNjZW5lcnlQaGV0LnJlZ2lzdGVyKCAnQnVja2V0SG9sZScsIEJ1Y2tldEhvbGUgKTsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBR0EsT0FBT0EsT0FBTyxNQUFNLDRCQUE0QjtBQUVoRCxTQUFTQyxjQUFjLEVBQUVDLElBQUksRUFBZUMsSUFBSSxRQUFRLGdDQUFnQztBQUN4RixPQUFPQyxXQUFXLE1BQU0sbUJBQW1CO0FBTzNDLGVBQWUsTUFBTUMsVUFBVSxTQUFTSCxJQUFJLENBQUM7RUFFcENJLFdBQVdBLENBQUVDLE1BQWMsRUFBRUMsa0JBQXVDLEVBQUVDLGVBQW1DLEVBQUc7SUFFakgsS0FBSyxDQUFFQSxlQUFnQixDQUFDO0lBRXhCLE1BQU1DLFdBQVcsR0FBR1YsT0FBTyxDQUFDVyxPQUFPLENBQUVILGtCQUFrQixDQUFDSSxTQUFTLENBQUMsQ0FBQyxDQUFDQyxHQUFHLENBQUMsQ0FBQyxFQUFFTCxrQkFBa0IsQ0FBQ0ksU0FBUyxDQUFDLENBQUMsQ0FBQ0UsR0FBRyxDQUFDLENBQUUsQ0FBQztJQUNqSCxNQUFNQyxnQkFBZ0IsR0FBR1IsTUFBTSxDQUFDUyxTQUFTLENBQUNDLFdBQVcsQ0FBRVAsV0FBWSxDQUFDO0lBQ3BFLE1BQU1RLGFBQWEsR0FBRyxJQUFJakIsY0FBYyxDQUFFYyxnQkFBZ0IsQ0FBQ0ksTUFBTSxDQUFDQyxPQUFPLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRUwsZ0JBQWdCLENBQUNJLE1BQU0sQ0FBQ0UsT0FBTyxDQUFDLENBQUMsRUFBRSxDQUFFLENBQUM7SUFDdEhILGFBQWEsQ0FBQ0ksWUFBWSxDQUFFLENBQUMsRUFBRSxPQUFRLENBQUM7SUFDeENKLGFBQWEsQ0FBQ0ksWUFBWSxDQUFFLENBQUMsRUFBRSxTQUFVLENBQUM7SUFFMUMsSUFBSSxDQUFDQyxRQUFRLENBQUUsSUFBSXBCLElBQUksQ0FBRVksZ0JBQWdCLEVBQUU7TUFDekNTLElBQUksRUFBRU4sYUFBYTtNQUNuQk8sTUFBTSxFQUFFLE1BQU07TUFDZEMsU0FBUyxFQUFFO0lBQ2IsQ0FBRSxDQUFFLENBQUM7O0lBRUw7SUFDQSxJQUFJLENBQUNDLFdBQVcsR0FBR25CLGtCQUFrQixDQUFDb0IsbUJBQW1CLENBQUVyQixNQUFNLENBQUNzQixRQUFTLENBQUM7RUFDOUU7QUFDRjtBQUVBekIsV0FBVyxDQUFDMEIsUUFBUSxDQUFFLFlBQVksRUFBRXpCLFVBQVcsQ0FBQyJ9