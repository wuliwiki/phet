// Copyright 2015-2023, University of Colorado Boulder

/**
 * Warning displayed when we have to fall back to Canvas
 *
 * @author Jonathan Olson <jonathan.olson@colorado.edu>
 */

import { HBox, openPopup, Path, Text, VBox } from '../../scenery/js/imports.js';
import exclamationTriangleSolidShape from '../../sherpa/js/fontawesome-5/exclamationTriangleSolidShape.js';
import PhetFont from './PhetFont.js';
import sceneryPhet from './sceneryPhet.js';
import SceneryPhetStrings from './SceneryPhetStrings.js';
export default class CanvasWarningNode extends HBox {
  constructor() {
    const titleText = new Text(SceneryPhetStrings.webglWarning.titleStringProperty, {
      font: new PhetFont(14),
      fill: '#ddd'
    });
    const bodyText = new Text(SceneryPhetStrings.webglWarning.bodyStringProperty, {
      font: new PhetFont(10),
      fill: '#999'
    });
    super({
      children: [new Path(exclamationTriangleSolidShape, {
        fill: '#E87600',
        // "safety orange", according to Wikipedia
        scale: 0.048
      }), new VBox({
        children: [titleText, bodyText],
        spacing: 3,
        align: 'left'
      })],
      spacing: 12,
      align: 'center',
      cursor: 'pointer'
    });
    this.mouseArea = this.touchArea = this.localBounds;
    this.addInputListener({
      up: function () {
        const joistGlobal = _.get(window, 'phet.joist', null); // returns null if global isn't found
        const locale = joistGlobal ? joistGlobal.sim.locale : 'en';
        openPopup(`https://phet.colorado.edu/webgl-disabled-page?simLocale=${locale}`);
      }
    });
    this.disposeCanvasWarningNode = () => {
      titleText.dispose();
      bodyText.dispose();
    };
  }
  dispose() {
    this.disposeCanvasWarningNode();
    super.dispose();
  }
}
sceneryPhet.register('CanvasWarningNode', CanvasWarningNode);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJIQm94Iiwib3BlblBvcHVwIiwiUGF0aCIsIlRleHQiLCJWQm94IiwiZXhjbGFtYXRpb25UcmlhbmdsZVNvbGlkU2hhcGUiLCJQaGV0Rm9udCIsInNjZW5lcnlQaGV0IiwiU2NlbmVyeVBoZXRTdHJpbmdzIiwiQ2FudmFzV2FybmluZ05vZGUiLCJjb25zdHJ1Y3RvciIsInRpdGxlVGV4dCIsIndlYmdsV2FybmluZyIsInRpdGxlU3RyaW5nUHJvcGVydHkiLCJmb250IiwiZmlsbCIsImJvZHlUZXh0IiwiYm9keVN0cmluZ1Byb3BlcnR5IiwiY2hpbGRyZW4iLCJzY2FsZSIsInNwYWNpbmciLCJhbGlnbiIsImN1cnNvciIsIm1vdXNlQXJlYSIsInRvdWNoQXJlYSIsImxvY2FsQm91bmRzIiwiYWRkSW5wdXRMaXN0ZW5lciIsInVwIiwiam9pc3RHbG9iYWwiLCJfIiwiZ2V0Iiwid2luZG93IiwibG9jYWxlIiwic2ltIiwiZGlzcG9zZUNhbnZhc1dhcm5pbmdOb2RlIiwiZGlzcG9zZSIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiQ2FudmFzV2FybmluZ05vZGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTUtMjAyMywgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogV2FybmluZyBkaXNwbGF5ZWQgd2hlbiB3ZSBoYXZlIHRvIGZhbGwgYmFjayB0byBDYW52YXNcclxuICpcclxuICogQGF1dGhvciBKb25hdGhhbiBPbHNvbiA8am9uYXRoYW4ub2xzb25AY29sb3JhZG8uZWR1PlxyXG4gKi9cclxuXHJcbmltcG9ydCB7IEhCb3gsIG9wZW5Qb3B1cCwgUGF0aCwgVGV4dCwgVkJveCB9IGZyb20gJy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XHJcbmltcG9ydCBleGNsYW1hdGlvblRyaWFuZ2xlU29saWRTaGFwZSBmcm9tICcuLi8uLi9zaGVycGEvanMvZm9udGF3ZXNvbWUtNS9leGNsYW1hdGlvblRyaWFuZ2xlU29saWRTaGFwZS5qcyc7XHJcbmltcG9ydCBQaGV0Rm9udCBmcm9tICcuL1BoZXRGb250LmpzJztcclxuaW1wb3J0IHNjZW5lcnlQaGV0IGZyb20gJy4vc2NlbmVyeVBoZXQuanMnO1xyXG5pbXBvcnQgU2NlbmVyeVBoZXRTdHJpbmdzIGZyb20gJy4vU2NlbmVyeVBoZXRTdHJpbmdzLmpzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENhbnZhc1dhcm5pbmdOb2RlIGV4dGVuZHMgSEJveCB7XHJcblxyXG4gIHByaXZhdGUgcmVhZG9ubHkgZGlzcG9zZUNhbnZhc1dhcm5pbmdOb2RlOiAoKSA9PiB2b2lkO1xyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoKSB7XHJcblxyXG4gICAgY29uc3QgdGl0bGVUZXh0ID0gbmV3IFRleHQoIFNjZW5lcnlQaGV0U3RyaW5ncy53ZWJnbFdhcm5pbmcudGl0bGVTdHJpbmdQcm9wZXJ0eSwge1xyXG4gICAgICBmb250OiBuZXcgUGhldEZvbnQoIDE0ICksXHJcbiAgICAgIGZpbGw6ICcjZGRkJ1xyXG4gICAgfSApO1xyXG5cclxuICAgIGNvbnN0IGJvZHlUZXh0ID0gbmV3IFRleHQoIFNjZW5lcnlQaGV0U3RyaW5ncy53ZWJnbFdhcm5pbmcuYm9keVN0cmluZ1Byb3BlcnR5LCB7XHJcbiAgICAgIGZvbnQ6IG5ldyBQaGV0Rm9udCggMTAgKSxcclxuICAgICAgZmlsbDogJyM5OTknXHJcbiAgICB9ICk7XHJcblxyXG4gICAgc3VwZXIoIHtcclxuICAgICAgY2hpbGRyZW46IFtcclxuICAgICAgICBuZXcgUGF0aCggZXhjbGFtYXRpb25UcmlhbmdsZVNvbGlkU2hhcGUsIHtcclxuICAgICAgICAgIGZpbGw6ICcjRTg3NjAwJywgLy8gXCJzYWZldHkgb3JhbmdlXCIsIGFjY29yZGluZyB0byBXaWtpcGVkaWFcclxuICAgICAgICAgIHNjYWxlOiAwLjA0OFxyXG4gICAgICAgIH0gKSxcclxuICAgICAgICBuZXcgVkJveCgge1xyXG4gICAgICAgICAgY2hpbGRyZW46IFsgdGl0bGVUZXh0LCBib2R5VGV4dCBdLFxyXG4gICAgICAgICAgc3BhY2luZzogMyxcclxuICAgICAgICAgIGFsaWduOiAnbGVmdCdcclxuICAgICAgICB9IClcclxuICAgICAgXSxcclxuICAgICAgc3BhY2luZzogMTIsXHJcbiAgICAgIGFsaWduOiAnY2VudGVyJyxcclxuICAgICAgY3Vyc29yOiAncG9pbnRlcidcclxuICAgIH0gKTtcclxuXHJcbiAgICB0aGlzLm1vdXNlQXJlYSA9IHRoaXMudG91Y2hBcmVhID0gdGhpcy5sb2NhbEJvdW5kcztcclxuXHJcbiAgICB0aGlzLmFkZElucHV0TGlzdGVuZXIoIHtcclxuICAgICAgdXA6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIGNvbnN0IGpvaXN0R2xvYmFsID0gXy5nZXQoIHdpbmRvdywgJ3BoZXQuam9pc3QnLCBudWxsICk7IC8vIHJldHVybnMgbnVsbCBpZiBnbG9iYWwgaXNuJ3QgZm91bmRcclxuICAgICAgICBjb25zdCBsb2NhbGUgPSBqb2lzdEdsb2JhbCA/IGpvaXN0R2xvYmFsLnNpbS5sb2NhbGUgOiAnZW4nO1xyXG4gICAgICAgIG9wZW5Qb3B1cCggYGh0dHBzOi8vcGhldC5jb2xvcmFkby5lZHUvd2ViZ2wtZGlzYWJsZWQtcGFnZT9zaW1Mb2NhbGU9JHtsb2NhbGV9YCApO1xyXG4gICAgICB9XHJcbiAgICB9ICk7XHJcblxyXG4gICAgdGhpcy5kaXNwb3NlQ2FudmFzV2FybmluZ05vZGUgPSAoKSA9PiB7XHJcbiAgICAgIHRpdGxlVGV4dC5kaXNwb3NlKCk7XHJcbiAgICAgIGJvZHlUZXh0LmRpc3Bvc2UoKTtcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgb3ZlcnJpZGUgZGlzcG9zZSgpOiB2b2lkIHtcclxuICAgIHRoaXMuZGlzcG9zZUNhbnZhc1dhcm5pbmdOb2RlKCk7XHJcbiAgICBzdXBlci5kaXNwb3NlKCk7XHJcbiAgfVxyXG59XHJcblxyXG5zY2VuZXJ5UGhldC5yZWdpc3RlciggJ0Nh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