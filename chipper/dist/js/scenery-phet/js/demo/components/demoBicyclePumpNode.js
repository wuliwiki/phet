// Copyright 2022-2023, University of Colorado Boulder

/**
 * Demo for BicyclePumpNode
 */

import { Node, Text } from '../../../../scenery/js/imports.js';
import Property from '../../../../axon/js/Property.js';
import Range from '../../../../dot/js/Range.js';
import PhetFont from '../../PhetFont.js';
import BicyclePumpNode from '../../BicyclePumpNode.js';
import ResetButton from '../../buttons/ResetButton.js';
import NumberProperty from '../../../../axon/js/NumberProperty.js';
import Vector2 from '../../../../dot/js/Vector2.js';
export default function demoBicyclePumpNode(layoutBounds) {
  const numberOfParticlesProperty = new NumberProperty(0, {
    numberType: 'Integer',
    range: new Range(0, 100)
  });
  const rangeProperty = new Property(numberOfParticlesProperty.range);
  const bicyclePumpNode = new BicyclePumpNode(numberOfParticlesProperty, rangeProperty, {
    hoseAttachmentOffset: new Vector2(100, -100)
  });

  // Displays the number of particles, positioned next to the hose output
  const displayNode = new Text(numberOfParticlesProperty.value, {
    font: new PhetFont(24),
    left: bicyclePumpNode.x + bicyclePumpNode.hoseAttachmentOffset.x + 20,
    centerY: bicyclePumpNode.y + bicyclePumpNode.hoseAttachmentOffset.y
  });
  numberOfParticlesProperty.link(numberOfParticles => {
    displayNode.string = numberOfParticles;
  });
  const resetButton = new ResetButton({
    listener: () => {
      numberOfParticlesProperty.reset();
      bicyclePumpNode.reset();
    },
    scale: 0.75,
    centerX: bicyclePumpNode.x,
    top: bicyclePumpNode.bottom + 20
  });
  return new Node({
    children: [bicyclePumpNode, displayNode, resetButton],
    center: layoutBounds.center
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJOb2RlIiwiVGV4dCIsIlByb3BlcnR5IiwiUmFuZ2UiLCJQaGV0Rm9udCIsIkJpY3ljbGVQdW1wTm9kZSIsIlJlc2V0QnV0dG9uIiwiTnVtYmVyUHJvcGVydHkiLCJWZWN0b3IyIiwiZGVtb0JpY3ljbGVQdW1wTm9kZSIsImxheW91dEJvdW5kcyIsIm51bWJlck9mUGFydGljbGVzUHJvcGVydHkiLCJudW1iZXJUeXBlIiwicmFuZ2UiLCJyYW5nZVByb3BlcnR5IiwiYmljeWNsZVB1bXBOb2RlIiwiaG9zZUF0dGFjaG1lbnRPZmZzZXQiLCJkaXNwbGF5Tm9kZSIsInZhbHVlIiwiZm9udCIsImxlZnQiLCJ4IiwiY2VudGVyWSIsInkiLCJsaW5rIiwibnVtYmVyT2ZQYXJ0aWNsZXMiLCJzdHJpbmciLCJyZXNldEJ1dHRvbiIsImxpc3RlbmVyIiwicmVzZXQiLCJzY2FsZSIsImNlbnRlclgiLCJ0b3AiLCJib3R0b20iLCJjaGlsZHJlbiIsImNlbnRlciJdLCJzb3VyY2VzIjpbImRlbW9CaWN5Y2xlUHVtcE5vZGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjItMjAyMywgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogRGVtbyBmb3IgQmljeWNsZVB1bXBOb2RlXHJcbiAqL1xyXG5cclxuaW1wb3J0IHsgTm9kZSwgVGV4dCB9IGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XHJcbmltcG9ydCBQcm9wZXJ0eSBmcm9tICcuLi8uLi8uLi8uLi9heG9uL2pzL1Byb3BlcnR5LmpzJztcclxuaW1wb3J0IFJhbmdlIGZyb20gJy4uLy4uLy4uLy4uL2RvdC9qcy9SYW5nZS5qcyc7XHJcbmltcG9ydCBQaGV0Rm9udCBmcm9tICcuLi8uLi9QaGV0Rm9udC5qcyc7XHJcbmltcG9ydCBCaWN5Y2xlUHVtcE5vZGUgZnJvbSAnLi4vLi4vQmljeWNsZVB1bXBOb2RlLmpzJztcclxuaW1wb3J0IFJlc2V0QnV0dG9uIGZyb20gJy4uLy4uL2J1dHRvbnMvUmVzZXRCdXR0b24uanMnO1xyXG5pbXBvcnQgTnVtYmVyUHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vLi4vYXhvbi9qcy9OdW1iZXJQcm9wZXJ0eS5qcyc7XHJcbmltcG9ydCBWZWN0b3IyIGZyb20gJy4uLy4uLy4uLy4uL2RvdC9qcy9WZWN0b3IyLmpzJztcclxuaW1wb3J0IEJvdW5kczIgZnJvbSAnLi4vLi4vLi4vLi4vZG90L2pzL0JvdW5kczIuanMnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZGVtb0JpY3ljbGVQdW1wTm9kZSggbGF5b3V0Qm91bmRzOiBCb3VuZHMyICk6IE5vZGUge1xyXG5cclxuICBjb25zdCBudW1iZXJPZlBhcnRpY2xlc1Byb3BlcnR5ID0gbmV3IE51bWJlclByb3BlcnR5KCAwLCB7XHJcbiAgICBudW1iZXJUeXBlOiAnSW50ZWdlcicsXHJcbiAgICByYW5nZTogbmV3IFJhbmdlKCAwLCAxMDAgKVxyXG4gIH0gKTtcclxuXHJcbiAgY29uc3QgcmFuZ2VQcm9wZXJ0eSA9IG5ldyBQcm9wZXJ0eSggbnVtYmVyT2ZQYXJ0aWNsZXNQcm9wZXJ0eS5yYW5nZSApO1xyXG5cclxuICBjb25zdCBiaWN5Y2xlUHVtcE5vZGUgPSBuZXcgQmljeWNsZVB1bXBOb2RlKCBudW1iZXJPZlBhcnRpY2xlc1Byb3BlcnR5LCByYW5nZVByb3BlcnR5LCB7XHJcbiAgICBob3NlQXR0YWNobWVudE9mZnNldDogbmV3IFZlY3RvcjIoIDEwMCwgLTEwMCApXHJcbiAgfSApO1xyXG5cclxuICAvLyBEaXNwbGF5cyB0aGUgbnVtYmVyIG9mIHBhcnRpY2xlcywgcG9zaXRpb25lZCBuZXh0IHRvIHRoZSBob3NlIG91dHB1dFxyXG4gIGNvbnN0IGRpc3BsYXlOb2RlID0gbmV3IFRleHQoIG51bWJlck9mUGFydGljbGVzUHJvcGVydHkudmFsdWUsIHtcclxuICAgIGZvbnQ6IG5ldyBQaGV0Rm9udCggMjQgKSxcclxuICAgIGxlZnQ6IGJpY3ljbGVQdW1wTm9kZS54ICsgYmljeWNsZVB1bXBOb2RlLmhvc2VBdHRhY2htZW50T2Zmc2V0LnggKyAyMCxcclxuICAgIGNlbnRlclk6IGJpY3ljbGVQdW1wTm9kZS55ICsgYmljeWNsZVB1bXBOb2RlLmhvc2VBdHRhY2htZW50T2Zmc2V0LnlcclxuICB9ICk7XHJcblxyXG4gIG51bWJlck9mUGFydGljbGVzUHJvcGVydHkubGluayggbnVtYmVyT2ZQYXJ0aWNsZXMgPT4ge1xyXG4gICAgZGlzcGxheU5vZGUuc3RyaW5nID0gbnVtYmVyT2ZQYXJ0aWNsZXM7XHJcbiAgfSApO1xyXG5cclxuICBjb25zdCByZXNldEJ1dHRvbiA9IG5ldyBSZXNldEJ1dHRvbigge1xyXG4gICAgbGlzdGVuZXI6ICgpID0+IHtcclxuICAgICAgbnVtYmVyT2ZQYXJ0aWNsZXNQcm9wZXJ0eS5yZXNldCgpO1xyXG4gICAgICBiaWN5Y2xlUHVtcE5vZGUucmVzZXQoKTtcclxuICAgIH0sXHJcbiAgICBzY2FsZTogMC43NSxcclxuICAgIGNlbnRlclg6IGJpY3ljbGVQdW1wTm9kZS54LFxyXG4gICAgdG9wOiBiaWN5Y2xlUHVtcE5vZGUuYm90dG9tICsgMjBcclxuICB9ICk7XHJcblxyXG4gIHJldHVybiBuZXcgTm9kZSgge1xyXG4gICAgY2hpbGRyZW46IFsgYmljeWNsZVB1bXBOb2RlLCBkaXNwbGF5Tm9kZSwgcmVzZXRCdXR0b24gXSxcclxuICAgIGNlbnRlcjogbGF5b3V0Qm91bmRzLmNlbnRlclxyXG4gIH0gKTtcclxufSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBLFNBQVNBLElBQUksRUFBRUMsSUFBSSxRQUFRLG1DQUFtQztBQUM5RCxPQUFPQyxRQUFRLE1BQU0saUNBQWlDO0FBQ3RELE9BQU9DLEtBQUssTUFBTSw2QkFBNkI7QUFDL0MsT0FBT0MsUUFBUSxNQUFNLG1CQUFtQjtBQUN4QyxPQUFPQyxlQUFlLE1BQU0sMEJBQTBCO0FBQ3RELE9BQU9DLFdBQVcsTUFBTSw4QkFBOEI7QUFDdEQsT0FBT0MsY0FBYyxNQUFNLHVDQUF1QztBQUNsRSxPQUFPQyxPQUFPLE1BQU0sK0JBQStCO0FBR25ELGVBQWUsU0FBU0MsbUJBQW1CQSxDQUFFQyxZQUFxQixFQUFTO0VBRXpFLE1BQU1DLHlCQUF5QixHQUFHLElBQUlKLGNBQWMsQ0FBRSxDQUFDLEVBQUU7SUFDdkRLLFVBQVUsRUFBRSxTQUFTO0lBQ3JCQyxLQUFLLEVBQUUsSUFBSVYsS0FBSyxDQUFFLENBQUMsRUFBRSxHQUFJO0VBQzNCLENBQUUsQ0FBQztFQUVILE1BQU1XLGFBQWEsR0FBRyxJQUFJWixRQUFRLENBQUVTLHlCQUF5QixDQUFDRSxLQUFNLENBQUM7RUFFckUsTUFBTUUsZUFBZSxHQUFHLElBQUlWLGVBQWUsQ0FBRU0seUJBQXlCLEVBQUVHLGFBQWEsRUFBRTtJQUNyRkUsb0JBQW9CLEVBQUUsSUFBSVIsT0FBTyxDQUFFLEdBQUcsRUFBRSxDQUFDLEdBQUk7RUFDL0MsQ0FBRSxDQUFDOztFQUVIO0VBQ0EsTUFBTVMsV0FBVyxHQUFHLElBQUloQixJQUFJLENBQUVVLHlCQUF5QixDQUFDTyxLQUFLLEVBQUU7SUFDN0RDLElBQUksRUFBRSxJQUFJZixRQUFRLENBQUUsRUFBRyxDQUFDO0lBQ3hCZ0IsSUFBSSxFQUFFTCxlQUFlLENBQUNNLENBQUMsR0FBR04sZUFBZSxDQUFDQyxvQkFBb0IsQ0FBQ0ssQ0FBQyxHQUFHLEVBQUU7SUFDckVDLE9BQU8sRUFBRVAsZUFBZSxDQUFDUSxDQUFDLEdBQUdSLGVBQWUsQ0FBQ0Msb0JBQW9CLENBQUNPO0VBQ3BFLENBQUUsQ0FBQztFQUVIWix5QkFBeUIsQ0FBQ2EsSUFBSSxDQUFFQyxpQkFBaUIsSUFBSTtJQUNuRFIsV0FBVyxDQUFDUyxNQUFNLEdBQUdELGlCQUFpQjtFQUN4QyxDQUFFLENBQUM7RUFFSCxNQUFNRSxXQUFXLEdBQUcsSUFBSXJCLFdBQVcsQ0FBRTtJQUNuQ3NCLFFBQVEsRUFBRUEsQ0FBQSxLQUFNO01BQ2RqQix5QkFBeUIsQ0FBQ2tCLEtBQUssQ0FBQyxDQUFDO01BQ2pDZCxlQUFlLENBQUNjLEtBQUssQ0FBQyxDQUFDO0lBQ3pCLENBQUM7SUFDREMsS0FBSyxFQUFFLElBQUk7SUFDWEMsT0FBTyxFQUFFaEIsZUFBZSxDQUFDTSxDQUFDO0lBQzFCVyxHQUFHLEVBQUVqQixlQUFlLENBQUNrQixNQUFNLEdBQUc7RUFDaEMsQ0FBRSxDQUFDO0VBRUgsT0FBTyxJQUFJakMsSUFBSSxDQUFFO0lBQ2ZrQyxRQUFRLEVBQUUsQ0FBRW5CLGVBQWUsRUFBRUUsV0FBVyxFQUFFVSxXQUFXLENBQUU7SUFDdkRRLE1BQU0sRUFBRXpCLFlBQVksQ0FBQ3lCO0VBQ3ZCLENBQUUsQ0FBQztBQUNMIn0=