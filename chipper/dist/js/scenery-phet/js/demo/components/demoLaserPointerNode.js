// Copyright 2022, University of Colorado Boulder

/**
 * Demo for LaserPointerNode
 */

import { Node, Rectangle } from '../../../../scenery/js/imports.js';
import LaserPointerNode from '../../LaserPointerNode.js';
import Property from '../../../../axon/js/Property.js';
export default function demoLaserPointerNode(layoutBounds) {
  const leftOnProperty = new Property(false);
  const rightOnProperty = new Property(false);

  // Demonstrate how to adjust lighting
  const leftLaserNode = new LaserPointerNode(leftOnProperty, {
    // these options adjust the lighting
    topColor: LaserPointerNode.DEFAULT_LASER_NODE_OPTIONS.bottomColor,
    bottomColor: LaserPointerNode.DEFAULT_LASER_NODE_OPTIONS.topColor,
    highlightColorStop: 1 - LaserPointerNode.DEFAULT_LASER_NODE_OPTIONS.highlightColorStop,
    buttonRotation: Math.PI,
    rotation: Math.PI,
    right: layoutBounds.centerX - 20,
    centerY: layoutBounds.centerY
  });
  const rightLaserNode = new LaserPointerNode(rightOnProperty, {
    left: layoutBounds.centerX + 20,
    centerY: layoutBounds.centerY,
    hasGlass: true
  });
  const leftBeamNode = new Rectangle(0, 0, 1000, 40, {
    fill: 'yellow',
    right: leftLaserNode.centerX,
    centerY: leftLaserNode.centerY
  });
  const rightBeamNode = new Rectangle(0, 0, 1000, 40, {
    fill: 'yellow',
    left: rightLaserNode.centerX,
    centerY: rightLaserNode.centerY
  });
  leftOnProperty.link(on => {
    leftBeamNode.visible = on;
  });
  rightOnProperty.link(on => {
    rightBeamNode.visible = on;
  });
  return new Node({
    children: [leftBeamNode, leftLaserNode, rightBeamNode, rightLaserNode]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJOb2RlIiwiUmVjdGFuZ2xlIiwiTGFzZXJQb2ludGVyTm9kZSIsIlByb3BlcnR5IiwiZGVtb0xhc2VyUG9pbnRlck5vZGUiLCJsYXlvdXRCb3VuZHMiLCJsZWZ0T25Qcm9wZXJ0eSIsInJpZ2h0T25Qcm9wZXJ0eSIsImxlZnRMYXNlck5vZGUiLCJ0b3BDb2xvciIsIkRFRkFVTFRfTEFTRVJfTk9ERV9PUFRJT05TIiwiYm90dG9tQ29sb3IiLCJoaWdobGlnaHRDb2xvclN0b3AiLCJidXR0b25Sb3RhdGlvbiIsIk1hdGgiLCJQSSIsInJvdGF0aW9uIiwicmlnaHQiLCJjZW50ZXJYIiwiY2VudGVyWSIsInJpZ2h0TGFzZXJOb2RlIiwibGVmdCIsImhhc0dsYXNzIiwibGVmdEJlYW1Ob2RlIiwiZmlsbCIsInJpZ2h0QmVhbU5vZGUiLCJsaW5rIiwib24iLCJ2aXNpYmxlIiwiY2hpbGRyZW4iXSwic291cmNlcyI6WyJkZW1vTGFzZXJQb2ludGVyTm9kZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogRGVtbyBmb3IgTGFzZXJQb2ludGVyTm9kZVxyXG4gKi9cclxuXHJcbmltcG9ydCB7IE5vZGUsIFJlY3RhbmdsZSB9IGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XHJcbmltcG9ydCBCb3VuZHMyIGZyb20gJy4uLy4uLy4uLy4uL2RvdC9qcy9Cb3VuZHMyLmpzJztcclxuaW1wb3J0IExhc2VyUG9pbnRlck5vZGUgZnJvbSAnLi4vLi4vTGFzZXJQb2ludGVyTm9kZS5qcyc7XHJcbmltcG9ydCBQcm9wZXJ0eSBmcm9tICcuLi8uLi8uLi8uLi9heG9uL2pzL1Byb3BlcnR5LmpzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGRlbW9MYXNlclBvaW50ZXJOb2RlKCBsYXlvdXRCb3VuZHM6IEJvdW5kczIgKTogTm9kZSB7XHJcblxyXG5cclxuICBjb25zdCBsZWZ0T25Qcm9wZXJ0eSA9IG5ldyBQcm9wZXJ0eSggZmFsc2UgKTtcclxuICBjb25zdCByaWdodE9uUHJvcGVydHkgPSBuZXcgUHJvcGVydHkoIGZhbHNlICk7XHJcblxyXG4gIC8vIERlbW9uc3RyYXRlIGhvdyB0byBhZGp1c3QgbGlnaHRpbmdcclxuICBjb25zdCBsZWZ0TGFzZXJOb2RlID0gbmV3IExhc2VyUG9pbnRlck5vZGUoIGxlZnRPblByb3BlcnR5LCB7XHJcblxyXG4gICAgLy8gdGhlc2Ugb3B0aW9ucyBhZGp1c3QgdGhlIGxpZ2h0aW5nXHJcbiAgICB0b3BDb2xvcjogTGFzZXJQb2ludGVyTm9kZS5ERUZBVUxUX0xBU0VSX05PREVfT1BUSU9OUy5ib3R0b21Db2xvcixcclxuICAgIGJvdHRvbUNvbG9yOiBMYXNlclBvaW50ZXJOb2RlLkRFRkFVTFRfTEFTRVJfTk9ERV9PUFRJT05TLnRvcENvbG9yLFxyXG4gICAgaGlnaGxpZ2h0Q29sb3JTdG9wOiAxIC0gTGFzZXJQb2ludGVyTm9kZS5ERUZBVUxUX0xBU0VSX05PREVfT1BUSU9OUy5oaWdobGlnaHRDb2xvclN0b3AsXHJcbiAgICBidXR0b25Sb3RhdGlvbjogTWF0aC5QSSxcclxuXHJcbiAgICByb3RhdGlvbjogTWF0aC5QSSxcclxuICAgIHJpZ2h0OiBsYXlvdXRCb3VuZHMuY2VudGVyWCAtIDIwLFxyXG4gICAgY2VudGVyWTogbGF5b3V0Qm91bmRzLmNlbnRlcllcclxuICB9ICk7XHJcblxyXG4gIGNvbnN0IHJpZ2h0TGFzZXJOb2RlID0gbmV3IExhc2VyUG9pbnRlck5vZGUoIHJpZ2h0T25Qcm9wZXJ0eSwge1xyXG4gICAgbGVmdDogbGF5b3V0Qm91bmRzLmNlbnRlclggKyAyMCxcclxuICAgIGNlbnRlclk6IGxheW91dEJvdW5kcy5jZW50ZXJZLFxyXG4gICAgaGFzR2xhc3M6IHRydWVcclxuICB9ICk7XHJcblxyXG4gIGNvbnN0IGxlZnRCZWFtTm9kZSA9IG5ldyBSZWN0YW5nbGUoIDAsIDAsIDEwMDAsIDQwLCB7XHJcbiAgICBmaWxsOiAneWVsbG93JyxcclxuICAgIHJpZ2h0OiBsZWZ0TGFzZXJOb2RlLmNlbnRlclgsXHJcbiAgICBjZW50ZXJZOiBsZWZ0TGFzZXJOb2RlLmNlbnRlcllcclxuICB9ICk7XHJcblxyXG4gIGNvbnN0IHJpZ2h0QmVhbU5vZGUgPSBuZXcgUmVjdGFuZ2xlKCAwLCAwLCAxMDAwLCA0MCwge1xyXG4gICAgZmlsbDogJ3llbGxvdycsXHJcbiAgICBsZWZ0OiByaWdodExhc2VyTm9kZS5jZW50ZXJYLFxyXG4gICAgY2VudGVyWTogcmlnaHRMYXNlck5vZGUuY2VudGVyWVxyXG4gIH0gKTtcclxuXHJcbiAgbGVmdE9uUHJvcGVydHkubGluayggb24gPT4ge1xyXG4gICAgbGVmdEJlYW1Ob2RlLnZpc2libGUgPSBvbjtcclxuICB9ICk7XHJcbiAgcmlnaHRPblByb3BlcnR5LmxpbmsoIG9uID0+IHtcclxuICAgIHJpZ2h0QmVhbU5vZGUudmlzaWJsZSA9IG9uO1xyXG4gIH0gKTtcclxuXHJcbiAgcmV0dXJuIG5ldyBOb2RlKCB7IGNoaWxkcmVuOiBbIGxlZnRCZWFtTm9kZSwgbGVmdExhc2VyTm9kZSwgcmlnaHRCZWFtTm9kZSwgcmlnaHRMYXNlck5vZGUgXSB9ICk7XHJcbn0iXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxTQUFTQSxJQUFJLEVBQUVDLFNBQVMsUUFBUSxtQ0FBbUM7QUFFbkUsT0FBT0MsZ0JBQWdCLE1BQU0sMkJBQTJCO0FBQ3hELE9BQU9DLFFBQVEsTUFBTSxpQ0FBaUM7QUFFdEQsZUFBZSxTQUFTQyxvQkFBb0JBLENBQUVDLFlBQXFCLEVBQVM7RUFHMUUsTUFBTUMsY0FBYyxHQUFHLElBQUlILFFBQVEsQ0FBRSxLQUFNLENBQUM7RUFDNUMsTUFBTUksZUFBZSxHQUFHLElBQUlKLFFBQVEsQ0FBRSxLQUFNLENBQUM7O0VBRTdDO0VBQ0EsTUFBTUssYUFBYSxHQUFHLElBQUlOLGdCQUFnQixDQUFFSSxjQUFjLEVBQUU7SUFFMUQ7SUFDQUcsUUFBUSxFQUFFUCxnQkFBZ0IsQ0FBQ1EsMEJBQTBCLENBQUNDLFdBQVc7SUFDakVBLFdBQVcsRUFBRVQsZ0JBQWdCLENBQUNRLDBCQUEwQixDQUFDRCxRQUFRO0lBQ2pFRyxrQkFBa0IsRUFBRSxDQUFDLEdBQUdWLGdCQUFnQixDQUFDUSwwQkFBMEIsQ0FBQ0Usa0JBQWtCO0lBQ3RGQyxjQUFjLEVBQUVDLElBQUksQ0FBQ0MsRUFBRTtJQUV2QkMsUUFBUSxFQUFFRixJQUFJLENBQUNDLEVBQUU7SUFDakJFLEtBQUssRUFBRVosWUFBWSxDQUFDYSxPQUFPLEdBQUcsRUFBRTtJQUNoQ0MsT0FBTyxFQUFFZCxZQUFZLENBQUNjO0VBQ3hCLENBQUUsQ0FBQztFQUVILE1BQU1DLGNBQWMsR0FBRyxJQUFJbEIsZ0JBQWdCLENBQUVLLGVBQWUsRUFBRTtJQUM1RGMsSUFBSSxFQUFFaEIsWUFBWSxDQUFDYSxPQUFPLEdBQUcsRUFBRTtJQUMvQkMsT0FBTyxFQUFFZCxZQUFZLENBQUNjLE9BQU87SUFDN0JHLFFBQVEsRUFBRTtFQUNaLENBQUUsQ0FBQztFQUVILE1BQU1DLFlBQVksR0FBRyxJQUFJdEIsU0FBUyxDQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRTtJQUNsRHVCLElBQUksRUFBRSxRQUFRO0lBQ2RQLEtBQUssRUFBRVQsYUFBYSxDQUFDVSxPQUFPO0lBQzVCQyxPQUFPLEVBQUVYLGFBQWEsQ0FBQ1c7RUFDekIsQ0FBRSxDQUFDO0VBRUgsTUFBTU0sYUFBYSxHQUFHLElBQUl4QixTQUFTLENBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFFO0lBQ25EdUIsSUFBSSxFQUFFLFFBQVE7SUFDZEgsSUFBSSxFQUFFRCxjQUFjLENBQUNGLE9BQU87SUFDNUJDLE9BQU8sRUFBRUMsY0FBYyxDQUFDRDtFQUMxQixDQUFFLENBQUM7RUFFSGIsY0FBYyxDQUFDb0IsSUFBSSxDQUFFQyxFQUFFLElBQUk7SUFDekJKLFlBQVksQ0FBQ0ssT0FBTyxHQUFHRCxFQUFFO0VBQzNCLENBQUUsQ0FBQztFQUNIcEIsZUFBZSxDQUFDbUIsSUFBSSxDQUFFQyxFQUFFLElBQUk7SUFDMUJGLGFBQWEsQ0FBQ0csT0FBTyxHQUFHRCxFQUFFO0VBQzVCLENBQUUsQ0FBQztFQUVILE9BQU8sSUFBSTNCLElBQUksQ0FBRTtJQUFFNkIsUUFBUSxFQUFFLENBQUVOLFlBQVksRUFBRWYsYUFBYSxFQUFFaUIsYUFBYSxFQUFFTCxjQUFjO0VBQUcsQ0FBRSxDQUFDO0FBQ2pHIn0=