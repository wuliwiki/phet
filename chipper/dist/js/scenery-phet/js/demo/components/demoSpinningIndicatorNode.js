// Copyright 2022, University of Colorado Boulder

/**
 * Demo for SpinningIndicatorNode
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import { Color, HBox } from '../../../../scenery/js/imports.js';
import SpinningIndicatorNode from '../../SpinningIndicatorNode.js';
import stepTimer from '../../../../axon/js/stepTimer.js';
export default function demoSpinningIndicatorNode(layoutBounds) {
  return new DemoNode(layoutBounds);
}
class DemoNode extends HBox {
  constructor(layoutBounds) {
    const spinningIndicatorNode1 = new SpinningIndicatorNode({
      diameter: 100
    });
    const spinningIndicatorNode2 = new SpinningIndicatorNode({
      diameter: 100,
      numberOfElements: 30,
      elementFactory: SpinningIndicatorNode.circleFactory,
      activeColor: Color.RED,
      inactiveColor: Color.RED.withAlpha(0.15)
    });
    const stepTimerListener = dt => {
      spinningIndicatorNode1.step(dt);
      spinningIndicatorNode2.step(dt);
    };
    stepTimer.addListener(stepTimerListener);
    super({
      children: [spinningIndicatorNode1, spinningIndicatorNode2],
      spacing: 100,
      center: layoutBounds.center
    });
    this.disposeDemoNode = () => {
      spinningIndicatorNode1.dispose();
      spinningIndicatorNode2.dispose();
      if (stepTimer.hasListener(stepTimerListener)) {
        stepTimer.removeListener(stepTimerListener);
      }
    };
  }
  dispose() {
    this.disposeDemoNode();
    super.dispose();
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJDb2xvciIsIkhCb3giLCJTcGlubmluZ0luZGljYXRvck5vZGUiLCJzdGVwVGltZXIiLCJkZW1vU3Bpbm5pbmdJbmRpY2F0b3JOb2RlIiwibGF5b3V0Qm91bmRzIiwiRGVtb05vZGUiLCJjb25zdHJ1Y3RvciIsInNwaW5uaW5nSW5kaWNhdG9yTm9kZTEiLCJkaWFtZXRlciIsInNwaW5uaW5nSW5kaWNhdG9yTm9kZTIiLCJudW1iZXJPZkVsZW1lbnRzIiwiZWxlbWVudEZhY3RvcnkiLCJjaXJjbGVGYWN0b3J5IiwiYWN0aXZlQ29sb3IiLCJSRUQiLCJpbmFjdGl2ZUNvbG9yIiwid2l0aEFscGhhIiwic3RlcFRpbWVyTGlzdGVuZXIiLCJkdCIsInN0ZXAiLCJhZGRMaXN0ZW5lciIsImNoaWxkcmVuIiwic3BhY2luZyIsImNlbnRlciIsImRpc3Bvc2VEZW1vTm9kZSIsImRpc3Bvc2UiLCJoYXNMaXN0ZW5lciIsInJlbW92ZUxpc3RlbmVyIl0sInNvdXJjZXMiOlsiZGVtb1NwaW5uaW5nSW5kaWNhdG9yTm9kZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogRGVtbyBmb3IgU3Bpbm5pbmdJbmRpY2F0b3JOb2RlXHJcbiAqXHJcbiAqIEBhdXRob3IgQ2hyaXMgTWFsbGV5IChQaXhlbFpvb20sIEluYy4pXHJcbiAqL1xyXG5cclxuaW1wb3J0IHsgQ29sb3IsIEhCb3gsIE5vZGUgfSBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgQm91bmRzMiBmcm9tICcuLi8uLi8uLi8uLi9kb3QvanMvQm91bmRzMi5qcyc7XHJcbmltcG9ydCBTcGlubmluZ0luZGljYXRvck5vZGUgZnJvbSAnLi4vLi4vU3Bpbm5pbmdJbmRpY2F0b3JOb2RlLmpzJztcclxuaW1wb3J0IHN0ZXBUaW1lciBmcm9tICcuLi8uLi8uLi8uLi9heG9uL2pzL3N0ZXBUaW1lci5qcyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBkZW1vU3Bpbm5pbmdJbmRpY2F0b3JOb2RlKCBsYXlvdXRCb3VuZHM6IEJvdW5kczIgKTogTm9kZSB7XHJcbiAgcmV0dXJuIG5ldyBEZW1vTm9kZSggbGF5b3V0Qm91bmRzICk7XHJcbn1cclxuXHJcbmNsYXNzIERlbW9Ob2RlIGV4dGVuZHMgSEJveCB7XHJcblxyXG4gIHByaXZhdGUgcmVhZG9ubHkgZGlzcG9zZURlbW9Ob2RlOiAoKSA9PiB2b2lkO1xyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoIGxheW91dEJvdW5kczogQm91bmRzMiApIHtcclxuXHJcbiAgICBjb25zdCBzcGlubmluZ0luZGljYXRvck5vZGUxID0gbmV3IFNwaW5uaW5nSW5kaWNhdG9yTm9kZSgge1xyXG4gICAgICBkaWFtZXRlcjogMTAwXHJcbiAgICB9ICk7XHJcblxyXG4gICAgY29uc3Qgc3Bpbm5pbmdJbmRpY2F0b3JOb2RlMiA9IG5ldyBTcGlubmluZ0luZGljYXRvck5vZGUoIHtcclxuICAgICAgZGlhbWV0ZXI6IDEwMCxcclxuICAgICAgbnVtYmVyT2ZFbGVtZW50czogMzAsXHJcbiAgICAgIGVsZW1lbnRGYWN0b3J5OiBTcGlubmluZ0luZGljYXRvck5vZGUuY2lyY2xlRmFjdG9yeSxcclxuICAgICAgYWN0aXZlQ29sb3I6IENvbG9yLlJFRCxcclxuICAgICAgaW5hY3RpdmVDb2xvcjogQ29sb3IuUkVELndpdGhBbHBoYSggMC4xNSApXHJcbiAgICB9ICk7XHJcblxyXG4gICAgY29uc3Qgc3RlcFRpbWVyTGlzdGVuZXIgPSAoIGR0OiBudW1iZXIgKSA9PiB7XHJcbiAgICAgIHNwaW5uaW5nSW5kaWNhdG9yTm9kZTEuc3RlcCggZHQgKTtcclxuICAgICAgc3Bpbm5pbmdJbmRpY2F0b3JOb2RlMi5zdGVwKCBkdCApO1xyXG4gICAgfTtcclxuXHJcbiAgICBzdGVwVGltZXIuYWRkTGlzdGVuZXIoIHN0ZXBUaW1lckxpc3RlbmVyICk7XHJcblxyXG4gICAgc3VwZXIoIHtcclxuICAgICAgY2hpbGRyZW46IFsgc3Bpbm5pbmdJbmRpY2F0b3JOb2RlMSwgc3Bpbm5pbmdJbmRpY2F0b3JOb2RlMiBdLFxyXG4gICAgICBzcGFjaW5nOiAxMDAsXHJcbiAgICAgIGNlbnRlcjogbGF5b3V0Qm91bmRzLmNlbnRlclxyXG4gICAgfSApO1xyXG5cclxuICAgIHRoaXMuZGlzcG9zZURlbW9Ob2RlID0gKCkgPT4ge1xyXG4gICAgICBzcGlubmluZ0luZGljYXRvck5vZGUxLmRpc3Bvc2UoKTtcclxuICAgICAgc3Bpbm5pbmdJbmRpY2F0b3JOb2RlMi5kaXNwb3NlKCk7XHJcbiAgICAgIGlmICggc3RlcFRpbWVyLmhhc0xpc3RlbmVyKCBzdGVwVGltZXJMaXN0ZW5lciApICkge1xyXG4gICAgICAgIHN0ZXBUaW1lci5yZW1vdmVMaXN0ZW5lciggc3RlcFRpbWVyTGlzdGVuZXIgKTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBvdmVycmlkZSBkaXNwb3NlKCk6IHZvaWQge1xyXG4gICAgdGhpcy5kaXNwb3NlRGVtb05vZGUoKTtcclxuICAgIHN1cGVyLmRpc3Bvc2UoKTtcclxuICB9XHJcbn0iXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsU0FBU0EsS0FBSyxFQUFFQyxJQUFJLFFBQWMsbUNBQW1DO0FBRXJFLE9BQU9DLHFCQUFxQixNQUFNLGdDQUFnQztBQUNsRSxPQUFPQyxTQUFTLE1BQU0sa0NBQWtDO0FBRXhELGVBQWUsU0FBU0MseUJBQXlCQSxDQUFFQyxZQUFxQixFQUFTO0VBQy9FLE9BQU8sSUFBSUMsUUFBUSxDQUFFRCxZQUFhLENBQUM7QUFDckM7QUFFQSxNQUFNQyxRQUFRLFNBQVNMLElBQUksQ0FBQztFQUluQk0sV0FBV0EsQ0FBRUYsWUFBcUIsRUFBRztJQUUxQyxNQUFNRyxzQkFBc0IsR0FBRyxJQUFJTixxQkFBcUIsQ0FBRTtNQUN4RE8sUUFBUSxFQUFFO0lBQ1osQ0FBRSxDQUFDO0lBRUgsTUFBTUMsc0JBQXNCLEdBQUcsSUFBSVIscUJBQXFCLENBQUU7TUFDeERPLFFBQVEsRUFBRSxHQUFHO01BQ2JFLGdCQUFnQixFQUFFLEVBQUU7TUFDcEJDLGNBQWMsRUFBRVYscUJBQXFCLENBQUNXLGFBQWE7TUFDbkRDLFdBQVcsRUFBRWQsS0FBSyxDQUFDZSxHQUFHO01BQ3RCQyxhQUFhLEVBQUVoQixLQUFLLENBQUNlLEdBQUcsQ0FBQ0UsU0FBUyxDQUFFLElBQUs7SUFDM0MsQ0FBRSxDQUFDO0lBRUgsTUFBTUMsaUJBQWlCLEdBQUtDLEVBQVUsSUFBTTtNQUMxQ1gsc0JBQXNCLENBQUNZLElBQUksQ0FBRUQsRUFBRyxDQUFDO01BQ2pDVCxzQkFBc0IsQ0FBQ1UsSUFBSSxDQUFFRCxFQUFHLENBQUM7SUFDbkMsQ0FBQztJQUVEaEIsU0FBUyxDQUFDa0IsV0FBVyxDQUFFSCxpQkFBa0IsQ0FBQztJQUUxQyxLQUFLLENBQUU7TUFDTEksUUFBUSxFQUFFLENBQUVkLHNCQUFzQixFQUFFRSxzQkFBc0IsQ0FBRTtNQUM1RGEsT0FBTyxFQUFFLEdBQUc7TUFDWkMsTUFBTSxFQUFFbkIsWUFBWSxDQUFDbUI7SUFDdkIsQ0FBRSxDQUFDO0lBRUgsSUFBSSxDQUFDQyxlQUFlLEdBQUcsTUFBTTtNQUMzQmpCLHNCQUFzQixDQUFDa0IsT0FBTyxDQUFDLENBQUM7TUFDaENoQixzQkFBc0IsQ0FBQ2dCLE9BQU8sQ0FBQyxDQUFDO01BQ2hDLElBQUt2QixTQUFTLENBQUN3QixXQUFXLENBQUVULGlCQUFrQixDQUFDLEVBQUc7UUFDaERmLFNBQVMsQ0FBQ3lCLGNBQWMsQ0FBRVYsaUJBQWtCLENBQUM7TUFDL0M7SUFDRixDQUFDO0VBQ0g7RUFFZ0JRLE9BQU9BLENBQUEsRUFBUztJQUM5QixJQUFJLENBQUNELGVBQWUsQ0FBQyxDQUFDO0lBQ3RCLEtBQUssQ0FBQ0MsT0FBTyxDQUFDLENBQUM7RUFDakI7QUFDRiJ9