// Copyright 2020-2022, University of Colorado Boulder

/**
 * Keyboard-help content for the scenery-phet demo application.
 *
 * @author Michael Kauzmann (PhET Interactive Simulations)
 */

import StringProperty from '../../../axon/js/StringProperty.js';
import merge from '../../../phet-core/js/merge.js';
import BasicActionsKeyboardHelpSection from '../keyboard/help/BasicActionsKeyboardHelpSection.js';
import GrabReleaseKeyboardHelpSection from '../keyboard/help/GrabReleaseKeyboardHelpSection.js';
import KeyboardHelpSection from '../keyboard/help/KeyboardHelpSection.js';
import SliderControlsKeyboardHelpSection from '../keyboard/help/SliderControlsKeyboardHelpSection.js';
import TwoColumnKeyboardHelpContent from '../keyboard/help/TwoColumnKeyboardHelpContent.js';
import sceneryPhet from '../sceneryPhet.js';
export default class SceneryPhetKeyboardHelpContent extends TwoColumnKeyboardHelpContent {
  constructor() {
    const helpContentOptions = {
      // i18n, restricts both labelText and maxWidth, see KeyboardHelpSection
      textMaxWidth: 130
    };
    const basicActionsHelpContent = new BasicActionsKeyboardHelpSection(merge(helpContentOptions, {
      withCheckboxContent: true
    }));
    const sliderControlsKeyboardHelpSection = new SliderControlsKeyboardHelpSection(helpContentOptions);
    const grabDragHelpContent = new GrabReleaseKeyboardHelpSection(new StringProperty('Grabbable'), new StringProperty('grabbable'), helpContentOptions);
    const leftHelpContent = [basicActionsHelpContent];
    KeyboardHelpSection.alignHelpSectionIcons([grabDragHelpContent, sliderControlsKeyboardHelpSection]);
    const rightHelpContent = [grabDragHelpContent, sliderControlsKeyboardHelpSection];
    super(leftHelpContent, rightHelpContent);
  }
}
sceneryPhet.register('SceneryPhetKeyboardHelpContent', SceneryPhetKeyboardHelpContent);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTdHJpbmdQcm9wZXJ0eSIsIm1lcmdlIiwiQmFzaWNBY3Rpb25zS2V5Ym9hcmRIZWxwU2VjdGlvbiIsIkdyYWJSZWxlYXNlS2V5Ym9hcmRIZWxwU2VjdGlvbiIsIktleWJvYXJkSGVscFNlY3Rpb24iLCJTbGlkZXJDb250cm9sc0tleWJvYXJkSGVscFNlY3Rpb24iLCJUd29Db2x1bW5LZXlib2FyZEhlbHBDb250ZW50Iiwic2NlbmVyeVBoZXQiLCJTY2VuZXJ5UGhldEtleWJvYXJkSGVscENvbnRlbnQiLCJjb25zdHJ1Y3RvciIsImhlbHBDb250ZW50T3B0aW9ucyIsInRleHRNYXhXaWR0aCIsImJhc2ljQWN0aW9uc0hlbHBDb250ZW50Iiwid2l0aENoZWNrYm94Q29udGVudCIsInNsaWRlckNvbnRyb2xzS2V5Ym9hcmRIZWxwU2VjdGlvbiIsImdyYWJEcmFnSGVscENvbnRlbnQiLCJsZWZ0SGVscENvbnRlbnQiLCJhbGlnbkhlbHBTZWN0aW9uSWNvbnMiLCJyaWdodEhlbHBDb250ZW50IiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJTY2VuZXJ5UGhldEtleWJvYXJkSGVscENvbnRlbnQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjAtMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogS2V5Ym9hcmQtaGVscCBjb250ZW50IGZvciB0aGUgc2NlbmVyeS1waGV0IGRlbW8gYXBwbGljYXRpb24uXHJcbiAqXHJcbiAqIEBhdXRob3IgTWljaGFlbCBLYXV6bWFubiAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcclxuICovXHJcblxyXG5pbXBvcnQgU3RyaW5nUHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vYXhvbi9qcy9TdHJpbmdQcm9wZXJ0eS5qcyc7XHJcbmltcG9ydCBtZXJnZSBmcm9tICcuLi8uLi8uLi9waGV0LWNvcmUvanMvbWVyZ2UuanMnO1xyXG5pbXBvcnQgQmFzaWNBY3Rpb25zS2V5Ym9hcmRIZWxwU2VjdGlvbiBmcm9tICcuLi9rZXlib2FyZC9oZWxwL0Jhc2ljQWN0aW9uc0tleWJvYXJkSGVscFNlY3Rpb24uanMnO1xyXG5pbXBvcnQgR3JhYlJlbGVhc2VLZXlib2FyZEhlbHBTZWN0aW9uIGZyb20gJy4uL2tleWJvYXJkL2hlbHAvR3JhYlJlbGVhc2VLZXlib2FyZEhlbHBTZWN0aW9uLmpzJztcclxuaW1wb3J0IEtleWJvYXJkSGVscFNlY3Rpb24gZnJvbSAnLi4va2V5Ym9hcmQvaGVscC9LZXlib2FyZEhlbHBTZWN0aW9uLmpzJztcclxuaW1wb3J0IFNsaWRlckNvbnRyb2xzS2V5Ym9hcmRIZWxwU2VjdGlvbiBmcm9tICcuLi9rZXlib2FyZC9oZWxwL1NsaWRlckNvbnRyb2xzS2V5Ym9hcmRIZWxwU2VjdGlvbi5qcyc7XHJcbmltcG9ydCBUd29Db2x1bW5LZXlib2FyZEhlbHBDb250ZW50IGZyb20gJy4uL2tleWJvYXJkL2hlbHAvVHdvQ29sdW1uS2V5Ym9hcmRIZWxwQ29udGVudC5qcyc7XHJcbmltcG9ydCBzY2VuZXJ5UGhldCBmcm9tICcuLi9zY2VuZXJ5UGhldC5qcyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTY2VuZXJ5UGhldEtleWJvYXJkSGVscENvbnRlbnQgZXh0ZW5kcyBUd29Db2x1bW5LZXlib2FyZEhlbHBDb250ZW50IHtcclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xyXG5cclxuICAgIGNvbnN0IGhlbHBDb250ZW50T3B0aW9ucyA9IHtcclxuXHJcbiAgICAgIC8vIGkxOG4sIHJlc3RyaWN0cyBib3RoIGxhYmVsVGV4dCBhbmQgbWF4V2lkdGgsIHNlZSBLZXlib2FyZEhlbHBTZWN0aW9uXHJcbiAgICAgIHRleHRNYXhXaWR0aDogMTMwXHJcbiAgICB9O1xyXG5cclxuICAgIGNvbnN0IGJhc2ljQWN0aW9uc0hlbHBDb250ZW50ID0gbmV3IEJhc2ljQWN0aW9uc0tleWJvYXJkSGVscFNlY3Rpb24oIG1lcmdlKCBoZWxwQ29udGVudE9wdGlvbnMsIHtcclxuICAgICAgd2l0aENoZWNrYm94Q29udGVudDogdHJ1ZVxyXG4gICAgfSApICk7XHJcbiAgICBjb25zdCBzbGlkZXJDb250cm9sc0tleWJvYXJkSGVscFNlY3Rpb24gPSBuZXcgU2xpZGVyQ29udHJvbHNLZXlib2FyZEhlbHBTZWN0aW9uKCBoZWxwQ29udGVudE9wdGlvbnMgKTtcclxuXHJcbiAgICBjb25zdCBncmFiRHJhZ0hlbHBDb250ZW50ID0gbmV3IEdyYWJSZWxlYXNlS2V5Ym9hcmRIZWxwU2VjdGlvbiggbmV3IFN0cmluZ1Byb3BlcnR5KCAnR3JhYmJhYmxlJyApLFxyXG4gICAgICBuZXcgU3RyaW5nUHJvcGVydHkoICdncmFiYmFibGUnICksIGhlbHBDb250ZW50T3B0aW9ucyApO1xyXG4gICAgY29uc3QgbGVmdEhlbHBDb250ZW50ID0gWyBiYXNpY0FjdGlvbnNIZWxwQ29udGVudCBdO1xyXG5cclxuICAgIEtleWJvYXJkSGVscFNlY3Rpb24uYWxpZ25IZWxwU2VjdGlvbkljb25zKCBbIGdyYWJEcmFnSGVscENvbnRlbnQsIHNsaWRlckNvbnRyb2xzS2V5Ym9hcmRIZWxwU2VjdGlvbiBdICk7XHJcbiAgICBjb25zdCByaWdodEhlbHBDb250ZW50ID0gWyBncmFiRHJhZ0hlbHBDb250ZW50LCBzbGlkZXJDb250cm9sc0tleWJvYXJkSGVscFNlY3Rpb24gXTtcclxuXHJcbiAgICBzdXBlciggbGVmdEhlbHBDb250ZW50LCByaWdodEhlbHBDb250ZW50ICk7XHJcbiAgfVxyXG59XHJcblxyXG5zY2VuZXJ5UGhldC5yZWdpc3RlciggJ1NjZW5lcnlQaGV0S2V5Ym9hcmRIZWxwQ29udGVudCcsIFNjZW5lcnlQaGV0S2V5Ym9hcmRIZWxwQ29udGVudCApOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxjQUFjLE1BQU0sb0NBQW9DO0FBQy9ELE9BQU9DLEtBQUssTUFBTSxnQ0FBZ0M7QUFDbEQsT0FBT0MsK0JBQStCLE1BQU0scURBQXFEO0FBQ2pHLE9BQU9DLDhCQUE4QixNQUFNLG9EQUFvRDtBQUMvRixPQUFPQyxtQkFBbUIsTUFBTSx5Q0FBeUM7QUFDekUsT0FBT0MsaUNBQWlDLE1BQU0sdURBQXVEO0FBQ3JHLE9BQU9DLDRCQUE0QixNQUFNLGtEQUFrRDtBQUMzRixPQUFPQyxXQUFXLE1BQU0sbUJBQW1CO0FBRTNDLGVBQWUsTUFBTUMsOEJBQThCLFNBQVNGLDRCQUE0QixDQUFDO0VBRWhGRyxXQUFXQSxDQUFBLEVBQUc7SUFFbkIsTUFBTUMsa0JBQWtCLEdBQUc7TUFFekI7TUFDQUMsWUFBWSxFQUFFO0lBQ2hCLENBQUM7SUFFRCxNQUFNQyx1QkFBdUIsR0FBRyxJQUFJViwrQkFBK0IsQ0FBRUQsS0FBSyxDQUFFUyxrQkFBa0IsRUFBRTtNQUM5RkcsbUJBQW1CLEVBQUU7SUFDdkIsQ0FBRSxDQUFFLENBQUM7SUFDTCxNQUFNQyxpQ0FBaUMsR0FBRyxJQUFJVCxpQ0FBaUMsQ0FBRUssa0JBQW1CLENBQUM7SUFFckcsTUFBTUssbUJBQW1CLEdBQUcsSUFBSVosOEJBQThCLENBQUUsSUFBSUgsY0FBYyxDQUFFLFdBQVksQ0FBQyxFQUMvRixJQUFJQSxjQUFjLENBQUUsV0FBWSxDQUFDLEVBQUVVLGtCQUFtQixDQUFDO0lBQ3pELE1BQU1NLGVBQWUsR0FBRyxDQUFFSix1QkFBdUIsQ0FBRTtJQUVuRFIsbUJBQW1CLENBQUNhLHFCQUFxQixDQUFFLENBQUVGLG1CQUFtQixFQUFFRCxpQ0FBaUMsQ0FBRyxDQUFDO0lBQ3ZHLE1BQU1JLGdCQUFnQixHQUFHLENBQUVILG1CQUFtQixFQUFFRCxpQ0FBaUMsQ0FBRTtJQUVuRixLQUFLLENBQUVFLGVBQWUsRUFBRUUsZ0JBQWlCLENBQUM7RUFDNUM7QUFDRjtBQUVBWCxXQUFXLENBQUNZLFFBQVEsQ0FBRSxnQ0FBZ0MsRUFBRVgsOEJBQStCLENBQUMifQ==