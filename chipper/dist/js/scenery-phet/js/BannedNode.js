// Copyright 2019-2022, University of Colorado Boulder

/**
 * BannedNode is the universal "no" symbol, which shows a circle with a line through it, see
 * https://en.wikipedia.org/wiki/No_symbol. It's known by a number of  different emoji names, include "banned", see
 * https://emojipedia.org/no-entry-sign/.  It is also referred to as a prohibition sign.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import optionize from '../../phet-core/js/optionize.js';
import { Circle, Line, Node } from '../../scenery/js/imports.js';
import sceneryPhet from './sceneryPhet.js';
export default class BannedNode extends Node {
  constructor(providedOptions) {
    const options = optionize()({
      radius: 20,
      lineWidth: 5,
      stroke: 'red',
      fill: null
    }, providedOptions);
    const circleNode = new Circle(options.radius, {
      lineWidth: options.lineWidth,
      stroke: options.stroke,
      fill: options.fill
    });
    const slashNode = new Line(0, 0, 2 * options.radius, 0, {
      lineWidth: options.lineWidth,
      stroke: options.stroke,
      rotation: Math.PI / 4,
      center: circleNode.center
    });
    options.children = [circleNode, slashNode];
    super(options);
  }
}
sceneryPhet.register('BannedNode', BannedNode);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJvcHRpb25pemUiLCJDaXJjbGUiLCJMaW5lIiwiTm9kZSIsInNjZW5lcnlQaGV0IiwiQmFubmVkTm9kZSIsImNvbnN0cnVjdG9yIiwicHJvdmlkZWRPcHRpb25zIiwib3B0aW9ucyIsInJhZGl1cyIsImxpbmVXaWR0aCIsInN0cm9rZSIsImZpbGwiLCJjaXJjbGVOb2RlIiwic2xhc2hOb2RlIiwicm90YXRpb24iLCJNYXRoIiwiUEkiLCJjZW50ZXIiLCJjaGlsZHJlbiIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiQmFubmVkTm9kZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxOS0yMDIyLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBCYW5uZWROb2RlIGlzIHRoZSB1bml2ZXJzYWwgXCJub1wiIHN5bWJvbCwgd2hpY2ggc2hvd3MgYSBjaXJjbGUgd2l0aCBhIGxpbmUgdGhyb3VnaCBpdCwgc2VlXHJcbiAqIGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL05vX3N5bWJvbC4gSXQncyBrbm93biBieSBhIG51bWJlciBvZiAgZGlmZmVyZW50IGVtb2ppIG5hbWVzLCBpbmNsdWRlIFwiYmFubmVkXCIsIHNlZVxyXG4gKiBodHRwczovL2Vtb2ppcGVkaWEub3JnL25vLWVudHJ5LXNpZ24vLiAgSXQgaXMgYWxzbyByZWZlcnJlZCB0byBhcyBhIHByb2hpYml0aW9uIHNpZ24uXHJcbiAqXHJcbiAqIEBhdXRob3IgQ2hyaXMgTWFsbGV5IChQaXhlbFpvb20sIEluYy4pXHJcbiAqL1xyXG5cclxuaW1wb3J0IG9wdGlvbml6ZSBmcm9tICcuLi8uLi9waGV0LWNvcmUvanMvb3B0aW9uaXplLmpzJztcclxuaW1wb3J0IFN0cmljdE9taXQgZnJvbSAnLi4vLi4vcGhldC1jb3JlL2pzL3R5cGVzL1N0cmljdE9taXQuanMnO1xyXG5pbXBvcnQgUGlja09wdGlvbmFsIGZyb20gJy4uLy4uL3BoZXQtY29yZS9qcy90eXBlcy9QaWNrT3B0aW9uYWwuanMnO1xyXG5pbXBvcnQgeyBDaXJjbGUsIExpbmUsIE5vZGUsIE5vZGVPcHRpb25zLCBQYWludGFibGVPcHRpb25zIH0gZnJvbSAnLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IHNjZW5lcnlQaGV0IGZyb20gJy4vc2NlbmVyeVBoZXQuanMnO1xyXG5cclxudHlwZSBTZWxmT3B0aW9ucyA9IHtcclxuICByYWRpdXM/OiBudW1iZXI7XHJcbn0gJiBQaWNrT3B0aW9uYWw8UGFpbnRhYmxlT3B0aW9ucywgJ2xpbmVXaWR0aCcgfCAnc3Ryb2tlJyB8ICdmaWxsJz47XHJcblxyXG5leHBvcnQgdHlwZSBCYW5uZWROb2RlT3B0aW9ucyA9IFNlbGZPcHRpb25zICYgU3RyaWN0T21pdDxOb2RlT3B0aW9ucywgJ2NoaWxkcmVuJz47XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCYW5uZWROb2RlIGV4dGVuZHMgTm9kZSB7XHJcblxyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvciggcHJvdmlkZWRPcHRpb25zPzogQmFubmVkTm9kZU9wdGlvbnMgKSB7XHJcblxyXG4gICAgY29uc3Qgb3B0aW9ucyA9IG9wdGlvbml6ZTxCYW5uZWROb2RlT3B0aW9ucywgU2VsZk9wdGlvbnMsIE5vZGVPcHRpb25zPigpKCB7XHJcbiAgICAgIHJhZGl1czogMjAsXHJcbiAgICAgIGxpbmVXaWR0aDogNSxcclxuICAgICAgc3Ryb2tlOiAncmVkJyxcclxuICAgICAgZmlsbDogbnVsbFxyXG4gICAgfSwgcHJvdmlkZWRPcHRpb25zICk7XHJcblxyXG4gICAgY29uc3QgY2lyY2xlTm9kZSA9IG5ldyBDaXJjbGUoIG9wdGlvbnMucmFkaXVzLCB7XHJcbiAgICAgIGxpbmVXaWR0aDogb3B0aW9ucy5saW5lV2lkdGgsXHJcbiAgICAgIHN0cm9rZTogb3B0aW9ucy5zdHJva2UsXHJcbiAgICAgIGZpbGw6IG9wdGlvbnMuZmlsbFxyXG4gICAgfSApO1xyXG5cclxuICAgIGNvbnN0IHNsYXNoTm9kZSA9IG5ldyBMaW5lKCAwLCAwLCAyICogb3B0aW9ucy5yYWRpdXMsIDAsIHtcclxuICAgICAgbGluZVdpZHRoOiBvcHRpb25zLmxpbmVXaWR0aCxcclxuICAgICAgc3Ryb2tlOiBvcHRpb25zLnN0cm9rZSxcclxuICAgICAgcm90YXRpb246IE1hdGguUEkgLyA0LFxyXG4gICAgICBjZW50ZXI6IGNpcmNsZU5vZGUuY2VudGVyXHJcbiAgICB9ICk7XHJcblxyXG4gICAgb3B0aW9ucy5jaGlsZHJlbiA9IFsgY2lyY2xlTm9kZSwgc2xhc2hOb2RlIF07XHJcblxyXG4gICAgc3VwZXIoIG9wdGlvbnMgKTtcclxuICB9XHJcbn1cclxuXHJcbnNjZW5lcnlQaGV0LnJlZ2lzdGVyKCAnQmFubmVkTm9kZScsIEJhbm5lZE5vZGUgKTsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLFNBQVMsTUFBTSxpQ0FBaUM7QUFHdkQsU0FBU0MsTUFBTSxFQUFFQyxJQUFJLEVBQUVDLElBQUksUUFBdUMsNkJBQTZCO0FBQy9GLE9BQU9DLFdBQVcsTUFBTSxrQkFBa0I7QUFRMUMsZUFBZSxNQUFNQyxVQUFVLFNBQVNGLElBQUksQ0FBQztFQUVwQ0csV0FBV0EsQ0FBRUMsZUFBbUMsRUFBRztJQUV4RCxNQUFNQyxPQUFPLEdBQUdSLFNBQVMsQ0FBOEMsQ0FBQyxDQUFFO01BQ3hFUyxNQUFNLEVBQUUsRUFBRTtNQUNWQyxTQUFTLEVBQUUsQ0FBQztNQUNaQyxNQUFNLEVBQUUsS0FBSztNQUNiQyxJQUFJLEVBQUU7SUFDUixDQUFDLEVBQUVMLGVBQWdCLENBQUM7SUFFcEIsTUFBTU0sVUFBVSxHQUFHLElBQUlaLE1BQU0sQ0FBRU8sT0FBTyxDQUFDQyxNQUFNLEVBQUU7TUFDN0NDLFNBQVMsRUFBRUYsT0FBTyxDQUFDRSxTQUFTO01BQzVCQyxNQUFNLEVBQUVILE9BQU8sQ0FBQ0csTUFBTTtNQUN0QkMsSUFBSSxFQUFFSixPQUFPLENBQUNJO0lBQ2hCLENBQUUsQ0FBQztJQUVILE1BQU1FLFNBQVMsR0FBRyxJQUFJWixJQUFJLENBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEdBQUdNLE9BQU8sQ0FBQ0MsTUFBTSxFQUFFLENBQUMsRUFBRTtNQUN2REMsU0FBUyxFQUFFRixPQUFPLENBQUNFLFNBQVM7TUFDNUJDLE1BQU0sRUFBRUgsT0FBTyxDQUFDRyxNQUFNO01BQ3RCSSxRQUFRLEVBQUVDLElBQUksQ0FBQ0MsRUFBRSxHQUFHLENBQUM7TUFDckJDLE1BQU0sRUFBRUwsVUFBVSxDQUFDSztJQUNyQixDQUFFLENBQUM7SUFFSFYsT0FBTyxDQUFDVyxRQUFRLEdBQUcsQ0FBRU4sVUFBVSxFQUFFQyxTQUFTLENBQUU7SUFFNUMsS0FBSyxDQUFFTixPQUFRLENBQUM7RUFDbEI7QUFDRjtBQUVBSixXQUFXLENBQUNnQixRQUFRLENBQUUsWUFBWSxFQUFFZixVQUFXLENBQUMifQ==