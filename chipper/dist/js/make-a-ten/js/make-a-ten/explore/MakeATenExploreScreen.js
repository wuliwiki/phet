// Copyright 2016-2022, University of Colorado Boulder

/**
 * Explore screen of Make a Ten. Provides a panel where 100s, 10s or 1s can be dragged out, combined, and pulled
 * apart, and displays the total in the upper-left.
 *
 * @author Sharfudeen Ashraf
 */

import Property from '../../../../axon/js/Property.js';
import Screen from '../../../../joist/js/Screen.js';
import exploreHomeScreen_png from '../../../images/exploreHomeScreen_png.js';
import exploreNavBar_png from '../../../images/exploreNavBar_png.js';
import makeATen from '../../makeATen.js';
import MakeATenStrings from '../../MakeATenStrings.js';
import MakeATenConstants from '../common/MakeATenConstants.js';
import MakeATenUtils from '../common/MakeATenUtils.js';
import MakeATenExploreModel from './model/MakeATenExploreModel.js';
import MakeATenExploreScreenView from './view/MakeATenExploreScreenView.js';
class MakeATenExploreScreen extends Screen {
  constructor() {
    const options = {
      name: MakeATenStrings.screen.exploreStringProperty,
      backgroundColorProperty: new Property(MakeATenConstants.SCREEN_BACKGROUND_COLOR),
      homeScreenIcon: MakeATenUtils.createIconWithBackgroundColor(exploreHomeScreen_png, MakeATenConstants.SCREEN_BACKGROUND_COLOR),
      navigationBarIcon: MakeATenUtils.createIconWithBackgroundColor(exploreNavBar_png, MakeATenConstants.SCREEN_BACKGROUND_COLOR)
    };
    super(() => new MakeATenExploreModel(), model => new MakeATenExploreScreenView(model), options);
  }
}
makeATen.register('MakeATenExploreScreen', MakeATenExploreScreen);
export default MakeATenExploreScreen;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQcm9wZXJ0eSIsIlNjcmVlbiIsImV4cGxvcmVIb21lU2NyZWVuX3BuZyIsImV4cGxvcmVOYXZCYXJfcG5nIiwibWFrZUFUZW4iLCJNYWtlQVRlblN0cmluZ3MiLCJNYWtlQVRlbkNvbnN0YW50cyIsIk1ha2VBVGVuVXRpbHMiLCJNYWtlQVRlbkV4cGxvcmVNb2RlbCIsIk1ha2VBVGVuRXhwbG9yZVNjcmVlblZpZXciLCJNYWtlQVRlbkV4cGxvcmVTY3JlZW4iLCJjb25zdHJ1Y3RvciIsIm9wdGlvbnMiLCJuYW1lIiwic2NyZWVuIiwiZXhwbG9yZVN0cmluZ1Byb3BlcnR5IiwiYmFja2dyb3VuZENvbG9yUHJvcGVydHkiLCJTQ1JFRU5fQkFDS0dST1VORF9DT0xPUiIsImhvbWVTY3JlZW5JY29uIiwiY3JlYXRlSWNvbldpdGhCYWNrZ3JvdW5kQ29sb3IiLCJuYXZpZ2F0aW9uQmFySWNvbiIsIm1vZGVsIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJNYWtlQVRlbkV4cGxvcmVTY3JlZW4uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTYtMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogRXhwbG9yZSBzY3JlZW4gb2YgTWFrZSBhIFRlbi4gUHJvdmlkZXMgYSBwYW5lbCB3aGVyZSAxMDBzLCAxMHMgb3IgMXMgY2FuIGJlIGRyYWdnZWQgb3V0LCBjb21iaW5lZCwgYW5kIHB1bGxlZFxyXG4gKiBhcGFydCwgYW5kIGRpc3BsYXlzIHRoZSB0b3RhbCBpbiB0aGUgdXBwZXItbGVmdC5cclxuICpcclxuICogQGF1dGhvciBTaGFyZnVkZWVuIEFzaHJhZlxyXG4gKi9cclxuXHJcbmltcG9ydCBQcm9wZXJ0eSBmcm9tICcuLi8uLi8uLi8uLi9heG9uL2pzL1Byb3BlcnR5LmpzJztcclxuaW1wb3J0IFNjcmVlbiBmcm9tICcuLi8uLi8uLi8uLi9qb2lzdC9qcy9TY3JlZW4uanMnO1xyXG5pbXBvcnQgZXhwbG9yZUhvbWVTY3JlZW5fcG5nIGZyb20gJy4uLy4uLy4uL2ltYWdlcy9leHBsb3JlSG9tZVNjcmVlbl9wbmcuanMnO1xyXG5pbXBvcnQgZXhwbG9yZU5hdkJhcl9wbmcgZnJvbSAnLi4vLi4vLi4vaW1hZ2VzL2V4cGxvcmVOYXZCYXJfcG5nLmpzJztcclxuaW1wb3J0IG1ha2VBVGVuIGZyb20gJy4uLy4uL21ha2VBVGVuLmpzJztcclxuaW1wb3J0IE1ha2VBVGVuU3RyaW5ncyBmcm9tICcuLi8uLi9NYWtlQVRlblN0cmluZ3MuanMnO1xyXG5pbXBvcnQgTWFrZUFUZW5Db25zdGFudHMgZnJvbSAnLi4vY29tbW9uL01ha2VBVGVuQ29uc3RhbnRzLmpzJztcclxuaW1wb3J0IE1ha2VBVGVuVXRpbHMgZnJvbSAnLi4vY29tbW9uL01ha2VBVGVuVXRpbHMuanMnO1xyXG5pbXBvcnQgTWFrZUFUZW5FeHBsb3JlTW9kZWwgZnJvbSAnLi9tb2RlbC9NYWtlQVRlbkV4cGxvcmVNb2RlbC5qcyc7XHJcbmltcG9ydCBNYWtlQVRlbkV4cGxvcmVTY3JlZW5WaWV3IGZyb20gJy4vdmlldy9NYWtlQVRlbkV4cGxvcmVTY3JlZW5WaWV3LmpzJztcclxuXHJcbmNsYXNzIE1ha2VBVGVuRXhwbG9yZVNjcmVlbiBleHRlbmRzIFNjcmVlbiB7XHJcbiAgY29uc3RydWN0b3IoKSB7XHJcblxyXG4gICAgY29uc3Qgb3B0aW9ucyA9IHtcclxuICAgICAgbmFtZTogTWFrZUFUZW5TdHJpbmdzLnNjcmVlbi5leHBsb3JlU3RyaW5nUHJvcGVydHksXHJcbiAgICAgIGJhY2tncm91bmRDb2xvclByb3BlcnR5OiBuZXcgUHJvcGVydHkoIE1ha2VBVGVuQ29uc3RhbnRzLlNDUkVFTl9CQUNLR1JPVU5EX0NPTE9SICksXHJcbiAgICAgIGhvbWVTY3JlZW5JY29uOiBNYWtlQVRlblV0aWxzLmNyZWF0ZUljb25XaXRoQmFja2dyb3VuZENvbG9yKCBleHBsb3JlSG9tZVNjcmVlbl9wbmcsIE1ha2VBVGVuQ29uc3RhbnRzLlNDUkVFTl9CQUNLR1JPVU5EX0NPTE9SICksXHJcbiAgICAgIG5hdmlnYXRpb25CYXJJY29uOiBNYWtlQVRlblV0aWxzLmNyZWF0ZUljb25XaXRoQmFja2dyb3VuZENvbG9yKCBleHBsb3JlTmF2QmFyX3BuZywgTWFrZUFUZW5Db25zdGFudHMuU0NSRUVOX0JBQ0tHUk9VTkRfQ09MT1IgKVxyXG4gICAgfTtcclxuXHJcbiAgICBzdXBlcihcclxuICAgICAgKCkgPT4gbmV3IE1ha2VBVGVuRXhwbG9yZU1vZGVsKCksXHJcbiAgICAgIG1vZGVsID0+IG5ldyBNYWtlQVRlbkV4cGxvcmVTY3JlZW5WaWV3KCBtb2RlbCApLFxyXG4gICAgICBvcHRpb25zICk7XHJcbiAgfVxyXG59XHJcblxyXG5tYWtlQVRlbi5yZWdpc3RlciggJ01ha2VBVGVuRXhwbG9yZVNjcmVlbicsIE1ha2VBVGVuRXhwbG9yZVNjcmVlbiApO1xyXG5leHBvcnQgZGVmYXVsdCBNYWtlQVRlbkV4cGxvcmVTY3JlZW47Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsUUFBUSxNQUFNLGlDQUFpQztBQUN0RCxPQUFPQyxNQUFNLE1BQU0sZ0NBQWdDO0FBQ25ELE9BQU9DLHFCQUFxQixNQUFNLDBDQUEwQztBQUM1RSxPQUFPQyxpQkFBaUIsTUFBTSxzQ0FBc0M7QUFDcEUsT0FBT0MsUUFBUSxNQUFNLG1CQUFtQjtBQUN4QyxPQUFPQyxlQUFlLE1BQU0sMEJBQTBCO0FBQ3RELE9BQU9DLGlCQUFpQixNQUFNLGdDQUFnQztBQUM5RCxPQUFPQyxhQUFhLE1BQU0sNEJBQTRCO0FBQ3RELE9BQU9DLG9CQUFvQixNQUFNLGlDQUFpQztBQUNsRSxPQUFPQyx5QkFBeUIsTUFBTSxxQ0FBcUM7QUFFM0UsTUFBTUMscUJBQXFCLFNBQVNULE1BQU0sQ0FBQztFQUN6Q1UsV0FBV0EsQ0FBQSxFQUFHO0lBRVosTUFBTUMsT0FBTyxHQUFHO01BQ2RDLElBQUksRUFBRVIsZUFBZSxDQUFDUyxNQUFNLENBQUNDLHFCQUFxQjtNQUNsREMsdUJBQXVCLEVBQUUsSUFBSWhCLFFBQVEsQ0FBRU0saUJBQWlCLENBQUNXLHVCQUF3QixDQUFDO01BQ2xGQyxjQUFjLEVBQUVYLGFBQWEsQ0FBQ1ksNkJBQTZCLENBQUVqQixxQkFBcUIsRUFBRUksaUJBQWlCLENBQUNXLHVCQUF3QixDQUFDO01BQy9IRyxpQkFBaUIsRUFBRWIsYUFBYSxDQUFDWSw2QkFBNkIsQ0FBRWhCLGlCQUFpQixFQUFFRyxpQkFBaUIsQ0FBQ1csdUJBQXdCO0lBQy9ILENBQUM7SUFFRCxLQUFLLENBQ0gsTUFBTSxJQUFJVCxvQkFBb0IsQ0FBQyxDQUFDLEVBQ2hDYSxLQUFLLElBQUksSUFBSVoseUJBQXlCLENBQUVZLEtBQU0sQ0FBQyxFQUMvQ1QsT0FBUSxDQUFDO0VBQ2I7QUFDRjtBQUVBUixRQUFRLENBQUNrQixRQUFRLENBQUUsdUJBQXVCLEVBQUVaLHFCQUFzQixDQUFDO0FBQ25FLGVBQWVBLHFCQUFxQiJ9