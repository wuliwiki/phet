// Copyright 2016-2022, University of Colorado Boulder

/**
 * Game screen for make-a-ten. Includes 10 levels, where the goal for each is to combine the 2 numbers together into
 * one number by manipulating with the concept of making a ten. Each level can generate an infinite number of
 * challenges, so the score for each level is an integer (instead of a proportion like other sims).
 *
 * @author Sharfudeen Ashraf
 */

import Property from '../../../../axon/js/Property.js';
import Screen from '../../../../joist/js/Screen.js';
import gameHomeScreen_png from '../../../images/gameHomeScreen_png.js';
import gameNavBar_png from '../../../images/gameNavBar_png.js';
import makeATen from '../../makeATen.js';
import MakeATenStrings from '../../MakeATenStrings.js';
import MakeATenConstants from '../common/MakeATenConstants.js';
import MakeATenUtils from '../common/MakeATenUtils.js';
import MakeATenGameModel from './model/MakeATenGameModel.js';
import MakeATenGameScreenView from './view/MakeATenGameScreenView.js';
class MakeATenGameScreen extends Screen {
  constructor() {
    const options = {
      name: MakeATenStrings.screen.gameStringProperty,
      backgroundColorProperty: new Property(MakeATenConstants.SCREEN_BACKGROUND_COLOR),
      homeScreenIcon: MakeATenUtils.createIconWithBackgroundColor(gameHomeScreen_png, MakeATenConstants.SCREEN_BACKGROUND_COLOR),
      navigationBarIcon: MakeATenUtils.createIconWithBackgroundColor(gameNavBar_png, MakeATenConstants.SCREEN_BACKGROUND_COLOR)
    };
    super(() => new MakeATenGameModel(), model => new MakeATenGameScreenView(model), options);
  }
}
makeATen.register('MakeATenGameScreen', MakeATenGameScreen);
export default MakeATenGameScreen;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQcm9wZXJ0eSIsIlNjcmVlbiIsImdhbWVIb21lU2NyZWVuX3BuZyIsImdhbWVOYXZCYXJfcG5nIiwibWFrZUFUZW4iLCJNYWtlQVRlblN0cmluZ3MiLCJNYWtlQVRlbkNvbnN0YW50cyIsIk1ha2VBVGVuVXRpbHMiLCJNYWtlQVRlbkdhbWVNb2RlbCIsIk1ha2VBVGVuR2FtZVNjcmVlblZpZXciLCJNYWtlQVRlbkdhbWVTY3JlZW4iLCJjb25zdHJ1Y3RvciIsIm9wdGlvbnMiLCJuYW1lIiwic2NyZWVuIiwiZ2FtZVN0cmluZ1Byb3BlcnR5IiwiYmFja2dyb3VuZENvbG9yUHJvcGVydHkiLCJTQ1JFRU5fQkFDS0dST1VORF9DT0xPUiIsImhvbWVTY3JlZW5JY29uIiwiY3JlYXRlSWNvbldpdGhCYWNrZ3JvdW5kQ29sb3IiLCJuYXZpZ2F0aW9uQmFySWNvbiIsIm1vZGVsIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJNYWtlQVRlbkdhbWVTY3JlZW4uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTYtMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogR2FtZSBzY3JlZW4gZm9yIG1ha2UtYS10ZW4uIEluY2x1ZGVzIDEwIGxldmVscywgd2hlcmUgdGhlIGdvYWwgZm9yIGVhY2ggaXMgdG8gY29tYmluZSB0aGUgMiBudW1iZXJzIHRvZ2V0aGVyIGludG9cclxuICogb25lIG51bWJlciBieSBtYW5pcHVsYXRpbmcgd2l0aCB0aGUgY29uY2VwdCBvZiBtYWtpbmcgYSB0ZW4uIEVhY2ggbGV2ZWwgY2FuIGdlbmVyYXRlIGFuIGluZmluaXRlIG51bWJlciBvZlxyXG4gKiBjaGFsbGVuZ2VzLCBzbyB0aGUgc2NvcmUgZm9yIGVhY2ggbGV2ZWwgaXMgYW4gaW50ZWdlciAoaW5zdGVhZCBvZiBhIHByb3BvcnRpb24gbGlrZSBvdGhlciBzaW1zKS5cclxuICpcclxuICogQGF1dGhvciBTaGFyZnVkZWVuIEFzaHJhZlxyXG4gKi9cclxuXHJcbmltcG9ydCBQcm9wZXJ0eSBmcm9tICcuLi8uLi8uLi8uLi9heG9uL2pzL1Byb3BlcnR5LmpzJztcclxuaW1wb3J0IFNjcmVlbiBmcm9tICcuLi8uLi8uLi8uLi9qb2lzdC9qcy9TY3JlZW4uanMnO1xyXG5pbXBvcnQgZ2FtZUhvbWVTY3JlZW5fcG5nIGZyb20gJy4uLy4uLy4uL2ltYWdlcy9nYW1lSG9tZVNjcmVlbl9wbmcuanMnO1xyXG5pbXBvcnQgZ2FtZU5hdkJhcl9wbmcgZnJvbSAnLi4vLi4vLi4vaW1hZ2VzL2dhbWVOYXZCYXJfcG5nLmpzJztcclxuaW1wb3J0IG1ha2VBVGVuIGZyb20gJy4uLy4uL21ha2VBVGVuLmpzJztcclxuaW1wb3J0IE1ha2VBVGVuU3RyaW5ncyBmcm9tICcuLi8uLi9NYWtlQVRlblN0cmluZ3MuanMnO1xyXG5pbXBvcnQgTWFrZUFUZW5Db25zdGFudHMgZnJvbSAnLi4vY29tbW9uL01ha2VBVGVuQ29uc3RhbnRzLmpzJztcclxuaW1wb3J0IE1ha2VBVGVuVXRpbHMgZnJvbSAnLi4vY29tbW9uL01ha2VBVGVuVXRpbHMuanMnO1xyXG5pbXBvcnQgTWFrZUFUZW5HYW1lTW9kZWwgZnJvbSAnLi9tb2RlbC9NYWtlQVRlbkdhbWVNb2RlbC5qcyc7XHJcbmltcG9ydCBNYWtlQVRlbkdhbWVTY3JlZW5WaWV3IGZyb20gJy4vdmlldy9NYWtlQVRlbkdhbWVTY3JlZW5WaWV3LmpzJztcclxuXHJcbmNsYXNzIE1ha2VBVGVuR2FtZVNjcmVlbiBleHRlbmRzIFNjcmVlbiB7XHJcbiAgY29uc3RydWN0b3IoKSB7XHJcblxyXG4gICAgY29uc3Qgb3B0aW9ucyA9IHtcclxuICAgICAgbmFtZTogTWFrZUFUZW5TdHJpbmdzLnNjcmVlbi5nYW1lU3RyaW5nUHJvcGVydHksXHJcbiAgICAgIGJhY2tncm91bmRDb2xvclByb3BlcnR5OiBuZXcgUHJvcGVydHkoIE1ha2VBVGVuQ29uc3RhbnRzLlNDUkVFTl9CQUNLR1JPVU5EX0NPTE9SICksXHJcbiAgICAgIGhvbWVTY3JlZW5JY29uOiBNYWtlQVRlblV0aWxzLmNyZWF0ZUljb25XaXRoQmFja2dyb3VuZENvbG9yKCBnYW1lSG9tZVNjcmVlbl9wbmcsIE1ha2VBVGVuQ29uc3RhbnRzLlNDUkVFTl9CQUNLR1JPVU5EX0NPTE9SICksXHJcbiAgICAgIG5hdmlnYXRpb25CYXJJY29uOiBNYWtlQVRlblV0aWxzLmNyZWF0ZUljb25XaXRoQmFja2dyb3VuZENvbG9yKCBnYW1lTmF2QmFyX3BuZywgTWFrZUFUZW5Db25zdGFudHMuU0NSRUVOX0JBQ0tHUk9VTkRfQ09MT1IgKVxyXG4gICAgfTtcclxuXHJcbiAgICBzdXBlcihcclxuICAgICAgKCkgPT4gbmV3IE1ha2VBVGVuR2FtZU1vZGVsKCksXHJcbiAgICAgIG1vZGVsID0+IG5ldyBNYWtlQVRlbkdhbWVTY3JlZW5WaWV3KCBtb2RlbCApLFxyXG4gICAgICBvcHRpb25zICk7XHJcbiAgfVxyXG59XHJcblxyXG5tYWtlQVRlbi5yZWdpc3RlciggJ01ha2VBVGVuR2FtZVNjcmVlbicsIE1ha2VBVGVuR2FtZVNjcmVlbiApO1xyXG5leHBvcnQgZGVmYXVsdCBNYWtlQVRlbkdhbWVTY3JlZW47Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxRQUFRLE1BQU0saUNBQWlDO0FBQ3RELE9BQU9DLE1BQU0sTUFBTSxnQ0FBZ0M7QUFDbkQsT0FBT0Msa0JBQWtCLE1BQU0sdUNBQXVDO0FBQ3RFLE9BQU9DLGNBQWMsTUFBTSxtQ0FBbUM7QUFDOUQsT0FBT0MsUUFBUSxNQUFNLG1CQUFtQjtBQUN4QyxPQUFPQyxlQUFlLE1BQU0sMEJBQTBCO0FBQ3RELE9BQU9DLGlCQUFpQixNQUFNLGdDQUFnQztBQUM5RCxPQUFPQyxhQUFhLE1BQU0sNEJBQTRCO0FBQ3RELE9BQU9DLGlCQUFpQixNQUFNLDhCQUE4QjtBQUM1RCxPQUFPQyxzQkFBc0IsTUFBTSxrQ0FBa0M7QUFFckUsTUFBTUMsa0JBQWtCLFNBQVNULE1BQU0sQ0FBQztFQUN0Q1UsV0FBV0EsQ0FBQSxFQUFHO0lBRVosTUFBTUMsT0FBTyxHQUFHO01BQ2RDLElBQUksRUFBRVIsZUFBZSxDQUFDUyxNQUFNLENBQUNDLGtCQUFrQjtNQUMvQ0MsdUJBQXVCLEVBQUUsSUFBSWhCLFFBQVEsQ0FBRU0saUJBQWlCLENBQUNXLHVCQUF3QixDQUFDO01BQ2xGQyxjQUFjLEVBQUVYLGFBQWEsQ0FBQ1ksNkJBQTZCLENBQUVqQixrQkFBa0IsRUFBRUksaUJBQWlCLENBQUNXLHVCQUF3QixDQUFDO01BQzVIRyxpQkFBaUIsRUFBRWIsYUFBYSxDQUFDWSw2QkFBNkIsQ0FBRWhCLGNBQWMsRUFBRUcsaUJBQWlCLENBQUNXLHVCQUF3QjtJQUM1SCxDQUFDO0lBRUQsS0FBSyxDQUNILE1BQU0sSUFBSVQsaUJBQWlCLENBQUMsQ0FBQyxFQUM3QmEsS0FBSyxJQUFJLElBQUlaLHNCQUFzQixDQUFFWSxLQUFNLENBQUMsRUFDNUNULE9BQVEsQ0FBQztFQUNiO0FBQ0Y7QUFFQVIsUUFBUSxDQUFDa0IsUUFBUSxDQUFFLG9CQUFvQixFQUFFWixrQkFBbUIsQ0FBQztBQUM3RCxlQUFlQSxrQkFBa0IifQ==