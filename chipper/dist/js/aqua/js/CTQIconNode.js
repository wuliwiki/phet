// Copyright 2022, University of Colorado Boulder

/**
 * The icon for the CT Quick (CTQ) Slackbot profile.
 *
 * @author Chris Klusendorf (PhET Interactive Simulations)
 */

import { Circle, Color, Font, Node, Rectangle, Text } from '../../scenery/js/imports.js';
import ScreenView from '../../joist/js/ScreenView.js';
// colors
const phetBlue = '#6acdf5';
const phetYellow = '#fee108';
const phetPink = '#e01e5a';

// constants
const HEIGHT = ScreenView.DEFAULT_LAYOUT_BOUNDS.height;
class CTQIconNode extends Node {
  constructor(options) {
    super(options);
    const backgroundSquare = new Rectangle(0, 0, HEIGHT, HEIGHT, {
      fill: Color.BLACK
    });
    this.addChild(backgroundSquare);

    // create and add the circle of the "Q"
    const qLineWidth = 36;
    const qCircle = new Circle({
      radius: HEIGHT / 2 - 58,
      stroke: phetPink,
      lineWidth: 40
    });
    qCircle.center = backgroundSquare.center;
    this.addChild(qCircle);

    // create and add the line of the "Q"
    const lineInset = 34.5;
    const qLine = new Rectangle(0, 0, qLineWidth * 3.7, qLineWidth, qLineWidth / 2, qLineWidth / 2, {
      fill: phetPink,
      rotation: Math.PI / 4
    });
    qLine.right = qCircle.right - lineInset;
    qLine.bottom = qCircle.bottom - lineInset;
    this.addChild(qLine);
    const ctFontSize = 270;

    // create and add the "C" inside the "Q"
    const cText = new Text('C', {
      font: new Font({
        family: 'Arial Rounded MT Bold',
        size: ctFontSize,
        weight: 'bold'
      }),
      fill: phetBlue
    });
    cText.centerX = backgroundSquare.centerX - 89;
    cText.centerY = backgroundSquare.centerY;
    this.addChild(cText);

    // create and add the "T" inside the "Q"
    const tText = new Text('T', {
      font: new Font({
        family: 'Arial Rounded MT Bold',
        size: ctFontSize,
        weight: 'bold'
      }),
      fill: phetYellow
    });
    tText.centerX = backgroundSquare.centerX + 95;
    tText.centerY = backgroundSquare.centerY;
    this.addChild(tText);
  }
}
export default CTQIconNode;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJDaXJjbGUiLCJDb2xvciIsIkZvbnQiLCJOb2RlIiwiUmVjdGFuZ2xlIiwiVGV4dCIsIlNjcmVlblZpZXciLCJwaGV0Qmx1ZSIsInBoZXRZZWxsb3ciLCJwaGV0UGluayIsIkhFSUdIVCIsIkRFRkFVTFRfTEFZT1VUX0JPVU5EUyIsImhlaWdodCIsIkNUUUljb25Ob2RlIiwiY29uc3RydWN0b3IiLCJvcHRpb25zIiwiYmFja2dyb3VuZFNxdWFyZSIsImZpbGwiLCJCTEFDSyIsImFkZENoaWxkIiwicUxpbmVXaWR0aCIsInFDaXJjbGUiLCJyYWRpdXMiLCJzdHJva2UiLCJsaW5lV2lkdGgiLCJjZW50ZXIiLCJsaW5lSW5zZXQiLCJxTGluZSIsInJvdGF0aW9uIiwiTWF0aCIsIlBJIiwicmlnaHQiLCJib3R0b20iLCJjdEZvbnRTaXplIiwiY1RleHQiLCJmb250IiwiZmFtaWx5Iiwic2l6ZSIsIndlaWdodCIsImNlbnRlclgiLCJjZW50ZXJZIiwidFRleHQiXSwic291cmNlcyI6WyJDVFFJY29uTm9kZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogVGhlIGljb24gZm9yIHRoZSBDVCBRdWljayAoQ1RRKSBTbGFja2JvdCBwcm9maWxlLlxyXG4gKlxyXG4gKiBAYXV0aG9yIENocmlzIEtsdXNlbmRvcmYgKFBoRVQgSW50ZXJhY3RpdmUgU2ltdWxhdGlvbnMpXHJcbiAqL1xyXG5cclxuaW1wb3J0IHsgQ2lyY2xlLCBDb2xvciwgRm9udCwgTm9kZSwgTm9kZU9wdGlvbnMsIFJlY3RhbmdsZSwgVGV4dCB9IGZyb20gJy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XHJcbmltcG9ydCBTY3JlZW5WaWV3IGZyb20gJy4uLy4uL2pvaXN0L2pzL1NjcmVlblZpZXcuanMnO1xyXG5pbXBvcnQgeyBFbXB0eVNlbGZPcHRpb25zIH0gZnJvbSAnLi4vLi4vcGhldC1jb3JlL2pzL29wdGlvbml6ZS5qcyc7XHJcblxyXG4vLyBjb2xvcnNcclxuY29uc3QgcGhldEJsdWUgPSAnIzZhY2RmNSc7XHJcbmNvbnN0IHBoZXRZZWxsb3cgPSAnI2ZlZTEwOCc7XHJcbmNvbnN0IHBoZXRQaW5rID0gJyNlMDFlNWEnO1xyXG5cclxuLy8gY29uc3RhbnRzXHJcbmNvbnN0IEhFSUdIVCA9IFNjcmVlblZpZXcuREVGQVVMVF9MQVlPVVRfQk9VTkRTLmhlaWdodDtcclxuXHJcbnR5cGUgU2VsZk9wdGlvbnMgPSBFbXB0eVNlbGZPcHRpb25zO1xyXG50eXBlIEN0cUxvZ29TY3JlZW5WaWV3T3B0aW9ucyA9IFNlbGZPcHRpb25zICYgTm9kZU9wdGlvbnM7XHJcblxyXG5jbGFzcyBDVFFJY29uTm9kZSBleHRlbmRzIE5vZGUge1xyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoIG9wdGlvbnM/OiBDdHFMb2dvU2NyZWVuVmlld09wdGlvbnMgKSB7XHJcbiAgICBzdXBlciggb3B0aW9ucyApO1xyXG5cclxuICAgIGNvbnN0IGJhY2tncm91bmRTcXVhcmUgPSBuZXcgUmVjdGFuZ2xlKCAwLCAwLCBIRUlHSFQsIEhFSUdIVCwge1xyXG4gICAgICBmaWxsOiBDb2xvci5CTEFDS1xyXG4gICAgfSApO1xyXG4gICAgdGhpcy5hZGRDaGlsZCggYmFja2dyb3VuZFNxdWFyZSApO1xyXG5cclxuICAgIC8vIGNyZWF0ZSBhbmQgYWRkIHRoZSBjaXJjbGUgb2YgdGhlIFwiUVwiXHJcbiAgICBjb25zdCBxTGluZVdpZHRoID0gMzY7XHJcbiAgICBjb25zdCBxQ2lyY2xlID0gbmV3IENpcmNsZSgge1xyXG4gICAgICByYWRpdXM6IEhFSUdIVCAvIDIgLSA1OCxcclxuICAgICAgc3Ryb2tlOiBwaGV0UGluayxcclxuICAgICAgbGluZVdpZHRoOiA0MFxyXG4gICAgfSApO1xyXG4gICAgcUNpcmNsZS5jZW50ZXIgPSBiYWNrZ3JvdW5kU3F1YXJlLmNlbnRlcjtcclxuICAgIHRoaXMuYWRkQ2hpbGQoIHFDaXJjbGUgKTtcclxuXHJcbiAgICAvLyBjcmVhdGUgYW5kIGFkZCB0aGUgbGluZSBvZiB0aGUgXCJRXCJcclxuICAgIGNvbnN0IGxpbmVJbnNldCA9IDM0LjU7XHJcbiAgICBjb25zdCBxTGluZSA9IG5ldyBSZWN0YW5nbGUoIDAsIDAsIHFMaW5lV2lkdGggKiAzLjcsIHFMaW5lV2lkdGgsIHFMaW5lV2lkdGggLyAyLCBxTGluZVdpZHRoIC8gMiwge1xyXG4gICAgICBmaWxsOiBwaGV0UGluayxcclxuICAgICAgcm90YXRpb246IE1hdGguUEkgLyA0XHJcbiAgICB9ICk7XHJcbiAgICBxTGluZS5yaWdodCA9IHFDaXJjbGUucmlnaHQgLSBsaW5lSW5zZXQ7XHJcbiAgICBxTGluZS5ib3R0b20gPSBxQ2lyY2xlLmJvdHRvbSAtIGxpbmVJbnNldDtcclxuICAgIHRoaXMuYWRkQ2hpbGQoIHFMaW5lICk7XHJcblxyXG4gICAgY29uc3QgY3RGb250U2l6ZSA9IDI3MDtcclxuXHJcbiAgICAvLyBjcmVhdGUgYW5kIGFkZCB0aGUgXCJDXCIgaW5zaWRlIHRoZSBcIlFcIlxyXG4gICAgY29uc3QgY1RleHQgPSBuZXcgVGV4dCggJ0MnLCB7XHJcbiAgICAgIGZvbnQ6IG5ldyBGb250KCB7XHJcbiAgICAgICAgZmFtaWx5OiAnQXJpYWwgUm91bmRlZCBNVCBCb2xkJyxcclxuICAgICAgICBzaXplOiBjdEZvbnRTaXplLFxyXG4gICAgICAgIHdlaWdodDogJ2JvbGQnXHJcbiAgICAgIH0gKSxcclxuICAgICAgZmlsbDogcGhldEJsdWVcclxuICAgIH0gKTtcclxuICAgIGNUZXh0LmNlbnRlclggPSBiYWNrZ3JvdW5kU3F1YXJlLmNlbnRlclggLSA4OTtcclxuICAgIGNUZXh0LmNlbnRlclkgPSBiYWNrZ3JvdW5kU3F1YXJlLmNlbnRlclk7XHJcbiAgICB0aGlzLmFkZENoaWxkKCBjVGV4dCApO1xyXG5cclxuICAgIC8vIGNyZWF0ZSBhbmQgYWRkIHRoZSBcIlRcIiBpbnNpZGUgdGhlIFwiUVwiXHJcbiAgICBjb25zdCB0VGV4dCA9IG5ldyBUZXh0KCAnVCcsIHtcclxuICAgICAgZm9udDogbmV3IEZvbnQoIHtcclxuICAgICAgICBmYW1pbHk6ICdBcmlhbCBSb3VuZGVkIE1UIEJvbGQnLFxyXG4gICAgICAgIHNpemU6IGN0Rm9udFNpemUsXHJcbiAgICAgICAgd2VpZ2h0OiAnYm9sZCdcclxuICAgICAgfSApLFxyXG4gICAgICBmaWxsOiBwaGV0WWVsbG93XHJcbiAgICB9ICk7XHJcbiAgICB0VGV4dC5jZW50ZXJYID0gYmFja2dyb3VuZFNxdWFyZS5jZW50ZXJYICsgOTU7XHJcbiAgICB0VGV4dC5jZW50ZXJZID0gYmFja2dyb3VuZFNxdWFyZS5jZW50ZXJZO1xyXG4gICAgdGhpcy5hZGRDaGlsZCggdFRleHQgKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IENUUUljb25Ob2RlOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxTQUFTQSxNQUFNLEVBQUVDLEtBQUssRUFBRUMsSUFBSSxFQUFFQyxJQUFJLEVBQWVDLFNBQVMsRUFBRUMsSUFBSSxRQUFRLDZCQUE2QjtBQUNyRyxPQUFPQyxVQUFVLE1BQU0sOEJBQThCO0FBR3JEO0FBQ0EsTUFBTUMsUUFBUSxHQUFHLFNBQVM7QUFDMUIsTUFBTUMsVUFBVSxHQUFHLFNBQVM7QUFDNUIsTUFBTUMsUUFBUSxHQUFHLFNBQVM7O0FBRTFCO0FBQ0EsTUFBTUMsTUFBTSxHQUFHSixVQUFVLENBQUNLLHFCQUFxQixDQUFDQyxNQUFNO0FBS3RELE1BQU1DLFdBQVcsU0FBU1YsSUFBSSxDQUFDO0VBRXRCVyxXQUFXQSxDQUFFQyxPQUFrQyxFQUFHO0lBQ3ZELEtBQUssQ0FBRUEsT0FBUSxDQUFDO0lBRWhCLE1BQU1DLGdCQUFnQixHQUFHLElBQUlaLFNBQVMsQ0FBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFTSxNQUFNLEVBQUVBLE1BQU0sRUFBRTtNQUM1RE8sSUFBSSxFQUFFaEIsS0FBSyxDQUFDaUI7SUFDZCxDQUFFLENBQUM7SUFDSCxJQUFJLENBQUNDLFFBQVEsQ0FBRUgsZ0JBQWlCLENBQUM7O0lBRWpDO0lBQ0EsTUFBTUksVUFBVSxHQUFHLEVBQUU7SUFDckIsTUFBTUMsT0FBTyxHQUFHLElBQUlyQixNQUFNLENBQUU7TUFDMUJzQixNQUFNLEVBQUVaLE1BQU0sR0FBRyxDQUFDLEdBQUcsRUFBRTtNQUN2QmEsTUFBTSxFQUFFZCxRQUFRO01BQ2hCZSxTQUFTLEVBQUU7SUFDYixDQUFFLENBQUM7SUFDSEgsT0FBTyxDQUFDSSxNQUFNLEdBQUdULGdCQUFnQixDQUFDUyxNQUFNO0lBQ3hDLElBQUksQ0FBQ04sUUFBUSxDQUFFRSxPQUFRLENBQUM7O0lBRXhCO0lBQ0EsTUFBTUssU0FBUyxHQUFHLElBQUk7SUFDdEIsTUFBTUMsS0FBSyxHQUFHLElBQUl2QixTQUFTLENBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRWdCLFVBQVUsR0FBRyxHQUFHLEVBQUVBLFVBQVUsRUFBRUEsVUFBVSxHQUFHLENBQUMsRUFBRUEsVUFBVSxHQUFHLENBQUMsRUFBRTtNQUMvRkgsSUFBSSxFQUFFUixRQUFRO01BQ2RtQixRQUFRLEVBQUVDLElBQUksQ0FBQ0MsRUFBRSxHQUFHO0lBQ3RCLENBQUUsQ0FBQztJQUNISCxLQUFLLENBQUNJLEtBQUssR0FBR1YsT0FBTyxDQUFDVSxLQUFLLEdBQUdMLFNBQVM7SUFDdkNDLEtBQUssQ0FBQ0ssTUFBTSxHQUFHWCxPQUFPLENBQUNXLE1BQU0sR0FBR04sU0FBUztJQUN6QyxJQUFJLENBQUNQLFFBQVEsQ0FBRVEsS0FBTSxDQUFDO0lBRXRCLE1BQU1NLFVBQVUsR0FBRyxHQUFHOztJQUV0QjtJQUNBLE1BQU1DLEtBQUssR0FBRyxJQUFJN0IsSUFBSSxDQUFFLEdBQUcsRUFBRTtNQUMzQjhCLElBQUksRUFBRSxJQUFJakMsSUFBSSxDQUFFO1FBQ2RrQyxNQUFNLEVBQUUsdUJBQXVCO1FBQy9CQyxJQUFJLEVBQUVKLFVBQVU7UUFDaEJLLE1BQU0sRUFBRTtNQUNWLENBQUUsQ0FBQztNQUNIckIsSUFBSSxFQUFFVjtJQUNSLENBQUUsQ0FBQztJQUNIMkIsS0FBSyxDQUFDSyxPQUFPLEdBQUd2QixnQkFBZ0IsQ0FBQ3VCLE9BQU8sR0FBRyxFQUFFO0lBQzdDTCxLQUFLLENBQUNNLE9BQU8sR0FBR3hCLGdCQUFnQixDQUFDd0IsT0FBTztJQUN4QyxJQUFJLENBQUNyQixRQUFRLENBQUVlLEtBQU0sQ0FBQzs7SUFFdEI7SUFDQSxNQUFNTyxLQUFLLEdBQUcsSUFBSXBDLElBQUksQ0FBRSxHQUFHLEVBQUU7TUFDM0I4QixJQUFJLEVBQUUsSUFBSWpDLElBQUksQ0FBRTtRQUNka0MsTUFBTSxFQUFFLHVCQUF1QjtRQUMvQkMsSUFBSSxFQUFFSixVQUFVO1FBQ2hCSyxNQUFNLEVBQUU7TUFDVixDQUFFLENBQUM7TUFDSHJCLElBQUksRUFBRVQ7SUFDUixDQUFFLENBQUM7SUFDSGlDLEtBQUssQ0FBQ0YsT0FBTyxHQUFHdkIsZ0JBQWdCLENBQUN1QixPQUFPLEdBQUcsRUFBRTtJQUM3Q0UsS0FBSyxDQUFDRCxPQUFPLEdBQUd4QixnQkFBZ0IsQ0FBQ3dCLE9BQU87SUFDeEMsSUFBSSxDQUFDckIsUUFBUSxDQUFFc0IsS0FBTSxDQUFDO0VBQ3hCO0FBQ0Y7QUFFQSxlQUFlNUIsV0FBVyJ9