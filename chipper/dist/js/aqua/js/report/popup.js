// Copyright 2022, University of Colorado Boulder

/**
 * Displays a self-updating report of continuous test results
 *
 * @author Jonathan Olson <jonathan.olson@colorado.edu>
 */

import Property from '../../../axon/js/Property.js';
import escapeHTML from '../../../phet-core/js/escapeHTML.js';
const popupIframeProperty = new Property(null);
const popup = (triggerNode, message) => {
  const messageHTML = message.split('\n').map(escapeHTML).join('<br>');
  const iframe = document.createElement('iframe');
  document.body.appendChild(iframe);

  // Content
  iframe.contentWindow.document.open();
  iframe.contentWindow.document.write(`${'<!DOCTYPE html>' + '<html lang="en">' + '<head><title>CT Info</title></head>' + '<body style="font-size: 12px; font-family: Arial">'}${messageHTML}</body>` + '</html>');
  iframe.contentWindow.document.close();

  // Styles
  iframe.contentWindow.document.body.style.background = 'white';
  iframe.style.border = '1px solid black';

  // Make it wide before measuring
  iframe.style.width = `${1000}px`;

  // Measure the width and adjust
  iframe.style.width = `${iframe.contentWindow.document.documentElement.scrollWidth}px`;

  // Set height after, measuring after the width change to make sure it has room
  iframe.style.height = `${iframe.contentWindow.document.documentElement.scrollHeight}px`;

  // Positioning
  const point = triggerNode.parentToGlobalPoint(triggerNode.rightTop);
  iframe.style.position = 'absolute';
  iframe.style.left = `${Math.ceil(point.x)}px`;
  iframe.style.top = `${Math.ceil(point.y)}px`;
  iframe.style.zIndex = '10000';
  popupIframeProperty.value = iframe;
};
export default popup;
export { popupIframeProperty };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQcm9wZXJ0eSIsImVzY2FwZUhUTUwiLCJwb3B1cElmcmFtZVByb3BlcnR5IiwicG9wdXAiLCJ0cmlnZ2VyTm9kZSIsIm1lc3NhZ2UiLCJtZXNzYWdlSFRNTCIsInNwbGl0IiwibWFwIiwiam9pbiIsImlmcmFtZSIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImJvZHkiLCJhcHBlbmRDaGlsZCIsImNvbnRlbnRXaW5kb3ciLCJvcGVuIiwid3JpdGUiLCJjbG9zZSIsInN0eWxlIiwiYmFja2dyb3VuZCIsImJvcmRlciIsIndpZHRoIiwiZG9jdW1lbnRFbGVtZW50Iiwic2Nyb2xsV2lkdGgiLCJoZWlnaHQiLCJzY3JvbGxIZWlnaHQiLCJwb2ludCIsInBhcmVudFRvR2xvYmFsUG9pbnQiLCJyaWdodFRvcCIsInBvc2l0aW9uIiwibGVmdCIsIk1hdGgiLCJjZWlsIiwieCIsInRvcCIsInkiLCJ6SW5kZXgiLCJ2YWx1ZSJdLCJzb3VyY2VzIjpbInBvcHVwLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIyLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBEaXNwbGF5cyBhIHNlbGYtdXBkYXRpbmcgcmVwb3J0IG9mIGNvbnRpbnVvdXMgdGVzdCByZXN1bHRzXHJcbiAqXHJcbiAqIEBhdXRob3IgSm9uYXRoYW4gT2xzb24gPGpvbmF0aGFuLm9sc29uQGNvbG9yYWRvLmVkdT5cclxuICovXHJcblxyXG5pbXBvcnQgUHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vYXhvbi9qcy9Qcm9wZXJ0eS5qcyc7XHJcbmltcG9ydCBlc2NhcGVIVE1MIGZyb20gJy4uLy4uLy4uL3BoZXQtY29yZS9qcy9lc2NhcGVIVE1MLmpzJztcclxuXHJcbmNvbnN0IHBvcHVwSWZyYW1lUHJvcGVydHkgPSBuZXcgUHJvcGVydHkoIG51bGwgKTtcclxuXHJcbmNvbnN0IHBvcHVwID0gKCB0cmlnZ2VyTm9kZSwgbWVzc2FnZSApID0+IHtcclxuICBjb25zdCBtZXNzYWdlSFRNTCA9IG1lc3NhZ2Uuc3BsaXQoICdcXG4nICkubWFwKCBlc2NhcGVIVE1MICkuam9pbiggJzxicj4nICk7XHJcblxyXG4gIGNvbnN0IGlmcmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoICdpZnJhbWUnICk7XHJcbiAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCggaWZyYW1lICk7XHJcblxyXG4gIC8vIENvbnRlbnRcclxuICBpZnJhbWUuY29udGVudFdpbmRvdy5kb2N1bWVudC5vcGVuKCk7XHJcbiAgaWZyYW1lLmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQud3JpdGUoXHJcbiAgICBgJHsnPCFET0NUWVBFIGh0bWw+JyArXHJcbiAgICAnPGh0bWwgbGFuZz1cImVuXCI+JyArXHJcbiAgICAnPGhlYWQ+PHRpdGxlPkNUIEluZm88L3RpdGxlPjwvaGVhZD4nICtcclxuICAgICc8Ym9keSBzdHlsZT1cImZvbnQtc2l6ZTogMTJweDsgZm9udC1mYW1pbHk6IEFyaWFsXCI+J30ke21lc3NhZ2VIVE1MfTwvYm9keT5gICtcclxuICAgICc8L2h0bWw+J1xyXG4gICk7XHJcbiAgaWZyYW1lLmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQuY2xvc2UoKTtcclxuXHJcbiAgLy8gU3R5bGVzXHJcbiAgaWZyYW1lLmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQuYm9keS5zdHlsZS5iYWNrZ3JvdW5kID0gJ3doaXRlJztcclxuICBpZnJhbWUuc3R5bGUuYm9yZGVyID0gJzFweCBzb2xpZCBibGFjayc7XHJcblxyXG4gIC8vIE1ha2UgaXQgd2lkZSBiZWZvcmUgbWVhc3VyaW5nXHJcbiAgaWZyYW1lLnN0eWxlLndpZHRoID0gYCR7MTAwMH1weGA7XHJcblxyXG4gIC8vIE1lYXN1cmUgdGhlIHdpZHRoIGFuZCBhZGp1c3RcclxuICBpZnJhbWUuc3R5bGUud2lkdGggPSBgJHtpZnJhbWUuY29udGVudFdpbmRvdy5kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsV2lkdGh9cHhgO1xyXG5cclxuICAvLyBTZXQgaGVpZ2h0IGFmdGVyLCBtZWFzdXJpbmcgYWZ0ZXIgdGhlIHdpZHRoIGNoYW5nZSB0byBtYWtlIHN1cmUgaXQgaGFzIHJvb21cclxuICBpZnJhbWUuc3R5bGUuaGVpZ2h0ID0gYCR7aWZyYW1lLmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbEhlaWdodH1weGA7XHJcblxyXG4gIC8vIFBvc2l0aW9uaW5nXHJcbiAgY29uc3QgcG9pbnQgPSB0cmlnZ2VyTm9kZS5wYXJlbnRUb0dsb2JhbFBvaW50KCB0cmlnZ2VyTm9kZS5yaWdodFRvcCApO1xyXG4gIGlmcmFtZS5zdHlsZS5wb3NpdGlvbiA9ICdhYnNvbHV0ZSc7XHJcbiAgaWZyYW1lLnN0eWxlLmxlZnQgPSBgJHtNYXRoLmNlaWwoIHBvaW50LnggKX1weGA7XHJcbiAgaWZyYW1lLnN0eWxlLnRvcCA9IGAke01hdGguY2VpbCggcG9pbnQueSApfXB4YDtcclxuICBpZnJhbWUuc3R5bGUuekluZGV4ID0gJzEwMDAwJztcclxuXHJcbiAgcG9wdXBJZnJhbWVQcm9wZXJ0eS52YWx1ZSA9IGlmcmFtZTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHBvcHVwO1xyXG5leHBvcnQgeyBwb3B1cElmcmFtZVByb3BlcnR5IH07XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxRQUFRLE1BQU0sOEJBQThCO0FBQ25ELE9BQU9DLFVBQVUsTUFBTSxxQ0FBcUM7QUFFNUQsTUFBTUMsbUJBQW1CLEdBQUcsSUFBSUYsUUFBUSxDQUFFLElBQUssQ0FBQztBQUVoRCxNQUFNRyxLQUFLLEdBQUdBLENBQUVDLFdBQVcsRUFBRUMsT0FBTyxLQUFNO0VBQ3hDLE1BQU1DLFdBQVcsR0FBR0QsT0FBTyxDQUFDRSxLQUFLLENBQUUsSUFBSyxDQUFDLENBQUNDLEdBQUcsQ0FBRVAsVUFBVyxDQUFDLENBQUNRLElBQUksQ0FBRSxNQUFPLENBQUM7RUFFMUUsTUFBTUMsTUFBTSxHQUFHQyxRQUFRLENBQUNDLGFBQWEsQ0FBRSxRQUFTLENBQUM7RUFDakRELFFBQVEsQ0FBQ0UsSUFBSSxDQUFDQyxXQUFXLENBQUVKLE1BQU8sQ0FBQzs7RUFFbkM7RUFDQUEsTUFBTSxDQUFDSyxhQUFhLENBQUNKLFFBQVEsQ0FBQ0ssSUFBSSxDQUFDLENBQUM7RUFDcENOLE1BQU0sQ0FBQ0ssYUFBYSxDQUFDSixRQUFRLENBQUNNLEtBQUssQ0FDaEMsR0FBRSxpQkFBaUIsR0FDcEIsa0JBQWtCLEdBQ2xCLHFDQUFxQyxHQUNyQyxvREFBcUQsR0FBRVgsV0FBWSxTQUFRLEdBQzNFLFNBQ0YsQ0FBQztFQUNESSxNQUFNLENBQUNLLGFBQWEsQ0FBQ0osUUFBUSxDQUFDTyxLQUFLLENBQUMsQ0FBQzs7RUFFckM7RUFDQVIsTUFBTSxDQUFDSyxhQUFhLENBQUNKLFFBQVEsQ0FBQ0UsSUFBSSxDQUFDTSxLQUFLLENBQUNDLFVBQVUsR0FBRyxPQUFPO0VBQzdEVixNQUFNLENBQUNTLEtBQUssQ0FBQ0UsTUFBTSxHQUFHLGlCQUFpQjs7RUFFdkM7RUFDQVgsTUFBTSxDQUFDUyxLQUFLLENBQUNHLEtBQUssR0FBSSxHQUFFLElBQUssSUFBRzs7RUFFaEM7RUFDQVosTUFBTSxDQUFDUyxLQUFLLENBQUNHLEtBQUssR0FBSSxHQUFFWixNQUFNLENBQUNLLGFBQWEsQ0FBQ0osUUFBUSxDQUFDWSxlQUFlLENBQUNDLFdBQVksSUFBRzs7RUFFckY7RUFDQWQsTUFBTSxDQUFDUyxLQUFLLENBQUNNLE1BQU0sR0FBSSxHQUFFZixNQUFNLENBQUNLLGFBQWEsQ0FBQ0osUUFBUSxDQUFDWSxlQUFlLENBQUNHLFlBQWEsSUFBRzs7RUFFdkY7RUFDQSxNQUFNQyxLQUFLLEdBQUd2QixXQUFXLENBQUN3QixtQkFBbUIsQ0FBRXhCLFdBQVcsQ0FBQ3lCLFFBQVMsQ0FBQztFQUNyRW5CLE1BQU0sQ0FBQ1MsS0FBSyxDQUFDVyxRQUFRLEdBQUcsVUFBVTtFQUNsQ3BCLE1BQU0sQ0FBQ1MsS0FBSyxDQUFDWSxJQUFJLEdBQUksR0FBRUMsSUFBSSxDQUFDQyxJQUFJLENBQUVOLEtBQUssQ0FBQ08sQ0FBRSxDQUFFLElBQUc7RUFDL0N4QixNQUFNLENBQUNTLEtBQUssQ0FBQ2dCLEdBQUcsR0FBSSxHQUFFSCxJQUFJLENBQUNDLElBQUksQ0FBRU4sS0FBSyxDQUFDUyxDQUFFLENBQUUsSUFBRztFQUM5QzFCLE1BQU0sQ0FBQ1MsS0FBSyxDQUFDa0IsTUFBTSxHQUFHLE9BQU87RUFFN0JuQyxtQkFBbUIsQ0FBQ29DLEtBQUssR0FBRzVCLE1BQU07QUFDcEMsQ0FBQztBQUVELGVBQWVQLEtBQUs7QUFDcEIsU0FBU0QsbUJBQW1CIn0=