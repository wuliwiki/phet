// Copyright 2023, University of Colorado Boulder

/**
 * Sends a CT test result
 *
 * @author Jonathan Olson <jonathan.olson@colorado.edu>
 */

const _ = require('lodash');
const axios = require('axios');
const winston = require('winston');

/**
 * Sends a CT test result
 * @public
 *
 * @param {string|undefined} message
 * @param {Object} testInfo - The original test request from getNextTestInfo
 * @param {boolean} passed
 * @param {Object} [options]
 * @returns {Promise.<Object>} - Resolves with data
 */
module.exports = async function (message, testInfo, passed, options) {
  options = _.extend({
    server: 'https://sparky.colorado.edu',
    // {string} - The server to use
    id: 'node-client' // {string} - The ID of the client
  }, options);
  winston.info(`Sending test result [${passed ? 'PASS' : 'FAIL'}]${message === undefined ? '' : ` with message:\n${message}`}`);
  const result = {
    passed: passed,
    test: testInfo.test,
    snapshotName: testInfo.snapshotName,
    timestamp: testInfo.timestamp,
    message: message,
    id: options.id
  };
  return (await axios(`${options.server}/aquaserver/test-result?result=${encodeURIComponent(JSON.stringify(result))}`)).data;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfIiwicmVxdWlyZSIsImF4aW9zIiwid2luc3RvbiIsIm1vZHVsZSIsImV4cG9ydHMiLCJtZXNzYWdlIiwidGVzdEluZm8iLCJwYXNzZWQiLCJvcHRpb25zIiwiZXh0ZW5kIiwic2VydmVyIiwiaWQiLCJpbmZvIiwidW5kZWZpbmVkIiwicmVzdWx0IiwidGVzdCIsInNuYXBzaG90TmFtZSIsInRpbWVzdGFtcCIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIl0sInNvdXJjZXMiOlsic2VuZFRlc3RSZXN1bHQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjMsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIFNlbmRzIGEgQ1QgdGVzdCByZXN1bHRcclxuICpcclxuICogQGF1dGhvciBKb25hdGhhbiBPbHNvbiA8am9uYXRoYW4ub2xzb25AY29sb3JhZG8uZWR1PlxyXG4gKi9cclxuXHJcbmNvbnN0IF8gPSByZXF1aXJlKCAnbG9kYXNoJyApO1xyXG5jb25zdCBheGlvcyA9IHJlcXVpcmUoICdheGlvcycgKTtcclxuY29uc3Qgd2luc3RvbiA9IHJlcXVpcmUoICd3aW5zdG9uJyApO1xyXG5cclxuLyoqXHJcbiAqIFNlbmRzIGEgQ1QgdGVzdCByZXN1bHRcclxuICogQHB1YmxpY1xyXG4gKlxyXG4gKiBAcGFyYW0ge3N0cmluZ3x1bmRlZmluZWR9IG1lc3NhZ2VcclxuICogQHBhcmFtIHtPYmplY3R9IHRlc3RJbmZvIC0gVGhlIG9yaWdpbmFsIHRlc3QgcmVxdWVzdCBmcm9tIGdldE5leHRUZXN0SW5mb1xyXG4gKiBAcGFyYW0ge2Jvb2xlYW59IHBhc3NlZFxyXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXHJcbiAqIEByZXR1cm5zIHtQcm9taXNlLjxPYmplY3Q+fSAtIFJlc29sdmVzIHdpdGggZGF0YVxyXG4gKi9cclxubW9kdWxlLmV4cG9ydHMgPSBhc3luYyBmdW5jdGlvbiggbWVzc2FnZSwgdGVzdEluZm8sIHBhc3NlZCwgb3B0aW9ucyApIHtcclxuICBvcHRpb25zID0gXy5leHRlbmQoIHtcclxuICAgIHNlcnZlcjogJ2h0dHBzOi8vc3Bhcmt5LmNvbG9yYWRvLmVkdScsIC8vIHtzdHJpbmd9IC0gVGhlIHNlcnZlciB0byB1c2VcclxuICAgIGlkOiAnbm9kZS1jbGllbnQnIC8vIHtzdHJpbmd9IC0gVGhlIElEIG9mIHRoZSBjbGllbnRcclxuICB9LCBvcHRpb25zICk7XHJcblxyXG4gIHdpbnN0b24uaW5mbyggYFNlbmRpbmcgdGVzdCByZXN1bHQgWyR7cGFzc2VkID8gJ1BBU1MnIDogJ0ZBSUwnfV0ke21lc3NhZ2UgPT09IHVuZGVmaW5lZCA/ICcnIDogYCB3aXRoIG1lc3NhZ2U6XFxuJHttZXNzYWdlfWB9YCApO1xyXG5cclxuICBjb25zdCByZXN1bHQgPSB7XHJcbiAgICBwYXNzZWQ6IHBhc3NlZCxcclxuICAgIHRlc3Q6IHRlc3RJbmZvLnRlc3QsXHJcbiAgICBzbmFwc2hvdE5hbWU6IHRlc3RJbmZvLnNuYXBzaG90TmFtZSxcclxuICAgIHRpbWVzdGFtcDogdGVzdEluZm8udGltZXN0YW1wLFxyXG4gICAgbWVzc2FnZTogbWVzc2FnZSxcclxuICAgIGlkOiBvcHRpb25zLmlkXHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuICggYXdhaXQgYXhpb3MoIGAke29wdGlvbnMuc2VydmVyfS9hcXVhc2VydmVyL3Rlc3QtcmVzdWx0P3Jlc3VsdD0ke2VuY29kZVVSSUNvbXBvbmVudCggSlNPTi5zdHJpbmdpZnkoIHJlc3VsdCApICl9YCApICkuZGF0YTtcclxufTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE1BQU1BLENBQUMsR0FBR0MsT0FBTyxDQUFFLFFBQVMsQ0FBQztBQUM3QixNQUFNQyxLQUFLLEdBQUdELE9BQU8sQ0FBRSxPQUFRLENBQUM7QUFDaEMsTUFBTUUsT0FBTyxHQUFHRixPQUFPLENBQUUsU0FBVSxDQUFDOztBQUVwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBRyxNQUFNLENBQUNDLE9BQU8sR0FBRyxnQkFBZ0JDLE9BQU8sRUFBRUMsUUFBUSxFQUFFQyxNQUFNLEVBQUVDLE9BQU8sRUFBRztFQUNwRUEsT0FBTyxHQUFHVCxDQUFDLENBQUNVLE1BQU0sQ0FBRTtJQUNsQkMsTUFBTSxFQUFFLDZCQUE2QjtJQUFFO0lBQ3ZDQyxFQUFFLEVBQUUsYUFBYSxDQUFDO0VBQ3BCLENBQUMsRUFBRUgsT0FBUSxDQUFDO0VBRVpOLE9BQU8sQ0FBQ1UsSUFBSSxDQUFHLHdCQUF1QkwsTUFBTSxHQUFHLE1BQU0sR0FBRyxNQUFPLElBQUdGLE9BQU8sS0FBS1EsU0FBUyxHQUFHLEVBQUUsR0FBSSxtQkFBa0JSLE9BQVEsRUFBRSxFQUFFLENBQUM7RUFFL0gsTUFBTVMsTUFBTSxHQUFHO0lBQ2JQLE1BQU0sRUFBRUEsTUFBTTtJQUNkUSxJQUFJLEVBQUVULFFBQVEsQ0FBQ1MsSUFBSTtJQUNuQkMsWUFBWSxFQUFFVixRQUFRLENBQUNVLFlBQVk7SUFDbkNDLFNBQVMsRUFBRVgsUUFBUSxDQUFDVyxTQUFTO0lBQzdCWixPQUFPLEVBQUVBLE9BQU87SUFDaEJNLEVBQUUsRUFBRUgsT0FBTyxDQUFDRztFQUNkLENBQUM7RUFFRCxPQUFPLENBQUUsTUFBTVYsS0FBSyxDQUFHLEdBQUVPLE9BQU8sQ0FBQ0UsTUFBTyxrQ0FBaUNRLGtCQUFrQixDQUFFQyxJQUFJLENBQUNDLFNBQVMsQ0FBRU4sTUFBTyxDQUFFLENBQUUsRUFBRSxDQUFDLEVBQUdPLElBQUk7QUFDcEksQ0FBQyJ9