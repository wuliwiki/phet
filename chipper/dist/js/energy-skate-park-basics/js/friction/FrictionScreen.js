// Copyright 2018-2022, University of Colorado Boulder

/**
 * The "Friction" screen of Energy Skate Park: Basics.
 *
 * @author Jesse Greenberg (PhET Interactive Simulations)
 */

import Screen from '../../../joist/js/Screen.js';
import ScreenIcon from '../../../joist/js/ScreenIcon.js';
import merge from '../../../phet-core/js/merge.js';
import { Image } from '../../../scenery/js/imports.js';
import iconFrictionHomescreen_png from '../../images/iconFrictionHomescreen_png.js';
import energySkateParkBasics from '../energySkateParkBasics.js';
import EnergySkateParkBasicsStrings from '../EnergySkateParkBasicsStrings.js';
import FrictionModel from './model/FrictionModel.js';
import FrictionScreenView from './view/FrictionScreenView.js';
class FrictionScreen extends Screen {
  /**
   * @param {EnergySkateParkPreferencesModel} preferencesModel
   * @param {Tandem} tandem
   * @param {Object} [options]
   */
  constructor(preferencesModel, tandem, options) {
    options = merge({
      name: EnergySkateParkBasicsStrings.screen.frictionStringProperty,
      homeScreenIcon: new ScreenIcon(new Image(iconFrictionHomescreen_png), {
        maxIconWidthProportion: 1,
        maxIconHeightProportion: 1
      }),
      tandem: tandem
    }, options);
    super(() => new FrictionModel(preferencesModel, tandem.createTandem('model')), model => new FrictionScreenView(model, tandem.createTandem('view')), options);
  }
}
energySkateParkBasics.register('FrictionScreen', FrictionScreen);
export default FrictionScreen;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTY3JlZW4iLCJTY3JlZW5JY29uIiwibWVyZ2UiLCJJbWFnZSIsImljb25GcmljdGlvbkhvbWVzY3JlZW5fcG5nIiwiZW5lcmd5U2thdGVQYXJrQmFzaWNzIiwiRW5lcmd5U2thdGVQYXJrQmFzaWNzU3RyaW5ncyIsIkZyaWN0aW9uTW9kZWwiLCJGcmljdGlvblNjcmVlblZpZXciLCJGcmljdGlvblNjcmVlbiIsImNvbnN0cnVjdG9yIiwicHJlZmVyZW5jZXNNb2RlbCIsInRhbmRlbSIsIm9wdGlvbnMiLCJuYW1lIiwic2NyZWVuIiwiZnJpY3Rpb25TdHJpbmdQcm9wZXJ0eSIsImhvbWVTY3JlZW5JY29uIiwibWF4SWNvbldpZHRoUHJvcG9ydGlvbiIsIm1heEljb25IZWlnaHRQcm9wb3J0aW9uIiwiY3JlYXRlVGFuZGVtIiwibW9kZWwiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIkZyaWN0aW9uU2NyZWVuLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE4LTIwMjIsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIFRoZSBcIkZyaWN0aW9uXCIgc2NyZWVuIG9mIEVuZXJneSBTa2F0ZSBQYXJrOiBCYXNpY3MuXHJcbiAqXHJcbiAqIEBhdXRob3IgSmVzc2UgR3JlZW5iZXJnIChQaEVUIEludGVyYWN0aXZlIFNpbXVsYXRpb25zKVxyXG4gKi9cclxuXHJcbmltcG9ydCBTY3JlZW4gZnJvbSAnLi4vLi4vLi4vam9pc3QvanMvU2NyZWVuLmpzJztcclxuaW1wb3J0IFNjcmVlbkljb24gZnJvbSAnLi4vLi4vLi4vam9pc3QvanMvU2NyZWVuSWNvbi5qcyc7XHJcbmltcG9ydCBtZXJnZSBmcm9tICcuLi8uLi8uLi9waGV0LWNvcmUvanMvbWVyZ2UuanMnO1xyXG5pbXBvcnQgeyBJbWFnZSB9IGZyb20gJy4uLy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XHJcbmltcG9ydCBpY29uRnJpY3Rpb25Ib21lc2NyZWVuX3BuZyBmcm9tICcuLi8uLi9pbWFnZXMvaWNvbkZyaWN0aW9uSG9tZXNjcmVlbl9wbmcuanMnO1xyXG5pbXBvcnQgZW5lcmd5U2thdGVQYXJrQmFzaWNzIGZyb20gJy4uL2VuZXJneVNrYXRlUGFya0Jhc2ljcy5qcyc7XHJcbmltcG9ydCBFbmVyZ3lTa2F0ZVBhcmtCYXNpY3NTdHJpbmdzIGZyb20gJy4uL0VuZXJneVNrYXRlUGFya0Jhc2ljc1N0cmluZ3MuanMnO1xyXG5pbXBvcnQgRnJpY3Rpb25Nb2RlbCBmcm9tICcuL21vZGVsL0ZyaWN0aW9uTW9kZWwuanMnO1xyXG5pbXBvcnQgRnJpY3Rpb25TY3JlZW5WaWV3IGZyb20gJy4vdmlldy9GcmljdGlvblNjcmVlblZpZXcuanMnO1xyXG5cclxuY2xhc3MgRnJpY3Rpb25TY3JlZW4gZXh0ZW5kcyBTY3JlZW4ge1xyXG5cclxuICAvKipcclxuICAgKiBAcGFyYW0ge0VuZXJneVNrYXRlUGFya1ByZWZlcmVuY2VzTW9kZWx9IHByZWZlcmVuY2VzTW9kZWxcclxuICAgKiBAcGFyYW0ge1RhbmRlbX0gdGFuZGVtXHJcbiAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxyXG4gICAqL1xyXG4gIGNvbnN0cnVjdG9yKCBwcmVmZXJlbmNlc01vZGVsLCB0YW5kZW0sIG9wdGlvbnMgKSB7XHJcbiAgICBvcHRpb25zID0gbWVyZ2UoIHtcclxuICAgICAgbmFtZTogRW5lcmd5U2thdGVQYXJrQmFzaWNzU3RyaW5ncy5zY3JlZW4uZnJpY3Rpb25TdHJpbmdQcm9wZXJ0eSxcclxuICAgICAgaG9tZVNjcmVlbkljb246IG5ldyBTY3JlZW5JY29uKCBuZXcgSW1hZ2UoIGljb25GcmljdGlvbkhvbWVzY3JlZW5fcG5nICksIHtcclxuICAgICAgICBtYXhJY29uV2lkdGhQcm9wb3J0aW9uOiAxLFxyXG4gICAgICAgIG1heEljb25IZWlnaHRQcm9wb3J0aW9uOiAxXHJcbiAgICAgIH0gKSxcclxuXHJcbiAgICAgIHRhbmRlbTogdGFuZGVtXHJcbiAgICB9LCBvcHRpb25zICk7XHJcblxyXG4gICAgc3VwZXIoXHJcbiAgICAgICgpID0+IG5ldyBGcmljdGlvbk1vZGVsKCBwcmVmZXJlbmNlc01vZGVsLCB0YW5kZW0uY3JlYXRlVGFuZGVtKCAnbW9kZWwnICkgKSxcclxuICAgICAgbW9kZWwgPT4gbmV3IEZyaWN0aW9uU2NyZWVuVmlldyggbW9kZWwsIHRhbmRlbS5jcmVhdGVUYW5kZW0oICd2aWV3JyApICksXHJcbiAgICAgIG9wdGlvbnNcclxuICAgICk7XHJcbiAgfVxyXG59XHJcblxyXG5lbmVyZ3lTa2F0ZVBhcmtCYXNpY3MucmVnaXN0ZXIoICdGcmljdGlvblNjcmVlbicsIEZyaWN0aW9uU2NyZWVuICk7XHJcbmV4cG9ydCBkZWZhdWx0IEZyaWN0aW9uU2NyZWVuOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxNQUFNLE1BQU0sNkJBQTZCO0FBQ2hELE9BQU9DLFVBQVUsTUFBTSxpQ0FBaUM7QUFDeEQsT0FBT0MsS0FBSyxNQUFNLGdDQUFnQztBQUNsRCxTQUFTQyxLQUFLLFFBQVEsZ0NBQWdDO0FBQ3RELE9BQU9DLDBCQUEwQixNQUFNLDRDQUE0QztBQUNuRixPQUFPQyxxQkFBcUIsTUFBTSw2QkFBNkI7QUFDL0QsT0FBT0MsNEJBQTRCLE1BQU0sb0NBQW9DO0FBQzdFLE9BQU9DLGFBQWEsTUFBTSwwQkFBMEI7QUFDcEQsT0FBT0Msa0JBQWtCLE1BQU0sOEJBQThCO0FBRTdELE1BQU1DLGNBQWMsU0FBU1QsTUFBTSxDQUFDO0VBRWxDO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7RUFDRVUsV0FBV0EsQ0FBRUMsZ0JBQWdCLEVBQUVDLE1BQU0sRUFBRUMsT0FBTyxFQUFHO0lBQy9DQSxPQUFPLEdBQUdYLEtBQUssQ0FBRTtNQUNmWSxJQUFJLEVBQUVSLDRCQUE0QixDQUFDUyxNQUFNLENBQUNDLHNCQUFzQjtNQUNoRUMsY0FBYyxFQUFFLElBQUloQixVQUFVLENBQUUsSUFBSUUsS0FBSyxDQUFFQywwQkFBMkIsQ0FBQyxFQUFFO1FBQ3ZFYyxzQkFBc0IsRUFBRSxDQUFDO1FBQ3pCQyx1QkFBdUIsRUFBRTtNQUMzQixDQUFFLENBQUM7TUFFSFAsTUFBTSxFQUFFQTtJQUNWLENBQUMsRUFBRUMsT0FBUSxDQUFDO0lBRVosS0FBSyxDQUNILE1BQU0sSUFBSU4sYUFBYSxDQUFFSSxnQkFBZ0IsRUFBRUMsTUFBTSxDQUFDUSxZQUFZLENBQUUsT0FBUSxDQUFFLENBQUMsRUFDM0VDLEtBQUssSUFBSSxJQUFJYixrQkFBa0IsQ0FBRWEsS0FBSyxFQUFFVCxNQUFNLENBQUNRLFlBQVksQ0FBRSxNQUFPLENBQUUsQ0FBQyxFQUN2RVAsT0FDRixDQUFDO0VBQ0g7QUFDRjtBQUVBUixxQkFBcUIsQ0FBQ2lCLFFBQVEsQ0FBRSxnQkFBZ0IsRUFBRWIsY0FBZSxDQUFDO0FBQ2xFLGVBQWVBLGNBQWMifQ==