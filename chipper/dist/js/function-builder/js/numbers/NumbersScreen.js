// Copyright 2015-2023, University of Colorado Boulder

/**
 * The 'Numbers' screen.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import Property from '../../../axon/js/Property.js';
import Screen from '../../../joist/js/Screen.js';
import merge from '../../../phet-core/js/merge.js';
import FBColors from '../common/FBColors.js';
import FBIconFactory from '../common/view/FBIconFactory.js';
import functionBuilder from '../functionBuilder.js';
import FunctionBuilderStrings from '../FunctionBuilderStrings.js';
import NumbersModel from './model/NumbersModel.js';
import NumbersScreenView from './view/NumbersScreenView.js';
export default class NumbersScreen extends Screen {
  /**
   * @param {Tandem} tandem
   * @param {Object} [options]
   */
  constructor(tandem, options) {
    options = merge({
      name: FunctionBuilderStrings.screen.numbersStringProperty,
      backgroundColorProperty: new Property(FBColors.NUMBERS_SCREEN_BACKGROUND),
      // {Property.<Color|string>}
      homeScreenIcon: FBIconFactory.createNumbersScreenIcon()
    }, options);
    assert && assert(!options.tandem, 'tandem is a constructor parameter');
    options.tandem = tandem;
    super(() => new NumbersModel(), model => new NumbersScreenView(model), options);
  }
}
functionBuilder.register('NumbersScreen', NumbersScreen);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQcm9wZXJ0eSIsIlNjcmVlbiIsIm1lcmdlIiwiRkJDb2xvcnMiLCJGQkljb25GYWN0b3J5IiwiZnVuY3Rpb25CdWlsZGVyIiwiRnVuY3Rpb25CdWlsZGVyU3RyaW5ncyIsIk51bWJlcnNNb2RlbCIsIk51bWJlcnNTY3JlZW5WaWV3IiwiTnVtYmVyc1NjcmVlbiIsImNvbnN0cnVjdG9yIiwidGFuZGVtIiwib3B0aW9ucyIsIm5hbWUiLCJzY3JlZW4iLCJudW1iZXJzU3RyaW5nUHJvcGVydHkiLCJiYWNrZ3JvdW5kQ29sb3JQcm9wZXJ0eSIsIk5VTUJFUlNfU0NSRUVOX0JBQ0tHUk9VTkQiLCJob21lU2NyZWVuSWNvbiIsImNyZWF0ZU51bWJlcnNTY3JlZW5JY29uIiwiYXNzZXJ0IiwibW9kZWwiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIk51bWJlcnNTY3JlZW4uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTUtMjAyMywgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogVGhlICdOdW1iZXJzJyBzY3JlZW4uXHJcbiAqXHJcbiAqIEBhdXRob3IgQ2hyaXMgTWFsbGV5IChQaXhlbFpvb20sIEluYy4pXHJcbiAqL1xyXG5cclxuaW1wb3J0IFByb3BlcnR5IGZyb20gJy4uLy4uLy4uL2F4b24vanMvUHJvcGVydHkuanMnO1xyXG5pbXBvcnQgU2NyZWVuIGZyb20gJy4uLy4uLy4uL2pvaXN0L2pzL1NjcmVlbi5qcyc7XHJcbmltcG9ydCBtZXJnZSBmcm9tICcuLi8uLi8uLi9waGV0LWNvcmUvanMvbWVyZ2UuanMnO1xyXG5pbXBvcnQgRkJDb2xvcnMgZnJvbSAnLi4vY29tbW9uL0ZCQ29sb3JzLmpzJztcclxuaW1wb3J0IEZCSWNvbkZhY3RvcnkgZnJvbSAnLi4vY29tbW9uL3ZpZXcvRkJJY29uRmFjdG9yeS5qcyc7XHJcbmltcG9ydCBmdW5jdGlvbkJ1aWxkZXIgZnJvbSAnLi4vZnVuY3Rpb25CdWlsZGVyLmpzJztcclxuaW1wb3J0IEZ1bmN0aW9uQnVpbGRlclN0cmluZ3MgZnJvbSAnLi4vRnVuY3Rpb25CdWlsZGVyU3RyaW5ncy5qcyc7XHJcbmltcG9ydCBOdW1iZXJzTW9kZWwgZnJvbSAnLi9tb2RlbC9OdW1iZXJzTW9kZWwuanMnO1xyXG5pbXBvcnQgTnVtYmVyc1NjcmVlblZpZXcgZnJvbSAnLi92aWV3L051bWJlcnNTY3JlZW5WaWV3LmpzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE51bWJlcnNTY3JlZW4gZXh0ZW5kcyBTY3JlZW4ge1xyXG5cclxuICAvKipcclxuICAgKiBAcGFyYW0ge1RhbmRlbX0gdGFuZGVtXHJcbiAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxyXG4gICAqL1xyXG4gIGNvbnN0cnVjdG9yKCB0YW5kZW0sIG9wdGlvbnMgKSB7XHJcblxyXG4gICAgb3B0aW9ucyA9IG1lcmdlKCB7XHJcbiAgICAgIG5hbWU6IEZ1bmN0aW9uQnVpbGRlclN0cmluZ3Muc2NyZWVuLm51bWJlcnNTdHJpbmdQcm9wZXJ0eSxcclxuICAgICAgYmFja2dyb3VuZENvbG9yUHJvcGVydHk6IG5ldyBQcm9wZXJ0eSggRkJDb2xvcnMuTlVNQkVSU19TQ1JFRU5fQkFDS0dST1VORCApLCAvLyB7UHJvcGVydHkuPENvbG9yfHN0cmluZz59XHJcbiAgICAgIGhvbWVTY3JlZW5JY29uOiBGQkljb25GYWN0b3J5LmNyZWF0ZU51bWJlcnNTY3JlZW5JY29uKClcclxuICAgIH0sIG9wdGlvbnMgKTtcclxuXHJcbiAgICBhc3NlcnQgJiYgYXNzZXJ0KCAhb3B0aW9ucy50YW5kZW0sICd0YW5kZW0gaXMgYSBjb25zdHJ1Y3RvciBwYXJhbWV0ZXInICk7XHJcbiAgICBvcHRpb25zLnRhbmRlbSA9IHRhbmRlbTtcclxuXHJcbiAgICBzdXBlcihcclxuICAgICAgKCkgPT4gbmV3IE51bWJlcnNNb2RlbCgpLFxyXG4gICAgICBtb2RlbCA9PiBuZXcgTnVtYmVyc1NjcmVlblZpZXcoIG1vZGVsICksXHJcbiAgICAgIG9wdGlvbnNcclxuICAgICk7XHJcbiAgfVxyXG59XHJcblxyXG5mdW5jdGlvbkJ1aWxkZXIucmVnaXN0ZXIoICdOdW1iZXJzU2NyZWVuJywgTnVtYmVyc1NjcmVlbiApOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxRQUFRLE1BQU0sOEJBQThCO0FBQ25ELE9BQU9DLE1BQU0sTUFBTSw2QkFBNkI7QUFDaEQsT0FBT0MsS0FBSyxNQUFNLGdDQUFnQztBQUNsRCxPQUFPQyxRQUFRLE1BQU0sdUJBQXVCO0FBQzVDLE9BQU9DLGFBQWEsTUFBTSxpQ0FBaUM7QUFDM0QsT0FBT0MsZUFBZSxNQUFNLHVCQUF1QjtBQUNuRCxPQUFPQyxzQkFBc0IsTUFBTSw4QkFBOEI7QUFDakUsT0FBT0MsWUFBWSxNQUFNLHlCQUF5QjtBQUNsRCxPQUFPQyxpQkFBaUIsTUFBTSw2QkFBNkI7QUFFM0QsZUFBZSxNQUFNQyxhQUFhLFNBQVNSLE1BQU0sQ0FBQztFQUVoRDtBQUNGO0FBQ0E7QUFDQTtFQUNFUyxXQUFXQSxDQUFFQyxNQUFNLEVBQUVDLE9BQU8sRUFBRztJQUU3QkEsT0FBTyxHQUFHVixLQUFLLENBQUU7TUFDZlcsSUFBSSxFQUFFUCxzQkFBc0IsQ0FBQ1EsTUFBTSxDQUFDQyxxQkFBcUI7TUFDekRDLHVCQUF1QixFQUFFLElBQUloQixRQUFRLENBQUVHLFFBQVEsQ0FBQ2MseUJBQTBCLENBQUM7TUFBRTtNQUM3RUMsY0FBYyxFQUFFZCxhQUFhLENBQUNlLHVCQUF1QixDQUFDO0lBQ3hELENBQUMsRUFBRVAsT0FBUSxDQUFDO0lBRVpRLE1BQU0sSUFBSUEsTUFBTSxDQUFFLENBQUNSLE9BQU8sQ0FBQ0QsTUFBTSxFQUFFLG1DQUFvQyxDQUFDO0lBQ3hFQyxPQUFPLENBQUNELE1BQU0sR0FBR0EsTUFBTTtJQUV2QixLQUFLLENBQ0gsTUFBTSxJQUFJSixZQUFZLENBQUMsQ0FBQyxFQUN4QmMsS0FBSyxJQUFJLElBQUliLGlCQUFpQixDQUFFYSxLQUFNLENBQUMsRUFDdkNULE9BQ0YsQ0FBQztFQUNIO0FBQ0Y7QUFFQVAsZUFBZSxDQUFDaUIsUUFBUSxDQUFFLGVBQWUsRUFBRWIsYUFBYyxDQUFDIn0=