// Copyright 2015-2023, University of Colorado Boulder

/**
 * Erases the image.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import { Image } from '../../../../../scenery/js/imports.js';
import erase_png from '../../../../mipmaps/functions/erase_png.js';
import FBConstants from '../../../common/FBConstants.js';
import ImageFunction from '../../../common/model/functions/ImageFunction.js';
import functionBuilder from '../../../functionBuilder.js';
import FBCanvasUtils from '../FBCanvasUtils.js';
export default class Erase extends ImageFunction {
  /**
   * @param {Object} [options]
   */
  constructor(options) {
    options = options || {};
    options.name = 'Erase';
    options.fill = 'rgb( 0, 222, 224 )';
    options.invertible = false; // lossy, erased image data cannot be restored

    const iconNode = new Image(erase_png, {
      scale: FBConstants.PATTERNS_FUNCTION_ICON_SCALE
    });
    super(iconNode, options);
  }

  /**
   * Applies this function.
   *
   * @param {HTMLCanvasElement} inputCanvas
   * @returns {HTMLCanvasElement}
   * @public
   * @override
   */
  applyFunction(inputCanvas) {
    // blank image data (transparent black pixels), same dimensions as input
    const imageData = inputCanvas.getContext('2d').createImageData(inputCanvas.width, inputCanvas.height);
    return FBCanvasUtils.createCanvasWithImageData(imageData);
  }
}
functionBuilder.register('Erase', Erase);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJJbWFnZSIsImVyYXNlX3BuZyIsIkZCQ29uc3RhbnRzIiwiSW1hZ2VGdW5jdGlvbiIsImZ1bmN0aW9uQnVpbGRlciIsIkZCQ2FudmFzVXRpbHMiLCJFcmFzZSIsImNvbnN0cnVjdG9yIiwib3B0aW9ucyIsIm5hbWUiLCJmaWxsIiwiaW52ZXJ0aWJsZSIsImljb25Ob2RlIiwic2NhbGUiLCJQQVRURVJOU19GVU5DVElPTl9JQ09OX1NDQUxFIiwiYXBwbHlGdW5jdGlvbiIsImlucHV0Q2FudmFzIiwiaW1hZ2VEYXRhIiwiZ2V0Q29udGV4dCIsImNyZWF0ZUltYWdlRGF0YSIsIndpZHRoIiwiaGVpZ2h0IiwiY3JlYXRlQ2FudmFzV2l0aEltYWdlRGF0YSIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiRXJhc2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTUtMjAyMywgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogRXJhc2VzIHRoZSBpbWFnZS5cclxuICpcclxuICogQGF1dGhvciBDaHJpcyBNYWxsZXkgKFBpeGVsWm9vbSwgSW5jLilcclxuICovXHJcblxyXG5pbXBvcnQgeyBJbWFnZSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XHJcbmltcG9ydCBlcmFzZV9wbmcgZnJvbSAnLi4vLi4vLi4vLi4vbWlwbWFwcy9mdW5jdGlvbnMvZXJhc2VfcG5nLmpzJztcclxuaW1wb3J0IEZCQ29uc3RhbnRzIGZyb20gJy4uLy4uLy4uL2NvbW1vbi9GQkNvbnN0YW50cy5qcyc7XHJcbmltcG9ydCBJbWFnZUZ1bmN0aW9uIGZyb20gJy4uLy4uLy4uL2NvbW1vbi9tb2RlbC9mdW5jdGlvbnMvSW1hZ2VGdW5jdGlvbi5qcyc7XHJcbmltcG9ydCBmdW5jdGlvbkJ1aWxkZXIgZnJvbSAnLi4vLi4vLi4vZnVuY3Rpb25CdWlsZGVyLmpzJztcclxuaW1wb3J0IEZCQ2FudmFzVXRpbHMgZnJvbSAnLi4vRkJDYW52YXNVdGlscy5qcyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFcmFzZSBleHRlbmRzIEltYWdlRnVuY3Rpb24ge1xyXG5cclxuICAvKipcclxuICAgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXHJcbiAgICovXHJcbiAgY29uc3RydWN0b3IoIG9wdGlvbnMgKSB7XHJcblxyXG4gICAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XHJcbiAgICBvcHRpb25zLm5hbWUgPSAnRXJhc2UnO1xyXG4gICAgb3B0aW9ucy5maWxsID0gJ3JnYiggMCwgMjIyLCAyMjQgKSc7XHJcbiAgICBvcHRpb25zLmludmVydGlibGUgPSBmYWxzZTsgLy8gbG9zc3ksIGVyYXNlZCBpbWFnZSBkYXRhIGNhbm5vdCBiZSByZXN0b3JlZFxyXG5cclxuICAgIGNvbnN0IGljb25Ob2RlID0gbmV3IEltYWdlKCBlcmFzZV9wbmcsIHsgc2NhbGU6IEZCQ29uc3RhbnRzLlBBVFRFUk5TX0ZVTkNUSU9OX0lDT05fU0NBTEUgfSApO1xyXG5cclxuICAgIHN1cGVyKCBpY29uTm9kZSwgb3B0aW9ucyApO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQXBwbGllcyB0aGlzIGZ1bmN0aW9uLlxyXG4gICAqXHJcbiAgICogQHBhcmFtIHtIVE1MQ2FudmFzRWxlbWVudH0gaW5wdXRDYW52YXNcclxuICAgKiBAcmV0dXJucyB7SFRNTENhbnZhc0VsZW1lbnR9XHJcbiAgICogQHB1YmxpY1xyXG4gICAqIEBvdmVycmlkZVxyXG4gICAqL1xyXG4gIGFwcGx5RnVuY3Rpb24oIGlucHV0Q2FudmFzICkge1xyXG5cclxuICAgIC8vIGJsYW5rIGltYWdlIGRhdGEgKHRyYW5zcGFyZW50IGJsYWNrIHBpeGVscyksIHNhbWUgZGltZW5zaW9ucyBhcyBpbnB1dFxyXG4gICAgY29uc3QgaW1hZ2VEYXRhID0gaW5wdXRDYW52YXMuZ2V0Q29udGV4dCggJzJkJyApLmNyZWF0ZUltYWdlRGF0YSggaW5wdXRDYW52YXMud2lkdGgsIGlucHV0Q2FudmFzLmhlaWdodCApO1xyXG4gICAgcmV0dXJuIEZCQ2FudmFzVXRpbHMuY3JlYXRlQ2FudmFzV2l0aEltYWdlRGF0YSggaW1hZ2VEYXRhICk7XHJcbiAgfVxyXG59XHJcblxyXG5mdW5jdGlvbkJ1aWxkZXIucmVnaXN0ZXIoICdFcmFzZScsIEVyYXNlICk7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFNBQVNBLEtBQUssUUFBUSxzQ0FBc0M7QUFDNUQsT0FBT0MsU0FBUyxNQUFNLDRDQUE0QztBQUNsRSxPQUFPQyxXQUFXLE1BQU0sZ0NBQWdDO0FBQ3hELE9BQU9DLGFBQWEsTUFBTSxrREFBa0Q7QUFDNUUsT0FBT0MsZUFBZSxNQUFNLDZCQUE2QjtBQUN6RCxPQUFPQyxhQUFhLE1BQU0scUJBQXFCO0FBRS9DLGVBQWUsTUFBTUMsS0FBSyxTQUFTSCxhQUFhLENBQUM7RUFFL0M7QUFDRjtBQUNBO0VBQ0VJLFdBQVdBLENBQUVDLE9BQU8sRUFBRztJQUVyQkEsT0FBTyxHQUFHQSxPQUFPLElBQUksQ0FBQyxDQUFDO0lBQ3ZCQSxPQUFPLENBQUNDLElBQUksR0FBRyxPQUFPO0lBQ3RCRCxPQUFPLENBQUNFLElBQUksR0FBRyxvQkFBb0I7SUFDbkNGLE9BQU8sQ0FBQ0csVUFBVSxHQUFHLEtBQUssQ0FBQyxDQUFDOztJQUU1QixNQUFNQyxRQUFRLEdBQUcsSUFBSVosS0FBSyxDQUFFQyxTQUFTLEVBQUU7TUFBRVksS0FBSyxFQUFFWCxXQUFXLENBQUNZO0lBQTZCLENBQUUsQ0FBQztJQUU1RixLQUFLLENBQUVGLFFBQVEsRUFBRUosT0FBUSxDQUFDO0VBQzVCOztFQUVBO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7RUFDRU8sYUFBYUEsQ0FBRUMsV0FBVyxFQUFHO0lBRTNCO0lBQ0EsTUFBTUMsU0FBUyxHQUFHRCxXQUFXLENBQUNFLFVBQVUsQ0FBRSxJQUFLLENBQUMsQ0FBQ0MsZUFBZSxDQUFFSCxXQUFXLENBQUNJLEtBQUssRUFBRUosV0FBVyxDQUFDSyxNQUFPLENBQUM7SUFDekcsT0FBT2hCLGFBQWEsQ0FBQ2lCLHlCQUF5QixDQUFFTCxTQUFVLENBQUM7RUFDN0Q7QUFDRjtBQUVBYixlQUFlLENBQUNtQixRQUFRLENBQUUsT0FBTyxFQUFFakIsS0FBTSxDQUFDIn0=