// Copyright 2016-2022, University of Colorado Boulder

/**
 * main file for the "Energy" screen
 * @author Denzell Barnett (PhET Interactive Simulations)
 */

import Screen from '../../../joist/js/Screen.js';
import ScreenIcon from '../../../joist/js/ScreenIcon.js';
import { Image } from '../../../scenery/js/imports.js';
import energyScreenIcon_png from '../../images/energyScreenIcon_png.js';
import MassesAndSpringsColors from '../common/view/MassesAndSpringsColors.js';
import massesAndSprings from '../massesAndSprings.js';
import MassesAndSpringsStrings from '../MassesAndSpringsStrings.js';
import EnergyModel from './model/EnergyModel.js';
import EnergyScreenView from './view/EnergyScreenView.js';
class EnergyScreen extends Screen {
  /**
   * @param {Tandem} tandem
   */
  constructor(tandem) {
    const options = {
      name: MassesAndSpringsStrings.screen.energyStringProperty,
      backgroundColorProperty: MassesAndSpringsColors.backgroundProperty,
      homeScreenIcon: new ScreenIcon(new Image(energyScreenIcon_png), {
        maxIconWidthProportion: 1,
        maxIconHeightProportion: 1
      }),
      tandem: tandem
    };
    super(() => new EnergyModel(tandem.createTandem('model')), model => new EnergyScreenView(model, tandem.createTandem('view')), options);
  }
}
massesAndSprings.register('EnergyScreen', EnergyScreen);
export default EnergyScreen;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTY3JlZW4iLCJTY3JlZW5JY29uIiwiSW1hZ2UiLCJlbmVyZ3lTY3JlZW5JY29uX3BuZyIsIk1hc3Nlc0FuZFNwcmluZ3NDb2xvcnMiLCJtYXNzZXNBbmRTcHJpbmdzIiwiTWFzc2VzQW5kU3ByaW5nc1N0cmluZ3MiLCJFbmVyZ3lNb2RlbCIsIkVuZXJneVNjcmVlblZpZXciLCJFbmVyZ3lTY3JlZW4iLCJjb25zdHJ1Y3RvciIsInRhbmRlbSIsIm9wdGlvbnMiLCJuYW1lIiwic2NyZWVuIiwiZW5lcmd5U3RyaW5nUHJvcGVydHkiLCJiYWNrZ3JvdW5kQ29sb3JQcm9wZXJ0eSIsImJhY2tncm91bmRQcm9wZXJ0eSIsImhvbWVTY3JlZW5JY29uIiwibWF4SWNvbldpZHRoUHJvcG9ydGlvbiIsIm1heEljb25IZWlnaHRQcm9wb3J0aW9uIiwiY3JlYXRlVGFuZGVtIiwibW9kZWwiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIkVuZXJneVNjcmVlbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxNi0yMDIyLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBtYWluIGZpbGUgZm9yIHRoZSBcIkVuZXJneVwiIHNjcmVlblxyXG4gKiBAYXV0aG9yIERlbnplbGwgQmFybmV0dCAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcclxuICovXHJcblxyXG5pbXBvcnQgU2NyZWVuIGZyb20gJy4uLy4uLy4uL2pvaXN0L2pzL1NjcmVlbi5qcyc7XHJcbmltcG9ydCBTY3JlZW5JY29uIGZyb20gJy4uLy4uLy4uL2pvaXN0L2pzL1NjcmVlbkljb24uanMnO1xyXG5pbXBvcnQgeyBJbWFnZSB9IGZyb20gJy4uLy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XHJcbmltcG9ydCBlbmVyZ3lTY3JlZW5JY29uX3BuZyBmcm9tICcuLi8uLi9pbWFnZXMvZW5lcmd5U2NyZWVuSWNvbl9wbmcuanMnO1xyXG5pbXBvcnQgTWFzc2VzQW5kU3ByaW5nc0NvbG9ycyBmcm9tICcuLi9jb21tb24vdmlldy9NYXNzZXNBbmRTcHJpbmdzQ29sb3JzLmpzJztcclxuaW1wb3J0IG1hc3Nlc0FuZFNwcmluZ3MgZnJvbSAnLi4vbWFzc2VzQW5kU3ByaW5ncy5qcyc7XHJcbmltcG9ydCBNYXNzZXNBbmRTcHJpbmdzU3RyaW5ncyBmcm9tICcuLi9NYXNzZXNBbmRTcHJpbmdzU3RyaW5ncy5qcyc7XHJcbmltcG9ydCBFbmVyZ3lNb2RlbCBmcm9tICcuL21vZGVsL0VuZXJneU1vZGVsLmpzJztcclxuaW1wb3J0IEVuZXJneVNjcmVlblZpZXcgZnJvbSAnLi92aWV3L0VuZXJneVNjcmVlblZpZXcuanMnO1xyXG5cclxuY2xhc3MgRW5lcmd5U2NyZWVuIGV4dGVuZHMgU2NyZWVuIHtcclxuXHJcbiAgLyoqXHJcbiAgICogQHBhcmFtIHtUYW5kZW19IHRhbmRlbVxyXG4gICAqL1xyXG4gIGNvbnN0cnVjdG9yKCB0YW5kZW0gKSB7XHJcblxyXG4gICAgY29uc3Qgb3B0aW9ucyA9IHtcclxuICAgICAgbmFtZTogTWFzc2VzQW5kU3ByaW5nc1N0cmluZ3Muc2NyZWVuLmVuZXJneVN0cmluZ1Byb3BlcnR5LFxyXG4gICAgICBiYWNrZ3JvdW5kQ29sb3JQcm9wZXJ0eTogTWFzc2VzQW5kU3ByaW5nc0NvbG9ycy5iYWNrZ3JvdW5kUHJvcGVydHksXHJcbiAgICAgIGhvbWVTY3JlZW5JY29uOiBuZXcgU2NyZWVuSWNvbiggbmV3IEltYWdlKCBlbmVyZ3lTY3JlZW5JY29uX3BuZyApLCB7XHJcbiAgICAgICAgbWF4SWNvbldpZHRoUHJvcG9ydGlvbjogMSxcclxuICAgICAgICBtYXhJY29uSGVpZ2h0UHJvcG9ydGlvbjogMVxyXG4gICAgICB9ICksXHJcbiAgICAgIHRhbmRlbTogdGFuZGVtXHJcbiAgICB9O1xyXG5cclxuICAgIHN1cGVyKFxyXG4gICAgICAoKSA9PiBuZXcgRW5lcmd5TW9kZWwoIHRhbmRlbS5jcmVhdGVUYW5kZW0oICdtb2RlbCcgKSApLFxyXG4gICAgICBtb2RlbCA9PiBuZXcgRW5lcmd5U2NyZWVuVmlldyggbW9kZWwsIHRhbmRlbS5jcmVhdGVUYW5kZW0oICd2aWV3JyApICksXHJcbiAgICAgIG9wdGlvbnNcclxuICAgICk7XHJcbiAgfVxyXG59XHJcblxyXG5tYXNzZXNBbmRTcHJpbmdzLnJlZ2lzdGVyKCAnRW5lcmd5U2NyZWVuJywgRW5lcmd5U2NyZWVuICk7XHJcbmV4cG9ydCBkZWZhdWx0IEVuZXJneVNjcmVlbjsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLE1BQU0sTUFBTSw2QkFBNkI7QUFDaEQsT0FBT0MsVUFBVSxNQUFNLGlDQUFpQztBQUN4RCxTQUFTQyxLQUFLLFFBQVEsZ0NBQWdDO0FBQ3RELE9BQU9DLG9CQUFvQixNQUFNLHNDQUFzQztBQUN2RSxPQUFPQyxzQkFBc0IsTUFBTSwwQ0FBMEM7QUFDN0UsT0FBT0MsZ0JBQWdCLE1BQU0sd0JBQXdCO0FBQ3JELE9BQU9DLHVCQUF1QixNQUFNLCtCQUErQjtBQUNuRSxPQUFPQyxXQUFXLE1BQU0sd0JBQXdCO0FBQ2hELE9BQU9DLGdCQUFnQixNQUFNLDRCQUE0QjtBQUV6RCxNQUFNQyxZQUFZLFNBQVNULE1BQU0sQ0FBQztFQUVoQztBQUNGO0FBQ0E7RUFDRVUsV0FBV0EsQ0FBRUMsTUFBTSxFQUFHO0lBRXBCLE1BQU1DLE9BQU8sR0FBRztNQUNkQyxJQUFJLEVBQUVQLHVCQUF1QixDQUFDUSxNQUFNLENBQUNDLG9CQUFvQjtNQUN6REMsdUJBQXVCLEVBQUVaLHNCQUFzQixDQUFDYSxrQkFBa0I7TUFDbEVDLGNBQWMsRUFBRSxJQUFJakIsVUFBVSxDQUFFLElBQUlDLEtBQUssQ0FBRUMsb0JBQXFCLENBQUMsRUFBRTtRQUNqRWdCLHNCQUFzQixFQUFFLENBQUM7UUFDekJDLHVCQUF1QixFQUFFO01BQzNCLENBQUUsQ0FBQztNQUNIVCxNQUFNLEVBQUVBO0lBQ1YsQ0FBQztJQUVELEtBQUssQ0FDSCxNQUFNLElBQUlKLFdBQVcsQ0FBRUksTUFBTSxDQUFDVSxZQUFZLENBQUUsT0FBUSxDQUFFLENBQUMsRUFDdkRDLEtBQUssSUFBSSxJQUFJZCxnQkFBZ0IsQ0FBRWMsS0FBSyxFQUFFWCxNQUFNLENBQUNVLFlBQVksQ0FBRSxNQUFPLENBQUUsQ0FBQyxFQUNyRVQsT0FDRixDQUFDO0VBQ0g7QUFDRjtBQUVBUCxnQkFBZ0IsQ0FBQ2tCLFFBQVEsQ0FBRSxjQUFjLEVBQUVkLFlBQWEsQ0FBQztBQUN6RCxlQUFlQSxZQUFZIn0=