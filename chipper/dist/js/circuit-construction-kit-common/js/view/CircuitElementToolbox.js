// Copyright 2016-2023, University of Colorado Boulder

/**
 * Toolbox from which CircuitElements can be dragged or returned.  Exists for the life of the sim and hence does not
 * require a dispose implementation.
 *
 * @author Sam Reid (PhET Interactive Simulations)
 */

import optionize from '../../../phet-core/js/optionize.js';
import { Color, HBox } from '../../../scenery/js/imports.js';
import Carousel from '../../../sun/js/Carousel.js';
import PageControl from '../../../sun/js/PageControl.js';
import circuitConstructionKitCommon from '../circuitConstructionKitCommon.js';
import CCKCColors from './CCKCColors.js';

// constants

export default class CircuitElementToolbox extends HBox {
  constructor(viewTypeProperty, circuitElementToolItems, tandem, providedOptions) {
    providedOptions = optionize()({
      carouselOptions: {
        itemsPerPage: 5,
        orientation: 'vertical',
        buttonOptions: {
          // Expand the touch area above the up button and below the down button
          touchAreaXDilation: 8
        },
        spacing: 24,
        margin: 12,
        separatorsVisible: true,
        fill: CCKCColors.panelFillProperty,
        stroke: CCKCColors.panelStrokeProperty,
        tandem: tandem.createTandem('carousel')
      }
    }, providedOptions);

    // create the carousel
    const carousel = new Carousel(circuitElementToolItems, providedOptions.carouselOptions);
    carousel.mutate({
      scale: providedOptions.carouselScale
    });
    const pageControl = new PageControl(carousel.pageNumberProperty, carousel.numberOfPagesProperty, {
      orientation: 'vertical',
      pageFill: Color.WHITE,
      pageStroke: Color.BLACK,
      currentPageStroke: Color.TRANSPARENT,
      interactive: true,
      tandem: tandem.createTandem('pageControl')
    });
    super({
      spacing: 5,
      children: [pageControl, carousel],
      tandem: tandem,
      visiblePropertyOptions: {
        phetioFeatured: true
      }
    });
    this.carousel = carousel;
  }

  /**
   * Resets the toolbox.
   */
  reset() {
    this.carousel.reset();
  }
}
circuitConstructionKitCommon.register('CircuitElementToolbox', CircuitElementToolbox);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJvcHRpb25pemUiLCJDb2xvciIsIkhCb3giLCJDYXJvdXNlbCIsIlBhZ2VDb250cm9sIiwiY2lyY3VpdENvbnN0cnVjdGlvbktpdENvbW1vbiIsIkNDS0NDb2xvcnMiLCJDaXJjdWl0RWxlbWVudFRvb2xib3giLCJjb25zdHJ1Y3RvciIsInZpZXdUeXBlUHJvcGVydHkiLCJjaXJjdWl0RWxlbWVudFRvb2xJdGVtcyIsInRhbmRlbSIsInByb3ZpZGVkT3B0aW9ucyIsImNhcm91c2VsT3B0aW9ucyIsIml0ZW1zUGVyUGFnZSIsIm9yaWVudGF0aW9uIiwiYnV0dG9uT3B0aW9ucyIsInRvdWNoQXJlYVhEaWxhdGlvbiIsInNwYWNpbmciLCJtYXJnaW4iLCJzZXBhcmF0b3JzVmlzaWJsZSIsImZpbGwiLCJwYW5lbEZpbGxQcm9wZXJ0eSIsInN0cm9rZSIsInBhbmVsU3Ryb2tlUHJvcGVydHkiLCJjcmVhdGVUYW5kZW0iLCJjYXJvdXNlbCIsIm11dGF0ZSIsInNjYWxlIiwiY2Fyb3VzZWxTY2FsZSIsInBhZ2VDb250cm9sIiwicGFnZU51bWJlclByb3BlcnR5IiwibnVtYmVyT2ZQYWdlc1Byb3BlcnR5IiwicGFnZUZpbGwiLCJXSElURSIsInBhZ2VTdHJva2UiLCJCTEFDSyIsImN1cnJlbnRQYWdlU3Ryb2tlIiwiVFJBTlNQQVJFTlQiLCJpbnRlcmFjdGl2ZSIsImNoaWxkcmVuIiwidmlzaWJsZVByb3BlcnR5T3B0aW9ucyIsInBoZXRpb0ZlYXR1cmVkIiwicmVzZXQiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIkNpcmN1aXRFbGVtZW50VG9vbGJveC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxNi0yMDIzLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBUb29sYm94IGZyb20gd2hpY2ggQ2lyY3VpdEVsZW1lbnRzIGNhbiBiZSBkcmFnZ2VkIG9yIHJldHVybmVkLiAgRXhpc3RzIGZvciB0aGUgbGlmZSBvZiB0aGUgc2ltIGFuZCBoZW5jZSBkb2VzIG5vdFxyXG4gKiByZXF1aXJlIGEgZGlzcG9zZSBpbXBsZW1lbnRhdGlvbi5cclxuICpcclxuICogQGF1dGhvciBTYW0gUmVpZCAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcclxuICovXHJcblxyXG5pbXBvcnQgUHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vYXhvbi9qcy9Qcm9wZXJ0eS5qcyc7XHJcbmltcG9ydCBvcHRpb25pemUgZnJvbSAnLi4vLi4vLi4vcGhldC1jb3JlL2pzL29wdGlvbml6ZS5qcyc7XHJcbmltcG9ydCB7IENvbG9yLCBIQm94LCBIQm94T3B0aW9ucyB9IGZyb20gJy4uLy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XHJcbmltcG9ydCBDYXJvdXNlbCwgeyBDYXJvdXNlbEl0ZW0sIENhcm91c2VsT3B0aW9ucyB9IGZyb20gJy4uLy4uLy4uL3N1bi9qcy9DYXJvdXNlbC5qcyc7XHJcbmltcG9ydCBQYWdlQ29udHJvbCBmcm9tICcuLi8uLi8uLi9zdW4vanMvUGFnZUNvbnRyb2wuanMnO1xyXG5pbXBvcnQgVGFuZGVtIGZyb20gJy4uLy4uLy4uL3RhbmRlbS9qcy9UYW5kZW0uanMnO1xyXG5pbXBvcnQgY2lyY3VpdENvbnN0cnVjdGlvbktpdENvbW1vbiBmcm9tICcuLi9jaXJjdWl0Q29uc3RydWN0aW9uS2l0Q29tbW9uLmpzJztcclxuaW1wb3J0IENpcmN1aXRFbGVtZW50Vmlld1R5cGUgZnJvbSAnLi4vbW9kZWwvQ2lyY3VpdEVsZW1lbnRWaWV3VHlwZS5qcyc7XHJcbmltcG9ydCBDQ0tDQ29sb3JzIGZyb20gJy4vQ0NLQ0NvbG9ycy5qcyc7XHJcblxyXG4vLyBjb25zdGFudHNcclxuXHJcbnR5cGUgU2VsZk9wdGlvbnMgPSB7XHJcbiAgY2Fyb3VzZWxPcHRpb25zPzogQ2Fyb3VzZWxPcHRpb25zO1xyXG4gIGNhcm91c2VsU2NhbGU6IG51bWJlcjtcclxufTtcclxuZXhwb3J0IHR5cGUgQ2lyY3VpdEVsZW1lbnRUb29sYm94T3B0aW9ucyA9IFNlbGZPcHRpb25zICYgSEJveE9wdGlvbnM7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDaXJjdWl0RWxlbWVudFRvb2xib3ggZXh0ZW5kcyBIQm94IHtcclxuICBwdWJsaWMgcmVhZG9ubHkgY2Fyb3VzZWw6IENhcm91c2VsO1xyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoIHZpZXdUeXBlUHJvcGVydHk6IFByb3BlcnR5PENpcmN1aXRFbGVtZW50Vmlld1R5cGU+LCBjaXJjdWl0RWxlbWVudFRvb2xJdGVtczogQ2Fyb3VzZWxJdGVtW10sIHRhbmRlbTogVGFuZGVtLCBwcm92aWRlZE9wdGlvbnM/OiBDaXJjdWl0RWxlbWVudFRvb2xib3hPcHRpb25zICkge1xyXG5cclxuICAgIHByb3ZpZGVkT3B0aW9ucyA9IG9wdGlvbml6ZTxDaXJjdWl0RWxlbWVudFRvb2xib3hPcHRpb25zLCBTZWxmT3B0aW9ucywgSEJveE9wdGlvbnM+KCkoIHtcclxuICAgICAgY2Fyb3VzZWxPcHRpb25zOiB7XHJcblxyXG4gICAgICAgIGl0ZW1zUGVyUGFnZTogNSxcclxuXHJcbiAgICAgICAgb3JpZW50YXRpb246ICd2ZXJ0aWNhbCcsXHJcblxyXG4gICAgICAgIGJ1dHRvbk9wdGlvbnM6IHtcclxuICAgICAgICAgIC8vIEV4cGFuZCB0aGUgdG91Y2ggYXJlYSBhYm92ZSB0aGUgdXAgYnV0dG9uIGFuZCBiZWxvdyB0aGUgZG93biBidXR0b25cclxuICAgICAgICAgIHRvdWNoQXJlYVhEaWxhdGlvbjogOFxyXG4gICAgICAgIH0sXHJcblxyXG4gICAgICAgIHNwYWNpbmc6IDI0LFxyXG5cclxuICAgICAgICBtYXJnaW46IDEyLFxyXG5cclxuICAgICAgICBzZXBhcmF0b3JzVmlzaWJsZTogdHJ1ZSxcclxuXHJcbiAgICAgICAgZmlsbDogQ0NLQ0NvbG9ycy5wYW5lbEZpbGxQcm9wZXJ0eSxcclxuXHJcbiAgICAgICAgc3Ryb2tlOiBDQ0tDQ29sb3JzLnBhbmVsU3Ryb2tlUHJvcGVydHksXHJcblxyXG4gICAgICAgIHRhbmRlbTogdGFuZGVtLmNyZWF0ZVRhbmRlbSggJ2Nhcm91c2VsJyApXHJcbiAgICAgIH1cclxuICAgIH0sIHByb3ZpZGVkT3B0aW9ucyApO1xyXG5cclxuICAgIC8vIGNyZWF0ZSB0aGUgY2Fyb3VzZWxcclxuICAgIGNvbnN0IGNhcm91c2VsID0gbmV3IENhcm91c2VsKCBjaXJjdWl0RWxlbWVudFRvb2xJdGVtcywgcHJvdmlkZWRPcHRpb25zLmNhcm91c2VsT3B0aW9ucyApO1xyXG4gICAgY2Fyb3VzZWwubXV0YXRlKCB7IHNjYWxlOiBwcm92aWRlZE9wdGlvbnMuY2Fyb3VzZWxTY2FsZSB9ICk7XHJcblxyXG4gICAgY29uc3QgcGFnZUNvbnRyb2wgPSBuZXcgUGFnZUNvbnRyb2woIGNhcm91c2VsLnBhZ2VOdW1iZXJQcm9wZXJ0eSwgY2Fyb3VzZWwubnVtYmVyT2ZQYWdlc1Byb3BlcnR5LCB7XHJcbiAgICAgIG9yaWVudGF0aW9uOiAndmVydGljYWwnLFxyXG4gICAgICBwYWdlRmlsbDogQ29sb3IuV0hJVEUsXHJcbiAgICAgIHBhZ2VTdHJva2U6IENvbG9yLkJMQUNLLFxyXG4gICAgICBjdXJyZW50UGFnZVN0cm9rZTogQ29sb3IuVFJBTlNQQVJFTlQsXHJcbiAgICAgIGludGVyYWN0aXZlOiB0cnVlLFxyXG4gICAgICB0YW5kZW06IHRhbmRlbS5jcmVhdGVUYW5kZW0oICdwYWdlQ29udHJvbCcgKVxyXG4gICAgfSApO1xyXG5cclxuICAgIHN1cGVyKCB7XHJcbiAgICAgIHNwYWNpbmc6IDUsXHJcbiAgICAgIGNoaWxkcmVuOiBbIHBhZ2VDb250cm9sLCBjYXJvdXNlbCBdLFxyXG4gICAgICB0YW5kZW06IHRhbmRlbSxcclxuICAgICAgdmlzaWJsZVByb3BlcnR5T3B0aW9uczoge1xyXG4gICAgICAgIHBoZXRpb0ZlYXR1cmVkOiB0cnVlXHJcbiAgICAgIH1cclxuICAgIH0gKTtcclxuXHJcbiAgICB0aGlzLmNhcm91c2VsID0gY2Fyb3VzZWw7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBSZXNldHMgdGhlIHRvb2xib3guXHJcbiAgICovXHJcbiAgcHVibGljIHJlc2V0KCk6IHZvaWQge1xyXG4gICAgdGhpcy5jYXJvdXNlbC5yZXNldCgpO1xyXG4gIH1cclxufVxyXG5cclxuY2lyY3VpdENvbnN0cnVjdGlvbktpdENvbW1vbi5yZWdpc3RlciggJ0NpcmN1aXRFbGVtZW50VG9vbGJveCcsIENpcmN1aXRFbGVtZW50VG9vbGJveCApOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUdBLE9BQU9BLFNBQVMsTUFBTSxvQ0FBb0M7QUFDMUQsU0FBU0MsS0FBSyxFQUFFQyxJQUFJLFFBQXFCLGdDQUFnQztBQUN6RSxPQUFPQyxRQUFRLE1BQXlDLDZCQUE2QjtBQUNyRixPQUFPQyxXQUFXLE1BQU0sZ0NBQWdDO0FBRXhELE9BQU9DLDRCQUE0QixNQUFNLG9DQUFvQztBQUU3RSxPQUFPQyxVQUFVLE1BQU0saUJBQWlCOztBQUV4Qzs7QUFRQSxlQUFlLE1BQU1DLHFCQUFxQixTQUFTTCxJQUFJLENBQUM7RUFHL0NNLFdBQVdBLENBQUVDLGdCQUFrRCxFQUFFQyx1QkFBdUMsRUFBRUMsTUFBYyxFQUFFQyxlQUE4QyxFQUFHO0lBRWhMQSxlQUFlLEdBQUdaLFNBQVMsQ0FBeUQsQ0FBQyxDQUFFO01BQ3JGYSxlQUFlLEVBQUU7UUFFZkMsWUFBWSxFQUFFLENBQUM7UUFFZkMsV0FBVyxFQUFFLFVBQVU7UUFFdkJDLGFBQWEsRUFBRTtVQUNiO1VBQ0FDLGtCQUFrQixFQUFFO1FBQ3RCLENBQUM7UUFFREMsT0FBTyxFQUFFLEVBQUU7UUFFWEMsTUFBTSxFQUFFLEVBQUU7UUFFVkMsaUJBQWlCLEVBQUUsSUFBSTtRQUV2QkMsSUFBSSxFQUFFZixVQUFVLENBQUNnQixpQkFBaUI7UUFFbENDLE1BQU0sRUFBRWpCLFVBQVUsQ0FBQ2tCLG1CQUFtQjtRQUV0Q2IsTUFBTSxFQUFFQSxNQUFNLENBQUNjLFlBQVksQ0FBRSxVQUFXO01BQzFDO0lBQ0YsQ0FBQyxFQUFFYixlQUFnQixDQUFDOztJQUVwQjtJQUNBLE1BQU1jLFFBQVEsR0FBRyxJQUFJdkIsUUFBUSxDQUFFTyx1QkFBdUIsRUFBRUUsZUFBZSxDQUFDQyxlQUFnQixDQUFDO0lBQ3pGYSxRQUFRLENBQUNDLE1BQU0sQ0FBRTtNQUFFQyxLQUFLLEVBQUVoQixlQUFlLENBQUNpQjtJQUFjLENBQUUsQ0FBQztJQUUzRCxNQUFNQyxXQUFXLEdBQUcsSUFBSTFCLFdBQVcsQ0FBRXNCLFFBQVEsQ0FBQ0ssa0JBQWtCLEVBQUVMLFFBQVEsQ0FBQ00scUJBQXFCLEVBQUU7TUFDaEdqQixXQUFXLEVBQUUsVUFBVTtNQUN2QmtCLFFBQVEsRUFBRWhDLEtBQUssQ0FBQ2lDLEtBQUs7TUFDckJDLFVBQVUsRUFBRWxDLEtBQUssQ0FBQ21DLEtBQUs7TUFDdkJDLGlCQUFpQixFQUFFcEMsS0FBSyxDQUFDcUMsV0FBVztNQUNwQ0MsV0FBVyxFQUFFLElBQUk7TUFDakI1QixNQUFNLEVBQUVBLE1BQU0sQ0FBQ2MsWUFBWSxDQUFFLGFBQWM7SUFDN0MsQ0FBRSxDQUFDO0lBRUgsS0FBSyxDQUFFO01BQ0xQLE9BQU8sRUFBRSxDQUFDO01BQ1ZzQixRQUFRLEVBQUUsQ0FBRVYsV0FBVyxFQUFFSixRQUFRLENBQUU7TUFDbkNmLE1BQU0sRUFBRUEsTUFBTTtNQUNkOEIsc0JBQXNCLEVBQUU7UUFDdEJDLGNBQWMsRUFBRTtNQUNsQjtJQUNGLENBQUUsQ0FBQztJQUVILElBQUksQ0FBQ2hCLFFBQVEsR0FBR0EsUUFBUTtFQUMxQjs7RUFFQTtBQUNGO0FBQ0E7RUFDU2lCLEtBQUtBLENBQUEsRUFBUztJQUNuQixJQUFJLENBQUNqQixRQUFRLENBQUNpQixLQUFLLENBQUMsQ0FBQztFQUN2QjtBQUNGO0FBRUF0Qyw0QkFBNEIsQ0FBQ3VDLFFBQVEsQ0FBRSx1QkFBdUIsRUFBRXJDLHFCQUFzQixDQUFDIn0=