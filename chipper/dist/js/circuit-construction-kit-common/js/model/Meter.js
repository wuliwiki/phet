// Copyright 2016-2023, University of Colorado Boulder

/**
 * Base class for Ammeter and Voltmeter.  Meters for the life of the sim and hence do not need a dispose implementation.
 *
 * @author Sam Reid (PhET Interactive Simulations)
 */

import BooleanProperty from '../../../axon/js/BooleanProperty.js';
import Emitter from '../../../axon/js/Emitter.js';
import Bounds2 from '../../../dot/js/Bounds2.js';
import Vector2 from '../../../dot/js/Vector2.js';
import Vector2Property from '../../../dot/js/Vector2Property.js';
import circuitConstructionKitCommon from '../circuitConstructionKitCommon.js';
import PhetioObject from '../../../tandem/js/PhetioObject.js';
export default class Meter extends PhetioObject {
  // indicates whether the meter is in the play area

  // the position of the body of the meter

  // When the meter is dragged from the toolbox, all pieces drag together.

  // Fires an event when the meter is dropped

  /**
   * @param tandem
   * @param phetioIndex - for assigning corresponding tandems
   */
  constructor(tandem, phetioIndex) {
    super({
      tandem: tandem,
      phetioState: false,
      phetioFeatured: true
    });
    this.phetioIndex = phetioIndex;
    this.isActiveProperty = new BooleanProperty(false, {
      tandem: tandem.createTandem('isActiveProperty'),
      phetioFeatured: true
    });
    this.bodyPositionProperty = new Vector2Property(Vector2.ZERO, {
      tandem: tandem.createTandem('bodyPositionProperty'),
      phetioFeatured: true
    });
    this.isDraggingProbesWithBodyProperty = new BooleanProperty(true, {
      tandem: tandem.createTandem('isDraggingProbesWithBodyProperty')
    });
    this.droppedEmitter = new Emitter({
      parameters: [{
        valueType: Bounds2
      }]
    });
  }

  /**
   * Resets the meter.  This is overridden by Ammeter and Voltmeter.
   */
  reset() {
    this.isActiveProperty.reset();
    this.bodyPositionProperty.reset();
    this.isDraggingProbesWithBodyProperty.reset();
  }
}
circuitConstructionKitCommon.register('Meter', Meter);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJCb29sZWFuUHJvcGVydHkiLCJFbWl0dGVyIiwiQm91bmRzMiIsIlZlY3RvcjIiLCJWZWN0b3IyUHJvcGVydHkiLCJjaXJjdWl0Q29uc3RydWN0aW9uS2l0Q29tbW9uIiwiUGhldGlvT2JqZWN0IiwiTWV0ZXIiLCJjb25zdHJ1Y3RvciIsInRhbmRlbSIsInBoZXRpb0luZGV4IiwicGhldGlvU3RhdGUiLCJwaGV0aW9GZWF0dXJlZCIsImlzQWN0aXZlUHJvcGVydHkiLCJjcmVhdGVUYW5kZW0iLCJib2R5UG9zaXRpb25Qcm9wZXJ0eSIsIlpFUk8iLCJpc0RyYWdnaW5nUHJvYmVzV2l0aEJvZHlQcm9wZXJ0eSIsImRyb3BwZWRFbWl0dGVyIiwicGFyYW1ldGVycyIsInZhbHVlVHlwZSIsInJlc2V0IiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJNZXRlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxNi0yMDIzLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBCYXNlIGNsYXNzIGZvciBBbW1ldGVyIGFuZCBWb2x0bWV0ZXIuICBNZXRlcnMgZm9yIHRoZSBsaWZlIG9mIHRoZSBzaW0gYW5kIGhlbmNlIGRvIG5vdCBuZWVkIGEgZGlzcG9zZSBpbXBsZW1lbnRhdGlvbi5cclxuICpcclxuICogQGF1dGhvciBTYW0gUmVpZCAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcclxuICovXHJcblxyXG5pbXBvcnQgQm9vbGVhblByb3BlcnR5IGZyb20gJy4uLy4uLy4uL2F4b24vanMvQm9vbGVhblByb3BlcnR5LmpzJztcclxuaW1wb3J0IEVtaXR0ZXIgZnJvbSAnLi4vLi4vLi4vYXhvbi9qcy9FbWl0dGVyLmpzJztcclxuaW1wb3J0IFRFbWl0dGVyIGZyb20gJy4uLy4uLy4uL2F4b24vanMvVEVtaXR0ZXIuanMnO1xyXG5pbXBvcnQgUHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vYXhvbi9qcy9Qcm9wZXJ0eS5qcyc7XHJcbmltcG9ydCBCb3VuZHMyIGZyb20gJy4uLy4uLy4uL2RvdC9qcy9Cb3VuZHMyLmpzJztcclxuaW1wb3J0IFZlY3RvcjIgZnJvbSAnLi4vLi4vLi4vZG90L2pzL1ZlY3RvcjIuanMnO1xyXG5pbXBvcnQgVmVjdG9yMlByb3BlcnR5IGZyb20gJy4uLy4uLy4uL2RvdC9qcy9WZWN0b3IyUHJvcGVydHkuanMnO1xyXG5pbXBvcnQgVGFuZGVtIGZyb20gJy4uLy4uLy4uL3RhbmRlbS9qcy9UYW5kZW0uanMnO1xyXG5pbXBvcnQgY2lyY3VpdENvbnN0cnVjdGlvbktpdENvbW1vbiBmcm9tICcuLi9jaXJjdWl0Q29uc3RydWN0aW9uS2l0Q29tbW9uLmpzJztcclxuaW1wb3J0IFBoZXRpb09iamVjdCBmcm9tICcuLi8uLi8uLi90YW5kZW0vanMvUGhldGlvT2JqZWN0LmpzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1ldGVyIGV4dGVuZHMgUGhldGlvT2JqZWN0IHtcclxuICBwdWJsaWMgcGhldGlvSW5kZXg6IG51bWJlcjtcclxuXHJcbiAgLy8gaW5kaWNhdGVzIHdoZXRoZXIgdGhlIG1ldGVyIGlzIGluIHRoZSBwbGF5IGFyZWFcclxuICBwdWJsaWMgcmVhZG9ubHkgaXNBY3RpdmVQcm9wZXJ0eTogUHJvcGVydHk8Ym9vbGVhbj47XHJcblxyXG4gIC8vIHRoZSBwb3NpdGlvbiBvZiB0aGUgYm9keSBvZiB0aGUgbWV0ZXJcclxuICBwdWJsaWMgcmVhZG9ubHkgYm9keVBvc2l0aW9uUHJvcGVydHk6IFByb3BlcnR5PFZlY3RvcjI+O1xyXG5cclxuICAvLyBXaGVuIHRoZSBtZXRlciBpcyBkcmFnZ2VkIGZyb20gdGhlIHRvb2xib3gsIGFsbCBwaWVjZXMgZHJhZyB0b2dldGhlci5cclxuICBwdWJsaWMgcmVhZG9ubHkgaXNEcmFnZ2luZ1Byb2Jlc1dpdGhCb2R5UHJvcGVydHk6IEJvb2xlYW5Qcm9wZXJ0eTtcclxuXHJcbiAgLy8gRmlyZXMgYW4gZXZlbnQgd2hlbiB0aGUgbWV0ZXIgaXMgZHJvcHBlZFxyXG4gIHB1YmxpYyByZWFkb25seSBkcm9wcGVkRW1pdHRlcjogVEVtaXR0ZXI8WyBCb3VuZHMyIF0+O1xyXG5cclxuICAvKipcclxuICAgKiBAcGFyYW0gdGFuZGVtXHJcbiAgICogQHBhcmFtIHBoZXRpb0luZGV4IC0gZm9yIGFzc2lnbmluZyBjb3JyZXNwb25kaW5nIHRhbmRlbXNcclxuICAgKi9cclxuICBwdWJsaWMgY29uc3RydWN0b3IoIHRhbmRlbTogVGFuZGVtLCBwaGV0aW9JbmRleDogbnVtYmVyICkge1xyXG5cclxuICAgIHN1cGVyKCB7XHJcbiAgICAgIHRhbmRlbTogdGFuZGVtLFxyXG4gICAgICBwaGV0aW9TdGF0ZTogZmFsc2UsXHJcbiAgICAgIHBoZXRpb0ZlYXR1cmVkOiB0cnVlXHJcbiAgICB9ICk7XHJcblxyXG4gICAgdGhpcy5waGV0aW9JbmRleCA9IHBoZXRpb0luZGV4O1xyXG4gICAgdGhpcy5pc0FjdGl2ZVByb3BlcnR5ID0gbmV3IEJvb2xlYW5Qcm9wZXJ0eSggZmFsc2UsIHtcclxuICAgICAgdGFuZGVtOiB0YW5kZW0uY3JlYXRlVGFuZGVtKCAnaXNBY3RpdmVQcm9wZXJ0eScgKSxcclxuICAgICAgcGhldGlvRmVhdHVyZWQ6IHRydWVcclxuICAgIH0gKTtcclxuXHJcbiAgICB0aGlzLmJvZHlQb3NpdGlvblByb3BlcnR5ID0gbmV3IFZlY3RvcjJQcm9wZXJ0eSggVmVjdG9yMi5aRVJPLCB7XHJcbiAgICAgIHRhbmRlbTogdGFuZGVtLmNyZWF0ZVRhbmRlbSggJ2JvZHlQb3NpdGlvblByb3BlcnR5JyApLFxyXG4gICAgICBwaGV0aW9GZWF0dXJlZDogdHJ1ZVxyXG4gICAgfSApO1xyXG5cclxuICAgIHRoaXMuaXNEcmFnZ2luZ1Byb2Jlc1dpdGhCb2R5UHJvcGVydHkgPSBuZXcgQm9vbGVhblByb3BlcnR5KCB0cnVlLCB7XHJcbiAgICAgIHRhbmRlbTogdGFuZGVtLmNyZWF0ZVRhbmRlbSggJ2lzRHJhZ2dpbmdQcm9iZXNXaXRoQm9keVByb3BlcnR5JyApXHJcbiAgICB9ICk7XHJcblxyXG4gICAgdGhpcy5kcm9wcGVkRW1pdHRlciA9IG5ldyBFbWl0dGVyKCB7IHBhcmFtZXRlcnM6IFsgeyB2YWx1ZVR5cGU6IEJvdW5kczIgfSBdIH0gKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFJlc2V0cyB0aGUgbWV0ZXIuICBUaGlzIGlzIG92ZXJyaWRkZW4gYnkgQW1tZXRlciBhbmQgVm9sdG1ldGVyLlxyXG4gICAqL1xyXG4gIHB1YmxpYyByZXNldCgpOiB2b2lkIHtcclxuICAgIHRoaXMuaXNBY3RpdmVQcm9wZXJ0eS5yZXNldCgpO1xyXG4gICAgdGhpcy5ib2R5UG9zaXRpb25Qcm9wZXJ0eS5yZXNldCgpO1xyXG4gICAgdGhpcy5pc0RyYWdnaW5nUHJvYmVzV2l0aEJvZHlQcm9wZXJ0eS5yZXNldCgpO1xyXG4gIH1cclxufVxyXG5cclxuY2lyY3VpdENvbnN0cnVjdGlvbktpdENvbW1vbi5yZWdpc3RlciggJ01ldGVyJywgTWV0ZXIgKTsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsZUFBZSxNQUFNLHFDQUFxQztBQUNqRSxPQUFPQyxPQUFPLE1BQU0sNkJBQTZCO0FBR2pELE9BQU9DLE9BQU8sTUFBTSw0QkFBNEI7QUFDaEQsT0FBT0MsT0FBTyxNQUFNLDRCQUE0QjtBQUNoRCxPQUFPQyxlQUFlLE1BQU0sb0NBQW9DO0FBRWhFLE9BQU9DLDRCQUE0QixNQUFNLG9DQUFvQztBQUM3RSxPQUFPQyxZQUFZLE1BQU0sb0NBQW9DO0FBRTdELGVBQWUsTUFBTUMsS0FBSyxTQUFTRCxZQUFZLENBQUM7RUFHOUM7O0VBR0E7O0VBR0E7O0VBR0E7O0VBR0E7QUFDRjtBQUNBO0FBQ0E7RUFDU0UsV0FBV0EsQ0FBRUMsTUFBYyxFQUFFQyxXQUFtQixFQUFHO0lBRXhELEtBQUssQ0FBRTtNQUNMRCxNQUFNLEVBQUVBLE1BQU07TUFDZEUsV0FBVyxFQUFFLEtBQUs7TUFDbEJDLGNBQWMsRUFBRTtJQUNsQixDQUFFLENBQUM7SUFFSCxJQUFJLENBQUNGLFdBQVcsR0FBR0EsV0FBVztJQUM5QixJQUFJLENBQUNHLGdCQUFnQixHQUFHLElBQUliLGVBQWUsQ0FBRSxLQUFLLEVBQUU7TUFDbERTLE1BQU0sRUFBRUEsTUFBTSxDQUFDSyxZQUFZLENBQUUsa0JBQW1CLENBQUM7TUFDakRGLGNBQWMsRUFBRTtJQUNsQixDQUFFLENBQUM7SUFFSCxJQUFJLENBQUNHLG9CQUFvQixHQUFHLElBQUlYLGVBQWUsQ0FBRUQsT0FBTyxDQUFDYSxJQUFJLEVBQUU7TUFDN0RQLE1BQU0sRUFBRUEsTUFBTSxDQUFDSyxZQUFZLENBQUUsc0JBQXVCLENBQUM7TUFDckRGLGNBQWMsRUFBRTtJQUNsQixDQUFFLENBQUM7SUFFSCxJQUFJLENBQUNLLGdDQUFnQyxHQUFHLElBQUlqQixlQUFlLENBQUUsSUFBSSxFQUFFO01BQ2pFUyxNQUFNLEVBQUVBLE1BQU0sQ0FBQ0ssWUFBWSxDQUFFLGtDQUFtQztJQUNsRSxDQUFFLENBQUM7SUFFSCxJQUFJLENBQUNJLGNBQWMsR0FBRyxJQUFJakIsT0FBTyxDQUFFO01BQUVrQixVQUFVLEVBQUUsQ0FBRTtRQUFFQyxTQUFTLEVBQUVsQjtNQUFRLENBQUM7SUFBRyxDQUFFLENBQUM7RUFDakY7O0VBRUE7QUFDRjtBQUNBO0VBQ1NtQixLQUFLQSxDQUFBLEVBQVM7SUFDbkIsSUFBSSxDQUFDUixnQkFBZ0IsQ0FBQ1EsS0FBSyxDQUFDLENBQUM7SUFDN0IsSUFBSSxDQUFDTixvQkFBb0IsQ0FBQ00sS0FBSyxDQUFDLENBQUM7SUFDakMsSUFBSSxDQUFDSixnQ0FBZ0MsQ0FBQ0ksS0FBSyxDQUFDLENBQUM7RUFDL0M7QUFDRjtBQUVBaEIsNEJBQTRCLENBQUNpQixRQUFRLENBQUUsT0FBTyxFQUFFZixLQUFNLENBQUMifQ==