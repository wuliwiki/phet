// Copyright 2017-2022, University of Colorado Boulder

/**
 * The 'Build an Atom' screen in the 'Build an Atom' simulation. Conforms to the contract specified in joist/Screen.
 *
 * @author John Blanco
 */

import Property from '../../../axon/js/Property.js';
import Screen from '../../../joist/js/Screen.js';
import ScreenIcon from '../../../joist/js/ScreenIcon.js';
import { Image } from '../../../scenery/js/imports.js';
import Tandem from '../../../tandem/js/Tandem.js';
import gameIcon_png from '../../images/gameIcon_png.js';
import gameIconSmall_png from '../../images/gameIconSmall_png.js';
import buildAnAtom from '../buildAnAtom.js';
import BuildAnAtomStrings from '../BuildAnAtomStrings.js';
import GameModel from './model/GameModel.js';
import GameScreenView from './view/GameScreenView.js';
class GameScreen extends Screen {
  /**
   * @param {Tandem} tandem
   */
  constructor(tandem) {
    super(() => new GameModel(tandem.createTandem('model')),
    // TODO: Instrument the game screen, see https://github.com/phetsims/build-an-atom/issues/156
    model => new GameScreenView(model, Tandem.OPTIONAL), {
      name: BuildAnAtomStrings.gameStringProperty,
      backgroundColorProperty: new Property('rgb( 255, 254, 223 )'),
      homeScreenIcon: new ScreenIcon(new Image(gameIcon_png), {
        maxIconWidthProportion: 1,
        maxIconHeightProportion: 1
      }),
      navigationBarIcon: new ScreenIcon(new Image(gameIconSmall_png), {
        maxIconWidthProportion: 1,
        maxIconHeightProportion: 1
      }),
      tandem: tandem
    });
  }
}
buildAnAtom.register('GameScreen', GameScreen);
export default GameScreen;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQcm9wZXJ0eSIsIlNjcmVlbiIsIlNjcmVlbkljb24iLCJJbWFnZSIsIlRhbmRlbSIsImdhbWVJY29uX3BuZyIsImdhbWVJY29uU21hbGxfcG5nIiwiYnVpbGRBbkF0b20iLCJCdWlsZEFuQXRvbVN0cmluZ3MiLCJHYW1lTW9kZWwiLCJHYW1lU2NyZWVuVmlldyIsIkdhbWVTY3JlZW4iLCJjb25zdHJ1Y3RvciIsInRhbmRlbSIsImNyZWF0ZVRhbmRlbSIsIm1vZGVsIiwiT1BUSU9OQUwiLCJuYW1lIiwiZ2FtZVN0cmluZ1Byb3BlcnR5IiwiYmFja2dyb3VuZENvbG9yUHJvcGVydHkiLCJob21lU2NyZWVuSWNvbiIsIm1heEljb25XaWR0aFByb3BvcnRpb24iLCJtYXhJY29uSGVpZ2h0UHJvcG9ydGlvbiIsIm5hdmlnYXRpb25CYXJJY29uIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJHYW1lU2NyZWVuLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE3LTIwMjIsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIFRoZSAnQnVpbGQgYW4gQXRvbScgc2NyZWVuIGluIHRoZSAnQnVpbGQgYW4gQXRvbScgc2ltdWxhdGlvbi4gQ29uZm9ybXMgdG8gdGhlIGNvbnRyYWN0IHNwZWNpZmllZCBpbiBqb2lzdC9TY3JlZW4uXHJcbiAqXHJcbiAqIEBhdXRob3IgSm9obiBCbGFuY29cclxuICovXHJcblxyXG5pbXBvcnQgUHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vYXhvbi9qcy9Qcm9wZXJ0eS5qcyc7XHJcbmltcG9ydCBTY3JlZW4gZnJvbSAnLi4vLi4vLi4vam9pc3QvanMvU2NyZWVuLmpzJztcclxuaW1wb3J0IFNjcmVlbkljb24gZnJvbSAnLi4vLi4vLi4vam9pc3QvanMvU2NyZWVuSWNvbi5qcyc7XHJcbmltcG9ydCB7IEltYWdlIH0gZnJvbSAnLi4vLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IFRhbmRlbSBmcm9tICcuLi8uLi8uLi90YW5kZW0vanMvVGFuZGVtLmpzJztcclxuaW1wb3J0IGdhbWVJY29uX3BuZyBmcm9tICcuLi8uLi9pbWFnZXMvZ2FtZUljb25fcG5nLmpzJztcclxuaW1wb3J0IGdhbWVJY29uU21hbGxfcG5nIGZyb20gJy4uLy4uL2ltYWdlcy9nYW1lSWNvblNtYWxsX3BuZy5qcyc7XHJcbmltcG9ydCBidWlsZEFuQXRvbSBmcm9tICcuLi9idWlsZEFuQXRvbS5qcyc7XHJcbmltcG9ydCBCdWlsZEFuQXRvbVN0cmluZ3MgZnJvbSAnLi4vQnVpbGRBbkF0b21TdHJpbmdzLmpzJztcclxuaW1wb3J0IEdhbWVNb2RlbCBmcm9tICcuL21vZGVsL0dhbWVNb2RlbC5qcyc7XHJcbmltcG9ydCBHYW1lU2NyZWVuVmlldyBmcm9tICcuL3ZpZXcvR2FtZVNjcmVlblZpZXcuanMnO1xyXG5cclxuY2xhc3MgR2FtZVNjcmVlbiBleHRlbmRzIFNjcmVlbiB7XHJcblxyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSB7VGFuZGVtfSB0YW5kZW1cclxuICAgKi9cclxuICBjb25zdHJ1Y3RvciggdGFuZGVtICkge1xyXG4gICAgc3VwZXIoXHJcbiAgICAgICgpID0+IG5ldyBHYW1lTW9kZWwoIHRhbmRlbS5jcmVhdGVUYW5kZW0oICdtb2RlbCcgKSApLFxyXG5cclxuICAgICAgLy8gVE9ETzogSW5zdHJ1bWVudCB0aGUgZ2FtZSBzY3JlZW4sIHNlZSBodHRwczovL2dpdGh1Yi5jb20vcGhldHNpbXMvYnVpbGQtYW4tYXRvbS9pc3N1ZXMvMTU2XHJcbiAgICAgIG1vZGVsID0+IG5ldyBHYW1lU2NyZWVuVmlldyggbW9kZWwsIFRhbmRlbS5PUFRJT05BTCApLFxyXG4gICAgICB7XHJcbiAgICAgICAgbmFtZTogQnVpbGRBbkF0b21TdHJpbmdzLmdhbWVTdHJpbmdQcm9wZXJ0eSxcclxuICAgICAgICBiYWNrZ3JvdW5kQ29sb3JQcm9wZXJ0eTogbmV3IFByb3BlcnR5KCAncmdiKCAyNTUsIDI1NCwgMjIzICknICksXHJcbiAgICAgICAgaG9tZVNjcmVlbkljb246IG5ldyBTY3JlZW5JY29uKCBuZXcgSW1hZ2UoIGdhbWVJY29uX3BuZyApLCB7XHJcbiAgICAgICAgICBtYXhJY29uV2lkdGhQcm9wb3J0aW9uOiAxLFxyXG4gICAgICAgICAgbWF4SWNvbkhlaWdodFByb3BvcnRpb246IDFcclxuICAgICAgICB9ICksXHJcbiAgICAgICAgbmF2aWdhdGlvbkJhckljb246IG5ldyBTY3JlZW5JY29uKCBuZXcgSW1hZ2UoIGdhbWVJY29uU21hbGxfcG5nICksIHtcclxuICAgICAgICAgIG1heEljb25XaWR0aFByb3BvcnRpb246IDEsXHJcbiAgICAgICAgICBtYXhJY29uSGVpZ2h0UHJvcG9ydGlvbjogMVxyXG4gICAgICAgIH0gKSxcclxuICAgICAgICB0YW5kZW06IHRhbmRlbVxyXG4gICAgICB9XHJcbiAgICApO1xyXG4gIH1cclxufVxyXG5cclxuYnVpbGRBbkF0b20ucmVnaXN0ZXIoICdHYW1lU2NyZWVuJywgR2FtZVNjcmVlbiApO1xyXG5leHBvcnQgZGVmYXVsdCBHYW1lU2NyZWVuOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxRQUFRLE1BQU0sOEJBQThCO0FBQ25ELE9BQU9DLE1BQU0sTUFBTSw2QkFBNkI7QUFDaEQsT0FBT0MsVUFBVSxNQUFNLGlDQUFpQztBQUN4RCxTQUFTQyxLQUFLLFFBQVEsZ0NBQWdDO0FBQ3RELE9BQU9DLE1BQU0sTUFBTSw4QkFBOEI7QUFDakQsT0FBT0MsWUFBWSxNQUFNLDhCQUE4QjtBQUN2RCxPQUFPQyxpQkFBaUIsTUFBTSxtQ0FBbUM7QUFDakUsT0FBT0MsV0FBVyxNQUFNLG1CQUFtQjtBQUMzQyxPQUFPQyxrQkFBa0IsTUFBTSwwQkFBMEI7QUFDekQsT0FBT0MsU0FBUyxNQUFNLHNCQUFzQjtBQUM1QyxPQUFPQyxjQUFjLE1BQU0sMEJBQTBCO0FBRXJELE1BQU1DLFVBQVUsU0FBU1YsTUFBTSxDQUFDO0VBRTlCO0FBQ0Y7QUFDQTtFQUNFVyxXQUFXQSxDQUFFQyxNQUFNLEVBQUc7SUFDcEIsS0FBSyxDQUNILE1BQU0sSUFBSUosU0FBUyxDQUFFSSxNQUFNLENBQUNDLFlBQVksQ0FBRSxPQUFRLENBQUUsQ0FBQztJQUVyRDtJQUNBQyxLQUFLLElBQUksSUFBSUwsY0FBYyxDQUFFSyxLQUFLLEVBQUVYLE1BQU0sQ0FBQ1ksUUFBUyxDQUFDLEVBQ3JEO01BQ0VDLElBQUksRUFBRVQsa0JBQWtCLENBQUNVLGtCQUFrQjtNQUMzQ0MsdUJBQXVCLEVBQUUsSUFBSW5CLFFBQVEsQ0FBRSxzQkFBdUIsQ0FBQztNQUMvRG9CLGNBQWMsRUFBRSxJQUFJbEIsVUFBVSxDQUFFLElBQUlDLEtBQUssQ0FBRUUsWUFBYSxDQUFDLEVBQUU7UUFDekRnQixzQkFBc0IsRUFBRSxDQUFDO1FBQ3pCQyx1QkFBdUIsRUFBRTtNQUMzQixDQUFFLENBQUM7TUFDSEMsaUJBQWlCLEVBQUUsSUFBSXJCLFVBQVUsQ0FBRSxJQUFJQyxLQUFLLENBQUVHLGlCQUFrQixDQUFDLEVBQUU7UUFDakVlLHNCQUFzQixFQUFFLENBQUM7UUFDekJDLHVCQUF1QixFQUFFO01BQzNCLENBQUUsQ0FBQztNQUNIVCxNQUFNLEVBQUVBO0lBQ1YsQ0FDRixDQUFDO0VBQ0g7QUFDRjtBQUVBTixXQUFXLENBQUNpQixRQUFRLENBQUUsWUFBWSxFQUFFYixVQUFXLENBQUM7QUFDaEQsZUFBZUEsVUFBVSJ9