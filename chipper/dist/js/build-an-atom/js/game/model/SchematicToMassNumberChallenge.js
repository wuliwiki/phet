// Copyright 2017-2021, University of Colorado Boulder

/**
 * Challenge where the user is presented with a schematic representation of an
 * atom (which looks much like the atoms constructed on the 1st tab), and must
 * determine the mass number.
 *
 * @author John Blanco
 */

import buildAnAtom from '../../buildAnAtom.js';
import SchematicToMassNumberChallengeView from '../view/SchematicToMassNumberChallengeView.js';
import BAAGameChallenge from './BAAGameChallenge.js';
class SchematicToMassNumberChallenge extends BAAGameChallenge {
  /**
   * @param {GameModel} buildAnAtomGameModel
   * @param {NumberAtom} answerAtom
   * @param {string} challengeType
   * @param {Tandem} tandem
   */
  constructor(buildAnAtomGameModel, answerAtom, challengeType, tandem) {
    super(buildAnAtomGameModel, answerAtom, challengeType, tandem);
  }

  /**
   * Create the view needed to visual represent this challenge.
   * @param {Bounds2} layoutBounds
   * @param {Tandem} tandem
   * @returns {CountsToChargeChallengeView}
   * @public
   */
  createView(layoutBounds, tandem) {
    return new SchematicToMassNumberChallengeView(this, layoutBounds, tandem.createTandem('schematicToMassNumberChallengeView'));
  }
}
buildAnAtom.register('SchematicToMassNumberChallenge', SchematicToMassNumberChallenge);
export default SchematicToMassNumberChallenge;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJidWlsZEFuQXRvbSIsIlNjaGVtYXRpY1RvTWFzc051bWJlckNoYWxsZW5nZVZpZXciLCJCQUFHYW1lQ2hhbGxlbmdlIiwiU2NoZW1hdGljVG9NYXNzTnVtYmVyQ2hhbGxlbmdlIiwiY29uc3RydWN0b3IiLCJidWlsZEFuQXRvbUdhbWVNb2RlbCIsImFuc3dlckF0b20iLCJjaGFsbGVuZ2VUeXBlIiwidGFuZGVtIiwiY3JlYXRlVmlldyIsImxheW91dEJvdW5kcyIsImNyZWF0ZVRhbmRlbSIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiU2NoZW1hdGljVG9NYXNzTnVtYmVyQ2hhbGxlbmdlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE3LTIwMjEsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIENoYWxsZW5nZSB3aGVyZSB0aGUgdXNlciBpcyBwcmVzZW50ZWQgd2l0aCBhIHNjaGVtYXRpYyByZXByZXNlbnRhdGlvbiBvZiBhblxyXG4gKiBhdG9tICh3aGljaCBsb29rcyBtdWNoIGxpa2UgdGhlIGF0b21zIGNvbnN0cnVjdGVkIG9uIHRoZSAxc3QgdGFiKSwgYW5kIG11c3RcclxuICogZGV0ZXJtaW5lIHRoZSBtYXNzIG51bWJlci5cclxuICpcclxuICogQGF1dGhvciBKb2huIEJsYW5jb1xyXG4gKi9cclxuXHJcbmltcG9ydCBidWlsZEFuQXRvbSBmcm9tICcuLi8uLi9idWlsZEFuQXRvbS5qcyc7XHJcbmltcG9ydCBTY2hlbWF0aWNUb01hc3NOdW1iZXJDaGFsbGVuZ2VWaWV3IGZyb20gJy4uL3ZpZXcvU2NoZW1hdGljVG9NYXNzTnVtYmVyQ2hhbGxlbmdlVmlldy5qcyc7XHJcbmltcG9ydCBCQUFHYW1lQ2hhbGxlbmdlIGZyb20gJy4vQkFBR2FtZUNoYWxsZW5nZS5qcyc7XHJcblxyXG5jbGFzcyBTY2hlbWF0aWNUb01hc3NOdW1iZXJDaGFsbGVuZ2UgZXh0ZW5kcyBCQUFHYW1lQ2hhbGxlbmdlIHtcclxuXHJcbiAgLyoqXHJcbiAgICogQHBhcmFtIHtHYW1lTW9kZWx9IGJ1aWxkQW5BdG9tR2FtZU1vZGVsXHJcbiAgICogQHBhcmFtIHtOdW1iZXJBdG9tfSBhbnN3ZXJBdG9tXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IGNoYWxsZW5nZVR5cGVcclxuICAgKiBAcGFyYW0ge1RhbmRlbX0gdGFuZGVtXHJcbiAgICovXHJcbiAgY29uc3RydWN0b3IoIGJ1aWxkQW5BdG9tR2FtZU1vZGVsLCBhbnN3ZXJBdG9tLCBjaGFsbGVuZ2VUeXBlLCB0YW5kZW0gKSB7XHJcbiAgICBzdXBlciggYnVpbGRBbkF0b21HYW1lTW9kZWwsIGFuc3dlckF0b20sIGNoYWxsZW5nZVR5cGUsIHRhbmRlbSApO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQ3JlYXRlIHRoZSB2aWV3IG5lZWRlZCB0byB2aXN1YWwgcmVwcmVzZW50IHRoaXMgY2hhbGxlbmdlLlxyXG4gICAqIEBwYXJhbSB7Qm91bmRzMn0gbGF5b3V0Qm91bmRzXHJcbiAgICogQHBhcmFtIHtUYW5kZW19IHRhbmRlbVxyXG4gICAqIEByZXR1cm5zIHtDb3VudHNUb0NoYXJnZUNoYWxsZW5nZVZpZXd9XHJcbiAgICogQHB1YmxpY1xyXG4gICAqL1xyXG4gIGNyZWF0ZVZpZXcoIGxheW91dEJvdW5kcywgdGFuZGVtICkge1xyXG4gICAgcmV0dXJuIG5ldyBTY2hlbWF0aWNUb01hc3NOdW1iZXJDaGFsbGVuZ2VWaWV3KCB0aGlzLCBsYXlvdXRCb3VuZHMsIHRhbmRlbS5jcmVhdGVUYW5kZW0oICdzY2hlbWF0aWNUb01hc3NOdW1iZXJDaGFsbGVuZ2VWaWV3JyApICk7XHJcbiAgfVxyXG59XHJcblxyXG5idWlsZEFuQXRvbS5yZWdpc3RlciggJ1NjaGVtYXRpY1RvTWFzc051bWJlckNoYWxsZW5nZScsIFNjaGVtYXRpY1RvTWFzc051bWJlckNoYWxsZW5nZSApO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgU2NoZW1hdGljVG9NYXNzTnVtYmVyQ2hhbGxlbmdlOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsV0FBVyxNQUFNLHNCQUFzQjtBQUM5QyxPQUFPQyxrQ0FBa0MsTUFBTSwrQ0FBK0M7QUFDOUYsT0FBT0MsZ0JBQWdCLE1BQU0sdUJBQXVCO0FBRXBELE1BQU1DLDhCQUE4QixTQUFTRCxnQkFBZ0IsQ0FBQztFQUU1RDtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7RUFDRUUsV0FBV0EsQ0FBRUMsb0JBQW9CLEVBQUVDLFVBQVUsRUFBRUMsYUFBYSxFQUFFQyxNQUFNLEVBQUc7SUFDckUsS0FBSyxDQUFFSCxvQkFBb0IsRUFBRUMsVUFBVSxFQUFFQyxhQUFhLEVBQUVDLE1BQU8sQ0FBQztFQUNsRTs7RUFFQTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtFQUNFQyxVQUFVQSxDQUFFQyxZQUFZLEVBQUVGLE1BQU0sRUFBRztJQUNqQyxPQUFPLElBQUlQLGtDQUFrQyxDQUFFLElBQUksRUFBRVMsWUFBWSxFQUFFRixNQUFNLENBQUNHLFlBQVksQ0FBRSxvQ0FBcUMsQ0FBRSxDQUFDO0VBQ2xJO0FBQ0Y7QUFFQVgsV0FBVyxDQUFDWSxRQUFRLENBQUUsZ0NBQWdDLEVBQUVULDhCQUErQixDQUFDO0FBRXhGLGVBQWVBLDhCQUE4QiJ9