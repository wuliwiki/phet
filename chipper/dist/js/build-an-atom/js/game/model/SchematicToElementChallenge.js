// Copyright 2017-2021, University of Colorado Boulder

/**
 * Challenge where the user is presented with a schematic representation of an
 * atom (which looks much like the atoms constructed on the 1st tab), and must
 * find the represented element on a periodic table.
 *
 * @author John Blanco
 */

import buildAnAtom from '../../buildAnAtom.js';
import SchematicToElementChallengeView from '../view/SchematicToElementChallengeView.js';
import ToElementChallenge from './ToElementChallenge.js';
class SchematicToElementChallenge extends ToElementChallenge {
  /**
   * @param {GameModel} buildAnAtomGameModel
   * @param {NumberAtom} answerAtom
   * @param {string} challengeType
   * @param {Tandem} tandem
   */
  constructor(buildAnAtomGameModel, answerAtom, challengeType, tandem) {
    super(buildAnAtomGameModel, answerAtom, challengeType, tandem);
  }

  /**
   * Create the view needed to visual represent this challenge.
   * @param {Bounds2} layoutBounds
   * @param {Tandem} tandem
   * @returns {CountsToChargeChallengeView}
   * @public
   */
  createView(layoutBounds, tandem) {
    return new SchematicToElementChallengeView(this, layoutBounds, tandem.createTandem('schematicToElementChallengeView'));
  }
}
buildAnAtom.register('SchematicToElementChallenge', SchematicToElementChallenge);
export default SchematicToElementChallenge;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJidWlsZEFuQXRvbSIsIlNjaGVtYXRpY1RvRWxlbWVudENoYWxsZW5nZVZpZXciLCJUb0VsZW1lbnRDaGFsbGVuZ2UiLCJTY2hlbWF0aWNUb0VsZW1lbnRDaGFsbGVuZ2UiLCJjb25zdHJ1Y3RvciIsImJ1aWxkQW5BdG9tR2FtZU1vZGVsIiwiYW5zd2VyQXRvbSIsImNoYWxsZW5nZVR5cGUiLCJ0YW5kZW0iLCJjcmVhdGVWaWV3IiwibGF5b3V0Qm91bmRzIiwiY3JlYXRlVGFuZGVtIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJTY2hlbWF0aWNUb0VsZW1lbnRDaGFsbGVuZ2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTctMjAyMSwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogQ2hhbGxlbmdlIHdoZXJlIHRoZSB1c2VyIGlzIHByZXNlbnRlZCB3aXRoIGEgc2NoZW1hdGljIHJlcHJlc2VudGF0aW9uIG9mIGFuXHJcbiAqIGF0b20gKHdoaWNoIGxvb2tzIG11Y2ggbGlrZSB0aGUgYXRvbXMgY29uc3RydWN0ZWQgb24gdGhlIDFzdCB0YWIpLCBhbmQgbXVzdFxyXG4gKiBmaW5kIHRoZSByZXByZXNlbnRlZCBlbGVtZW50IG9uIGEgcGVyaW9kaWMgdGFibGUuXHJcbiAqXHJcbiAqIEBhdXRob3IgSm9obiBCbGFuY29cclxuICovXHJcblxyXG5pbXBvcnQgYnVpbGRBbkF0b20gZnJvbSAnLi4vLi4vYnVpbGRBbkF0b20uanMnO1xyXG5pbXBvcnQgU2NoZW1hdGljVG9FbGVtZW50Q2hhbGxlbmdlVmlldyBmcm9tICcuLi92aWV3L1NjaGVtYXRpY1RvRWxlbWVudENoYWxsZW5nZVZpZXcuanMnO1xyXG5pbXBvcnQgVG9FbGVtZW50Q2hhbGxlbmdlIGZyb20gJy4vVG9FbGVtZW50Q2hhbGxlbmdlLmpzJztcclxuXHJcbmNsYXNzIFNjaGVtYXRpY1RvRWxlbWVudENoYWxsZW5nZSBleHRlbmRzIFRvRWxlbWVudENoYWxsZW5nZSB7XHJcblxyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSB7R2FtZU1vZGVsfSBidWlsZEFuQXRvbUdhbWVNb2RlbFxyXG4gICAqIEBwYXJhbSB7TnVtYmVyQXRvbX0gYW5zd2VyQXRvbVxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBjaGFsbGVuZ2VUeXBlXHJcbiAgICogQHBhcmFtIHtUYW5kZW19IHRhbmRlbVxyXG4gICAqL1xyXG4gIGNvbnN0cnVjdG9yKCBidWlsZEFuQXRvbUdhbWVNb2RlbCwgYW5zd2VyQXRvbSwgY2hhbGxlbmdlVHlwZSwgdGFuZGVtICkge1xyXG4gICAgc3VwZXIoIGJ1aWxkQW5BdG9tR2FtZU1vZGVsLCBhbnN3ZXJBdG9tLCBjaGFsbGVuZ2VUeXBlLCB0YW5kZW0gKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIENyZWF0ZSB0aGUgdmlldyBuZWVkZWQgdG8gdmlzdWFsIHJlcHJlc2VudCB0aGlzIGNoYWxsZW5nZS5cclxuICAgKiBAcGFyYW0ge0JvdW5kczJ9IGxheW91dEJvdW5kc1xyXG4gICAqIEBwYXJhbSB7VGFuZGVtfSB0YW5kZW1cclxuICAgKiBAcmV0dXJucyB7Q291bnRzVG9DaGFyZ2VDaGFsbGVuZ2VWaWV3fVxyXG4gICAqIEBwdWJsaWNcclxuICAgKi9cclxuICBjcmVhdGVWaWV3KCBsYXlvdXRCb3VuZHMsIHRhbmRlbSApIHtcclxuICAgIHJldHVybiBuZXcgU2NoZW1hdGljVG9FbGVtZW50Q2hhbGxlbmdlVmlldyggdGhpcywgbGF5b3V0Qm91bmRzLCB0YW5kZW0uY3JlYXRlVGFuZGVtKCAnc2NoZW1hdGljVG9FbGVtZW50Q2hhbGxlbmdlVmlldycgKSApO1xyXG4gIH1cclxufVxyXG5cclxuYnVpbGRBbkF0b20ucmVnaXN0ZXIoICdTY2hlbWF0aWNUb0VsZW1lbnRDaGFsbGVuZ2UnLCBTY2hlbWF0aWNUb0VsZW1lbnRDaGFsbGVuZ2UgKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFNjaGVtYXRpY1RvRWxlbWVudENoYWxsZW5nZTsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLFdBQVcsTUFBTSxzQkFBc0I7QUFDOUMsT0FBT0MsK0JBQStCLE1BQU0sNENBQTRDO0FBQ3hGLE9BQU9DLGtCQUFrQixNQUFNLHlCQUF5QjtBQUV4RCxNQUFNQywyQkFBMkIsU0FBU0Qsa0JBQWtCLENBQUM7RUFFM0Q7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0VBQ0VFLFdBQVdBLENBQUVDLG9CQUFvQixFQUFFQyxVQUFVLEVBQUVDLGFBQWEsRUFBRUMsTUFBTSxFQUFHO0lBQ3JFLEtBQUssQ0FBRUgsb0JBQW9CLEVBQUVDLFVBQVUsRUFBRUMsYUFBYSxFQUFFQyxNQUFPLENBQUM7RUFDbEU7O0VBRUE7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7RUFDRUMsVUFBVUEsQ0FBRUMsWUFBWSxFQUFFRixNQUFNLEVBQUc7SUFDakMsT0FBTyxJQUFJUCwrQkFBK0IsQ0FBRSxJQUFJLEVBQUVTLFlBQVksRUFBRUYsTUFBTSxDQUFDRyxZQUFZLENBQUUsaUNBQWtDLENBQUUsQ0FBQztFQUM1SDtBQUNGO0FBRUFYLFdBQVcsQ0FBQ1ksUUFBUSxDQUFFLDZCQUE2QixFQUFFVCwyQkFBNEIsQ0FBQztBQUVsRixlQUFlQSwyQkFBMkIifQ==