// Copyright 2018-2023, University of Colorado Boulder

/**
 * An extension of Manipulator that adds a display of the manipulator's (x,y) coordinates.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import Manipulator from '../../../../graphing-lines/js/common/view/manipulator/Manipulator.js';
import optionize from '../../../../phet-core/js/optionize.js';
import graphingQuadratics from '../../graphingQuadratics.js';
import CoordinatesNode from './CoordinatesNode.js';

// Positions the coordinates relative to the sphere

const DEFAULT_LAYOUT_COORDINATES = (coordinates, coordinatesNode, radius) => {
  // centered above the manipulator
  coordinatesNode.centerX = 0;
  coordinatesNode.bottom = -(radius + 1);
};
export default class GQManipulator extends Manipulator {
  constructor(coordinatesProperty, coordinatesVisibleProperty, providedOptions) {
    const options = optionize()({
      // SelfOptions
      radius: 10,
      color: 'black',
      coordinatesBackgroundColor: 'black',
      coordinatesForegroundColor: 'white',
      coordinatesDecimals: 0,
      layoutCoordinates: DEFAULT_LAYOUT_COORDINATES,
      // ManipulatorOptions
      haloAlpha: 0.15,
      phetioInputEnabledPropertyInstrumented: true
    }, providedOptions);
    super(options.radius, options.color, options);

    // Determine the actual radius of the manipulator (sphere + optional halo) before adding coordinates.
    // This will be used to lay out the coordinates relative to the sphere + halo.
    const actualRadius = this.width / 2;

    // Coordinates display
    const coordinatesNode = new CoordinatesNode(coordinatesProperty, {
      backgroundColor: options.coordinatesBackgroundColor,
      foregroundColor: options.coordinatesForegroundColor,
      decimals: options.coordinatesDecimals,
      visibleProperty: coordinatesVisibleProperty,
      tandem: options.tandem.createTandem('coordinatesNode'),
      phetioDocumentation: 'coordinates displayed on this manipulator'
    });
    this.addChild(coordinatesNode);

    // Update layout
    coordinatesNode.boundsProperty.link(() => options.layoutCoordinates(coordinatesProperty.value, coordinatesNode, actualRadius));
  }
}
graphingQuadratics.register('GQManipulator', GQManipulator);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJNYW5pcHVsYXRvciIsIm9wdGlvbml6ZSIsImdyYXBoaW5nUXVhZHJhdGljcyIsIkNvb3JkaW5hdGVzTm9kZSIsIkRFRkFVTFRfTEFZT1VUX0NPT1JESU5BVEVTIiwiY29vcmRpbmF0ZXMiLCJjb29yZGluYXRlc05vZGUiLCJyYWRpdXMiLCJjZW50ZXJYIiwiYm90dG9tIiwiR1FNYW5pcHVsYXRvciIsImNvbnN0cnVjdG9yIiwiY29vcmRpbmF0ZXNQcm9wZXJ0eSIsImNvb3JkaW5hdGVzVmlzaWJsZVByb3BlcnR5IiwicHJvdmlkZWRPcHRpb25zIiwib3B0aW9ucyIsImNvbG9yIiwiY29vcmRpbmF0ZXNCYWNrZ3JvdW5kQ29sb3IiLCJjb29yZGluYXRlc0ZvcmVncm91bmRDb2xvciIsImNvb3JkaW5hdGVzRGVjaW1hbHMiLCJsYXlvdXRDb29yZGluYXRlcyIsImhhbG9BbHBoYSIsInBoZXRpb0lucHV0RW5hYmxlZFByb3BlcnR5SW5zdHJ1bWVudGVkIiwiYWN0dWFsUmFkaXVzIiwid2lkdGgiLCJiYWNrZ3JvdW5kQ29sb3IiLCJmb3JlZ3JvdW5kQ29sb3IiLCJkZWNpbWFscyIsInZpc2libGVQcm9wZXJ0eSIsInRhbmRlbSIsImNyZWF0ZVRhbmRlbSIsInBoZXRpb0RvY3VtZW50YXRpb24iLCJhZGRDaGlsZCIsImJvdW5kc1Byb3BlcnR5IiwibGluayIsInZhbHVlIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJHUU1hbmlwdWxhdG9yLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE4LTIwMjMsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIEFuIGV4dGVuc2lvbiBvZiBNYW5pcHVsYXRvciB0aGF0IGFkZHMgYSBkaXNwbGF5IG9mIHRoZSBtYW5pcHVsYXRvcidzICh4LHkpIGNvb3JkaW5hdGVzLlxyXG4gKlxyXG4gKiBAYXV0aG9yIENocmlzIE1hbGxleSAoUGl4ZWxab29tLCBJbmMuKVxyXG4gKi9cclxuXHJcbmltcG9ydCBUUmVhZE9ubHlQcm9wZXJ0eSBmcm9tICcuLi8uLi8uLi8uLi9heG9uL2pzL1RSZWFkT25seVByb3BlcnR5LmpzJztcclxuaW1wb3J0IFZlY3RvcjIgZnJvbSAnLi4vLi4vLi4vLi4vZG90L2pzL1ZlY3RvcjIuanMnO1xyXG5pbXBvcnQgTWFuaXB1bGF0b3IsIHsgTWFuaXB1bGF0b3JPcHRpb25zIH0gZnJvbSAnLi4vLi4vLi4vLi4vZ3JhcGhpbmctbGluZXMvanMvY29tbW9uL3ZpZXcvbWFuaXB1bGF0b3IvTWFuaXB1bGF0b3IuanMnO1xyXG5pbXBvcnQgb3B0aW9uaXplIGZyb20gJy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy9vcHRpb25pemUuanMnO1xyXG5pbXBvcnQgUGlja1JlcXVpcmVkIGZyb20gJy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy90eXBlcy9QaWNrUmVxdWlyZWQuanMnO1xyXG5pbXBvcnQgeyBOb2RlLCBUQ29sb3IgfSBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgZ3JhcGhpbmdRdWFkcmF0aWNzIGZyb20gJy4uLy4uL2dyYXBoaW5nUXVhZHJhdGljcy5qcyc7XHJcbmltcG9ydCBDb29yZGluYXRlc05vZGUgZnJvbSAnLi9Db29yZGluYXRlc05vZGUuanMnO1xyXG5cclxuLy8gUG9zaXRpb25zIHRoZSBjb29yZGluYXRlcyByZWxhdGl2ZSB0byB0aGUgc3BoZXJlXHJcbnR5cGUgTGF5b3V0Q29vcmRpbmF0ZXNGdW5jdGlvbiA9ICggY29vcmRpbmF0ZXM6IFZlY3RvcjIgfCBudWxsLCBjb29yZGluYXRlc05vZGU6IE5vZGUsIHJhZGl1czogbnVtYmVyICkgPT4gdm9pZDtcclxuXHJcbmNvbnN0IERFRkFVTFRfTEFZT1VUX0NPT1JESU5BVEVTOiBMYXlvdXRDb29yZGluYXRlc0Z1bmN0aW9uID0gKCBjb29yZGluYXRlcywgY29vcmRpbmF0ZXNOb2RlLCByYWRpdXMgKSA9PiB7XHJcbiAgLy8gY2VudGVyZWQgYWJvdmUgdGhlIG1hbmlwdWxhdG9yXHJcbiAgY29vcmRpbmF0ZXNOb2RlLmNlbnRlclggPSAwO1xyXG4gIGNvb3JkaW5hdGVzTm9kZS5ib3R0b20gPSAtKCByYWRpdXMgKyAxICk7XHJcbn07XHJcblxyXG50eXBlIFNlbGZPcHRpb25zID0ge1xyXG5cclxuICAvLyBhcmd1bWVudHMgdG8gTWFuaXB1bGF0b3IgY29uc3RydWN0b3JcclxuICByYWRpdXM/OiBudW1iZXI7XHJcbiAgY29sb3I/OiBUQ29sb3I7XHJcblxyXG4gIC8vIG9wdGlvbnMgcGFzc2VkIHRvIENvb3JkaW5hdGVzTm9kZVxyXG4gIGNvb3JkaW5hdGVzQmFja2dyb3VuZENvbG9yPzogVENvbG9yO1xyXG4gIGNvb3JkaW5hdGVzRm9yZWdyb3VuZENvbG9yPzogVENvbG9yO1xyXG4gIGNvb3JkaW5hdGVzRGVjaW1hbHM/OiBudW1iZXI7XHJcblxyXG4gIC8vIFBvc2l0aW9ucyB0aGUgY29vcmRpbmF0ZXMgcmVsYXRpdmUgdG8gdGhlIHNwaGVyZVxyXG4gIGxheW91dENvb3JkaW5hdGVzPzogTGF5b3V0Q29vcmRpbmF0ZXNGdW5jdGlvbjtcclxufTtcclxuXHJcbmV4cG9ydCB0eXBlIEdRTWFuaXB1bGF0b3JPcHRpb25zID0gU2VsZk9wdGlvbnMgJiBNYW5pcHVsYXRvck9wdGlvbnMgJiBQaWNrUmVxdWlyZWQ8TWFuaXB1bGF0b3JPcHRpb25zLCAndGFuZGVtJz47XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBHUU1hbmlwdWxhdG9yIGV4dGVuZHMgTWFuaXB1bGF0b3Ige1xyXG5cclxuICBwcm90ZWN0ZWQgY29uc3RydWN0b3IoIGNvb3JkaW5hdGVzUHJvcGVydHk6IFRSZWFkT25seVByb3BlcnR5PFZlY3RvcjIgfCBudWxsPixcclxuICAgICAgICAgICAgICAgICAgICAgICAgIGNvb3JkaW5hdGVzVmlzaWJsZVByb3BlcnR5OiBUUmVhZE9ubHlQcm9wZXJ0eTxib29sZWFuPixcclxuICAgICAgICAgICAgICAgICAgICAgICAgIHByb3ZpZGVkT3B0aW9uczogR1FNYW5pcHVsYXRvck9wdGlvbnMgKSB7XHJcblxyXG4gICAgY29uc3Qgb3B0aW9ucyA9IG9wdGlvbml6ZTxHUU1hbmlwdWxhdG9yT3B0aW9ucywgU2VsZk9wdGlvbnMsIE1hbmlwdWxhdG9yT3B0aW9ucz4oKSgge1xyXG5cclxuICAgICAgLy8gU2VsZk9wdGlvbnNcclxuICAgICAgcmFkaXVzOiAxMCxcclxuICAgICAgY29sb3I6ICdibGFjaycsXHJcbiAgICAgIGNvb3JkaW5hdGVzQmFja2dyb3VuZENvbG9yOiAnYmxhY2snLFxyXG4gICAgICBjb29yZGluYXRlc0ZvcmVncm91bmRDb2xvcjogJ3doaXRlJyxcclxuICAgICAgY29vcmRpbmF0ZXNEZWNpbWFsczogMCxcclxuICAgICAgbGF5b3V0Q29vcmRpbmF0ZXM6IERFRkFVTFRfTEFZT1VUX0NPT1JESU5BVEVTLFxyXG5cclxuICAgICAgLy8gTWFuaXB1bGF0b3JPcHRpb25zXHJcbiAgICAgIGhhbG9BbHBoYTogMC4xNSxcclxuICAgICAgcGhldGlvSW5wdXRFbmFibGVkUHJvcGVydHlJbnN0cnVtZW50ZWQ6IHRydWVcclxuICAgIH0sIHByb3ZpZGVkT3B0aW9ucyApO1xyXG5cclxuICAgIHN1cGVyKCBvcHRpb25zLnJhZGl1cywgb3B0aW9ucy5jb2xvciwgb3B0aW9ucyApO1xyXG5cclxuICAgIC8vIERldGVybWluZSB0aGUgYWN0dWFsIHJhZGl1cyBvZiB0aGUgbWFuaXB1bGF0b3IgKHNwaGVyZSArIG9wdGlvbmFsIGhhbG8pIGJlZm9yZSBhZGRpbmcgY29vcmRpbmF0ZXMuXHJcbiAgICAvLyBUaGlzIHdpbGwgYmUgdXNlZCB0byBsYXkgb3V0IHRoZSBjb29yZGluYXRlcyByZWxhdGl2ZSB0byB0aGUgc3BoZXJlICsgaGFsby5cclxuICAgIGNvbnN0IGFjdHVhbFJhZGl1cyA9IHRoaXMud2lkdGggLyAyO1xyXG5cclxuICAgIC8vIENvb3JkaW5hdGVzIGRpc3BsYXlcclxuICAgIGNvbnN0IGNvb3JkaW5hdGVzTm9kZSA9IG5ldyBDb29yZGluYXRlc05vZGUoIGNvb3JkaW5hdGVzUHJvcGVydHksIHtcclxuICAgICAgYmFja2dyb3VuZENvbG9yOiBvcHRpb25zLmNvb3JkaW5hdGVzQmFja2dyb3VuZENvbG9yLFxyXG4gICAgICBmb3JlZ3JvdW5kQ29sb3I6IG9wdGlvbnMuY29vcmRpbmF0ZXNGb3JlZ3JvdW5kQ29sb3IsXHJcbiAgICAgIGRlY2ltYWxzOiBvcHRpb25zLmNvb3JkaW5hdGVzRGVjaW1hbHMsXHJcbiAgICAgIHZpc2libGVQcm9wZXJ0eTogY29vcmRpbmF0ZXNWaXNpYmxlUHJvcGVydHksXHJcbiAgICAgIHRhbmRlbTogb3B0aW9ucy50YW5kZW0uY3JlYXRlVGFuZGVtKCAnY29vcmRpbmF0ZXNOb2RlJyApLFxyXG4gICAgICBwaGV0aW9Eb2N1bWVudGF0aW9uOiAnY29vcmRpbmF0ZXMgZGlzcGxheWVkIG9uIHRoaXMgbWFuaXB1bGF0b3InXHJcbiAgICB9ICk7XHJcbiAgICB0aGlzLmFkZENoaWxkKCBjb29yZGluYXRlc05vZGUgKTtcclxuXHJcbiAgICAvLyBVcGRhdGUgbGF5b3V0XHJcbiAgICBjb29yZGluYXRlc05vZGUuYm91bmRzUHJvcGVydHkubGluayggKCkgPT5cclxuICAgICAgb3B0aW9ucy5sYXlvdXRDb29yZGluYXRlcyggY29vcmRpbmF0ZXNQcm9wZXJ0eS52YWx1ZSwgY29vcmRpbmF0ZXNOb2RlLCBhY3R1YWxSYWRpdXMgKSApO1xyXG4gIH1cclxufVxyXG5cclxuZ3JhcGhpbmdRdWFkcmF0aWNzLnJlZ2lzdGVyKCAnR1FNYW5pcHVsYXRvcicsIEdRTWFuaXB1bGF0b3IgKTsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBSUEsT0FBT0EsV0FBVyxNQUE4QixzRUFBc0U7QUFDdEgsT0FBT0MsU0FBUyxNQUFNLHVDQUF1QztBQUc3RCxPQUFPQyxrQkFBa0IsTUFBTSw2QkFBNkI7QUFDNUQsT0FBT0MsZUFBZSxNQUFNLHNCQUFzQjs7QUFFbEQ7O0FBR0EsTUFBTUMsMEJBQXFELEdBQUdBLENBQUVDLFdBQVcsRUFBRUMsZUFBZSxFQUFFQyxNQUFNLEtBQU07RUFDeEc7RUFDQUQsZUFBZSxDQUFDRSxPQUFPLEdBQUcsQ0FBQztFQUMzQkYsZUFBZSxDQUFDRyxNQUFNLEdBQUcsRUFBR0YsTUFBTSxHQUFHLENBQUMsQ0FBRTtBQUMxQyxDQUFDO0FBbUJELGVBQWUsTUFBTUcsYUFBYSxTQUFTVixXQUFXLENBQUM7RUFFM0NXLFdBQVdBLENBQUVDLG1CQUFzRCxFQUN0REMsMEJBQXNELEVBQ3REQyxlQUFxQyxFQUFHO0lBRTdELE1BQU1DLE9BQU8sR0FBR2QsU0FBUyxDQUF3RCxDQUFDLENBQUU7TUFFbEY7TUFDQU0sTUFBTSxFQUFFLEVBQUU7TUFDVlMsS0FBSyxFQUFFLE9BQU87TUFDZEMsMEJBQTBCLEVBQUUsT0FBTztNQUNuQ0MsMEJBQTBCLEVBQUUsT0FBTztNQUNuQ0MsbUJBQW1CLEVBQUUsQ0FBQztNQUN0QkMsaUJBQWlCLEVBQUVoQiwwQkFBMEI7TUFFN0M7TUFDQWlCLFNBQVMsRUFBRSxJQUFJO01BQ2ZDLHNDQUFzQyxFQUFFO0lBQzFDLENBQUMsRUFBRVIsZUFBZ0IsQ0FBQztJQUVwQixLQUFLLENBQUVDLE9BQU8sQ0FBQ1IsTUFBTSxFQUFFUSxPQUFPLENBQUNDLEtBQUssRUFBRUQsT0FBUSxDQUFDOztJQUUvQztJQUNBO0lBQ0EsTUFBTVEsWUFBWSxHQUFHLElBQUksQ0FBQ0MsS0FBSyxHQUFHLENBQUM7O0lBRW5DO0lBQ0EsTUFBTWxCLGVBQWUsR0FBRyxJQUFJSCxlQUFlLENBQUVTLG1CQUFtQixFQUFFO01BQ2hFYSxlQUFlLEVBQUVWLE9BQU8sQ0FBQ0UsMEJBQTBCO01BQ25EUyxlQUFlLEVBQUVYLE9BQU8sQ0FBQ0csMEJBQTBCO01BQ25EUyxRQUFRLEVBQUVaLE9BQU8sQ0FBQ0ksbUJBQW1CO01BQ3JDUyxlQUFlLEVBQUVmLDBCQUEwQjtNQUMzQ2dCLE1BQU0sRUFBRWQsT0FBTyxDQUFDYyxNQUFNLENBQUNDLFlBQVksQ0FBRSxpQkFBa0IsQ0FBQztNQUN4REMsbUJBQW1CLEVBQUU7SUFDdkIsQ0FBRSxDQUFDO0lBQ0gsSUFBSSxDQUFDQyxRQUFRLENBQUUxQixlQUFnQixDQUFDOztJQUVoQztJQUNBQSxlQUFlLENBQUMyQixjQUFjLENBQUNDLElBQUksQ0FBRSxNQUNuQ25CLE9BQU8sQ0FBQ0ssaUJBQWlCLENBQUVSLG1CQUFtQixDQUFDdUIsS0FBSyxFQUFFN0IsZUFBZSxFQUFFaUIsWUFBYSxDQUFFLENBQUM7RUFDM0Y7QUFDRjtBQUVBckIsa0JBQWtCLENBQUNrQyxRQUFRLENBQUUsZUFBZSxFQUFFMUIsYUFBYyxDQUFDIn0=