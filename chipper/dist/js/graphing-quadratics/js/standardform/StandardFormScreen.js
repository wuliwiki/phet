// Copyright 2014-2023, University of Colorado Boulder

/**
 * The 'Standard Form' screen.
 *
 * @author Andrea Lin
 * @author Chris Malley (PixelZoom, Inc.)
 */

import Property from '../../../axon/js/Property.js';
import Screen from '../../../joist/js/Screen.js';
import GQColors from '../common/GQColors.js';
import GQScreenIconFactory from '../common/view/GQScreenIconFactory.js';
import graphingQuadratics from '../graphingQuadratics.js';
import GraphingQuadraticsStrings from '../GraphingQuadraticsStrings.js';
import StandardFormModel from './model/StandardFormModel.js';
import StandardFormScreenView from './view/StandardFormScreenView.js';
export default class StandardFormScreen extends Screen {
  constructor(tandem) {
    const options = {
      // ScreenOptions
      name: GraphingQuadraticsStrings.screen.standardFormStringProperty,
      backgroundColorProperty: new Property(GQColors.SCREEN_BACKGROUND),
      homeScreenIcon: GQScreenIconFactory.createStandardFormScreenIcon(),
      // Workaround for https://github.com/phetsims/joist/issues/532, which will not be fixed.
      navigationBarIcon: GQScreenIconFactory.createStandardFormScreenIcon(),
      // phet-io
      tandem: tandem
    };
    super(() => new StandardFormModel(tandem.createTandem('model')), model => new StandardFormScreenView(model, tandem.createTandem('view')), options);
  }
}
graphingQuadratics.register('StandardFormScreen', StandardFormScreen);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQcm9wZXJ0eSIsIlNjcmVlbiIsIkdRQ29sb3JzIiwiR1FTY3JlZW5JY29uRmFjdG9yeSIsImdyYXBoaW5nUXVhZHJhdGljcyIsIkdyYXBoaW5nUXVhZHJhdGljc1N0cmluZ3MiLCJTdGFuZGFyZEZvcm1Nb2RlbCIsIlN0YW5kYXJkRm9ybVNjcmVlblZpZXciLCJTdGFuZGFyZEZvcm1TY3JlZW4iLCJjb25zdHJ1Y3RvciIsInRhbmRlbSIsIm9wdGlvbnMiLCJuYW1lIiwic2NyZWVuIiwic3RhbmRhcmRGb3JtU3RyaW5nUHJvcGVydHkiLCJiYWNrZ3JvdW5kQ29sb3JQcm9wZXJ0eSIsIlNDUkVFTl9CQUNLR1JPVU5EIiwiaG9tZVNjcmVlbkljb24iLCJjcmVhdGVTdGFuZGFyZEZvcm1TY3JlZW5JY29uIiwibmF2aWdhdGlvbkJhckljb24iLCJjcmVhdGVUYW5kZW0iLCJtb2RlbCIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiU3RhbmRhcmRGb3JtU2NyZWVuLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE0LTIwMjMsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIFRoZSAnU3RhbmRhcmQgRm9ybScgc2NyZWVuLlxyXG4gKlxyXG4gKiBAYXV0aG9yIEFuZHJlYSBMaW5cclxuICogQGF1dGhvciBDaHJpcyBNYWxsZXkgKFBpeGVsWm9vbSwgSW5jLilcclxuICovXHJcblxyXG5pbXBvcnQgUHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vYXhvbi9qcy9Qcm9wZXJ0eS5qcyc7XHJcbmltcG9ydCBTY3JlZW4gZnJvbSAnLi4vLi4vLi4vam9pc3QvanMvU2NyZWVuLmpzJztcclxuaW1wb3J0IFRhbmRlbSBmcm9tICcuLi8uLi8uLi90YW5kZW0vanMvVGFuZGVtLmpzJztcclxuaW1wb3J0IEdRQ29sb3JzIGZyb20gJy4uL2NvbW1vbi9HUUNvbG9ycy5qcyc7XHJcbmltcG9ydCBHUVNjcmVlbkljb25GYWN0b3J5IGZyb20gJy4uL2NvbW1vbi92aWV3L0dRU2NyZWVuSWNvbkZhY3RvcnkuanMnO1xyXG5pbXBvcnQgZ3JhcGhpbmdRdWFkcmF0aWNzIGZyb20gJy4uL2dyYXBoaW5nUXVhZHJhdGljcy5qcyc7XHJcbmltcG9ydCBHcmFwaGluZ1F1YWRyYXRpY3NTdHJpbmdzIGZyb20gJy4uL0dyYXBoaW5nUXVhZHJhdGljc1N0cmluZ3MuanMnO1xyXG5pbXBvcnQgU3RhbmRhcmRGb3JtTW9kZWwgZnJvbSAnLi9tb2RlbC9TdGFuZGFyZEZvcm1Nb2RlbC5qcyc7XHJcbmltcG9ydCBTdGFuZGFyZEZvcm1TY3JlZW5WaWV3IGZyb20gJy4vdmlldy9TdGFuZGFyZEZvcm1TY3JlZW5WaWV3LmpzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFN0YW5kYXJkRm9ybVNjcmVlbiBleHRlbmRzIFNjcmVlbjxTdGFuZGFyZEZvcm1Nb2RlbCwgU3RhbmRhcmRGb3JtU2NyZWVuVmlldz4ge1xyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoIHRhbmRlbTogVGFuZGVtICkge1xyXG5cclxuICAgIGNvbnN0IG9wdGlvbnMgPSB7XHJcblxyXG4gICAgICAvLyBTY3JlZW5PcHRpb25zXHJcbiAgICAgIG5hbWU6IEdyYXBoaW5nUXVhZHJhdGljc1N0cmluZ3Muc2NyZWVuLnN0YW5kYXJkRm9ybVN0cmluZ1Byb3BlcnR5LFxyXG4gICAgICBiYWNrZ3JvdW5kQ29sb3JQcm9wZXJ0eTogbmV3IFByb3BlcnR5KCBHUUNvbG9ycy5TQ1JFRU5fQkFDS0dST1VORCApLFxyXG4gICAgICBob21lU2NyZWVuSWNvbjogR1FTY3JlZW5JY29uRmFjdG9yeS5jcmVhdGVTdGFuZGFyZEZvcm1TY3JlZW5JY29uKCksXHJcblxyXG4gICAgICAvLyBXb3JrYXJvdW5kIGZvciBodHRwczovL2dpdGh1Yi5jb20vcGhldHNpbXMvam9pc3QvaXNzdWVzLzUzMiwgd2hpY2ggd2lsbCBub3QgYmUgZml4ZWQuXHJcbiAgICAgIG5hdmlnYXRpb25CYXJJY29uOiBHUVNjcmVlbkljb25GYWN0b3J5LmNyZWF0ZVN0YW5kYXJkRm9ybVNjcmVlbkljb24oKSxcclxuXHJcbiAgICAgIC8vIHBoZXQtaW9cclxuICAgICAgdGFuZGVtOiB0YW5kZW1cclxuICAgIH07XHJcblxyXG4gICAgc3VwZXIoXHJcbiAgICAgICgpID0+IG5ldyBTdGFuZGFyZEZvcm1Nb2RlbCggdGFuZGVtLmNyZWF0ZVRhbmRlbSggJ21vZGVsJyApICksXHJcbiAgICAgIG1vZGVsID0+IG5ldyBTdGFuZGFyZEZvcm1TY3JlZW5WaWV3KCBtb2RlbCwgdGFuZGVtLmNyZWF0ZVRhbmRlbSggJ3ZpZXcnICkgKSxcclxuICAgICAgb3B0aW9uc1xyXG4gICAgKTtcclxuICB9XHJcbn1cclxuXHJcbmdyYXBoaW5nUXVhZHJhdGljcy5yZWdpc3RlciggJ1N0YW5kYXJkRm9ybVNjcmVlbicsIFN0YW5kYXJkRm9ybVNjcmVlbiApOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLFFBQVEsTUFBTSw4QkFBOEI7QUFDbkQsT0FBT0MsTUFBTSxNQUFNLDZCQUE2QjtBQUVoRCxPQUFPQyxRQUFRLE1BQU0sdUJBQXVCO0FBQzVDLE9BQU9DLG1CQUFtQixNQUFNLHVDQUF1QztBQUN2RSxPQUFPQyxrQkFBa0IsTUFBTSwwQkFBMEI7QUFDekQsT0FBT0MseUJBQXlCLE1BQU0saUNBQWlDO0FBQ3ZFLE9BQU9DLGlCQUFpQixNQUFNLDhCQUE4QjtBQUM1RCxPQUFPQyxzQkFBc0IsTUFBTSxrQ0FBa0M7QUFFckUsZUFBZSxNQUFNQyxrQkFBa0IsU0FBU1AsTUFBTSxDQUE0QztFQUV6RlEsV0FBV0EsQ0FBRUMsTUFBYyxFQUFHO0lBRW5DLE1BQU1DLE9BQU8sR0FBRztNQUVkO01BQ0FDLElBQUksRUFBRVAseUJBQXlCLENBQUNRLE1BQU0sQ0FBQ0MsMEJBQTBCO01BQ2pFQyx1QkFBdUIsRUFBRSxJQUFJZixRQUFRLENBQUVFLFFBQVEsQ0FBQ2MsaUJBQWtCLENBQUM7TUFDbkVDLGNBQWMsRUFBRWQsbUJBQW1CLENBQUNlLDRCQUE0QixDQUFDLENBQUM7TUFFbEU7TUFDQUMsaUJBQWlCLEVBQUVoQixtQkFBbUIsQ0FBQ2UsNEJBQTRCLENBQUMsQ0FBQztNQUVyRTtNQUNBUixNQUFNLEVBQUVBO0lBQ1YsQ0FBQztJQUVELEtBQUssQ0FDSCxNQUFNLElBQUlKLGlCQUFpQixDQUFFSSxNQUFNLENBQUNVLFlBQVksQ0FBRSxPQUFRLENBQUUsQ0FBQyxFQUM3REMsS0FBSyxJQUFJLElBQUlkLHNCQUFzQixDQUFFYyxLQUFLLEVBQUVYLE1BQU0sQ0FBQ1UsWUFBWSxDQUFFLE1BQU8sQ0FBRSxDQUFDLEVBQzNFVCxPQUNGLENBQUM7RUFDSDtBQUNGO0FBRUFQLGtCQUFrQixDQUFDa0IsUUFBUSxDQUFFLG9CQUFvQixFQUFFZCxrQkFBbUIsQ0FBQyJ9