// Copyright 2018-2023, University of Colorado Boulder

/**
 * Panel that contains controls for various features related to the graph on the 'Vertex Form' screen.
 *
 * @author Andrea Lin
 * @author Chris Malley (PixelZoom, Inc.)
 */

import { combineOptions } from '../../../../phet-core/js/optionize.js';
import { HSeparator, VBox } from '../../../../scenery/js/imports.js';
import Panel from '../../../../sun/js/Panel.js';
import GQColors from '../../common/GQColors.js';
import GQConstants from '../../common/GQConstants.js';
import GQCheckbox from '../../common/view/GQCheckbox.js';
import graphingQuadratics from '../../graphingQuadratics.js';
export default class VertexFormGraphControlPanel extends Panel {
  constructor(viewProperties, tandem) {
    const options = combineOptions({}, GQConstants.PANEL_OPTIONS, {
      tandem: tandem,
      phetioDocumentation: 'panel that contains controls related to the graph'
    });
    const axisOfSymmetryVisibleProperty = viewProperties.axisOfSymmetryVisibleProperty;
    assert && assert(axisOfSymmetryVisibleProperty);
    const coordinatesVisibleProperty = viewProperties.coordinatesVisibleProperty;
    assert && assert(coordinatesVisibleProperty);
    const vertexVisibleProperty = viewProperties.vertexVisibleProperty;
    assert && assert(vertexVisibleProperty);

    // checkboxes
    const vertexCheckbox = GQCheckbox.createVertexManipulatorCheckbox(vertexVisibleProperty, tandem.createTandem('vertexCheckbox'));
    const axisOfSymmetryCheckbox = GQCheckbox.createAxisOfSymmetryCheckbox(axisOfSymmetryVisibleProperty, tandem.createTandem('axisOfSymmetryCheckbox'));
    const equationsCheckbox = GQCheckbox.createEquationsCheckbox(viewProperties.equationsVisibleProperty, tandem.createTandem('equationsCheckbox'));
    const coordinatesCheckbox = GQCheckbox.createCoordinatesCheckbox(coordinatesVisibleProperty, tandem.createTandem('coordinatesCheckbox'));

    // vertical layout
    const contentNode = new VBox({
      align: 'left',
      spacing: GQConstants.CHECKBOXES_Y_SPACING,
      children: [vertexCheckbox, axisOfSymmetryCheckbox, new HSeparator({
        stroke: GQColors.SEPARATOR
      }), equationsCheckbox, coordinatesCheckbox]
    });
    super(contentNode, options);
  }
}
graphingQuadratics.register('VertexFormGraphControlPanel', VertexFormGraphControlPanel);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb21iaW5lT3B0aW9ucyIsIkhTZXBhcmF0b3IiLCJWQm94IiwiUGFuZWwiLCJHUUNvbG9ycyIsIkdRQ29uc3RhbnRzIiwiR1FDaGVja2JveCIsImdyYXBoaW5nUXVhZHJhdGljcyIsIlZlcnRleEZvcm1HcmFwaENvbnRyb2xQYW5lbCIsImNvbnN0cnVjdG9yIiwidmlld1Byb3BlcnRpZXMiLCJ0YW5kZW0iLCJvcHRpb25zIiwiUEFORUxfT1BUSU9OUyIsInBoZXRpb0RvY3VtZW50YXRpb24iLCJheGlzT2ZTeW1tZXRyeVZpc2libGVQcm9wZXJ0eSIsImFzc2VydCIsImNvb3JkaW5hdGVzVmlzaWJsZVByb3BlcnR5IiwidmVydGV4VmlzaWJsZVByb3BlcnR5IiwidmVydGV4Q2hlY2tib3giLCJjcmVhdGVWZXJ0ZXhNYW5pcHVsYXRvckNoZWNrYm94IiwiY3JlYXRlVGFuZGVtIiwiYXhpc09mU3ltbWV0cnlDaGVja2JveCIsImNyZWF0ZUF4aXNPZlN5bW1ldHJ5Q2hlY2tib3giLCJlcXVhdGlvbnNDaGVja2JveCIsImNyZWF0ZUVxdWF0aW9uc0NoZWNrYm94IiwiZXF1YXRpb25zVmlzaWJsZVByb3BlcnR5IiwiY29vcmRpbmF0ZXNDaGVja2JveCIsImNyZWF0ZUNvb3JkaW5hdGVzQ2hlY2tib3giLCJjb250ZW50Tm9kZSIsImFsaWduIiwic3BhY2luZyIsIkNIRUNLQk9YRVNfWV9TUEFDSU5HIiwiY2hpbGRyZW4iLCJzdHJva2UiLCJTRVBBUkFUT1IiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIlZlcnRleEZvcm1HcmFwaENvbnRyb2xQYW5lbC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxOC0yMDIzLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBQYW5lbCB0aGF0IGNvbnRhaW5zIGNvbnRyb2xzIGZvciB2YXJpb3VzIGZlYXR1cmVzIHJlbGF0ZWQgdG8gdGhlIGdyYXBoIG9uIHRoZSAnVmVydGV4IEZvcm0nIHNjcmVlbi5cclxuICpcclxuICogQGF1dGhvciBBbmRyZWEgTGluXHJcbiAqIEBhdXRob3IgQ2hyaXMgTWFsbGV5IChQaXhlbFpvb20sIEluYy4pXHJcbiAqL1xyXG5cclxuaW1wb3J0IHsgY29tYmluZU9wdGlvbnMgfSBmcm9tICcuLi8uLi8uLi8uLi9waGV0LWNvcmUvanMvb3B0aW9uaXplLmpzJztcclxuaW1wb3J0IHsgSFNlcGFyYXRvciwgVkJveCB9IGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XHJcbmltcG9ydCBQYW5lbCwgeyBQYW5lbE9wdGlvbnMgfSBmcm9tICcuLi8uLi8uLi8uLi9zdW4vanMvUGFuZWwuanMnO1xyXG5pbXBvcnQgVGFuZGVtIGZyb20gJy4uLy4uLy4uLy4uL3RhbmRlbS9qcy9UYW5kZW0uanMnO1xyXG5pbXBvcnQgR1FDb2xvcnMgZnJvbSAnLi4vLi4vY29tbW9uL0dRQ29sb3JzLmpzJztcclxuaW1wb3J0IEdRQ29uc3RhbnRzIGZyb20gJy4uLy4uL2NvbW1vbi9HUUNvbnN0YW50cy5qcyc7XHJcbmltcG9ydCBHUUNoZWNrYm94IGZyb20gJy4uLy4uL2NvbW1vbi92aWV3L0dRQ2hlY2tib3guanMnO1xyXG5pbXBvcnQgZ3JhcGhpbmdRdWFkcmF0aWNzIGZyb20gJy4uLy4uL2dyYXBoaW5nUXVhZHJhdGljcy5qcyc7XHJcbmltcG9ydCBWZXJ0ZXhGb3JtVmlld1Byb3BlcnRpZXMgZnJvbSAnLi9WZXJ0ZXhGb3JtVmlld1Byb3BlcnRpZXMuanMnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVmVydGV4Rm9ybUdyYXBoQ29udHJvbFBhbmVsIGV4dGVuZHMgUGFuZWwge1xyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoIHZpZXdQcm9wZXJ0aWVzOiBWZXJ0ZXhGb3JtVmlld1Byb3BlcnRpZXMsIHRhbmRlbTogVGFuZGVtICkge1xyXG5cclxuICAgIGNvbnN0IG9wdGlvbnMgPSBjb21iaW5lT3B0aW9uczxQYW5lbE9wdGlvbnM+KCB7fSwgR1FDb25zdGFudHMuUEFORUxfT1BUSU9OUywge1xyXG4gICAgICB0YW5kZW06IHRhbmRlbSxcclxuICAgICAgcGhldGlvRG9jdW1lbnRhdGlvbjogJ3BhbmVsIHRoYXQgY29udGFpbnMgY29udHJvbHMgcmVsYXRlZCB0byB0aGUgZ3JhcGgnXHJcbiAgICB9ICk7XHJcblxyXG4gICAgY29uc3QgYXhpc09mU3ltbWV0cnlWaXNpYmxlUHJvcGVydHkgPSB2aWV3UHJvcGVydGllcy5heGlzT2ZTeW1tZXRyeVZpc2libGVQcm9wZXJ0eSE7XHJcbiAgICBhc3NlcnQgJiYgYXNzZXJ0KCBheGlzT2ZTeW1tZXRyeVZpc2libGVQcm9wZXJ0eSApO1xyXG4gICAgY29uc3QgY29vcmRpbmF0ZXNWaXNpYmxlUHJvcGVydHkgPSB2aWV3UHJvcGVydGllcy5jb29yZGluYXRlc1Zpc2libGVQcm9wZXJ0eSE7XHJcbiAgICBhc3NlcnQgJiYgYXNzZXJ0KCBjb29yZGluYXRlc1Zpc2libGVQcm9wZXJ0eSApO1xyXG4gICAgY29uc3QgdmVydGV4VmlzaWJsZVByb3BlcnR5ID0gdmlld1Byb3BlcnRpZXMudmVydGV4VmlzaWJsZVByb3BlcnR5ITtcclxuICAgIGFzc2VydCAmJiBhc3NlcnQoIHZlcnRleFZpc2libGVQcm9wZXJ0eSApO1xyXG5cclxuICAgIC8vIGNoZWNrYm94ZXNcclxuICAgIGNvbnN0IHZlcnRleENoZWNrYm94ID0gR1FDaGVja2JveC5jcmVhdGVWZXJ0ZXhNYW5pcHVsYXRvckNoZWNrYm94KCB2ZXJ0ZXhWaXNpYmxlUHJvcGVydHksXHJcbiAgICAgIHRhbmRlbS5jcmVhdGVUYW5kZW0oICd2ZXJ0ZXhDaGVja2JveCcgKSApO1xyXG4gICAgY29uc3QgYXhpc09mU3ltbWV0cnlDaGVja2JveCA9IEdRQ2hlY2tib3guY3JlYXRlQXhpc09mU3ltbWV0cnlDaGVja2JveChcclxuICAgICAgYXhpc09mU3ltbWV0cnlWaXNpYmxlUHJvcGVydHksIHRhbmRlbS5jcmVhdGVUYW5kZW0oICdheGlzT2ZTeW1tZXRyeUNoZWNrYm94JyApICk7XHJcbiAgICBjb25zdCBlcXVhdGlvbnNDaGVja2JveCA9IEdRQ2hlY2tib3guY3JlYXRlRXF1YXRpb25zQ2hlY2tib3goIHZpZXdQcm9wZXJ0aWVzLmVxdWF0aW9uc1Zpc2libGVQcm9wZXJ0eSxcclxuICAgICAgdGFuZGVtLmNyZWF0ZVRhbmRlbSggJ2VxdWF0aW9uc0NoZWNrYm94JyApICk7XHJcbiAgICBjb25zdCBjb29yZGluYXRlc0NoZWNrYm94ID0gR1FDaGVja2JveC5jcmVhdGVDb29yZGluYXRlc0NoZWNrYm94KCBjb29yZGluYXRlc1Zpc2libGVQcm9wZXJ0eSxcclxuICAgICAgdGFuZGVtLmNyZWF0ZVRhbmRlbSggJ2Nvb3JkaW5hdGVzQ2hlY2tib3gnICkgKTtcclxuXHJcbiAgICAvLyB2ZXJ0aWNhbCBsYXlvdXRcclxuICAgIGNvbnN0IGNvbnRlbnROb2RlID0gbmV3IFZCb3goIHtcclxuICAgICAgYWxpZ246ICdsZWZ0JyxcclxuICAgICAgc3BhY2luZzogR1FDb25zdGFudHMuQ0hFQ0tCT1hFU19ZX1NQQUNJTkcsXHJcbiAgICAgIGNoaWxkcmVuOiBbXHJcbiAgICAgICAgdmVydGV4Q2hlY2tib3gsXHJcbiAgICAgICAgYXhpc09mU3ltbWV0cnlDaGVja2JveCxcclxuICAgICAgICBuZXcgSFNlcGFyYXRvciggeyBzdHJva2U6IEdRQ29sb3JzLlNFUEFSQVRPUiB9ICksXHJcbiAgICAgICAgZXF1YXRpb25zQ2hlY2tib3gsXHJcbiAgICAgICAgY29vcmRpbmF0ZXNDaGVja2JveFxyXG4gICAgICBdXHJcbiAgICB9ICk7XHJcblxyXG4gICAgc3VwZXIoIGNvbnRlbnROb2RlLCBvcHRpb25zICk7XHJcbiAgfVxyXG59XHJcblxyXG5ncmFwaGluZ1F1YWRyYXRpY3MucmVnaXN0ZXIoICdWZXJ0ZXhGb3JtR3JhcGhDb250cm9sUGFuZWwnLCBWZXJ0ZXhGb3JtR3JhcGhDb250cm9sUGFuZWwgKTsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxTQUFTQSxjQUFjLFFBQVEsdUNBQXVDO0FBQ3RFLFNBQVNDLFVBQVUsRUFBRUMsSUFBSSxRQUFRLG1DQUFtQztBQUNwRSxPQUFPQyxLQUFLLE1BQXdCLDZCQUE2QjtBQUVqRSxPQUFPQyxRQUFRLE1BQU0sMEJBQTBCO0FBQy9DLE9BQU9DLFdBQVcsTUFBTSw2QkFBNkI7QUFDckQsT0FBT0MsVUFBVSxNQUFNLGlDQUFpQztBQUN4RCxPQUFPQyxrQkFBa0IsTUFBTSw2QkFBNkI7QUFHNUQsZUFBZSxNQUFNQywyQkFBMkIsU0FBU0wsS0FBSyxDQUFDO0VBRXRETSxXQUFXQSxDQUFFQyxjQUF3QyxFQUFFQyxNQUFjLEVBQUc7SUFFN0UsTUFBTUMsT0FBTyxHQUFHWixjQUFjLENBQWdCLENBQUMsQ0FBQyxFQUFFSyxXQUFXLENBQUNRLGFBQWEsRUFBRTtNQUMzRUYsTUFBTSxFQUFFQSxNQUFNO01BQ2RHLG1CQUFtQixFQUFFO0lBQ3ZCLENBQUUsQ0FBQztJQUVILE1BQU1DLDZCQUE2QixHQUFHTCxjQUFjLENBQUNLLDZCQUE4QjtJQUNuRkMsTUFBTSxJQUFJQSxNQUFNLENBQUVELDZCQUE4QixDQUFDO0lBQ2pELE1BQU1FLDBCQUEwQixHQUFHUCxjQUFjLENBQUNPLDBCQUEyQjtJQUM3RUQsTUFBTSxJQUFJQSxNQUFNLENBQUVDLDBCQUEyQixDQUFDO0lBQzlDLE1BQU1DLHFCQUFxQixHQUFHUixjQUFjLENBQUNRLHFCQUFzQjtJQUNuRUYsTUFBTSxJQUFJQSxNQUFNLENBQUVFLHFCQUFzQixDQUFDOztJQUV6QztJQUNBLE1BQU1DLGNBQWMsR0FBR2IsVUFBVSxDQUFDYywrQkFBK0IsQ0FBRUYscUJBQXFCLEVBQ3RGUCxNQUFNLENBQUNVLFlBQVksQ0FBRSxnQkFBaUIsQ0FBRSxDQUFDO0lBQzNDLE1BQU1DLHNCQUFzQixHQUFHaEIsVUFBVSxDQUFDaUIsNEJBQTRCLENBQ3BFUiw2QkFBNkIsRUFBRUosTUFBTSxDQUFDVSxZQUFZLENBQUUsd0JBQXlCLENBQUUsQ0FBQztJQUNsRixNQUFNRyxpQkFBaUIsR0FBR2xCLFVBQVUsQ0FBQ21CLHVCQUF1QixDQUFFZixjQUFjLENBQUNnQix3QkFBd0IsRUFDbkdmLE1BQU0sQ0FBQ1UsWUFBWSxDQUFFLG1CQUFvQixDQUFFLENBQUM7SUFDOUMsTUFBTU0sbUJBQW1CLEdBQUdyQixVQUFVLENBQUNzQix5QkFBeUIsQ0FBRVgsMEJBQTBCLEVBQzFGTixNQUFNLENBQUNVLFlBQVksQ0FBRSxxQkFBc0IsQ0FBRSxDQUFDOztJQUVoRDtJQUNBLE1BQU1RLFdBQVcsR0FBRyxJQUFJM0IsSUFBSSxDQUFFO01BQzVCNEIsS0FBSyxFQUFFLE1BQU07TUFDYkMsT0FBTyxFQUFFMUIsV0FBVyxDQUFDMkIsb0JBQW9CO01BQ3pDQyxRQUFRLEVBQUUsQ0FDUmQsY0FBYyxFQUNkRyxzQkFBc0IsRUFDdEIsSUFBSXJCLFVBQVUsQ0FBRTtRQUFFaUMsTUFBTSxFQUFFOUIsUUFBUSxDQUFDK0I7TUFBVSxDQUFFLENBQUMsRUFDaERYLGlCQUFpQixFQUNqQkcsbUJBQW1CO0lBRXZCLENBQUUsQ0FBQztJQUVILEtBQUssQ0FBRUUsV0FBVyxFQUFFakIsT0FBUSxDQUFDO0VBQy9CO0FBQ0Y7QUFFQUwsa0JBQWtCLENBQUM2QixRQUFRLENBQUUsNkJBQTZCLEVBQUU1QiwyQkFBNEIsQ0FBQyJ9