// Copyright 2020, University of Colorado Boulder

/**
 * Mass is the model for a mass that has a position, velocity and acceleration.
 * In this simulation, the properties of the masses are set and updated by the main model.
 *
 * @author Thiago de Mendon√ßa Mildemberger (UTFPR)
 */

import BooleanProperty from '../../../../axon/js/BooleanProperty.js';
import Vector2 from '../../../../dot/js/Vector2.js';
import Vector2Property from '../../../../dot/js/Vector2Property.js';
import normalModes from '../../normalModes.js';
class Mass {
  /**
   * @param {Vector2} equilibriumPosition - mass position in model coordinates when springs are at default length
   * @param {boolean} visible
   * @param {Tandem} tandem
   */
  constructor(equilibriumPosition, visible, tandem) {
    // @public {Property.<Vector2>} mass position in model coordinates when springs are at natural length
    this.equilibriumPositionProperty = new Vector2Property(equilibriumPosition, {
      tandem: tandem.createTandem('equilibriumPositionProperty')
    });

    // @public {Property.<boolean>} determines the visibility of the mass
    this.visibleProperty = new BooleanProperty(visible, {
      tandem: tandem.createTandem('visibleProperty')
    });

    // @public {Property.<Vector2>} mass current displacement (from the equilibrium position)
    this.displacementProperty = new Vector2Property(new Vector2(0, 0), {
      tandem: tandem.createTandem('displacementProperty')
    });

    // @public {Property.<Vector2>} mass current velocity
    this.velocityProperty = new Vector2Property(new Vector2(0, 0), {
      tandem: tandem.createTandem('velocityProperty')
    });

    // @public {Property.<Vector2>} mass current acceleration
    this.accelerationProperty = new Vector2Property(new Vector2(0, 0), {
      tandem: tandem.createTandem('accelerationProperty')
    });

    // @public {Property.<Vector2>} mass previous acceleration (for the Velocity Verlet algorithm)
    this.previousAccelerationProperty = new Vector2Property(new Vector2(0, 0), {
      tandem: tandem.createTandem('previousAccelerationProperty')
    });
  }

  /**
   * Resets displacement, velocity and acceleration to zero.
   * @public
   */
  zeroPosition() {
    this.displacementProperty.reset();
    this.velocityProperty.reset();
    this.accelerationProperty.reset();
    this.previousAccelerationProperty.reset();
  }

  /**
   * Resets all mass properties.
   * @public
   */
  reset() {
    this.equilibriumPositionProperty.reset();
    this.visibleProperty.reset();
    this.zeroPosition();
  }
}
normalModes.register('Mass', Mass);
export default Mass;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJCb29sZWFuUHJvcGVydHkiLCJWZWN0b3IyIiwiVmVjdG9yMlByb3BlcnR5Iiwibm9ybWFsTW9kZXMiLCJNYXNzIiwiY29uc3RydWN0b3IiLCJlcXVpbGlicml1bVBvc2l0aW9uIiwidmlzaWJsZSIsInRhbmRlbSIsImVxdWlsaWJyaXVtUG9zaXRpb25Qcm9wZXJ0eSIsImNyZWF0ZVRhbmRlbSIsInZpc2libGVQcm9wZXJ0eSIsImRpc3BsYWNlbWVudFByb3BlcnR5IiwidmVsb2NpdHlQcm9wZXJ0eSIsImFjY2VsZXJhdGlvblByb3BlcnR5IiwicHJldmlvdXNBY2NlbGVyYXRpb25Qcm9wZXJ0eSIsInplcm9Qb3NpdGlvbiIsInJlc2V0IiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJNYXNzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIwLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBNYXNzIGlzIHRoZSBtb2RlbCBmb3IgYSBtYXNzIHRoYXQgaGFzIGEgcG9zaXRpb24sIHZlbG9jaXR5IGFuZCBhY2NlbGVyYXRpb24uXHJcbiAqIEluIHRoaXMgc2ltdWxhdGlvbiwgdGhlIHByb3BlcnRpZXMgb2YgdGhlIG1hc3NlcyBhcmUgc2V0IGFuZCB1cGRhdGVkIGJ5IHRoZSBtYWluIG1vZGVsLlxyXG4gKlxyXG4gKiBAYXV0aG9yIFRoaWFnbyBkZSBNZW5kb27Dp2EgTWlsZGVtYmVyZ2VyIChVVEZQUilcclxuICovXHJcblxyXG5pbXBvcnQgQm9vbGVhblByb3BlcnR5IGZyb20gJy4uLy4uLy4uLy4uL2F4b24vanMvQm9vbGVhblByb3BlcnR5LmpzJztcclxuaW1wb3J0IFZlY3RvcjIgZnJvbSAnLi4vLi4vLi4vLi4vZG90L2pzL1ZlY3RvcjIuanMnO1xyXG5pbXBvcnQgVmVjdG9yMlByb3BlcnR5IGZyb20gJy4uLy4uLy4uLy4uL2RvdC9qcy9WZWN0b3IyUHJvcGVydHkuanMnO1xyXG5pbXBvcnQgbm9ybWFsTW9kZXMgZnJvbSAnLi4vLi4vbm9ybWFsTW9kZXMuanMnO1xyXG5cclxuY2xhc3MgTWFzcyB7XHJcblxyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSB7VmVjdG9yMn0gZXF1aWxpYnJpdW1Qb3NpdGlvbiAtIG1hc3MgcG9zaXRpb24gaW4gbW9kZWwgY29vcmRpbmF0ZXMgd2hlbiBzcHJpbmdzIGFyZSBhdCBkZWZhdWx0IGxlbmd0aFxyXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gdmlzaWJsZVxyXG4gICAqIEBwYXJhbSB7VGFuZGVtfSB0YW5kZW1cclxuICAgKi9cclxuICBjb25zdHJ1Y3RvciggZXF1aWxpYnJpdW1Qb3NpdGlvbiwgdmlzaWJsZSwgdGFuZGVtICkge1xyXG5cclxuICAgIC8vIEBwdWJsaWMge1Byb3BlcnR5LjxWZWN0b3IyPn0gbWFzcyBwb3NpdGlvbiBpbiBtb2RlbCBjb29yZGluYXRlcyB3aGVuIHNwcmluZ3MgYXJlIGF0IG5hdHVyYWwgbGVuZ3RoXHJcbiAgICB0aGlzLmVxdWlsaWJyaXVtUG9zaXRpb25Qcm9wZXJ0eSA9IG5ldyBWZWN0b3IyUHJvcGVydHkoIGVxdWlsaWJyaXVtUG9zaXRpb24sIHtcclxuICAgICAgdGFuZGVtOiB0YW5kZW0uY3JlYXRlVGFuZGVtKCAnZXF1aWxpYnJpdW1Qb3NpdGlvblByb3BlcnR5JyApXHJcbiAgICB9ICk7XHJcblxyXG4gICAgLy8gQHB1YmxpYyB7UHJvcGVydHkuPGJvb2xlYW4+fSBkZXRlcm1pbmVzIHRoZSB2aXNpYmlsaXR5IG9mIHRoZSBtYXNzXHJcbiAgICB0aGlzLnZpc2libGVQcm9wZXJ0eSA9IG5ldyBCb29sZWFuUHJvcGVydHkoIHZpc2libGUsIHtcclxuICAgICAgdGFuZGVtOiB0YW5kZW0uY3JlYXRlVGFuZGVtKCAndmlzaWJsZVByb3BlcnR5JyApXHJcbiAgICB9ICk7XHJcblxyXG4gICAgLy8gQHB1YmxpYyB7UHJvcGVydHkuPFZlY3RvcjI+fSBtYXNzIGN1cnJlbnQgZGlzcGxhY2VtZW50IChmcm9tIHRoZSBlcXVpbGlicml1bSBwb3NpdGlvbilcclxuICAgIHRoaXMuZGlzcGxhY2VtZW50UHJvcGVydHkgPSBuZXcgVmVjdG9yMlByb3BlcnR5KCBuZXcgVmVjdG9yMiggMCwgMCApLCB7XHJcbiAgICAgIHRhbmRlbTogdGFuZGVtLmNyZWF0ZVRhbmRlbSggJ2Rpc3BsYWNlbWVudFByb3BlcnR5JyApXHJcbiAgICB9ICk7XHJcblxyXG4gICAgLy8gQHB1YmxpYyB7UHJvcGVydHkuPFZlY3RvcjI+fSBtYXNzIGN1cnJlbnQgdmVsb2NpdHlcclxuICAgIHRoaXMudmVsb2NpdHlQcm9wZXJ0eSA9IG5ldyBWZWN0b3IyUHJvcGVydHkoIG5ldyBWZWN0b3IyKCAwLCAwICksIHtcclxuICAgICAgdGFuZGVtOiB0YW5kZW0uY3JlYXRlVGFuZGVtKCAndmVsb2NpdHlQcm9wZXJ0eScgKVxyXG4gICAgfSApO1xyXG5cclxuICAgIC8vIEBwdWJsaWMge1Byb3BlcnR5LjxWZWN0b3IyPn0gbWFzcyBjdXJyZW50IGFjY2VsZXJhdGlvblxyXG4gICAgdGhpcy5hY2NlbGVyYXRpb25Qcm9wZXJ0eSA9IG5ldyBWZWN0b3IyUHJvcGVydHkoIG5ldyBWZWN0b3IyKCAwLCAwICksIHtcclxuICAgICAgdGFuZGVtOiB0YW5kZW0uY3JlYXRlVGFuZGVtKCAnYWNjZWxlcmF0aW9uUHJvcGVydHknIClcclxuICAgIH0gKTtcclxuXHJcbiAgICAvLyBAcHVibGljIHtQcm9wZXJ0eS48VmVjdG9yMj59IG1hc3MgcHJldmlvdXMgYWNjZWxlcmF0aW9uIChmb3IgdGhlIFZlbG9jaXR5IFZlcmxldCBhbGdvcml0aG0pXHJcbiAgICB0aGlzLnByZXZpb3VzQWNjZWxlcmF0aW9uUHJvcGVydHkgPSBuZXcgVmVjdG9yMlByb3BlcnR5KCBuZXcgVmVjdG9yMiggMCwgMCApLCB7XHJcbiAgICAgIHRhbmRlbTogdGFuZGVtLmNyZWF0ZVRhbmRlbSggJ3ByZXZpb3VzQWNjZWxlcmF0aW9uUHJvcGVydHknIClcclxuICAgIH0gKTtcclxuXHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBSZXNldHMgZGlzcGxhY2VtZW50LCB2ZWxvY2l0eSBhbmQgYWNjZWxlcmF0aW9uIHRvIHplcm8uXHJcbiAgICogQHB1YmxpY1xyXG4gICAqL1xyXG4gIHplcm9Qb3NpdGlvbigpIHtcclxuICAgIHRoaXMuZGlzcGxhY2VtZW50UHJvcGVydHkucmVzZXQoKTtcclxuICAgIHRoaXMudmVsb2NpdHlQcm9wZXJ0eS5yZXNldCgpO1xyXG4gICAgdGhpcy5hY2NlbGVyYXRpb25Qcm9wZXJ0eS5yZXNldCgpO1xyXG4gICAgdGhpcy5wcmV2aW91c0FjY2VsZXJhdGlvblByb3BlcnR5LnJlc2V0KCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBSZXNldHMgYWxsIG1hc3MgcHJvcGVydGllcy5cclxuICAgKiBAcHVibGljXHJcbiAgICovXHJcbiAgcmVzZXQoKSB7XHJcbiAgICB0aGlzLmVxdWlsaWJyaXVtUG9zaXRpb25Qcm9wZXJ0eS5yZXNldCgpO1xyXG4gICAgdGhpcy52aXNpYmxlUHJvcGVydHkucmVzZXQoKTtcclxuICAgIHRoaXMuemVyb1Bvc2l0aW9uKCk7XHJcbiAgfVxyXG5cclxufVxyXG5cclxubm9ybWFsTW9kZXMucmVnaXN0ZXIoICdNYXNzJywgTWFzcyApO1xyXG5leHBvcnQgZGVmYXVsdCBNYXNzOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLGVBQWUsTUFBTSx3Q0FBd0M7QUFDcEUsT0FBT0MsT0FBTyxNQUFNLCtCQUErQjtBQUNuRCxPQUFPQyxlQUFlLE1BQU0sdUNBQXVDO0FBQ25FLE9BQU9DLFdBQVcsTUFBTSxzQkFBc0I7QUFFOUMsTUFBTUMsSUFBSSxDQUFDO0VBRVQ7QUFDRjtBQUNBO0FBQ0E7QUFDQTtFQUNFQyxXQUFXQSxDQUFFQyxtQkFBbUIsRUFBRUMsT0FBTyxFQUFFQyxNQUFNLEVBQUc7SUFFbEQ7SUFDQSxJQUFJLENBQUNDLDJCQUEyQixHQUFHLElBQUlQLGVBQWUsQ0FBRUksbUJBQW1CLEVBQUU7TUFDM0VFLE1BQU0sRUFBRUEsTUFBTSxDQUFDRSxZQUFZLENBQUUsNkJBQThCO0lBQzdELENBQUUsQ0FBQzs7SUFFSDtJQUNBLElBQUksQ0FBQ0MsZUFBZSxHQUFHLElBQUlYLGVBQWUsQ0FBRU8sT0FBTyxFQUFFO01BQ25EQyxNQUFNLEVBQUVBLE1BQU0sQ0FBQ0UsWUFBWSxDQUFFLGlCQUFrQjtJQUNqRCxDQUFFLENBQUM7O0lBRUg7SUFDQSxJQUFJLENBQUNFLG9CQUFvQixHQUFHLElBQUlWLGVBQWUsQ0FBRSxJQUFJRCxPQUFPLENBQUUsQ0FBQyxFQUFFLENBQUUsQ0FBQyxFQUFFO01BQ3BFTyxNQUFNLEVBQUVBLE1BQU0sQ0FBQ0UsWUFBWSxDQUFFLHNCQUF1QjtJQUN0RCxDQUFFLENBQUM7O0lBRUg7SUFDQSxJQUFJLENBQUNHLGdCQUFnQixHQUFHLElBQUlYLGVBQWUsQ0FBRSxJQUFJRCxPQUFPLENBQUUsQ0FBQyxFQUFFLENBQUUsQ0FBQyxFQUFFO01BQ2hFTyxNQUFNLEVBQUVBLE1BQU0sQ0FBQ0UsWUFBWSxDQUFFLGtCQUFtQjtJQUNsRCxDQUFFLENBQUM7O0lBRUg7SUFDQSxJQUFJLENBQUNJLG9CQUFvQixHQUFHLElBQUlaLGVBQWUsQ0FBRSxJQUFJRCxPQUFPLENBQUUsQ0FBQyxFQUFFLENBQUUsQ0FBQyxFQUFFO01BQ3BFTyxNQUFNLEVBQUVBLE1BQU0sQ0FBQ0UsWUFBWSxDQUFFLHNCQUF1QjtJQUN0RCxDQUFFLENBQUM7O0lBRUg7SUFDQSxJQUFJLENBQUNLLDRCQUE0QixHQUFHLElBQUliLGVBQWUsQ0FBRSxJQUFJRCxPQUFPLENBQUUsQ0FBQyxFQUFFLENBQUUsQ0FBQyxFQUFFO01BQzVFTyxNQUFNLEVBQUVBLE1BQU0sQ0FBQ0UsWUFBWSxDQUFFLDhCQUErQjtJQUM5RCxDQUFFLENBQUM7RUFFTDs7RUFFQTtBQUNGO0FBQ0E7QUFDQTtFQUNFTSxZQUFZQSxDQUFBLEVBQUc7SUFDYixJQUFJLENBQUNKLG9CQUFvQixDQUFDSyxLQUFLLENBQUMsQ0FBQztJQUNqQyxJQUFJLENBQUNKLGdCQUFnQixDQUFDSSxLQUFLLENBQUMsQ0FBQztJQUM3QixJQUFJLENBQUNILG9CQUFvQixDQUFDRyxLQUFLLENBQUMsQ0FBQztJQUNqQyxJQUFJLENBQUNGLDRCQUE0QixDQUFDRSxLQUFLLENBQUMsQ0FBQztFQUMzQzs7RUFFQTtBQUNGO0FBQ0E7QUFDQTtFQUNFQSxLQUFLQSxDQUFBLEVBQUc7SUFDTixJQUFJLENBQUNSLDJCQUEyQixDQUFDUSxLQUFLLENBQUMsQ0FBQztJQUN4QyxJQUFJLENBQUNOLGVBQWUsQ0FBQ00sS0FBSyxDQUFDLENBQUM7SUFDNUIsSUFBSSxDQUFDRCxZQUFZLENBQUMsQ0FBQztFQUNyQjtBQUVGO0FBRUFiLFdBQVcsQ0FBQ2UsUUFBUSxDQUFFLE1BQU0sRUFBRWQsSUFBSyxDQUFDO0FBQ3BDLGVBQWVBLElBQUkifQ==