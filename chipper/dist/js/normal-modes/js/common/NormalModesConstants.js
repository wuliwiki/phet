// Copyright 2020-2021, University of Colorado Boulder

/**
 * Constants used in multiple locations within this simulation.
 *
 * @author Thiago de Mendon√ßa Mildemberger (UTFPR)
 * @author Franco Barpp Gomes (UTFPR)
 */

import Range from '../../../dot/js/Range.js';
import PhetFont from '../../../scenery-phet/js/PhetFont.js';
import normalModes from '../normalModes.js';
const NUMBER_OF_MASSES_RANGE = new Range(1, 10);
const NormalModesConstants = {
  // ScreenView margins
  SCREEN_VIEW_X_MARGIN: 10,
  SCREEN_VIEW_Y_MARGIN: 10,
  // Time
  FIXED_DT: 1 / 60,
  // dt will be scaled by these amounts, depending on the speed selection for the sim.
  NORMAL_SPEED: 1,
  SLOW_SPEED: 0.2,
  // Masses
  NUMBER_OF_MASSES_RANGE: NUMBER_OF_MASSES_RANGE,
  //TODO actually number of masses PER ROW
  MAX_MASSES_PER_ROW: NUMBER_OF_MASSES_RANGE.max,
  MASSES_MASS_VALUE: 0.1,
  // Springs
  SPRING_CONSTANT_VALUE: 0.1 * 4 * Math.PI ** 2,
  // Amplitude
  MIN_AMPLITUDE: 0,
  MAX_AMPLITUDE: 0.1,
  // for One Dimension screen
  INITIAL_AMPLITUDE: 0,
  // Phase
  MIN_PHASE: -Math.PI,
  MAX_PHASE: Math.PI,
  INITIAL_PHASE: 0,
  //TODO ???
  LEFT_WALL_X_POS: -1,
  TOP_WALL_Y_POS: 1,
  DISTANCE_BETWEEN_X_WALLS: 2,
  DISTANCE_BETWEEN_Y_WALLS: 2,
  // fonts
  CONTROL_FONT: new PhetFont(18),
  MODE_NUMBER_FONT: new PhetFont(16),
  GENERAL_FONT: new PhetFont(14),
  SMALL_FONT: new PhetFont(13),
  SMALLER_FONT: new PhetFont(12)
};
normalModes.register('NormalModesConstants', NormalModesConstants);
export default NormalModesConstants;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSYW5nZSIsIlBoZXRGb250Iiwibm9ybWFsTW9kZXMiLCJOVU1CRVJfT0ZfTUFTU0VTX1JBTkdFIiwiTm9ybWFsTW9kZXNDb25zdGFudHMiLCJTQ1JFRU5fVklFV19YX01BUkdJTiIsIlNDUkVFTl9WSUVXX1lfTUFSR0lOIiwiRklYRURfRFQiLCJOT1JNQUxfU1BFRUQiLCJTTE9XX1NQRUVEIiwiTUFYX01BU1NFU19QRVJfUk9XIiwibWF4IiwiTUFTU0VTX01BU1NfVkFMVUUiLCJTUFJJTkdfQ09OU1RBTlRfVkFMVUUiLCJNYXRoIiwiUEkiLCJNSU5fQU1QTElUVURFIiwiTUFYX0FNUExJVFVERSIsIklOSVRJQUxfQU1QTElUVURFIiwiTUlOX1BIQVNFIiwiTUFYX1BIQVNFIiwiSU5JVElBTF9QSEFTRSIsIkxFRlRfV0FMTF9YX1BPUyIsIlRPUF9XQUxMX1lfUE9TIiwiRElTVEFOQ0VfQkVUV0VFTl9YX1dBTExTIiwiRElTVEFOQ0VfQkVUV0VFTl9ZX1dBTExTIiwiQ09OVFJPTF9GT05UIiwiTU9ERV9OVU1CRVJfRk9OVCIsIkdFTkVSQUxfRk9OVCIsIlNNQUxMX0ZPTlQiLCJTTUFMTEVSX0ZPTlQiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIk5vcm1hbE1vZGVzQ29uc3RhbnRzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIwLTIwMjEsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIENvbnN0YW50cyB1c2VkIGluIG11bHRpcGxlIGxvY2F0aW9ucyB3aXRoaW4gdGhpcyBzaW11bGF0aW9uLlxyXG4gKlxyXG4gKiBAYXV0aG9yIFRoaWFnbyBkZSBNZW5kb27Dp2EgTWlsZGVtYmVyZ2VyIChVVEZQUilcclxuICogQGF1dGhvciBGcmFuY28gQmFycHAgR29tZXMgKFVURlBSKVxyXG4gKi9cclxuXHJcbmltcG9ydCBSYW5nZSBmcm9tICcuLi8uLi8uLi9kb3QvanMvUmFuZ2UuanMnO1xyXG5pbXBvcnQgUGhldEZvbnQgZnJvbSAnLi4vLi4vLi4vc2NlbmVyeS1waGV0L2pzL1BoZXRGb250LmpzJztcclxuaW1wb3J0IG5vcm1hbE1vZGVzIGZyb20gJy4uL25vcm1hbE1vZGVzLmpzJztcclxuXHJcbmNvbnN0IE5VTUJFUl9PRl9NQVNTRVNfUkFOR0UgPSBuZXcgUmFuZ2UoIDEsIDEwICk7XHJcblxyXG5jb25zdCBOb3JtYWxNb2Rlc0NvbnN0YW50cyA9IHtcclxuXHJcbiAgLy8gU2NyZWVuVmlldyBtYXJnaW5zXHJcbiAgU0NSRUVOX1ZJRVdfWF9NQVJHSU46IDEwLFxyXG4gIFNDUkVFTl9WSUVXX1lfTUFSR0lOOiAxMCxcclxuXHJcbiAgLy8gVGltZVxyXG4gIEZJWEVEX0RUOiAxIC8gNjAsXHJcblxyXG4gIC8vIGR0IHdpbGwgYmUgc2NhbGVkIGJ5IHRoZXNlIGFtb3VudHMsIGRlcGVuZGluZyBvbiB0aGUgc3BlZWQgc2VsZWN0aW9uIGZvciB0aGUgc2ltLlxyXG4gIE5PUk1BTF9TUEVFRDogMSxcclxuICBTTE9XX1NQRUVEOiAwLjIsXHJcblxyXG4gIC8vIE1hc3Nlc1xyXG4gIE5VTUJFUl9PRl9NQVNTRVNfUkFOR0U6IE5VTUJFUl9PRl9NQVNTRVNfUkFOR0UsIC8vVE9ETyBhY3R1YWxseSBudW1iZXIgb2YgbWFzc2VzIFBFUiBST1dcclxuICBNQVhfTUFTU0VTX1BFUl9ST1c6IE5VTUJFUl9PRl9NQVNTRVNfUkFOR0UubWF4LFxyXG4gIE1BU1NFU19NQVNTX1ZBTFVFOiAwLjEsXHJcblxyXG4gIC8vIFNwcmluZ3NcclxuICBTUFJJTkdfQ09OU1RBTlRfVkFMVUU6IDAuMSAqIDQgKiBNYXRoLlBJICoqIDIsXHJcblxyXG4gIC8vIEFtcGxpdHVkZVxyXG4gIE1JTl9BTVBMSVRVREU6IDAsXHJcbiAgTUFYX0FNUExJVFVERTogMC4xLCAvLyBmb3IgT25lIERpbWVuc2lvbiBzY3JlZW5cclxuICBJTklUSUFMX0FNUExJVFVERTogMCxcclxuXHJcbiAgLy8gUGhhc2VcclxuICBNSU5fUEhBU0U6IC1NYXRoLlBJLFxyXG4gIE1BWF9QSEFTRTogTWF0aC5QSSxcclxuICBJTklUSUFMX1BIQVNFOiAwLFxyXG5cclxuICAvL1RPRE8gPz8/XHJcbiAgTEVGVF9XQUxMX1hfUE9TOiAtMSxcclxuICBUT1BfV0FMTF9ZX1BPUzogMSxcclxuICBESVNUQU5DRV9CRVRXRUVOX1hfV0FMTFM6IDIsXHJcbiAgRElTVEFOQ0VfQkVUV0VFTl9ZX1dBTExTOiAyLFxyXG5cclxuICAvLyBmb250c1xyXG4gIENPTlRST0xfRk9OVDogbmV3IFBoZXRGb250KCAxOCApLFxyXG4gIE1PREVfTlVNQkVSX0ZPTlQ6IG5ldyBQaGV0Rm9udCggMTYgKSxcclxuICBHRU5FUkFMX0ZPTlQ6IG5ldyBQaGV0Rm9udCggMTQgKSxcclxuICBTTUFMTF9GT05UOiBuZXcgUGhldEZvbnQoIDEzICksXHJcbiAgU01BTExFUl9GT05UOiBuZXcgUGhldEZvbnQoIDEyIClcclxufTtcclxuXHJcbm5vcm1hbE1vZGVzLnJlZ2lzdGVyKCAnTm9ybWFsTW9kZXNDb25zdGFudHMnLCBOb3JtYWxNb2Rlc0NvbnN0YW50cyApO1xyXG5leHBvcnQgZGVmYXVsdCBOb3JtYWxNb2Rlc0NvbnN0YW50czsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxLQUFLLE1BQU0sMEJBQTBCO0FBQzVDLE9BQU9DLFFBQVEsTUFBTSxzQ0FBc0M7QUFDM0QsT0FBT0MsV0FBVyxNQUFNLG1CQUFtQjtBQUUzQyxNQUFNQyxzQkFBc0IsR0FBRyxJQUFJSCxLQUFLLENBQUUsQ0FBQyxFQUFFLEVBQUcsQ0FBQztBQUVqRCxNQUFNSSxvQkFBb0IsR0FBRztFQUUzQjtFQUNBQyxvQkFBb0IsRUFBRSxFQUFFO0VBQ3hCQyxvQkFBb0IsRUFBRSxFQUFFO0VBRXhCO0VBQ0FDLFFBQVEsRUFBRSxDQUFDLEdBQUcsRUFBRTtFQUVoQjtFQUNBQyxZQUFZLEVBQUUsQ0FBQztFQUNmQyxVQUFVLEVBQUUsR0FBRztFQUVmO0VBQ0FOLHNCQUFzQixFQUFFQSxzQkFBc0I7RUFBRTtFQUNoRE8sa0JBQWtCLEVBQUVQLHNCQUFzQixDQUFDUSxHQUFHO0VBQzlDQyxpQkFBaUIsRUFBRSxHQUFHO0VBRXRCO0VBQ0FDLHFCQUFxQixFQUFFLEdBQUcsR0FBRyxDQUFDLEdBQUdDLElBQUksQ0FBQ0MsRUFBRSxJQUFJLENBQUM7RUFFN0M7RUFDQUMsYUFBYSxFQUFFLENBQUM7RUFDaEJDLGFBQWEsRUFBRSxHQUFHO0VBQUU7RUFDcEJDLGlCQUFpQixFQUFFLENBQUM7RUFFcEI7RUFDQUMsU0FBUyxFQUFFLENBQUNMLElBQUksQ0FBQ0MsRUFBRTtFQUNuQkssU0FBUyxFQUFFTixJQUFJLENBQUNDLEVBQUU7RUFDbEJNLGFBQWEsRUFBRSxDQUFDO0VBRWhCO0VBQ0FDLGVBQWUsRUFBRSxDQUFDLENBQUM7RUFDbkJDLGNBQWMsRUFBRSxDQUFDO0VBQ2pCQyx3QkFBd0IsRUFBRSxDQUFDO0VBQzNCQyx3QkFBd0IsRUFBRSxDQUFDO0VBRTNCO0VBQ0FDLFlBQVksRUFBRSxJQUFJekIsUUFBUSxDQUFFLEVBQUcsQ0FBQztFQUNoQzBCLGdCQUFnQixFQUFFLElBQUkxQixRQUFRLENBQUUsRUFBRyxDQUFDO0VBQ3BDMkIsWUFBWSxFQUFFLElBQUkzQixRQUFRLENBQUUsRUFBRyxDQUFDO0VBQ2hDNEIsVUFBVSxFQUFFLElBQUk1QixRQUFRLENBQUUsRUFBRyxDQUFDO0VBQzlCNkIsWUFBWSxFQUFFLElBQUk3QixRQUFRLENBQUUsRUFBRztBQUNqQyxDQUFDO0FBRURDLFdBQVcsQ0FBQzZCLFFBQVEsQ0FBRSxzQkFBc0IsRUFBRTNCLG9CQUFxQixDQUFDO0FBQ3BFLGVBQWVBLG9CQUFvQiJ9