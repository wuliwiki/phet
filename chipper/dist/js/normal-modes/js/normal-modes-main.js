// Copyright 2020-2022, University of Colorado Boulder

/**
 * Main entry point for the sim.
 *
 * @author Franco Barpp Gomes (UTFPR)
 * @author Thiago de MendonÃ§a Mildemberger (UTFPR)
 */

import Sim from '../../joist/js/Sim.js';
import simLauncher from '../../joist/js/simLauncher.js';
import Tandem from '../../tandem/js/Tandem.js';
import NormalModesStrings from './NormalModesStrings.js';
import OneDimensionScreen from './one-dimension/OneDimensionScreen.js';
import TwoDimensionsScreen from './two-dimensions/TwoDimensionsScreen.js';
const normalModesTitleStringProperty = NormalModesStrings['normal-modes'].titleStringProperty;
const simOptions = {
  credits: {
    leadDesign: 'Mike Dubson',
    softwareDevelopment: 'Franco Barpp Gomes (UTFPR), Thiago de Mendon\u00e7a Mildemberger (UTFPR)',
    team: 'Mindy Gratny, Isam Hasan, Patricia Loeblein, Diana L\u00f3pez Tavares, Chris Malley (PixelZoom, Inc.), Jonathan Olson, Ariel Paul, Kathy Perkins, Amy Rouinfar',
    qualityAssurance: 'Emily Miller, Nancy Salpepi, Kathryn Woessner'
  }
};

// launch the sim - beware that scenery Image nodes created outside of simLauncher.launch() will have zero bounds
// until the images are fully loaded, see https://github.com/phetsims/coulombs-law/issues/70
simLauncher.launch(() => {
  const sim = new Sim(normalModesTitleStringProperty, [new OneDimensionScreen(Tandem.ROOT.createTandem('oneDimensionScreen')), new TwoDimensionsScreen(Tandem.ROOT.createTandem('twoDimensionsScreen'))], simOptions);
  sim.start();
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTaW0iLCJzaW1MYXVuY2hlciIsIlRhbmRlbSIsIk5vcm1hbE1vZGVzU3RyaW5ncyIsIk9uZURpbWVuc2lvblNjcmVlbiIsIlR3b0RpbWVuc2lvbnNTY3JlZW4iLCJub3JtYWxNb2Rlc1RpdGxlU3RyaW5nUHJvcGVydHkiLCJ0aXRsZVN0cmluZ1Byb3BlcnR5Iiwic2ltT3B0aW9ucyIsImNyZWRpdHMiLCJsZWFkRGVzaWduIiwic29mdHdhcmVEZXZlbG9wbWVudCIsInRlYW0iLCJxdWFsaXR5QXNzdXJhbmNlIiwibGF1bmNoIiwic2ltIiwiUk9PVCIsImNyZWF0ZVRhbmRlbSIsInN0YXJ0Il0sInNvdXJjZXMiOlsibm9ybWFsLW1vZGVzLW1haW4uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjAtMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogTWFpbiBlbnRyeSBwb2ludCBmb3IgdGhlIHNpbS5cclxuICpcclxuICogQGF1dGhvciBGcmFuY28gQmFycHAgR29tZXMgKFVURlBSKVxyXG4gKiBAYXV0aG9yIFRoaWFnbyBkZSBNZW5kb27Dp2EgTWlsZGVtYmVyZ2VyIChVVEZQUilcclxuICovXHJcblxyXG5pbXBvcnQgU2ltIGZyb20gJy4uLy4uL2pvaXN0L2pzL1NpbS5qcyc7XHJcbmltcG9ydCBzaW1MYXVuY2hlciBmcm9tICcuLi8uLi9qb2lzdC9qcy9zaW1MYXVuY2hlci5qcyc7XHJcbmltcG9ydCBUYW5kZW0gZnJvbSAnLi4vLi4vdGFuZGVtL2pzL1RhbmRlbS5qcyc7XHJcbmltcG9ydCBOb3JtYWxNb2Rlc1N0cmluZ3MgZnJvbSAnLi9Ob3JtYWxNb2Rlc1N0cmluZ3MuanMnO1xyXG5pbXBvcnQgT25lRGltZW5zaW9uU2NyZWVuIGZyb20gJy4vb25lLWRpbWVuc2lvbi9PbmVEaW1lbnNpb25TY3JlZW4uanMnO1xyXG5pbXBvcnQgVHdvRGltZW5zaW9uc1NjcmVlbiBmcm9tICcuL3R3by1kaW1lbnNpb25zL1R3b0RpbWVuc2lvbnNTY3JlZW4uanMnO1xyXG5cclxuY29uc3Qgbm9ybWFsTW9kZXNUaXRsZVN0cmluZ1Byb3BlcnR5ID0gTm9ybWFsTW9kZXNTdHJpbmdzWyAnbm9ybWFsLW1vZGVzJyBdLnRpdGxlU3RyaW5nUHJvcGVydHk7XHJcblxyXG5jb25zdCBzaW1PcHRpb25zID0ge1xyXG4gIGNyZWRpdHM6IHtcclxuICAgIGxlYWREZXNpZ246ICdNaWtlIER1YnNvbicsXHJcbiAgICBzb2Z0d2FyZURldmVsb3BtZW50OiAnRnJhbmNvIEJhcnBwIEdvbWVzIChVVEZQUiksIFRoaWFnbyBkZSBNZW5kb25cXHUwMGU3YSBNaWxkZW1iZXJnZXIgKFVURlBSKScsXHJcbiAgICB0ZWFtOiAnTWluZHkgR3JhdG55LCBJc2FtIEhhc2FuLCBQYXRyaWNpYSBMb2VibGVpbiwgRGlhbmEgTFxcdTAwZjNwZXogVGF2YXJlcywgQ2hyaXMgTWFsbGV5IChQaXhlbFpvb20sIEluYy4pLCBKb25hdGhhbiBPbHNvbiwgQXJpZWwgUGF1bCwgS2F0aHkgUGVya2lucywgQW15IFJvdWluZmFyJyxcclxuICAgIHF1YWxpdHlBc3N1cmFuY2U6ICdFbWlseSBNaWxsZXIsIE5hbmN5IFNhbHBlcGksIEthdGhyeW4gV29lc3NuZXInXHJcbiAgfVxyXG59O1xyXG5cclxuLy8gbGF1bmNoIHRoZSBzaW0gLSBiZXdhcmUgdGhhdCBzY2VuZXJ5IEltYWdlIG5vZGVzIGNyZWF0ZWQgb3V0c2lkZSBvZiBzaW1MYXVuY2hlci5sYXVuY2goKSB3aWxsIGhhdmUgemVybyBib3VuZHNcclxuLy8gdW50aWwgdGhlIGltYWdlcyBhcmUgZnVsbHkgbG9hZGVkLCBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3BoZXRzaW1zL2NvdWxvbWJzLWxhdy9pc3N1ZXMvNzBcclxuc2ltTGF1bmNoZXIubGF1bmNoKCAoKSA9PiB7XHJcbiAgY29uc3Qgc2ltID0gbmV3IFNpbSggbm9ybWFsTW9kZXNUaXRsZVN0cmluZ1Byb3BlcnR5LCBbXHJcbiAgICBuZXcgT25lRGltZW5zaW9uU2NyZWVuKCBUYW5kZW0uUk9PVC5jcmVhdGVUYW5kZW0oICdvbmVEaW1lbnNpb25TY3JlZW4nICkgKSxcclxuICAgIG5ldyBUd29EaW1lbnNpb25zU2NyZWVuKCBUYW5kZW0uUk9PVC5jcmVhdGVUYW5kZW0oICd0d29EaW1lbnNpb25zU2NyZWVuJyApIClcclxuICBdLCBzaW1PcHRpb25zICk7XHJcbiAgc2ltLnN0YXJ0KCk7XHJcbn0gKTsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxHQUFHLE1BQU0sdUJBQXVCO0FBQ3ZDLE9BQU9DLFdBQVcsTUFBTSwrQkFBK0I7QUFDdkQsT0FBT0MsTUFBTSxNQUFNLDJCQUEyQjtBQUM5QyxPQUFPQyxrQkFBa0IsTUFBTSx5QkFBeUI7QUFDeEQsT0FBT0Msa0JBQWtCLE1BQU0sdUNBQXVDO0FBQ3RFLE9BQU9DLG1CQUFtQixNQUFNLHlDQUF5QztBQUV6RSxNQUFNQyw4QkFBOEIsR0FBR0gsa0JBQWtCLENBQUUsY0FBYyxDQUFFLENBQUNJLG1CQUFtQjtBQUUvRixNQUFNQyxVQUFVLEdBQUc7RUFDakJDLE9BQU8sRUFBRTtJQUNQQyxVQUFVLEVBQUUsYUFBYTtJQUN6QkMsbUJBQW1CLEVBQUUsMEVBQTBFO0lBQy9GQyxJQUFJLEVBQUUsZ0tBQWdLO0lBQ3RLQyxnQkFBZ0IsRUFBRTtFQUNwQjtBQUNGLENBQUM7O0FBRUQ7QUFDQTtBQUNBWixXQUFXLENBQUNhLE1BQU0sQ0FBRSxNQUFNO0VBQ3hCLE1BQU1DLEdBQUcsR0FBRyxJQUFJZixHQUFHLENBQUVNLDhCQUE4QixFQUFFLENBQ25ELElBQUlGLGtCQUFrQixDQUFFRixNQUFNLENBQUNjLElBQUksQ0FBQ0MsWUFBWSxDQUFFLG9CQUFxQixDQUFFLENBQUMsRUFDMUUsSUFBSVosbUJBQW1CLENBQUVILE1BQU0sQ0FBQ2MsSUFBSSxDQUFDQyxZQUFZLENBQUUscUJBQXNCLENBQUUsQ0FBQyxDQUM3RSxFQUFFVCxVQUFXLENBQUM7RUFDZk8sR0FBRyxDQUFDRyxLQUFLLENBQUMsQ0FBQztBQUNiLENBQUUsQ0FBQyJ9