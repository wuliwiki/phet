// Copyright 2020-2022, University of Colorado Boulder

import axon from './axon.js';
import Timer from './Timer.js';

/**
 * Register and return a singleton timer, which can be used to schedule events. This ticks under the following circumstances:
 * 1) When a JOIST/Sim is active, during the step event
 * 2) In various accessibility tests that require timing
 * 3) In SCENERY/Display's animation loop, which is run by various test and example HTML files
 *
 * In order to run an event when a simulation is inactive and not stepping, see animationFrameTimer.
 *
 * Listeners added with addListener are called with a {number} dt argument (in seconds) via timer.emit in
 * Sim.stepSimulation. Listeners added with setTimeout/setInterval are called with no arguments. This is not specific
 * to the running screen, it is global across all screens.
 */
const stepTimer = new Timer();
axon.register('stepTimer', stepTimer);
export default stepTimer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJheG9uIiwiVGltZXIiLCJzdGVwVGltZXIiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbInN0ZXBUaW1lci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMC0yMDIyLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbmltcG9ydCBheG9uIGZyb20gJy4vYXhvbi5qcyc7XHJcbmltcG9ydCBUaW1lciBmcm9tICcuL1RpbWVyLmpzJztcclxuXHJcbi8qKlxyXG4gKiBSZWdpc3RlciBhbmQgcmV0dXJuIGEgc2luZ2xldG9uIHRpbWVyLCB3aGljaCBjYW4gYmUgdXNlZCB0byBzY2hlZHVsZSBldmVudHMuIFRoaXMgdGlja3MgdW5kZXIgdGhlIGZvbGxvd2luZyBjaXJjdW1zdGFuY2VzOlxyXG4gKiAxKSBXaGVuIGEgSk9JU1QvU2ltIGlzIGFjdGl2ZSwgZHVyaW5nIHRoZSBzdGVwIGV2ZW50XHJcbiAqIDIpIEluIHZhcmlvdXMgYWNjZXNzaWJpbGl0eSB0ZXN0cyB0aGF0IHJlcXVpcmUgdGltaW5nXHJcbiAqIDMpIEluIFNDRU5FUlkvRGlzcGxheSdzIGFuaW1hdGlvbiBsb29wLCB3aGljaCBpcyBydW4gYnkgdmFyaW91cyB0ZXN0IGFuZCBleGFtcGxlIEhUTUwgZmlsZXNcclxuICpcclxuICogSW4gb3JkZXIgdG8gcnVuIGFuIGV2ZW50IHdoZW4gYSBzaW11bGF0aW9uIGlzIGluYWN0aXZlIGFuZCBub3Qgc3RlcHBpbmcsIHNlZSBhbmltYXRpb25GcmFtZVRpbWVyLlxyXG4gKlxyXG4gKiBMaXN0ZW5lcnMgYWRkZWQgd2l0aCBhZGRMaXN0ZW5lciBhcmUgY2FsbGVkIHdpdGggYSB7bnVtYmVyfSBkdCBhcmd1bWVudCAoaW4gc2Vjb25kcykgdmlhIHRpbWVyLmVtaXQgaW5cclxuICogU2ltLnN0ZXBTaW11bGF0aW9uLiBMaXN0ZW5lcnMgYWRkZWQgd2l0aCBzZXRUaW1lb3V0L3NldEludGVydmFsIGFyZSBjYWxsZWQgd2l0aCBubyBhcmd1bWVudHMuIFRoaXMgaXMgbm90IHNwZWNpZmljXHJcbiAqIHRvIHRoZSBydW5uaW5nIHNjcmVlbiwgaXQgaXMgZ2xvYmFsIGFjcm9zcyBhbGwgc2NyZWVucy5cclxuICovXHJcbmNvbnN0IHN0ZXBUaW1lciA9IG5ldyBUaW1lcigpO1xyXG5cclxuYXhvbi5yZWdpc3RlciggJ3N0ZXBUaW1lcicsIHN0ZXBUaW1lciApO1xyXG5leHBvcnQgZGVmYXVsdCBzdGVwVGltZXI7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxPQUFPQSxJQUFJLE1BQU0sV0FBVztBQUM1QixPQUFPQyxLQUFLLE1BQU0sWUFBWTs7QUFFOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTUMsU0FBUyxHQUFHLElBQUlELEtBQUssQ0FBQyxDQUFDO0FBRTdCRCxJQUFJLENBQUNHLFFBQVEsQ0FBRSxXQUFXLEVBQUVELFNBQVUsQ0FBQztBQUN2QyxlQUFlQSxTQUFTIn0=