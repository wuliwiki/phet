// Copyright 2020-2022, University of Colorado Boulder

/**
 * MagnetMovementArrowsNode is a Scenery node that depicts four arrows that are used to provide a hint to the user about
 * how the magnet can be moved.
 *
 * @author John Blanco (PhET Interactive Simulations)
 */

import Matrix3 from '../../../../dot/js/Matrix3.js';
import merge from '../../../../phet-core/js/merge.js';
import ArrowShape from '../../../../scenery-phet/js/ArrowShape.js';
import { Color, Node, Path } from '../../../../scenery/js/imports.js';
import faradaysLaw from '../../faradaysLaw.js';

// constants
const ARROW_FILL = new Color(0xB2FCB7);
const ARROW_STROKE = Color.BLACK;
const DISTANCE_FROM_MAGNET_TO_ARROW = 12; // in screen coordinates
const RIGHT_POINTING_ARROW_SHAPE = new ArrowShape(0, 0, 30, 0, {
  tailWidth: 10,
  headWidth: 22,
  headHeight: 18
});
class MagnetMovementArrowsNode extends Node {
  /**
   * @param {Dimension2} magnetDimensions
   * @param {Object} [options]
   */
  constructor(magnetDimensions, options) {
    const rightArrow = new Path(RIGHT_POINTING_ARROW_SHAPE, {
      fill: ARROW_FILL,
      stroke: ARROW_STROKE,
      left: magnetDimensions.width / 2 + DISTANCE_FROM_MAGNET_TO_ARROW
    });
    const leftArrow = new Path(RIGHT_POINTING_ARROW_SHAPE.transformed(Matrix3.scaling(-1, 1)), {
      fill: ARROW_FILL,
      stroke: ARROW_STROKE,
      right: -magnetDimensions.width / 2 + -DISTANCE_FROM_MAGNET_TO_ARROW
    });
    const topArrow = new Path(RIGHT_POINTING_ARROW_SHAPE.transformed(Matrix3.rotationAround(-Math.PI / 2, 0, 0)), {
      fill: ARROW_FILL,
      stroke: ARROW_STROKE,
      bottom: -magnetDimensions.height / 2 - DISTANCE_FROM_MAGNET_TO_ARROW
    });
    const bottomArrow = new Path(RIGHT_POINTING_ARROW_SHAPE.transformed(Matrix3.rotationAround(Math.PI / 2, 0, 0)), {
      fill: ARROW_FILL,
      stroke: ARROW_STROKE,
      top: magnetDimensions.height / 2 + DISTANCE_FROM_MAGNET_TO_ARROW
    });
    super(merge({
      children: [rightArrow, leftArrow, topArrow, bottomArrow]
    }, options));
  }
}
faradaysLaw.register('MagnetMovementArrowsNode', MagnetMovementArrowsNode);
export default MagnetMovementArrowsNode;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJNYXRyaXgzIiwibWVyZ2UiLCJBcnJvd1NoYXBlIiwiQ29sb3IiLCJOb2RlIiwiUGF0aCIsImZhcmFkYXlzTGF3IiwiQVJST1dfRklMTCIsIkFSUk9XX1NUUk9LRSIsIkJMQUNLIiwiRElTVEFOQ0VfRlJPTV9NQUdORVRfVE9fQVJST1ciLCJSSUdIVF9QT0lOVElOR19BUlJPV19TSEFQRSIsInRhaWxXaWR0aCIsImhlYWRXaWR0aCIsImhlYWRIZWlnaHQiLCJNYWduZXRNb3ZlbWVudEFycm93c05vZGUiLCJjb25zdHJ1Y3RvciIsIm1hZ25ldERpbWVuc2lvbnMiLCJvcHRpb25zIiwicmlnaHRBcnJvdyIsImZpbGwiLCJzdHJva2UiLCJsZWZ0Iiwid2lkdGgiLCJsZWZ0QXJyb3ciLCJ0cmFuc2Zvcm1lZCIsInNjYWxpbmciLCJyaWdodCIsInRvcEFycm93Iiwicm90YXRpb25Bcm91bmQiLCJNYXRoIiwiUEkiLCJib3R0b20iLCJoZWlnaHQiLCJib3R0b21BcnJvdyIsInRvcCIsImNoaWxkcmVuIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJNYWduZXRNb3ZlbWVudEFycm93c05vZGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjAtMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogTWFnbmV0TW92ZW1lbnRBcnJvd3NOb2RlIGlzIGEgU2NlbmVyeSBub2RlIHRoYXQgZGVwaWN0cyBmb3VyIGFycm93cyB0aGF0IGFyZSB1c2VkIHRvIHByb3ZpZGUgYSBoaW50IHRvIHRoZSB1c2VyIGFib3V0XHJcbiAqIGhvdyB0aGUgbWFnbmV0IGNhbiBiZSBtb3ZlZC5cclxuICpcclxuICogQGF1dGhvciBKb2huIEJsYW5jbyAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcclxuICovXHJcblxyXG5pbXBvcnQgTWF0cml4MyBmcm9tICcuLi8uLi8uLi8uLi9kb3QvanMvTWF0cml4My5qcyc7XHJcbmltcG9ydCBtZXJnZSBmcm9tICcuLi8uLi8uLi8uLi9waGV0LWNvcmUvanMvbWVyZ2UuanMnO1xyXG5pbXBvcnQgQXJyb3dTaGFwZSBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5LXBoZXQvanMvQXJyb3dTaGFwZS5qcyc7XHJcbmltcG9ydCB7IENvbG9yLCBOb2RlLCBQYXRoIH0gZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IGZhcmFkYXlzTGF3IGZyb20gJy4uLy4uL2ZhcmFkYXlzTGF3LmpzJztcclxuXHJcbi8vIGNvbnN0YW50c1xyXG5jb25zdCBBUlJPV19GSUxMID0gbmV3IENvbG9yKCAweEIyRkNCNyApO1xyXG5jb25zdCBBUlJPV19TVFJPS0UgPSBDb2xvci5CTEFDSztcclxuY29uc3QgRElTVEFOQ0VfRlJPTV9NQUdORVRfVE9fQVJST1cgPSAxMjsgLy8gaW4gc2NyZWVuIGNvb3JkaW5hdGVzXHJcbmNvbnN0IFJJR0hUX1BPSU5USU5HX0FSUk9XX1NIQVBFID0gbmV3IEFycm93U2hhcGUoIDAsIDAsIDMwLCAwLCB7XHJcbiAgdGFpbFdpZHRoOiAxMCxcclxuICBoZWFkV2lkdGg6IDIyLFxyXG4gIGhlYWRIZWlnaHQ6IDE4XHJcbn0gKTtcclxuXHJcbmNsYXNzIE1hZ25ldE1vdmVtZW50QXJyb3dzTm9kZSBleHRlbmRzIE5vZGUge1xyXG5cclxuICAvKipcclxuICAgKiBAcGFyYW0ge0RpbWVuc2lvbjJ9IG1hZ25ldERpbWVuc2lvbnNcclxuICAgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXHJcbiAgICovXHJcbiAgY29uc3RydWN0b3IoIG1hZ25ldERpbWVuc2lvbnMsIG9wdGlvbnMgKSB7XHJcbiAgICBjb25zdCByaWdodEFycm93ID0gbmV3IFBhdGgoIFJJR0hUX1BPSU5USU5HX0FSUk9XX1NIQVBFLCB7XHJcbiAgICAgIGZpbGw6IEFSUk9XX0ZJTEwsXHJcbiAgICAgIHN0cm9rZTogQVJST1dfU1RST0tFLFxyXG4gICAgICBsZWZ0OiBtYWduZXREaW1lbnNpb25zLndpZHRoIC8gMiArIERJU1RBTkNFX0ZST01fTUFHTkVUX1RPX0FSUk9XXHJcbiAgICB9ICk7XHJcbiAgICBjb25zdCBsZWZ0QXJyb3cgPSBuZXcgUGF0aCggUklHSFRfUE9JTlRJTkdfQVJST1dfU0hBUEUudHJhbnNmb3JtZWQoIE1hdHJpeDMuc2NhbGluZyggLTEsIDEgKSApLCB7XHJcbiAgICAgIGZpbGw6IEFSUk9XX0ZJTEwsXHJcbiAgICAgIHN0cm9rZTogQVJST1dfU1RST0tFLFxyXG4gICAgICByaWdodDogLW1hZ25ldERpbWVuc2lvbnMud2lkdGggLyAyICsgLURJU1RBTkNFX0ZST01fTUFHTkVUX1RPX0FSUk9XXHJcbiAgICB9ICk7XHJcbiAgICBjb25zdCB0b3BBcnJvdyA9IG5ldyBQYXRoKCBSSUdIVF9QT0lOVElOR19BUlJPV19TSEFQRS50cmFuc2Zvcm1lZCggTWF0cml4My5yb3RhdGlvbkFyb3VuZCggLU1hdGguUEkgLyAyLCAwLCAwICkgKSwge1xyXG4gICAgICBmaWxsOiBBUlJPV19GSUxMLFxyXG4gICAgICBzdHJva2U6IEFSUk9XX1NUUk9LRSxcclxuICAgICAgYm90dG9tOiAtbWFnbmV0RGltZW5zaW9ucy5oZWlnaHQgLyAyIC0gRElTVEFOQ0VfRlJPTV9NQUdORVRfVE9fQVJST1dcclxuICAgIH0gKTtcclxuICAgIGNvbnN0IGJvdHRvbUFycm93ID0gbmV3IFBhdGgoIFJJR0hUX1BPSU5USU5HX0FSUk9XX1NIQVBFLnRyYW5zZm9ybWVkKCBNYXRyaXgzLnJvdGF0aW9uQXJvdW5kKCBNYXRoLlBJIC8gMiwgMCwgMCApICksIHtcclxuICAgICAgZmlsbDogQVJST1dfRklMTCxcclxuICAgICAgc3Ryb2tlOiBBUlJPV19TVFJPS0UsXHJcbiAgICAgIHRvcDogbWFnbmV0RGltZW5zaW9ucy5oZWlnaHQgLyAyICsgRElTVEFOQ0VfRlJPTV9NQUdORVRfVE9fQVJST1dcclxuICAgIH0gKTtcclxuXHJcbiAgICBzdXBlciggbWVyZ2UoIHtcclxuICAgICAgY2hpbGRyZW46IFsgcmlnaHRBcnJvdywgbGVmdEFycm93LCB0b3BBcnJvdywgYm90dG9tQXJyb3cgXVxyXG4gICAgfSwgb3B0aW9ucyApICk7XHJcbiAgfVxyXG59XHJcblxyXG5mYXJhZGF5c0xhdy5yZWdpc3RlciggJ01hZ25ldE1vdmVtZW50QXJyb3dzTm9kZScsIE1hZ25ldE1vdmVtZW50QXJyb3dzTm9kZSApO1xyXG5leHBvcnQgZGVmYXVsdCBNYWduZXRNb3ZlbWVudEFycm93c05vZGU7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsT0FBTyxNQUFNLCtCQUErQjtBQUNuRCxPQUFPQyxLQUFLLE1BQU0sbUNBQW1DO0FBQ3JELE9BQU9DLFVBQVUsTUFBTSwyQ0FBMkM7QUFDbEUsU0FBU0MsS0FBSyxFQUFFQyxJQUFJLEVBQUVDLElBQUksUUFBUSxtQ0FBbUM7QUFDckUsT0FBT0MsV0FBVyxNQUFNLHNCQUFzQjs7QUFFOUM7QUFDQSxNQUFNQyxVQUFVLEdBQUcsSUFBSUosS0FBSyxDQUFFLFFBQVMsQ0FBQztBQUN4QyxNQUFNSyxZQUFZLEdBQUdMLEtBQUssQ0FBQ00sS0FBSztBQUNoQyxNQUFNQyw2QkFBNkIsR0FBRyxFQUFFLENBQUMsQ0FBQztBQUMxQyxNQUFNQywwQkFBMEIsR0FBRyxJQUFJVCxVQUFVLENBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFO0VBQzlEVSxTQUFTLEVBQUUsRUFBRTtFQUNiQyxTQUFTLEVBQUUsRUFBRTtFQUNiQyxVQUFVLEVBQUU7QUFDZCxDQUFFLENBQUM7QUFFSCxNQUFNQyx3QkFBd0IsU0FBU1gsSUFBSSxDQUFDO0VBRTFDO0FBQ0Y7QUFDQTtBQUNBO0VBQ0VZLFdBQVdBLENBQUVDLGdCQUFnQixFQUFFQyxPQUFPLEVBQUc7SUFDdkMsTUFBTUMsVUFBVSxHQUFHLElBQUlkLElBQUksQ0FBRU0sMEJBQTBCLEVBQUU7TUFDdkRTLElBQUksRUFBRWIsVUFBVTtNQUNoQmMsTUFBTSxFQUFFYixZQUFZO01BQ3BCYyxJQUFJLEVBQUVMLGdCQUFnQixDQUFDTSxLQUFLLEdBQUcsQ0FBQyxHQUFHYjtJQUNyQyxDQUFFLENBQUM7SUFDSCxNQUFNYyxTQUFTLEdBQUcsSUFBSW5CLElBQUksQ0FBRU0sMEJBQTBCLENBQUNjLFdBQVcsQ0FBRXpCLE9BQU8sQ0FBQzBCLE9BQU8sQ0FBRSxDQUFDLENBQUMsRUFBRSxDQUFFLENBQUUsQ0FBQyxFQUFFO01BQzlGTixJQUFJLEVBQUViLFVBQVU7TUFDaEJjLE1BQU0sRUFBRWIsWUFBWTtNQUNwQm1CLEtBQUssRUFBRSxDQUFDVixnQkFBZ0IsQ0FBQ00sS0FBSyxHQUFHLENBQUMsR0FBRyxDQUFDYjtJQUN4QyxDQUFFLENBQUM7SUFDSCxNQUFNa0IsUUFBUSxHQUFHLElBQUl2QixJQUFJLENBQUVNLDBCQUEwQixDQUFDYyxXQUFXLENBQUV6QixPQUFPLENBQUM2QixjQUFjLENBQUUsQ0FBQ0MsSUFBSSxDQUFDQyxFQUFFLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFFLENBQUUsQ0FBQyxFQUFFO01BQ2pIWCxJQUFJLEVBQUViLFVBQVU7TUFDaEJjLE1BQU0sRUFBRWIsWUFBWTtNQUNwQndCLE1BQU0sRUFBRSxDQUFDZixnQkFBZ0IsQ0FBQ2dCLE1BQU0sR0FBRyxDQUFDLEdBQUd2QjtJQUN6QyxDQUFFLENBQUM7SUFDSCxNQUFNd0IsV0FBVyxHQUFHLElBQUk3QixJQUFJLENBQUVNLDBCQUEwQixDQUFDYyxXQUFXLENBQUV6QixPQUFPLENBQUM2QixjQUFjLENBQUVDLElBQUksQ0FBQ0MsRUFBRSxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBRSxDQUFFLENBQUMsRUFBRTtNQUNuSFgsSUFBSSxFQUFFYixVQUFVO01BQ2hCYyxNQUFNLEVBQUViLFlBQVk7TUFDcEIyQixHQUFHLEVBQUVsQixnQkFBZ0IsQ0FBQ2dCLE1BQU0sR0FBRyxDQUFDLEdBQUd2QjtJQUNyQyxDQUFFLENBQUM7SUFFSCxLQUFLLENBQUVULEtBQUssQ0FBRTtNQUNabUMsUUFBUSxFQUFFLENBQUVqQixVQUFVLEVBQUVLLFNBQVMsRUFBRUksUUFBUSxFQUFFTSxXQUFXO0lBQzFELENBQUMsRUFBRWhCLE9BQVEsQ0FBRSxDQUFDO0VBQ2hCO0FBQ0Y7QUFFQVosV0FBVyxDQUFDK0IsUUFBUSxDQUFFLDBCQUEwQixFQUFFdEIsd0JBQXlCLENBQUM7QUFDNUUsZUFBZUEsd0JBQXdCIn0=