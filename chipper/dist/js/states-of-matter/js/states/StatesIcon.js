// Copyright 2015-2022, University of Colorado Boulder

/**
 * Programmatically generated icon for the 'States' screen.
 *
 * @author John Blanco
 */

import Screen from '../../../joist/js/Screen.js';
import ScreenIcon from '../../../joist/js/ScreenIcon.js';
import merge from '../../../phet-core/js/merge.js';
import { Color, HBox, Image, Rectangle } from '../../../scenery/js/imports.js';
import gasIcon_png from '../../mipmaps/gasIcon_png.js';
import liquidIcon_png from '../../mipmaps/liquidIcon_png.js';
import solidIcon_png from '../../mipmaps/solidIcon_png.js';
import statesOfMatter from '../statesOfMatter.js';
class StatesIcon extends ScreenIcon {
  /**
   * {Object} [options]
   */
  constructor(options) {
    options = merge({
      size: Screen.MINIMUM_HOME_SCREEN_ICON_SIZE,
      maxIconWidthProportion: 0.9,
      maxIconHeightProportion: 0.9,
      fill: Color.BLACK
    }, options);

    // icons packed into a nice little box
    const iconsBox = new HBox({
      children: [new Image(solidIcon_png), new Image(liquidIcon_png), new Image(gasIcon_png)],
      spacing: 20,
      // empirically determined
      maxWidth: options.size.width,
      centerX: options.size.width / 2,
      centerY: options.size.height / 2
    });
    const iconRootNode = new Rectangle(0, 0, options.size.width, options.size.height, 0, 0, {
      fill: Color.BLACK,
      children: [iconsBox]
    });
    super(iconRootNode, options);
  }
}
statesOfMatter.register('StatesIcon', StatesIcon);
export default StatesIcon;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTY3JlZW4iLCJTY3JlZW5JY29uIiwibWVyZ2UiLCJDb2xvciIsIkhCb3giLCJJbWFnZSIsIlJlY3RhbmdsZSIsImdhc0ljb25fcG5nIiwibGlxdWlkSWNvbl9wbmciLCJzb2xpZEljb25fcG5nIiwic3RhdGVzT2ZNYXR0ZXIiLCJTdGF0ZXNJY29uIiwiY29uc3RydWN0b3IiLCJvcHRpb25zIiwic2l6ZSIsIk1JTklNVU1fSE9NRV9TQ1JFRU5fSUNPTl9TSVpFIiwibWF4SWNvbldpZHRoUHJvcG9ydGlvbiIsIm1heEljb25IZWlnaHRQcm9wb3J0aW9uIiwiZmlsbCIsIkJMQUNLIiwiaWNvbnNCb3giLCJjaGlsZHJlbiIsInNwYWNpbmciLCJtYXhXaWR0aCIsIndpZHRoIiwiY2VudGVyWCIsImNlbnRlclkiLCJoZWlnaHQiLCJpY29uUm9vdE5vZGUiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIlN0YXRlc0ljb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTUtMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogUHJvZ3JhbW1hdGljYWxseSBnZW5lcmF0ZWQgaWNvbiBmb3IgdGhlICdTdGF0ZXMnIHNjcmVlbi5cclxuICpcclxuICogQGF1dGhvciBKb2huIEJsYW5jb1xyXG4gKi9cclxuXHJcbmltcG9ydCBTY3JlZW4gZnJvbSAnLi4vLi4vLi4vam9pc3QvanMvU2NyZWVuLmpzJztcclxuaW1wb3J0IFNjcmVlbkljb24gZnJvbSAnLi4vLi4vLi4vam9pc3QvanMvU2NyZWVuSWNvbi5qcyc7XHJcbmltcG9ydCBtZXJnZSBmcm9tICcuLi8uLi8uLi9waGV0LWNvcmUvanMvbWVyZ2UuanMnO1xyXG5pbXBvcnQgeyBDb2xvciwgSEJveCwgSW1hZ2UsIFJlY3RhbmdsZSB9IGZyb20gJy4uLy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XHJcbmltcG9ydCBnYXNJY29uX3BuZyBmcm9tICcuLi8uLi9taXBtYXBzL2dhc0ljb25fcG5nLmpzJztcclxuaW1wb3J0IGxpcXVpZEljb25fcG5nIGZyb20gJy4uLy4uL21pcG1hcHMvbGlxdWlkSWNvbl9wbmcuanMnO1xyXG5pbXBvcnQgc29saWRJY29uX3BuZyBmcm9tICcuLi8uLi9taXBtYXBzL3NvbGlkSWNvbl9wbmcuanMnO1xyXG5pbXBvcnQgc3RhdGVzT2ZNYXR0ZXIgZnJvbSAnLi4vc3RhdGVzT2ZNYXR0ZXIuanMnO1xyXG5cclxuY2xhc3MgU3RhdGVzSWNvbiBleHRlbmRzIFNjcmVlbkljb24ge1xyXG5cclxuICAvKipcclxuICAgKiB7T2JqZWN0fSBbb3B0aW9uc11cclxuICAgKi9cclxuICBjb25zdHJ1Y3Rvciggb3B0aW9ucyApIHtcclxuXHJcbiAgICBvcHRpb25zID0gbWVyZ2UoIHtcclxuICAgICAgc2l6ZTogU2NyZWVuLk1JTklNVU1fSE9NRV9TQ1JFRU5fSUNPTl9TSVpFLFxyXG4gICAgICBtYXhJY29uV2lkdGhQcm9wb3J0aW9uOiAwLjksXHJcbiAgICAgIG1heEljb25IZWlnaHRQcm9wb3J0aW9uOiAwLjksXHJcbiAgICAgIGZpbGw6IENvbG9yLkJMQUNLXHJcbiAgICB9LCBvcHRpb25zICk7XHJcblxyXG4gICAgLy8gaWNvbnMgcGFja2VkIGludG8gYSBuaWNlIGxpdHRsZSBib3hcclxuICAgIGNvbnN0IGljb25zQm94ID0gbmV3IEhCb3goIHtcclxuICAgICAgY2hpbGRyZW46IFsgbmV3IEltYWdlKCBzb2xpZEljb25fcG5nICksIG5ldyBJbWFnZSggbGlxdWlkSWNvbl9wbmcgKSwgbmV3IEltYWdlKCBnYXNJY29uX3BuZyApIF0sXHJcbiAgICAgIHNwYWNpbmc6IDIwLCAvLyBlbXBpcmljYWxseSBkZXRlcm1pbmVkXHJcbiAgICAgIG1heFdpZHRoOiBvcHRpb25zLnNpemUud2lkdGgsXHJcbiAgICAgIGNlbnRlclg6IG9wdGlvbnMuc2l6ZS53aWR0aCAvIDIsXHJcbiAgICAgIGNlbnRlclk6IG9wdGlvbnMuc2l6ZS5oZWlnaHQgLyAyXHJcbiAgICB9ICk7XHJcblxyXG4gICAgY29uc3QgaWNvblJvb3ROb2RlID0gbmV3IFJlY3RhbmdsZSggMCwgMCwgb3B0aW9ucy5zaXplLndpZHRoLCBvcHRpb25zLnNpemUuaGVpZ2h0LCAwLCAwLCB7XHJcbiAgICAgIGZpbGw6IENvbG9yLkJMQUNLLFxyXG4gICAgICBjaGlsZHJlbjogWyBpY29uc0JveCBdXHJcbiAgICB9ICk7XHJcblxyXG4gICAgc3VwZXIoIGljb25Sb290Tm9kZSwgb3B0aW9ucyApO1xyXG4gIH1cclxufVxyXG5cclxuc3RhdGVzT2ZNYXR0ZXIucmVnaXN0ZXIoICdTdGF0ZXNJY29uJywgU3RhdGVzSWNvbiApO1xyXG5leHBvcnQgZGVmYXVsdCBTdGF0ZXNJY29uOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxNQUFNLE1BQU0sNkJBQTZCO0FBQ2hELE9BQU9DLFVBQVUsTUFBTSxpQ0FBaUM7QUFDeEQsT0FBT0MsS0FBSyxNQUFNLGdDQUFnQztBQUNsRCxTQUFTQyxLQUFLLEVBQUVDLElBQUksRUFBRUMsS0FBSyxFQUFFQyxTQUFTLFFBQVEsZ0NBQWdDO0FBQzlFLE9BQU9DLFdBQVcsTUFBTSw4QkFBOEI7QUFDdEQsT0FBT0MsY0FBYyxNQUFNLGlDQUFpQztBQUM1RCxPQUFPQyxhQUFhLE1BQU0sZ0NBQWdDO0FBQzFELE9BQU9DLGNBQWMsTUFBTSxzQkFBc0I7QUFFakQsTUFBTUMsVUFBVSxTQUFTVixVQUFVLENBQUM7RUFFbEM7QUFDRjtBQUNBO0VBQ0VXLFdBQVdBLENBQUVDLE9BQU8sRUFBRztJQUVyQkEsT0FBTyxHQUFHWCxLQUFLLENBQUU7TUFDZlksSUFBSSxFQUFFZCxNQUFNLENBQUNlLDZCQUE2QjtNQUMxQ0Msc0JBQXNCLEVBQUUsR0FBRztNQUMzQkMsdUJBQXVCLEVBQUUsR0FBRztNQUM1QkMsSUFBSSxFQUFFZixLQUFLLENBQUNnQjtJQUNkLENBQUMsRUFBRU4sT0FBUSxDQUFDOztJQUVaO0lBQ0EsTUFBTU8sUUFBUSxHQUFHLElBQUloQixJQUFJLENBQUU7TUFDekJpQixRQUFRLEVBQUUsQ0FBRSxJQUFJaEIsS0FBSyxDQUFFSSxhQUFjLENBQUMsRUFBRSxJQUFJSixLQUFLLENBQUVHLGNBQWUsQ0FBQyxFQUFFLElBQUlILEtBQUssQ0FBRUUsV0FBWSxDQUFDLENBQUU7TUFDL0ZlLE9BQU8sRUFBRSxFQUFFO01BQUU7TUFDYkMsUUFBUSxFQUFFVixPQUFPLENBQUNDLElBQUksQ0FBQ1UsS0FBSztNQUM1QkMsT0FBTyxFQUFFWixPQUFPLENBQUNDLElBQUksQ0FBQ1UsS0FBSyxHQUFHLENBQUM7TUFDL0JFLE9BQU8sRUFBRWIsT0FBTyxDQUFDQyxJQUFJLENBQUNhLE1BQU0sR0FBRztJQUNqQyxDQUFFLENBQUM7SUFFSCxNQUFNQyxZQUFZLEdBQUcsSUFBSXRCLFNBQVMsQ0FBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFTyxPQUFPLENBQUNDLElBQUksQ0FBQ1UsS0FBSyxFQUFFWCxPQUFPLENBQUNDLElBQUksQ0FBQ2EsTUFBTSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7TUFDdkZULElBQUksRUFBRWYsS0FBSyxDQUFDZ0IsS0FBSztNQUNqQkUsUUFBUSxFQUFFLENBQUVELFFBQVE7SUFDdEIsQ0FBRSxDQUFDO0lBRUgsS0FBSyxDQUFFUSxZQUFZLEVBQUVmLE9BQVEsQ0FBQztFQUNoQztBQUNGO0FBRUFILGNBQWMsQ0FBQ21CLFFBQVEsQ0FBRSxZQUFZLEVBQUVsQixVQUFXLENBQUM7QUFDbkQsZUFBZUEsVUFBVSJ9