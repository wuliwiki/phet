// Copyright 2014-2020, University of Colorado Boulder

/**
 * This object updates the positions of atoms in a monatomic data set, i.e. where each molecule is just a single atom.
 *
 * @author John Blanco
 * @author Aaron Davis
 */

import statesOfMatter from '../../../statesOfMatter.js';

// static object (no constructor)
const MonatomicAtomPositionUpdater = {
  /**
   * @param {MoleculeForceAndMotionDataSet} moleculeDataSet
   * @public
   */
  updateAtomPositions: moleculeDataSet => {
    // Make sure this is not being used on an inappropriate data set.
    assert && assert(moleculeDataSet.atomsPerMolecule === 1);

    // Get direct references to the data in the data set.
    const atomPositions = moleculeDataSet.atomPositions;
    const moleculeCenterOfMassPositions = moleculeDataSet.moleculeCenterOfMassPositions;

    // Position the atoms to match the position of the molecules.
    for (let i = 0; i < moleculeDataSet.getNumberOfMolecules(); i++) {
      atomPositions[i] = moleculeCenterOfMassPositions[i];
    }
  }
};
statesOfMatter.register('MonatomicAtomPositionUpdater', MonatomicAtomPositionUpdater);
export default MonatomicAtomPositionUpdater;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJzdGF0ZXNPZk1hdHRlciIsIk1vbmF0b21pY0F0b21Qb3NpdGlvblVwZGF0ZXIiLCJ1cGRhdGVBdG9tUG9zaXRpb25zIiwibW9sZWN1bGVEYXRhU2V0IiwiYXNzZXJ0IiwiYXRvbXNQZXJNb2xlY3VsZSIsImF0b21Qb3NpdGlvbnMiLCJtb2xlY3VsZUNlbnRlck9mTWFzc1Bvc2l0aW9ucyIsImkiLCJnZXROdW1iZXJPZk1vbGVjdWxlcyIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiTW9uYXRvbWljQXRvbVBvc2l0aW9uVXBkYXRlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxNC0yMDIwLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBUaGlzIG9iamVjdCB1cGRhdGVzIHRoZSBwb3NpdGlvbnMgb2YgYXRvbXMgaW4gYSBtb25hdG9taWMgZGF0YSBzZXQsIGkuZS4gd2hlcmUgZWFjaCBtb2xlY3VsZSBpcyBqdXN0IGEgc2luZ2xlIGF0b20uXHJcbiAqXHJcbiAqIEBhdXRob3IgSm9obiBCbGFuY29cclxuICogQGF1dGhvciBBYXJvbiBEYXZpc1xyXG4gKi9cclxuXHJcbmltcG9ydCBzdGF0ZXNPZk1hdHRlciBmcm9tICcuLi8uLi8uLi9zdGF0ZXNPZk1hdHRlci5qcyc7XHJcblxyXG4vLyBzdGF0aWMgb2JqZWN0IChubyBjb25zdHJ1Y3RvcilcclxuY29uc3QgTW9uYXRvbWljQXRvbVBvc2l0aW9uVXBkYXRlciA9IHtcclxuXHJcbiAgLyoqXHJcbiAgICogQHBhcmFtIHtNb2xlY3VsZUZvcmNlQW5kTW90aW9uRGF0YVNldH0gbW9sZWN1bGVEYXRhU2V0XHJcbiAgICogQHB1YmxpY1xyXG4gICAqL1xyXG4gIHVwZGF0ZUF0b21Qb3NpdGlvbnM6IG1vbGVjdWxlRGF0YVNldCA9PiB7XHJcblxyXG4gICAgLy8gTWFrZSBzdXJlIHRoaXMgaXMgbm90IGJlaW5nIHVzZWQgb24gYW4gaW5hcHByb3ByaWF0ZSBkYXRhIHNldC5cclxuICAgIGFzc2VydCAmJiBhc3NlcnQoIG1vbGVjdWxlRGF0YVNldC5hdG9tc1Blck1vbGVjdWxlID09PSAxICk7XHJcblxyXG4gICAgLy8gR2V0IGRpcmVjdCByZWZlcmVuY2VzIHRvIHRoZSBkYXRhIGluIHRoZSBkYXRhIHNldC5cclxuICAgIGNvbnN0IGF0b21Qb3NpdGlvbnMgPSBtb2xlY3VsZURhdGFTZXQuYXRvbVBvc2l0aW9ucztcclxuICAgIGNvbnN0IG1vbGVjdWxlQ2VudGVyT2ZNYXNzUG9zaXRpb25zID0gbW9sZWN1bGVEYXRhU2V0Lm1vbGVjdWxlQ2VudGVyT2ZNYXNzUG9zaXRpb25zO1xyXG5cclxuICAgIC8vIFBvc2l0aW9uIHRoZSBhdG9tcyB0byBtYXRjaCB0aGUgcG9zaXRpb24gb2YgdGhlIG1vbGVjdWxlcy5cclxuICAgIGZvciAoIGxldCBpID0gMDsgaSA8IG1vbGVjdWxlRGF0YVNldC5nZXROdW1iZXJPZk1vbGVjdWxlcygpOyBpKysgKSB7XHJcbiAgICAgIGF0b21Qb3NpdGlvbnNbIGkgXSA9IG1vbGVjdWxlQ2VudGVyT2ZNYXNzUG9zaXRpb25zWyBpIF07XHJcbiAgICB9XHJcbiAgfVxyXG59O1xyXG5cclxuc3RhdGVzT2ZNYXR0ZXIucmVnaXN0ZXIoICdNb25hdG9taWNBdG9tUG9zaXRpb25VcGRhdGVyJywgTW9uYXRvbWljQXRvbVBvc2l0aW9uVXBkYXRlciApO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgTW9uYXRvbWljQXRvbVBvc2l0aW9uVXBkYXRlcjsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxjQUFjLE1BQU0sNEJBQTRCOztBQUV2RDtBQUNBLE1BQU1DLDRCQUE0QixHQUFHO0VBRW5DO0FBQ0Y7QUFDQTtBQUNBO0VBQ0VDLG1CQUFtQixFQUFFQyxlQUFlLElBQUk7SUFFdEM7SUFDQUMsTUFBTSxJQUFJQSxNQUFNLENBQUVELGVBQWUsQ0FBQ0UsZ0JBQWdCLEtBQUssQ0FBRSxDQUFDOztJQUUxRDtJQUNBLE1BQU1DLGFBQWEsR0FBR0gsZUFBZSxDQUFDRyxhQUFhO0lBQ25ELE1BQU1DLDZCQUE2QixHQUFHSixlQUFlLENBQUNJLDZCQUE2Qjs7SUFFbkY7SUFDQSxLQUFNLElBQUlDLENBQUMsR0FBRyxDQUFDLEVBQUVBLENBQUMsR0FBR0wsZUFBZSxDQUFDTSxvQkFBb0IsQ0FBQyxDQUFDLEVBQUVELENBQUMsRUFBRSxFQUFHO01BQ2pFRixhQUFhLENBQUVFLENBQUMsQ0FBRSxHQUFHRCw2QkFBNkIsQ0FBRUMsQ0FBQyxDQUFFO0lBQ3pEO0VBQ0Y7QUFDRixDQUFDO0FBRURSLGNBQWMsQ0FBQ1UsUUFBUSxDQUFFLDhCQUE4QixFQUFFVCw0QkFBNkIsQ0FBQztBQUV2RixlQUFlQSw0QkFBNEIifQ==