// Copyright 2017-2022, University of Colorado Boulder

/**
 * Icons, in the form of Scenery nodes, that are used in multiple places in the simulation to represent the various
 * atoms and molecules.
 */

import { Circle, Node } from '../../../../scenery/js/imports.js';
import statesOfMatter from '../../statesOfMatter.js';
import SOMConstants from '../SOMConstants.js';
import SubstanceType from '../SubstanceType.js';

// define the object where all of the icons will be available
const AtomAndMoleculeIconFactory = {
  createIcon: type => {
    let icon;
    switch (type) {
      case SubstanceType.NEON:
        icon = new Circle(5, {
          fill: SOMConstants.NEON_COLOR
        });
        break;
      case SubstanceType.ARGON:
        icon = new Circle(6, {
          fill: SOMConstants.ARGON_COLOR
        });
        break;
      case SubstanceType.ADJUSTABLE_ATOM:
        icon = new Circle(6, {
          fill: SOMConstants.ADJUSTABLE_ATTRACTION_COLOR
        });
        break;
      case SubstanceType.DIATOMIC_OXYGEN:
        {
          const oxygen1 = new Circle(5, {
            fill: SOMConstants.OXYGEN_COLOR
          });
          const oxygen2 = new Circle(5, {
            fill: SOMConstants.OXYGEN_COLOR,
            left: oxygen1.right - 4
          });
          icon = new Node({
            children: [oxygen1, oxygen2]
          });
          break;
        }
      case SubstanceType.WATER:
        {
          const waterOxygen = new Circle(5, {
            fill: SOMConstants.OXYGEN_COLOR
          });
          const waterHydrogen1 = new Circle(3, {
            fill: SOMConstants.HYDROGEN_COLOR,
            stroke: SOMConstants.HYDROGEN_COLOR,
            bottom: waterOxygen.top + 5,
            right: waterOxygen.left + 5
          });
          const waterHydrogen2 = new Circle(3, {
            fill: SOMConstants.HYDROGEN_COLOR,
            stroke: SOMConstants.HYDROGEN_COLOR,
            bottom: waterOxygen.top + 5,
            left: waterOxygen.right - 5
          });
          icon = new Node({
            children: [waterHydrogen2, waterOxygen, waterHydrogen1]
          });
          break;
        }
      default:
        assert && assert(false, 'unknown substance, unable to create icon');
    }
    return icon;
  }
};
statesOfMatter.register('AtomAndMoleculeIconFactory', AtomAndMoleculeIconFactory);
export default AtomAndMoleculeIconFactory;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJDaXJjbGUiLCJOb2RlIiwic3RhdGVzT2ZNYXR0ZXIiLCJTT01Db25zdGFudHMiLCJTdWJzdGFuY2VUeXBlIiwiQXRvbUFuZE1vbGVjdWxlSWNvbkZhY3RvcnkiLCJjcmVhdGVJY29uIiwidHlwZSIsImljb24iLCJORU9OIiwiZmlsbCIsIk5FT05fQ09MT1IiLCJBUkdPTiIsIkFSR09OX0NPTE9SIiwiQURKVVNUQUJMRV9BVE9NIiwiQURKVVNUQUJMRV9BVFRSQUNUSU9OX0NPTE9SIiwiRElBVE9NSUNfT1hZR0VOIiwib3h5Z2VuMSIsIk9YWUdFTl9DT0xPUiIsIm94eWdlbjIiLCJsZWZ0IiwicmlnaHQiLCJjaGlsZHJlbiIsIldBVEVSIiwid2F0ZXJPeHlnZW4iLCJ3YXRlckh5ZHJvZ2VuMSIsIkhZRFJPR0VOX0NPTE9SIiwic3Ryb2tlIiwiYm90dG9tIiwidG9wIiwid2F0ZXJIeWRyb2dlbjIiLCJhc3NlcnQiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIkF0b21BbmRNb2xlY3VsZUljb25GYWN0b3J5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE3LTIwMjIsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIEljb25zLCBpbiB0aGUgZm9ybSBvZiBTY2VuZXJ5IG5vZGVzLCB0aGF0IGFyZSB1c2VkIGluIG11bHRpcGxlIHBsYWNlcyBpbiB0aGUgc2ltdWxhdGlvbiB0byByZXByZXNlbnQgdGhlIHZhcmlvdXNcclxuICogYXRvbXMgYW5kIG1vbGVjdWxlcy5cclxuICovXHJcblxyXG5pbXBvcnQgeyBDaXJjbGUsIE5vZGUgfSBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgc3RhdGVzT2ZNYXR0ZXIgZnJvbSAnLi4vLi4vc3RhdGVzT2ZNYXR0ZXIuanMnO1xyXG5pbXBvcnQgU09NQ29uc3RhbnRzIGZyb20gJy4uL1NPTUNvbnN0YW50cy5qcyc7XHJcbmltcG9ydCBTdWJzdGFuY2VUeXBlIGZyb20gJy4uL1N1YnN0YW5jZVR5cGUuanMnO1xyXG5cclxuLy8gZGVmaW5lIHRoZSBvYmplY3Qgd2hlcmUgYWxsIG9mIHRoZSBpY29ucyB3aWxsIGJlIGF2YWlsYWJsZVxyXG5jb25zdCBBdG9tQW5kTW9sZWN1bGVJY29uRmFjdG9yeSA9IHtcclxuXHJcbiAgY3JlYXRlSWNvbjogdHlwZSA9PiB7XHJcbiAgICBsZXQgaWNvbjtcclxuICAgIHN3aXRjaCggdHlwZSApIHtcclxuXHJcbiAgICAgIGNhc2UgU3Vic3RhbmNlVHlwZS5ORU9OOlxyXG4gICAgICAgIGljb24gPSBuZXcgQ2lyY2xlKCA1LCB7IGZpbGw6IFNPTUNvbnN0YW50cy5ORU9OX0NPTE9SIH0gKTtcclxuICAgICAgICBicmVhaztcclxuXHJcbiAgICAgIGNhc2UgU3Vic3RhbmNlVHlwZS5BUkdPTjpcclxuICAgICAgICBpY29uID0gbmV3IENpcmNsZSggNiwgeyBmaWxsOiBTT01Db25zdGFudHMuQVJHT05fQ09MT1IgfSApO1xyXG4gICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgY2FzZSBTdWJzdGFuY2VUeXBlLkFESlVTVEFCTEVfQVRPTTpcclxuICAgICAgICBpY29uID0gbmV3IENpcmNsZSggNiwgeyBmaWxsOiBTT01Db25zdGFudHMuQURKVVNUQUJMRV9BVFRSQUNUSU9OX0NPTE9SIH0gKTtcclxuICAgICAgICBicmVhaztcclxuXHJcbiAgICAgIGNhc2UgU3Vic3RhbmNlVHlwZS5ESUFUT01JQ19PWFlHRU46IHtcclxuICAgICAgICBjb25zdCBveHlnZW4xID0gbmV3IENpcmNsZSggNSwgeyBmaWxsOiBTT01Db25zdGFudHMuT1hZR0VOX0NPTE9SIH0gKTtcclxuICAgICAgICBjb25zdCBveHlnZW4yID0gbmV3IENpcmNsZSggNSwgeyBmaWxsOiBTT01Db25zdGFudHMuT1hZR0VOX0NPTE9SLCBsZWZ0OiBveHlnZW4xLnJpZ2h0IC0gNCB9ICk7XHJcbiAgICAgICAgaWNvbiA9IG5ldyBOb2RlKCB7IGNoaWxkcmVuOiBbIG94eWdlbjEsIG94eWdlbjIgXSB9ICk7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGNhc2UgU3Vic3RhbmNlVHlwZS5XQVRFUjoge1xyXG4gICAgICAgIGNvbnN0IHdhdGVyT3h5Z2VuID0gbmV3IENpcmNsZSggNSwgeyBmaWxsOiBTT01Db25zdGFudHMuT1hZR0VOX0NPTE9SIH0gKTtcclxuICAgICAgICBjb25zdCB3YXRlckh5ZHJvZ2VuMSA9IG5ldyBDaXJjbGUoIDMsIHtcclxuICAgICAgICAgIGZpbGw6IFNPTUNvbnN0YW50cy5IWURST0dFTl9DT0xPUixcclxuICAgICAgICAgIHN0cm9rZTogU09NQ29uc3RhbnRzLkhZRFJPR0VOX0NPTE9SLCBib3R0b206IHdhdGVyT3h5Z2VuLnRvcCArIDUsIHJpZ2h0OiB3YXRlck94eWdlbi5sZWZ0ICsgNVxyXG4gICAgICAgIH0gKTtcclxuICAgICAgICBjb25zdCB3YXRlckh5ZHJvZ2VuMiA9IG5ldyBDaXJjbGUoIDMsIHtcclxuICAgICAgICAgIGZpbGw6IFNPTUNvbnN0YW50cy5IWURST0dFTl9DT0xPUixcclxuICAgICAgICAgIHN0cm9rZTogU09NQ29uc3RhbnRzLkhZRFJPR0VOX0NPTE9SLCBib3R0b206IHdhdGVyT3h5Z2VuLnRvcCArIDUsIGxlZnQ6IHdhdGVyT3h5Z2VuLnJpZ2h0IC0gNVxyXG4gICAgICAgIH0gKTtcclxuICAgICAgICBpY29uID0gbmV3IE5vZGUoIHsgY2hpbGRyZW46IFsgd2F0ZXJIeWRyb2dlbjIsIHdhdGVyT3h5Z2VuLCB3YXRlckh5ZHJvZ2VuMSBdIH0gKTtcclxuICAgICAgICBicmVhaztcclxuICAgICAgfVxyXG5cclxuICAgICAgZGVmYXVsdDpcclxuICAgICAgICBhc3NlcnQgJiYgYXNzZXJ0KCBmYWxzZSwgJ3Vua25vd24gc3Vic3RhbmNlLCB1bmFibGUgdG8gY3JlYXRlIGljb24nICk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gaWNvbjtcclxuICB9XHJcbn07XHJcblxyXG5zdGF0ZXNPZk1hdHRlci5yZWdpc3RlciggJ0F0b21BbmRNb2xlY3VsZUljb25GYWN0b3J5JywgQXRvbUFuZE1vbGVjdWxlSWNvbkZhY3RvcnkgKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IEF0b21BbmRNb2xlY3VsZUljb25GYWN0b3J5OyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsU0FBU0EsTUFBTSxFQUFFQyxJQUFJLFFBQVEsbUNBQW1DO0FBQ2hFLE9BQU9DLGNBQWMsTUFBTSx5QkFBeUI7QUFDcEQsT0FBT0MsWUFBWSxNQUFNLG9CQUFvQjtBQUM3QyxPQUFPQyxhQUFhLE1BQU0scUJBQXFCOztBQUUvQztBQUNBLE1BQU1DLDBCQUEwQixHQUFHO0VBRWpDQyxVQUFVLEVBQUVDLElBQUksSUFBSTtJQUNsQixJQUFJQyxJQUFJO0lBQ1IsUUFBUUQsSUFBSTtNQUVWLEtBQUtILGFBQWEsQ0FBQ0ssSUFBSTtRQUNyQkQsSUFBSSxHQUFHLElBQUlSLE1BQU0sQ0FBRSxDQUFDLEVBQUU7VUFBRVUsSUFBSSxFQUFFUCxZQUFZLENBQUNRO1FBQVcsQ0FBRSxDQUFDO1FBQ3pEO01BRUYsS0FBS1AsYUFBYSxDQUFDUSxLQUFLO1FBQ3RCSixJQUFJLEdBQUcsSUFBSVIsTUFBTSxDQUFFLENBQUMsRUFBRTtVQUFFVSxJQUFJLEVBQUVQLFlBQVksQ0FBQ1U7UUFBWSxDQUFFLENBQUM7UUFDMUQ7TUFFRixLQUFLVCxhQUFhLENBQUNVLGVBQWU7UUFDaENOLElBQUksR0FBRyxJQUFJUixNQUFNLENBQUUsQ0FBQyxFQUFFO1VBQUVVLElBQUksRUFBRVAsWUFBWSxDQUFDWTtRQUE0QixDQUFFLENBQUM7UUFDMUU7TUFFRixLQUFLWCxhQUFhLENBQUNZLGVBQWU7UUFBRTtVQUNsQyxNQUFNQyxPQUFPLEdBQUcsSUFBSWpCLE1BQU0sQ0FBRSxDQUFDLEVBQUU7WUFBRVUsSUFBSSxFQUFFUCxZQUFZLENBQUNlO1VBQWEsQ0FBRSxDQUFDO1VBQ3BFLE1BQU1DLE9BQU8sR0FBRyxJQUFJbkIsTUFBTSxDQUFFLENBQUMsRUFBRTtZQUFFVSxJQUFJLEVBQUVQLFlBQVksQ0FBQ2UsWUFBWTtZQUFFRSxJQUFJLEVBQUVILE9BQU8sQ0FBQ0ksS0FBSyxHQUFHO1VBQUUsQ0FBRSxDQUFDO1VBQzdGYixJQUFJLEdBQUcsSUFBSVAsSUFBSSxDQUFFO1lBQUVxQixRQUFRLEVBQUUsQ0FBRUwsT0FBTyxFQUFFRSxPQUFPO1VBQUcsQ0FBRSxDQUFDO1VBQ3JEO1FBQ0Y7TUFFQSxLQUFLZixhQUFhLENBQUNtQixLQUFLO1FBQUU7VUFDeEIsTUFBTUMsV0FBVyxHQUFHLElBQUl4QixNQUFNLENBQUUsQ0FBQyxFQUFFO1lBQUVVLElBQUksRUFBRVAsWUFBWSxDQUFDZTtVQUFhLENBQUUsQ0FBQztVQUN4RSxNQUFNTyxjQUFjLEdBQUcsSUFBSXpCLE1BQU0sQ0FBRSxDQUFDLEVBQUU7WUFDcENVLElBQUksRUFBRVAsWUFBWSxDQUFDdUIsY0FBYztZQUNqQ0MsTUFBTSxFQUFFeEIsWUFBWSxDQUFDdUIsY0FBYztZQUFFRSxNQUFNLEVBQUVKLFdBQVcsQ0FBQ0ssR0FBRyxHQUFHLENBQUM7WUFBRVIsS0FBSyxFQUFFRyxXQUFXLENBQUNKLElBQUksR0FBRztVQUM5RixDQUFFLENBQUM7VUFDSCxNQUFNVSxjQUFjLEdBQUcsSUFBSTlCLE1BQU0sQ0FBRSxDQUFDLEVBQUU7WUFDcENVLElBQUksRUFBRVAsWUFBWSxDQUFDdUIsY0FBYztZQUNqQ0MsTUFBTSxFQUFFeEIsWUFBWSxDQUFDdUIsY0FBYztZQUFFRSxNQUFNLEVBQUVKLFdBQVcsQ0FBQ0ssR0FBRyxHQUFHLENBQUM7WUFBRVQsSUFBSSxFQUFFSSxXQUFXLENBQUNILEtBQUssR0FBRztVQUM5RixDQUFFLENBQUM7VUFDSGIsSUFBSSxHQUFHLElBQUlQLElBQUksQ0FBRTtZQUFFcUIsUUFBUSxFQUFFLENBQUVRLGNBQWMsRUFBRU4sV0FBVyxFQUFFQyxjQUFjO1VBQUcsQ0FBRSxDQUFDO1VBQ2hGO1FBQ0Y7TUFFQTtRQUNFTSxNQUFNLElBQUlBLE1BQU0sQ0FBRSxLQUFLLEVBQUUsMENBQTJDLENBQUM7SUFDekU7SUFDQSxPQUFPdkIsSUFBSTtFQUNiO0FBQ0YsQ0FBQztBQUVETixjQUFjLENBQUM4QixRQUFRLENBQUUsNEJBQTRCLEVBQUUzQiwwQkFBMkIsQ0FBQztBQUVuRixlQUFlQSwwQkFBMEIifQ==