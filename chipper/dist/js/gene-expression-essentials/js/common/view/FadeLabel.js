// Copyright 2015-2022, University of Colorado Boulder

/**
 * Node that is a textual label that can fade in and out.
 *
 * @author Sharfudeen Ashraf
 * @author John Blanco
 * @author Aadish Gupta
 */

import PhetFont from '../../../../scenery-phet/js/PhetFont.js';
import { Node, Text } from '../../../../scenery/js/imports.js';
import geneExpressionEssentials from '../../geneExpressionEssentials.js';
import FadeTimer from './FadeTimer.js';

// constants
const FONT = new PhetFont(14);
const TIMER_DELAY = 100; // In milliseconds.

class FadeLabel extends Node {
  /**
   * @param {string} text
   * @param {boolean} initiallyVisible
   * @param {Property.<number>} existenceStrengthProperty
   */
  constructor(text, initiallyVisible, existenceStrengthProperty) {
    super({
      pickable: false
    });
    this.fadeDelta = 0; // @private
    let opacity = 0;
    const label = new Text(text, {
      font: FONT,
      maxWidth: 80
    });
    this.addChild(label);
    if (!initiallyVisible) {
      this.setOpacity(0);
      opacity = 0;
    } else {
      opacity = 1;
    }

    // Create the timers that will be used for fading in and out.
    this.fadeInTimer = new FadeTimer(TIMER_DELAY, () => {
      opacity = Math.min(opacity + this.fadeDelta, existenceStrengthProperty.get());
      updateTransparency();
      if (opacity >= 1) {
        this.fadeInTimer.stop();
      }
    });
    this.fadeOutTimer = new FadeTimer(TIMER_DELAY, () => {
      opacity = Math.min(Math.max(opacity - this.fadeDelta, 0), existenceStrengthProperty.get());
      updateTransparency();
      if (opacity <= 0) {
        this.fadeOutTimer.stop();
      }
    });
    const updateTransparency = () => {
      this.opacity = Math.min(existenceStrengthProperty.get(), opacity);
    };

    // Update if existence strength changes.
    existenceStrengthProperty.link(() => {
      updateTransparency();
    });
  }

  /**
   * @param {number} time // in millseconds
   * @public
   */
  startFadeIn(time) {
    if (this.fadeOutTimer.isRunningProperty.get()) {
      this.fadeOutTimer.stop();
    }
    this.fadeDelta = TIMER_DELAY / time;
    this.fadeInTimer.restart();
  }

  /**
   * @param {number} time // in millseconds
   * @public
   */
  startFadeOut(time) {
    if (this.fadeInTimer.isRunningProperty.get()) {
      this.fadeInTimer.stop();
    }
    this.fadeDelta = TIMER_DELAY / time;
    this.fadeOutTimer.restart();
  }
}
geneExpressionEssentials.register('FadeLabel', FadeLabel);
export default FadeLabel;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQaGV0Rm9udCIsIk5vZGUiLCJUZXh0IiwiZ2VuZUV4cHJlc3Npb25Fc3NlbnRpYWxzIiwiRmFkZVRpbWVyIiwiRk9OVCIsIlRJTUVSX0RFTEFZIiwiRmFkZUxhYmVsIiwiY29uc3RydWN0b3IiLCJ0ZXh0IiwiaW5pdGlhbGx5VmlzaWJsZSIsImV4aXN0ZW5jZVN0cmVuZ3RoUHJvcGVydHkiLCJwaWNrYWJsZSIsImZhZGVEZWx0YSIsIm9wYWNpdHkiLCJsYWJlbCIsImZvbnQiLCJtYXhXaWR0aCIsImFkZENoaWxkIiwic2V0T3BhY2l0eSIsImZhZGVJblRpbWVyIiwiTWF0aCIsIm1pbiIsImdldCIsInVwZGF0ZVRyYW5zcGFyZW5jeSIsInN0b3AiLCJmYWRlT3V0VGltZXIiLCJtYXgiLCJsaW5rIiwic3RhcnRGYWRlSW4iLCJ0aW1lIiwiaXNSdW5uaW5nUHJvcGVydHkiLCJyZXN0YXJ0Iiwic3RhcnRGYWRlT3V0IiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJGYWRlTGFiZWwuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTUtMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogTm9kZSB0aGF0IGlzIGEgdGV4dHVhbCBsYWJlbCB0aGF0IGNhbiBmYWRlIGluIGFuZCBvdXQuXHJcbiAqXHJcbiAqIEBhdXRob3IgU2hhcmZ1ZGVlbiBBc2hyYWZcclxuICogQGF1dGhvciBKb2huIEJsYW5jb1xyXG4gKiBAYXV0aG9yIEFhZGlzaCBHdXB0YVxyXG4gKi9cclxuXHJcbmltcG9ydCBQaGV0Rm9udCBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5LXBoZXQvanMvUGhldEZvbnQuanMnO1xyXG5pbXBvcnQgeyBOb2RlLCBUZXh0IH0gZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IGdlbmVFeHByZXNzaW9uRXNzZW50aWFscyBmcm9tICcuLi8uLi9nZW5lRXhwcmVzc2lvbkVzc2VudGlhbHMuanMnO1xyXG5pbXBvcnQgRmFkZVRpbWVyIGZyb20gJy4vRmFkZVRpbWVyLmpzJztcclxuXHJcbi8vIGNvbnN0YW50c1xyXG5jb25zdCBGT05UID0gbmV3IFBoZXRGb250KCAxNCApO1xyXG5jb25zdCBUSU1FUl9ERUxBWSA9IDEwMDsgLy8gSW4gbWlsbGlzZWNvbmRzLlxyXG5cclxuY2xhc3MgRmFkZUxhYmVsIGV4dGVuZHMgTm9kZSB7XHJcblxyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB0ZXh0XHJcbiAgICogQHBhcmFtIHtib29sZWFufSBpbml0aWFsbHlWaXNpYmxlXHJcbiAgICogQHBhcmFtIHtQcm9wZXJ0eS48bnVtYmVyPn0gZXhpc3RlbmNlU3RyZW5ndGhQcm9wZXJ0eVxyXG4gICAqL1xyXG4gIGNvbnN0cnVjdG9yKCB0ZXh0LCBpbml0aWFsbHlWaXNpYmxlLCBleGlzdGVuY2VTdHJlbmd0aFByb3BlcnR5ICkge1xyXG4gICAgc3VwZXIoIHsgcGlja2FibGU6IGZhbHNlIH0gKTtcclxuICAgIHRoaXMuZmFkZURlbHRhID0gMDsgLy8gQHByaXZhdGVcclxuICAgIGxldCBvcGFjaXR5ID0gMDtcclxuXHJcbiAgICBjb25zdCBsYWJlbCA9IG5ldyBUZXh0KCB0ZXh0LCB7IGZvbnQ6IEZPTlQsIG1heFdpZHRoOiA4MCB9ICk7XHJcbiAgICB0aGlzLmFkZENoaWxkKCBsYWJlbCApO1xyXG5cclxuICAgIGlmICggIWluaXRpYWxseVZpc2libGUgKSB7XHJcbiAgICAgIHRoaXMuc2V0T3BhY2l0eSggMCApO1xyXG4gICAgICBvcGFjaXR5ID0gMDtcclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICBvcGFjaXR5ID0gMTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBDcmVhdGUgdGhlIHRpbWVycyB0aGF0IHdpbGwgYmUgdXNlZCBmb3IgZmFkaW5nIGluIGFuZCBvdXQuXHJcbiAgICB0aGlzLmZhZGVJblRpbWVyID0gbmV3IEZhZGVUaW1lciggVElNRVJfREVMQVksICgpID0+IHtcclxuICAgICAgb3BhY2l0eSA9IE1hdGgubWluKCBvcGFjaXR5ICsgdGhpcy5mYWRlRGVsdGEsIGV4aXN0ZW5jZVN0cmVuZ3RoUHJvcGVydHkuZ2V0KCkgKTtcclxuICAgICAgdXBkYXRlVHJhbnNwYXJlbmN5KCk7XHJcbiAgICAgIGlmICggb3BhY2l0eSA+PSAxICkge1xyXG4gICAgICAgIHRoaXMuZmFkZUluVGltZXIuc3RvcCgpO1xyXG4gICAgICB9XHJcbiAgICB9ICk7XHJcblxyXG4gICAgdGhpcy5mYWRlT3V0VGltZXIgPSBuZXcgRmFkZVRpbWVyKCBUSU1FUl9ERUxBWSwgKCkgPT4ge1xyXG4gICAgICBvcGFjaXR5ID0gTWF0aC5taW4oIE1hdGgubWF4KCBvcGFjaXR5IC0gdGhpcy5mYWRlRGVsdGEsIDAgKSwgZXhpc3RlbmNlU3RyZW5ndGhQcm9wZXJ0eS5nZXQoKSApO1xyXG4gICAgICB1cGRhdGVUcmFuc3BhcmVuY3koKTtcclxuICAgICAgaWYgKCBvcGFjaXR5IDw9IDAgKSB7XHJcbiAgICAgICAgdGhpcy5mYWRlT3V0VGltZXIuc3RvcCgpO1xyXG4gICAgICB9XHJcbiAgICB9ICk7XHJcblxyXG4gICAgY29uc3QgdXBkYXRlVHJhbnNwYXJlbmN5ID0gKCkgPT4ge1xyXG4gICAgICB0aGlzLm9wYWNpdHkgPSBNYXRoLm1pbiggZXhpc3RlbmNlU3RyZW5ndGhQcm9wZXJ0eS5nZXQoKSwgb3BhY2l0eSApO1xyXG4gICAgfTtcclxuXHJcbiAgICAvLyBVcGRhdGUgaWYgZXhpc3RlbmNlIHN0cmVuZ3RoIGNoYW5nZXMuXHJcbiAgICBleGlzdGVuY2VTdHJlbmd0aFByb3BlcnR5LmxpbmsoICgpID0+IHtcclxuICAgICAgdXBkYXRlVHJhbnNwYXJlbmN5KCk7XHJcbiAgICB9ICk7XHJcblxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQHBhcmFtIHtudW1iZXJ9IHRpbWUgLy8gaW4gbWlsbHNlY29uZHNcclxuICAgKiBAcHVibGljXHJcbiAgICovXHJcbiAgc3RhcnRGYWRlSW4oIHRpbWUgKSB7XHJcbiAgICBpZiAoIHRoaXMuZmFkZU91dFRpbWVyLmlzUnVubmluZ1Byb3BlcnR5LmdldCgpICkge1xyXG4gICAgICB0aGlzLmZhZGVPdXRUaW1lci5zdG9wKCk7XHJcbiAgICB9XHJcbiAgICB0aGlzLmZhZGVEZWx0YSA9IFRJTUVSX0RFTEFZIC8gdGltZTtcclxuICAgIHRoaXMuZmFkZUluVGltZXIucmVzdGFydCgpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQHBhcmFtIHtudW1iZXJ9IHRpbWUgLy8gaW4gbWlsbHNlY29uZHNcclxuICAgKiBAcHVibGljXHJcbiAgICovXHJcbiAgc3RhcnRGYWRlT3V0KCB0aW1lICkge1xyXG4gICAgaWYgKCB0aGlzLmZhZGVJblRpbWVyLmlzUnVubmluZ1Byb3BlcnR5LmdldCgpICkge1xyXG4gICAgICB0aGlzLmZhZGVJblRpbWVyLnN0b3AoKTtcclxuICAgIH1cclxuICAgIHRoaXMuZmFkZURlbHRhID0gVElNRVJfREVMQVkgLyB0aW1lO1xyXG4gICAgdGhpcy5mYWRlT3V0VGltZXIucmVzdGFydCgpO1xyXG4gIH1cclxufVxyXG5cclxuZ2VuZUV4cHJlc3Npb25Fc3NlbnRpYWxzLnJlZ2lzdGVyKCAnRmFkZUxhYmVsJywgRmFkZUxhYmVsICk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBGYWRlTGFiZWw7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxRQUFRLE1BQU0seUNBQXlDO0FBQzlELFNBQVNDLElBQUksRUFBRUMsSUFBSSxRQUFRLG1DQUFtQztBQUM5RCxPQUFPQyx3QkFBd0IsTUFBTSxtQ0FBbUM7QUFDeEUsT0FBT0MsU0FBUyxNQUFNLGdCQUFnQjs7QUFFdEM7QUFDQSxNQUFNQyxJQUFJLEdBQUcsSUFBSUwsUUFBUSxDQUFFLEVBQUcsQ0FBQztBQUMvQixNQUFNTSxXQUFXLEdBQUcsR0FBRyxDQUFDLENBQUM7O0FBRXpCLE1B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