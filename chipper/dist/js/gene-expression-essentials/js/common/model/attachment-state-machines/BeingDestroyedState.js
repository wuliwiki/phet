// Copyright 2015-2020, University of Colorado Boulder

/**
 * One of the states for MessengerRnaAttachmentStateMachine. mRna enters this state when it is being destroyed.
 *
 * @author John Blanco
 * @author Mohamed Safi
 * @author Aadish Gupta
 */

import geneExpressionEssentials from '../../../geneExpressionEssentials.js';
import StillnessMotionStrategy from '../motion-strategies/StillnessMotionStrategy.js';
import AttachmentState from './AttachmentState.js';
class BeingDestroyedState extends AttachmentState {
  /**
   */
  constructor() {
    super();
  }

  /**
   * @override
   * @param {AttachmentStateMachine} enclosingStateMachine
   * @public
   */
  entered(enclosingStateMachine) {
    // Set a motion strategy that will not move this molecule, since its position will be defined by the destroyer and
    // translators.
    enclosingStateMachine.biomolecule.setMotionStrategy(new StillnessMotionStrategy());
  }
}
geneExpressionEssentials.register('BeingDestroyedState', BeingDestroyedState);
export default BeingDestroyedState;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJnZW5lRXhwcmVzc2lvbkVzc2VudGlhbHMiLCJTdGlsbG5lc3NNb3Rpb25TdHJhdGVneSIsIkF0dGFjaG1lbnRTdGF0ZSIsIkJlaW5nRGVzdHJveWVkU3RhdGUiLCJjb25zdHJ1Y3RvciIsImVudGVyZWQiLCJlbmNsb3NpbmdTdGF0ZU1hY2hpbmUiLCJiaW9tb2xlY3VsZSIsInNldE1vdGlvblN0cmF0ZWd5IiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJCZWluZ0Rlc3Ryb3llZFN0YXRlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE1LTIwMjAsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIE9uZSBvZiB0aGUgc3RhdGVzIGZvciBNZXNzZW5nZXJSbmFBdHRhY2htZW50U3RhdGVNYWNoaW5lLiBtUm5hIGVudGVycyB0aGlzIHN0YXRlIHdoZW4gaXQgaXMgYmVpbmcgZGVzdHJveWVkLlxyXG4gKlxyXG4gKiBAYXV0aG9yIEpvaG4gQmxhbmNvXHJcbiAqIEBhdXRob3IgTW9oYW1lZCBTYWZpXHJcbiAqIEBhdXRob3IgQWFkaXNoIEd1cHRhXHJcbiAqL1xyXG5cclxuaW1wb3J0IGdlbmVFeHByZXNzaW9uRXNzZW50aWFscyBmcm9tICcuLi8uLi8uLi9nZW5lRXhwcmVzc2lvbkVzc2VudGlhbHMuanMnO1xyXG5pbXBvcnQgU3RpbGxuZXNzTW90aW9uU3RyYXRlZ3kgZnJvbSAnLi4vbW90aW9uLXN0cmF0ZWdpZXMvU3RpbGxuZXNzTW90aW9uU3RyYXRlZ3kuanMnO1xyXG5pbXBvcnQgQXR0YWNobWVudFN0YXRlIGZyb20gJy4vQXR0YWNobWVudFN0YXRlLmpzJztcclxuXHJcbmNsYXNzIEJlaW5nRGVzdHJveWVkU3RhdGUgZXh0ZW5kcyBBdHRhY2htZW50U3RhdGUge1xyXG5cclxuICAvKipcclxuICAgKi9cclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIHN1cGVyKCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBAb3ZlcnJpZGVcclxuICAgKiBAcGFyYW0ge0F0dGFjaG1lbnRTdGF0ZU1hY2hpbmV9IGVuY2xvc2luZ1N0YXRlTWFjaGluZVxyXG4gICAqIEBwdWJsaWNcclxuICAgKi9cclxuICBlbnRlcmVkKCBlbmNsb3NpbmdTdGF0ZU1hY2hpbmUgKSB7XHJcblxyXG4gICAgLy8gU2V0IGEgbW90aW9uIHN0cmF0ZWd5IHRoYXQgd2lsbCBub3QgbW92ZSB0aGlzIG1vbGVjdWxlLCBzaW5jZSBpdHMgcG9zaXRpb24gd2lsbCBiZSBkZWZpbmVkIGJ5IHRoZSBkZXN0cm95ZXIgYW5kXHJcbiAgICAvLyB0cmFuc2xhdG9ycy5cclxuICAgIGVuY2xvc2luZ1N0YXRlTWFjaGluZS5iaW9tb2xlY3VsZS5zZXRNb3Rpb25TdHJhdGVneSggbmV3IFN0aWxsbmVzc01vdGlvblN0cmF0ZWd5KCkgKTtcclxuICB9XHJcbn1cclxuXHJcbmdlbmVFeHByZXNzaW9uRXNzZW50aWFscy5yZWdpc3RlciggJ0JlaW5nRGVzdHJveWVkU3RhdGUnLCBCZWluZ0Rlc3Ryb3llZFN0YXRlICk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBCZWluZ0Rlc3Ryb3llZFN0YXRlOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0Esd0JBQXdCLE1BQU0sc0NBQXNDO0FBQzNFLE9BQU9DLHVCQUF1QixNQUFNLGlEQUFpRDtBQUNyRixPQUFPQyxlQUFlLE1BQU0sc0JBQXNCO0FBRWxELE1BQU1DLG1CQUFtQixTQUFTRCxlQUFlLENBQUM7RUFFaEQ7QUFDRjtFQUNFRSxXQUFXQSxDQUFBLEVBQUc7SUFDWixLQUFLLENBQUMsQ0FBQztFQUNUOztFQUVBO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7RUFDRUMsT0FBT0EsQ0FBRUMscUJBQXFCLEVBQUc7SUFFL0I7SUFDQTtJQUNBQSxxQkFBcUIsQ0FBQ0MsV0FBVyxDQUFDQyxpQkFBaUIsQ0FBRSxJQUFJUCx1QkFBdUIsQ0FBQyxDQUFFLENBQUM7RUFDdEY7QUFDRjtBQUVBRCx3QkFBd0IsQ0FBQ1MsUUFBUSxDQUFFLHFCQUFxQixFQUFFTixtQkFBb0IsQ0FBQztBQUUvRSxlQUFlQSxtQkFBbUIifQ==