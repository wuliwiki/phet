// Copyright 2015-2020, University of Colorado Boulder

/**
 * Attachment state machine for all transcription factor molecules. This class controls how transcription factors behave
 * with respect to attaching to and detaching from the DNA molecule, which is the only thing to which the transcription
 * factors attach.
 *
 * @author John Blanco
 * @author Mohamed Safi
 * @author Aadish Gupta
 */

import geneExpressionEssentials from '../../../geneExpressionEssentials.js';
import GenericAttachmentStateMachine from './GenericAttachmentStateMachine.js';
import TranscriptionFactorAttachedState from './TranscriptionFactorAttachedState.js';
class TranscriptionFactorAttachmentStateMachine extends GenericAttachmentStateMachine {
  /**
   * @param {MobileBiomolecule} biomolecule
   */
  constructor(biomolecule) {
    super(biomolecule);

    // Set up a new "attached" state, since the behavior is different from  the default.
    this.attachedState = new TranscriptionFactorAttachedState(this); //@public

    // Threshold for the detachment algorithm, used in deciding whether or not to detach completely from the DNA at a
    // given time step.
    this.detachFromDnaThreshold = 1; //@public
  }
}

geneExpressionEssentials.register('TranscriptionFactorAttachmentStateMachine', TranscriptionFactorAttachmentStateMachine);
export default TranscriptionFactorAttachmentStateMachine;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJnZW5lRXhwcmVzc2lvbkVzc2VudGlhbHMiLCJHZW5lcmljQXR0YWNobWVudFN0YXRlTWFjaGluZSIsIlRyYW5zY3JpcHRpb25GYWN0b3JBdHRhY2hlZFN0YXRlIiwiVHJhbnNjcmlwdGlvbkZhY3RvckF0dGFjaG1lbnRTdGF0ZU1hY2hpbmUiLCJjb25zdHJ1Y3RvciIsImJpb21vbGVjdWxlIiwiYXR0YWNoZWRTdGF0ZSIsImRldGFjaEZyb21EbmFUaHJlc2hvbGQiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIlRyYW5zY3JpcHRpb25GYWN0b3JBdHRhY2htZW50U3RhdGVNYWNoaW5lLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE1LTIwMjAsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIEF0dGFjaG1lbnQgc3RhdGUgbWFjaGluZSBmb3IgYWxsIHRyYW5zY3JpcHRpb24gZmFjdG9yIG1vbGVjdWxlcy4gVGhpcyBjbGFzcyBjb250cm9scyBob3cgdHJhbnNjcmlwdGlvbiBmYWN0b3JzIGJlaGF2ZVxyXG4gKiB3aXRoIHJlc3BlY3QgdG8gYXR0YWNoaW5nIHRvIGFuZCBkZXRhY2hpbmcgZnJvbSB0aGUgRE5BIG1vbGVjdWxlLCB3aGljaCBpcyB0aGUgb25seSB0aGluZyB0byB3aGljaCB0aGUgdHJhbnNjcmlwdGlvblxyXG4gKiBmYWN0b3JzIGF0dGFjaC5cclxuICpcclxuICogQGF1dGhvciBKb2huIEJsYW5jb1xyXG4gKiBAYXV0aG9yIE1vaGFtZWQgU2FmaVxyXG4gKiBAYXV0aG9yIEFhZGlzaCBHdXB0YVxyXG4gKi9cclxuXHJcbmltcG9ydCBnZW5lRXhwcmVzc2lvbkVzc2VudGlhbHMgZnJvbSAnLi4vLi4vLi4vZ2VuZUV4cHJlc3Npb25Fc3NlbnRpYWxzLmpzJztcclxuaW1wb3J0IEdlbmVyaWNBdHRhY2htZW50U3RhdGVNYWNoaW5lIGZyb20gJy4vR2VuZXJpY0F0dGFjaG1lbnRTdGF0ZU1hY2hpbmUuanMnO1xyXG5pbXBvcnQgVHJhbnNjcmlwdGlvbkZhY3RvckF0dGFjaGVkU3RhdGUgZnJvbSAnLi9UcmFuc2NyaXB0aW9uRmFjdG9yQXR0YWNoZWRTdGF0ZS5qcyc7XHJcblxyXG5jbGFzcyBUcmFuc2NyaXB0aW9uRmFjdG9yQXR0YWNobWVudFN0YXRlTWFjaGluZSBleHRlbmRzIEdlbmVyaWNBdHRhY2htZW50U3RhdGVNYWNoaW5lIHtcclxuXHJcbiAgLyoqXHJcbiAgICogQHBhcmFtIHtNb2JpbGVCaW9tb2xlY3VsZX0gYmlvbW9sZWN1bGVcclxuICAgKi9cclxuICBjb25zdHJ1Y3RvciggYmlvbW9sZWN1bGUgKSB7XHJcbiAgICBzdXBlciggYmlvbW9sZWN1bGUgKTtcclxuXHJcbiAgICAvLyBTZXQgdXAgYSBuZXcgXCJhdHRhY2hlZFwiIHN0YXRlLCBzaW5jZSB0aGUgYmVoYXZpb3IgaXMgZGlmZmVyZW50IGZyb20gIHRoZSBkZWZhdWx0LlxyXG4gICAgdGhpcy5hdHRhY2hlZFN0YXRlID0gbmV3IFRyYW5zY3JpcHRpb25GYWN0b3JBdHRhY2hlZFN0YXRlKCB0aGlzICk7IC8vQHB1YmxpY1xyXG5cclxuICAgIC8vIFRocmVzaG9sZCBmb3IgdGhlIGRldGFjaG1lbnQgYWxnb3JpdGhtLCB1c2VkIGluIGRlY2lkaW5nIHdoZXRoZXIgb3Igbm90IHRvIGRldGFjaCBjb21wbGV0ZWx5IGZyb20gdGhlIEROQSBhdCBhXHJcbiAgICAvLyBnaXZlbiB0aW1lIHN0ZXAuXHJcbiAgICB0aGlzLmRldGFjaEZyb21EbmFUaHJlc2hvbGQgPSAxOyAvL0BwdWJsaWNcclxuICB9XHJcbn1cclxuXHJcbmdlbmVFeHByZXNzaW9uRXNzZW50aWFscy5yZWdpc3RlciggJ1RyYW5zY3JpcHRpb25GYWN0b3JBdHRhY2htZW50U3RhdGVNYWNoaW5lJywgVHJhbnNjcmlwdGlvbkZhY3RvckF0dGFjaG1lbnRTdGF0ZU1hY2hpbmUgKTtcclxuZXhwb3J0IGRlZmF1bHQgVHJhbnNjcmlwdGlvbkZhY3RvckF0dGFjaG1lbnRTdGF0ZU1hY2hpbmU7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0Esd0JBQXdCLE1BQU0sc0NBQXNDO0FBQzNFLE9BQU9DLDZCQUE2QixNQUFNLG9DQUFvQztBQUM5RSxPQUFPQyxnQ0FBZ0MsTUFBTSx1Q0FBdUM7QUFFcEYsTUFBTUMseUNBQXlDLFNBQVNGLDZCQUE2QixDQUFDO0VBRXBGO0FBQ0Y7QUFDQTtFQUNFRyxXQUFXQSxDQUFFQyxXQUFXLEVBQUc7SUFDekIsS0FBSyxDQUFFQSxXQUFZLENBQUM7O0lBRXBCO0lBQ0EsSUFBSSxDQUFDQyxhQUFhLEdBQUcsSUFBSUosZ0NBQWdDLENBQUUsSUFBSyxDQUFDLENBQUMsQ0FBQzs7SUFFbkU7SUFDQTtJQUNBLElBQUksQ0FBQ0ssc0JBQXNCLEdBQUcsQ0FBQyxDQUFDLENBQUM7RUFDbkM7QUFDRjs7QUFFQVAsd0JBQXdCLENBQUNRLFFBQVEsQ0FBRSwyQ0FBMkMsRUFBRUwseUNBQTBDLENBQUM7QUFDM0gsZUFBZUEseUNBQXlDIn0=