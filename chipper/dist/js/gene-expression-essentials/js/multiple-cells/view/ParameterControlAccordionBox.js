// Copyright 2016-2022, University of Colorado Boulder

/**
 * Class for constructing accordion boxes containing control panels that allow users to alter some of the parameters of
 * the multi-cell protein synthesis model. This class makes sure fonts, colors, etc. are consistent across panels.
 *
 * @author John Blanco
 * @author Aadish Gupta
 */

import PhetFont from '../../../../scenery-phet/js/PhetFont.js';
import { Color, Text, VBox } from '../../../../scenery/js/imports.js';
import AccordionBox from '../../../../sun/js/AccordionBox.js';
import GEEConstants from '../../common/GEEConstants.js';
import ControllerNode from '../../common/view/ControllerNode.js';
import geneExpressionEssentials from '../../geneExpressionEssentials.js';
class ParameterControlAccordionBox extends AccordionBox {
  /**
   * @param {String} title
   * @param {Array.<Object>}controllers
   */
  constructor(title, controllers) {
    const controllerNodes = [];
    for (let i = 0; i < controllers.length; i++) {
      const controller = controllers[i];
      const label = new Text(controller.label, {
        font: new PhetFont({
          size: 13
        }),
        maxWidth: 200
      });
      const controllerNode = new ControllerNode(controller.controlProperty, controller.minValue, controller.maxValue, controller.minLabel, controller.maxLabel, {
        logScale: controller.logScale
      });
      controllerNodes[i] = new VBox({
        spacing: 5,
        children: [label, controllerNode]
      });
    }
    const contentNode = new VBox({
      spacing: 5,
      children: controllerNodes
    });
    super(contentNode, {
      titleNode: new Text(title, {
        font: new PhetFont({
          size: 16,
          weight: 'bold'
        }),
        maxWidth: 200
      }),
      cornerRadius: GEEConstants.CORNER_RADIUS,
      titleAlignX: 'left',
      contentAlign: 'center',
      fill: new Color(220, 236, 255),
      buttonXMargin: 6,
      buttonYMargin: 6,
      contentYMargin: 8,
      expandCollapseButtonOptions: {
        touchAreaXDilation: 8,
        touchAreaYDilation: 8
      },
      minWidth: 200
    });
  }
}
geneExpressionEssentials.register('ParameterControlAccordionBox', ParameterControlAccordionBox);
export default ParameterControlAccordionBox;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQaGV0Rm9udCIsIkNvbG9yIiwiVGV4dCIsIlZCb3giLCJBY2NvcmRpb25Cb3giLCJHRUVDb25zdGFudHMiLCJDb250cm9sbGVyTm9kZSIsImdlbmVFeHByZXNzaW9uRXNzZW50aWFscyIsIlBhcmFtZXRlckNvbnRyb2xBY2NvcmRpb25Cb3giLCJjb25zdHJ1Y3RvciIsInRpdGxlIiwiY29udHJvbGxlcnMiLCJjb250cm9sbGVyTm9kZXMiLCJpIiwibGVuZ3RoIiwiY29udHJvbGxlciIsImxhYmVsIiwiZm9udCIsInNpemUiLCJtYXhXaWR0aCIsImNvbnRyb2xsZXJOb2RlIiwiY29udHJvbFByb3BlcnR5IiwibWluVmFsdWUiLCJtYXhWYWx1ZSIsIm1pbkxhYmVsIiwibWF4TGFiZWwiLCJsb2dTY2FsZSIsInNwYWNpbmciLCJjaGlsZHJlbiIsImNvbnRlbnROb2RlIiwidGl0bGVOb2RlIiwid2VpZ2h0IiwiY29ybmVyUmFkaXVzIiwiQ09STkVSX1JBRElVUyIsInRpdGxlQWxpZ25YIiwiY29udGVudEFsaWduIiwiZmlsbCIsImJ1dHRvblhNYXJnaW4iLCJidXR0b25ZTWFyZ2luIiwiY29udGVudFlNYXJnaW4iLCJleHBhbmRDb2xsYXBzZUJ1dHRvbk9wdGlvbnMiLCJ0b3VjaEFyZWFYRGlsYXRpb24iLCJ0b3VjaEFyZWFZRGlsYXRpb24iLCJtaW5XaWR0aCIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiUGFyYW1ldGVyQ29udHJvbEFjY29yZGlvbkJveC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxNi0yMDIyLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBDbGFzcyBmb3IgY29uc3RydWN0aW5nIGFjY29yZGlvbiBib3hlcyBjb250YWluaW5nIGNvbnRyb2wgcGFuZWxzIHRoYXQgYWxsb3cgdXNlcnMgdG8gYWx0ZXIgc29tZSBvZiB0aGUgcGFyYW1ldGVycyBvZlxyXG4gKiB0aGUgbXVsdGktY2VsbCBwcm90ZWluIHN5bnRoZXNpcyBtb2RlbC4gVGhpcyBjbGFzcyBtYWtlcyBzdXJlIGZvbnRzLCBjb2xvcnMsIGV0Yy4gYXJlIGNvbnNpc3RlbnQgYWNyb3NzIHBhbmVscy5cclxuICpcclxuICogQGF1dGhvciBKb2huIEJsYW5jb1xyXG4gKiBAYXV0aG9yIEFhZGlzaCBHdXB0YVxyXG4gKi9cclxuXHJcbmltcG9ydCBQaGV0Rm9udCBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5LXBoZXQvanMvUGhldEZvbnQuanMnO1xyXG5pbXBvcnQgeyBDb2xvciwgVGV4dCwgVkJveCB9IGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XHJcbmltcG9ydCBBY2NvcmRpb25Cb3ggZnJvbSAnLi4vLi4vLi4vLi4vc3VuL2pzL0FjY29yZGlvbkJveC5qcyc7XHJcbmltcG9ydCBHRUVDb25zdGFudHMgZnJvbSAnLi4vLi4vY29tbW9uL0dFRUNvbnN0YW50cy5qcyc7XHJcbmltcG9ydCBDb250cm9sbGVyTm9kZSBmcm9tICcuLi8uLi9jb21tb24vdmlldy9Db250cm9sbGVyTm9kZS5qcyc7XHJcbmltcG9ydCBnZW5lRXhwcmVzc2lvbkVzc2VudGlhbHMgZnJvbSAnLi4vLi4vZ2VuZUV4cHJlc3Npb25Fc3NlbnRpYWxzLmpzJztcclxuXHJcbmNsYXNzIFBhcmFtZXRlckNvbnRyb2xBY2NvcmRpb25Cb3ggZXh0ZW5kcyBBY2NvcmRpb25Cb3gge1xyXG5cclxuICAvKipcclxuICAgKiBAcGFyYW0ge1N0cmluZ30gdGl0bGVcclxuICAgKiBAcGFyYW0ge0FycmF5LjxPYmplY3Q+fWNvbnRyb2xsZXJzXHJcbiAgICovXHJcbiAgY29uc3RydWN0b3IoIHRpdGxlLCBjb250cm9sbGVycyApIHtcclxuXHJcbiAgICBjb25zdCBjb250cm9sbGVyTm9kZXMgPSBbXTtcclxuXHJcbiAgICBmb3IgKCBsZXQgaSA9IDA7IGkgPCBjb250cm9sbGVycy5sZW5ndGg7IGkrKyApIHtcclxuICAgICAgY29uc3QgY29udHJvbGxlciA9IGNvbnRyb2xsZXJzWyBpIF07XHJcbiAgICAgIGNvbnN0IGxhYmVsID0gbmV3IFRleHQoIGNvbnRyb2xsZXIubGFiZWwsIHtcclxuICAgICAgICBmb250OiBuZXcgUGhldEZvbnQoIHsgc2l6ZTogMTMgfSApLFxyXG4gICAgICAgIG1heFdpZHRoOiAyMDBcclxuICAgICAgfSApO1xyXG4gICAgICBjb25zdCBjb250cm9sbGVyTm9kZSA9IG5ldyBDb250cm9sbGVyTm9kZShcclxuICAgICAgICBjb250cm9sbGVyLmNvbnRyb2xQcm9wZXJ0eSxcclxuICAgICAgICBjb250cm9sbGVyLm1pblZhbHVlLFxyXG4gICAgICAgIGNvbnRyb2xsZXIubWF4VmFsdWUsXHJcbiAgICAgICAgY29udHJvbGxlci5taW5MYWJlbCxcclxuICAgICAgICBjb250cm9sbGVyLm1heExhYmVsLFxyXG4gICAgICAgIHtcclxuICAgICAgICAgIGxvZ1NjYWxlOiBjb250cm9sbGVyLmxvZ1NjYWxlXHJcbiAgICAgICAgfVxyXG4gICAgICApO1xyXG4gICAgICBjb250cm9sbGVyTm9kZXNbIGkgXSA9IG5ldyBWQm94KCB7XHJcbiAgICAgICAgc3BhY2luZzogNSxcclxuICAgICAgICBjaGlsZHJlbjogW1xyXG4gICAgICAgICAgbGFiZWwsXHJcbiAgICAgICAgICBjb250cm9sbGVyTm9kZVxyXG4gICAgICAgIF1cclxuICAgICAgfSApO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGNvbnRlbnROb2RlID0gbmV3IFZCb3goIHtcclxuICAgICAgc3BhY2luZzogNSxcclxuICAgICAgY2hpbGRyZW46IGNvbnRyb2xsZXJOb2Rlc1xyXG4gICAgfSApO1xyXG5cclxuICAgIHN1cGVyKCBjb250ZW50Tm9kZSwge1xyXG4gICAgICB0aXRsZU5vZGU6IG5ldyBUZXh0KCB0aXRsZSwge1xyXG4gICAgICAgIGZvbnQ6IG5ldyBQaGV0Rm9udCggeyBzaXplOiAxNiwgd2VpZ2h0OiAnYm9sZCcgfSApLFxyXG4gICAgICAgIG1heFdpZHRoOiAyMDBcclxuICAgICAgfSApLFxyXG4gICAgICBjb3JuZXJSYWRpdXM6IEdFRUNvbnN0YW50cy5DT1JORVJfUkFESVVTLFxyXG4gICAgICB0aXRsZUFsaWduWDogJ2xlZnQnLFxyXG4gICAgICBjb250ZW50QWxpZ246ICdjZW50ZXInLFxyXG4gICAgICBmaWxsOiBuZXcgQ29sb3IoIDIyMCwgMjM2LCAyNTUgKSxcclxuICAgICAgYnV0dG9uWE1hcmdpbjogNixcclxuICAgICAgYnV0dG9uWU1hcmdpbjogNixcclxuICAgICAgY29udGVudFlNYXJnaW46IDgsXHJcbiAgICAgIGV4cGFuZENvbGxhcHNlQnV0dG9uT3B0aW9uczoge1xyXG4gICAgICAgIHRvdWNoQXJlYVhEaWxhdGlvbjogOCxcclxuICAgICAgICB0b3VjaEFyZWFZRGlsYXRpb246IDhcclxuICAgICAgfSxcclxuICAgICAgbWluV2lkdGg6IDIwMFxyXG4gICAgfSApO1xyXG4gIH1cclxufVxyXG5cclxuZ2VuZUV4cHJlc3Npb25Fc3NlbnRpYWxzLnJlZ2lzdGVyKCAnUGFyYW1ldGVyQ29udHJvbEFjY29yZGlvbkJveCcsIFBhcmFtZXRlckNvbnRyb2xBY2NvcmRpb25Cb3ggKTtcclxuZXhwb3J0IGRlZmF1bHQgUGFyYW1ldGVyQ29udHJvbEFjY29yZGlvbkJveDsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLFFBQVEsTUFBTSx5Q0FBeUM7QUFDOUQsU0FBU0MsS0FBSyxFQUFFQyxJQUFJLEVBQUVDLElBQUksUUFBUSxtQ0FBbUM7QUFDckUsT0FBT0MsWUFBWSxNQUFNLG9DQUFvQztBQUM3RCxPQUFPQyxZQUFZLE1BQU0sOEJBQThCO0FBQ3ZELE9BQU9DLGNBQWMsTUFBTSxxQ0FBcUM7QUFDaEUsT0FBT0Msd0JBQXdCLE1BQU0sbUNBQW1DO0FBRXhFLE1BQU1DLDRCQUE0QixTQUFTSixZQUFZLENBQUM7RUFFdEQ7QUFDRjtBQUNBO0FBQ0E7RUFDRUssV0FBV0EsQ0FBRUMsS0FBSyxFQUFFQyxXQUFXLEVBQUc7SUFFaEMsTUFBTUMsZUFBZSxHQUFHLEVBQUU7SUFFMUIsS0FBTSxJQUFJQyxDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLEdBQUdGLFdBQVcsQ0FBQ0csTUFBTSxFQUFFRCxDQUFDLEVBQUUsRUFBRztNQUM3QyxNQUFNRSxVQUFVLEdBQUdKLFdBQVcsQ0FBRUUsQ0FBQyxDQUFFO01BQ25DLE1BQU1HLEtBQUssR0FBRyxJQUFJZCxJQUFJLENBQUVhLFVBQVUsQ0FBQ0MsS0FBSyxFQUFFO1FBQ3hDQyxJQUFJLEVBQUUsSUFBSWpCLFFBQVEsQ0FBRTtVQUFFa0IsSUFBSSxFQUFFO1FBQUcsQ0FBRSxDQUFDO1FBQ2xDQyxRQUFRLEVBQUU7TUFDWixDQUFFLENBQUM7TUFDSCxNQUFNQyxjQUFjLEdBQUcsSUFBSWQsY0FBYyxDQUN2Q1MsVUFBVSxDQUFDTSxlQUFlLEVBQzFCTixVQUFVLENBQUNPLFFBQVEsRUFDbkJQLFVBQVUsQ0FBQ1EsUUFBUSxFQUNuQlIsVUFBVSxDQUFDUyxRQUFRLEVBQ25CVCxVQUFVLENBQUNVLFFBQVEsRUFDbkI7UUFDRUMsUUFBUSxFQUFFWCxVQUFVLENBQUNXO01BQ3ZCLENBQ0YsQ0FBQztNQUNEZCxlQUFlLENBQUVDLENBQUMsQ0FBRSxHQUFHLElBQUlWLElBQUksQ0FBRTtRQUMvQndCLE9BQU8sRUFBRSxDQUFDO1FBQ1ZDLFFBQVEsRUFBRSxDQUNSWixLQUFLLEVBQ0xJLGNBQWM7TUFFbEIsQ0FBRSxDQUFDO0lBQ0w7SUFFQSxNQUFNUyxXQUFXLEdBQUcsSUFBSTFCLElBQUksQ0FBRTtNQUM1QndCLE9BQU8sRUFBRSxDQUFDO01BQ1ZDLFFBQVEsRUFBRWhCO0lBQ1osQ0FBRSxDQUFDO0lBRUgsS0FBSyxDQUFFaUIsV0FBVyxFQUFFO01BQ2xCQyxTQUFTLEVBQUUsSUFBSTVCLElBQUksQ0FBRVEsS0FBSyxFQUFFO1FBQzFCTyxJQUFJLEVBQUUsSUFBSWpCLFFBQVEsQ0FBRTtVQUFFa0IsSUFBSSxFQUFFLEVBQUU7VUFBRWEsTUFBTSxFQUFFO1FBQU8sQ0FBRSxDQUFDO1FBQ2xEWixRQUFRLEVBQUU7TUFDWixDQUFFLENBQUM7TUFDSGEsWUFBWSxFQUFFM0IsWUFBWSxDQUFDNEIsYUFBYTtNQUN4Q0MsV0FBVyxFQUFFLE1BQU07TUFDbkJDLFlBQVksRUFBRSxRQUFRO01BQ3RCQyxJQUFJLEVBQUUsSUFBSW5DLEtBQUssQ0FBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUksQ0FBQztNQUNoQ29DLGFBQWEsRUFBRSxDQUFDO01BQ2hCQyxhQUFhLEVBQUUsQ0FBQztNQUNoQkMsY0FBYyxFQUFFLENBQUM7TUFDakJDLDJCQUEyQixFQUFFO1FBQzNCQyxrQkFBa0IsRUFBRSxDQUFDO1FBQ3JCQyxrQkFBa0IsRUFBRTtNQUN0QixDQUFDO01BQ0RDLFFBQVEsRUFBRTtJQUNaLENBQUUsQ0FBQztFQUNMO0FBQ0Y7QUFFQXBDLHdCQUF3QixDQUFDcUMsUUFBUSxDQUFFLDhCQUE4QixFQUFFcEMsNEJBQTZCLENBQUM7QUFDakcsZUFBZUEsNEJBQTRCIn0=