// Copyright 2017-2022, University of Colorado Boulder

/**
 * Main file for the Twixt demo.
 *
 * @author Jonathan Olson <jonathan.olson@colorado.edu>
 */

import Property from '../../axon/js/Property.js';
import Screen from '../../joist/js/Screen.js';
import Sim from '../../joist/js/Sim.js';
import simLauncher from '../../joist/js/simLauncher.js';
import AnimationScreenView from './demo/AnimationScreenView.js';
import DampedMotionScreenView from './demo/DampedMotionScreenView.js';
import TransitionsScreenView from './demo/TransitionsScreenView.js';
import TwixtStrings from './TwixtStrings.js';
const simOptions = {
  credits: {
    leadDesign: 'PhET'
  }
};
simLauncher.launch(() => {
  const screens = [new Screen(() => {
    return {};
  }, model => new AnimationScreenView(), {
    name: new Property('Animation'),
    backgroundColorProperty: new Property('white')
  }), new Screen(() => {
    return {};
  }, model => new DampedMotionScreenView(), {
    name: new Property('Damped Motion'),
    backgroundColorProperty: new Property('white')
  }), new Screen(() => {
    return {};
  }, model => new TransitionsScreenView(), {
    name: new Property('Transitions'),
    backgroundColorProperty: new Property('white')
  })];
  new Sim(TwixtStrings.twixt.titleStringProperty, screens, simOptions).start();
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQcm9wZXJ0eSIsIlNjcmVlbiIsIlNpbSIsInNpbUxhdW5jaGVyIiwiQW5pbWF0aW9uU2NyZWVuVmlldyIsIkRhbXBlZE1vdGlvblNjcmVlblZpZXciLCJUcmFuc2l0aW9uc1NjcmVlblZpZXciLCJUd2l4dFN0cmluZ3MiLCJzaW1PcHRpb25zIiwiY3JlZGl0cyIsImxlYWREZXNpZ24iLCJsYXVuY2giLCJzY3JlZW5zIiwibW9kZWwiLCJuYW1lIiwiYmFja2dyb3VuZENvbG9yUHJvcGVydHkiLCJ0d2l4dCIsInRpdGxlU3RyaW5nUHJvcGVydHkiLCJzdGFydCJdLCJzb3VyY2VzIjpbInR3aXh0LW1haW4uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTctMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogTWFpbiBmaWxlIGZvciB0aGUgVHdpeHQgZGVtby5cclxuICpcclxuICogQGF1dGhvciBKb25hdGhhbiBPbHNvbiA8am9uYXRoYW4ub2xzb25AY29sb3JhZG8uZWR1PlxyXG4gKi9cclxuXHJcbmltcG9ydCBQcm9wZXJ0eSBmcm9tICcuLi8uLi9heG9uL2pzL1Byb3BlcnR5LmpzJztcclxuaW1wb3J0IFNjcmVlbiBmcm9tICcuLi8uLi9qb2lzdC9qcy9TY3JlZW4uanMnO1xyXG5pbXBvcnQgU2ltIGZyb20gJy4uLy4uL2pvaXN0L2pzL1NpbS5qcyc7XHJcbmltcG9ydCBzaW1MYXVuY2hlciBmcm9tICcuLi8uLi9qb2lzdC9qcy9zaW1MYXVuY2hlci5qcyc7XHJcbmltcG9ydCBBbmltYXRpb25TY3JlZW5WaWV3IGZyb20gJy4vZGVtby9BbmltYXRpb25TY3JlZW5WaWV3LmpzJztcclxuaW1wb3J0IERhbXBlZE1vdGlvblNjcmVlblZpZXcgZnJvbSAnLi9kZW1vL0RhbXBlZE1vdGlvblNjcmVlblZpZXcuanMnO1xyXG5pbXBvcnQgVHJhbnNpdGlvbnNTY3JlZW5WaWV3IGZyb20gJy4vZGVtby9UcmFuc2l0aW9uc1NjcmVlblZpZXcuanMnO1xyXG5pbXBvcnQgVHdpeHRTdHJpbmdzIGZyb20gJy4vVHdpeHRTdHJpbmdzLmpzJztcclxuXHJcbmNvbnN0IHNpbU9wdGlvbnMgPSB7XHJcbiAgY3JlZGl0czoge1xyXG4gICAgbGVhZERlc2lnbjogJ1BoRVQnXHJcbiAgfVxyXG59O1xyXG5cclxuc2ltTGF1bmNoZXIubGF1bmNoKCAoKSA9PiB7XHJcblxyXG4gIGNvbnN0IHNjcmVlbnMgPSBbXHJcbiAgICBuZXcgU2NyZWVuKFxyXG4gICAgICAoICgpID0+IHtcclxuICAgICAgICByZXR1cm4ge307XHJcbiAgICAgIH0gKSxcclxuICAgICAgKCBtb2RlbCA9PiBuZXcgQW5pbWF0aW9uU2NyZWVuVmlldygpICksXHJcbiAgICAgIHtcclxuICAgICAgICBuYW1lOiBuZXcgUHJvcGVydHkoICdBbmltYXRpb24nICksXHJcbiAgICAgICAgYmFja2dyb3VuZENvbG9yUHJvcGVydHk6IG5ldyBQcm9wZXJ0eSggJ3doaXRlJyApXHJcbiAgICAgIH1cclxuICAgICksXHJcbiAgICBuZXcgU2NyZWVuKFxyXG4gICAgICAoICgpID0+IHtcclxuICAgICAgICByZXR1cm4ge307XHJcbiAgICAgIH0gKSxcclxuICAgICAgKCBtb2RlbCA9PiBuZXcgRGFtcGVkTW90aW9uU2NyZWVuVmlldygpICksXHJcbiAgICAgIHtcclxuICAgICAgICBuYW1lOiBuZXcgUHJvcGVydHkoICdEYW1wZWQgTW90aW9uJyApLFxyXG4gICAgICAgIGJhY2tncm91bmRDb2xvclByb3BlcnR5OiBuZXcgUHJvcGVydHkoICd3aGl0ZScgKVxyXG4gICAgICB9XHJcbiAgICApLFxyXG4gICAgbmV3IFNjcmVlbihcclxuICAgICAgKCAoKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHt9O1xyXG4gICAgICB9ICksXHJcbiAgICAgICggbW9kZWwgPT4gbmV3IFRyYW5zaXRpb25zU2NyZWVuVmlldygpICksXHJcbiAgICAgIHtcclxuICAgICAgICBuYW1lOiBuZXcgUHJvcGVydHkoICdUcmFuc2l0aW9ucycgKSxcclxuICAgICAgICBiYWNrZ3JvdW5kQ29sb3JQcm9wZXJ0eTogbmV3IFByb3BlcnR5KCAnd2hpdGUnIClcclxuICAgICAgfVxyXG4gICAgKVxyXG4gIF07XHJcblxyXG4gIG5ldyBTaW0oIFR3aXh0U3RyaW5ncy50d2l4dC50aXRsZVN0cmluZ1Byb3BlcnR5LCBzY3JlZW5zLCBzaW1PcHRpb25zICkuc3RhcnQoKTtcclxufSApOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxRQUFRLE1BQU0sMkJBQTJCO0FBQ2hELE9BQU9DLE1BQU0sTUFBTSwwQkFBMEI7QUFDN0MsT0FBT0MsR0FBRyxNQUFNLHVCQUF1QjtBQUN2QyxPQUFPQyxXQUFXLE1BQU0sK0JBQStCO0FBQ3ZELE9BQU9DLG1CQUFtQixNQUFNLCtCQUErQjtBQUMvRCxPQUFPQyxzQkFBc0IsTUFBTSxrQ0FBa0M7QUFDckUsT0FBT0MscUJBQXFCLE1BQU0saUNBQWlDO0FBQ25FLE9BQU9DLFlBQVksTUFBTSxtQkFBbUI7QUFFNUMsTUFBTUMsVUFBVSxHQUFHO0VBQ2pCQyxPQUFPLEVBQUU7SUFDUEMsVUFBVSxFQUFFO0VBQ2Q7QUFDRixDQUFDO0FBRURQLFdBQVcsQ0FBQ1EsTUFBTSxDQUFFLE1BQU07RUFFeEIsTUFBTUMsT0FBTyxHQUFHLENBQ2QsSUFBSVgsTUFBTSxDQUNOLE1BQU07SUFDTixPQUFPLENBQUMsQ0FBQztFQUNYLENBQUMsRUFDQ1ksS0FBSyxJQUFJLElBQUlULG1CQUFtQixDQUFDLENBQUMsRUFDcEM7SUFDRVUsSUFBSSxFQUFFLElBQUlkLFFBQVEsQ0FBRSxXQUFZLENBQUM7SUFDakNlLHVCQUF1QixFQUFFLElBQUlmLFFBQVEsQ0FBRSxPQUFRO0VBQ2pELENBQ0YsQ0FBQyxFQUNELElBQUlDLE1BQU0sQ0FDTixNQUFNO0lBQ04sT0FBTyxDQUFDLENBQUM7RUFDWCxDQUFDLEVBQ0NZLEtBQUssSUFBSSxJQUFJUixzQkFBc0IsQ0FBQyxDQUFDLEVBQ3ZDO0lBQ0VTLElBQUksRUFBRSxJQUFJZCxRQUFRLENBQUUsZUFBZ0IsQ0FBQztJQUNyQ2UsdUJBQXVCLEVBQUUsSUFBSWYsUUFBUSxDQUFFLE9BQVE7RUFDakQsQ0FDRixDQUFDLEVBQ0QsSUFBSUMsTUFBTSxDQUNOLE1BQU07SUFDTixPQUFPLENBQUMsQ0FBQztFQUNYLENBQUMsRUFDQ1ksS0FBSyxJQUFJLElBQUlQLHFCQUFxQixDQUFDLENBQUMsRUFDdEM7SUFDRVEsSUFBSSxFQUFFLElBQUlkLFFBQVEsQ0FBRSxhQUFjLENBQUM7SUFDbkNlLHVCQUF1QixFQUFFLElBQUlmLFFBQVEsQ0FBRSxPQUFRO0VBQ2pELENBQ0YsQ0FBQyxDQUNGO0VBRUQsSUFBSUUsR0FBRyxDQUFFSyxZQUFZLENBQUNTLEtBQUssQ0FBQ0MsbUJBQW1CLEVBQUVMLE9BQU8sRUFBRUosVUFBVyxDQUFDLENBQUNVLEtBQUssQ0FBQyxDQUFDO0FBQ2hGLENBQUUsQ0FBQyJ9