// Copyright 2023, University of Colorado Boulder

/**
 * RulerAndMarkerControlsSection is the keyboard-help section that describes the hotkeys related to the tools.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import KeyboardHelpSection from '../../../../scenery-phet/js/keyboard/help/KeyboardHelpSection.js';
import TextKeyNode from '../../../../scenery-phet/js/keyboard/TextKeyNode.js';
import KeyboardHelpIconFactory from '../../../../scenery-phet/js/keyboard/help/KeyboardHelpIconFactory.js';
import KeyboardHelpSectionRow from '../../../../scenery-phet/js/keyboard/help/KeyboardHelpSectionRow.js';
import GeometricOpticsStrings from '../../GeometricOpticsStrings.js';
export class RulerAndMarkerControlsSection extends KeyboardHelpSection {
  constructor() {
    // Keys used in this KeyboardHelpSection. They need to be disposed.
    const spaceKeyNode = TextKeyNode.space();
    const enterKeyNode = TextKeyNode.enter();
    const escapeKeyNode = TextKeyNode.esc();
    const spaceOrEnterKeyNode = KeyboardHelpIconFactory.iconOrIcon(spaceKeyNode, enterKeyNode);
    const keyNodes = [spaceKeyNode, enterKeyNode, escapeKeyNode, spaceOrEnterKeyNode];

    // Rows that make up this KeyboardHelpSection. They need to be disposed.
    const rows = [
    // Space or Enter
    KeyboardHelpSectionRow.labelWithIcon(GeometricOpticsStrings.keyboardHelpDialog.removeFromToolboxStringProperty, spaceOrEnterKeyNode),
    // Esc
    KeyboardHelpSectionRow.labelWithIcon(GeometricOpticsStrings.keyboardHelpDialog.returnToToolboxStringProperty, escapeKeyNode),
    // J, for 'Jump'
    KeyboardHelpSectionRow.createKeysRowFromStrings(['J'], GeometricOpticsStrings.keyboardHelpDialog.jumpToPointStringProperty)];
    super(GeometricOpticsStrings.keyboardHelpDialog.rulerAndMarkerControlsStringProperty, rows, {
      textMaxWidth: 300
    });
    this.disposeRulerAndMarkerControlsSection = () => {
      keyNodes.forEach(keyNode => keyNode.dispose());
      rows.forEach(row => row.dispose());
    };
  }
  dispose() {
    this.disposeRulerAndMarkerControlsSection();
    super.dispose();
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJLZXlib2FyZEhlbHBTZWN0aW9uIiwiVGV4dEtleU5vZGUiLCJLZXlib2FyZEhlbHBJY29uRmFjdG9yeSIsIktleWJvYXJkSGVscFNlY3Rpb25Sb3ciLCJHZW9tZXRyaWNPcHRpY3NTdHJpbmdzIiwiUnVsZXJBbmRNYXJrZXJDb250cm9sc1NlY3Rpb24iLCJjb25zdHJ1Y3RvciIsInNwYWNlS2V5Tm9kZSIsInNwYWNlIiwiZW50ZXJLZXlOb2RlIiwiZW50ZXIiLCJlc2NhcGVLZXlOb2RlIiwiZXNjIiwic3BhY2VPckVudGVyS2V5Tm9kZSIsImljb25Pckljb24iLCJrZXlOb2RlcyIsInJvd3MiLCJsYWJlbFdpdGhJY29uIiwia2V5Ym9hcmRIZWxwRGlhbG9nIiwicmVtb3ZlRnJvbVRvb2xib3hTdHJpbmdQcm9wZXJ0eSIsInJldHVyblRvVG9vbGJveFN0cmluZ1Byb3BlcnR5IiwiY3JlYXRlS2V5c1Jvd0Zyb21TdHJpbmdzIiwianVtcFRvUG9pbnRTdHJpbmdQcm9wZXJ0eSIsInJ1bGVyQW5kTWFya2VyQ29udHJvbHNTdHJpbmdQcm9wZXJ0eSIsInRleHRNYXhXaWR0aCIsImRpc3Bvc2VSdWxlckFuZE1hcmtlckNvbnRyb2xzU2VjdGlvbiIsImZvckVhY2giLCJrZXlOb2RlIiwiZGlzcG9zZSIsInJvdyJdLCJzb3VyY2VzIjpbIlJ1bGVyQW5kTWFya2VyQ29udHJvbHNTZWN0aW9uLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIzLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBSdWxlckFuZE1hcmtlckNvbnRyb2xzU2VjdGlvbiBpcyB0aGUga2V5Ym9hcmQtaGVscCBzZWN0aW9uIHRoYXQgZGVzY3JpYmVzIHRoZSBob3RrZXlzIHJlbGF0ZWQgdG8gdGhlIHRvb2xzLlxyXG4gKlxyXG4gKiBAYXV0aG9yIENocmlzIE1hbGxleSAoUGl4ZWxab29tLCBJbmMuKVxyXG4gKi9cclxuXHJcbmltcG9ydCBLZXlib2FyZEhlbHBTZWN0aW9uIGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnktcGhldC9qcy9rZXlib2FyZC9oZWxwL0tleWJvYXJkSGVscFNlY3Rpb24uanMnO1xyXG5pbXBvcnQgVGV4dEtleU5vZGUgZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS1waGV0L2pzL2tleWJvYXJkL1RleHRLZXlOb2RlLmpzJztcclxuaW1wb3J0IEtleWJvYXJkSGVscEljb25GYWN0b3J5IGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnktcGhldC9qcy9rZXlib2FyZC9oZWxwL0tleWJvYXJkSGVscEljb25GYWN0b3J5LmpzJztcclxuaW1wb3J0IEtleWJvYXJkSGVscFNlY3Rpb25Sb3cgZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS1waGV0L2pzL2tleWJvYXJkL2hlbHAvS2V5Ym9hcmRIZWxwU2VjdGlvblJvdy5qcyc7XHJcbmltcG9ydCBHZW9tZXRyaWNPcHRpY3NTdHJpbmdzIGZyb20gJy4uLy4uL0dlb21ldHJpY09wdGljc1N0cmluZ3MuanMnO1xyXG5cclxuZXhwb3J0IGNsYXNzIFJ1bGVyQW5kTWFya2VyQ29udHJvbHNTZWN0aW9uIGV4dGVuZHMgS2V5Ym9hcmRIZWxwU2VjdGlvbiB7XHJcblxyXG4gIHByaXZhdGUgcmVhZG9ubHkgZGlzcG9zZVJ1bGVyQW5kTWFya2VyQ29udHJvbHNTZWN0aW9uOiAoKSA9PiB2b2lkO1xyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoKSB7XHJcblxyXG4gICAgLy8gS2V5cyB1c2VkIGluIHRoaXMgS2V5Ym9hcmRIZWxwU2VjdGlvbi4gVGhleSBuZWVkIHRvIGJlIGRpc3Bvc2VkLlxyXG4gICAgY29uc3Qgc3BhY2VLZXlOb2RlID0gVGV4dEtleU5vZGUuc3BhY2UoKTtcclxuICAgIGNvbnN0IGVudGVyS2V5Tm9kZSA9IFRleHRLZXlOb2RlLmVudGVyKCk7XHJcbiAgICBjb25zdCBlc2NhcGVLZXlOb2RlID0gVGV4dEtleU5vZGUuZXNjKCk7XHJcbiAgICBjb25zdCBzcGFjZU9yRW50ZXJLZXlOb2RlID0gS2V5Ym9hcmRIZWxwSWNvbkZhY3RvcnkuaWNvbk9ySWNvbiggc3BhY2VLZXlOb2RlLCBlbnRlcktleU5vZGUgKTtcclxuICAgIGNvbnN0IGtleU5vZGVzID0gWyBzcGFjZUtleU5vZGUsIGVudGVyS2V5Tm9kZSwgZXNjYXBlS2V5Tm9kZSwgc3BhY2VPckVudGVyS2V5Tm9kZSBdO1xyXG5cclxuICAgIC8vIFJvd3MgdGhhdCBtYWtlIHVwIHRoaXMgS2V5Ym9hcmRIZWxwU2VjdGlvbi4gVGhleSBuZWVkIHRvIGJlIGRpc3Bvc2VkLlxyXG4gICAgY29uc3Qgcm93cyA9IFtcclxuXHJcbiAgICAgIC8vIFNwYWNlIG9yIEVudGVyXHJcbiAgICAgIEtleWJvYXJkSGVscFNlY3Rpb25Sb3cubGFiZWxXaXRoSWNvbiggR2VvbWV0cmljT3B0aWNzU3RyaW5ncy5rZXlib2FyZEhlbHBEaWFsb2cucmVtb3ZlRnJvbVRvb2xib3hTdHJpbmdQcm9wZXJ0eSxcclxuICAgICAgICBzcGFjZU9yRW50ZXJLZXlOb2RlICksXHJcblxyXG4gICAgICAvLyBFc2NcclxuICAgICAgS2V5Ym9hcmRIZWxwU2VjdGlvblJvdy5sYWJlbFdpdGhJY29uKCBHZW9tZXRyaWNPcHRpY3NTdHJpbmdzLmtleWJvYXJkSGVscERpYWxvZy5yZXR1cm5Ub1Rvb2xib3hTdHJpbmdQcm9wZXJ0eSwgZXNjYXBlS2V5Tm9kZSApLFxyXG5cclxuICAgICAgLy8gSiwgZm9yICdKdW1wJ1xyXG4gICAgICBLZXlib2FyZEhlbHBTZWN0aW9uUm93LmNyZWF0ZUtleXNSb3dGcm9tU3RyaW5ncyggWyAnSicgXSwgR2VvbWV0cmljT3B0aWNzU3RyaW5ncy5rZXlib2FyZEhlbHBEaWFsb2cuanVtcFRvUG9pbnRTdHJpbmdQcm9wZXJ0eSApXHJcbiAgICBdO1xyXG5cclxuICAgIHN1cGVyKCBHZW9tZXRyaWNPcHRpY3NTdHJpbmdzLmtleWJvYXJkSGVscERpYWxvZy5ydWxlckFuZE1hcmtlckNvbnRyb2xzU3RyaW5nUHJvcGVydHksIHJvd3MsIHtcclxuICAgICAgdGV4dE1heFdpZHRoOiAzMDBcclxuICAgIH0gKTtcclxuXHJcbiAgICB0aGlzLmRpc3Bvc2VSdWxlckFuZE1hcmtlckNvbnRyb2xzU2VjdGlvbiA9ICgpID0+IHtcclxuICAgICAga2V5Tm9kZXMuZm9yRWFjaCgga2V5Tm9kZSA9PiBrZXlOb2RlLmRpc3Bvc2UoKSApO1xyXG4gICAgICByb3dzLmZvckVhY2goIHJvdyA9PiByb3cuZGlzcG9zZSgpICk7XHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgcHVibGljIG92ZXJyaWRlIGRpc3Bvc2UoKTogdm9pZCB7XHJcbiAgICB0aGlzLmRpc3Bvc2VSdWxlckFuZE1hcmtlckNvbnRyb2xzU2VjdGlvbigpO1xyXG4gICAgc3VwZXIuZGlzcG9zZSgpO1xyXG4gIH1cclxufSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxtQkFBbUIsTUFBTSxrRUFBa0U7QUFDbEcsT0FBT0MsV0FBVyxNQUFNLHFEQUFxRDtBQUM3RSxPQUFPQyx1QkFBdUIsTUFBTSxzRUFBc0U7QUFDMUcsT0FBT0Msc0JBQXNCLE1BQU0scUVBQXFFO0FBQ3hHLE9BQU9DLHNCQUFzQixNQUFNLGlDQUFpQztBQUVwRSxPQUFPLE1BQU1DLDZCQUE2QixTQUFTTCxtQkFBbUIsQ0FBQztFQUk5RE0sV0FBV0EsQ0FBQSxFQUFHO0lBRW5CO0lBQ0EsTUFBTUMsWUFBWSxHQUFHTixXQUFXLENBQUNPLEtBQUssQ0FBQyxDQUFDO0lBQ3hDLE1BQU1DLFlBQVksR0FBR1IsV0FBVyxDQUFDUyxLQUFLLENBQUMsQ0FBQztJQUN4QyxNQUFNQyxhQUFhLEdBQUdWLFdBQVcsQ0FBQ1csR0FBRyxDQUFDLENBQUM7SUFDdkMsTUFBTUMsbUJBQW1CLEdBQUdYLHVCQUF1QixDQUFDWSxVQUFVLENBQUVQLFlBQVksRUFBRUUsWUFBYSxDQUFDO0lBQzVGLE1BQU1NLFFBQVEsR0FBRyxDQUFFUixZQUFZLEVBQUVFLFlBQVksRUFBRUUsYUFBYSxFQUFFRSxtQkFBbUIsQ0FBRTs7SUFFbkY7SUFDQSxNQUFNRyxJQUFJLEdBQUc7SUFFWDtJQUNBYixzQkFBc0IsQ0FBQ2MsYUFBYSxDQUFFYixzQkFBc0IsQ0FBQ2Msa0JBQWtCLENBQUNDLCtCQUErQixFQUM3R04sbUJBQW9CLENBQUM7SUFFdkI7SUFDQVYsc0JBQXNCLENBQUNjLGFBQWEsQ0FBRWIsc0JBQXNCLENBQUNjLGtCQUFrQixDQUFDRSw2QkFBNkIsRUFBRVQsYUFBYyxDQUFDO0lBRTlIO0lBQ0FSLHNCQUFzQixDQUFDa0Isd0JBQXdCLENBQUUsQ0FBRSxHQUFHLENBQUUsRUFBRWpCLHNCQUFzQixDQUFDYyxrQkFBa0IsQ0FBQ0kseUJBQTBCLENBQUMsQ0FDaEk7SUFFRCxLQUFLLENBQUVsQixzQkFBc0IsQ0FBQ2Msa0JBQWtCLENBQUNLLG9DQUFvQyxFQUFFUCxJQUFJLEVBQUU7TUFDM0ZRLFlBQVksRUFBRTtJQUNoQixDQUFFLENBQUM7SUFFSCxJQUFJLENBQUNDLG9DQUFvQyxHQUFHLE1BQU07TUFDaERWLFFBQVEsQ0FBQ1csT0FBTyxDQUFFQyxPQUFPLElBQUlBLE9BQU8sQ0FBQ0MsT0FBTyxDQUFDLENBQUUsQ0FBQztNQUNoRFosSUFBSSxDQUFDVSxPQUFPLENBQUVHLEdBQUcsSUFBSUEsR0FBRyxDQUFDRCxPQUFPLENBQUMsQ0FBRSxDQUFDO0lBQ3RDLENBQUM7RUFDSDtFQUVnQkEsT0FBT0EsQ0FBQSxFQUFTO0lBQzlCLElBQUksQ0FBQ0gsb0NBQW9DLENBQUMsQ0FBQztJQUMzQyxLQUFLLENBQUNHLE9BQU8sQ0FBQyxDQUFDO0VBQ2pCO0FBQ0YifQ==