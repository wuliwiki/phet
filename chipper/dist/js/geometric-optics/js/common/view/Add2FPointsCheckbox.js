// Copyright 2022, University of Colorado Boulder

/**
 * Add2FPointsCheckbox is the "Add 2F Points checkbox" checkbox that appears in the Preferences dialog.
 * The name should technically be Add2FPointsCheckboxCheckbox, but that confused everyone who saw it.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import PreferencesDialog from '../../../../joist/js/preferences/PreferencesDialog.js';
import optionize from '../../../../phet-core/js/optionize.js';
import { Text } from '../../../../scenery/js/imports.js';
import Checkbox from '../../../../sun/js/Checkbox.js';
import geometricOptics from '../../geometricOptics.js';
import GeometricOpticsStrings from '../../GeometricOpticsStrings.js';
import GOConstants from '../GOConstants.js';
export default class Add2FPointsCheckbox extends Checkbox {
  constructor(add2FPointsCheckboxProperty, providedOptions) {
    const options = optionize()({
      boxWidth: GOConstants.CHECKBOX_BOX_WIDTH
    }, providedOptions);
    const labelText = new Text(GeometricOpticsStrings.checkbox.add2FPointsCheckboxStringProperty, {
      font: PreferencesDialog.CONTENT_FONT,
      maxWidth: 500,
      tandem: options.tandem.createTandem('labelText')
    });
    super(add2FPointsCheckboxProperty, labelText, options);
    this.disposeAdd2FPointsCheckbox = () => {
      labelText.dispose();
    };
  }
  dispose() {
    super.dispose();
    this.disposeAdd2FPointsCheckbox();
  }
}
geometricOptics.register('Add2FPointsCheckbox', Add2FPointsCheckbox);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQcmVmZXJlbmNlc0RpYWxvZyIsIm9wdGlvbml6ZSIsIlRleHQiLCJDaGVja2JveCIsImdlb21ldHJpY09wdGljcyIsIkdlb21ldHJpY09wdGljc1N0cmluZ3MiLCJHT0NvbnN0YW50cyIsIkFkZDJGUG9pbnRzQ2hlY2tib3giLCJjb25zdHJ1Y3RvciIsImFkZDJGUG9pbnRzQ2hlY2tib3hQcm9wZXJ0eSIsInByb3ZpZGVkT3B0aW9ucyIsIm9wdGlvbnMiLCJib3hXaWR0aCIsIkNIRUNLQk9YX0JPWF9XSURUSCIsImxhYmVsVGV4dCIsImNoZWNrYm94IiwiYWRkMkZQb2ludHNDaGVja2JveFN0cmluZ1Byb3BlcnR5IiwiZm9udCIsIkNPTlRFTlRfRk9OVCIsIm1heFdpZHRoIiwidGFuZGVtIiwiY3JlYXRlVGFuZGVtIiwiZGlzcG9zZUFkZDJGUG9pbnRzQ2hlY2tib3giLCJkaXNwb3NlIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJBZGQyRlBvaW50c0NoZWNrYm94LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIyLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBBZGQyRlBvaW50c0NoZWNrYm94IGlzIHRoZSBcIkFkZCAyRiBQb2ludHMgY2hlY2tib3hcIiBjaGVja2JveCB0aGF0IGFwcGVhcnMgaW4gdGhlIFByZWZlcmVuY2VzIGRpYWxvZy5cclxuICogVGhlIG5hbWUgc2hvdWxkIHRlY2huaWNhbGx5IGJlIEFkZDJGUG9pbnRzQ2hlY2tib3hDaGVja2JveCwgYnV0IHRoYXQgY29uZnVzZWQgZXZlcnlvbmUgd2hvIHNhdyBpdC5cclxuICpcclxuICogQGF1dGhvciBDaHJpcyBNYWxsZXkgKFBpeGVsWm9vbSwgSW5jLilcclxuICovXHJcblxyXG5pbXBvcnQgUHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vLi4vYXhvbi9qcy9Qcm9wZXJ0eS5qcyc7XHJcbmltcG9ydCBQcmVmZXJlbmNlc0RpYWxvZyBmcm9tICcuLi8uLi8uLi8uLi9qb2lzdC9qcy9wcmVmZXJlbmNlcy9QcmVmZXJlbmNlc0RpYWxvZy5qcyc7XHJcbmltcG9ydCBvcHRpb25pemUsIHsgRW1wdHlTZWxmT3B0aW9ucyB9IGZyb20gJy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy9vcHRpb25pemUuanMnO1xyXG5pbXBvcnQgUGlja1JlcXVpcmVkIGZyb20gJy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy90eXBlcy9QaWNrUmVxdWlyZWQuanMnO1xyXG5pbXBvcnQgeyBUZXh0IH0gZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IENoZWNrYm94LCB7IENoZWNrYm94T3B0aW9ucyB9IGZyb20gJy4uLy4uLy4uLy4uL3N1bi9qcy9DaGVja2JveC5qcyc7XHJcbmltcG9ydCBnZW9tZXRyaWNPcHRpY3MgZnJvbSAnLi4vLi4vZ2VvbWV0cmljT3B0aWNzLmpzJztcclxuaW1wb3J0IEdlb21ldHJpY09wdGljc1N0cmluZ3MgZnJvbSAnLi4vLi4vR2VvbWV0cmljT3B0aWNzU3RyaW5ncy5qcyc7XHJcbmltcG9ydCBHT0NvbnN0YW50cyBmcm9tICcuLi9HT0NvbnN0YW50cy5qcyc7XHJcblxyXG50eXBlIFNlbGZPcHRpb25zID0gRW1wdHlTZWxmT3B0aW9ucztcclxuXHJcbnR5cGUgQWRkMkZQb2ludHNDaGVja2JveE9wdGlvbnMgPSBTZWxmT3B0aW9ucyAmIFBpY2tSZXF1aXJlZDxDaGVja2JveE9wdGlvbnMsICd0YW5kZW0nPjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEFkZDJGUG9pbnRzQ2hlY2tib3ggZXh0ZW5kcyBDaGVja2JveCB7XHJcblxyXG4gIHByaXZhdGUgcmVhZG9ubHkgZGlzcG9zZUFkZDJGUG9pbnRzQ2hlY2tib3g6ICgpID0+IHZvaWQ7XHJcblxyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvciggYWRkMkZQb2ludHNDaGVja2JveFByb3BlcnR5OiBQcm9wZXJ0eTxib29sZWFuPiwgcHJvdmlkZWRPcHRpb25zOiBBZGQyRlBvaW50c0NoZWNrYm94T3B0aW9ucyApIHtcclxuXHJcbiAgICBjb25zdCBvcHRpb25zID0gb3B0aW9uaXplPEFkZDJGUG9pbnRzQ2hlY2tib3hPcHRpb25zLCBTZWxmT3B0aW9ucywgQ2hlY2tib3hPcHRpb25zPigpKCB7XHJcbiAgICAgIGJveFdpZHRoOiBHT0NvbnN0YW50cy5DSEVDS0JPWF9CT1hfV0lEVEhcclxuICAgIH0sIHByb3ZpZGVkT3B0aW9ucyApO1xyXG5cclxuICAgIGNvbnN0IGxhYmVsVGV4dCA9IG5ldyBUZXh0KCBHZW9tZXRyaWNPcHRpY3NTdHJpbmdzLmNoZWNrYm94LmFkZDJGUG9pbnRzQ2hlY2tib3hTdHJpbmdQcm9wZXJ0eSwge1xyXG4gICAgICBmb250OiBQcmVmZXJlbmNlc0RpYWxvZy5DT05URU5UX0ZPTlQsXHJcbiAgICAgIG1heFdpZHRoOiA1MDAsXHJcbiAgICAgIHRhbmRlbTogb3B0aW9ucy50YW5kZW0uY3JlYXRlVGFuZGVtKCAnbGFiZWxUZXh0JyApXHJcbiAgICB9ICk7XHJcblxyXG4gICAgc3VwZXIoIGFkZDJGUG9pbnRzQ2hlY2tib3hQcm9wZXJ0eSwgbGFiZWxUZXh0LCBvcHRpb25zICk7XHJcblxyXG4gICAgdGhpcy5kaXNwb3NlQWRkMkZQb2ludHNDaGVja2JveCA9ICgpID0+IHtcclxuICAgICAgbGFiZWxUZXh0LmRpc3Bvc2UoKTtcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgb3ZlcnJpZGUgZGlzcG9zZSgpOiB2b2lkIHtcclxuICAgIHN1cGVyLmRpc3Bvc2UoKTtcclxuICAgIHRoaXMuZGlzcG9zZUFkZDJGUG9pbnRzQ2hlY2tib3goKTtcclxuICB9XHJcbn1cclxuXHJcbmdlb21ldHJpY09wdGljcy5yZWdpc3RlciggJ0FkZDJGUG9pbnRzQ2hlY2tib3gnLCBBZGQyRlBvaW50c0NoZWNrYm94ICk7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBR0EsT0FBT0EsaUJBQWlCLE1BQU0sdURBQXVEO0FBQ3JGLE9BQU9DLFNBQVMsTUFBNEIsdUNBQXVDO0FBRW5GLFNBQVNDLElBQUksUUFBUSxtQ0FBbUM7QUFDeEQsT0FBT0MsUUFBUSxNQUEyQixnQ0FBZ0M7QUFDMUUsT0FBT0MsZUFBZSxNQUFNLDBCQUEwQjtBQUN0RCxPQUFPQyxzQkFBc0IsTUFBTSxpQ0FBaUM7QUFDcEUsT0FBT0MsV0FBVyxNQUFNLG1CQUFtQjtBQU0zQyxlQUFlLE1BQU1DLG1CQUFtQixTQUFTSixRQUFRLENBQUM7RUFJakRLLFdBQVdBLENBQUVDLDJCQUE4QyxFQUFFQyxlQUEyQyxFQUFHO0lBRWhILE1BQU1DLE9BQU8sR0FBR1YsU0FBUyxDQUEyRCxDQUFDLENBQUU7TUFDckZXLFFBQVEsRUFBRU4sV0FBVyxDQUFDTztJQUN4QixDQUFDLEVBQUVILGVBQWdCLENBQUM7SUFFcEIsTUFBTUksU0FBUyxHQUFHLElBQUlaLElBQUksQ0FBRUcsc0JBQXNCLENBQUNVLFFBQVEsQ0FBQ0MsaUNBQWlDLEVBQUU7TUFDN0ZDLElBQUksRUFBRWpCLGlCQUFpQixDQUFDa0IsWUFBWTtNQUNwQ0MsUUFBUSxFQUFFLEdBQUc7TUFDYkMsTUFBTSxFQUFFVCxPQUFPLENBQUNTLE1BQU0sQ0FBQ0MsWUFBWSxDQUFFLFdBQVk7SUFDbkQsQ0FBRSxDQUFDO0lBRUgsS0FBSyxDQUFFWiwyQkFBMkIsRUFBRUssU0FBUyxFQUFFSCxPQUFRLENBQUM7SUFFeEQsSUFBSSxDQUFDVywwQkFBMEIsR0FBRyxNQUFNO01BQ3RDUixTQUFTLENBQUNTLE9BQU8sQ0FBQyxDQUFDO0lBQ3JCLENBQUM7RUFDSDtFQUVnQkEsT0FBT0EsQ0FBQSxFQUFTO0lBQzlCLEtBQUssQ0FBQ0EsT0FBTyxDQUFDLENBQUM7SUFDZixJQUFJLENBQUNELDBCQUEwQixDQUFDLENBQUM7RUFDbkM7QUFDRjtBQUVBbEIsZUFBZSxDQUFDb0IsUUFBUSxDQUFFLHFCQUFxQixFQUFFakIsbUJBQW9CLENBQUMifQ==