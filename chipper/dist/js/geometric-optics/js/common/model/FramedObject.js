// Copyright 2021-2022, University of Colorado Boulder

/**
 * FramedObject is the model for the "framed objects". These are objects in a picture frame, with 3D perspective.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 * @author Martin Veillette
 */

import DerivedProperty from '../../../../axon/js/DerivedProperty.js';
import Vector2 from '../../../../dot/js/Vector2.js';
import geometricOptics from '../../geometricOptics.js';
import OpticalObjectChoice from './OpticalObjectChoice.js';
import HTMLImageElementObject from './HTMLImageElementObject.js';
// x should be 1/2 of PNG file width. y should be the tip of the pencil. +x right, +y down.
const ORIGIN_OFFSET = new Vector2(68.5, 100);

// Scale that will be applied to .png files for all framed objects.
const SCALE_FACTOR = 0.25;
export default class FramedObject extends HTMLImageElementObject {
  // HTMLImageElements (PNG files) used to draw this framed object and its associated image

  /**
   * @param opticalObjectNumber - positive integer used when labeling this object
   * @param opticPositionProperty
   * @param opticalObjectChoiceProperty
   * @param providedOptions
   */
  constructor(opticalObjectNumber, opticPositionProperty, opticalObjectChoiceProperty, providedOptions) {
    const objectHTMLImageElementsProperty = new DerivedProperty([opticalObjectChoiceProperty], opticalObjectChoice => {
      let objectHTMLImageElements = opticalObjectChoice.objectHTMLImageElements;

      // If the object choice isn't a framed object, fallback to PENCIL.
      if (!objectHTMLImageElements) {
        assert && assert(OpticalObjectChoice.PENCIL.objectHTMLImageElements);
        objectHTMLImageElements = OpticalObjectChoice.PENCIL.objectHTMLImageElements;
      }
      return objectHTMLImageElements;
    });
    const htmlImageElementProperty = new DerivedProperty([objectHTMLImageElementsProperty], objectHTMLImageElements => objectHTMLImageElements.rightFacingUpright);
    super(opticalObjectNumber, opticPositionProperty, htmlImageElementProperty, ORIGIN_OFFSET, SCALE_FACTOR, providedOptions);
    this.objectHTMLImageElementsProperty = objectHTMLImageElementsProperty;
  }
}
geometricOptics.register('FramedObject', FramedObject);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJEZXJpdmVkUHJvcGVydHkiLCJWZWN0b3IyIiwiZ2VvbWV0cmljT3B0aWNzIiwiT3B0aWNhbE9iamVjdENob2ljZSIsIkhUTUxJbWFnZUVsZW1lbnRPYmplY3QiLCJPUklHSU5fT0ZGU0VUIiwiU0NBTEVfRkFDVE9SIiwiRnJhbWVkT2JqZWN0IiwiY29uc3RydWN0b3IiLCJvcHRpY2FsT2JqZWN0TnVtYmVyIiwib3B0aWNQb3NpdGlvblByb3BlcnR5Iiwib3B0aWNhbE9iamVjdENob2ljZVByb3BlcnR5IiwicHJvdmlkZWRPcHRpb25zIiwib2JqZWN0SFRNTEltYWdlRWxlbWVudHNQcm9wZXJ0eSIsIm9wdGljYWxPYmplY3RDaG9pY2UiLCJvYmplY3RIVE1MSW1hZ2VFbGVtZW50cyIsImFzc2VydCIsIlBFTkNJTCIsImh0bWxJbWFnZUVsZW1lbnRQcm9wZXJ0eSIsInJpZ2h0RmFjaW5nVXByaWdodCIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiRnJhbWVkT2JqZWN0LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjIsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIEZyYW1lZE9iamVjdCBpcyB0aGUgbW9kZWwgZm9yIHRoZSBcImZyYW1lZCBvYmplY3RzXCIuIFRoZXNlIGFyZSBvYmplY3RzIGluIGEgcGljdHVyZSBmcmFtZSwgd2l0aCAzRCBwZXJzcGVjdGl2ZS5cclxuICpcclxuICogQGF1dGhvciBDaHJpcyBNYWxsZXkgKFBpeGVsWm9vbSwgSW5jLilcclxuICogQGF1dGhvciBNYXJ0aW4gVmVpbGxldHRlXHJcbiAqL1xyXG5cclxuaW1wb3J0IERlcml2ZWRQcm9wZXJ0eSBmcm9tICcuLi8uLi8uLi8uLi9heG9uL2pzL0Rlcml2ZWRQcm9wZXJ0eS5qcyc7XHJcbmltcG9ydCBWZWN0b3IyIGZyb20gJy4uLy4uLy4uLy4uL2RvdC9qcy9WZWN0b3IyLmpzJztcclxuaW1wb3J0IGdlb21ldHJpY09wdGljcyBmcm9tICcuLi8uLi9nZW9tZXRyaWNPcHRpY3MuanMnO1xyXG5pbXBvcnQgVFJlYWRPbmx5UHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vLi4vYXhvbi9qcy9UUmVhZE9ubHlQcm9wZXJ0eS5qcyc7XHJcbmltcG9ydCBPcHRpY2FsT2JqZWN0Q2hvaWNlLCB7IE9iamVjdEhUTUxJbWFnZUVsZW1lbnRzIH0gZnJvbSAnLi9PcHRpY2FsT2JqZWN0Q2hvaWNlLmpzJztcclxuaW1wb3J0IEVudW1lcmF0aW9uUHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vLi4vYXhvbi9qcy9FbnVtZXJhdGlvblByb3BlcnR5LmpzJztcclxuaW1wb3J0IEhUTUxJbWFnZUVsZW1lbnRPYmplY3QsIHsgSFRNTEltYWdlRWxlbWVudE9iamVjdE9wdGlvbnMgfSBmcm9tICcuL0hUTUxJbWFnZUVsZW1lbnRPYmplY3QuanMnO1xyXG5pbXBvcnQgUGlja1JlcXVpcmVkIGZyb20gJy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy90eXBlcy9QaWNrUmVxdWlyZWQuanMnO1xyXG5cclxuLy8geCBzaG91bGQgYmUgMS8yIG9mIFBORyBmaWxlIHdpZHRoLiB5IHNob3VsZCBiZSB0aGUgdGlwIG9mIHRoZSBwZW5jaWwuICt4IHJpZ2h0LCAreSBkb3duLlxyXG5jb25zdCBPUklHSU5fT0ZGU0VUID0gbmV3IFZlY3RvcjIoIDY4LjUsIDEwMCApO1xyXG5cclxuLy8gU2NhbGUgdGhhdCB3aWxsIGJlIGFwcGxpZWQgdG8gLnBuZyBmaWxlcyBmb3IgYWxsIGZyYW1lZCBvYmplY3RzLlxyXG5jb25zdCBTQ0FMRV9GQUNUT1IgPSAwLjI1O1xyXG5cclxudHlwZSBGcmFtZWRPYmplY3RPcHRpb25zID0gUGlja1JlcXVpcmVkPEhUTUxJbWFnZUVsZW1lbnRPYmplY3RPcHRpb25zLCAncG9zaXRpb24nIHwgJ3RhbmRlbSc+O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRnJhbWVkT2JqZWN0IGV4dGVuZHMgSFRNTEltYWdlRWxlbWVudE9iamVjdCB7XHJcblxyXG4gIC8vIEhUTUxJbWFnZUVsZW1lbnRzIChQTkcgZmlsZXMpIHVzZWQgdG8gZHJhdyB0aGlzIGZyYW1lZCBvYmplY3QgYW5kIGl0cyBhc3NvY2lhdGVkIGltYWdlXHJcbiAgcHVibGljIHJlYWRvbmx5IG9iamVjdEhUTUxJbWFnZUVsZW1lbnRzUHJvcGVydHk6IFRSZWFkT25seVByb3BlcnR5PE9iamVjdEhUTUxJbWFnZUVsZW1lbnRzPjtcclxuXHJcbiAgLyoqXHJcbiAgICogQHBhcmFtIG9wdGljYWxPYmplY3ROdW1iZXIgLSBwb3NpdGl2ZSBpbnRlZ2VyIHVzZWQgd2hlbiBsYWJlbGluZyB0aGlzIG9iamVjdFxyXG4gICAqIEBwYXJhbSBvcHRpY1Bvc2l0aW9uUHJvcGVydHlcclxuICAgKiBAcGFyYW0gb3B0aWNhbE9iamVjdENob2ljZVByb3BlcnR5XHJcbiAgICogQHBhcmFtIHByb3ZpZGVkT3B0aW9uc1xyXG4gICAqL1xyXG4gIHB1YmxpYyBjb25zdHJ1Y3Rvciggb3B0aWNhbE9iamVjdE51bWJlcjogbnVtYmVyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgb3B0aWNQb3NpdGlvblByb3BlcnR5OiBUUmVhZE9ubHlQcm9wZXJ0eTxWZWN0b3IyPixcclxuICAgICAgICAgICAgICAgICAgICAgIG9wdGljYWxPYmplY3RDaG9pY2VQcm9wZXJ0eTogRW51bWVyYXRpb25Qcm9wZXJ0eTxPcHRpY2FsT2JqZWN0Q2hvaWNlPixcclxuICAgICAgICAgICAgICAgICAgICAgIHByb3ZpZGVkT3B0aW9uczogRnJhbWVkT2JqZWN0T3B0aW9ucyApIHtcclxuXHJcbiAgICBjb25zdCBvYmplY3RIVE1MSW1hZ2VFbGVtZW50c1Byb3BlcnR5ID0gbmV3IERlcml2ZWRQcm9wZXJ0eShcclxuICAgICAgWyBvcHRpY2FsT2JqZWN0Q2hvaWNlUHJvcGVydHkgXSwgb3B0aWNhbE9iamVjdENob2ljZSA9PiB7XHJcbiAgICAgICAgbGV0IG9iamVjdEhUTUxJbWFnZUVsZW1lbnRzID0gb3B0aWNhbE9iamVjdENob2ljZS5vYmplY3RIVE1MSW1hZ2VFbGVtZW50cztcclxuXHJcbiAgICAgICAgLy8gSWYgdGhlIG9iamVjdCBjaG9pY2UgaXNuJ3QgYSBmcmFtZWQgb2JqZWN0LCBmYWxsYmFjayB0byBQRU5DSUwuXHJcbiAgICAgICAgaWYgKCAhb2JqZWN0SFRNTEltYWdlRWxlbWVudHMgKSB7XHJcbiAgICAgICAgICBhc3NlcnQgJiYgYXNzZXJ0KCBPcHRpY2FsT2JqZWN0Q2hvaWNlLlBFTkNJTC5vYmplY3RIVE1MSW1hZ2VFbGVtZW50cyApO1xyXG4gICAgICAgICAgb2JqZWN0SFRNTEltYWdlRWxlbWVudHMgPSBPcHRpY2FsT2JqZWN0Q2hvaWNlLlBFTkNJTC5vYmplY3RIVE1MSW1hZ2VFbGVtZW50cyE7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gb2JqZWN0SFRNTEltYWdlRWxlbWVudHM7XHJcbiAgICAgIH1cclxuICAgICk7XHJcblxyXG4gICAgY29uc3QgaHRtbEltYWdlRWxlbWVudFByb3BlcnR5ID0gbmV3IERlcml2ZWRQcm9wZXJ0eSggWyBvYmplY3RIVE1MSW1hZ2VFbGVtZW50c1Byb3BlcnR5IF0sXHJcbiAgICAgIG9iamVjdEhUTUxJbWFnZUVsZW1lbnRzID0+IG9iamVjdEhUTUxJbWFnZUVsZW1lbnRzLnJpZ2h0RmFjaW5nVXByaWdodCApO1xyXG5cclxuICAgIHN1cGVyKCBvcHRpY2FsT2JqZWN0TnVtYmVyLCBvcHRpY1Bvc2l0aW9uUHJvcGVydHksIGh0bWxJbWFnZUVsZW1lbnRQcm9wZXJ0eSwgT1JJR0lOX09GRlNFVCwgU0NBTEVfRkFDVE9SLCBwcm92aWRlZE9wdGlvbnMgKTtcclxuXHJcbiAgICB0aGlzLm9iamVjdEhUTUxJbWFnZUVsZW1lbnRzUHJvcGVydHkgPSBvYmplY3RIVE1MSW1hZ2VFbGVtZW50c1Byb3BlcnR5O1xyXG4gIH1cclxufVxyXG5cclxuZ2VvbWV0cmljT3B0aWNzLnJlZ2lzdGVyKCAnRnJhbWVkT2JqZWN0JywgRnJhbWVkT2JqZWN0ICk7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsZUFBZSxNQUFNLHdDQUF3QztBQUNwRSxPQUFPQyxPQUFPLE1BQU0sK0JBQStCO0FBQ25ELE9BQU9DLGVBQWUsTUFBTSwwQkFBMEI7QUFFdEQsT0FBT0MsbUJBQW1CLE1BQW1DLDBCQUEwQjtBQUV2RixPQUFPQyxzQkFBc0IsTUFBeUMsNkJBQTZCO0FBR25HO0FBQ0EsTUFBTUMsYUFBYSxHQUFHLElBQUlKLE9BQU8sQ0FBRSxJQUFJLEVBQUUsR0FBSSxDQUFDOztBQUU5QztBQUNBLE1BQU1LLFlBQVksR0FBRyxJQUFJO0FBSXpCLGVBQWUsTUFBTUMsWUFBWSxTQUFTSCxzQkFBc0IsQ0FBQztFQUUvRDs7RUFHQTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7RUFDU0ksV0FBV0EsQ0FBRUMsbUJBQTJCLEVBQzNCQyxxQkFBaUQsRUFDakRDLDJCQUFxRSxFQUNyRUMsZUFBb0MsRUFBRztJQUV6RCxNQUFNQywrQkFBK0IsR0FBRyxJQUFJYixlQUFlLENBQ3pELENBQUVXLDJCQUEyQixDQUFFLEVBQUVHLG1CQUFtQixJQUFJO01BQ3RELElBQUlDLHVCQUF1QixHQUFHRCxtQkFBbUIsQ0FBQ0MsdUJBQXVCOztNQUV6RTtNQUNBLElBQUssQ0FBQ0EsdUJBQXVCLEVBQUc7UUFDOUJDLE1BQU0sSUFBSUEsTUFBTSxDQUFFYixtQkFBbUIsQ0FBQ2MsTUFBTSxDQUFDRix1QkFBd0IsQ0FBQztRQUN0RUEsdUJBQXVCLEdBQUdaLG1CQUFtQixDQUFDYyxNQUFNLENBQUNGLHVCQUF3QjtNQUMvRTtNQUVBLE9BQU9BLHVCQUF1QjtJQUNoQyxDQUNGLENBQUM7SUFFRCxNQUFNRyx3QkFBd0IsR0FBRyxJQUFJbEIsZUFBZSxDQUFFLENBQUVhLCtCQUErQixDQUFFLEVBQ3ZGRSx1QkFBdUIsSUFBSUEsdUJBQXVCLENBQUNJLGtCQUFtQixDQUFDO0lBRXpFLEtBQUssQ0FBRVYsbUJBQW1CLEVBQUVDLHFCQUFxQixFQUFFUSx3QkFBd0IsRUFBRWIsYUFBYSxFQUFFQyxZQUFZLEVBQUVNLGVBQWdCLENBQUM7SUFFM0gsSUFBSSxDQUFDQywrQkFBK0IsR0FBR0EsK0JBQStCO0VBQ3hFO0FBQ0Y7QUFFQVgsZUFBZSxDQUFDa0IsUUFBUSxDQUFFLGNBQWMsRUFBRWIsWUFBYSxDQUFDIn0=