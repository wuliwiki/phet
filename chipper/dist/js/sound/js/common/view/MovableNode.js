// Copyright 2022, University of Colorado Boulder
/**
 * A node which can be dragged within the given bounds.
 *
 * @author Piet Goris (University of Leuven)
 * @author Sam Reid (PhET Interactive Simulations)
 */

import Property from '../../../../axon/js/Property.js';
import sound from '../../sound.js';
import { Node, DragListener } from '../../../../scenery/js/imports.js';
export default class MoveableNode extends Node {
  constructor(positionProperty, dragBounds, modelViewTransform, child) {
    super();

    // interactivity
    this.cursor = 'pointer';

    // sync with model
    positionProperty.link(position => {
      const viewPosition = modelViewTransform.modelToViewPosition(position);
      this.x = viewPosition.x;
      this.y = viewPosition.y;
    });

    // TODO: Upgraded from another listener type
    this.movableDragHandler = new DragListener({
      positionProperty: positionProperty,
      dragBoundsProperty: new Property(dragBounds),
      // TODO
      transform: modelViewTransform,
      useParentOffset: true
    });
    this.children = [child];
    this.addInputListener(this.movableDragHandler);
  }
}
sound.register('MoveableNode', MoveableNode);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQcm9wZXJ0eSIsInNvdW5kIiwiTm9kZSIsIkRyYWdMaXN0ZW5lciIsIk1vdmVhYmxlTm9kZSIsImNvbnN0cnVjdG9yIiwicG9zaXRpb25Qcm9wZXJ0eSIsImRyYWdCb3VuZHMiLCJtb2RlbFZpZXdUcmFuc2Zvcm0iLCJjaGlsZCIsImN1cnNvciIsImxpbmsiLCJwb3NpdGlvbiIsInZpZXdQb3NpdGlvbiIsIm1vZGVsVG9WaWV3UG9zaXRpb24iLCJ4IiwieSIsIm1vdmFibGVEcmFnSGFuZGxlciIsImRyYWdCb3VuZHNQcm9wZXJ0eSIsInRyYW5zZm9ybSIsInVzZVBhcmVudE9mZnNldCIsImNoaWxkcmVuIiwiYWRkSW5wdXRMaXN0ZW5lciIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiTW92YWJsZU5vZGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjIsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG4vKipcclxuICogQSBub2RlIHdoaWNoIGNhbiBiZSBkcmFnZ2VkIHdpdGhpbiB0aGUgZ2l2ZW4gYm91bmRzLlxyXG4gKlxyXG4gKiBAYXV0aG9yIFBpZXQgR29yaXMgKFVuaXZlcnNpdHkgb2YgTGV1dmVuKVxyXG4gKiBAYXV0aG9yIFNhbSBSZWlkIChQaEVUIEludGVyYWN0aXZlIFNpbXVsYXRpb25zKVxyXG4gKi9cclxuXHJcbmltcG9ydCBQcm9wZXJ0eSBmcm9tICcuLi8uLi8uLi8uLi9heG9uL2pzL1Byb3BlcnR5LmpzJztcclxuaW1wb3J0IHNvdW5kIGZyb20gJy4uLy4uL3NvdW5kLmpzJztcclxuaW1wb3J0IHsgTm9kZSwgRHJhZ0xpc3RlbmVyIH0gZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IFZlY3RvcjIgZnJvbSAnLi4vLi4vLi4vLi4vZG90L2pzL1ZlY3RvcjIuanMnO1xyXG5pbXBvcnQgTW9kZWxWaWV3VHJhbnNmb3JtMiBmcm9tICcuLi8uLi8uLi8uLi9waGV0Y29tbW9uL2pzL3ZpZXcvTW9kZWxWaWV3VHJhbnNmb3JtMi5qcyc7XHJcbmltcG9ydCBCb3VuZHMyIGZyb20gJy4uLy4uLy4uLy4uL2RvdC9qcy9Cb3VuZHMyLmpzJztcclxuaW1wb3J0IFRQcm9wZXJ0eSBmcm9tICcuLi8uLi8uLi8uLi9heG9uL2pzL1RQcm9wZXJ0eS5qcyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNb3ZlYWJsZU5vZGUgZXh0ZW5kcyBOb2RlIHtcclxuICBwcml2YXRlIHJlYWRvbmx5IG1vdmFibGVEcmFnSGFuZGxlcjogRHJhZ0xpc3RlbmVyO1xyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoIHBvc2l0aW9uUHJvcGVydHk6IFRQcm9wZXJ0eTxWZWN0b3IyPiwgZHJhZ0JvdW5kczogQm91bmRzMiwgbW9kZWxWaWV3VHJhbnNmb3JtOiBNb2RlbFZpZXdUcmFuc2Zvcm0yLCBjaGlsZDogTm9kZSApIHtcclxuICAgIHN1cGVyKCk7XHJcblxyXG4gICAgLy8gaW50ZXJhY3Rpdml0eVxyXG4gICAgdGhpcy5jdXJzb3IgPSAncG9pbnRlcic7XHJcblxyXG4gICAgLy8gc3luYyB3aXRoIG1vZGVsXHJcbiAgICBwb3NpdGlvblByb3BlcnR5LmxpbmsoIHBvc2l0aW9uID0+IHtcclxuICAgICAgY29uc3Qgdmlld1Bvc2l0aW9uID0gbW9kZWxWaWV3VHJhbnNmb3JtLm1vZGVsVG9WaWV3UG9zaXRpb24oIHBvc2l0aW9uICk7XHJcbiAgICAgIHRoaXMueCA9IHZpZXdQb3NpdGlvbi54O1xyXG4gICAgICB0aGlzLnkgPSB2aWV3UG9zaXRpb24ueTtcclxuICAgIH0gKTtcclxuXHJcbiAgICAvLyBUT0RPOiBVcGdyYWRlZCBmcm9tIGFub3RoZXIgbGlzdGVuZXIgdHlwZVxyXG4gICAgdGhpcy5tb3ZhYmxlRHJhZ0hhbmRsZXIgPSBuZXcgRHJhZ0xpc3RlbmVyKCB7XHJcbiAgICAgIHBvc2l0aW9uUHJvcGVydHk6IHBvc2l0aW9uUHJvcGVydHksXHJcbiAgICAgIGRyYWdCb3VuZHNQcm9wZXJ0eTogbmV3IFByb3BlcnR5KCBkcmFnQm91bmRzICksIC8vIFRPRE9cclxuICAgICAgdHJhbnNmb3JtOiBtb2RlbFZpZXdUcmFuc2Zvcm0sXHJcbiAgICAgIHVzZVBhcmVudE9mZnNldDogdHJ1ZVxyXG4gICAgfSApO1xyXG5cclxuICAgIHRoaXMuY2hpbGRyZW4gPSBbIGNoaWxkIF07XHJcbiAgICB0aGlzLmFkZElucHV0TGlzdGVuZXIoIHRoaXMubW92YWJsZURyYWdIYW5kbGVyICk7XHJcbiAgfVxyXG5cclxufVxyXG5cclxuc291bmQucmVnaXN0ZXIoICdNb3ZlYWJsZU5vZGUnLCBNb3ZlYWJsZU5vZGUgKTsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLFFBQVEsTUFBTSxpQ0FBaUM7QUFDdEQsT0FBT0MsS0FBSyxNQUFNLGdCQUFnQjtBQUNsQyxTQUFTQyxJQUFJLEVBQUVDLFlBQVksUUFBUSxtQ0FBbUM7QUFNdEUsZUFBZSxNQUFNQyxZQUFZLFNBQVNGLElBQUksQ0FBQztFQUd0Q0csV0FBV0EsQ0FBRUMsZ0JBQW9DLEVBQUVDLFVBQW1CLEVBQUVDLGtCQUF1QyxFQUFFQyxLQUFXLEVBQUc7SUFDcEksS0FBSyxDQUFDLENBQUM7O0lBRVA7SUFDQSxJQUFJLENBQUNDLE1BQU0sR0FBRyxTQUFTOztJQUV2QjtJQUNBSixnQkFBZ0IsQ0FBQ0ssSUFBSSxDQUFFQyxRQUFRLElBQUk7TUFDakMsTUFBTUMsWUFBWSxHQUFHTCxrQkFBa0IsQ0FBQ00sbUJBQW1CLENBQUVGLFFBQVMsQ0FBQztNQUN2RSxJQUFJLENBQUNHLENBQUMsR0FBR0YsWUFBWSxDQUFDRSxDQUFDO01BQ3ZCLElBQUksQ0FBQ0MsQ0FBQyxHQUFHSCxZQUFZLENBQUNHLENBQUM7SUFDekIsQ0FBRSxDQUFDOztJQUVIO0lBQ0EsSUFBSSxDQUFDQyxrQkFBa0IsR0FBRyxJQUFJZCxZQUFZLENBQUU7TUFDMUNHLGdCQUFnQixFQUFFQSxnQkFBZ0I7TUFDbENZLGtCQUFrQixFQUFFLElBQUlsQixRQUFRLENBQUVPLFVBQVcsQ0FBQztNQUFFO01BQ2hEWSxTQUFTLEVBQUVYLGtCQUFrQjtNQUM3QlksZUFBZSxFQUFFO0lBQ25CLENBQUUsQ0FBQztJQUVILElBQUksQ0FBQ0MsUUFBUSxHQUFHLENBQUVaLEtBQUssQ0FBRTtJQUN6QixJQUFJLENBQUNhLGdCQUFnQixDQUFFLElBQUksQ0FBQ0wsa0JBQW1CLENBQUM7RUFDbEQ7QUFFRjtBQUVBaEIsS0FBSyxDQUFDc0IsUUFBUSxDQUFFLGNBQWMsRUFBRW5CLFlBQWEsQ0FBQyJ9