// Copyright 2022, University of Colorado Boulder
/**
 * Main entry point for the sim.
 *
 * @author Piet Goris (University of Leuven)
 * @author Sam Reid (PhET Interactive Simulations)
 */

import Sim from '../../joist/js/Sim.js';
import simLauncher from '../../joist/js/simLauncher.js';
import { Image } from '../../scenery/js/imports.js';
import measureIcon_png from '../images/measureIcon_png.js';
import pressureIcon_png from '../images/pressureIcon_png.js';
import reflectionIcon_png from '../images/reflectionIcon_png.js';
import singleSourceIcon_png from '../images/singleSourceIcon_png.js';
import twoSourceIcon_png from '../images/twoSourceIcon_png.js';
import MeasureModel from './measure/MeasureModel.js';
import PressureModel from './air-pressure/PressureModel.js';
import ReflectionModel from './reflection/ReflectionModel.js';
import IntroModel from './intro/IntroModel.js';
import TwoSourceModel from './two-sources/TwoSourceModel.js';
import SoundScreen from './common/SoundScreen.js';
import MeasureView from './measure/MeasureView.js';
import PressureView from './air-pressure/PressureView.js';
import ReflectionView from './reflection/ReflectionView.js';
import IntroView from './intro/IntroView.js';
import TwoSourceView from './two-sources/TwoSourceView.js';
import SoundStrings from './SoundStrings.js';

// launch the sim - beware that scenery Image nodes created outside of simLauncher.launch() will have zero bounds
// until the images are fully loaded, see https://github.com/phetsims/coulombs-law/issues/70
simLauncher.launch(() => {
  const sim = new Sim(SoundStrings.sound.titleStringProperty, [new SoundScreen(SoundStrings.singleSource.titleStringProperty, () => new IntroModel(), model => new IntroView(model), new Image(singleSourceIcon_png)), new SoundScreen(SoundStrings.measure.titleStringProperty, () => new MeasureModel(), model => new MeasureView(model), new Image(measureIcon_png)), new SoundScreen(SoundStrings.twoSource.titleStringProperty, () => new TwoSourceModel(), model => new TwoSourceView(model), new Image(twoSourceIcon_png)), new SoundScreen(SoundStrings.reflection.titleStringProperty, () => new ReflectionModel(), model => new ReflectionView(model), new Image(reflectionIcon_png)), new SoundScreen(SoundStrings.airPressure.titleStringProperty, () => new PressureModel(), model => new PressureView(model), new Image(pressureIcon_png))], {
    //TODO fill in credits, all of these fields are optional, see joist.CreditsNode
    credits: {
      leadDesign: '',
      softwareDevelopment: 'Piet Goris, Sam Reid',
      team: '',
      qualityAssurance: '',
      graphicArts: '',
      soundDesign: '',
      thanks: ''
    }
  });
  sim.start();
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTaW0iLCJzaW1MYXVuY2hlciIsIkltYWdlIiwibWVhc3VyZUljb25fcG5nIiwicHJlc3N1cmVJY29uX3BuZyIsInJlZmxlY3Rpb25JY29uX3BuZyIsInNpbmdsZVNvdXJjZUljb25fcG5nIiwidHdvU291cmNlSWNvbl9wbmciLCJNZWFzdXJlTW9kZWwiLCJQcmVzc3VyZU1vZGVsIiwiUmVmbGVjdGlvbk1vZGVsIiwiSW50cm9Nb2RlbCIsIlR3b1NvdXJjZU1vZGVsIiwiU291bmRTY3JlZW4iLCJNZWFzdXJlVmlldyIsIlByZXNzdXJlVmlldyIsIlJlZmxlY3Rpb25WaWV3IiwiSW50cm9WaWV3IiwiVHdvU291cmNlVmlldyIsIlNvdW5kU3RyaW5ncyIsImxhdW5jaCIsInNpbSIsInNvdW5kIiwidGl0bGVTdHJpbmdQcm9wZXJ0eSIsInNpbmdsZVNvdXJjZSIsIm1vZGVsIiwibWVhc3VyZSIsInR3b1NvdXJjZSIsInJlZmxlY3Rpb24iLCJhaXJQcmVzc3VyZSIsImNyZWRpdHMiLCJsZWFkRGVzaWduIiwic29mdHdhcmVEZXZlbG9wbWVudCIsInRlYW0iLCJxdWFsaXR5QXNzdXJhbmNlIiwiZ3JhcGhpY0FydHMiLCJzb3VuZERlc2lnbiIsInRoYW5rcyIsInN0YXJ0Il0sInNvdXJjZXMiOlsic291bmQtbWFpbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcbi8qKlxyXG4gKiBNYWluIGVudHJ5IHBvaW50IGZvciB0aGUgc2ltLlxyXG4gKlxyXG4gKiBAYXV0aG9yIFBpZXQgR29yaXMgKFVuaXZlcnNpdHkgb2YgTGV1dmVuKVxyXG4gKiBAYXV0aG9yIFNhbSBSZWlkIChQaEVUIEludGVyYWN0aXZlIFNpbXVsYXRpb25zKVxyXG4gKi9cclxuXHJcbmltcG9ydCBTaW0gZnJvbSAnLi4vLi4vam9pc3QvanMvU2ltLmpzJztcclxuaW1wb3J0IHNpbUxhdW5jaGVyIGZyb20gJy4uLy4uL2pvaXN0L2pzL3NpbUxhdW5jaGVyLmpzJztcclxuaW1wb3J0IHsgSW1hZ2UgfSBmcm9tICcuLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgbWVhc3VyZUljb25fcG5nIGZyb20gJy4uL2ltYWdlcy9tZWFzdXJlSWNvbl9wbmcuanMnO1xyXG5pbXBvcnQgcHJlc3N1cmVJY29uX3BuZyBmcm9tICcuLi9pbWFnZXMvcHJlc3N1cmVJY29uX3BuZy5qcyc7XHJcbmltcG9ydCByZWZsZWN0aW9uSWNvbl9wbmcgZnJvbSAnLi4vaW1hZ2VzL3JlZmxlY3Rpb25JY29uX3BuZy5qcyc7XHJcbmltcG9ydCBzaW5nbGVTb3VyY2VJY29uX3BuZyBmcm9tICcuLi9pbWFnZXMvc2luZ2xlU291cmNlSWNvbl9wbmcuanMnO1xyXG5pbXBvcnQgdHdvU291cmNlSWNvbl9wbmcgZnJvbSAnLi4vaW1hZ2VzL3R3b1NvdXJjZUljb25fcG5nLmpzJztcclxuaW1wb3J0IE1lYXN1cmVNb2RlbCBmcm9tICcuL21lYXN1cmUvTWVhc3VyZU1vZGVsLmpzJztcclxuaW1wb3J0IFByZXNzdXJlTW9kZWwgZnJvbSAnLi9haXItcHJlc3N1cmUvUHJlc3N1cmVNb2RlbC5qcyc7XHJcbmltcG9ydCBSZWZsZWN0aW9uTW9kZWwgZnJvbSAnLi9yZWZsZWN0aW9uL1JlZmxlY3Rpb25Nb2RlbC5qcyc7XHJcbmltcG9ydCBJbnRyb01vZGVsIGZyb20gJy4vaW50cm8vSW50cm9Nb2RlbC5qcyc7XHJcbmltcG9ydCBUd29Tb3VyY2VNb2RlbCBmcm9tICcuL3R3by1zb3VyY2VzL1R3b1NvdXJjZU1vZGVsLmpzJztcclxuaW1wb3J0IFNvdW5kU2NyZWVuIGZyb20gJy4vY29tbW9uL1NvdW5kU2NyZWVuLmpzJztcclxuaW1wb3J0IE1lYXN1cmVWaWV3IGZyb20gJy4vbWVhc3VyZS9NZWFzdXJlVmlldy5qcyc7XHJcbmltcG9ydCBQcmVzc3VyZVZpZXcgZnJvbSAnLi9haXItcHJlc3N1cmUvUHJlc3N1cmVWaWV3LmpzJztcclxuaW1wb3J0IFJlZmxlY3Rpb25WaWV3IGZyb20gJy4vcmVmbGVjdGlvbi9SZWZsZWN0aW9uVmlldy5qcyc7XHJcbmltcG9ydCBJbnRyb1ZpZXcgZnJvbSAnLi9pbnRyby9JbnRyb1ZpZXcuanMnO1xyXG5pbXBvcnQgVHdvU291cmNlVmlldyBmcm9tICcuL3R3by1zb3VyY2VzL1R3b1NvdXJjZVZpZXcuanMnO1xyXG5pbXBvcnQgU291bmRTdHJpbmdzIGZyb20gJy4vU291bmRTdHJpbmdzLmpzJztcclxuXHJcbi8vIGxhdW5jaCB0aGUgc2ltIC0gYmV3YXJlIHRoYXQgc2NlbmVyeSBJbWFnZSBub2RlcyBjcmVhdGVkIG91dHNpZGUgb2Ygc2ltTGF1bmNoZXIubGF1bmNoKCkgd2lsbCBoYXZlIHplcm8gYm91bmRzXHJcbi8vIHVudGlsIHRoZSBpbWFnZXMgYXJlIGZ1bGx5IGxvYWRlZCwgc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9waGV0c2ltcy9jb3Vsb21icy1sYXcvaXNzdWVzLzcwXHJcbnNpbUxhdW5jaGVyLmxhdW5jaCggKCkgPT4ge1xyXG4gIGNvbnN0IHNpbSA9IG5ldyBTaW0oIFNvdW5kU3RyaW5ncy5zb3VuZC50aXRsZVN0cmluZ1Byb3BlcnR5LCBbXHJcbiAgICBuZXcgU291bmRTY3JlZW4oIFNvdW5kU3RyaW5ncy5zaW5nbGVTb3VyY2UudGl0bGVTdHJpbmdQcm9wZXJ0eSwgKCkgPT4gbmV3IEludHJvTW9kZWwoKSwgbW9kZWwgPT4gbmV3IEludHJvVmlldyggbW9kZWwgKSwgbmV3IEltYWdlKCBzaW5nbGVTb3VyY2VJY29uX3BuZyApICksXHJcbiAgICBuZXcgU291bmRTY3JlZW4oIFNvdW5kU3RyaW5ncy5tZWFzdXJlLnRpdGxlU3RyaW5nUHJvcGVydHksICgpID0+IG5ldyBNZWFzdXJlTW9kZWwoKSwgbW9kZWwgPT4gbmV3IE1lYXN1cmVWaWV3KCBtb2RlbCApLCBuZXcgSW1hZ2UoIG1lYXN1cmVJY29uX3BuZyApICksXHJcbiAgICBuZXcgU291bmRTY3JlZW4oIFNvdW5kU3RyaW5ncy50d29Tb3VyY2UudGl0bGVTdHJpbmdQcm9wZXJ0eSwgKCkgPT4gbmV3IFR3b1NvdXJjZU1vZGVsKCksIG1vZGVsID0+IG5ldyBUd29Tb3VyY2VWaWV3KCBtb2RlbCApLCBuZXcgSW1hZ2UoIHR3b1NvdXJjZUljb25fcG5nICkgKSxcclxuICAgIG5ldyBTb3VuZFNjcmVlbiggU291bmRTdHJpbmdzLnJlZmxlY3Rpb24udGl0bGVTdHJpbmdQcm9wZXJ0eSwgKCkgPT4gbmV3IFJlZmxlY3Rpb25Nb2RlbCgpLCBtb2RlbCA9PiBuZXcgUmVmbGVjdGlvblZpZXcoIG1vZGVsICksIG5ldyBJbWFnZSggcmVmbGVjdGlvbkljb25fcG5nICkgKSxcclxuICAgIG5ldyBTb3VuZFNjcmVlbiggU291bmRTdHJpbmdzLmFpclByZXNzdXJlLnRpdGxlU3RyaW5nUHJvcGVydHksICgpID0+IG5ldyBQcmVzc3VyZU1vZGVsKCksIG1vZGVsID0+IG5ldyBQcmVzc3VyZVZpZXcoIG1vZGVsICksIG5ldyBJbWFnZSggcHJlc3N1cmVJY29uX3BuZyApIClcclxuICBdLCB7XHJcblxyXG4gICAgLy9UT0RPIGZpbGwgaW4gY3JlZGl0cywgYWxsIG9mIHRoZXNlIGZpZWxkcyBhcmUgb3B0aW9uYWwsIHNlZSBqb2lzdC5DcmVkaXRzTm9kZVxyXG4gICAgY3JlZGl0czoge1xyXG4gICAgICBsZWFkRGVzaWduOiAnJyxcclxuICAgICAgc29mdHdhcmVEZXZlbG9wbWVudDogJ1BpZXQgR29yaXMsIFNhbSBSZWlkJyxcclxuICAgICAgdGVhbTogJycsXHJcbiAgICAgIHF1YWxpdHlBc3N1cmFuY2U6ICcnLFxyXG4gICAgICBncmFwaGljQXJ0czogJycsXHJcbiAgICAgIHNvdW5kRGVzaWduOiAnJyxcclxuICAgICAgdGhhbmtzOiAnJ1xyXG4gICAgfVxyXG4gIH0gKTtcclxuXHJcbiAgc2ltLnN0YXJ0KCk7XHJcbn0gKTsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLEdBQUcs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