// Copyright 2016-2022, University of Colorado Boulder

/**
 * Particle is the base class for particles.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import NumberProperty from '../../../../axon/js/NumberProperty.js';
import Vector2 from '../../../../dot/js/Vector2.js';
import Vector2Property from '../../../../dot/js/Vector2Property.js';
import optionize from '../../../../phet-core/js/optionize.js';
import PhetioObject from '../../../../tandem/js/PhetioObject.js';
import modelsOfTheHydrogenAtom from '../../modelsOfTheHydrogenAtom.js';
export default class Particle extends PhetioObject {
  // See SelfOptions for documentation.

  constructor(providedOptions) {
    const options = optionize()({
      // SelfOptions
      position: Vector2.ZERO,
      speed: 0,
      direction: 0,
      // PhetioObjectOptions
      phetioState: false //TODO
    }, providedOptions);
    super(options);
    this.radius = options.radius;
    this.positionProperty = new Vector2Property(options.position, {
      tandem: options.tandem.createTandem('positionProperty'),
      phetioReadOnly: true
    });
    this.speedProperty = new NumberProperty(options.speed, {
      tandem: options.tandem.createTandem('speedProperty'),
      phetioReadOnly: true
    });
    this.directionProperty = new NumberProperty(options.direction, {
      tandem: options.tandem.createTandem('directionProperty'),
      phetioReadOnly: true
    });
  }
  reset() {
    this.positionProperty.reset();
    this.speedProperty.reset();
    this.directionProperty.reset();
  }
  dispose() {
    this.positionProperty.dispose();
    this.speedProperty.dispose();
    this.directionProperty.dispose();
    super.dispose();
  }
  move(dt) {
    const speed = this.speedProperty.value;
    const distance = speed * dt;
    const dx = Math.cos(this.directionProperty.value) * distance;
    const dy = Math.sin(this.directionProperty.value) * distance;
    const x = this.positionProperty.value.x + dx;
    const y = this.positionProperty.value.y + dy;
    this.positionProperty.value = new Vector2(x, y);
  }

  /**
   * For debugging and logging only. Do not rely on the format of this string!
   */
  toString() {
    return `radius=${this.radius} ` + ` position=${this.positionProperty.value}` + ` speed=${this.speedProperty.value}` + ` direction=${this.directionProperty.value}`;
  }
}
modelsOfTheHydrogenAtom.register('Particle', Particle);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,