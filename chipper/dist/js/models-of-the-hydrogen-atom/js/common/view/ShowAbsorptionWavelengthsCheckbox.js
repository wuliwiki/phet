// Copyright 2022, University of Colorado Boulder

//TODO white beam is not visible on white background in projector mode
/**
 * BeamNode is the beam the comes out of the gun.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import Checkbox from '../../../../sun/js/Checkbox.js';
import PhetFont from '../../../../scenery-phet/js/PhetFont.js';
import optionize from '../../../../phet-core/js/optionize.js';
import { Text } from '../../../../scenery/js/imports.js';
import modelsOfTheHydrogenAtom from '../../modelsOfTheHydrogenAtom.js';
import ModelsOfTheHydrogenAtomStrings from '../../ModelsOfTheHydrogenAtomStrings.js';
import MOTHAColors from '../MOTHAColors.js';
import DerivedProperty from '../../../../axon/js/DerivedProperty.js';
import BooleanIO from '../../../../tandem/js/types/BooleanIO.js';
export default class ShowAbsorptionWavelengthsCheckbox extends Checkbox {
  constructor(absorptionWavelengthsVisibleProperty, hydrogenAtomModelProperty, providedOptions) {
    const options = optionize()({
      // Visible if the hydrogen-atom model has transition wavelengths
      visibleProperty: new DerivedProperty([hydrogenAtomModelProperty], hydrogenAtomModel => hydrogenAtomModel.hasTransitionWavelengths, {
        tandem: providedOptions.tandem.createTandem('visibleProperty'),
        phetioValueType: BooleanIO
      }),
      checkboxColor: MOTHAColors.showAbsorptionWavelengthCheckboxStrokeProperty,
      checkboxColorBackground: MOTHAColors.showAbsorptionWavelengthCheckboxFillProperty
    }, providedOptions);
    const text = new Text(ModelsOfTheHydrogenAtomStrings.showAbsorptionWavelengthsStringProperty, {
      font: new PhetFont(14),
      fill: MOTHAColors.showAbsorptionWavelengthTextFillProperty,
      maxWidth: 250,
      tandem: options.tandem.createTandem('text')
    });
    super(absorptionWavelengthsVisibleProperty, text, options);
  }
  dispose() {
    assert && assert(false, 'dispose is not supported, exists for the lifetime of the sim');
    super.dispose();
  }
}
modelsOfTheHydrogenAtom.register('ShowAbsorptionWavelengthsCheckbox', ShowAbsorptionWavelengthsCheckbox);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJDaGVja2JveCIsIlBoZXRGb250Iiwib3B0aW9uaXplIiwiVGV4dCIsIm1vZGVsc09mVGhlSHlkcm9nZW5BdG9tIiwiTW9kZWxzT2ZUaGVIeWRyb2dlbkF0b21TdHJpbmdzIiwiTU9USEFDb2xvcnMiLCJEZXJpdmVkUHJvcGVydHkiLCJCb29sZWFuSU8iLCJTaG93QWJzb3JwdGlvbldhdmVsZW5ndGhzQ2hlY2tib3giLCJjb25zdHJ1Y3RvciIsImFic29ycHRpb25XYXZlbGVuZ3Roc1Zpc2libGVQcm9wZXJ0eSIsImh5ZHJvZ2VuQXRvbU1vZGVsUHJvcGVydHkiLCJwcm92aWRlZE9wdGlvbnMiLCJvcHRpb25zIiwidmlzaWJsZVByb3BlcnR5IiwiaHlkcm9nZW5BdG9tTW9kZWwiLCJoYXNUcmFuc2l0aW9uV2F2ZWxlbmd0aHMiLCJ0YW5kZW0iLCJjcmVhdGVUYW5kZW0iLCJwaGV0aW9WYWx1ZVR5cGUiLCJjaGVja2JveENvbG9yIiwic2hvd0Fic29ycHRpb25XYXZlbGVuZ3RoQ2hlY2tib3hTdHJva2VQcm9wZXJ0eSIsImNoZWNrYm94Q29sb3JCYWNrZ3JvdW5kIiwic2hvd0Fic29ycHRpb25XYXZlbGVuZ3RoQ2hlY2tib3hGaWxsUHJvcGVydHkiLCJ0ZXh0Iiwic2hvd0Fic29ycHRpb25XYXZlbGVuZ3Roc1N0cmluZ1Byb3BlcnR5IiwiZm9udCIsImZpbGwiLCJzaG93QWJzb3JwdGlvbldhdmVsZW5ndGhUZXh0RmlsbFByb3BlcnR5IiwibWF4V2lkdGgiLCJkaXNwb3NlIiwiYXNzZXJ0IiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJTaG93QWJzb3JwdGlvbldhdmVsZW5ndGhzQ2hlY2tib3gudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjIsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLy9UT0RPIHdoaXRlIGJlYW0gaXMgbm90IHZpc2libGUgb24gd2hpdGUgYmFja2dyb3VuZCBpbiBwcm9qZWN0b3IgbW9kZVxyXG4vKipcclxuICogQmVhbU5vZGUgaXMgdGhlIGJlYW0gdGhlIGNvbWVzIG91dCBvZiB0aGUgZ3VuLlxyXG4gKlxyXG4gKiBAYXV0aG9yIENocmlzIE1hbGxleSAoUGl4ZWxab29tLCBJbmMuKVxyXG4gKi9cclxuXHJcbmltcG9ydCBDaGVja2JveCwgeyBDaGVja2JveE9wdGlvbnMgfSBmcm9tICcuLi8uLi8uLi8uLi9zdW4vanMvQ2hlY2tib3guanMnO1xyXG5pbXBvcnQgUGhldEZvbnQgZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS1waGV0L2pzL1BoZXRGb250LmpzJztcclxuaW1wb3J0IG9wdGlvbml6ZSwgeyBFbXB0eVNlbGZPcHRpb25zIH0gZnJvbSAnLi4vLi4vLi4vLi4vcGhldC1jb3JlL2pzL29wdGlvbml6ZS5qcyc7XHJcbmltcG9ydCBQaWNrUmVxdWlyZWQgZnJvbSAnLi4vLi4vLi4vLi4vcGhldC1jb3JlL2pzL3R5cGVzL1BpY2tSZXF1aXJlZC5qcyc7XHJcbmltcG9ydCB7IFRleHQgfSBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgbW9kZWxzT2ZUaGVIeWRyb2dlbkF0b20gZnJvbSAnLi4vLi4vbW9kZWxzT2ZUaGVIeWRyb2dlbkF0b20uanMnO1xyXG5pbXBvcnQgTW9kZWxzT2ZUaGVIeWRyb2dlbkF0b21TdHJpbmdzIGZyb20gJy4uLy4uL01vZGVsc09mVGhlSHlkcm9nZW5BdG9tU3RyaW5ncy5qcyc7XHJcbmltcG9ydCBNT1RIQUNvbG9ycyBmcm9tICcuLi9NT1RIQUNvbG9ycy5qcyc7XHJcbmltcG9ydCBEZXJpdmVkUHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vLi4vYXhvbi9qcy9EZXJpdmVkUHJvcGVydHkuanMnO1xyXG5pbXBvcnQgQm9vbGVhbklPIGZyb20gJy4uLy4uLy4uLy4uL3RhbmRlbS9qcy90eXBlcy9Cb29sZWFuSU8uanMnO1xyXG5pbXBvcnQgVFJlYWRPbmx5UHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vLi4vYXhvbi9qcy9UUmVhZE9ubHlQcm9wZXJ0eS5qcyc7XHJcbmltcG9ydCBIeWRyb2dlbkF0b20gZnJvbSAnLi4vbW9kZWwvSHlkcm9nZW5BdG9tLmpzJztcclxuaW1wb3J0IFByb3BlcnR5IGZyb20gJy4uLy4uLy4uLy4uL2F4b24vanMvUHJvcGVydHkuanMnO1xyXG5cclxudHlwZSBTZWxmT3B0aW9ucyA9IEVtcHR5U2VsZk9wdGlvbnM7XHJcblxyXG50eXBlIFNob3dBYnNvcnB0aW9uV2F2ZWxlbmd0aHNDaGVja2JveE9wdGlvbnMgPSBTZWxmT3B0aW9ucyAmIFBpY2tSZXF1aXJlZDxDaGVja2JveE9wdGlvbnMsICd0YW5kZW0nPjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNob3dBYnNvcnB0aW9uV2F2ZWxlbmd0aHNDaGVja2JveCBleHRlbmRzIENoZWNrYm94IHtcclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKCBhYnNvcnB0aW9uV2F2ZWxlbmd0aHNWaXNpYmxlUHJvcGVydHk6IFByb3BlcnR5PGJvb2xlYW4+LFxyXG4gICAgICAgICAgICAgICAgICAgICAgaHlkcm9nZW5BdG9tTW9kZWxQcm9wZXJ0eTogVFJlYWRPbmx5UHJvcGVydHk8SHlkcm9nZW5BdG9tPixcclxuICAgICAgICAgICAgICAgICAgICAgIHByb3ZpZGVkT3B0aW9uczogU2hvd0Fic29ycHRpb25XYXZlbGVuZ3Roc0NoZWNrYm94T3B0aW9ucyApIHtcclxuXHJcbiAgICBjb25zdCBvcHRpb25zID0gb3B0aW9uaXplPFNob3dBYnNvcnB0aW9uV2F2ZWxlbmd0aHNDaGVja2JveE9wdGlvbnMsIFNlbGZPcHRpb25zLCBDaGVja2JveE9wdGlvbnM+KCkoIHtcclxuXHJcbiAgICAgIC8vIFZpc2libGUgaWYgdGhlIGh5ZHJvZ2VuLWF0b20gbW9kZWwgaGFzIHRyYW5zaXRpb24gd2F2ZWxlbmd0aHNcclxuICAgICAgdmlzaWJsZVByb3BlcnR5OiBuZXcgRGVyaXZlZFByb3BlcnR5KCBbIGh5ZHJvZ2VuQXRvbU1vZGVsUHJvcGVydHkgXSxcclxuICAgICAgICBoeWRyb2dlbkF0b21Nb2RlbCA9PiBoeWRyb2dlbkF0b21Nb2RlbC5oYXNUcmFuc2l0aW9uV2F2ZWxlbmd0aHMsIHtcclxuICAgICAgICAgIHRhbmRlbTogcHJvdmlkZWRPcHRpb25zLnRhbmRlbS5jcmVhdGVUYW5kZW0oICd2aXNpYmxlUHJvcGVydHknICksXHJcbiAgICAgICAgICBwaGV0aW9WYWx1ZVR5cGU6IEJvb2xlYW5JT1xyXG4gICAgICAgIH0gKSxcclxuICAgICAgY2hlY2tib3hDb2xvcjogTU9USEFDb2xvcnMuc2hvd0Fic29ycHRpb25XYXZlbGVuZ3RoQ2hlY2tib3hTdHJva2VQcm9wZXJ0eSxcclxuICAgICAgY2hlY2tib3hDb2xvckJhY2tncm91bmQ6IE1PVEhBQ29sb3JzLnNob3dBYnNvcnB0aW9uV2F2ZWxlbmd0aENoZWNrYm94RmlsbFByb3BlcnR5XHJcbiAgICB9LCBwcm92aWRlZE9wdGlvbnMgKTtcclxuXHJcbiAgICBjb25zdCB0ZXh0ID0gbmV3IFRleHQoIE1vZGVsc09mVGhlSHlkcm9nZW5BdG9tU3RyaW5ncy5zaG93QWJzb3JwdGlvbldhdmVsZW5ndGhzU3RyaW5nUHJvcGVydHksIHtcclxuICAgICAgZm9udDogbmV3IFBoZXRGb250KCAxNCApLFxyXG4gICAgICBmaWxsOiBNT1RIQUNvbG9ycy5zaG93QWJzb3JwdGlvbldhdmVsZW5ndGhUZXh0RmlsbFByb3BlcnR5LFxyXG4gICAgICBtYXhXaWR0aDogMjUwLFxyXG4gICAgICB0YW5kZW06IG9wdGlvbnMudGFuZGVtLmNyZWF0ZVRhbmRlbSggJ3RleHQnIClcclxuICAgIH0gKTtcclxuXHJcbiAgICBzdXBlciggYWJzb3JwdGlvbldhdmVsZW5ndGhzVmlzaWJsZVByb3BlcnR5LCB0ZXh0LCBvcHRpb25zICk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgb3ZlcnJpZGUgZGlzcG9zZSgpOiB2b2lkIHtcclxuICAgIGFzc2VydCAmJiBhc3NlcnQoIGZhbHNlLCAnZGlzcG9zZSBpcyBub3Qgc3VwcG9ydGVkLCBleGlzdHMgZm9yIHRoZSBsaWZldGltZSBvZiB0aGUgc2ltJyApO1xyXG4gICAgc3VwZXIuZGlzcG9zZSgpO1xyXG4gIH1cclxufVxyXG5cclxubW9kZWxzT2ZUaGVIeWRyb2dlbkF0b20ucmVnaXN0ZXIoICdTaG93QWJzb3JwdGlvbldhdmVsZW5ndGhzQ2hlY2tib3gnLCBTaG93QWJzb3JwdGlvbldhdmVsZW5ndGhzQ2hlY2tib3ggKTsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxRQUFRLE1BQTJCLGdDQUFnQztBQUMxRSxPQUFPQyxRQUFRLE1BQU0seUNBQXlDO0FBQzlELE9BQU9DLFNBQVMsTUFBNEIsdUNBQXVDO0FBRW5GLFNBQVNDLElBQUksUUFBUSxtQ0FBbUM7QUFDeEQsT0FBT0MsdUJBQXVCLE1BQU0sa0NBQWtDO0FBQ3RFLE9BQU9DLDhCQUE4QixNQUFNLHlDQUF5QztBQUNwRixPQUFPQyxXQUFXLE1BQU0sbUJBQW1CO0FBQzNDLE9BQU9DLGVBQWUsTUFBTSx3Q0FBd0M7QUFDcEUsT0FBT0MsU0FBUyxNQUFNLDBDQUEwQztBQVNoRSxlQUFlLE1BQU1DLGlDQUFpQyxTQUFTVCxRQUFRLENBQUM7RUFFL0RVLFdBQVdBLENBQUVDLG9DQUF1RCxFQUN2REMseUJBQTBELEVBQzFEQyxlQUF5RCxFQUFHO0lBRTlFLE1BQU1DLE9BQU8sR0FBR1osU0FBUyxDQUF5RSxDQUFDLENBQUU7TUFFbkc7TUFDQWEsZUFBZSxFQUFFLElBQUlSLGVBQWUsQ0FBRSxDQUFFSyx5QkFBeUIsQ0FBRSxFQUNqRUksaUJBQWlCLElBQUlBLGlCQUFpQixDQUFDQyx3QkFBd0IsRUFBRTtRQUMvREMsTUFBTSxFQUFFTCxlQUFlLENBQUNLLE1BQU0sQ0FBQ0MsWUFBWSxDQUFFLGlCQUFrQixDQUFDO1FBQ2hFQyxlQUFlLEVBQUVaO01BQ25CLENBQUUsQ0FBQztNQUNMYSxhQUFhLEVBQUVmLFdBQVcsQ0FBQ2dCLDhDQUE4QztNQUN6RUMsdUJBQXVCLEVBQUVqQixXQUFXLENBQUNrQjtJQUN2QyxDQUFDLEVBQUVYLGVBQWdCLENBQUM7SUFFcEIsTUFBTVksSUFBSSxHQUFHLElBQUl0QixJQUFJLENBQUVFLDhCQUE4QixDQUFDcUIsdUNBQXVDLEVBQUU7TUFDN0ZDLElBQUksRUFBRSxJQUFJMUIsUUFBUSxDQUFFLEVBQUcsQ0FBQztNQUN4QjJCLElBQUksRUFBRXRCLFdBQVcsQ0FBQ3VCLHdDQUF3QztNQUMxREMsUUFBUSxFQUFFLEdBQUc7TUFDYlosTUFBTSxFQUFFSixPQUFPLENBQUNJLE1BQU0sQ0FBQ0MsWUFBWSxDQUFFLE1BQU87SUFDOUMsQ0FBRSxDQUFDO0lBRUgsS0FBSyxDQUFFUixvQ0FBb0MsRUFBRWMsSUFBSSxFQUFFWCxPQUFRLENBQUM7RUFDOUQ7RUFFZ0JpQixPQUFPQSxDQUFBLEVBQVM7SUFDOUJDLE1BQU0sSUFBSUEsTUFBTSxDQUFFLEtBQUssRUFBRSw4REFBK0QsQ0FBQztJQUN6RixLQUFLLENBQUNELE9BQU8sQ0FBQyxDQUFDO0VBQ2pCO0FBQ0Y7QUFFQTNCLHVCQUF1QixDQUFDNkIsUUFBUSxDQUFFLG1DQUFtQyxFQUFFeEIsaUNBQWtDLENBQUMifQ==