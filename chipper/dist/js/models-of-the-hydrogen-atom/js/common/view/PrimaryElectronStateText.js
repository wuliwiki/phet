// Copyright 2022, University of Colorado Boulder

/**
 * PrimaryElectronStateText displays the primary state (n) of the electron, used for the Bohr and de Broglie models.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import PatternStringProperty from '../../../../axon/js/PatternStringProperty.js';
import optionize from '../../../../phet-core/js/optionize.js';
import PhetFont from '../../../../scenery-phet/js/PhetFont.js';
import { RichText } from '../../../../scenery/js/imports.js';
import modelsOfTheHydrogenAtom from '../../modelsOfTheHydrogenAtom.js';
import ModelsOfTheHydrogenAtomStrings from '../../ModelsOfTheHydrogenAtomStrings.js';
import MOTHAColors from '../MOTHAColors.js';
import MOTHASymbols from '../MOTHASymbols.js';
export default class PrimaryElectronStateText extends RichText {
  constructor(electronStateProperty, providedOptions) {
    const options = optionize()({
      // TextOptions
      font: new PhetFont(16),
      fill: MOTHAColors.stateDisplayFillProperty
    }, providedOptions);
    const stringProperty = new PatternStringProperty(ModelsOfTheHydrogenAtomStrings.nEqualsStringProperty, {
      nSymbol: MOTHASymbols.nStringProperty,
      nValue: electronStateProperty
    });
    super(stringProperty, options);
  }
  dispose() {
    assert && assert(false, 'dispose is not supported, exists for the lifetime of the sim');
    super.dispose();
  }
}
modelsOfTheHydrogenAtom.register('PrimaryElectronStateText', PrimaryElectronStateText);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQYXR0ZXJuU3RyaW5nUHJvcGVydHkiLCJvcHRpb25pemUiLCJQaGV0Rm9udCIsIlJpY2hUZXh0IiwibW9kZWxzT2ZUaGVIeWRyb2dlbkF0b20iLCJNb2RlbHNPZlRoZUh5ZHJvZ2VuQXRvbVN0cmluZ3MiLCJNT1RIQUNvbG9ycyIsIk1PVEhBU3ltYm9scyIsIlByaW1hcnlFbGVjdHJvblN0YXRlVGV4dCIsImNvbnN0cnVjdG9yIiwiZWxlY3Ryb25TdGF0ZVByb3BlcnR5IiwicHJvdmlkZWRPcHRpb25zIiwib3B0aW9ucyIsImZvbnQiLCJmaWxsIiwic3RhdGVEaXNwbGF5RmlsbFByb3BlcnR5Iiwic3RyaW5nUHJvcGVydHkiLCJuRXF1YWxzU3RyaW5nUHJvcGVydHkiLCJuU3ltYm9sIiwiblN0cmluZ1Byb3BlcnR5IiwiblZhbHVlIiwiZGlzcG9zZSIsImFzc2VydCIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiUHJpbWFyeUVsZWN0cm9uU3RhdGVUZXh0LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIyLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBQcmltYXJ5RWxlY3Ryb25TdGF0ZVRleHQgZGlzcGxheXMgdGhlIHByaW1hcnkgc3RhdGUgKG4pIG9mIHRoZSBlbGVjdHJvbiwgdXNlZCBmb3IgdGhlIEJvaHIgYW5kIGRlIEJyb2dsaWUgbW9kZWxzLlxyXG4gKlxyXG4gKiBAYXV0aG9yIENocmlzIE1hbGxleSAoUGl4ZWxab29tLCBJbmMuKVxyXG4gKi9cclxuXHJcbmltcG9ydCBQYXR0ZXJuU3RyaW5nUHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vLi4vYXhvbi9qcy9QYXR0ZXJuU3RyaW5nUHJvcGVydHkuanMnO1xyXG5pbXBvcnQgVFJlYWRPbmx5UHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vLi4vYXhvbi9qcy9UUmVhZE9ubHlQcm9wZXJ0eS5qcyc7XHJcbmltcG9ydCBvcHRpb25pemUsIHsgRW1wdHlTZWxmT3B0aW9ucyB9IGZyb20gJy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy9vcHRpb25pemUuanMnO1xyXG5pbXBvcnQgUGlja1JlcXVpcmVkIGZyb20gJy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy90eXBlcy9QaWNrUmVxdWlyZWQuanMnO1xyXG5pbXBvcnQgUGhldEZvbnQgZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS1waGV0L2pzL1BoZXRGb250LmpzJztcclxuaW1wb3J0IHsgTm9kZVRyYW5zbGF0aW9uT3B0aW9ucywgUmljaFRleHQsIFJpY2hUZXh0T3B0aW9ucyB9IGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XHJcbmltcG9ydCBtb2RlbHNPZlRoZUh5ZHJvZ2VuQXRvbSBmcm9tICcuLi8uLi9tb2RlbHNPZlRoZUh5ZHJvZ2VuQXRvbS5qcyc7XHJcbmltcG9ydCBNb2RlbHNPZlRoZUh5ZHJvZ2VuQXRvbVN0cmluZ3MgZnJvbSAnLi4vLi4vTW9kZWxzT2ZUaGVIeWRyb2dlbkF0b21TdHJpbmdzLmpzJztcclxuaW1wb3J0IE1PVEhBQ29sb3JzIGZyb20gJy4uL01PVEhBQ29sb3JzLmpzJztcclxuaW1wb3J0IE1PVEhBU3ltYm9scyBmcm9tICcuLi9NT1RIQVN5bWJvbHMuanMnO1xyXG5cclxudHlwZSBTZWxmT3B0aW9ucyA9IEVtcHR5U2VsZk9wdGlvbnM7XHJcblxyXG50eXBlIFByaW1hcnlFbGVjdHJvblN0YXRlTm9kZU9wdGlvbnMgPSBTZWxmT3B0aW9ucyAmIE5vZGVUcmFuc2xhdGlvbk9wdGlvbnMgJiBQaWNrUmVxdWlyZWQ8UmljaFRleHRPcHRpb25zLCAndGFuZGVtJz47XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQcmltYXJ5RWxlY3Ryb25TdGF0ZVRleHQgZXh0ZW5kcyBSaWNoVGV4dCB7XHJcblxyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvciggZWxlY3Ryb25TdGF0ZVByb3BlcnR5OiBUUmVhZE9ubHlQcm9wZXJ0eTxudW1iZXI+LCBwcm92aWRlZE9wdGlvbnM6IFByaW1hcnlFbGVjdHJvblN0YXRlTm9kZU9wdGlvbnMgKSB7XHJcblxyXG4gICAgY29uc3Qgb3B0aW9ucyA9IG9wdGlvbml6ZTxQcmltYXJ5RWxlY3Ryb25TdGF0ZU5vZGVPcHRpb25zLCBTZWxmT3B0aW9ucywgUmljaFRleHRPcHRpb25zPigpKCB7XHJcblxyXG4gICAgICAvLyBUZXh0T3B0aW9uc1xyXG4gICAgICBmb250OiBuZXcgUGhldEZvbnQoIDE2ICksXHJcbiAgICAgIGZpbGw6IE1PVEhBQ29sb3JzLnN0YXRlRGlzcGxheUZpbGxQcm9wZXJ0eVxyXG4gICAgfSwgcHJvdmlkZWRPcHRpb25zICk7XHJcblxyXG4gICAgY29uc3Qgc3RyaW5nUHJvcGVydHkgPSBuZXcgUGF0dGVyblN0cmluZ1Byb3BlcnR5KCBNb2RlbHNPZlRoZUh5ZHJvZ2VuQXRvbVN0cmluZ3MubkVxdWFsc1N0cmluZ1Byb3BlcnR5LCB7XHJcbiAgICAgIG5TeW1ib2w6IE1PVEhBU3ltYm9scy5uU3RyaW5nUHJvcGVydHksXHJcbiAgICAgIG5WYWx1ZTogZWxlY3Ryb25TdGF0ZVByb3BlcnR5XHJcbiAgICB9ICk7XHJcblxyXG4gICAgc3VwZXIoIHN0cmluZ1Byb3BlcnR5LCBvcHRpb25zICk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgb3ZlcnJpZGUgZGlzcG9zZSgpOiB2b2lkIHtcclxuICAgIGFzc2VydCAmJiBhc3NlcnQoIGZhbHNlLCAnZGlzcG9zZSBpcyBub3Qgc3VwcG9ydGVkLCBleGlzdHMgZm9yIHRoZSBsaWZldGltZSBvZiB0aGUgc2ltJyApO1xyXG4gICAgc3VwZXIuZGlzcG9zZSgpO1xyXG4gIH1cclxufVxyXG5cclxubW9kZWxzT2ZUaGVIeWRyb2dlbkF0b20ucmVnaXN0ZXIoICdQcmltYXJ5RWxlY3Ryb25TdGF0ZVRleHQnLCBQcmltYXJ5RWxlY3Ryb25TdGF0ZVRleHQgKTsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EscUJBQXFCLE1BQU0sOENBQThDO0FBRWhGLE9BQU9DLFNBQVMsTUFBNEIsdUNBQXVDO0FBRW5GLE9BQU9DLFFBQVEsTUFBTSx5Q0FBeUM7QUFDOUQsU0FBaUNDLFFBQVEsUUFBeUIsbUNBQW1DO0FBQ3JHLE9BQU9DLHVCQUF1QixNQUFNLGtDQUFrQztBQUN0RSxPQUFPQyw4QkFBOEIsTUFBTSx5Q0FBeUM7QUFDcEYsT0FBT0MsV0FBVyxNQUFNLG1CQUFtQjtBQUMzQyxPQUFPQyxZQUFZLE1BQU0sb0JBQW9CO0FBTTdDLGVBQWUsTUFBTUMsd0JBQXdCLFNBQVNMLFFBQVEsQ0FBQztFQUV0RE0sV0FBV0EsQ0FBRUMscUJBQWdELEVBQUVDLGVBQWdELEVBQUc7SUFFdkgsTUFBTUMsT0FBTyxHQUFHWCxTQUFTLENBQWdFLENBQUMsQ0FBRTtNQUUxRjtNQUNBWSxJQUFJLEVBQUUsSUFBSVgsUUFBUSxDQUFFLEVBQUcsQ0FBQztNQUN4QlksSUFBSSxFQUFFUixXQUFXLENBQUNTO0lBQ3BCLENBQUMsRUFBRUosZUFBZ0IsQ0FBQztJQUVwQixNQUFNSyxjQUFjLEdBQUcsSUFBSWhCLHFCQUFxQixDQUFFSyw4QkFBOEIsQ0FBQ1kscUJBQXFCLEVBQUU7TUFDdEdDLE9BQU8sRUFBRVgsWUFBWSxDQUFDWSxlQUFlO01BQ3JDQyxNQUFNLEVBQUVWO0lBQ1YsQ0FBRSxDQUFDO0lBRUgsS0FBSyxDQUFFTSxjQUFjLEVBQUVKLE9BQVEsQ0FBQztFQUNsQztFQUVnQlMsT0FBT0EsQ0FBQSxFQUFTO0lBQzlCQyxNQUFNLElBQUlBLE1BQU0sQ0FBRSxLQUFLLEVBQUUsOERBQStELENBQUM7SUFDekYsS0FBSyxDQUFDRCxPQUFPLENBQUMsQ0FBQztFQUNqQjtBQUNGO0FBRUFqQix1QkFBdUIsQ0FBQ21CLFFBQVEsQ0FBRSwwQkFBMEIsRUFBRWYsd0JBQXlCLENBQUMifQ==