// Copyright 2017-2021, University of Colorado Boulder

/**
 * Length/mass panel and gravity/friction panel
 *
 * @author Andrey Zelenkov (Mlearner)
 */

import { VBox } from '../../../../scenery/js/imports.js';
import Panel from '../../../../sun/js/Panel.js';
import pendulumLab from '../../pendulumLab.js';
import PendulumLabConstants from '../PendulumLabConstants.js';
import FrictionSliderNode from './FrictionSliderNode.js';
import GravityControlNode from './GravityControlNode.js';
class GlobalControlPanel extends Panel {
  /**
   * @param {PendulumLabModel} model - Main model of pendulum lab simulation.
   * @param {Node} popupLayer
   * @param {boolean} hasGravityTweakers
   */
  constructor(model, popupLayer, hasGravityTweakers) {
    const gravityControlNode = new GravityControlNode(model.gravityProperty, model.gravityRange, model.bodyProperty, popupLayer, {
      useTextSliderLabels: !hasGravityTweakers
    });
    const frictionSlider = new FrictionSliderNode(model.frictionProperty, model.frictionRange);
    const content = new VBox({
      spacing: 10,
      children: [gravityControlNode, frictionSlider]
    });
    super(content, PendulumLabConstants.PANEL_OPTIONS);
  }
}
pendulumLab.register('GlobalControlPanel', GlobalControlPanel);
export default GlobalControlPanel;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJWQm94IiwiUGFuZWwiLCJwZW5kdWx1bUxhYiIsIlBlbmR1bHVtTGFiQ29uc3RhbnRzIiwiRnJpY3Rpb25TbGlkZXJOb2RlIiwiR3Jhdml0eUNvbnRyb2xOb2RlIiwiR2xvYmFsQ29udHJvbFBhbmVsIiwiY29uc3RydWN0b3IiLCJtb2RlbCIsInBvcHVwTGF5ZXIiLCJoYXNHcmF2aXR5VHdlYWtlcnMiLCJncmF2aXR5Q29udHJvbE5vZGUiLCJncmF2aXR5UHJvcGVydHkiLCJncmF2aXR5UmFuZ2UiLCJib2R5UHJvcGVydHkiLCJ1c2VUZXh0U2xpZGVyTGFiZWxzIiwiZnJpY3Rpb25TbGlkZXIiLCJmcmljdGlvblByb3BlcnR5IiwiZnJpY3Rpb25SYW5nZSIsImNvbnRlbnQiLCJzcGFjaW5nIiwiY2hpbGRyZW4iLCJQQU5FTF9PUFRJT05TIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJHbG9iYWxDb250cm9sUGFuZWwuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTctMjAyMSwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogTGVuZ3RoL21hc3MgcGFuZWwgYW5kIGdyYXZpdHkvZnJpY3Rpb24gcGFuZWxcclxuICpcclxuICogQGF1dGhvciBBbmRyZXkgWmVsZW5rb3YgKE1sZWFybmVyKVxyXG4gKi9cclxuXHJcbmltcG9ydCB7IFZCb3ggfSBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgUGFuZWwgZnJvbSAnLi4vLi4vLi4vLi4vc3VuL2pzL1BhbmVsLmpzJztcclxuaW1wb3J0IHBlbmR1bHVtTGFiIGZyb20gJy4uLy4uL3BlbmR1bHVtTGFiLmpzJztcclxuaW1wb3J0IFBlbmR1bHVtTGFiQ29uc3RhbnRzIGZyb20gJy4uL1BlbmR1bHVtTGFiQ29uc3RhbnRzLmpzJztcclxuaW1wb3J0IEZyaWN0aW9uU2xpZGVyTm9kZSBmcm9tICcuL0ZyaWN0aW9uU2xpZGVyTm9kZS5qcyc7XHJcbmltcG9ydCBHcmF2aXR5Q29udHJvbE5vZGUgZnJvbSAnLi9HcmF2aXR5Q29udHJvbE5vZGUuanMnO1xyXG5cclxuY2xhc3MgR2xvYmFsQ29udHJvbFBhbmVsIGV4dGVuZHMgUGFuZWwge1xyXG5cclxuICAvKipcclxuICAgKiBAcGFyYW0ge1BlbmR1bHVtTGFiTW9kZWx9IG1vZGVsIC0gTWFpbiBtb2RlbCBvZiBwZW5kdWx1bSBsYWIgc2ltdWxhdGlvbi5cclxuICAgKiBAcGFyYW0ge05vZGV9IHBvcHVwTGF5ZXJcclxuICAgKiBAcGFyYW0ge2Jvb2xlYW59IGhhc0dyYXZpdHlUd2Vha2Vyc1xyXG4gICAqL1xyXG4gIGNvbnN0cnVjdG9yKCBtb2RlbCwgcG9wdXBMYXllciwgaGFzR3Jhdml0eVR3ZWFrZXJzICkge1xyXG5cclxuICAgIGNvbnN0IGdyYXZpdHlDb250cm9sTm9kZSA9IG5ldyBHcmF2aXR5Q29udHJvbE5vZGUoIG1vZGVsLmdyYXZpdHlQcm9wZXJ0eSwgbW9kZWwuZ3Jhdml0eVJhbmdlLCBtb2RlbC5ib2R5UHJvcGVydHksIHBvcHVwTGF5ZXIsIHtcclxuICAgICAgdXNlVGV4dFNsaWRlckxhYmVsczogIWhhc0dyYXZpdHlUd2Vha2Vyc1xyXG4gICAgfSApO1xyXG4gICAgY29uc3QgZnJpY3Rpb25TbGlkZXIgPSBuZXcgRnJpY3Rpb25TbGlkZXJOb2RlKCBtb2RlbC5mcmljdGlvblByb3BlcnR5LCBtb2RlbC5mcmljdGlvblJhbmdlICk7XHJcblxyXG4gICAgY29uc3QgY29udGVudCA9IG5ldyBWQm94KCB7XHJcbiAgICAgIHNwYWNpbmc6IDEwLFxyXG4gICAgICBjaGlsZHJlbjogW1xyXG4gICAgICAgIGdyYXZpdHlDb250cm9sTm9kZSxcclxuICAgICAgICBmcmljdGlvblNsaWRlclxyXG4gICAgICBdXHJcbiAgICB9ICk7XHJcblxyXG4gICAgc3VwZXIoIGNvbnRlbnQsIFBlbmR1bHVtTGFiQ29uc3RhbnRzLlBBTkVMX09QVElPTlMgKTtcclxuICB9XHJcbn1cclxuXHJcbnBlbmR1bHVtTGFiLnJlZ2lzdGVyKCAnR2xvYmFsQ29udHJvbFBhbmVsJywgR2xvYmFsQ29udHJvbFBhbmVsICk7XHJcbmV4cG9ydCBkZWZhdWx0IEdsb2JhbENvbnRyb2xQYW5lbDsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsU0FBU0EsSUFBSSxRQUFRLG1DQUFtQztBQUN4RCxPQUFPQyxLQUFLLE1BQU0sNkJBQTZCO0FBQy9DLE9BQU9DLFdBQVcsTUFBTSxzQkFBc0I7QUFDOUMsT0FBT0Msb0JBQW9CLE1BQU0sNEJBQTRCO0FBQzdELE9BQU9DLGtCQUFrQixNQUFNLHlCQUF5QjtBQUN4RCxPQUFPQyxrQkFBa0IsTUFBTSx5QkFBeUI7QUFFeEQsTUFBTUMsa0JBQWtCLFNBQVNMLEtBQUssQ0FBQztFQUVyQztBQUNGO0FBQ0E7QUFDQTtBQUNBO0VBQ0VNLFdBQVdBLENBQUVDLEtBQUssRUFBRUMsVUFBVSxFQUFFQyxrQkFBa0IsRUFBRztJQUVuRCxNQUFNQyxrQkFBa0IsR0FBRyxJQUFJTixrQkFBa0IsQ0FBRUcsS0FBSyxDQUFDSSxlQUFlLEVBQUVKLEtBQUssQ0FBQ0ssWUFBWSxFQUFFTCxLQUFLLENBQUNNLFlBQVksRUFBRUwsVUFBVSxFQUFFO01BQzVITSxtQkFBbUIsRUFBRSxDQUFDTDtJQUN4QixDQUFFLENBQUM7SUFDSCxNQUFNTSxjQUFjLEdBQUcsSUFBSVosa0JBQWtCLENBQUVJLEtBQUssQ0FBQ1MsZ0JBQWdCLEVBQUVULEtBQUssQ0FBQ1UsYUFBYyxDQUFDO0lBRTVGLE1BQU1DLE9BQU8sR0FBRyxJQUFJbkIsSUFBSSxDQUFFO01BQ3hCb0IsT0FBTyxFQUFFLEVBQUU7TUFDWEMsUUFBUSxFQUFFLENBQ1JWLGtCQUFrQixFQUNsQkssY0FBYztJQUVsQixDQUFFLENBQUM7SUFFSCxLQUFLLENBQUVHLE9BQU8sRUFBRWhCLG9CQUFvQixDQUFDbUIsYUFBYyxDQUFDO0VBQ3REO0FBQ0Y7QUFFQXBCLFdBQVcsQ0FBQ3FCLFFBQVEsQ0FBRSxvQkFBb0IsRUFBRWpCLGtCQUFtQixDQUFDO0FBQ2hFLGVBQWVBLGtCQUFrQiJ9