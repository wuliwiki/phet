// Copyright 2021-2022, University of Colorado Boulder
const fs = require('fs');
const keyLines = fs.readFileSync('../scenery/js/imports.ts', 'utf-8').split('\n');

// import Node from '../../../../scenery/js/nodes/Node.js';
const mapLine = text => {
  // console.log( text );
  const imported = text.substring(text.indexOf('{') + 1, text.indexOf('}')).trim();
  if (imported.includes(',')) {
    // console.log( imported );
    console.log('multiline: ' + imported);
  } else {
    const found = keyLines.filter(key => key.includes('/' + imported + '.js') && (key.includes('default as ' + imported + ',') || key.includes('default as ' + imported + ' ')));
    // console.log( found.length );
    if (found.length === 1) {
      // console.log( found );
    } else {
      console.log('wrong count: ' + imported + ': ' + found.length);
    }
  }
  return text;
};
const visit = path => {
  const list = fs.readdirSync(path);
  list.forEach(filename => {
    const child = path + '/' + filename;
    const stats = fs.statSync(child);
    if (stats && stats.isDirectory()) {
      visit(child);
    } else {
      if (!child.includes('node_modules') && child.includes('js') && !child.includes('build') && !child.includes('dist') && (child.endsWith('.js') || child.endsWith('.ts') && !child.includes('sherpa/'))) {
        const text = fs.readFileSync(child, 'utf-8');
        if (text.includes('scenery/js/imports.js')) {
          // console.log( child );
          const lines = text.split('\n');
          const mapped = lines.map(line => {
            // eslint-disable-line no-unused-vars
            line = line.trim();
            if (line.includes('scenery/js/imports.js') && line.endsWith(';')) {
              return mapLine(line);
            } else {
              return line;
            }
          });
        }
      }
    }
  });
};
visit('/Users/samreid/apache-document-root/main');
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJmcyIsInJlcXVpcmUiLCJrZXlMaW5lcyIsInJlYWRGaWxlU3luYyIsInNwbGl0IiwibWFwTGluZSIsInRleHQiLCJpbXBvcnRlZCIsInN1YnN0cmluZyIsImluZGV4T2YiLCJ0cmltIiwiaW5jbHVkZXMiLCJjb25zb2xlIiwibG9nIiwiZm91bmQiLCJmaWx0ZXIiLCJrZXkiLCJsZW5ndGgiLCJ2aXNpdCIsInBhdGgiLCJsaXN0IiwicmVhZGRpclN5bmMiLCJmb3JFYWNoIiwiZmlsZW5hbWUiLCJjaGlsZCIsInN0YXRzIiwic3RhdFN5bmMiLCJpc0RpcmVjdG9yeSIsImVuZHNXaXRoIiwibGluZXMiLCJtYXBwZWQiLCJtYXAiLCJsaW5lIl0sInNvdXJjZXMiOlsic2NlbmVyeS1pbXBvcnRzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjIsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5jb25zdCBmcyA9IHJlcXVpcmUoICdmcycgKTtcclxuXHJcbmNvbnN0IGtleUxpbmVzID0gZnMucmVhZEZpbGVTeW5jKCAnLi4vc2NlbmVyeS9qcy9pbXBvcnRzLnRzJywgJ3V0Zi04JyApLnNwbGl0KCAnXFxuJyApO1xyXG5cclxuLy8gaW1wb3J0IE5vZGUgZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS9qcy9ub2Rlcy9Ob2RlLmpzJztcclxuY29uc3QgbWFwTGluZSA9IHRleHQgPT4ge1xyXG4gIC8vIGNvbnNvbGUubG9nKCB0ZXh0ICk7XHJcbiAgY29uc3QgaW1wb3J0ZWQgPSB0ZXh0LnN1YnN0cmluZyggdGV4dC5pbmRleE9mKCAneycgKSArIDEsIHRleHQuaW5kZXhPZiggJ30nICkgKS50cmltKCk7XHJcblxyXG4gIGlmICggaW1wb3J0ZWQuaW5jbHVkZXMoICcsJyApICkge1xyXG4gICAgLy8gY29uc29sZS5sb2coIGltcG9ydGVkICk7XHJcbiAgICBjb25zb2xlLmxvZyggJ211bHRpbGluZTogJyArIGltcG9ydGVkICk7XHJcbiAgfVxyXG4gIGVsc2Uge1xyXG4gICAgY29uc3QgZm91bmQgPSBrZXlMaW5lcy5maWx0ZXIoIGtleSA9PiBrZXkuaW5jbHVkZXMoICcvJyArIGltcG9ydGVkICsgJy5qcycgKSAmJlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoIGtleS5pbmNsdWRlcyggJ2RlZmF1bHQgYXMgJyArIGltcG9ydGVkICsgJywnICkgfHwga2V5LmluY2x1ZGVzKCAnZGVmYXVsdCBhcyAnICsgaW1wb3J0ZWQgKyAnICcgKSApXHJcbiAgICApO1xyXG4gICAgLy8gY29uc29sZS5sb2coIGZvdW5kLmxlbmd0aCApO1xyXG4gICAgaWYgKCBmb3VuZC5sZW5ndGggPT09IDEgKSB7XHJcbiAgICAgIC8vIGNvbnNvbGUubG9nKCBmb3VuZCApO1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKCAnd3JvbmcgY291bnQ6ICcgKyBpbXBvcnRlZCArICc6ICcgKyBmb3VuZC5sZW5ndGggKTtcclxuICAgIH1cclxuICB9XHJcbiAgcmV0dXJuIHRleHQ7XHJcbn07XHJcblxyXG5jb25zdCB2aXNpdCA9IHBhdGggPT4ge1xyXG4gIGNvbnN0IGxpc3QgPSBmcy5yZWFkZGlyU3luYyggcGF0aCApO1xyXG4gIGxpc3QuZm9yRWFjaCggZmlsZW5hbWUgPT4ge1xyXG4gICAgY29uc3QgY2hpbGQgPSBwYXRoICsgJy8nICsgZmlsZW5hbWU7XHJcbiAgICBjb25zdCBzdGF0cyA9IGZzLnN0YXRTeW5jKCBjaGlsZCApO1xyXG4gICAgaWYgKCBzdGF0cyAmJiBzdGF0cy5pc0RpcmVjdG9yeSgpICkge1xyXG4gICAgICB2aXNpdCggY2hpbGQgKTtcclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICBpZiAoXHJcbiAgICAgICAgIWNoaWxkLmluY2x1ZGVzKCAnbm9kZV9tb2R1bGVzJyApICYmXHJcbiAgICAgICAgY2hpbGQuaW5jbHVkZXMoICdqcycgKSAmJlxyXG4gICAgICAgICFjaGlsZC5pbmNsdWRlcyggJ2J1aWxkJyApICYmXHJcbiAgICAgICAgIWNoaWxkLmluY2x1ZGVzKCAnZGlzdCcgKSAmJlxyXG4gICAgICAgICggY2hpbGQuZW5kc1dpdGgoICcuanMnICkgfHwgY2hpbGQuZW5kc1dpdGgoICcudHMnICkgJiZcclxuICAgICAgICAgICFjaGlsZC5pbmNsdWRlcyggJ3NoZXJwYS8nIClcclxuICAgICAgICApICkge1xyXG5cclxuXHJcbiAgICAgICAgY29uc3QgdGV4dCA9IGZzLnJlYWRGaWxlU3luYyggY2hpbGQsICd1dGYtOCcgKTtcclxuICAgICAgICBpZiAoIHRleHQuaW5jbHVkZXMoICdzY2VuZXJ5L2pzL2ltcG9ydHMuanMnICkgKSB7XHJcbiAgICAgICAgICAvLyBjb25zb2xlLmxvZyggY2hpbGQgKTtcclxuICAgICAgICAgIGNvbnN0IGxpbmVzID0gdGV4dC5zcGxpdCggJ1xcbicgKTtcclxuICAgICAgICAgIGNvbnN0IG1hcHBlZCA9IGxpbmVzLm1hcCggbGluZSA9PiB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnNcclxuICAgICAgICAgICAgbGluZSA9IGxpbmUudHJpbSgpO1xyXG4gICAgICAgICAgICBpZiAoIGxpbmUuaW5jbHVkZXMoICdzY2VuZXJ5L2pzL2ltcG9ydHMuanMnICkgJiYgbGluZS5lbmRzV2l0aCggJzsnICkgKSB7XHJcbiAgICAgICAgICAgICAgcmV0dXJuIG1hcExpbmUoIGxpbmUgKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICByZXR1cm4gbGluZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfSApO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH0gKTtcclxufTtcclxuXHJcbnZpc2l0KCAnL1VzZXJzL3NhbXJlaWQvYXBhY2hlLWRvY3VtZW50LXJvb3QvbWFpbicgKTsiXSwibWFwcGluZ3MiOiJBQUFB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