// Copyright 2023, University of Colorado Boulder

import CAVAccordionBox from '../../common/view/CAVAccordionBox.js';
import { AlignGroup, Text } from '../../../../scenery/js/imports.js';
import CenterAndVariabilityStrings from '../../CenterAndVariabilityStrings.js';
import PhetFont from '../../../../scenery-phet/js/PhetFont.js';
import centerAndVariability from '../../centerAndVariability.js';
import MedianPlotNode from './MedianPlotNode.js';
import TopRepresentationCheckboxGroup from '../../common/view/TopRepresentationCheckboxGroup.js';
import VerticalCheckboxGroup from '../../../../sun/js/VerticalCheckboxGroup.js';
export default class MeanAndMedianAccordionBox extends CAVAccordionBox {
  constructor(model, layoutBounds, tandem, top, playAreaNumberLineNode) {
    const iconGroup = new AlignGroup();
    const checkboxGroup = new VerticalCheckboxGroup([TopRepresentationCheckboxGroup.getMedianCheckboxWithIconItem(iconGroup, model.isShowingTopMedianProperty), TopRepresentationCheckboxGroup.getMeanCheckboxWithIconItem(iconGroup, model.isShowingTopMeanProperty)], {
      tandem: tandem.createTandem('accordionCheckboxGroup')
    });

    // There is only one scene in the mean and median screen
    const sceneModel = model.selectedSceneModelProperty.value;
    const plotNode = new MedianPlotNode(model, sceneModel, {
      tandem: tandem.createTandem('plotNode')
    });
    super(sceneModel.resetEmitter, plotNode, new Text(CenterAndVariabilityStrings.distanceInMetersStringProperty, {
      font: new PhetFont(16),
      maxWidth: 300
    }), layoutBounds, checkboxGroup, {
      leftMargin: 0,
      tandem: tandem,
      top: top,
      centerX: layoutBounds.centerX
    });
  }
}
centerAndVariability.register('MeanAndMedianAccordionBox', MeanAndMedianAccordionBox);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJDQVZBY2NvcmRpb25Cb3giLCJBbGlnbkdyb3VwIiwiVGV4dCIsIkNlbnRlckFuZFZhcmlhYmlsaXR5U3RyaW5ncyIsIlBoZXRGb250IiwiY2VudGVyQW5kVmFyaWFiaWxpdHkiLCJNZWRpYW5QbG90Tm9kZSIsIlRvcFJlcHJlc2VudGF0aW9uQ2hlY2tib3hHcm91cCIsIlZlcnRpY2FsQ2hlY2tib3hHcm91cCIsIk1lYW5BbmRNZWRpYW5BY2NvcmRpb25Cb3giLCJjb25zdHJ1Y3RvciIsIm1vZGVsIiwibGF5b3V0Qm91bmRzIiwidGFuZGVtIiwidG9wIiwicGxheUFyZWFOdW1iZXJMaW5lTm9kZSIsImljb25Hcm91cCIsImNoZWNrYm94R3JvdXAiLCJnZXRNZWRpYW5DaGVja2JveFdpdGhJY29uSXRlbSIsImlzU2hvd2luZ1RvcE1lZGlhblByb3BlcnR5IiwiZ2V0TWVhbkNoZWNrYm94V2l0aEljb25JdGVtIiwiaXNTaG93aW5nVG9wTWVhblByb3BlcnR5IiwiY3JlYXRlVGFuZGVtIiwic2NlbmVNb2RlbCIsInNlbGVjdGVkU2NlbmVNb2RlbFByb3BlcnR5IiwidmFsdWUiLCJwbG90Tm9kZSIsInJlc2V0RW1pdHRlciIsImRpc3RhbmNlSW5NZXRlcnNTdHJpbmdQcm9wZXJ0eSIsImZvbnQiLCJtYXhXaWR0aCIsImxlZnRNYXJnaW4iLCJjZW50ZXJYIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJNZWFuQW5kTWVkaWFuQWNjb3JkaW9uQm94LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIzLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbmltcG9ydCBDQVZBY2NvcmRpb25Cb3ggZnJvbSAnLi4vLi4vY29tbW9uL3ZpZXcvQ0FWQWNjb3JkaW9uQm94LmpzJztcclxuaW1wb3J0IHsgQWxpZ25Hcm91cCwgTm9kZSwgVGV4dCB9IGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XHJcbmltcG9ydCBDZW50ZXJBbmRWYXJpYWJpbGl0eVN0cmluZ3MgZnJvbSAnLi4vLi4vQ2VudGVyQW5kVmFyaWFiaWxpdHlTdHJpbmdzLmpzJztcclxuaW1wb3J0IFBoZXRGb250IGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnktcGhldC9qcy9QaGV0Rm9udC5qcyc7XHJcbmltcG9ydCBCb3VuZHMyIGZyb20gJy4uLy4uLy4uLy4uL2RvdC9qcy9Cb3VuZHMyLmpzJztcclxuaW1wb3J0IFRhbmRlbSBmcm9tICcuLi8uLi8uLi8uLi90YW5kZW0vanMvVGFuZGVtLmpzJztcclxuaW1wb3J0IGNlbnRlckFuZFZhcmlhYmlsaXR5IGZyb20gJy4uLy4uL2NlbnRlckFuZFZhcmlhYmlsaXR5LmpzJztcclxuaW1wb3J0IE1lYW5BbmRNZWRpYW5Nb2RlbCBmcm9tICcuLi9tb2RlbC9NZWFuQW5kTWVkaWFuTW9kZWwuanMnO1xyXG5pbXBvcnQgTWVkaWFuUGxvdE5vZGUgZnJvbSAnLi9NZWRpYW5QbG90Tm9kZS5qcyc7XHJcbmltcG9ydCBUb3BSZXByZXNlbnRhdGlvbkNoZWNrYm94R3JvdXAgZnJvbSAnLi4vLi4vY29tbW9uL3ZpZXcvVG9wUmVwcmVzZW50YXRpb25DaGVja2JveEdyb3VwLmpzJztcclxuaW1wb3J0IFZlcnRpY2FsQ2hlY2tib3hHcm91cCBmcm9tICcuLi8uLi8uLi8uLi9zdW4vanMvVmVydGljYWxDaGVja2JveEdyb3VwLmpzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1lYW5BbmRNZWRpYW5BY2NvcmRpb25Cb3ggZXh0ZW5kcyBDQVZBY2NvcmRpb25Cb3gge1xyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoIG1vZGVsOiBNZWFuQW5kTWVkaWFuTW9kZWwsIGxheW91dEJvdW5kczogQm91bmRzMiwgdGFuZGVtOiBUYW5kZW0sIHRvcDogbnVtYmVyLCBwbGF5QXJlYU51bWJlckxpbmVOb2RlOiBOb2RlICkge1xyXG4gICAgY29uc3QgaWNvbkdyb3VwID0gbmV3IEFsaWduR3JvdXAoKTtcclxuXHJcbiAgICBjb25zdCBjaGVja2JveEdyb3VwID0gbmV3IFZlcnRpY2FsQ2hlY2tib3hHcm91cCggW1xyXG4gICAgICBUb3BSZXByZXNlbnRhdGlvbkNoZWNrYm94R3JvdXAuZ2V0TWVkaWFuQ2hlY2tib3hXaXRoSWNvbkl0ZW0oIGljb25Hcm91cCwgbW9kZWwuaXNTaG93aW5nVG9wTWVkaWFuUHJvcGVydHkgKSxcclxuICAgICAgVG9wUmVwcmVzZW50YXRpb25DaGVja2JveEdyb3VwLmdldE1lYW5DaGVja2JveFdpdGhJY29uSXRlbSggaWNvbkdyb3VwLCBtb2RlbC5pc1Nob3dpbmdUb3BNZWFuUHJvcGVydHkgKVxyXG4gICAgXSwge1xyXG4gICAgICB0YW5kZW06IHRhbmRlbS5jcmVhdGVUYW5kZW0oICdhY2NvcmRpb25DaGVja2JveEdyb3VwJyApXHJcbiAgICB9ICk7XHJcblxyXG4gICAgLy8gVGhlcmUgaXMgb25seSBvbmUgc2NlbmUgaW4gdGhlIG1lYW4gYW5kIG1lZGlhbiBzY3JlZW5cclxuICAgIGNvbnN0IHNjZW5lTW9kZWwgPSBtb2RlbC5zZWxlY3RlZFNjZW5lTW9kZWxQcm9wZXJ0eS52YWx1ZTtcclxuXHJcbiAgICBjb25zdCBwbG90Tm9kZSA9IG5ldyBNZWRpYW5QbG90Tm9kZSggbW9kZWwsIHNjZW5lTW9kZWwsIHsgdGFuZGVtOiB0YW5kZW0uY3JlYXRlVGFuZGVtKCAncGxvdE5vZGUnICkgfSApO1xyXG5cclxuICAgIHN1cGVyKCBzY2VuZU1vZGVsLnJlc2V0RW1pdHRlciwgcGxvdE5vZGUsXHJcbiAgICAgIG5ldyBUZXh0KCBDZW50ZXJBbmRWYXJpYWJpbGl0eVN0cmluZ3MuZGlzdGFuY2VJbk1ldGVyc1N0cmluZ1Byb3BlcnR5LCB7XHJcbiAgICAgICAgZm9udDogbmV3IFBoZXRGb250KCAxNiApLFxyXG4gICAgICAgIG1heFdpZHRoOiAzMDBcclxuICAgICAgfSApLFxyXG4gICAgICBsYXlvdXRCb3VuZHMsXHJcbiAgICAgIGNoZWNrYm94R3JvdXAsXHJcbiAgICAgIHtcclxuICAgICAgICBsZWZ0TWFyZ2luOiAwLFxyXG4gICAgICAgIHRhbmRlbTogdGFuZGVtLFxyXG4gICAgICAgIHRvcDogdG9wLFxyXG4gICAgICAgIGNlbnRlclg6IGxheW91dEJvdW5kcy5jZW50ZXJYXHJcbiAgICAgIH1cclxuICAgICk7XHJcbiAgfVxyXG59XHJcblxyXG5jZW50ZXJBbmRWYXJpYWJpbGl0eS5yZWdpc3RlciggJ01lYW5BbmRNZWRpYW5BY2NvcmRpb25Cb3gnLCBNZWFuQW5kTWVkaWFuQWNjb3JkaW9uQm94ICk7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxPQUFPQSxlQUFlLE1BQU0sc0NBQXNDO0FBQ2xFLFNBQVNDLFVBQVUsRUFBUUMsSUFBSSxRQUFRLG1DQUFtQztBQUMxRSxPQUFPQywyQkFBMkIsTUFBTSxzQ0FBc0M7QUFDOUUsT0FBT0MsUUFBUSxNQUFNLHlDQUF5QztBQUc5RCxPQUFPQyxvQkFBb0IsTUFBTSwrQkFBK0I7QUFFaEUsT0FBT0MsY0FBYyxNQUFNLHFCQUFxQjtBQUNoRCxPQUFPQyw4QkFBOEIsTUFBTSxxREFBcUQ7QUFDaEcsT0FBT0MscUJBQXFCLE1BQU0sNkNBQTZDO0FBRS9FLGVBQWUsTUFBTUMseUJBQXlCLFNBQVNULGVBQWUsQ0FBQztFQUU5RFUsV0FBV0EsQ0FBRUMsS0FBeUIsRUFBRUMsWUFBcUIsRUFBRUMsTUFBYyxFQUFFQyxHQUFXLEVBQUVDLHNCQUE0QixFQUFHO0lBQ2hJLE1BQU1DLFNBQVMsR0FBRyxJQUFJZixVQUFVLENBQUMsQ0FBQztJQUVsQyxNQUFNZ0IsYUFBYSxHQUFHLElBQUlULHFCQUFxQixDQUFFLENBQy9DRCw4QkFBOEIsQ0FBQ1csNkJBQTZCLENBQUVGLFNBQVMsRUFBRUwsS0FBSyxDQUFDUSwwQkFBMkIsQ0FBQyxFQUMzR1osOEJBQThCLENBQUNhLDJCQUEyQixDQUFFSixTQUFTLEVBQUVMLEtBQUssQ0FBQ1Usd0JBQXlCLENBQUMsQ0FDeEcsRUFBRTtNQUNEUixNQUFNLEVBQUVBLE1BQU0sQ0FBQ1MsWUFBWSxDQUFFLHdCQUF5QjtJQUN4RCxDQUFFLENBQUM7O0lBRUg7SUFDQSxNQUFNQyxVQUFVLEdBQUdaLEtBQUssQ0FBQ2EsMEJBQTBCLENBQUNDLEtBQUs7SUFFekQsTUFBTUMsUUFBUSxHQUFHLElBQUlwQixjQUFjLENBQUVLLEtBQUssRUFBRVksVUFBVSxFQUFFO01BQUVWLE1BQU0sRUFBRUEsTUFBTSxDQUFDUyxZQUFZLENBQUUsVUFBVztJQUFFLENBQUUsQ0FBQztJQUV2RyxLQUFLLENBQUVDLFVBQVUsQ0FBQ0ksWUFBWSxFQUFFRCxRQUFRLEVBQ3RDLElBQUl4QixJQUFJLENBQUVDLDJCQUEyQixDQUFDeUIsOEJBQThCLEVBQUU7TUFDcEVDLElBQUksRUFBRSxJQUFJekIsUUFBUSxDQUFFLEVBQUcsQ0FBQztNQUN4QjBCLFFBQVEsRUFBRTtJQUNaLENBQUUsQ0FBQyxFQUNIbEIsWUFBWSxFQUNaSyxhQUFhLEVBQ2I7TUFDRWMsVUFBVSxFQUFFLENBQUM7TUFDYmxCLE1BQU0sRUFBRUEsTUFBTTtNQUNkQyxHQUFHLEVBQUVBLEdBQUc7TUFDUmtCLE9BQU8sRUFBRXBCLFlBQVksQ0FBQ29CO0lBQ3hCLENBQ0YsQ0FBQztFQUNIO0FBQ0Y7QUFFQTNCLG9CQUFvQixDQUFDNEIsUUFBUSxDQUFFLDJCQUEyQixFQUFFeEIseUJBQTBCLENBQUMifQ==