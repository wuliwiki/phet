// Copyright 2022-2023, University of Colorado Boulder

/**
 * "Mean & Median" screen
 *
 * @author Chris Klusendorf (PhET Interactive Simulations)
 * @author Sam Reid (PhET Interactive Simulations)
 */

import { Image } from '../../../scenery/js/imports.js';
import optionize from '../../../phet-core/js/optionize.js';
import CAVColors from '../common/CAVColors.js';
import centerAndVariability from '../centerAndVariability.js';
import MeanAndMedianModel from './model/MeanAndMedianModel.js';
import CAVScreen from '../common/CAVScreen.js';
import MeanAndMedianScreenView from './view/MeanAndMedianScreenView.js';
import CenterAndVariabilityStrings from '../CenterAndVariabilityStrings.js';
import ScreenIcon from '../../../joist/js/ScreenIcon.js';
import meanAndMedianScreenIcon_png from '../../images/meanAndMedianScreenIcon_png.js';
export default class MeanAndMedianScreen extends CAVScreen {
  constructor(providedOptions) {
    const options = optionize()({
      name: CenterAndVariabilityStrings.screen.meanAndMedianStringProperty,
      homeScreenIcon: new ScreenIcon(new Image(meanAndMedianScreenIcon_png), {
        maxIconWidthProportion: 1,
        maxIconHeightProportion: 1
      }),
      backgroundColorProperty: CAVColors.screenBackgroundColorProperty
    }, providedOptions);
    super(() => new MeanAndMedianModel({
      tandem: options.tandem.createTandem('model')
    }), model => new MeanAndMedianScreenView(model, {
      tandem: options.tandem.createTandem('view')
    }), options);
  }
}
centerAndVariability.register('MeanAndMedianScreen', MeanAndMedianScreen);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJJbWFnZSIsIm9wdGlvbml6ZSIsIkNBVkNvbG9ycyIsImNlbnRlckFuZFZhcmlhYmlsaXR5IiwiTWVhbkFuZE1lZGlhbk1vZGVsIiwiQ0FWU2NyZWVuIiwiTWVhbkFuZE1lZGlhblNjcmVlblZpZXciLCJDZW50ZXJBbmRWYXJpYWJpbGl0eVN0cmluZ3MiLCJTY3JlZW5JY29uIiwibWVhbkFuZE1lZGlhblNjcmVlbkljb25fcG5nIiwiTWVhbkFuZE1lZGlhblNjcmVlbiIsImNvbnN0cnVjdG9yIiwicHJvdmlkZWRPcHRpb25zIiwib3B0aW9ucyIsIm5hbWUiLCJzY3JlZW4iLCJtZWFuQW5kTWVkaWFuU3RyaW5nUHJvcGVydHkiLCJob21lU2NyZWVuSWNvbiIsIm1heEljb25XaWR0aFByb3BvcnRpb24iLCJtYXhJY29uSGVpZ2h0UHJvcG9ydGlvbiIsImJhY2tncm91bmRDb2xvclByb3BlcnR5Iiwic2NyZWVuQmFja2dyb3VuZENvbG9yUHJvcGVydHkiLCJ0YW5kZW0iLCJjcmVhdGVUYW5kZW0iLCJtb2RlbCIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiTWVhbkFuZE1lZGlhblNjcmVlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMi0yMDIzLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBcIk1lYW4gJiBNZWRpYW5cIiBzY3JlZW5cclxuICpcclxuICogQGF1dGhvciBDaHJpcyBLbHVzZW5kb3JmIChQaEVUIEludGVyYWN0aXZlIFNpbXVsYXRpb25zKVxyXG4gKiBAYXV0aG9yIFNhbSBSZWlkIChQaEVUIEludGVyYWN0aXZlIFNpbXVsYXRpb25zKVxyXG4gKi9cclxuXHJcbmltcG9ydCB7IEltYWdlIH0gZnJvbSAnLi4vLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IG9wdGlvbml6ZSwgeyBFbXB0eVNlbGZPcHRpb25zIH0gZnJvbSAnLi4vLi4vLi4vcGhldC1jb3JlL2pzL29wdGlvbml6ZS5qcyc7XHJcbmltcG9ydCBDQVZDb2xvcnMgZnJvbSAnLi4vY29tbW9uL0NBVkNvbG9ycy5qcyc7XHJcbmltcG9ydCBjZW50ZXJBbmRWYXJpYWJpbGl0eSBmcm9tICcuLi9jZW50ZXJBbmRWYXJpYWJpbGl0eS5qcyc7XHJcbmltcG9ydCBNZWFuQW5kTWVkaWFuTW9kZWwgZnJvbSAnLi9tb2RlbC9NZWFuQW5kTWVkaWFuTW9kZWwuanMnO1xyXG5pbXBvcnQgQ0FWU2NyZWVuLCB7IENBVlNjcmVlbk9wdGlvbnMgfSBmcm9tICcuLi9jb21tb24vQ0FWU2NyZWVuLmpzJztcclxuaW1wb3J0IE1lYW5BbmRNZWRpYW5TY3JlZW5WaWV3IGZyb20gJy4vdmlldy9NZWFuQW5kTWVkaWFuU2NyZWVuVmlldy5qcyc7XHJcbmltcG9ydCBDZW50ZXJBbmRWYXJpYWJpbGl0eVN0cmluZ3MgZnJvbSAnLi4vQ2VudGVyQW5kVmFyaWFiaWxpdHlTdHJpbmdzLmpzJztcclxuaW1wb3J0IFNjcmVlbkljb24gZnJvbSAnLi4vLi4vLi4vam9pc3QvanMvU2NyZWVuSWNvbi5qcyc7XHJcbmltcG9ydCBtZWFuQW5kTWVkaWFuU2NyZWVuSWNvbl9wbmcgZnJvbSAnLi4vLi4vaW1hZ2VzL21lYW5BbmRNZWRpYW5TY3JlZW5JY29uX3BuZy5qcyc7XHJcblxyXG50eXBlIE1lYW5BbmRNZWRpYW5TY3JlZW5PcHRpb25zID0gQ0FWU2NyZWVuT3B0aW9ucztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1lYW5BbmRNZWRpYW5TY3JlZW4gZXh0ZW5kcyBDQVZTY3JlZW48TWVhbkFuZE1lZGlhbk1vZGVsLCBNZWFuQW5kTWVkaWFuU2NyZWVuVmlldz4ge1xyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoIHByb3ZpZGVkT3B0aW9uczogTWVhbkFuZE1lZGlhblNjcmVlbk9wdGlvbnMgKSB7XHJcblxyXG4gICAgY29uc3Qgb3B0aW9ucyA9IG9wdGlvbml6ZTxNZWFuQW5kTWVkaWFuU2NyZWVuT3B0aW9ucywgRW1wdHlTZWxmT3B0aW9ucywgQ0FWU2NyZWVuT3B0aW9ucz4oKSgge1xyXG4gICAgICBuYW1lOiBDZW50ZXJBbmRWYXJpYWJpbGl0eVN0cmluZ3Muc2NyZWVuLm1lYW5BbmRNZWRpYW5TdHJpbmdQcm9wZXJ0eSxcclxuICAgICAgaG9tZVNjcmVlbkljb246IG5ldyBTY3JlZW5JY29uKCBuZXcgSW1hZ2UoIG1lYW5BbmRNZWRpYW5TY3JlZW5JY29uX3BuZyApLCB7XHJcbiAgICAgICAgbWF4SWNvbldpZHRoUHJvcG9ydGlvbjogMSxcclxuICAgICAgICBtYXhJY29uSGVpZ2h0UHJvcG9ydGlvbjogMVxyXG4gICAgICB9ICksXHJcbiAgICAgIGJhY2tncm91bmRDb2xvclByb3BlcnR5OiBDQVZDb2xvcnMuc2NyZWVuQmFja2dyb3VuZENvbG9yUHJvcGVydHlcclxuICAgIH0sIHByb3ZpZGVkT3B0aW9ucyApO1xyXG5cclxuICAgIHN1cGVyKFxyXG4gICAgICAoKSA9PiBuZXcgTWVhbkFuZE1lZGlhbk1vZGVsKCB7XHJcbiAgICAgICAgdGFuZGVtOiBvcHRpb25zLnRhbmRlbS5jcmVhdGVUYW5kZW0oICdtb2RlbCcgKVxyXG4gICAgICB9ICksXHJcbiAgICAgIG1vZGVsID0+IG5ldyBNZWFuQW5kTWVkaWFuU2NyZWVuVmlldyggbW9kZWwsIHtcclxuICAgICAgICB0YW5kZW06IG9wdGlvbnMudGFuZGVtLmNyZWF0ZVRhbmRlbSggJ3ZpZXcnIClcclxuICAgICAgfSApLFxyXG4gICAgICBvcHRpb25zXHJcbiAgICApO1xyXG4gIH1cclxufVxyXG5cclxuY2VudGVyQW5kVmFyaWFiaWxpdHkucmVnaXN0ZXIoICdNZWFuQW5kTWVkaWFuU2NyZWVuJywgTWVhbkFuZE1lZGlhblNjcmVlbiApOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFNBQVNBLEtBQUssUUFBUSxnQ0FBZ0M7QUFDdEQsT0FBT0MsU0FBUyxNQUE0QixvQ0FBb0M7QUFDaEYsT0FBT0MsU0FBUyxNQUFNLHdCQUF3QjtBQUM5QyxPQUFPQyxvQkFBb0IsTUFBTSw0QkFBNEI7QUFDN0QsT0FBT0Msa0JBQWtCLE1BQU0sK0JBQStCO0FBQzlELE9BQU9DLFNBQVMsTUFBNEIsd0JBQXdCO0FBQ3BFLE9BQU9DLHVCQUF1QixNQUFNLG1DQUFtQztBQUN2RSxPQUFPQywyQkFBMkIsTUFBTSxtQ0FBbUM7QUFDM0UsT0FBT0MsVUFBVSxNQUFNLGlDQUFpQztBQUN4RCxPQUFPQywyQkFBMkIsTUFBTSw2Q0FBNkM7QUFJckYsZUFBZSxNQUFNQyxtQkFBbUIsU0FBU0wsU0FBUyxDQUE4QztFQUUvRk0sV0FBV0EsQ0FBRUMsZUFBMkMsRUFBRztJQUVoRSxNQUFNQyxPQUFPLEdBQUdaLFNBQVMsQ0FBaUUsQ0FBQyxDQUFFO01BQzNGYSxJQUFJLEVBQUVQLDJCQUEyQixDQUFDUSxNQUFNLENBQUNDLDJCQUEyQjtNQUNwRUMsY0FBYyxFQUFFLElBQUlULFVBQVUsQ0FBRSxJQUFJUixLQUFLLENBQUVTLDJCQUE0QixDQUFDLEVBQUU7UUFDeEVTLHNCQUFzQixFQUFFLENBQUM7UUFDekJDLHVCQUF1QixFQUFFO01BQzNCLENBQUUsQ0FBQztNQUNIQyx1QkFBdUIsRUFBRWxCLFNBQVMsQ0FBQ21CO0lBQ3JDLENBQUMsRUFBRVQsZUFBZ0IsQ0FBQztJQUVwQixLQUFLLENBQ0gsTUFBTSxJQUFJUixrQkFBa0IsQ0FBRTtNQUM1QmtCLE1BQU0sRUFBRVQsT0FBTyxDQUFDUyxNQUFNLENBQUNDLFlBQVksQ0FBRSxPQUFRO0lBQy9DLENBQUUsQ0FBQyxFQUNIQyxLQUFLLElBQUksSUFBSWxCLHVCQUF1QixDQUFFa0IsS0FBSyxFQUFFO01BQzNDRixNQUFNLEVBQUVULE9BQU8sQ0FBQ1MsTUFBTSxDQUFDQyxZQUFZLENBQUUsTUFBTztJQUM5QyxDQUFFLENBQUMsRUFDSFYsT0FDRixDQUFDO0VBQ0g7QUFDRjtBQUVBVixvQkFBb0IsQ0FBQ3NCLFFBQVEsQ0FBRSxxQkFBcUIsRUFBRWYsbUJBQW9CLENBQUMifQ==