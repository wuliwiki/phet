// Copyright 2022-2023, University of Colorado Boulder

/**
 * Shows the sky and the ground. Reshapes to the visible bounds.
 *
 * @author Chris Klusendorf (PhET Interactive Simulations)
 * @author Sam Reid (PhET Interactive Simulations)
 */

import centerAndVariability from '../../centerAndVariability.js';
import { LinearGradient, Rectangle } from '../../../../scenery/js/imports.js';
import CAVColors from '../CAVColors.js';
import Multilink from '../../../../axon/js/Multilink.js';
export default class BackgroundNode extends Rectangle {
  constructor(bottomY, visibleBoundsProperty) {
    super(visibleBoundsProperty.value.centerX, visibleBoundsProperty.value.top, visibleBoundsProperty.value.centerX, bottomY);
    Multilink.multilink([CAVColors.skyGradientTopColorProperty, CAVColors.skyGradientMiddleColorProperty, CAVColors.skyGradientBottomColorProperty, CAVColors.groundColorProperty, visibleBoundsProperty], (skyGradientTopColor, skyGradientMiddleColor, skyGradientBottomColor, groundColor, visibleBounds) => {
      const gradient = new LinearGradient(visibleBounds.centerX, visibleBounds.top, visibleBounds.centerX, bottomY);

      // sky gradient, sampled from a screenshot
      gradient.addColorStop(0.0, CAVColors.skyGradientTopColorProperty.value);
      gradient.addColorStop(0.5, CAVColors.skyGradientMiddleColorProperty.value);
      gradient.addColorStop(0.9999, CAVColors.skyGradientBottomColorProperty.value);

      // The ground
      gradient.addColorStop(1.0, CAVColors.groundColorProperty.value);
      this.setRect(visibleBounds.left, visibleBounds.top, visibleBounds.width, visibleBounds.height);
      this.fill = gradient;
    });
  }
}
centerAndVariability.register('BackgroundNode', BackgroundNode);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjZW50ZXJBbmRWYXJpYWJpbGl0eSIsIkxpbmVhckdyYWRpZW50IiwiUmVjdGFuZ2xlIiwiQ0FWQ29sb3JzIiwiTXVsdGlsaW5rIiwiQmFja2dyb3VuZE5vZGUiLCJjb25zdHJ1Y3RvciIsImJvdHRvbVkiLCJ2aXNpYmxlQm91bmRzUHJvcGVydHkiLCJ2YWx1ZSIsImNlbnRlclgiLCJ0b3AiLCJtdWx0aWxpbmsiLCJza3lHcmFkaWVudFRvcENvbG9yUHJvcGVydHkiLCJza3lHcmFkaWVudE1pZGRsZUNvbG9yUHJvcGVydHkiLCJza3lHcmFkaWVudEJvdHRvbUNvbG9yUHJvcGVydHkiLCJncm91bmRDb2xvclByb3BlcnR5Iiwic2t5R3JhZGllbnRUb3BDb2xvciIsInNreUdyYWRpZW50TWlkZGxlQ29sb3IiLCJza3lHcmFkaWVudEJvdHRvbUNvbG9yIiwiZ3JvdW5kQ29sb3IiLCJ2aXNpYmxlQm91bmRzIiwiZ3JhZGllbnQiLCJhZGRDb2xvclN0b3AiLCJzZXRSZWN0IiwibGVmdCIsIndpZHRoIiwiaGVpZ2h0IiwiZmlsbCIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiQmFja2dyb3VuZE5vZGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjItMjAyMywgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogU2hvd3MgdGhlIHNreSBhbmQgdGhlIGdyb3VuZC4gUmVzaGFwZXMgdG8gdGhlIHZpc2libGUgYm91bmRzLlxyXG4gKlxyXG4gKiBAYXV0aG9yIENocmlzIEtsdXNlbmRvcmYgKFBoRVQgSW50ZXJhY3RpdmUgU2ltdWxhdGlvbnMpXHJcbiAqIEBhdXRob3IgU2FtIFJlaWQgKFBoRVQgSW50ZXJhY3RpdmUgU2ltdWxhdGlvbnMpXHJcbiAqL1xyXG5cclxuaW1wb3J0IGNlbnRlckFuZFZhcmlhYmlsaXR5IGZyb20gJy4uLy4uL2NlbnRlckFuZFZhcmlhYmlsaXR5LmpzJztcclxuaW1wb3J0IHsgTGluZWFyR3JhZGllbnQsIFJlY3RhbmdsZSB9IGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XHJcbmltcG9ydCBQcm9wZXJ0eSBmcm9tICcuLi8uLi8uLi8uLi9heG9uL2pzL1Byb3BlcnR5LmpzJztcclxuaW1wb3J0IEJvdW5kczIgZnJvbSAnLi4vLi4vLi4vLi4vZG90L2pzL0JvdW5kczIuanMnO1xyXG5pbXBvcnQgQ0FWQ29sb3JzIGZyb20gJy4uL0NBVkNvbG9ycy5qcyc7XHJcbmltcG9ydCBNdWx0aWxpbmsgZnJvbSAnLi4vLi4vLi4vLi4vYXhvbi9qcy9NdWx0aWxpbmsuanMnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQmFja2dyb3VuZE5vZGUgZXh0ZW5kcyBSZWN0YW5nbGUge1xyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvciggYm90dG9tWTogbnVtYmVyLCB2aXNpYmxlQm91bmRzUHJvcGVydHk6IFByb3BlcnR5PEJvdW5kczI+ICkge1xyXG4gICAgc3VwZXIoIHZpc2libGVCb3VuZHNQcm9wZXJ0eS52YWx1ZS5jZW50ZXJYLCB2aXNpYmxlQm91bmRzUHJvcGVydHkudmFsdWUudG9wLCB2aXNpYmxlQm91bmRzUHJvcGVydHkudmFsdWUuY2VudGVyWCwgYm90dG9tWSApO1xyXG5cclxuICAgIE11bHRpbGluay5tdWx0aWxpbmsoIFtcclxuICAgICAgQ0FWQ29sb3JzLnNreUdyYWRpZW50VG9wQ29sb3JQcm9wZXJ0eSxcclxuICAgICAgQ0FWQ29sb3JzLnNreUdyYWRpZW50TWlkZGxlQ29sb3JQcm9wZXJ0eSxcclxuICAgICAgQ0FWQ29sb3JzLnNreUdyYWRpZW50Qm90dG9tQ29sb3JQcm9wZXJ0eSxcclxuICAgICAgQ0FWQ29sb3JzLmdyb3VuZENvbG9yUHJvcGVydHksXHJcbiAgICAgIHZpc2libGVCb3VuZHNQcm9wZXJ0eVxyXG4gICAgXSwgKCBza3lHcmFkaWVudFRvcENvbG9yLCBza3lHcmFkaWVudE1pZGRsZUNvbG9yLCBza3lHcmFkaWVudEJvdHRvbUNvbG9yLCBncm91bmRDb2xvciwgdmlzaWJsZUJvdW5kcyApID0+IHtcclxuICAgICAgY29uc3QgZ3JhZGllbnQgPSBuZXcgTGluZWFyR3JhZGllbnQoIHZpc2libGVCb3VuZHMuY2VudGVyWCwgdmlzaWJsZUJvdW5kcy50b3AsIHZpc2libGVCb3VuZHMuY2VudGVyWCwgYm90dG9tWSApO1xyXG5cclxuICAgICAgLy8gc2t5IGdyYWRpZW50LCBzYW1wbGVkIGZyb20gYSBzY3JlZW5zaG90XHJcbiAgICAgIGdyYWRpZW50LmFkZENvbG9yU3RvcCggMC4wLCBDQVZDb2xvcnMuc2t5R3JhZGllbnRUb3BDb2xvclByb3BlcnR5LnZhbHVlICk7XHJcbiAgICAgIGdyYWRpZW50LmFkZENvbG9yU3RvcCggMC41LCBDQVZDb2xvcnMuc2t5R3JhZGllbnRNaWRkbGVDb2xvclByb3BlcnR5LnZhbHVlICk7XHJcbiAgICAgIGdyYWRpZW50LmFkZENvbG9yU3RvcCggMC45OTk5LCBDQVZDb2xvcnMuc2t5R3JhZGllbnRCb3R0b21Db2xvclByb3BlcnR5LnZhbHVlICk7XHJcblxyXG4gICAgICAvLyBUaGUgZ3JvdW5kXHJcbiAgICAgIGdyYWRpZW50LmFkZENvbG9yU3RvcCggMS4wLCBDQVZDb2xvcnMuZ3JvdW5kQ29sb3JQcm9wZXJ0eS52YWx1ZSApO1xyXG5cclxuICAgICAgdGhpcy5zZXRSZWN0KCB2aXNpYmxlQm91bmRzLmxlZnQsIHZpc2libGVCb3VuZHMudG9wLCB2aXNpYmxlQm91bmRzLndpZHRoLCB2aXNpYmxlQm91bmRzLmhlaWdodCApO1xyXG4gICAgICB0aGlzLmZpbGwgPSBncmFkaWVudDtcclxuICAgIH0gKTtcclxuICB9XHJcbn1cclxuXHJcbmNlbnRlckFuZFZhcmlhYmlsaXR5LnJlZ2lzdGVyKCAnQmFja2dyb3VuZE5vZGUnLCBCYWNrZ3JvdW5kTm9kZSApOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLG9CQUFvQixNQUFNLCtCQUErQjtBQUNoRSxTQUFTQyxjQUFjLEVBQUVDLFNBQVMsUUFBUSxtQ0FBbUM7QUFHN0UsT0FBT0MsU0FBUyxNQUFNLGlCQUFpQjtBQUN2QyxPQUFPQyxTQUFTLE1BQU0sa0NBQWtDO0FBRXhELGVBQWUsTUFBTUMsY0FBYyxTQUFTSCxTQUFTLENBQUM7RUFDN0NJLFdBQVdBLENBQUVDLE9BQWUsRUFBRUMscUJBQXdDLEVBQUc7SUFDOUUsS0FBSyxDQUFFQSxxQkFBcUIsQ0FBQ0MsS0FBSyxDQUFDQyxPQUFPLEVBQUVGLHFCQUFxQixDQUFDQyxLQUFLLENBQUNFLEdBQUcsRUFBRUgscUJBQXFCLENBQUNDLEtBQUssQ0FBQ0MsT0FBTyxFQUFFSCxPQUFRLENBQUM7SUFFM0hILFNBQVMsQ0FBQ1EsU0FBUyxDQUFFLENBQ25CVCxTQUFTLENBQUNVLDJCQUEyQixFQUNyQ1YsU0FBUyxDQUFDVyw4QkFBOEIsRUFDeENYLFNBQVMsQ0FBQ1ksOEJBQThCLEVBQ3hDWixTQUFTLENBQUNhLG1CQUFtQixFQUM3QlIscUJBQXFCLENBQ3RCLEVBQUUsQ0FBRVMsbUJBQW1CLEVBQUVDLHNCQUFzQixFQUFFQyxzQkFBc0IsRUFBRUMsV0FBVyxFQUFFQyxhQUFhLEtBQU07TUFDeEcsTUFBTUMsUUFBUSxHQUFHLElBQUlyQixjQUFjLENBQUVvQixhQUFhLENBQUNYLE9BQU8sRUFBRVcsYUFBYSxDQUFDVixHQUFHLEVBQUVVLGFBQWEsQ0FBQ1gsT0FBTyxFQUFFSCxPQUFRLENBQUM7O01BRS9HO01BQ0FlLFFBQVEsQ0FBQ0MsWUFBWSxDQUFFLEdBQUcsRUFBRXBCLFNBQVMsQ0FBQ1UsMkJBQTJCLENBQUNKLEtBQU0sQ0FBQztNQUN6RWEsUUFBUSxDQUFDQyxZQUFZLENBQUUsR0FBRyxFQUFFcEIsU0FBUyxDQUFDVyw4QkFBOEIsQ0FBQ0wsS0FBTSxDQUFDO01BQzVFYSxRQUFRLENBQUNDLFlBQVksQ0FBRSxNQUFNLEVBQUVwQixTQUFTLENBQUNZLDhCQUE4QixDQUFDTixLQUFNLENBQUM7O01BRS9FO01BQ0FhLFFBQVEsQ0FBQ0MsWUFBWSxDQUFFLEdBQUcsRUFBRXBCLFNBQVMsQ0FBQ2EsbUJBQW1CLENBQUNQLEtBQU0sQ0FBQztNQUVqRSxJQUFJLENBQUNlLE9BQU8sQ0FBRUgsYUFBYSxDQUFDSSxJQUFJLEVBQUVKLGFBQWEsQ0FBQ1YsR0FBRyxFQUFFVSxhQUFhLENBQUNLLEtBQUssRUFBRUwsYUFBYSxDQUFDTSxNQUFPLENBQUM7TUFDaEcsSUFBSSxDQUFDQyxJQUFJLEdBQUdOLFFBQVE7SUFDdEIsQ0FBRSxDQUFDO0VBQ0w7QUFDRjtBQUVBdEIsb0JBQW9CLENBQUM2QixRQUFRLENBQUUsZ0JBQWdCLEVBQUV4QixjQUFlLENBQUMifQ==