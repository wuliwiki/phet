// Copyright 2022-2023, University of Colorado Boulder

/**
 * General simulation controls that globally change the presentation or behavior of the simulation.
 *
 * @author Aaron Davis (PhET Interactive Simulations)
 * @author Jonathan Olson <jonathan.olson@colorado.edu>
 */

import VerticalAquaRadioButtonGroup from '../../../../sun/js/VerticalAquaRadioButtonGroup.js';
import { Text, VBox } from '../../../../scenery/js/imports.js';
import centerAndVariability from '../../centerAndVariability.js';
import PlotType from '../model/PlotType.js';
import CAVConstants from '../CAVConstants.js';
import CenterAndVariabilityStrings from '../../CenterAndVariabilityStrings.js';
import PreferencesDialog from '../../../../joist/js/preferences/PreferencesDialog.js';
export default class SimulationPreferencesContentNode extends VBox {
  constructor(tandem) {
    const title = new Text(CenterAndVariabilityStrings.plotTypeStringProperty, {
      font: PreferencesDialog.PANEL_SECTION_LABEL_FONT
    });
    const TEXT_OPTIONS = {
      font: PreferencesDialog.CONTENT_FONT,
      maxWidth: PreferencesDialog.CONTENT_MAX_WIDTH
    };
    const radioButtonGroup = new VerticalAquaRadioButtonGroup(CAVConstants.PLOT_TYPE_PROPERTY, [{
      createNode: () => new Text(CenterAndVariabilityStrings.linePlotStringProperty, TEXT_OPTIONS),
      value: PlotType.LINE_PLOT,
      tandemName: 'linePlotRadioButton'
    }, {
      createNode: () => new Text(CenterAndVariabilityStrings.dotPlotStringProperty, TEXT_OPTIONS),
      value: PlotType.DOT_PLOT,
      tandemName: 'dotPlotRadioButton'
    }], {
      tandem: tandem.createTandem('plotTypeRadioButtonGroup')
    });

    // VBox is used to make it easy to add additional controls
    super({
      children: [title, radioButtonGroup],
      spacing: PreferencesDialog.LABEL_CONTENT_SPACING,
      align: 'left',
      tandem: tandem
    });
    this.disposeSimulationPreferencesContentNode = () => radioButtonGroup.dispose();
  }
  dispose() {
    this.disposeSimulationPreferencesContentNode();
    super.dispose();
  }
}
centerAndVariability.register('SimulationPreferencesContentNode', SimulationPreferencesContentNode);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJWZXJ0aWNhbEFxdWFSYWRpb0J1dHRvbkdyb3VwIiwiVGV4dCIsIlZCb3giLCJjZW50ZXJBbmRWYXJpYWJpbGl0eSIsIlBsb3RUeXBlIiwiQ0FWQ29uc3RhbnRzIiwiQ2VudGVyQW5kVmFyaWFiaWxpdHlTdHJpbmdzIiwiUHJlZmVyZW5jZXNEaWFsb2ciLCJTaW11bGF0aW9uUHJlZmVyZW5jZXNDb250ZW50Tm9kZSIsImNvbnN0cnVjdG9yIiwidGFuZGVtIiwidGl0bGUiLCJwbG90VHlwZVN0cmluZ1Byb3BlcnR5IiwiZm9udCIsIlBBTkVMX1NFQ1RJT05fTEFCRUxfRk9OVCIsIlRFWFRfT1BUSU9OUyIsIkNPTlRFTlRfRk9OVCIsIm1heFdpZHRoIiwiQ09OVEVOVF9NQVhfV0lEVEgiLCJyYWRpb0J1dHRvbkdyb3VwIiwiUExPVF9UWVBFX1BST1BFUlRZIiwiY3JlYXRlTm9kZSIsImxpbmVQbG90U3RyaW5nUHJvcGVydHkiLCJ2YWx1ZSIsIkxJTkVfUExPVCIsInRhbmRlbU5hbWUiLCJkb3RQbG90U3RyaW5nUHJvcGVydHkiLCJET1RfUExPVCIsImNyZWF0ZVRhbmRlbSIsImNoaWxkcmVuIiwic3BhY2luZyIsIkxBQkVMX0NPTlRFTlRfU1BBQ0lORyIsImFsaWduIiwiZGlzcG9zZVNpbXVsYXRpb25QcmVmZXJlbmNlc0NvbnRlbnROb2RlIiwiZGlzcG9zZSIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiU2ltdWxhdGlvblByZWZlcmVuY2VzQ29udGVudE5vZGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjItMjAyMywgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogR2VuZXJhbCBzaW11bGF0aW9uIGNvbnRyb2xzIHRoYXQgZ2xvYmFsbHkgY2hhbmdlIHRoZSBwcmVzZW50YXRpb24gb3IgYmVoYXZpb3Igb2YgdGhlIHNpbXVsYXRpb24uXHJcbiAqXHJcbiAqIEBhdXRob3IgQWFyb24gRGF2aXMgKFBoRVQgSW50ZXJhY3RpdmUgU2ltdWxhdGlvbnMpXHJcbiAqIEBhdXRob3IgSm9uYXRoYW4gT2xzb24gPGpvbmF0aGFuLm9sc29uQGNvbG9yYWRvLmVkdT5cclxuICovXHJcblxyXG5pbXBvcnQgVmVydGljYWxBcXVhUmFkaW9CdXR0b25Hcm91cCBmcm9tICcuLi8uLi8uLi8uLi9zdW4vanMvVmVydGljYWxBcXVhUmFkaW9CdXR0b25Hcm91cC5qcyc7XHJcbmltcG9ydCB7IFRleHQsIFZCb3ggfSBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgY2VudGVyQW5kVmFyaWFiaWxpdHkgZnJvbSAnLi4vLi4vY2VudGVyQW5kVmFyaWFiaWxpdHkuanMnO1xyXG5pbXBvcnQgVGFuZGVtIGZyb20gJy4uLy4uLy4uLy4uL3RhbmRlbS9qcy9UYW5kZW0uanMnO1xyXG5pbXBvcnQgUGxvdFR5cGUgZnJvbSAnLi4vbW9kZWwvUGxvdFR5cGUuanMnO1xyXG5pbXBvcnQgQ0FWQ29uc3RhbnRzIGZyb20gJy4uL0NBVkNvbnN0YW50cy5qcyc7XHJcbmltcG9ydCBDZW50ZXJBbmRWYXJpYWJpbGl0eVN0cmluZ3MgZnJvbSAnLi4vLi4vQ2VudGVyQW5kVmFyaWFiaWxpdHlTdHJpbmdzLmpzJztcclxuaW1wb3J0IFByZWZlcmVuY2VzRGlhbG9nIGZyb20gJy4uLy4uLy4uLy4uL2pvaXN0L2pzL3ByZWZlcmVuY2VzL1ByZWZlcmVuY2VzRGlhbG9nLmpzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNpbXVsYXRpb25QcmVmZXJlbmNlc0NvbnRlbnROb2RlIGV4dGVuZHMgVkJveCB7XHJcbiAgcHJpdmF0ZSByZWFkb25seSBkaXNwb3NlU2ltdWxhdGlvblByZWZlcmVuY2VzQ29udGVudE5vZGU6ICgpID0+IHZvaWQ7XHJcblxyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvciggdGFuZGVtOiBUYW5kZW0gKSB7XHJcblxyXG4gICAgY29uc3QgdGl0bGUgPSBuZXcgVGV4dCggQ2VudGVyQW5kVmFyaWFiaWxpdHlTdHJpbmdzLnBsb3RUeXBlU3RyaW5nUHJvcGVydHksIHtcclxuICAgICAgZm9udDogUHJlZmVyZW5jZXNEaWFsb2cuUEFORUxfU0VDVElPTl9MQUJFTF9GT05UXHJcbiAgICB9ICk7XHJcblxyXG4gICAgY29uc3QgVEVYVF9PUFRJT05TID0ge1xyXG4gICAgICBmb250OiBQcmVmZXJlbmNlc0RpYWxvZy5DT05URU5UX0ZPTlQsXHJcbiAgICAgIG1heFdpZHRoOiBQcmVmZXJlbmNlc0RpYWxvZy5DT05URU5UX01BWF9XSURUSFxyXG4gICAgfTtcclxuICAgIGNvbnN0IHJhZGlvQnV0dG9uR3JvdXAgPSBuZXcgVmVydGljYWxBcXVhUmFkaW9CdXR0b25Hcm91cDxQbG90VHlwZT4oIENBVkNvbnN0YW50cy5QTE9UX1RZUEVfUFJPUEVSVFksIFsge1xyXG4gICAgICBjcmVhdGVOb2RlOiAoKSA9PiBuZXcgVGV4dCggQ2VudGVyQW5kVmFyaWFiaWxpdHlTdHJpbmdzLmxpbmVQbG90U3RyaW5nUHJvcGVydHksIFRFWFRfT1BUSU9OUyApLFxyXG4gICAgICB2YWx1ZTogUGxvdFR5cGUuTElORV9QTE9ULFxyXG4gICAgICB0YW5kZW1OYW1lOiAnbGluZVBsb3RSYWRpb0J1dHRvbidcclxuICAgIH0sIHtcclxuICAgICAgY3JlYXRlTm9kZTogKCkgPT4gbmV3IFRleHQoIENlbnRlckFuZFZhcmlhYmlsaXR5U3RyaW5ncy5kb3RQbG90U3RyaW5nUHJvcGVydHksIFRFWFRfT1BUSU9OUyApLFxyXG4gICAgICB2YWx1ZTogUGxvdFR5cGUuRE9UX1BMT1QsXHJcbiAgICAgIHRhbmRlbU5hbWU6ICdkb3RQbG90UmFkaW9CdXR0b24nXHJcbiAgICB9IF0sIHtcclxuICAgICAgdGFuZGVtOiB0YW5kZW0uY3JlYXRlVGFuZGVtKCAncGxvdFR5cGVSYWRpb0J1dHRvbkdyb3VwJyApXHJcbiAgICB9ICk7XHJcblxyXG4gICAgLy8gVkJveCBpcyB1c2VkIHRvIG1ha2UgaXQgZWFzeSB0byBhZGQgYWRkaXRpb25hbCBjb250cm9sc1xyXG4gICAgc3VwZXIoIHtcclxuICAgICAgY2hpbGRyZW46IFsgdGl0bGUsIHJhZGlvQnV0dG9uR3JvdXAgXSxcclxuICAgICAgc3BhY2luZzogUHJlZmVyZW5jZXNEaWFsb2cuTEFCRUxfQ09OVEVOVF9TUEFDSU5HLFxyXG4gICAgICBhbGlnbjogJ2xlZnQnLFxyXG4gICAgICB0YW5kZW06IHRhbmRlbVxyXG4gICAgfSApO1xyXG5cclxuICAgIHRoaXMuZGlzcG9zZVNpbXVsYXRpb25QcmVmZXJlbmNlc0NvbnRlbnROb2RlID0gKCkgPT4gcmFkaW9CdXR0b25Hcm91cC5kaXNwb3NlKCk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgb3ZlcnJpZGUgZGlzcG9zZSgpOiB2b2lkIHtcclxuICAgIHRoaXMuZGlzcG9zZVNpbXVsYXRpb25QcmVmZXJlbmNlc0NvbnRlbnROb2RlKCk7XHJcbiAgICBzdXBlci5kaXNwb3NlKCk7XHJcbiAgfVxyXG59XHJcblxyXG5jZW50ZXJBbmRWYXJpYWJpbGl0eS5yZWdpc3RlciggJ1NpbXVsYXRpb25QcmVmZXJlbmNlc0NvbnRlbnROb2RlJywgU2ltdWxhdGlvblByZWZlcmVuY2VzQ29udGVudE5vZGUgKTsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSw0QkFBNEIsTUFBTSxvREFBb0Q7QUFDN0YsU0FBU0MsSUFBSSxFQUFFQyxJQUFJLFFBQVEsbUNBQW1DO0FBQzlELE9BQU9DLG9CQUFvQixNQUFNLCtCQUErQjtBQUVoRSxPQUFPQyxRQUFRLE1BQU0sc0JBQXNCO0FBQzNDLE9BQU9DLFlBQVksTUFBTSxvQkFBb0I7QUFDN0MsT0FBT0MsMkJBQTJCLE1BQU0sc0NBQXNDO0FBQzlFLE9BQU9DLGlCQUFpQixNQUFNLHVEQUF1RDtBQUVyRixlQUFlLE1BQU1DLGdDQUFnQyxTQUFTTixJQUFJLENBQUM7RUFHMURPLFdBQVdBLENBQUVDLE1BQWMsRUFBRztJQUVuQyxNQUFNQyxLQUFLLEdBQUcsSUFBSVYsSUFBSSxDQUFFSywyQkFBMkIsQ0FBQ00sc0JBQXNCLEVBQUU7TUFDMUVDLElBQUksRUFBRU4saUJBQWlCLENBQUNPO0lBQzFCLENBQUUsQ0FBQztJQUVILE1BQU1DLFlBQVksR0FBRztNQUNuQkYsSUFBSSxFQUFFTixpQkFBaUIsQ0FBQ1MsWUFBWTtNQUNwQ0MsUUFBUSxFQUFFVixpQkFBaUIsQ0FBQ1c7SUFDOUIsQ0FBQztJQUNELE1BQU1DLGdCQUFnQixHQUFHLElBQUluQiw0QkFBNEIsQ0FBWUssWUFBWSxDQUFDZSxrQkFBa0IsRUFBRSxDQUFFO01BQ3RHQyxVQUFVLEVBQUVBLENBQUEsS0FBTSxJQUFJcEIsSUFBSSxDQUFFSywyQkFBMkIsQ0FBQ2dCLHNCQUFzQixFQUFFUCxZQUFhLENBQUM7TUFDOUZRLEtBQUssRUFBRW5CLFFBQVEsQ0FBQ29CLFNBQVM7TUFDekJDLFVBQVUsRUFBRTtJQUNkLENBQUMsRUFBRTtNQUNESixVQUFVLEVBQUVBLENBQUEsS0FBTSxJQUFJcEIsSUFBSSxDQUFFSywyQkFBMkIsQ0FBQ29CLHFCQUFxQixFQUFFWCxZQUFhLENBQUM7TUFDN0ZRLEtBQUssRUFBRW5CLFFBQVEsQ0FBQ3VCLFFBQVE7TUFDeEJGLFVBQVUsRUFBRTtJQUNkLENBQUMsQ0FBRSxFQUFFO01BQ0hmLE1BQU0sRUFBRUEsTUFBTSxDQUFDa0IsWUFBWSxDQUFFLDBCQUEyQjtJQUMxRCxDQUFFLENBQUM7O0lBRUg7SUFDQSxLQUFLLENBQUU7TUFDTEMsUUFBUSxFQUFFLENBQUVsQixLQUFLLEVBQUVRLGdCQUFnQixDQUFFO01BQ3JDVyxPQUFPLEVBQUV2QixpQkFBaUIsQ0FBQ3dCLHFCQUFxQjtNQUNoREMsS0FBSyxFQUFFLE1BQU07TUFDYnRCLE1BQU0sRUFBRUE7SUFDVixDQUFFLENBQUM7SUFFSCxJQUFJLENBQUN1Qix1Q0FBdUMsR0FBRyxNQUFNZCxnQkFBZ0IsQ0FBQ2UsT0FBTyxDQUFDLENBQUM7RUFDakY7RUFFZ0JBLE9BQU9BLENBQUEsRUFBUztJQUM5QixJQUFJLENBQUNELHVDQUF1QyxDQUFDLENBQUM7SUFDOUMsS0FBSyxDQUFDQyxPQUFPLENBQUMsQ0FBQztFQUNqQjtBQUNGO0FBRUEvQixvQkFBb0IsQ0FBQ2dDLFFBQVEsQ0FBRSxrQ0FBa0MsRUFBRTNCLGdDQUFpQyxDQUFDIn0=