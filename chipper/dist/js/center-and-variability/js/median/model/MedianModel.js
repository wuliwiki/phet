// Copyright 2022-2023, University of Colorado Boulder

/**
 * Model for the "Median" screen
 *
 * @author Chris Klusendorf (PhET Interactive Simulations)
 * @author Sam Reid (PhET Interactive Simulations)
 */

import centerAndVariability from '../../centerAndVariability.js';
import CardModel from '../../median/model/CardModel.js';
import BooleanProperty from '../../../../axon/js/BooleanProperty.js';
import CAVSceneModel from '../../common/model/CAVSceneModel.js';
import CAVModel from '../../common/model/CAVModel.js';
export default class MedianModel extends CAVModel {
  constructor(options) {
    const scene = new CAVSceneModel(CAVSceneModel.chooseDistribution(), {
      tandem: options.tandem.createTandem('sceneModel')
    });
    super([scene], {
      ...options,
      instrumentMeanPredictionProperty: false
    });
    this.cards = this.sceneModels[0].soccerBalls.map((soccerBall, index) => new CardModel(soccerBall, {
      tandem: options.tandem.createTandem('cards').createTandem('card' + index)
    }));
    this.isSortingDataProperty = new BooleanProperty(false, {
      tandem: options.tandem.createTandem('isSortingDataProperty')
    });
    this.isShowingTopMedianProperty = new BooleanProperty(false, {
      tandem: options.tandem.createTandem('isShowingTopMedianProperty')
    });
  }
  reset() {
    super.reset();
    this.isSortingDataProperty.reset();
    this.isShowingTopMedianProperty.reset();
  }
}
centerAndVariability.register('MedianModel', MedianModel);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjZW50ZXJBbmRWYXJpYWJpbGl0eSIsIkNhcmRNb2RlbCIsIkJvb2xlYW5Qcm9wZXJ0eSIsIkNBVlNjZW5lTW9kZWwiLCJDQVZNb2RlbCIsIk1lZGlhbk1vZGVsIiwiY29uc3RydWN0b3IiLCJvcHRpb25zIiwic2NlbmUiLCJjaG9vc2VEaXN0cmlidXRpb24iLCJ0YW5kZW0iLCJjcmVhdGVUYW5kZW0iLCJpbnN0cnVtZW50TWVhblByZWRpY3Rpb25Qcm9wZXJ0eSIsImNhcmRzIiwic2NlbmVNb2RlbHMiLCJzb2NjZXJCYWxscyIsIm1hcCIsInNvY2NlckJhbGwiLCJpbmRleCIsImlzU29ydGluZ0RhdGFQcm9wZXJ0eSIsImlzU2hvd2luZ1RvcE1lZGlhblByb3BlcnR5IiwicmVzZXQiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIk1lZGlhbk1vZGVsLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIyLTIwMjMsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIE1vZGVsIGZvciB0aGUgXCJNZWRpYW5cIiBzY3JlZW5cclxuICpcclxuICogQGF1dGhvciBDaHJpcyBLbHVzZW5kb3JmIChQaEVUIEludGVyYWN0aXZlIFNpbXVsYXRpb25zKVxyXG4gKiBAYXV0aG9yIFNhbSBSZWlkIChQaEVUIEludGVyYWN0aXZlIFNpbXVsYXRpb25zKVxyXG4gKi9cclxuXHJcbmltcG9ydCBjZW50ZXJBbmRWYXJpYWJpbGl0eSBmcm9tICcuLi8uLi9jZW50ZXJBbmRWYXJpYWJpbGl0eS5qcyc7XHJcbmltcG9ydCBDYXJkTW9kZWwgZnJvbSAnLi4vLi4vbWVkaWFuL21vZGVsL0NhcmRNb2RlbC5qcyc7XHJcbmltcG9ydCBCb29sZWFuUHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vLi4vYXhvbi9qcy9Cb29sZWFuUHJvcGVydHkuanMnO1xyXG5pbXBvcnQgQ0FWU2NlbmVNb2RlbCBmcm9tICcuLi8uLi9jb21tb24vbW9kZWwvQ0FWU2NlbmVNb2RlbC5qcyc7XHJcbmltcG9ydCBDQVZNb2RlbCBmcm9tICcuLi8uLi9jb21tb24vbW9kZWwvQ0FWTW9kZWwuanMnO1xyXG5pbXBvcnQgVGFuZGVtIGZyb20gJy4uLy4uLy4uLy4uL3RhbmRlbS9qcy9UYW5kZW0uanMnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTWVkaWFuTW9kZWwgZXh0ZW5kcyBDQVZNb2RlbCB7XHJcblxyXG4gIHB1YmxpYyByZWFkb25seSBjYXJkczogQ2FyZE1vZGVsW107XHJcbiAgcHVibGljIHJlYWRvbmx5IGlzU29ydGluZ0RhdGFQcm9wZXJ0eTogQm9vbGVhblByb3BlcnR5O1xyXG4gIHB1YmxpYyByZWFkb25seSBpc1Nob3dpbmdUb3BNZWRpYW5Qcm9wZXJ0eTogQm9vbGVhblByb3BlcnR5O1xyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoIG9wdGlvbnM6IHsgdGFuZGVtOiBUYW5kZW0gfSApIHtcclxuICAgIGNvbnN0IHNjZW5lID0gbmV3IENBVlNjZW5lTW9kZWwoIENBVlNjZW5lTW9kZWwuY2hvb3NlRGlzdHJpYnV0aW9uKCksIHsgdGFuZGVtOiBvcHRpb25zLnRhbmRlbS5jcmVhdGVUYW5kZW0oICdzY2VuZU1vZGVsJyApIH0gKTtcclxuICAgIHN1cGVyKCBbIHNjZW5lIF0sIHtcclxuICAgICAgLi4ub3B0aW9ucyxcclxuICAgICAgaW5zdHJ1bWVudE1lYW5QcmVkaWN0aW9uUHJvcGVydHk6IGZhbHNlXHJcbiAgICB9ICk7XHJcblxyXG4gICAgdGhpcy5jYXJkcyA9IHRoaXMuc2NlbmVNb2RlbHNbIDAgXS5zb2NjZXJCYWxscy5tYXAoICggc29jY2VyQmFsbCwgaW5kZXggKSA9PiBuZXcgQ2FyZE1vZGVsKCBzb2NjZXJCYWxsLCB7XHJcbiAgICAgIHRhbmRlbTogb3B0aW9ucy50YW5kZW0uY3JlYXRlVGFuZGVtKCAnY2FyZHMnICkuY3JlYXRlVGFuZGVtKCAnY2FyZCcgKyBpbmRleCApXHJcbiAgICB9ICkgKTtcclxuXHJcbiAgICB0aGlzLmlzU29ydGluZ0RhdGFQcm9wZXJ0eSA9IG5ldyBCb29sZWFuUHJvcGVydHkoIGZhbHNlLCB7XHJcbiAgICAgIHRhbmRlbTogb3B0aW9ucy50YW5kZW0uY3JlYXRlVGFuZGVtKCAnaXNTb3J0aW5nRGF0YVByb3BlcnR5JyApXHJcbiAgICB9ICk7XHJcblxyXG4gICAgdGhpcy5pc1Nob3dpbmdUb3BNZWRpYW5Qcm9wZXJ0eSA9IG5ldyBCb29sZWFuUHJvcGVydHkoIGZhbHNlLCB7XHJcbiAgICAgIHRhbmRlbTogb3B0aW9ucy50YW5kZW0uY3JlYXRlVGFuZGVtKCAnaXNTaG93aW5nVG9wTWVkaWFuUHJvcGVydHknIClcclxuICAgIH0gKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBvdmVycmlkZSByZXNldCgpOiB2b2lkIHtcclxuICAgIHN1cGVyLnJlc2V0KCk7XHJcbiAgICB0aGlzLmlzU29ydGluZ0RhdGFQcm9wZXJ0eS5yZXNldCgpO1xyXG4gICAgdGhpcy5pc1Nob3dpbmdUb3BNZWRpYW5Qcm9wZXJ0eS5yZXNldCgpO1xyXG4gIH1cclxufVxyXG5cclxuY2VudGVyQW5kVmFyaWFiaWxpdHkucmVnaXN0ZXIoICdNZWRpYW5Nb2RlbCcsIE1lZGlhbk1vZGVsICk7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0Esb0JBQW9CLE1BQU0sK0JBQStCO0FBQ2hFLE9BQU9DLFNBQVMsTUFBTSxpQ0FBaUM7QUFDdkQsT0FBT0MsZUFBZSxNQUFNLHdDQUF3QztBQUNwRSxPQUFPQyxhQUFhLE1BQU0scUNBQXFDO0FBQy9ELE9BQU9DLFFBQVEsTUFBTSxnQ0FBZ0M7QUFHckQsZUFBZSxNQUFNQyxXQUFXLFNBQVNELFFBQVEsQ0FBQztFQU16Q0UsV0FBV0EsQ0FBRUMsT0FBMkIsRUFBRztJQUNoRCxNQUFNQyxLQUFLLEdBQUcsSUFBSUwsYUFBYSxDQUFFQSxhQUFhLENBQUNNLGtCQUFrQixDQUFDLENBQUMsRUFBRTtNQUFFQyxNQUFNLEVBQUVILE9BQU8sQ0FBQ0csTUFBTSxDQUFDQyxZQUFZLENBQUUsWUFBYTtJQUFFLENBQUUsQ0FBQztJQUM5SCxLQUFLLENBQUUsQ0FBRUgsS0FBSyxDQUFFLEVBQUU7TUFDaEIsR0FBR0QsT0FBTztNQUNWSyxnQ0FBZ0MsRUFBRTtJQUNwQyxDQUFFLENBQUM7SUFFSCxJQUFJLENBQUNDLEtBQUssR0FBRyxJQUFJLENBQUNDLFdBQVcsQ0FBRSxDQUFDLENBQUUsQ0FBQ0MsV0FBVyxDQUFDQyxHQUFHLENBQUUsQ0FBRUMsVUFBVSxFQUFFQyxLQUFLLEtBQU0sSUFBSWpCLFNBQVMsQ0FBRWdCLFVBQVUsRUFBRTtNQUN0R1AsTUFBTSxFQUFFSCxPQUFPLENBQUNHLE1BQU0sQ0FBQ0MsWUFBWSxDQUFFLE9BQVEsQ0FBQyxDQUFDQSxZQUFZLENBQUUsTUFBTSxHQUFHTyxLQUFNO0lBQzlFLENBQUUsQ0FBRSxDQUFDO0lBRUwsSUFBSSxDQUFDQyxxQkFBcUIsR0FBRyxJQUFJakIsZUFBZSxDQUFFLEtBQUssRUFBRTtNQUN2RFEsTUFBTSxFQUFFSCxPQUFPLENBQUNHLE1BQU0sQ0FBQ0MsWUFBWSxDQUFFLHVCQUF3QjtJQUMvRCxDQUFFLENBQUM7SUFFSCxJQUFJLENBQUNTLDBCQUEwQixHQUFHLElBQUlsQixlQUFlLENBQUUsS0FBSyxFQUFFO01BQzVEUSxNQUFNLEVBQUVILE9BQU8sQ0FBQ0csTUFBTSxDQUFDQyxZQUFZLENBQUUsNEJBQTZCO0lBQ3BFLENBQUUsQ0FBQztFQUNMO0VBRWdCVSxLQUFLQSxDQUFBLEVBQVM7SUFDNUIsS0FBSyxDQUFDQSxLQUFLLENBQUMsQ0FBQztJQUNiLElBQUksQ0FBQ0YscUJBQXFCLENBQUNFLEtBQUssQ0FBQyxDQUFDO0lBQ2xDLElBQUksQ0FBQ0QsMEJBQTBCLENBQUNDLEtBQUssQ0FBQyxDQUFDO0VBQ3pDO0FBQ0Y7QUFFQXJCLG9CQUFvQixDQUFDc0IsUUFBUSxDQUFFLGFBQWEsRUFBRWpCLFdBQVksQ0FBQyJ9