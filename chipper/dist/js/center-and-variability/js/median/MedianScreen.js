// Copyright 2022-2023, University of Colorado Boulder

/**
 * The "Median" screen
 *
 * @author Chris Klusendorf (PhET Interactive Simulations)
 * @author Sam Reid (PhET Interactive Simulations)
 */

import { Image } from '../../../scenery/js/imports.js';
import optionize from '../../../phet-core/js/optionize.js';
import CAVColors from '../common/CAVColors.js';
import centerAndVariability from '../centerAndVariability.js';
import MedianModel from './model/MedianModel.js';
import CAVScreen from '../common/CAVScreen.js';
import MedianScreenView from './view/MedianScreenView.js';
import CenterAndVariabilityStrings from '../CenterAndVariabilityStrings.js';
import ScreenIcon from '../../../joist/js/ScreenIcon.js';
import medianScreenIcon_png from '../../images/medianScreenIcon_png.js';
export default class MedianScreen extends CAVScreen {
  constructor(providedOptions) {
    const options = optionize()({
      name: CenterAndVariabilityStrings.screen.medianStringProperty,
      homeScreenIcon: new ScreenIcon(new Image(medianScreenIcon_png), {
        maxIconWidthProportion: 1,
        maxIconHeightProportion: 1
      }),
      backgroundColorProperty: CAVColors.screenBackgroundColorProperty
    }, providedOptions);
    super(() => new MedianModel({
      tandem: options.tandem.createTandem('model')
    }), model => new MedianScreenView(model, {
      tandem: options.tandem.createTandem('view')
    }), options);
  }
}
centerAndVariability.register('MedianScreen', MedianScreen);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJJbWFnZSIsIm9wdGlvbml6ZSIsIkNBVkNvbG9ycyIsImNlbnRlckFuZFZhcmlhYmlsaXR5IiwiTWVkaWFuTW9kZWwiLCJDQVZTY3JlZW4iLCJNZWRpYW5TY3JlZW5WaWV3IiwiQ2VudGVyQW5kVmFyaWFiaWxpdHlTdHJpbmdzIiwiU2NyZWVuSWNvbiIsIm1lZGlhblNjcmVlbkljb25fcG5nIiwiTWVkaWFuU2NyZWVuIiwiY29uc3RydWN0b3IiLCJwcm92aWRlZE9wdGlvbnMiLCJvcHRpb25zIiwibmFtZSIsInNjcmVlbiIsIm1lZGlhblN0cmluZ1Byb3BlcnR5IiwiaG9tZVNjcmVlbkljb24iLCJtYXhJY29uV2lkdGhQcm9wb3J0aW9uIiwibWF4SWNvbkhlaWdodFByb3BvcnRpb24iLCJiYWNrZ3JvdW5kQ29sb3JQcm9wZXJ0eSIsInNjcmVlbkJhY2tncm91bmRDb2xvclByb3BlcnR5IiwidGFuZGVtIiwiY3JlYXRlVGFuZGVtIiwibW9kZWwiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIk1lZGlhblNjcmVlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMi0yMDIzLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBUaGUgXCJNZWRpYW5cIiBzY3JlZW5cclxuICpcclxuICogQGF1dGhvciBDaHJpcyBLbHVzZW5kb3JmIChQaEVUIEludGVyYWN0aXZlIFNpbXVsYXRpb25zKVxyXG4gKiBAYXV0aG9yIFNhbSBSZWlkIChQaEVUIEludGVyYWN0aXZlIFNpbXVsYXRpb25zKVxyXG4gKi9cclxuXHJcbmltcG9ydCB7IEltYWdlIH0gZnJvbSAnLi4vLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IG9wdGlvbml6ZSwgeyBFbXB0eVNlbGZPcHRpb25zIH0gZnJvbSAnLi4vLi4vLi4vcGhldC1jb3JlL2pzL29wdGlvbml6ZS5qcyc7XHJcbmltcG9ydCBDQVZDb2xvcnMgZnJvbSAnLi4vY29tbW9uL0NBVkNvbG9ycy5qcyc7XHJcbmltcG9ydCBjZW50ZXJBbmRWYXJpYWJpbGl0eSBmcm9tICcuLi9jZW50ZXJBbmRWYXJpYWJpbGl0eS5qcyc7XHJcbmltcG9ydCBNZWRpYW5Nb2RlbCBmcm9tICcuL21vZGVsL01lZGlhbk1vZGVsLmpzJztcclxuaW1wb3J0IENBVlNjcmVlbiwgeyBDQVZTY3JlZW5PcHRpb25zIH0gZnJvbSAnLi4vY29tbW9uL0NBVlNjcmVlbi5qcyc7XHJcbmltcG9ydCBNZWRpYW5TY3JlZW5WaWV3IGZyb20gJy4vdmlldy9NZWRpYW5TY3JlZW5WaWV3LmpzJztcclxuaW1wb3J0IENlbnRlckFuZFZhcmlhYmlsaXR5U3RyaW5ncyBmcm9tICcuLi9DZW50ZXJBbmRWYXJpYWJpbGl0eVN0cmluZ3MuanMnO1xyXG5pbXBvcnQgU2NyZWVuSWNvbiBmcm9tICcuLi8uLi8uLi9qb2lzdC9qcy9TY3JlZW5JY29uLmpzJztcclxuaW1wb3J0IG1lZGlhblNjcmVlbkljb25fcG5nIGZyb20gJy4uLy4uL2ltYWdlcy9tZWRpYW5TY3JlZW5JY29uX3BuZy5qcyc7XHJcblxyXG50eXBlIE1lZGlhblNjcmVlbk9wdGlvbnMgPSBDQVZTY3JlZW5PcHRpb25zO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTWVkaWFuU2NyZWVuIGV4dGVuZHMgQ0FWU2NyZWVuPE1lZGlhbk1vZGVsLCBNZWRpYW5TY3JlZW5WaWV3PiB7XHJcblxyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvciggcHJvdmlkZWRPcHRpb25zOiBNZWRpYW5TY3JlZW5PcHRpb25zICkge1xyXG5cclxuICAgIGNvbnN0IG9wdGlvbnMgPSBvcHRpb25pemU8TWVkaWFuU2NyZWVuT3B0aW9ucywgRW1wdHlTZWxmT3B0aW9ucywgQ0FWU2NyZWVuT3B0aW9ucz4oKSgge1xyXG4gICAgICBuYW1lOiBDZW50ZXJBbmRWYXJpYWJpbGl0eVN0cmluZ3Muc2NyZWVuLm1lZGlhblN0cmluZ1Byb3BlcnR5LFxyXG4gICAgICBob21lU2NyZWVuSWNvbjogbmV3IFNjcmVlbkljb24oIG5ldyBJbWFnZSggbWVkaWFuU2NyZWVuSWNvbl9wbmcgKSwge1xyXG4gICAgICAgIG1heEljb25XaWR0aFByb3BvcnRpb246IDEsXHJcbiAgICAgICAgbWF4SWNvbkhlaWdodFByb3BvcnRpb246IDFcclxuICAgICAgfSApLFxyXG4gICAgICBiYWNrZ3JvdW5kQ29sb3JQcm9wZXJ0eTogQ0FWQ29sb3JzLnNjcmVlbkJhY2tncm91bmRDb2xvclByb3BlcnR5XHJcbiAgICB9LCBwcm92aWRlZE9wdGlvbnMgKTtcclxuXHJcbiAgICBzdXBlcihcclxuICAgICAgKCkgPT4gbmV3IE1lZGlhbk1vZGVsKCB7XHJcbiAgICAgICAgdGFuZGVtOiBvcHRpb25zLnRhbmRlbS5jcmVhdGVUYW5kZW0oICdtb2RlbCcgKVxyXG4gICAgICB9ICksXHJcbiAgICAgICggbW9kZWw6IE1lZGlhbk1vZGVsICkgPT4gbmV3IE1lZGlhblNjcmVlblZpZXcoIG1vZGVsLCB7IHRhbmRlbTogb3B0aW9ucy50YW5kZW0uY3JlYXRlVGFuZGVtKCAndmlldycgKSB9ICksXHJcbiAgICAgIG9wdGlvbnNcclxuICAgICk7XHJcbiAgfVxyXG59XHJcblxyXG5jZW50ZXJBbmRWYXJpYWJpbGl0eS5yZWdpc3RlciggJ01lZGlhblNjcmVlbicsIE1lZGlhblNjcmVlbiApOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFNBQVNBLEtBQUssUUFBUSxnQ0FBZ0M7QUFDdEQsT0FBT0MsU0FBUyxNQUE0QixvQ0FBb0M7QUFDaEYsT0FBT0MsU0FBUyxNQUFNLHdCQUF3QjtBQUM5QyxPQUFPQyxvQkFBb0IsTUFBTSw0QkFBNEI7QUFDN0QsT0FBT0MsV0FBVyxNQUFNLHdCQUF3QjtBQUNoRCxPQUFPQyxTQUFTLE1BQTRCLHdCQUF3QjtBQUNwRSxPQUFPQyxnQkFBZ0IsTUFBTSw0QkFBNEI7QUFDekQsT0FBT0MsMkJBQTJCLE1BQU0sbUNBQW1DO0FBQzNFLE9BQU9DLFVBQVUsTUFBTSxpQ0FBaUM7QUFDeEQsT0FBT0Msb0JBQW9CLE1BQU0sc0NBQXNDO0FBSXZFLGVBQWUsTUFBTUMsWUFBWSxTQUFTTCxTQUFTLENBQWdDO0VBRTFFTSxXQUFXQSxDQUFFQyxlQUFvQyxFQUFHO0lBRXpELE1BQU1DLE9BQU8sR0FBR1osU0FBUyxDQUEwRCxDQUFDLENBQUU7TUFDcEZhLElBQUksRUFBRVAsMkJBQTJCLENBQUNRLE1BQU0sQ0FBQ0Msb0JBQW9CO01BQzdEQyxjQUFjLEVBQUUsSUFBSVQsVUFBVSxDQUFFLElBQUlSLEtBQUssQ0FBRVMsb0JBQXFCLENBQUMsRUFBRTtRQUNqRVMsc0JBQXNCLEVBQUUsQ0FBQztRQUN6QkMsdUJBQXVCLEVBQUU7TUFDM0IsQ0FBRSxDQUFDO01BQ0hDLHVCQUF1QixFQUFFbEIsU0FBUyxDQUFDbUI7SUFDckMsQ0FBQyxFQUFFVCxlQUFnQixDQUFDO0lBRXBCLEtBQUssQ0FDSCxNQUFNLElBQUlSLFdBQVcsQ0FBRTtNQUNyQmtCLE1BQU0sRUFBRVQsT0FBTyxDQUFDUyxNQUFNLENBQUNDLFlBQVksQ0FBRSxPQUFRO0lBQy9DLENBQUUsQ0FBQyxFQUNEQyxLQUFrQixJQUFNLElBQUlsQixnQkFBZ0IsQ0FBRWtCLEtBQUssRUFBRTtNQUFFRixNQUFNLEVBQUVULE9BQU8sQ0FBQ1MsTUFBTSxDQUFDQyxZQUFZLENBQUUsTUFBTztJQUFFLENBQUUsQ0FBQyxFQUMxR1YsT0FDRixDQUFDO0VBQ0g7QUFDRjtBQUVBVixvQkFBb0IsQ0FBQ3NCLFFBQVEsQ0FBRSxjQUFjLEVBQUVmLFlBQWEsQ0FBQyJ9