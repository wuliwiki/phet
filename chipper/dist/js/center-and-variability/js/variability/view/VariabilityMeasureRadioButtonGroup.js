// Copyright 2023, University of Colorado Boulder

import RectangularRadioButtonGroup from '../../../../sun/js/buttons/RectangularRadioButtonGroup.js';
import VariabilityMeasure from '../model/VariabilityMeasure.js';
import centerAndVariability from '../../centerAndVariability.js';
import optionize from '../../../../phet-core/js/optionize.js';
import { Text } from '../../../../scenery/js/imports.js';
export default class VariabilityMeasureRadioButtonGroup extends RectangularRadioButtonGroup {
  constructor(property, providedOptions) {
    const options = optionize()({
      radioButtonOptions: {
        baseColor: 'white'
      }
    }, providedOptions);
    const createLabel = (tandem, label, fill) => {
      const text = new Text(label, {
        fontSize: 16,
        fontWeight: 'bold',
        fill: 'black'
      });
      return text;
    };
    super(property, [{
      value: VariabilityMeasure.RANGE,
      createNode: tandem => createLabel(tandem, 'RAN', '#ec5f3a'),
      tandemName: 'rangeRadioButton'
    }, {
      value: VariabilityMeasure.IQR,
      createNode: tandem => createLabel(tandem, 'IQR', '#5bc760'),
      tandemName: 'iqrRadioButton'
    }, {
      value: VariabilityMeasure.MAD,
      createNode: tandem => createLabel(tandem, 'MAD', '#fdf454'),
      tandemName: 'madRadioButton'
    }], options);
  }
}
centerAndVariability.register('VariabilityMeasureRadioButtonGroup', VariabilityMeasureRadioButtonGroup);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWN0YW5ndWxhclJhZGlvQnV0dG9uR3JvdXAiLCJWYXJpYWJpbGl0eU1lYXN1cmUiLCJjZW50ZXJBbmRWYXJpYWJpbGl0eSIsIm9wdGlvbml6ZSIsIlRleHQiLCJWYXJpYWJpbGl0eU1lYXN1cmVSYWRpb0J1dHRvbkdyb3VwIiwiY29uc3RydWN0b3IiLCJwcm9wZXJ0eSIsInByb3ZpZGVkT3B0aW9ucyIsIm9wdGlvbnMiLCJyYWRpb0J1dHRvbk9wdGlvbnMiLCJiYXNlQ29sb3IiLCJjcmVhdGVMYWJlbCIsInRhbmRlbSIsImxhYmVsIiwiZmlsbCIsInRleHQiLCJmb250U2l6ZSIsImZvbnRXZWlnaHQiLCJ2YWx1ZSIsIlJBTkdFIiwiY3JlYXRlTm9kZSIsInRhbmRlbU5hbWUiLCJJUVIiLCJNQUQiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIlZhcmlhYmlsaXR5TWVhc3VyZVJhZGlvQnV0dG9uR3JvdXAudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjMsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuaW1wb3J0IFJlY3Rhbmd1bGFyUmFkaW9CdXR0b25Hcm91cCwgeyBSZWN0YW5ndWxhclJhZGlvQnV0dG9uR3JvdXBPcHRpb25zIH0gZnJvbSAnLi4vLi4vLi4vLi4vc3VuL2pzL2J1dHRvbnMvUmVjdGFuZ3VsYXJSYWRpb0J1dHRvbkdyb3VwLmpzJztcclxuaW1wb3J0IFZhcmlhYmlsaXR5TWVhc3VyZSBmcm9tICcuLi9tb2RlbC9WYXJpYWJpbGl0eU1lYXN1cmUuanMnO1xyXG5pbXBvcnQgY2VudGVyQW5kVmFyaWFiaWxpdHkgZnJvbSAnLi4vLi4vY2VudGVyQW5kVmFyaWFiaWxpdHkuanMnO1xyXG5pbXBvcnQgb3B0aW9uaXplLCB7IEVtcHR5U2VsZk9wdGlvbnMgfSBmcm9tICcuLi8uLi8uLi8uLi9waGV0LWNvcmUvanMvb3B0aW9uaXplLmpzJztcclxuaW1wb3J0IFByb3BlcnR5IGZyb20gJy4uLy4uLy4uLy4uL2F4b24vanMvUHJvcGVydHkuanMnO1xyXG5pbXBvcnQgeyBUZXh0IH0gZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IFRhbmRlbSBmcm9tICcuLi8uLi8uLi8uLi90YW5kZW0vanMvVGFuZGVtLmpzJztcclxuXHJcbnR5cGUgU2VsZk9wdGlvbnMgPSBFbXB0eVNlbGZPcHRpb25zO1xyXG50eXBlIFZhcmlhYmlsaXR5UmFkaW9CdXR0b25Hcm91cE9wdGlvbnMgPSBTZWxmT3B0aW9ucyAmIFJlY3Rhbmd1bGFyUmFkaW9CdXR0b25Hcm91cE9wdGlvbnM7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBWYXJpYWJpbGl0eU1lYXN1cmVSYWRpb0J1dHRvbkdyb3VwIGV4dGVuZHMgUmVjdGFuZ3VsYXJSYWRpb0J1dHRvbkdyb3VwPFZhcmlhYmlsaXR5TWVhc3VyZT4ge1xyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoIHByb3BlcnR5OiBQcm9wZXJ0eTxWYXJpYWJpbGl0eU1lYXN1cmU+LCBwcm92aWRlZE9wdGlvbnM6IFZhcmlhYmlsaXR5UmFkaW9CdXR0b25Hcm91cE9wdGlvbnMgKSB7XHJcbiAgICBjb25zdCBvcHRpb25zID0gb3B0aW9uaXplPFZhcmlhYmlsaXR5UmFkaW9CdXR0b25Hcm91cE9wdGlvbnMsIFNlbGZPcHRpb25zLCBSZWN0YW5ndWxhclJhZGlvQnV0dG9uR3JvdXBPcHRpb25zPigpKCB7XHJcbiAgICAgIHJhZGlvQnV0dG9uT3B0aW9uczoge1xyXG4gICAgICAgIGJhc2VDb2xvcjogJ3doaXRlJ1xyXG4gICAgICB9XHJcbiAgICB9LCBwcm92aWRlZE9wdGlvbnMgKTtcclxuXHJcbiAgICBjb25zdCBjcmVhdGVMYWJlbCA9ICggdGFuZGVtOiBUYW5kZW0sIGxhYmVsOiBzdHJpbmcsIGZpbGw6IHN0cmluZyApID0+IHtcclxuXHJcbiAgICAgIGNvbnN0IHRleHQgPSBuZXcgVGV4dCggbGFiZWwsIHtcclxuICAgICAgICBmb250U2l6ZTogMTYsXHJcbiAgICAgICAgZm9udFdlaWdodDogJ2JvbGQnLFxyXG4gICAgICAgIGZpbGw6ICdibGFjaydcclxuICAgICAgfSApO1xyXG4gICAgICByZXR1cm4gdGV4dDtcclxuICAgIH07XHJcbiAgICBzdXBlciggcHJvcGVydHksIFsge1xyXG4gICAgICB2YWx1ZTogVmFyaWFiaWxpdHlNZWFzdXJlLlJBTkdFLFxyXG4gICAgICBjcmVhdGVOb2RlOiB0YW5kZW0gPT4gY3JlYXRlTGFiZWwoIHRhbmRlbSwgJ1JBTicsICcjZWM1ZjNhJyApLFxyXG4gICAgICB0YW5kZW1OYW1lOiAncmFuZ2VSYWRpb0J1dHRvbidcclxuICAgIH0sIHtcclxuICAgICAgdmFsdWU6IFZhcmlhYmlsaXR5TWVhc3VyZS5JUVIsXHJcbiAgICAgIGNyZWF0ZU5vZGU6IHRhbmRlbSA9PiBjcmVhdGVMYWJlbCggdGFuZGVtLCAnSVFSJywgJyM1YmM3NjAnICksXHJcbiAgICAgIHRhbmRlbU5hbWU6ICdpcXJSYWRpb0J1dHRvbidcclxuICAgIH0sIHtcclxuICAgICAgdmFsdWU6IFZhcmlhYmlsaXR5TWVhc3VyZS5NQUQsXHJcbiAgICAgIGNyZWF0ZU5vZGU6IHRhbmRlbSA9PiBjcmVhdGVMYWJlbCggdGFuZGVtLCAnTUFEJywgJyNmZGY0NTQnICksXHJcbiAgICAgIHRhbmRlbU5hbWU6ICdtYWRSYWRpb0J1dHRvbidcclxuICAgIH0gXSwgb3B0aW9ucyApO1xyXG4gIH1cclxufVxyXG5cclxuY2VudGVyQW5kVmFyaWFiaWxpdHkucmVnaXN0ZXIoICdWYXJpYWJpbGl0eU1lYXN1cmVSYWRpb0J1dHRvbkdyb3VwJywgVmFyaWFiaWxpdHlNZWFzdXJlUmFkaW9CdXR0b25Hcm91cCApOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsT0FBT0EsMkJBQTJCLE1BQThDLDJEQUEyRDtBQUMzSSxPQUFPQyxrQkFBa0IsTUFBTSxnQ0FBZ0M7QUFDL0QsT0FBT0Msb0JBQW9CLE1BQU0sK0JBQStCO0FBQ2hFLE9BQU9DLFNBQVMsTUFBNEIsdUNBQXVDO0FBRW5GLFNBQVNDLElBQUksUUFBUSxtQ0FBbUM7QUFNeEQsZUFBZSxNQUFNQyxrQ0FBa0MsU0FBU0wsMkJBQTJCLENBQXFCO0VBRXZHTSxXQUFXQSxDQUFFQyxRQUFzQyxFQUFFQyxlQUFtRCxFQUFHO0lBQ2hILE1BQU1DLE9BQU8sR0FBR04sU0FBUyxDQUFzRixDQUFDLENBQUU7TUFDaEhPLGtCQUFrQixFQUFFO1FBQ2xCQyxTQUFTLEVBQUU7TUFDYjtJQUNGLENBQUMsRUFBRUgsZUFBZ0IsQ0FBQztJQUVwQixNQUFNSSxXQUFXLEdBQUdBLENBQUVDLE1BQWMsRUFBRUMsS0FBYSxFQUFFQyxJQUFZLEtBQU07TUFFckUsTUFBTUMsSUFBSSxHQUFHLElBQUlaLElBQUksQ0FBRVUsS0FBSyxFQUFFO1FBQzVCRyxRQUFRLEVBQUUsRUFBRTtRQUNaQyxVQUFVLEVBQUUsTUFBTTtRQUNsQkgsSUFBSSxFQUFFO01BQ1IsQ0FBRSxDQUFDO01BQ0gsT0FBT0MsSUFBSTtJQUNiLENBQUM7SUFDRCxLQUFLLENBQUVULFFBQVEsRUFBRSxDQUFFO01BQ2pCWSxLQUFLLEVBQUVsQixrQkFBa0IsQ0FBQ21CLEtBQUs7TUFDL0JDLFVBQVUsRUFBRVIsTUFBTSxJQUFJRCxXQUFXLENBQUVDLE1BQU0sRUFBRSxLQUFLLEVBQUUsU0FBVSxDQUFDO01BQzdEUyxVQUFVLEVBQUU7SUFDZCxDQUFDLEVBQUU7TUFDREgsS0FBSyxFQUFFbEIsa0JBQWtCLENBQUNzQixHQUFHO01BQzdCRixVQUFVLEVBQUVSLE1BQU0sSUFBSUQsV0FBVyxDQUFFQyxNQUFNLEVBQUUsS0FBSyxFQUFFLFNBQVUsQ0FBQztNQUM3RFMsVUFBVSxFQUFFO0lBQ2QsQ0FBQyxFQUFFO01BQ0RILEtBQUssRUFBRWxCLGtCQUFrQixDQUFDdUIsR0FBRztNQUM3QkgsVUFBVSxFQUFFUixNQUFNLElBQUlELFdBQVcsQ0FBRUMsTUFBTSxFQUFFLEtBQUssRUFBRSxTQUFVLENBQUM7TUFDN0RTLFVBQVUsRUFBRTtJQUNkLENBQUMsQ0FBRSxFQUFFYixPQUFRLENBQUM7RUFDaEI7QUFDRjtBQUVBUCxvQkFBb0IsQ0FBQ3VCLFFBQVEsQ0FBRSxvQ0FBb0MsRUFBRXBCLGtDQUFtQyxDQUFDIn0=