// Copyright 2018-2022, University of Colorado Boulder

/**
 * IdealGasLawViewProperties is the base class for view-specific Properties that are common to the
 * screens that are based on the Ideal Gas Law.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import BooleanProperty from '../../../../axon/js/BooleanProperty.js';
import StringUnionProperty from '../../../../axon/js/StringUnionProperty.js';
import gasProperties from '../../gasProperties.js';
import { ParticleTypeValues } from '../model/ParticleType.js';
export default class IdealGasLawViewProperties {
  constructor(tandem) {
    this.widthVisibleProperty = new BooleanProperty(false, {
      tandem: tandem.createTandem('widthVisibleProperty'),
      phetioDocumentation: 'whether dimensional arrows are visible for the width of the container'
    });
    this.particlesExpandedProperty = new BooleanProperty(false, {
      tandem: tandem.createTandem('particlesExpandedProperty'),
      phetioDocumentation: 'whether the Particles accordion box is expanded'
    });
    this.particleTypeProperty = new StringUnionProperty('heavy', {
      validValues: ParticleTypeValues,
      tandem: tandem.createTandem('particleTypeProperty'),
      phetioDocumentation: 'the particle type that will be dispensed by the bicycle pump'
    });
  }
  dispose() {
    assert && assert(false, 'dispose is not supported, exists for the lifetime of the sim');
  }
  reset() {
    this.widthVisibleProperty.reset();
    this.particlesExpandedProperty.reset();
    this.particleTypeProperty.reset();
  }
}
gasProperties.register('IdealGasLawViewProperties', IdealGasLawViewProperties);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJCb29sZWFuUHJvcGVydHkiLCJTdHJpbmdVbmlvblByb3BlcnR5IiwiZ2FzUHJvcGVydGllcyIsIlBhcnRpY2xlVHlwZVZhbHVlcyIsIklkZWFsR2FzTGF3Vmlld1Byb3BlcnRpZXMiLCJjb25zdHJ1Y3RvciIsInRhbmRlbSIsIndpZHRoVmlzaWJsZVByb3BlcnR5IiwiY3JlYXRlVGFuZGVtIiwicGhldGlvRG9jdW1lbnRhdGlvbiIsInBhcnRpY2xlc0V4cGFuZGVkUHJvcGVydHkiLCJwYXJ0aWNsZVR5cGVQcm9wZXJ0eSIsInZhbGlkVmFsdWVzIiwiZGlzcG9zZSIsImFzc2VydCIsInJlc2V0IiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJJZGVhbEdhc0xhd1ZpZXdQcm9wZXJ0aWVzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE4LTIwMjIsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIElkZWFsR2FzTGF3Vmlld1Byb3BlcnRpZXMgaXMgdGhlIGJhc2UgY2xhc3MgZm9yIHZpZXctc3BlY2lmaWMgUHJvcGVydGllcyB0aGF0IGFyZSBjb21tb24gdG8gdGhlXHJcbiAqIHNjcmVlbnMgdGhhdCBhcmUgYmFzZWQgb24gdGhlIElkZWFsIEdhcyBMYXcuXHJcbiAqXHJcbiAqIEBhdXRob3IgQ2hyaXMgTWFsbGV5IChQaXhlbFpvb20sIEluYy4pXHJcbiAqL1xyXG5cclxuaW1wb3J0IEJvb2xlYW5Qcm9wZXJ0eSBmcm9tICcuLi8uLi8uLi8uLi9heG9uL2pzL0Jvb2xlYW5Qcm9wZXJ0eS5qcyc7XHJcbmltcG9ydCBQcm9wZXJ0eSBmcm9tICcuLi8uLi8uLi8uLi9heG9uL2pzL1Byb3BlcnR5LmpzJztcclxuaW1wb3J0IFN0cmluZ1VuaW9uUHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vLi4vYXhvbi9qcy9TdHJpbmdVbmlvblByb3BlcnR5LmpzJztcclxuaW1wb3J0IFRhbmRlbSBmcm9tICcuLi8uLi8uLi8uLi90YW5kZW0vanMvVGFuZGVtLmpzJztcclxuaW1wb3J0IGdhc1Byb3BlcnRpZXMgZnJvbSAnLi4vLi4vZ2FzUHJvcGVydGllcy5qcyc7XHJcbmltcG9ydCB7IFBhcnRpY2xlVHlwZSwgUGFydGljbGVUeXBlVmFsdWVzIH0gZnJvbSAnLi4vbW9kZWwvUGFydGljbGVUeXBlLmpzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIElkZWFsR2FzTGF3Vmlld1Byb3BlcnRpZXMge1xyXG5cclxuICBwdWJsaWMgcmVhZG9ubHkgd2lkdGhWaXNpYmxlUHJvcGVydHk6IFByb3BlcnR5PGJvb2xlYW4+O1xyXG4gIHB1YmxpYyByZWFkb25seSBwYXJ0aWNsZXNFeHBhbmRlZFByb3BlcnR5OiBQcm9wZXJ0eTxib29sZWFuPjtcclxuICBwdWJsaWMgcmVhZG9ubHkgcGFydGljbGVUeXBlUHJvcGVydHk6IFN0cmluZ1VuaW9uUHJvcGVydHk8UGFydGljbGVUeXBlPjtcclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKCB0YW5kZW06IFRhbmRlbSApIHtcclxuXHJcbiAgICB0aGlzLndpZHRoVmlzaWJsZVByb3BlcnR5ID0gbmV3IEJvb2xlYW5Qcm9wZXJ0eSggZmFsc2UsIHtcclxuICAgICAgdGFuZGVtOiB0YW5kZW0uY3JlYXRlVGFuZGVtKCAnd2lkdGhWaXNpYmxlUHJvcGVydHknICksXHJcbiAgICAgIHBoZXRpb0RvY3VtZW50YXRpb246ICd3aGV0aGVyIGRpbWVuc2lvbmFsIGFycm93cyBhcmUgdmlzaWJsZSBmb3IgdGhlIHdpZHRoIG9mIHRoZSBjb250YWluZXInXHJcbiAgICB9ICk7XHJcblxyXG4gICAgdGhpcy5wYXJ0aWNsZXNFeHBhbmRlZFByb3BlcnR5ID0gbmV3IEJvb2xlYW5Qcm9wZXJ0eSggZmFsc2UsIHtcclxuICAgICAgdGFuZGVtOiB0YW5kZW0uY3JlYXRlVGFuZGVtKCAncGFydGljbGVzRXhwYW5kZWRQcm9wZXJ0eScgKSxcclxuICAgICAgcGhldGlvRG9jdW1lbnRhdGlvbjogJ3doZXRoZXIgdGhlIFBhcnRpY2xlcyBhY2NvcmRpb24gYm94IGlzIGV4cGFuZGVkJ1xyXG4gICAgfSApO1xyXG5cclxuICAgIHRoaXMucGFydGljbGVUeXBlUHJvcGVydHkgPSBuZXcgU3RyaW5nVW5pb25Qcm9wZXJ0eTxQYXJ0aWNsZVR5cGU+KCAnaGVhdnknLCB7XHJcbiAgICAgIHZhbGlkVmFsdWVzOiBQYXJ0aWNsZVR5cGVWYWx1ZXMsXHJcbiAgICAgIHRhbmRlbTogdGFuZGVtLmNyZWF0ZVRhbmRlbSggJ3BhcnRpY2xlVHlwZVByb3BlcnR5JyApLFxyXG4gICAgICBwaGV0aW9Eb2N1bWVudGF0aW9uOiAndGhlIHBhcnRpY2xlIHR5cGUgdGhhdCB3aWxsIGJlIGRpc3BlbnNlZCBieSB0aGUgYmljeWNsZSBwdW1wJ1xyXG4gICAgfSApO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGRpc3Bvc2UoKTogdm9pZCB7XHJcbiAgICBhc3NlcnQgJiYgYXNzZXJ0KCBmYWxzZSwgJ2Rpc3Bvc2UgaXMgbm90IHN1cHBvcnRlZCwgZXhpc3RzIGZvciB0aGUgbGlmZXRpbWUgb2YgdGhlIHNpbScgKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyByZXNldCgpOiB2b2lkIHtcclxuICAgIHRoaXMud2lkdGhWaXNpYmxlUHJvcGVydHkucmVzZXQoKTtcclxuICAgIHRoaXMucGFydGljbGVzRXhwYW5kZWRQcm9wZXJ0eS5yZXNldCgpO1xyXG4gICAgdGhpcy5wYXJ0aWNsZVR5cGVQcm9wZXJ0eS5yZXNldCgpO1xyXG4gIH1cclxufVxyXG5cclxuZ2FzUHJvcGVydGllcy5yZWdpc3RlciggJ0lkZWFsR2FzTGF3Vmlld1Byb3BlcnRpZXMnLCBJZGVhbEdhc0xhd1ZpZXdQcm9wZXJ0aWVzICk7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsZUFBZSxNQUFNLHdDQUF3QztBQUVwRSxPQUFPQyxtQkFBbUIsTUFBTSw0Q0FBNEM7QUFFNUUsT0FBT0MsYUFBYSxNQUFNLHdCQUF3QjtBQUNsRCxTQUF1QkMsa0JBQWtCLFFBQVEsMEJBQTBCO0FBRTNFLGVBQWUsTUFBTUMseUJBQXlCLENBQUM7RUFNdENDLFdBQVdBLENBQUVDLE1BQWMsRUFBRztJQUVuQyxJQUFJLENBQUNDLG9CQUFvQixHQUFHLElBQUlQLGVBQWUsQ0FBRSxLQUFLLEVBQUU7TUFDdERNLE1BQU0sRUFBRUEsTUFBTSxDQUFDRSxZQUFZLENBQUUsc0JBQXVCLENBQUM7TUFDckRDLG1CQUFtQixFQUFFO0lBQ3ZCLENBQUUsQ0FBQztJQUVILElBQUksQ0FBQ0MseUJBQXlCLEdBQUcsSUFBSVYsZUFBZSxDQUFFLEtBQUssRUFBRTtNQUMzRE0sTUFBTSxFQUFFQSxNQUFNLENBQUNFLFlBQVksQ0FBRSwyQkFBNEIsQ0FBQztNQUMxREMsbUJBQW1CLEVBQUU7SUFDdkIsQ0FBRSxDQUFDO0lBRUgsSUFBSSxDQUFDRSxvQkFBb0IsR0FBRyxJQUFJVixtQkFBbUIsQ0FBZ0IsT0FBTyxFQUFFO01BQzFFVyxXQUFXLEVBQUVULGtCQUFrQjtNQUMvQkcsTUFBTSxFQUFFQSxNQUFNLENBQUNFLFlBQVksQ0FBRSxzQkFBdUIsQ0FBQztNQUNyREMsbUJBQW1CLEVBQUU7SUFDdkIsQ0FBRSxDQUFDO0VBQ0w7RUFFT0ksT0FBT0EsQ0FBQSxFQUFTO0lBQ3JCQyxNQUFNLElBQUlBLE1BQU0sQ0FBRSxLQUFLLEVBQUUsOERBQStELENBQUM7RUFDM0Y7RUFFT0MsS0FBS0EsQ0FBQSxFQUFTO0lBQ25CLElBQUksQ0FBQ1Isb0JBQW9CLENBQUNRLEtBQUssQ0FBQyxDQUFDO0lBQ2pDLElBQUksQ0FBQ0wseUJBQXlCLENBQUNLLEtBQUssQ0FBQyxDQUFDO0lBQ3RDLElBQUksQ0FBQ0osb0JBQW9CLENBQUNJLEtBQUssQ0FBQyxDQUFDO0VBQ25DO0FBQ0Y7QUFFQWIsYUFBYSxDQUFDYyxRQUFRLENBQUUsMkJBQTJCLEVBQUVaLHlCQUEwQixDQUFDIn0=