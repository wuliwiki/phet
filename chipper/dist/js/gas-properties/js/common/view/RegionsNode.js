// Copyright 2019-2022, University of Colorado Boulder

/**
 * RegionsNode shows how the collision detection space is partitioned into a 2D grid of Regions.
 * A number in the center of each region indicates how many particles are in that region.
 * This is used for debugging, and is not visible to the user. See GasPropertiesQueryParameters.regions.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import { Node } from '../../../../scenery/js/imports.js';
import gasProperties from '../../gasProperties.js';
import RegionNode from './RegionNode.js';
export default class RegionsNode extends Node {
  constructor(regions, modelViewTransform) {
    const regionNodes = [];
    for (let i = regions.length - 1; i >= 0; i--) {
      const regionNode = new RegionNode(regions[i], modelViewTransform);
      regionNodes.push(regionNode);
    }
    super({
      children: regionNodes,
      pickable: false
    });
    this.regionNodes = regionNodes;
  }
  dispose() {
    assert && assert(false, 'dispose is not supported, exists for the lifetime of the sim');
    super.dispose();
  }

  /**
   * Updates each RegionNode.
   */
  update() {
    for (let i = this.regionNodes.length - 1; i >= 0; i--) {
      this.regionNodes[i].update();
    }
  }
}
gasProperties.register('RegionsNode', RegionsNode);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJOb2RlIiwiZ2FzUHJvcGVydGllcyIsIlJlZ2lvbk5vZGUiLCJSZWdpb25zTm9kZSIsImNvbnN0cnVjdG9yIiwicmVnaW9ucyIsIm1vZGVsVmlld1RyYW5zZm9ybSIsInJlZ2lvbk5vZGVzIiwiaSIsImxlbmd0aCIsInJlZ2lvbk5vZGUiLCJwdXNoIiwiY2hpbGRyZW4iLCJwaWNrYWJsZSIsImRpc3Bvc2UiLCJhc3NlcnQiLCJ1cGRhdGUiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIlJlZ2lvbnNOb2RlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE5LTIwMjIsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIFJlZ2lvbnNOb2RlIHNob3dzIGhvdyB0aGUgY29sbGlzaW9uIGRldGVjdGlvbiBzcGFjZSBpcyBwYXJ0aXRpb25lZCBpbnRvIGEgMkQgZ3JpZCBvZiBSZWdpb25zLlxyXG4gKiBBIG51bWJlciBpbiB0aGUgY2VudGVyIG9mIGVhY2ggcmVnaW9uIGluZGljYXRlcyBob3cgbWFueSBwYXJ0aWNsZXMgYXJlIGluIHRoYXQgcmVnaW9uLlxyXG4gKiBUaGlzIGlzIHVzZWQgZm9yIGRlYnVnZ2luZywgYW5kIGlzIG5vdCB2aXNpYmxlIHRvIHRoZSB1c2VyLiBTZWUgR2FzUHJvcGVydGllc1F1ZXJ5UGFyYW1ldGVycy5yZWdpb25zLlxyXG4gKlxyXG4gKiBAYXV0aG9yIENocmlzIE1hbGxleSAoUGl4ZWxab29tLCBJbmMuKVxyXG4gKi9cclxuXHJcbmltcG9ydCBNb2RlbFZpZXdUcmFuc2Zvcm0yIGZyb20gJy4uLy4uLy4uLy4uL3BoZXRjb21tb24vanMvdmlldy9Nb2RlbFZpZXdUcmFuc2Zvcm0yLmpzJztcclxuaW1wb3J0IHsgTm9kZSB9IGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XHJcbmltcG9ydCBnYXNQcm9wZXJ0aWVzIGZyb20gJy4uLy4uL2dhc1Byb3BlcnRpZXMuanMnO1xyXG5pbXBvcnQgUmVnaW9uIGZyb20gJy4uL21vZGVsL1JlZ2lvbi5qcyc7XHJcbmltcG9ydCBSZWdpb25Ob2RlIGZyb20gJy4vUmVnaW9uTm9kZS5qcyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSZWdpb25zTm9kZSBleHRlbmRzIE5vZGUge1xyXG5cclxuICBwcml2YXRlIHJlYWRvbmx5IHJlZ2lvbk5vZGVzOiBSZWdpb25Ob2RlW107XHJcblxyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvciggcmVnaW9uczogUmVnaW9uW10sIG1vZGVsVmlld1RyYW5zZm9ybTogTW9kZWxWaWV3VHJhbnNmb3JtMiApIHtcclxuXHJcbiAgICBjb25zdCByZWdpb25Ob2RlczogUmVnaW9uTm9kZVtdID0gW107XHJcbiAgICBmb3IgKCBsZXQgaSA9IHJlZ2lvbnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0gKSB7XHJcbiAgICAgIGNvbnN0IHJlZ2lvbk5vZGUgPSBuZXcgUmVnaW9uTm9kZSggcmVnaW9uc1sgaSBdLCBtb2RlbFZpZXdUcmFuc2Zvcm0gKTtcclxuICAgICAgcmVnaW9uTm9kZXMucHVzaCggcmVnaW9uTm9kZSApO1xyXG4gICAgfVxyXG5cclxuICAgIHN1cGVyKCB7XHJcbiAgICAgIGNoaWxkcmVuOiByZWdpb25Ob2RlcyxcclxuICAgICAgcGlja2FibGU6IGZhbHNlXHJcbiAgICB9ICk7XHJcblxyXG4gICAgdGhpcy5yZWdpb25Ob2RlcyA9IHJlZ2lvbk5vZGVzO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIG92ZXJyaWRlIGRpc3Bvc2UoKTogdm9pZCB7XHJcbiAgICBhc3NlcnQgJiYgYXNzZXJ0KCBmYWxzZSwgJ2Rpc3Bvc2UgaXMgbm90IHN1cHBvcnRlZCwgZXhpc3RzIGZvciB0aGUgbGlmZXRpbWUgb2YgdGhlIHNpbScgKTtcclxuICAgIHN1cGVyLmRpc3Bvc2UoKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFVwZGF0ZXMgZWFjaCBSZWdpb25Ob2RlLlxyXG4gICAqL1xyXG4gIHB1YmxpYyB1cGRhdGUoKTogdm9pZCB7XHJcbiAgICBmb3IgKCBsZXQgaSA9IHRoaXMucmVnaW9uTm9kZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0gKSB7XHJcbiAgICAgIHRoaXMucmVnaW9uTm9kZXNbIGkgXS51cGRhdGUoKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbmdhc1Byb3BlcnRpZXMucmVnaXN0ZXIoICdSZWdpb25zTm9kZScsIFJlZ2lvbnNOb2RlICk7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFHQSxTQUFTQSxJQUFJLFFBQVEsbUNBQW1DO0FBQ3hELE9BQU9DLGFBQWEsTUFBTSx3QkFBd0I7QUFFbEQsT0FBT0MsVUFBVSxNQUFNLGlCQUFpQjtBQUV4QyxlQUFlLE1BQU1DLFdBQVcsU0FBU0gsSUFBSSxDQUFDO0VBSXJDSSxXQUFXQSxDQUFFQyxPQUFpQixFQUFFQyxrQkFBdUMsRUFBRztJQUUvRSxNQUFNQyxXQUF5QixHQUFHLEVBQUU7SUFDcEMsS0FBTSxJQUFJQyxDQUFDLEdBQUdILE9BQU8sQ0FBQ0ksTUFBTSxHQUFHLENBQUMsRUFBRUQsQ0FBQyxJQUFJLENBQUMsRUFBRUEsQ0FBQyxFQUFFLEVBQUc7TUFDOUMsTUFBTUUsVUFBVSxHQUFHLElBQUlSLFVBQVUsQ0FBRUcsT0FBTyxDQUFFRyxDQUFDLENBQUUsRUFBRUYsa0JBQW1CLENBQUM7TUFDckVDLFdBQVcsQ0FBQ0ksSUFBSSxDQUFFRCxVQUFXLENBQUM7SUFDaEM7SUFFQSxLQUFLLENBQUU7TUFDTEUsUUFBUSxFQUFFTCxXQUFXO01BQ3JCTSxRQUFRLEVBQUU7SUFDWixDQUFFLENBQUM7SUFFSCxJQUFJLENBQUNOLFdBQVcsR0FBR0EsV0FBVztFQUNoQztFQUVnQk8sT0FBT0EsQ0FBQSxFQUFTO0lBQzlCQyxNQUFNLElBQUlBLE1BQU0sQ0FBRSxLQUFLLEVBQUUsOERBQStELENBQUM7SUFDekYsS0FBSyxDQUFDRCxPQUFPLENBQUMsQ0FBQztFQUNqQjs7RUFFQTtBQUNGO0FBQ0E7RUFDU0UsTUFBTUEsQ0FBQSxFQUFTO0lBQ3BCLEtBQU0sSUFBSVIsQ0FBQyxHQUFHLElBQUksQ0FBQ0QsV0FBVyxDQUFDRSxNQUFNLEdBQUcsQ0FBQyxFQUFFRCxDQUFDLElBQUksQ0FBQyxFQUFFQSxDQUFDLEVBQUUsRUFBRztNQUN2RCxJQUFJLENBQUNELFdBQVcsQ0FBRUMsQ0FBQyxDQUFFLENBQUNRLE1BQU0sQ0FBQyxDQUFDO0lBQ2hDO0VBQ0Y7QUFDRjtBQUVBZixhQUFhLENBQUNnQixRQUFRLENBQUUsYUFBYSxFQUFFZCxXQUFZLENBQUMifQ==