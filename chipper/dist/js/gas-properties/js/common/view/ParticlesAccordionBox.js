// Copyright 2018-2022, University of Colorado Boulder

/**
 * ParticlesAccordionBox is the accordion box titled 'Particles'.  It contains controls for setting the number
 * of particles.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import { optionize4 } from '../../../../phet-core/js/optionize.js';
import { Text, VBox } from '../../../../scenery/js/imports.js';
import AccordionBox from '../../../../sun/js/AccordionBox.js';
import gasProperties from '../../gasProperties.js';
import GasPropertiesStrings from '../../GasPropertiesStrings.js';
import GasPropertiesColors from '../GasPropertiesColors.js';
import GasPropertiesConstants from '../GasPropertiesConstants.js';
import GasPropertiesCheckbox from './GasPropertiesCheckbox.js';
import GasPropertiesIconFactory from './GasPropertiesIconFactory.js';
import NumberOfParticlesControl from './NumberOfParticlesControl.js';
export default class ParticlesAccordionBox extends AccordionBox {
  constructor(numberOfHeavyParticlesProperty, numberOfLightParticlesProperty, modelViewTransform, providedOptions) {
    const options = optionize4()({}, GasPropertiesConstants.ACCORDION_BOX_OPTIONS, {
      // SelfOptions
      fixedWidth: 100,
      collisionsEnabledProperty: null,
      //  AccordionBoxOptions
      contentXMargin: GasPropertiesConstants.ACCORDION_BOX_OPTIONS.contentXMargin,
      titleNode: new Text(GasPropertiesStrings.particlesStringProperty, {
        font: GasPropertiesConstants.TITLE_FONT,
        fill: GasPropertiesColors.textFillProperty
      })
    }, providedOptions);

    // Limit width of title
    options.titleNode.maxWidth = 0.75 * options.fixedWidth;
    const contentWidth = options.fixedWidth - 2 * options.contentXMargin;
    const children = [
    // Heavy
    new NumberOfParticlesControl(GasPropertiesIconFactory.createHeavyParticleIcon(modelViewTransform), GasPropertiesStrings.heavyStringProperty, numberOfHeavyParticlesProperty, {
      tandem: options.tandem.createTandem('numberOfHeavyParticlesControl')
    }),
    // Light
    new NumberOfParticlesControl(GasPropertiesIconFactory.createLightParticleIcon(modelViewTransform), GasPropertiesStrings.lightStringProperty, numberOfLightParticlesProperty, {
      tandem: options.tandem.createTandem('numberOfLightParticlesControl')
    })];
    if (options.collisionsEnabledProperty) {
      // optional Collisions checkbox, prepended so that it appears at top
      children.unshift(new GasPropertiesCheckbox(options.collisionsEnabledProperty, {
        textStringProperty: GasPropertiesStrings.collisionsStringProperty,
        textMaxWidth: 175,
        // determined empirically
        tandem: options.tandem.createTandem('collisionsCheckbox')
      }));
    }
    const content = new VBox({
      preferredWidth: contentWidth,
      widthSizable: false,
      // so that width will remain preferredWidth
      align: 'left',
      spacing: 15,
      children: children
    });
    super(content, options);
  }
  dispose() {
    assert && assert(false, 'dispose is not supported, exists for the lifetime of the sim');
    super.dispose();
  }
}
gasProperties.register('ParticlesAccordionBox', ParticlesAccordionBox);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,