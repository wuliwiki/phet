// Copyright 2019-2022, University of Colorado Boulder

/**
 * EnergyAccordionBox is the base class for the 'Speed' and 'Kinetic Energy' accordion boxes in the 'Energy' screen.
 * These accordion boxes are identical, except for their title and HistogramNode.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import { optionize4 } from '../../../../phet-core/js/optionize.js';
import { HBox, Text, VBox } from '../../../../scenery/js/imports.js';
import AccordionBox from '../../../../sun/js/AccordionBox.js';
import GasPropertiesColors from '../../common/GasPropertiesColors.js';
import GasPropertiesConstants from '../../common/GasPropertiesConstants.js';
import gasProperties from '../../gasProperties.js';
import SpeciesHistogramCheckbox from './SpeciesHistogramCheckbox.js';
export default class EnergyAccordionBox extends AccordionBox {
  constructor(titleStringProperty, modelViewTransform, createHistogramNode, providedOptions) {
    const options = optionize4()({}, GasPropertiesConstants.ACCORDION_BOX_OPTIONS, {
      // SelfOptions
      fixedWidth: 100,
      // AccordionBoxOptions
      contentXMargin: GasPropertiesConstants.ACCORDION_BOX_OPTIONS.contentXMargin,
      contentYSpacing: 0,
      titleNode: new Text(titleStringProperty, {
        font: GasPropertiesConstants.TITLE_FONT,
        fill: GasPropertiesColors.textFillProperty
      })
    }, providedOptions);

    // Limit width of title, multiplier determined empirically
    options.titleNode.maxWidth = 0.75 * options.fixedWidth;
    const histogramNode = createHistogramNode(options.tandem.createTandem('histogramNode'));

    // Checkboxes
    const checkboxes = new HBox({
      children: [SpeciesHistogramCheckbox.createHeavyParticlesCheckbox(histogramNode.heavyPlotVisibleProperty, modelViewTransform, {
        tandem: options.tandem.createTandem('heavyParticlesCheckbox')
      }), SpeciesHistogramCheckbox.createLightParticlesCheckbox(histogramNode.lightPlotVisibleProperty, modelViewTransform, {
        tandem: options.tandem.createTandem('lightParticlesCheckbox')
      })],
      align: 'center',
      spacing: 25
    });
    const contentWidth = options.fixedWidth - 2 * options.contentXMargin;

    // Checkboxes centered below histogram
    const content = new VBox({
      preferredWidth: contentWidth,
      widthSizable: false,
      // so that width will remain preferredWidth
      align: 'center',
      spacing: 10,
      children: [histogramNode, checkboxes]
    });
    super(content, options);
    this.histogramNode = histogramNode;

    // Disable updates of the histogram when the accordion box is collapsed.
    this.expandedProperty.link(expanded => {
      histogramNode.updateEnabledProperty.value = expanded;
    });
  }
  dispose() {
    assert && assert(false, 'dispose is not supported, exists for the lifetime of the sim');
    super.dispose();
  }
  reset() {
    this.histogramNode.reset();
    super.reset();
  }
}
gasProperties.register('EnergyAccordionBox', EnergyAccordionBox);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJvcHRpb25pemU0IiwiSEJveCIsIlRleHQiLCJWQm94IiwiQWNjb3JkaW9uQm94IiwiR2FzUHJvcGVydGllc0NvbG9ycyIsIkdhc1Byb3BlcnRpZXNDb25zdGFudHMiLCJnYXNQcm9wZXJ0aWVzIiwiU3BlY2llc0hpc3RvZ3JhbUNoZWNrYm94IiwiRW5lcmd5QWNjb3JkaW9uQm94IiwiY29uc3RydWN0b3IiLCJ0aXRsZVN0cmluZ1Byb3BlcnR5IiwibW9kZWxWaWV3VHJhbnNmb3JtIiwiY3JlYXRlSGlzdG9ncmFtTm9kZSIsInByb3ZpZGVkT3B0aW9ucyIsIm9wdGlvbnMiLCJBQ0NPUkRJT05fQk9YX09QVElPTlMiLCJmaXhlZFdpZHRoIiwiY29udGVudFhNYXJnaW4iLCJjb250ZW50WVNwYWNpbmciLCJ0aXRsZU5vZGUiLCJmb250IiwiVElUTEVfRk9OVCIsImZpbGwiLCJ0ZXh0RmlsbFByb3BlcnR5IiwibWF4V2lkdGgiLCJoaXN0b2dyYW1Ob2RlIiwidGFuZGVtIiwiY3JlYXRlVGFuZGVtIiwiY2hlY2tib3hlcyIsImNoaWxkcmVuIiwiY3JlYXRlSGVhdnlQYXJ0aWNsZXNDaGVja2JveCIsImhlYXZ5UGxvdFZpc2libGVQcm9wZXJ0eSIsImNyZWF0ZUxpZ2h0UGFydGljbGVzQ2hlY2tib3giLCJsaWdodFBsb3RWaXNpYmxlUHJvcGVydHkiLCJhbGlnbiIsInNwYWNpbmciLCJjb250ZW50V2lkdGgiLCJjb250ZW50IiwicHJlZmVycmVkV2lkdGgiLCJ3aWR0aFNpemFibGUiLCJleHBhbmRlZFByb3BlcnR5IiwibGluayIsImV4cGFuZGVkIiwidXBkYXRlRW5hYmxlZFByb3BlcnR5IiwidmFsdWUiLCJkaXNwb3NlIiwiYXNzZXJ0IiwicmVzZXQiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIkVuZXJneUFjY29yZGlvbkJveC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxOS0yMDIyLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBFbmVyZ3lBY2NvcmRpb25Cb3ggaXMgdGhlIGJhc2UgY2xhc3MgZm9yIHRoZSAnU3BlZWQnIGFuZCAnS2luZXRpYyBFbmVyZ3knIGFjY29yZGlvbiBib3hlcyBpbiB0aGUgJ0VuZXJneScgc2NyZWVuLlxyXG4gKiBUaGVzZSBhY2NvcmRpb24gYm94ZXMgYXJlIGlkZW50aWNhbCwgZXhjZXB0IGZvciB0aGVpciB0aXRsZSBhbmQgSGlzdG9ncmFtTm9kZS5cclxuICpcclxuICogQGF1dGhvciBDaHJpcyBNYWxsZXkgKFBpeGVsWm9vbSwgSW5jLilcclxuICovXHJcblxyXG5pbXBvcnQgVFJlYWRPbmx5UHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vLi4vYXhvbi9qcy9UUmVhZE9ubHlQcm9wZXJ0eS5qcyc7XHJcbmltcG9ydCB7IG9wdGlvbml6ZTQgfSBmcm9tICcuLi8uLi8uLi8uLi9waGV0LWNvcmUvanMvb3B0aW9uaXplLmpzJztcclxuaW1wb3J0IFBpY2tSZXF1aXJlZCBmcm9tICcuLi8uLi8uLi8uLi9waGV0LWNvcmUvanMvdHlwZXMvUGlja1JlcXVpcmVkLmpzJztcclxuaW1wb3J0IE1vZGVsVmlld1RyYW5zZm9ybTIgZnJvbSAnLi4vLi4vLi4vLi4vcGhldGNvbW1vbi9qcy92aWV3L01vZGVsVmlld1RyYW5zZm9ybTIuanMnO1xyXG5pbXBvcnQgeyBIQm94LCBUZXh0LCBWQm94IH0gZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IEFjY29yZGlvbkJveCwgeyBBY2NvcmRpb25Cb3hPcHRpb25zIH0gZnJvbSAnLi4vLi4vLi4vLi4vc3VuL2pzL0FjY29yZGlvbkJveC5qcyc7XHJcbmltcG9ydCBUYW5kZW0gZnJvbSAnLi4vLi4vLi4vLi4vdGFuZGVtL2pzL1RhbmRlbS5qcyc7XHJcbmltcG9ydCBHYXNQcm9wZXJ0aWVzQ29sb3JzIGZyb20gJy4uLy4uL2NvbW1vbi9HYXNQcm9wZXJ0aWVzQ29sb3JzLmpzJztcclxuaW1wb3J0IEdhc1Byb3BlcnRpZXNDb25zdGFudHMgZnJvbSAnLi4vLi4vY29tbW9uL0dhc1Byb3BlcnRpZXNDb25zdGFudHMuanMnO1xyXG5pbXBvcnQgZ2FzUHJvcGVydGllcyBmcm9tICcuLi8uLi9nYXNQcm9wZXJ0aWVzLmpzJztcclxuaW1wb3J0IEhpc3RvZ3JhbU5vZGUgZnJvbSAnLi9IaXN0b2dyYW1Ob2RlLmpzJztcclxuaW1wb3J0IFNwZWNpZXNIaXN0b2dyYW1DaGVja2JveCBmcm9tICcuL1NwZWNpZXNIaXN0b2dyYW1DaGVja2JveC5qcyc7XHJcblxyXG50eXBlIFNlbGZPcHRpb25zID0ge1xyXG4gIGZpeGVkV2lkdGg/OiBudW1iZXI7XHJcbn07XHJcblxyXG5leHBvcnQgdHlwZSBFbmVyZ3lBY2NvcmRpb25Cb3hPcHRpb25zID0gU2VsZk9wdGlvbnMgJiBQaWNrUmVxdWlyZWQ8QWNjb3JkaW9uQm94T3B0aW9ucywgJ2V4cGFuZGVkUHJvcGVydHknIHwgJ3RhbmRlbSc+O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRW5lcmd5QWNjb3JkaW9uQm94IGV4dGVuZHMgQWNjb3JkaW9uQm94IHtcclxuXHJcbiAgcHJpdmF0ZSByZWFkb25seSBoaXN0b2dyYW1Ob2RlOiBIaXN0b2dyYW1Ob2RlO1xyXG5cclxuICBwcm90ZWN0ZWQgY29uc3RydWN0b3IoIHRpdGxlU3RyaW5nUHJvcGVydHk6IFRSZWFkT25seVByb3BlcnR5PHN0cmluZz4sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICBtb2RlbFZpZXdUcmFuc2Zvcm06IE1vZGVsVmlld1RyYW5zZm9ybTIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICBjcmVhdGVIaXN0b2dyYW1Ob2RlOiAoIHRhbmRlbTogVGFuZGVtICkgPT4gSGlzdG9ncmFtTm9kZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgIHByb3ZpZGVkT3B0aW9uczogRW5lcmd5QWNjb3JkaW9uQm94T3B0aW9ucyApIHtcclxuXHJcbiAgICBjb25zdCBvcHRpb25zID0gb3B0aW9uaXplNDxFbmVyZ3lBY2NvcmRpb25Cb3hPcHRpb25zLCBTZWxmT3B0aW9ucywgQWNjb3JkaW9uQm94T3B0aW9ucz4oKShcclxuICAgICAge30sIEdhc1Byb3BlcnRpZXNDb25zdGFudHMuQUNDT1JESU9OX0JPWF9PUFRJT05TLCB7XHJcblxyXG4gICAgICAgIC8vIFNlbGZPcHRpb25zXHJcbiAgICAgICAgZml4ZWRXaWR0aDogMTAwLFxyXG5cclxuICAgICAgICAvLyBBY2NvcmRpb25Cb3hPcHRpb25zXHJcbiAgICAgICAgY29udGVudFhNYXJnaW46IEdhc1Byb3BlcnRpZXNDb25zdGFudHMuQUNDT1JESU9OX0JPWF9PUFRJT05TLmNvbnRlbnRYTWFyZ2luLFxyXG4gICAgICAgIGNvbnRlbnRZU3BhY2luZzogMCxcclxuICAgICAgICB0aXRsZU5vZGU6IG5ldyBUZXh0KCB0aXRsZVN0cmluZ1Byb3BlcnR5LCB7XHJcbiAgICAgICAgICBmb250OiBHYXNQcm9wZXJ0aWVzQ29uc3RhbnRzLlRJVExFX0ZPTlQsXHJcbiAgICAgICAgICBmaWxsOiBHYXNQcm9wZXJ0aWVzQ29sb3JzLnRleHRGaWxsUHJvcGVydHlcclxuICAgICAgICB9IClcclxuICAgICAgfSwgcHJvdmlkZWRPcHRpb25zICk7XHJcblxyXG4gICAgLy8gTGltaXQgd2lkdGggb2YgdGl0bGUsIG11bHRpcGxpZXIgZGV0ZXJtaW5lZCBlbXBpcmljYWxseVxyXG4gICAgb3B0aW9ucy50aXRsZU5vZGUubWF4V2lkdGggPSAwLjc1ICogb3B0aW9ucy5maXhlZFdpZHRoO1xyXG5cclxuICAgIGNvbnN0IGhpc3RvZ3JhbU5vZGUgPSBjcmVhdGVIaXN0b2dyYW1Ob2RlKCBvcHRpb25zLnRhbmRlbS5jcmVhdGVUYW5kZW0oICdoaXN0b2dyYW1Ob2RlJyApICk7XHJcblxyXG4gICAgLy8gQ2hlY2tib3hlc1xyXG4gICAgY29uc3QgY2hlY2tib3hlcyA9IG5ldyBIQm94KCB7XHJcbiAgICAgIGNoaWxkcmVuOiBbXHJcbiAgICAgICAgU3BlY2llc0hpc3RvZ3JhbUNoZWNrYm94LmNyZWF0ZUhlYXZ5UGFydGljbGVzQ2hlY2tib3goIGhpc3RvZ3JhbU5vZGUuaGVhdnlQbG90VmlzaWJsZVByb3BlcnR5LCBtb2RlbFZpZXdUcmFuc2Zvcm0sIHtcclxuICAgICAgICAgIHRhbmRlbTogb3B0aW9ucy50YW5kZW0uY3JlYXRlVGFuZGVtKCAnaGVhdnlQYXJ0aWNsZXNDaGVja2JveCcgKVxyXG4gICAgICAgIH0gKSxcclxuICAgICAgICBTcGVjaWVzSGlzdG9ncmFtQ2hlY2tib3guY3JlYXRlTGlnaHRQYXJ0aWNsZXNDaGVja2JveCggaGlzdG9ncmFtTm9kZS5saWdodFBsb3RWaXNpYmxlUHJvcGVydHksIG1vZGVsVmlld1RyYW5zZm9ybSwge1xyXG4gICAgICAgICAgdGFuZGVtOiBvcHRpb25zLnRhbmRlbS5jcmVhdGVUYW5kZW0oICdsaWdodFBhcnRpY2xlc0NoZWNrYm94JyApXHJcbiAgICAgICAgfSApXHJcbiAgICAgIF0sXHJcbiAgICAgIGFsaWduOiAnY2VudGVyJyxcclxuICAgICAgc3BhY2luZzogMjVcclxuICAgIH0gKTtcclxuXHJcbiAgICBjb25zdCBjb250ZW50V2lkdGggPSBvcHRpb25zLmZpeGVkV2lkdGggLSAoIDIgKiBvcHRpb25zLmNvbnRlbnRYTWFyZ2luICk7XHJcblxyXG4gICAgLy8gQ2hlY2tib3hlcyBjZW50ZXJlZCBiZWxvdyBoaXN0b2dyYW1cclxuICAgIGNvbnN0IGNvbnRlbnQgPSBuZXcgVkJveCgge1xyXG4gICAgICBwcmVmZXJyZWRXaWR0aDogY29udGVudFdpZHRoLFxyXG4gICAgICB3aWR0aFNpemFibGU6IGZhbHNlLCAvLyBzbyB0aGF0IHdpZHRoIHdpbGwgcmVtYWluIHByZWZlcnJlZFdpZHRoXHJcbiAgICAgIGFsaWduOiAnY2VudGVyJyxcclxuICAgICAgc3BhY2luZzogMTAsXHJcbiAgICAgIGNoaWxkcmVuOiBbIGhpc3RvZ3JhbU5vZGUsIGNoZWNrYm94ZXMgXVxyXG4gICAgfSApO1xyXG5cclxuICAgIHN1cGVyKCBjb250ZW50LCBvcHRpb25zICk7XHJcblxyXG4gICAgdGhpcy5oaXN0b2dyYW1Ob2RlID0gaGlzdG9ncmFtTm9kZTtcclxuXHJcbiAgICAvLyBEaXNhYmxlIHVwZGF0ZXMgb2YgdGhlIGhpc3RvZ3JhbSB3aGVuIHRoZSBhY2NvcmRpb24gYm94IGlzIGNvbGxhcHNlZC5cclxuICAgIHRoaXMuZXhwYW5kZWRQcm9wZXJ0eS5saW5rKCBleHBhbmRlZCA9PiB7XHJcbiAgICAgIGhpc3RvZ3JhbU5vZGUudXBkYXRlRW5hYmxlZFByb3BlcnR5LnZhbHVlID0gZXhwYW5kZWQ7XHJcbiAgICB9ICk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgb3ZlcnJpZGUgZGlzcG9zZSgpOiB2b2lkIHtcclxuICAgIGFzc2VydCAmJiBhc3NlcnQoIGZhbHNlLCAnZGlzcG9zZSBpcyBub3Qgc3VwcG9ydGVkLCBleGlzdHMgZm9yIHRoZSBsaWZldGltZSBvZiB0aGUgc2ltJyApO1xyXG4gICAgc3VwZXIuZGlzcG9zZSgpO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIG92ZXJyaWRlIHJlc2V0KCk6IHZvaWQge1xyXG4gICAgdGhpcy5oaXN0b2dyYW1Ob2RlLnJlc2V0KCk7XHJcbiAgICBzdXBlci5yZXNldCgpO1xyXG4gIH1cclxufVxyXG5cclxuZ2FzUHJvcGVydGllcy5yZWdpc3RlciggJ0VuZXJneUFjY29yZGlvbkJveCcsIEVuZXJneUFjY29yZGlvbkJveCApOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUdBLFNBQVNBLFVBQVUsUUFBUSx1Q0FBdUM7QUFHbEUsU0FBU0MsSUFBSSxFQUFFQyxJQUFJLEVBQUVDLElBQUksUUFBUSxtQ0FBbUM7QUFDcEUsT0FBT0MsWUFBWSxNQUErQixvQ0FBb0M7QUFFdEYsT0FBT0MsbUJBQW1CLE1BQU0scUNBQXFDO0FBQ3JFLE9BQU9DLHNCQUFzQixNQUFNLHdDQUF3QztBQUMzRSxPQUFPQyxhQUFhLE1BQU0sd0JBQXdCO0FB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