// Copyright 2019-2022, University of Colorado Boulder

/**
 * GasPropertiesSpinner is a specialization of NumberSpinner for this sim, with options and color profiling.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import Property from '../../../../axon/js/Property.js';
import optionize from '../../../../phet-core/js/optionize.js';
import NumberSpinner from '../../../../sun/js/NumberSpinner.js';
import GasPropertiesConstants from '../../common/GasPropertiesConstants.js';
import gasProperties from '../../gasProperties.js';
export default class GasPropertiesSpinner extends NumberSpinner {
  constructor(numberProperty, providedOptions) {
    const options = optionize()({
      // NumberSpinnerOptions
      numberDisplayOptions: {
        decimalPlaces: 0,
        xMargin: 8,
        yMargin: 6,
        textOptions: {
          font: GasPropertiesConstants.CONTROL_FONT
        }
      },
      touchAreaXDilation: 15,
      touchAreaYDilation: 15
    }, providedOptions);
    super(numberProperty, new Property(numberProperty.range), options);
  }
  dispose() {
    assert && assert(false, 'dispose is not supported, exists for the lifetime of the sim');
    super.dispose();
  }
}
gasProperties.register('GasPropertiesSpinner', GasPropertiesSpinner);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQcm9wZXJ0eSIsIm9wdGlvbml6ZSIsIk51bWJlclNwaW5uZXIiLCJHYXNQcm9wZXJ0aWVzQ29uc3RhbnRzIiwiZ2FzUHJvcGVydGllcyIsIkdhc1Byb3BlcnRpZXNTcGlubmVyIiwiY29uc3RydWN0b3IiLCJudW1iZXJQcm9wZXJ0eSIsInByb3ZpZGVkT3B0aW9ucyIsIm9wdGlvbnMiLCJudW1iZXJEaXNwbGF5T3B0aW9ucyIsImRlY2ltYWxQbGFjZXMiLCJ4TWFyZ2luIiwieU1hcmdpbiIsInRleHRPcHRpb25zIiwiZm9udCIsIkNPTlRST0xfRk9OVCIsInRvdWNoQXJlYVhEaWxhdGlvbiIsInRvdWNoQXJlYVlEaWxhdGlvbiIsInJhbmdlIiwiZGlzcG9zZSIsImFzc2VydCIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiR2FzUHJvcGVydGllc1NwaW5uZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTktMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogR2FzUHJvcGVydGllc1NwaW5uZXIgaXMgYSBzcGVjaWFsaXphdGlvbiBvZiBOdW1iZXJTcGlubmVyIGZvciB0aGlzIHNpbSwgd2l0aCBvcHRpb25zIGFuZCBjb2xvciBwcm9maWxpbmcuXHJcbiAqXHJcbiAqIEBhdXRob3IgQ2hyaXMgTWFsbGV5IChQaXhlbFpvb20sIEluYy4pXHJcbiAqL1xyXG5cclxuaW1wb3J0IE51bWJlclByb3BlcnR5IGZyb20gJy4uLy4uLy4uLy4uL2F4b24vanMvTnVtYmVyUHJvcGVydHkuanMnO1xyXG5pbXBvcnQgUHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vLi4vYXhvbi9qcy9Qcm9wZXJ0eS5qcyc7XHJcbmltcG9ydCBvcHRpb25pemUsIHsgRW1wdHlTZWxmT3B0aW9ucyB9IGZyb20gJy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy9vcHRpb25pemUuanMnO1xyXG5pbXBvcnQgUGlja1JlcXVpcmVkIGZyb20gJy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy90eXBlcy9QaWNrUmVxdWlyZWQuanMnO1xyXG5pbXBvcnQgTnVtYmVyU3Bpbm5lciwgeyBOdW1iZXJTcGlubmVyT3B0aW9ucyB9IGZyb20gJy4uLy4uLy4uLy4uL3N1bi9qcy9OdW1iZXJTcGlubmVyLmpzJztcclxuaW1wb3J0IEdhc1Byb3BlcnRpZXNDb25zdGFudHMgZnJvbSAnLi4vLi4vY29tbW9uL0dhc1Byb3BlcnRpZXNDb25zdGFudHMuanMnO1xyXG5pbXBvcnQgZ2FzUHJvcGVydGllcyBmcm9tICcuLi8uLi9nYXNQcm9wZXJ0aWVzLmpzJztcclxuXHJcbnR5cGUgU2VsZk9wdGlvbnMgPSBFbXB0eVNlbGZPcHRpb25zO1xyXG5cclxuZXhwb3J0IHR5cGUgR2FzUHJvcGVydGllc1NwaW5uZXJPcHRpb25zID0gU2VsZk9wdGlvbnMgJiBOdW1iZXJTcGlubmVyT3B0aW9ucyAmIFBpY2tSZXF1aXJlZDxOdW1iZXJTcGlubmVyT3B0aW9ucywgJ3RhbmRlbSc+O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2FzUHJvcGVydGllc1NwaW5uZXIgZXh0ZW5kcyBOdW1iZXJTcGlubmVyIHtcclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKCBudW1iZXJQcm9wZXJ0eTogTnVtYmVyUHJvcGVydHksIHByb3ZpZGVkT3B0aW9uczogR2FzUHJvcGVydGllc1NwaW5uZXJPcHRpb25zICkge1xyXG5cclxuICAgIGNvbnN0IG9wdGlvbnMgPSBvcHRpb25pemU8R2FzUHJvcGVydGllc1NwaW5uZXJPcHRpb25zLCBTZWxmT3B0aW9ucywgTnVtYmVyU3Bpbm5lck9wdGlvbnM+KCkoIHtcclxuXHJcbiAgICAgIC8vIE51bWJlclNwaW5uZXJPcHRpb25zXHJcbiAgICAgIG51bWJlckRpc3BsYXlPcHRpb25zOiB7XHJcbiAgICAgICAgZGVjaW1hbFBsYWNlczogMCxcclxuICAgICAgICB4TWFyZ2luOiA4LFxyXG4gICAgICAgIHlNYXJnaW46IDYsXHJcbiAgICAgICAgdGV4dE9wdGlvbnM6IHtcclxuICAgICAgICAgIGZvbnQ6IEdhc1Byb3BlcnRpZXNDb25zdGFudHMuQ09OVFJPTF9GT05UXHJcbiAgICAgICAgfVxyXG4gICAgICB9LFxyXG4gICAgICB0b3VjaEFyZWFYRGlsYXRpb246IDE1LFxyXG4gICAgICB0b3VjaEFyZWFZRGlsYXRpb246IDE1XHJcbiAgICB9LCBwcm92aWRlZE9wdGlvbnMgKTtcclxuXHJcbiAgICBzdXBlciggbnVtYmVyUHJvcGVydHksIG5ldyBQcm9wZXJ0eSggbnVtYmVyUHJvcGVydHkucmFuZ2UgKSwgb3B0aW9ucyApO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIG92ZXJyaWRlIGRpc3Bvc2UoKTogdm9pZCB7XHJcbiAgICBhc3NlcnQgJiYgYXNzZXJ0KCBmYWxzZSwgJ2Rpc3Bvc2UgaXMgbm90IHN1cHBvcnRlZCwgZXhpc3RzIGZvciB0aGUgbGlmZXRpbWUgb2YgdGhlIHNpbScgKTtcclxuICAgIHN1cGVyLmRpc3Bvc2UoKTtcclxuICB9XHJcbn1cclxuXHJcbmdhc1Byb3BlcnRpZXMucmVnaXN0ZXIoICdHYXNQcm9wZXJ0aWVzU3Bpbm5lcicsIEdhc1Byb3BlcnRpZXNTcGlubmVyICk7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUdBLE9BQU9BLFFBQVEsTUFBTSxpQ0FBaUM7QUFDdEQsT0FBT0MsU0FBUyxNQUE0Qix1Q0FBdUM7QUFFbkYsT0FBT0MsYUFBYSxNQUFnQyxxQ0FBcUM7QUFDekYsT0FBT0Msc0JBQXNCLE1BQU0sd0NBQXdDO0FBQzNFLE9BQU9DLGFBQWEsTUFBTSx3QkFBd0I7QUFNbEQsZUFBZSxNQUFNQyxvQkFBb0IsU0FBU0gsYUFBYSxDQUFDO0VBRXZESSxXQUFXQSxDQUFFQyxjQUE4QixFQUFFQyxlQUE0QyxFQUFHO0lBRWpHLE1BQU1DLE9BQU8sR0FBR1IsU0FBUyxDQUFpRSxDQUFDLENBQUU7TUFFM0Y7TUFDQVMsb0JBQW9CLEVBQUU7UUFDcEJDLGFBQWEsRUFBRSxDQUFDO1FBQ2hCQyxPQUFPLEVBQUUsQ0FBQztRQUNWQyxPQUFPLEVBQUUsQ0FBQztRQUNWQyxXQUFXLEVBQUU7VUFDWEMsSUFBSSxFQUFFWixzQkFBc0IsQ0FBQ2E7UUFDL0I7TUFDRixDQUFDO01BQ0RDLGtCQUFrQixFQUFFLEVBQUU7TUFDdEJDLGtCQUFrQixFQUFFO0lBQ3RCLENBQUMsRUFBRVYsZUFBZ0IsQ0FBQztJQUVwQixLQUFLLENBQUVELGNBQWMsRUFBRSxJQUFJUCxRQUFRLENBQUVPLGNBQWMsQ0FBQ1ksS0FBTSxDQUFDLEVBQUVWLE9BQVEsQ0FBQztFQUN4RTtFQUVnQlcsT0FBT0EsQ0FBQSxFQUFTO0lBQzlCQyxNQUFNLElBQUlBLE1BQU0sQ0FBRSxLQUFLLEVBQUUsOERBQStELENBQUM7SUFDekYsS0FBSyxDQUFDRCxPQUFPLENBQUMsQ0FBQztFQUNqQjtBQUNGO0FBRUFoQixhQUFhLENBQUNrQixRQUFRLENBQUUsc0JBQXNCLEVBQUVqQixvQkFBcUIsQ0FBQyJ9