// Copyright 2019-2022, University of Colorado Boulder

/**
 * DataAccordionBox is the 'Data' accordion box in the 'Diffusion' screen.  It displays data for the left and right
 * sides of the container.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import { optionize4 } from '../../../../phet-core/js/optionize.js';
import { HBox, Text, VSeparator } from '../../../../scenery/js/imports.js';
import AccordionBox from '../../../../sun/js/AccordionBox.js';
import GasPropertiesColors from '../../common/GasPropertiesColors.js';
import GasPropertiesConstants from '../../common/GasPropertiesConstants.js';
import gasProperties from '../../gasProperties.js';
import GasPropertiesStrings from '../../GasPropertiesStrings.js';
import DiffusionDataNode from './DiffusionDataNode.js';
export default class DataAccordionBox extends AccordionBox {
  constructor(leftData, rightData, modelViewTransform, providedOptions) {
    const options = optionize4()({}, GasPropertiesConstants.ACCORDION_BOX_OPTIONS, {
      // AccordionBoxOptions
      contentYSpacing: 0,
      titleNode: new Text(GasPropertiesStrings.dataStringProperty, {
        font: GasPropertiesConstants.TITLE_FONT,
        fill: GasPropertiesColors.textFillProperty,
        maxWidth: 200 // determined empirically
      })
    }, providedOptions);

    // Data for left side of the container
    const leftDataNode = new DiffusionDataNode(leftData, modelViewTransform, {
      tandem: options.tandem.createTandem('leftDataNode')
    });

    // Data for right side of container
    const rightDataNode = new DiffusionDataNode(rightData, modelViewTransform, {
      tandem: options.tandem.createTandem('rightDataNode')
    });

    // Vertical separator, analogous to the container's divider
    const separator = new VSeparator({
      lineWidth: 2,
      stroke: GasPropertiesColors.dividerColorProperty
    });
    const contentNode = new HBox({
      children: [leftDataNode, separator, rightDataNode],
      spacing: 25
    });
    super(contentNode, options);
  }
  dispose() {
    assert && assert(false, 'dispose is not supported, exists for the lifetime of the sim');
    super.dispose();
  }
}
gasProperties.register('DataAccordionBox', DataAccordionBox);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJvcHRpb25pemU0IiwiSEJveCIsIlRleHQiLCJWU2VwYXJhdG9yIiwiQWNjb3JkaW9uQm94IiwiR2FzUHJvcGVydGllc0NvbG9ycyIsIkdhc1Byb3BlcnRpZXNDb25zdGFudHMiLCJnYXNQcm9wZXJ0aWVzIiwiR2FzUHJvcGVydGllc1N0cmluZ3MiLCJEaWZmdXNpb25EYXRhTm9kZSIsIkRhdGFBY2NvcmRpb25Cb3giLCJjb25zdHJ1Y3RvciIsImxlZnREYXRhIiwicmlnaHREYXRhIiwibW9kZWxWaWV3VHJhbnNmb3JtIiwicHJvdmlkZWRPcHRpb25zIiwib3B0aW9ucyIsIkFDQ09SRElPTl9CT1hfT1BUSU9OUyIsImNvbnRlbnRZU3BhY2luZyIsInRpdGxlTm9kZSIsImRhdGFTdHJpbmdQcm9wZXJ0eSIsImZvbnQiLCJUSVRMRV9GT05UIiwiZmlsbCIsInRleHRGaWxsUHJvcGVydHkiLCJtYXhXaWR0aCIsImxlZnREYXRhTm9kZSIsInRhbmRlbSIsImNyZWF0ZVRhbmRlbSIsInJpZ2h0RGF0YU5vZGUiLCJzZXBhcmF0b3IiLCJsaW5lV2lkdGgiLCJzdHJva2UiLCJkaXZpZGVyQ29sb3JQcm9wZXJ0eSIsImNvbnRlbnROb2RlIiwiY2hpbGRyZW4iLCJzcGFjaW5nIiwiZGlzcG9zZSIsImFzc2VydCIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiRGF0YUFjY29yZGlvbkJveC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxOS0yMDIyLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBEYXRhQWNjb3JkaW9uQm94IGlzIHRoZSAnRGF0YScgYWNjb3JkaW9uIGJveCBpbiB0aGUgJ0RpZmZ1c2lvbicgc2NyZWVuLiAgSXQgZGlzcGxheXMgZGF0YSBmb3IgdGhlIGxlZnQgYW5kIHJpZ2h0XHJcbiAqIHNpZGVzIG9mIHRoZSBjb250YWluZXIuXHJcbiAqXHJcbiAqIEBhdXRob3IgQ2hyaXMgTWFsbGV5IChQaXhlbFpvb20sIEluYy4pXHJcbiAqL1xyXG5cclxuaW1wb3J0IHsgRW1wdHlTZWxmT3B0aW9ucywgb3B0aW9uaXplNCB9IGZyb20gJy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy9vcHRpb25pemUuanMnO1xyXG5pbXBvcnQgUGlja1JlcXVpcmVkIGZyb20gJy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy90eXBlcy9QaWNrUmVxdWlyZWQuanMnO1xyXG5pbXBvcnQgTW9kZWxWaWV3VHJhbnNmb3JtMiBmcm9tICcuLi8uLi8uLi8uLi9waGV0Y29tbW9uL2pzL3ZpZXcvTW9kZWxWaWV3VHJhbnNmb3JtMi5qcyc7XHJcbmltcG9ydCB7IEhCb3gsIFRleHQsIFZTZXBhcmF0b3IgfSBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgQWNjb3JkaW9uQm94LCB7IEFjY29yZGlvbkJveE9wdGlvbnMgfSBmcm9tICcuLi8uLi8uLi8uLi9zdW4vanMvQWNjb3JkaW9uQm94LmpzJztcclxuaW1wb3J0IEdhc1Byb3BlcnRpZXNDb2xvcnMgZnJvbSAnLi4vLi4vY29tbW9uL0dhc1Byb3BlcnRpZXNDb2xvcnMuanMnO1xyXG5pbXBvcnQgR2FzUHJvcGVydGllc0NvbnN0YW50cyBmcm9tICcuLi8uLi9jb21tb24vR2FzUHJvcGVydGllc0NvbnN0YW50cy5qcyc7XHJcbmltcG9ydCBnYXNQcm9wZXJ0aWVzIGZyb20gJy4uLy4uL2dhc1Byb3BlcnRpZXMuanMnO1xyXG5pbXBvcnQgR2FzUHJvcGVydGllc1N0cmluZ3MgZnJvbSAnLi4vLi4vR2FzUHJvcGVydGllc1N0cmluZ3MuanMnO1xyXG5pbXBvcnQgRGlmZnVzaW9uRGF0YSBmcm9tICcuLi9tb2RlbC9EaWZmdXNpb25EYXRhLmpzJztcclxuaW1wb3J0IERpZmZ1c2lvbkRhdGFOb2RlIGZyb20gJy4vRGlmZnVzaW9uRGF0YU5vZGUuanMnO1xyXG5cclxudHlwZSBTZWxmT3B0aW9ucyA9IEVtcHR5U2VsZk9wdGlvbnM7XHJcblxyXG50eXBlIERhdGFBY2NvcmRpb25Cb3hPcHRpb25zID0gU2VsZk9wdGlvbnMgJiBQaWNrUmVxdWlyZWQ8QWNjb3JkaW9uQm94T3B0aW9ucywgJ3RhbmRlbScgfCAnZXhwYW5kZWRQcm9wZXJ0eSc+O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRGF0YUFjY29yZGlvbkJveCBleHRlbmRzIEFjY29yZGlvbkJveCB7XHJcblxyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvciggbGVmdERhdGE6IERpZmZ1c2lvbkRhdGEsIHJpZ2h0RGF0YTogRGlmZnVzaW9uRGF0YSwgbW9kZWxWaWV3VHJhbnNmb3JtOiBNb2RlbFZpZXdUcmFuc2Zvcm0yLFxyXG4gICAgICAgICAgICAgICAgICAgICAgcHJvdmlkZWRPcHRpb25zOiBEYXRhQWNjb3JkaW9uQm94T3B0aW9ucyApIHtcclxuXHJcbiAgICBjb25zdCBvcHRpb25zID0gb3B0aW9uaXplNDxEYXRhQWNjb3JkaW9uQm94T3B0aW9ucywgU2VsZk9wdGlvbnMsIEFjY29yZGlvbkJveE9wdGlvbnM+KCkoXHJcbiAgICAgIHt9LCBHYXNQcm9wZXJ0aWVzQ29uc3RhbnRzLkFDQ09SRElPTl9CT1hfT1BUSU9OUywge1xyXG5cclxuICAgICAgLy8gQWNjb3JkaW9uQm94T3B0aW9uc1xyXG4gICAgICBjb250ZW50WVNwYWNpbmc6IDAsXHJcbiAgICAgIHRpdGxlTm9kZTogbmV3IFRleHQoIEdhc1Byb3BlcnRpZXNTdHJpbmdzLmRhdGFTdHJpbmdQcm9wZXJ0eSwge1xyXG4gICAgICAgIGZvbnQ6IEdhc1Byb3BlcnRpZXNDb25zdGFudHMuVElUTEVfRk9OVCxcclxuICAgICAgICBmaWxsOiBHYXNQcm9wZXJ0aWVzQ29sb3JzLnRleHRGaWxsUHJvcGVydHksXHJcbiAgICAgICAgbWF4V2lkdGg6IDIwMCAvLyBkZXRlcm1pbmVkIGVtcGlyaWNhbGx5XHJcbiAgICAgIH0gKVxyXG4gICAgfSwgcHJvdmlkZWRPcHRpb25zICk7XHJcblxyXG4gICAgLy8gRGF0YSBmb3IgbGVmdCBzaWRlIG9mIHRoZSBjb250YWluZXJcclxuICAgIGNvbnN0IGxlZnREYXRhTm9kZSA9IG5ldyBEaWZmdXNpb25EYXRhTm9kZSggbGVmdERhdGEsIG1vZGVsVmlld1RyYW5zZm9ybSwge1xyXG4gICAgICB0YW5kZW06IG9wdGlvbnMudGFuZGVtLmNyZWF0ZVRhbmRlbSggJ2xlZnREYXRhTm9kZScgKVxyXG4gICAgfSApO1xyXG5cclxuICAgIC8vIERhdGEgZm9yIHJpZ2h0IHNpZGUgb2YgY29udGFpbmVyXHJcbiAgICBjb25zdCByaWdodERhdGFOb2RlID0gbmV3IERpZmZ1c2lvbkRhdGFOb2RlKCByaWdodERhdGEsIG1vZGVsVmlld1RyYW5zZm9ybSwge1xyXG4gICAgICB0YW5kZW06IG9wdGlvbnMudGFuZGVtLmNyZWF0ZVRhbmRlbSggJ3JpZ2h0RGF0YU5vZGUnIClcclxuICAgIH0gKTtcclxuXHJcbiAgICAvLyBWZXJ0aWNhbCBzZXBhcmF0b3IsIGFuYWxvZ291cyB0byB0aGUgY29udGFpbmVyJ3MgZGl2aWRlclxyXG4gICAgY29uc3Qgc2VwYXJhdG9yID0gbmV3IFZTZXBhcmF0b3IoIHtcclxuICAgICAgbGluZVdpZHRoOiAyLFxyXG4gICAgICBzdHJva2U6IEdhc1Byb3BlcnRpZXNDb2xvcnMuZGl2aWRlckNvbG9yUHJvcGVydHlcclxuICAgIH0gKTtcclxuXHJcbiAgICBjb25zdCBjb250ZW50Tm9kZSA9IG5ldyBIQm94KCB7XHJcbiAgICAgIGNoaWxkcmVuOiBbIGxlZnREYXRhTm9kZSwgc2VwYXJhdG9yLCByaWdodERhdGFOb2RlIF0sXHJcbiAgICAgIHNwYWNpbmc6IDI1XHJcbiAgICB9ICk7XHJcblxyXG4gICAgc3VwZXIoIGNvbnRlbnROb2RlLCBvcHRpb25zICk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgb3ZlcnJpZGUgZGlzcG9zZSgpOiB2b2lkIHtcclxuICAgIGFzc2VydCAmJiBhc3NlcnQoIGZhbHNlLCAnZGlzcG9zZSBpcyBub3Qgc3VwcG9ydGVkLCBleGlzdHMgZm9yIHRoZSBsaWZldGltZSBvZiB0aGUgc2ltJyApO1xyXG4gICAgc3VwZXIuZGlzcG9zZSgpO1xyXG4gIH1cclxufVxyXG5cclxuZ2FzUHJvcGVydGllcy5yZWdpc3RlciggJ0RhdGFBY2NvcmRpb25Cb3gnLCBEYXRhQWNjb3JkaW9uQm94ICk7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsU0FBMkJBLFVBQVUsUUFBUSx1Q0FBdUM7QUFHcEYsU0FBU0MsSUFBSSxFQUFFQyxJQUFJLEVBQUVDLFVBQVUsUUFBUSxtQ0FBbUM7QUFDMUUsT0FBT0MsWUFBWSxNQUErQixvQ0FBb0M7QUFDdEYsT0FBT0MsbUJBQW1CLE1BQU0scUNBQXFDO0FBQ3JFLE9BQU9DLHNCQUFzQixNQUFNLHdDQUF3QztBQUMzRSxPQUFPQyxhQUFhLE1BQU0sd0JBQXdCO0FBQ2xELE9BQU9DLG9CQUFvQixNQUFNLCtCQUErQjtBQUVoRSxPQUFPQyxpQkFBaUIsTUFBTSx3QkFBd0I7QUFNdEQsZUFBZSxNQUFNQyxnQkFBZ0IsU0FBU04sWUFBWSxDQUFDO0VBRWxETyxXQUFXQSxDQUFFQyxRQUF1QixFQUFFQyxTQUF3QixFQUFFQyxrQkFBdUMsRUFDMUZDLGVBQXdDLEVBQUc7SUFFN0QsTUFBTUMsT0FBTyxHQUFHaEIsVUFBVSxDQUE0RCxDQUFDLENBQ3JGLENBQUMsQ0FBQyxFQUFFTSxzQkFBc0IsQ0FBQ1cscUJBQXFCLEVBQUU7TUFFbEQ7TUFDQUMsZUFBZSxFQUFFLENBQUM7TUFDbEJDLFNBQVMsRUFBRSxJQUFJakIsSUFBSSxDQUFFTSxvQkFBb0IsQ0FBQ1ksa0JBQWtCLEVBQUU7UUFDNURDLElBQUksRUFBRWYsc0JBQXNCLENBQUNnQixVQUFVO1FBQ3ZDQyxJQUFJLEVBQUVsQixtQkFBbUIsQ0FBQ21CLGdCQUFnQjtRQUMxQ0MsUUFBUSxFQUFFLEdBQUcsQ0FBQztNQUNoQixDQUFFO0lBQ0osQ0FBQyxFQUFFVixlQUFnQixDQUFDOztJQUVwQjtJQUNBLE1BQU1XLFlBQVksR0FBRyxJQUFJakIsaUJBQWlCLENBQUVHLFFBQVEsRUFBRUUsa0JBQWtCLEVBQUU7TUFDeEVhLE1BQU0sRUFBRVgsT0FBTyxDQUFDVyxNQUFNLENBQUNDLFlBQVksQ0FBRSxjQUFlO0lBQ3RELENBQUUsQ0FBQzs7SUFFSDtJQUNBLE1BQU1DLGFBQWEsR0FBRyxJQUFJcEIsaUJBQWlCLENBQUVJLFNBQVMsRUFBRUMsa0JBQWtCLEVBQUU7TUFDMUVhLE1BQU0sRUFBRVgsT0FBTyxDQUFDVyxNQUFNLENBQUNDLFlBQVksQ0FBRSxlQUFnQjtJQUN2RCxDQUFFLENBQUM7O0lBRUg7SUFDQSxNQUFNRSxTQUFTLEdBQUcsSUFBSTNCLFVBQVUsQ0FBRTtNQUNoQzRCLFNBQVMsRUFBRSxDQUFDO01BQ1pDLE1BQU0sRUFBRTNCLG1CQUFtQixDQUFDNEI7SUFDOUIsQ0FBRSxDQUFDO0lBRUgsTUFBTUMsV0FBVyxHQUFHLElBQUlqQyxJQUFJLENBQUU7TUFDNUJrQyxRQUFRLEVBQUUsQ0FBRVQsWUFBWSxFQUFFSSxTQUFTLEVBQUVELGFBQWEsQ0FBRTtNQUNwRE8sT0FBTyxFQUFFO0lBQ1gsQ0FBRSxDQUFDO0lBRUgsS0FBSyxDQUFFRixXQUFXLEVBQUVsQixPQUFRLENBQUM7RUFDL0I7RUFFZ0JxQixPQUFPQSxDQUFBLEVBQVM7SUFDOUJDLE1BQU0sSUFBSUEsTUFBTSxDQUFFLEtBQUssRUFBRSw4REFBK0QsQ0FBQztJQUN6RixLQUFLLENBQUNELE9BQU8sQ0FBQyxDQUFDO0VBQ2pCO0FBQ0Y7QUFFQTlCLGFBQWEsQ0FBQ2dDLFFBQVEsQ0FBRSxrQkFBa0IsRUFBRTdCLGdCQUFpQixDQUFDIn0=