// Copyright 2018-2022, University of Colorado Boulder

/**
 * ExploreScreenView is the view for the 'Explore' screen.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import { VBox } from '../../../../scenery/js/imports.js';
import GasPropertiesConstants from '../../common/GasPropertiesConstants.js';
import IdealGasLawScreenView from '../../common/view/IdealGasLawScreenView.js';
import ParticlesAccordionBox from '../../common/view/ParticlesAccordionBox.js';
import gasProperties from '../../gasProperties.js';
import ExploreToolsPanel from './ExploreToolsPanel.js';
import ExploreViewProperties from './ExploreViewProperties.js';
export default class ExploreScreenView extends IdealGasLawScreenView {
  constructor(model, tandem) {
    // view-specific Properties
    const viewProperties = new ExploreViewProperties(tandem.createTandem('viewProperties'));
    super(model, viewProperties.particleTypeProperty, viewProperties.widthVisibleProperty, tandem);
    const collisionCounter = model.collisionCounter;
    assert && assert(collisionCounter);

    // Panel at upper right
    const toolsPanel = new ExploreToolsPanel(viewProperties.widthVisibleProperty, model.stopwatch.isVisibleProperty, collisionCounter.visibleProperty, {
      fixedWidth: GasPropertiesConstants.RIGHT_PANEL_WIDTH,
      tandem: tandem.createTandem('toolsPanel')
    });

    // Particles accordion box
    const particlesAccordionBox = new ParticlesAccordionBox(model.particleSystem.numberOfHeavyParticlesProperty, model.particleSystem.numberOfLightParticlesProperty, model.modelViewTransform, {
      fixedWidth: GasPropertiesConstants.RIGHT_PANEL_WIDTH,
      expandedProperty: viewProperties.particlesExpandedProperty,
      tandem: tandem.createTandem('particlesAccordionBox')
    });

    // Rendering order. Everything we add should be behind what is created by super.
    const vBox = new VBox({
      align: 'left',
      spacing: 15,
      children: [toolsPanel, particlesAccordionBox],
      right: this.layoutBounds.right - GasPropertiesConstants.SCREEN_VIEW_X_MARGIN,
      top: this.layoutBounds.top + GasPropertiesConstants.SCREEN_VIEW_Y_MARGIN
    });
    this.addChild(vBox);
    vBox.moveToBack();
    this.viewProperties = viewProperties;
  }
  dispose() {
    assert && assert(false, 'dispose is not supported, exists for the lifetime of the sim');
    super.dispose();
  }
  reset() {
    super.reset();
    this.viewProperties.reset();
  }
}
gasProperties.register('ExploreScreenView', ExploreScreenView);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJWQm94IiwiR2FzUHJvcGVydGllc0NvbnN0YW50cyIsIklkZWFsR2FzTGF3U2NyZWVuVmlldyIsIlBhcnRpY2xlc0FjY29yZGlvbkJveCIsImdhc1Byb3BlcnRpZXMiLCJFeHBsb3JlVG9vbHNQYW5lbCIsIkV4cGxvcmVWaWV3UHJvcGVydGllcyIsIkV4cGxvcmVTY3JlZW5WaWV3IiwiY29uc3RydWN0b3IiLCJtb2RlbCIsInRhbmRlbSIsInZpZXdQcm9wZXJ0aWVzIiwiY3JlYXRlVGFuZGVtIiwicGFydGljbGVUeXBlUHJvcGVydHkiLCJ3aWR0aFZpc2libGVQcm9wZXJ0eSIsImNvbGxpc2lvbkNvdW50ZXIiLCJhc3NlcnQiLCJ0b29sc1BhbmVsIiwic3RvcHdhdGNoIiwiaXNWaXNpYmxlUHJvcGVydHkiLCJ2aXNpYmxlUHJvcGVydHkiLCJmaXhlZFdpZHRoIiwiUklHSFRfUEFORUxfV0lEVEgiLCJwYXJ0aWNsZXNBY2NvcmRpb25Cb3giLCJwYXJ0aWNsZVN5c3RlbSIsIm51bWJlck9mSGVhdnlQYXJ0aWNsZXNQcm9wZXJ0eSIsIm51bWJlck9mTGlnaHRQYXJ0aWNsZXNQcm9wZXJ0eSIsIm1vZGVsVmlld1RyYW5zZm9ybSIsImV4cGFuZGVkUHJvcGVydHkiLCJwYXJ0aWNsZXNFeHBhbmRlZFByb3BlcnR5IiwidkJveCIsImFsaWduIiwic3BhY2luZyIsImNoaWxkcmVuIiwicmlnaHQiLCJsYXlvdXRCb3VuZHMiLCJTQ1JFRU5fVklFV19YX01BUkdJTiIsInRvcCIsIlNDUkVFTl9WSUVXX1lfTUFSR0lOIiwiYWRkQ2hpbGQiLCJtb3ZlVG9CYWNrIiwiZGlzcG9zZSIsInJlc2V0IiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJFeHBsb3JlU2NyZWVuVmlldy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxOC0yMDIyLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBFeHBsb3JlU2NyZWVuVmlldyBpcyB0aGUgdmlldyBmb3IgdGhlICdFeHBsb3JlJyBzY3JlZW4uXHJcbiAqXHJcbiAqIEBhdXRob3IgQ2hyaXMgTWFsbGV5IChQaXhlbFpvb20sIEluYy4pXHJcbiAqL1xyXG5cclxuaW1wb3J0IHsgVkJveCB9IGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XHJcbmltcG9ydCBUYW5kZW0gZnJvbSAnLi4vLi4vLi4vLi4vdGFuZGVtL2pzL1RhbmRlbS5qcyc7XHJcbmltcG9ydCBHYXNQcm9wZXJ0aWVzQ29uc3RhbnRzIGZyb20gJy4uLy4uL2NvbW1vbi9HYXNQcm9wZXJ0aWVzQ29uc3RhbnRzLmpzJztcclxuaW1wb3J0IElkZWFsR2FzTGF3U2NyZWVuVmlldyBmcm9tICcuLi8uLi9jb21tb24vdmlldy9JZGVhbEdhc0xhd1NjcmVlblZpZXcuanMnO1xyXG5pbXBvcnQgUGFydGljbGVzQWNjb3JkaW9uQm94IGZyb20gJy4uLy4uL2NvbW1vbi92aWV3L1BhcnRpY2xlc0FjY29yZGlvbkJveC5qcyc7XHJcbmltcG9ydCBnYXNQcm9wZXJ0aWVzIGZyb20gJy4uLy4uL2dhc1Byb3BlcnRpZXMuanMnO1xyXG5pbXBvcnQgRXhwbG9yZU1vZGVsIGZyb20gJy4uL21vZGVsL0V4cGxvcmVNb2RlbC5qcyc7XHJcbmltcG9ydCBFeHBsb3JlVG9vbHNQYW5lbCBmcm9tICcuL0V4cGxvcmVUb29sc1BhbmVsLmpzJztcclxuaW1wb3J0IEV4cGxvcmVWaWV3UHJvcGVydGllcyBmcm9tICcuL0V4cGxvcmVWaWV3UHJvcGVydGllcy5qcyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFeHBsb3JlU2NyZWVuVmlldyBleHRlbmRzIElkZWFsR2FzTGF3U2NyZWVuVmlldyB7XHJcblxyXG4gIHByaXZhdGUgcmVhZG9ubHkgdmlld1Byb3BlcnRpZXM6IEV4cGxvcmVWaWV3UHJvcGVydGllcztcclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKCBtb2RlbDogRXhwbG9yZU1vZGVsLCB0YW5kZW06IFRhbmRlbSApIHtcclxuXHJcbiAgICAvLyB2aWV3LXNwZWNpZmljIFByb3BlcnRpZXNcclxuICAgIGNvbnN0IHZpZXdQcm9wZXJ0aWVzID0gbmV3IEV4cGxvcmVWaWV3UHJvcGVydGllcyggdGFuZGVtLmNyZWF0ZVRhbmRlbSggJ3ZpZXdQcm9wZXJ0aWVzJyApICk7XHJcblxyXG4gICAgc3VwZXIoIG1vZGVsLCB2aWV3UHJvcGVydGllcy5wYXJ0aWNsZVR5cGVQcm9wZXJ0eSwgdmlld1Byb3BlcnRpZXMud2lkdGhWaXNpYmxlUHJvcGVydHksIHRhbmRlbSApO1xyXG5cclxuICAgIGNvbnN0IGNvbGxpc2lvbkNvdW50ZXIgPSBtb2RlbC5jb2xsaXNpb25Db3VudGVyITtcclxuICAgIGFzc2VydCAmJiBhc3NlcnQoIGNvbGxpc2lvbkNvdW50ZXIgKTtcclxuXHJcbiAgICAvLyBQYW5lbCBhdCB1cHBlciByaWdodFxyXG4gICAgY29uc3QgdG9vbHNQYW5lbCA9IG5ldyBFeHBsb3JlVG9vbHNQYW5lbChcclxuICAgICAgdmlld1Byb3BlcnRpZXMud2lkdGhWaXNpYmxlUHJvcGVydHksXHJcbiAgICAgIG1vZGVsLnN0b3B3YXRjaC5pc1Zpc2libGVQcm9wZXJ0eSxcclxuICAgICAgY29sbGlzaW9uQ291bnRlci52aXNpYmxlUHJvcGVydHksIHtcclxuICAgICAgICBmaXhlZFdpZHRoOiBHYXNQcm9wZXJ0aWVzQ29uc3RhbnRzLlJJR0hUX1BBTkVMX1dJRFRILFxyXG4gICAgICAgIHRhbmRlbTogdGFuZGVtLmNyZWF0ZVRhbmRlbSggJ3Rvb2xzUGFuZWwnIClcclxuICAgICAgfSApO1xyXG5cclxuICAgIC8vIFBhcnRpY2xlcyBhY2NvcmRpb24gYm94XHJcbiAgICBjb25zdCBwYXJ0aWNsZXNBY2NvcmRpb25Cb3ggPSBuZXcgUGFydGljbGVzQWNjb3JkaW9uQm94KFxyXG4gICAgICBtb2RlbC5wYXJ0aWNsZVN5c3RlbS5udW1iZXJPZkhlYXZ5UGFydGljbGVzUHJvcGVydHksXHJcbiAgICAgIG1vZGVsLnBhcnRpY2xlU3lzdGVtLm51bWJlck9mTGlnaHRQYXJ0aWNsZXNQcm9wZXJ0eSxcclxuICAgICAgbW9kZWwubW9kZWxWaWV3VHJhbnNmb3JtLCB7XHJcbiAgICAgICAgZml4ZWRXaWR0aDogR2FzUHJvcGVydGllc0NvbnN0YW50cy5SSUdIVF9QQU5FTF9XSURUSCxcclxuICAgICAgICBleHBhbmRlZFByb3BlcnR5OiB2aWV3UHJvcGVydGllcy5wYXJ0aWNsZXNFeHBhbmRlZFByb3BlcnR5LFxyXG4gICAgICAgIHRhbmRlbTogdGFuZGVtLmNyZWF0ZVRhbmRlbSggJ3BhcnRpY2xlc0FjY29yZGlvbkJveCcgKVxyXG4gICAgICB9ICk7XHJcblxyXG4gICAgLy8gUmVuZGVyaW5nIG9yZGVyLiBFdmVyeXRoaW5nIHdlIGFkZCBzaG91bGQgYmUgYmVoaW5kIHdoYXQgaXMgY3JlYXRlZCBieSBzdXBlci5cclxuICAgIGNvbnN0IHZCb3ggPSBuZXcgVkJveCgge1xyXG4gICAgICBhbGlnbjogJ2xlZnQnLFxyXG4gICAgICBzcGFjaW5nOiAxNSxcclxuICAgICAgY2hpbGRyZW46IFsgdG9vbHNQYW5lbCwgcGFydGljbGVzQWNjb3JkaW9uQm94IF0sXHJcbiAgICAgIHJpZ2h0OiB0aGlzLmxheW91dEJvdW5kcy5yaWdodCAtIEdhc1Byb3BlcnRpZXNDb25zdGFudHMuU0NSRUVOX1ZJRVdfWF9NQVJHSU4sXHJcbiAgICAgIHRvcDogdGhpcy5sYXlvdXRCb3VuZHMudG9wICsgR2FzUHJvcGVydGllc0NvbnN0YW50cy5TQ1JFRU5fVklFV19ZX01BUkdJTlxyXG4gICAgfSApO1xyXG4gICAgdGhpcy5hZGRDaGlsZCggdkJveCApO1xyXG4gICAgdkJveC5tb3ZlVG9CYWNrKCk7XHJcblxyXG4gICAgdGhpcy52aWV3UHJvcGVydGllcyA9IHZpZXdQcm9wZXJ0aWVzO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIG92ZXJyaWRlIGRpc3Bvc2UoKTogdm9pZCB7XHJcbiAgICBhc3NlcnQgJiYgYXNzZXJ0KCBmYWxzZSwgJ2Rpc3Bvc2UgaXMgbm90IHN1cHBvcnRlZCwgZXhpc3RzIGZvciB0aGUgbGlmZXRpbWUgb2YgdGhlIHNpbScgKTtcclxuICAgIHN1cGVyLmRpc3Bvc2UoKTtcclxuICB9XHJcblxyXG4gIHByb3RlY3RlZCBvdmVycmlkZSByZXNldCgpOiB2b2lkIHtcclxuICAgIHN1cGVyLnJlc2V0KCk7XHJcbiAgICB0aGlzLnZpZXdQcm9wZXJ0aWVzLnJlc2V0KCk7XHJcbiAgfVxyXG59XHJcblxyXG5nYXNQcm9wZXJ0aWVzLnJlZ2lzdGVyKCAnRXhwbG9yZVNjcmVlblZpZXcnLCBFeHBsb3JlU2NyZWVuVmlldyApOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxTQUFTQSxJQUFJLFFBQVEsbUNBQW1DO0FBRXhELE9BQU9DLHNCQUFzQixNQUFNLHdDQUF3QztBQUMzRSxPQUFPQyxxQkFBcUIsTUFBTSw0Q0FBNEM7QUFDOUUsT0FBT0MscUJBQXFCLE1BQU0sNENBQTRDO0FBQzlFLE9BQU9DLGFBQWEsTUFBTSx3QkFBd0I7QUFFbEQsT0FBT0MsaUJBQWlCLE1BQU0sd0JBQXdCO0FBQ3RELE9BQU9DLHFCQUFxQixNQUFNLDRCQUE0QjtBQUU5RCxlQUFlLE1BQU1DLGlCQUFpQixTQUFTTCxxQkFBcUIsQ0FBQztFQUk1RE0sV0FBV0EsQ0FBRUMsS0FBbUIsRUFBRUMsTUFBYyxFQUFHO0lBRXhEO0lBQ0EsTUFBTUMsY0FBYyxHQUFHLElBQUlMLHFCQUFxQixDQUFFSSxNQUFNLENBQUNFLFlBQVksQ0FBRSxnQkFBaUIsQ0FBRSxDQUFDO0lBRTNGLEtBQUssQ0FBRUgsS0FBSyxFQUFFRSxjQUFjLENBQUNFLG9CQUFvQixFQUFFRixjQUFjLENBQUNHLG9CQUFvQixFQUFFSixNQUFPLENBQUM7SUFFaEcsTUFBTUssZ0JBQWdCLEdBQUdOLEtBQUssQ0FBQ00sZ0JBQWlCO0lBQ2hEQyxNQUFNLElBQUlBLE1BQU0sQ0FBRUQsZ0JBQWlCLENBQUM7O0lBRXBDO0lBQ0EsTUFBTUUsVUFBVSxHQUFHLElBQUlaLGlCQUFpQixDQUN0Q00sY0FBYyxDQUFDRyxvQkFBb0IsRUFDbkNMLEtBQUssQ0FBQ1MsU0FBUyxDQUFDQyxpQkFBaUIsRUFDakNKLGdCQUFnQixDQUFDSyxlQUFlLEVBQUU7TUFDaENDLFVBQVUsRUFBRXBCLHNCQUFzQixDQUFDcUIsaUJBQWlCO01BQ3BEWixNQUFNLEVBQUVBLE1BQU0sQ0FBQ0UsWUFBWSxDQUFFLFlBQWE7SUFDNUMsQ0FBRSxDQUFDOztJQUVMO0lBQ0EsTUFBTVcscUJBQXFCLEdBQUcsSUFBSXBCLHFCQUFxQixDQUNyRE0sS0FBSyxDQUFDZSxjQUFjLENBQUNDLDhCQUE4QixFQUNuRGhCLEtBQUssQ0FBQ2UsY0FBYyxDQUFDRSw4QkFBOEIsRUFDbkRqQixLQUFLLENBQUNrQixrQkFBa0IsRUFBRTtNQUN4Qk4sVUFBVSxFQUFFcEIsc0JBQXNCLENBQUNxQixpQkFBaUI7TUFDcERNLGdCQUFnQixFQUFFakIsY0FBYyxDQUFDa0IseUJBQXlCO01BQzFEbkIsTUFBTSxFQUFFQSxNQUFNLENBQUNFLFlBQVksQ0FBRSx1QkFBd0I7SUFDdkQsQ0FBRSxDQUFDOztJQUVMO0lBQ0EsTUFBTWtCLElBQUksR0FBRyxJQUFJOUIsSUFBSSxDQUFFO01BQ3JCK0IsS0FBSyxFQUFFLE1BQU07TUFDYkMsT0FBTyxFQUFFLEVBQUU7TUFDWEMsUUFBUSxFQUFFLENBQUVoQixVQUFVLEVBQUVNLHFCQUFxQixDQUFFO01BQy9DVyxLQUFLLEVBQUUsSUFBSSxDQUFDQyxZQUFZLENBQUNELEtBQUssR0FBR2pDLHNCQUFzQixDQUFDbUMsb0JBQW9CO01BQzVFQyxHQUFHLEVBQUUsSUFBSSxDQUFDRixZQUFZLENBQUNFLEdBQUcsR0FBR3BDLHNCQUFzQixDQUFDcUM7SUFDdEQsQ0FBRSxDQUFDO0lBQ0gsSUFBSSxDQUFDQyxRQUFRLENBQUVULElBQUssQ0FBQztJQUNyQkEsSUFBSSxDQUFDVSxVQUFVLENBQUMsQ0FBQztJQUVqQixJQUFJLENBQUM3QixjQUFjLEdBQUdBLGNBQWM7RUFDdEM7RUFFZ0I4QixPQUFPQSxDQUFBLEVBQVM7SUFDOUJ6QixNQUFNLElBQUlBLE1BQU0sQ0FBRSxLQUFLLEVBQUUsOERBQStELENBQUM7SUFDekYsS0FBSyxDQUFDeUIsT0FBTyxDQUFDLENBQUM7RUFDakI7RUFFbUJDLEtBQUtBLENBQUEsRUFBUztJQUMvQixLQUFLLENBQUNBLEtBQUssQ0FBQyxDQUFDO0lBQ2IsSUFBSSxDQUFDL0IsY0FBYyxDQUFDK0IsS0FBSyxDQUFDLENBQUM7RUFDN0I7QUFDRjtBQUVBdEMsYUFBYSxDQUFDdUMsUUFBUSxDQUFFLG1CQUFtQixFQUFFcEMsaUJBQWtCLENBQUMifQ==