// Copyright 2019-2022, University of Colorado Boulder

/**
 * WorldDialog is displayed when bunnies have exceeded their maximum population.
 * It displays the message "Bunnies have taken over the world".
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import { optionize4 } from '../../../../phet-core/js/optionize.js';
import { Image, Text, VBox } from '../../../../scenery/js/imports.js';
import Dialog from '../../../../sun/js/Dialog.js';
import world_png from '../../../images/world_png.js';
import naturalSelection from '../../naturalSelection.js';
import NaturalSelectionStrings from '../../NaturalSelectionStrings.js';
import NaturalSelectionConstants from '../NaturalSelectionConstants.js';
export default class WorldDialog extends Dialog {
  constructor(providedOptions) {
    const options = optionize4()({}, NaturalSelectionConstants.DIALOG_OPTIONS, {
      // DialogOptions
      fill: 'black',
      closeButtonColor: 'white',
      topMargin: 25,
      phetioReadOnly: true,
      phetioDocumentation: 'This dialog is displayed when bunnies have taken over the world.'
    }, providedOptions);
    const worldNode = new Image(world_png, {
      scale: 0.8 // determined empirically
    });

    const messageText = new Text(NaturalSelectionStrings.bunniesHaveTakenOverTheWorldStringProperty, {
      font: NaturalSelectionConstants.DIALOG_FONT,
      fill: 'white',
      maxWidth: worldNode.width,
      tandem: options.tandem.createTandem('messageText')
    });
    const content = new VBox({
      spacing: 25,
      align: 'center',
      children: [messageText, worldNode]
    });
    super(content, options);
  }
}
naturalSelection.register('WorldDialog', WorldDialog);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJvcHRpb25pemU0IiwiSW1hZ2UiLCJUZXh0IiwiVkJveCIsIkRpYWxvZyIsIndvcmxkX3BuZyIsIm5hdHVyYWxTZWxlY3Rpb24iLCJOYXR1cmFsU2VsZWN0aW9uU3RyaW5ncyIsIk5hdHVyYWxTZWxlY3Rpb25Db25zdGFudHMiLCJXb3JsZERpYWxvZyIsImNvbnN0cnVjdG9yIiwicHJvdmlkZWRPcHRpb25zIiwib3B0aW9ucyIsIkRJQUxPR19PUFRJT05TIiwiZmlsbCIsImNsb3NlQnV0dG9uQ29sb3IiLCJ0b3BNYXJnaW4iLCJwaGV0aW9SZWFkT25seSIsInBoZXRpb0RvY3VtZW50YXRpb24iLCJ3b3JsZE5vZGUiLCJzY2FsZSIsIm1lc3NhZ2VUZXh0IiwiYnVubmllc0hhdmVUYWtlbk92ZXJUaGVXb3JsZFN0cmluZ1Byb3BlcnR5IiwiZm9udCIsIkRJQUxPR19GT05UIiwibWF4V2lkdGgiLCJ3aWR0aCIsInRhbmRlbSIsImNyZWF0ZVRhbmRlbSIsImNvbnRlbnQiLCJzcGFjaW5nIiwiYWxpZ24iLCJjaGlsZHJlbiIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiV29ybGREaWFsb2cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTktMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogV29ybGREaWFsb2cgaXMgZGlzcGxheWVkIHdoZW4gYnVubmllcyBoYXZlIGV4Y2VlZGVkIHRoZWlyIG1heGltdW0gcG9wdWxhdGlvbi5cclxuICogSXQgZGlzcGxheXMgdGhlIG1lc3NhZ2UgXCJCdW5uaWVzIGhhdmUgdGFrZW4gb3ZlciB0aGUgd29ybGRcIi5cclxuICpcclxuICogQGF1dGhvciBDaHJpcyBNYWxsZXkgKFBpeGVsWm9vbSwgSW5jLilcclxuICovXHJcblxyXG5pbXBvcnQgeyBFbXB0eVNlbGZPcHRpb25zLCBvcHRpb25pemU0IH0gZnJvbSAnLi4vLi4vLi4vLi4vcGhldC1jb3JlL2pzL29wdGlvbml6ZS5qcyc7XHJcbmltcG9ydCBQaWNrUmVxdWlyZWQgZnJvbSAnLi4vLi4vLi4vLi4vcGhldC1jb3JlL2pzL3R5cGVzL1BpY2tSZXF1aXJlZC5qcyc7XHJcbmltcG9ydCB7IEltYWdlLCBUZXh0LCBWQm94IH0gZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IERpYWxvZywgeyBEaWFsb2dPcHRpb25zIH0gZnJvbSAnLi4vLi4vLi4vLi4vc3VuL2pzL0RpYWxvZy5qcyc7XHJcbmltcG9ydCB3b3JsZF9wbmcgZnJvbSAnLi4vLi4vLi4vaW1hZ2VzL3dvcmxkX3BuZy5qcyc7XHJcbmltcG9ydCBuYXR1cmFsU2VsZWN0aW9uIGZyb20gJy4uLy4uL25hdHVyYWxTZWxlY3Rpb24uanMnO1xyXG5pbXBvcnQgTmF0dXJhbFNlbGVjdGlvblN0cmluZ3MgZnJvbSAnLi4vLi4vTmF0dXJhbFNlbGVjdGlvblN0cmluZ3MuanMnO1xyXG5pbXBvcnQgTmF0dXJhbFNlbGVjdGlvbkNvbnN0YW50cyBmcm9tICcuLi9OYXR1cmFsU2VsZWN0aW9uQ29uc3RhbnRzLmpzJztcclxuXHJcbnR5cGUgU2VsZk9wdGlvbnMgPSBFbXB0eVNlbGZPcHRpb25zO1xyXG5cclxudHlwZSBXb3JsZERpYWxvZ09wdGlvbnMgPSBTZWxmT3B0aW9ucyAmIFBpY2tSZXF1aXJlZDxEaWFsb2dPcHRpb25zLCAndGFuZGVtJz47XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBXb3JsZERpYWxvZyBleHRlbmRzIERpYWxvZyB7XHJcblxyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvciggcHJvdmlkZWRPcHRpb25zOiBXb3JsZERpYWxvZ09wdGlvbnMgKSB7XHJcblxyXG4gICAgY29uc3Qgb3B0aW9ucyA9IG9wdGlvbml6ZTQ8V29ybGREaWFsb2dPcHRpb25zLCBTZWxmT3B0aW9ucywgRGlhbG9nT3B0aW9ucz4oKShcclxuICAgICAge30sIE5hdHVyYWxTZWxlY3Rpb25Db25zdGFudHMuRElBTE9HX09QVElPTlMsIHtcclxuXHJcbiAgICAgICAgLy8gRGlhbG9nT3B0aW9uc1xyXG4gICAgICAgIGZpbGw6ICdibGFjaycsXHJcbiAgICAgICAgY2xvc2VCdXR0b25Db2xvcjogJ3doaXRlJyxcclxuICAgICAgICB0b3BNYXJnaW46IDI1LFxyXG4gICAgICAgIHBoZXRpb1JlYWRPbmx5OiB0cnVlLFxyXG4gICAgICAgIHBoZXRpb0RvY3VtZW50YXRpb246ICdUaGlzIGRpYWxvZyBpcyBkaXNwbGF5ZWQgd2hlbiBidW5uaWVzIGhhdmUgdGFrZW4gb3ZlciB0aGUgd29ybGQuJ1xyXG4gICAgICB9LCBwcm92aWRlZE9wdGlvbnMgKTtcclxuXHJcbiAgICBjb25zdCB3b3JsZE5vZGUgPSBuZXcgSW1hZ2UoIHdvcmxkX3BuZywge1xyXG4gICAgICBzY2FsZTogMC44IC8vIGRldGVybWluZWQgZW1waXJpY2FsbHlcclxuICAgIH0gKTtcclxuXHJcbiAgICBjb25zdCBtZXNzYWdlVGV4dCA9IG5ldyBUZXh0KCBOYXR1cmFsU2VsZWN0aW9uU3RyaW5ncy5idW5uaWVzSGF2ZVRha2VuT3ZlclRoZVdvcmxkU3RyaW5nUHJvcGVydHksIHtcclxuICAgICAgZm9udDogTmF0dXJhbFNlbGVjdGlvbkNvbnN0YW50cy5ESUFMT0dfRk9OVCxcclxuICAgICAgZmlsbDogJ3doaXRlJyxcclxuICAgICAgbWF4V2lkdGg6IHdvcmxkTm9kZS53aWR0aCxcclxuICAgICAgdGFuZGVtOiBvcHRpb25zLnRhbmRlbS5jcmVhdGVUYW5kZW0oICdtZXNzYWdlVGV4dCcgKVxyXG4gICAgfSApO1xyXG5cclxuICAgIGNvbnN0IGNvbnRlbnQgPSBuZXcgVkJveCgge1xyXG4gICAgICBzcGFjaW5nOiAyNSxcclxuICAgICAgYWxpZ246ICdjZW50ZXInLFxyXG4gICAgICBjaGlsZHJlbjogWyBtZXNzYWdlVGV4dCwgd29ybGROb2RlIF1cclxuICAgIH0gKTtcclxuXHJcbiAgICBzdXBlciggY29udGVudCwgb3B0aW9ucyApO1xyXG4gIH1cclxufVxyXG5cclxubmF0dXJhbFNlbGVjdGlvbi5yZWdpc3RlciggJ1dvcmxkRGlhbG9nJywgV29ybGREaWFsb2cgKTsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxTQUEyQkEsVUFBVSxRQUFRLHVDQUF1QztBQUVwRixTQUFTQyxLQUFLLEVBQUVDLElBQUksRUFBRUMsSUFBSSxRQUFRLG1DQUFtQztBQUNyRSxPQUFPQyxNQUFNLE1BQXlCLDhCQUE4QjtBQUNwRSxPQUFPQyxTQUFTLE1BQU0sOEJBQThCO0FBQ3BELE9BQU9DLGdCQUFnQixNQUFNLDJCQUEyQjtBQUN4RCxPQUFPQyx1QkFBdUIsTUFBTSxrQ0FBa0M7QUFDdEUsT0FBT0MseUJBQXlCLE1BQU0saUNBQWlDO0FBTXZFLGVBQWUsTUFBTUMsV0FBVyxTQUFTTCxNQUFNLENBQUM7RUFFdkNNLFdBQVdBLENBQUVDLGVBQW1DLEVBQUc7SUFFeEQsTUFBTUMsT0FBTyxHQUFHWixVQUFVLENBQWlELENBQUMsQ0FDMUUsQ0FBQyxDQUFDLEVBQUVRLHlCQUF5QixDQUFDSyxjQUFjLEVBQUU7TUFFNUM7TUFDQUMsSUFBSSxFQUFFLE9BQU87TUFDYkMsZ0JBQWdCLEVBQUUsT0FBTztNQUN6QkMsU0FBUyxFQUFFLEVBQUU7TUFDYkMsY0FBYyxFQUFFLElBQUk7TUFDcEJDLG1CQUFtQixFQUFFO0lBQ3ZCLENBQUMsRUFBRVAsZUFBZ0IsQ0FBQztJQUV0QixNQUFNUSxTQUFTLEdBQUcsSUFBSWxCLEtBQUssQ0FBRUksU0FBUyxFQUFFO01BQ3RDZSxLQUFLLEVBQUUsR0FBRyxDQUFDO0lBQ2IsQ0FBRSxDQUFDOztJQUVILE1BQU1DLFdBQVcsR0FBRyxJQUFJbkIsSUFBSSxDQUFFSyx1QkFBdUIsQ0FBQ2UsMENBQTBDLEVBQUU7TUFDaEdDLElBQUksRUFBRWYseUJBQXlCLENBQUNnQixXQUFXO01BQzNDVixJQUFJLEVBQUUsT0FBTztNQUNiVyxRQUFRLEVBQUVOLFNBQVMsQ0FBQ08sS0FBSztNQUN6QkMsTUFBTSxFQUFFZixPQUFPLENBQUNlLE1BQU0sQ0FBQ0MsWUFBWSxDQUFFLGFBQWM7SUFDckQsQ0FBRSxDQUFDO0lBRUgsTUFBTUMsT0FBTyxHQUFHLElBQUkxQixJQUFJLENBQUU7TUFDeEIyQixPQUFPLEVBQUUsRUFBRTtNQUNYQyxLQUFLLEVBQUUsUUFBUTtNQUNmQyxRQUFRLEVBQUUsQ0FBRVgsV0FBVyxFQUFFRixTQUFTO0lBQ3BDLENBQUUsQ0FBQztJQUVILEtBQUssQ0FBRVUsT0FBTyxFQUFFakIsT0FBUSxDQUFDO0VBQzNCO0FBQ0Y7QUFFQU4sZ0JBQWdCLENBQUMyQixRQUFRLENBQUUsYUFBYSxFQUFFeEIsV0FBWSxDQUFDIn0=