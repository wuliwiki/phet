// Copyright 2019-2022, University of Colorado Boulder

/**
 * EnvironmentBackgroundNode shows the background image that corresponds to the environment.
 * The image is scaled to fit the specified dimensions.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import { Image, Line, Node } from '../../../../../scenery/js/imports.js';
import arcticBackground_png from '../../../../images/arcticBackground_png.js';
import equatorBackground_png from '../../../../images/equatorBackground_png.js';
import naturalSelection from '../../../naturalSelection.js';
import Environment from '../../model/Environment.js';
import NaturalSelectionQueryParameters from '../../NaturalSelectionQueryParameters.js';
export default class EnvironmentBackgroundNode extends Node {
  /**
   * @param environmentProperty
   * @param size - dimensions of the backgrounds, in view coordinates
   * @param yHorizon - y coordinate of the horizon, in view coordinates
   */
  constructor(environmentProperty, size, yHorizon) {
    // Equator background, scaled to fit
    const equatorBackground = new Image(equatorBackground_png);
    equatorBackground.setScaleMagnitude(size.width / equatorBackground.width, size.height / equatorBackground.height);

    // Arctic background, scaled to fit
    const arcticBackground = new Image(arcticBackground_png);
    arcticBackground.setScaleMagnitude(size.width / arcticBackground.width, size.height / arcticBackground.height);
    const children = [equatorBackground, arcticBackground];

    // Horizon line, for debugging. Bunnies cannot go further from the viewer than this line.
    if (NaturalSelectionQueryParameters.showHorizon) {
      children.push(new Line(0, yHorizon, size.width, yHorizon, {
        stroke: 'red',
        lineWidth: 1
      }));
    }
    super({
      children: children
    });

    // Show the background that matches the environment. unlink is not necessary.
    environmentProperty.link(environment => {
      equatorBackground.visible = environment === Environment.EQUATOR;
      arcticBackground.visible = environment === Environment.ARCTIC;
    });
  }
  dispose() {
    assert && assert(false, 'dispose is not supported, exists for the lifetime of the sim');
    super.dispose();
  }
}
naturalSelection.register('EnvironmentBackgroundNode', EnvironmentBackgroundNode);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJJbWFnZSIsIkxpbmUiLCJOb2RlIiwiYXJjdGljQmFja2dyb3VuZF9wbmciLCJlcXVhdG9yQmFja2dyb3VuZF9wbmciLCJuYXR1cmFsU2VsZWN0aW9uIiwiRW52aXJvbm1lbnQiLCJOYXR1cmFsU2VsZWN0aW9uUXVlcnlQYXJhbWV0ZXJzIiwiRW52aXJvbm1lbnRCYWNrZ3JvdW5kTm9kZSIsImNvbnN0cnVjdG9yIiwiZW52aXJvbm1lbnRQcm9wZXJ0eSIsInNpemUiLCJ5SG9yaXpvbiIsImVxdWF0b3JCYWNrZ3JvdW5kIiwic2V0U2NhbGVNYWduaXR1ZGUiLCJ3aWR0aCIsImhlaWdodCIsImFyY3RpY0JhY2tncm91bmQiLCJjaGlsZHJlbiIsInNob3dIb3Jpem9uIiwicHVzaCIsInN0cm9rZSIsImxpbmVXaWR0aCIsImxpbmsiLCJlbnZpcm9ubWVudCIsInZpc2libGUiLCJFUVVBVE9SIiwiQVJDVElDIiwiZGlzcG9zZSIsImFzc2VydCIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiRW52aXJvbm1lbnRCYWNrZ3JvdW5kTm9kZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxOS0yMDIyLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBFbnZpcm9ubWVudEJhY2tncm91bmROb2RlIHNob3dzIHRoZSBiYWNrZ3JvdW5kIGltYWdlIHRoYXQgY29ycmVzcG9uZHMgdG8gdGhlIGVudmlyb25tZW50LlxyXG4gKiBUaGUgaW1hZ2UgaXMgc2NhbGVkIHRvIGZpdCB0aGUgc3BlY2lmaWVkIGRpbWVuc2lvbnMuXHJcbiAqXHJcbiAqIEBhdXRob3IgQ2hyaXMgTWFsbGV5IChQaXhlbFpvb20sIEluYy4pXHJcbiAqL1xyXG5cclxuaW1wb3J0IEVudW1lcmF0aW9uUHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vLi4vLi4vYXhvbi9qcy9FbnVtZXJhdGlvblByb3BlcnR5LmpzJztcclxuaW1wb3J0IERpbWVuc2lvbjIgZnJvbSAnLi4vLi4vLi4vLi4vLi4vZG90L2pzL0RpbWVuc2lvbjIuanMnO1xyXG5pbXBvcnQgeyBJbWFnZSwgTGluZSwgTm9kZSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XHJcbmltcG9ydCBhcmN0aWNCYWNrZ3JvdW5kX3BuZyBmcm9tICcuLi8uLi8uLi8uLi9pbWFnZXMvYXJjdGljQmFja2dyb3VuZF9wbmcuanMnO1xyXG5pbXBvcnQgZXF1YXRvckJhY2tncm91bmRfcG5nIGZyb20gJy4uLy4uLy4uLy4uL2ltYWdlcy9lcXVhdG9yQmFja2dyb3VuZF9wbmcuanMnO1xyXG5pbXBvcnQgbmF0dXJhbFNlbGVjdGlvbiBmcm9tICcuLi8uLi8uLi9uYXR1cmFsU2VsZWN0aW9uLmpzJztcclxuaW1wb3J0IEVudmlyb25tZW50IGZyb20gJy4uLy4uL21vZGVsL0Vudmlyb25tZW50LmpzJztcclxuaW1wb3J0IE5hdHVyYWxTZWxlY3Rpb25RdWVyeVBhcmFtZXRlcnMgZnJvbSAnLi4vLi4vTmF0dXJhbFNlbGVjdGlvblF1ZXJ5UGFyYW1ldGVycy5qcyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFbnZpcm9ubWVudEJhY2tncm91bmROb2RlIGV4dGVuZHMgTm9kZSB7XHJcblxyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSBlbnZpcm9ubWVudFByb3BlcnR5XHJcbiAgICogQHBhcmFtIHNpemUgLSBkaW1lbnNpb25zIG9mIHRoZSBiYWNrZ3JvdW5kcywgaW4gdmlldyBjb29yZGluYXRlc1xyXG4gICAqIEBwYXJhbSB5SG9yaXpvbiAtIHkgY29vcmRpbmF0ZSBvZiB0aGUgaG9yaXpvbiwgaW4gdmlldyBjb29yZGluYXRlc1xyXG4gICAqL1xyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvciggZW52aXJvbm1lbnRQcm9wZXJ0eTogRW51bWVyYXRpb25Qcm9wZXJ0eTxFbnZpcm9ubWVudD4sIHNpemU6IERpbWVuc2lvbjIsIHlIb3Jpem9uOiBudW1iZXIgKSB7XHJcblxyXG4gICAgLy8gRXF1YXRvciBiYWNrZ3JvdW5kLCBzY2FsZWQgdG8gZml0XHJcbiAgICBjb25zdCBlcXVhdG9yQmFja2dyb3VuZCA9IG5ldyBJbWFnZSggZXF1YXRvckJhY2tncm91bmRfcG5nICk7XHJcbiAgICBlcXVhdG9yQmFja2dyb3VuZC5zZXRTY2FsZU1hZ25pdHVkZSggc2l6ZS53aWR0aCAvIGVxdWF0b3JCYWNrZ3JvdW5kLndpZHRoLCBzaXplLmhlaWdodCAvIGVxdWF0b3JCYWNrZ3JvdW5kLmhlaWdodCApO1xyXG5cclxuICAgIC8vIEFyY3RpYyBiYWNrZ3JvdW5kLCBzY2FsZWQgdG8gZml0XHJcbiAgICBjb25zdCBhcmN0aWNCYWNrZ3JvdW5kID0gbmV3IEltYWdlKCBhcmN0aWNCYWNrZ3JvdW5kX3BuZyApO1xyXG4gICAgYXJjdGljQmFja2dyb3VuZC5zZXRTY2FsZU1hZ25pdHVkZSggc2l6ZS53aWR0aCAvIGFyY3RpY0JhY2tncm91bmQud2lkdGgsIHNpemUuaGVpZ2h0IC8gYXJjdGljQmFja2dyb3VuZC5oZWlnaHQgKTtcclxuXHJcbiAgICBjb25zdCBjaGlsZHJlbjogTm9kZVtdID0gWyBlcXVhdG9yQmFja2dyb3VuZCwgYXJjdGljQmFja2dyb3VuZCBdO1xyXG5cclxuICAgIC8vIEhvcml6b24gbGluZSwgZm9yIGRlYnVnZ2luZy4gQnVubmllcyBjYW5ub3QgZ28gZnVydGhlciBmcm9tIHRoZSB2aWV3ZXIgdGhhbiB0aGlzIGxpbmUuXHJcbiAgICBpZiAoIE5hdHVyYWxTZWxlY3Rpb25RdWVyeVBhcmFtZXRlcnMuc2hvd0hvcml6b24gKSB7XHJcbiAgICAgIGNoaWxkcmVuLnB1c2goIG5ldyBMaW5lKCAwLCB5SG9yaXpvbiwgc2l6ZS53aWR0aCwgeUhvcml6b24sIHtcclxuICAgICAgICBzdHJva2U6ICdyZWQnLFxyXG4gICAgICAgIGxpbmVXaWR0aDogMVxyXG4gICAgICB9ICkgKTtcclxuICAgIH1cclxuXHJcbiAgICBzdXBlcigge1xyXG4gICAgICBjaGlsZHJlbjogY2hpbGRyZW5cclxuICAgIH0gKTtcclxuXHJcbiAgICAvLyBTaG93IHRoZSBiYWNrZ3JvdW5kIHRoYXQgbWF0Y2hlcyB0aGUgZW52aXJvbm1lbnQuIHVubGluayBpcyBub3QgbmVjZXNzYXJ5LlxyXG4gICAgZW52aXJvbm1lbnRQcm9wZXJ0eS5saW5rKCBlbnZpcm9ubWVudCA9PiB7XHJcbiAgICAgIGVxdWF0b3JCYWNrZ3JvdW5kLnZpc2libGUgPSAoIGVudmlyb25tZW50ID09PSBFbnZpcm9ubWVudC5FUVVBVE9SICk7XHJcbiAgICAgIGFyY3RpY0JhY2tncm91bmQudmlzaWJsZSA9ICggZW52aXJvbm1lbnQgPT09IEVudmlyb25tZW50LkFSQ1RJQyApO1xyXG4gICAgfSApO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIG92ZXJyaWRlIGRpc3Bvc2UoKTogdm9pZCB7XHJcbiAgICBhc3NlcnQgJiYgYXNzZXJ0KCBmYWxzZSwgJ2Rpc3Bvc2UgaXMgbm90IHN1cHBvcnRlZCwgZXhpc3RzIGZvciB0aGUgbGlmZXRpbWUgb2YgdGhlIHNpbScgKTtcclxuICAgIHN1cGVyLmRpc3Bvc2UoKTtcclxuICB9XHJcbn1cclxuXHJcbm5hdHVyYWxTZWxlY3Rpb24ucmVnaXN0ZXIoICdFbnZpcm9ubWVudEJhY2tncm91bmROb2RlJywgRW52aXJvbm1lbnRCYWNrZ3JvdW5kTm9kZSApOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUlBLFNBQVNBLEtBQUssRUFBRUMsSUFBSSxFQUFFQyxJQUFJLFFBQVEsc0NBQXNDO0FBQ3hFLE9BQU9DLG9CQUFvQixNQUFNLDRDQUE0QztBQUM3RSxPQUFPQyxxQkFBcUIsTUFBTSw2Q0FBNkM7QUFDL0UsT0FBT0MsZ0JBQWdCLE1BQU0sOEJBQThCO0FBQzNELE9BQU9DLFdBQVcsTUFBTSw0QkFBNEI7QUFDcEQsT0FBT0MsK0JBQStCLE1BQU0sMENBQTBDO0FBRXRGLGVBQWUsTUFBTUMseUJBQXlCLFNBQVNOLElBQUksQ0FBQztFQUUxRDtBQUNGO0FBQ0E7QUFDQTtBQUNBO0VBQ1NPLFdBQVdBLENBQUVDLG1CQUFxRCxFQUFFQyxJQUFnQixFQUFFQyxRQUFnQixFQUFHO0lBRTlHO0lBQ0EsTUFBTUMsaUJBQWlCLEdBQUcsSUFBSWIsS0FBSyxDQUFFSSxxQkFBc0IsQ0FBQztJQUM1RFMsaUJBQWlCLENBQUNDLGlCQUFpQixDQUFFSCxJQUFJLENBQUNJLEtBQUssR0FBR0YsaUJBQWlCLENBQUNFLEtBQUssRUFBRUosSUFBSSxDQUFDSyxNQUFNLEdBQUdILGlCQUFpQixDQUFDRyxNQUFPLENBQUM7O0lBRW5IO0lBQ0EsTUFBTUMsZ0JBQWdCLEdBQUcsSUFBSWpCLEtBQUssQ0FBRUcsb0JBQXFCLENBQUM7SUFDMURjLGdCQUFnQixDQUFDSCxpQkFBaUIsQ0FBRUgsSUFBSSxDQUFDSSxLQUFLLEdBQUdFLGdCQUFnQixDQUFDRixLQUFLLEVBQUVKLElBQUksQ0FBQ0ssTUFBTSxHQUFHQyxnQkFBZ0IsQ0FBQ0QsTUFBTyxDQUFDO0lBRWhILE1BQU1FLFFBQWdCLEdBQUcsQ0FBRUwsaUJBQWlCLEVBQUVJLGdCQUFnQixDQUFFOztJQUVoRTtJQUNBLElBQUtWLCtCQUErQixDQUFDWSxXQUFXLEVBQUc7TUFDakRELFFBQVEsQ0FBQ0UsSUFBSSxDQUFFLElBQUluQixJQUFJLENBQUUsQ0FBQyxFQUFFVyxRQUFRLEVBQUVELElBQUksQ0FBQ0ksS0FBSyxFQUFFSCxRQUFRLEVBQUU7UUFDMURTLE1BQU0sRUFBRSxLQUFLO1FBQ2JDLFNBQVMsRUFBRTtNQUNiLENBQUUsQ0FBRSxDQUFDO0lBQ1A7SUFFQSxLQUFLLENBQUU7TUFDTEosUUFBUSxFQUFFQTtJQUNaLENBQUUsQ0FBQzs7SUFFSDtJQUNBUixtQkFBbUIsQ0FBQ2EsSUFBSSxDQUFFQyxXQUFXLElBQUk7TUFDdkNYLGlCQUFpQixDQUFDWSxPQUFPLEdBQUtELFdBQVcsS0FBS2xCLFdBQVcsQ0FBQ29CLE9BQVM7TUFDbkVULGdCQUFnQixDQUFDUSxPQUFPLEdBQUtELFdBQVcsS0FBS2xCLFdBQVcsQ0FBQ3FCLE1BQVE7SUFDbkUsQ0FBRSxDQUFDO0VBQ0w7RUFFZ0JDLE9BQU9BLENBQUEsRUFBUztJQUM5QkMsTUFBTSxJQUFJQSxNQUFNLENBQUUsS0FBSyxFQUFFLDhEQUErRCxDQUFDO0lBQ3pGLEtBQUssQ0FBQ0QsT0FBTyxDQUFDLENBQUM7RUFDakI7QUFDRjtBQUVBdkIsZ0JBQWdCLENBQUN5QixRQUFRLENBQUUsMkJBQTJCLEVBQUV0Qix5QkFBMEIsQ0FBQyJ9