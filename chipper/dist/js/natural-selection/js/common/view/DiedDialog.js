// Copyright 2019-2022, University of Colorado Boulder

/**
 * DiedDialog is displayed when all of the bunnies have died.
 * It displays the message "All of the bunnies have died."
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import { optionize4 } from '../../../../phet-core/js/optionize.js';
import { Text } from '../../../../scenery/js/imports.js';
import Dialog from '../../../../sun/js/Dialog.js';
import naturalSelection from '../../naturalSelection.js';
import NaturalSelectionStrings from '../../NaturalSelectionStrings.js';
import NaturalSelectionConstants from '../NaturalSelectionConstants.js';
export default class DiedDialog extends Dialog {
  constructor(providedOptions) {
    const options = optionize4()({}, NaturalSelectionConstants.DIALOG_OPTIONS, {
      // DialogOptions
      topMargin: 50,
      bottomMargin: 50,
      phetioReadOnly: true,
      phetioDocumentation: 'This dialog is displayed when all of the bunnies have died.'
    }, providedOptions);
    const messageText = new Text(NaturalSelectionStrings.allOfTheBunniesHaveDiedStringProperty, {
      font: NaturalSelectionConstants.DIALOG_FONT,
      maxWidth: 450,
      // determined empirically
      tandem: options.tandem.createTandem('messageText')
    });
    super(messageText, options);
  }
}
naturalSelection.register('DiedDialog', DiedDialog);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJvcHRpb25pemU0IiwiVGV4dCIsIkRpYWxvZyIsIm5hdHVyYWxTZWxlY3Rpb24iLCJOYXR1cmFsU2VsZWN0aW9uU3RyaW5ncyIsIk5hdHVyYWxTZWxlY3Rpb25Db25zdGFudHMiLCJEaWVkRGlhbG9nIiwiY29uc3RydWN0b3IiLCJwcm92aWRlZE9wdGlvbnMiLCJvcHRpb25zIiwiRElBTE9HX09QVElPTlMiLCJ0b3BNYXJnaW4iLCJib3R0b21NYXJnaW4iLCJwaGV0aW9SZWFkT25seSIsInBoZXRpb0RvY3VtZW50YXRpb24iLCJtZXNzYWdlVGV4dCIsImFsbE9mVGhlQnVubmllc0hhdmVEaWVkU3RyaW5nUHJvcGVydHkiLCJmb250IiwiRElBTE9HX0ZPTlQiLCJtYXhXaWR0aCIsInRhbmRlbSIsImNyZWF0ZVRhbmRlbSIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiRGllZERpYWxvZy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxOS0yMDIyLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBEaWVkRGlhbG9nIGlzIGRpc3BsYXllZCB3aGVuIGFsbCBvZiB0aGUgYnVubmllcyBoYXZlIGRpZWQuXHJcbiAqIEl0IGRpc3BsYXlzIHRoZSBtZXNzYWdlIFwiQWxsIG9mIHRoZSBidW5uaWVzIGhhdmUgZGllZC5cIlxyXG4gKlxyXG4gKiBAYXV0aG9yIENocmlzIE1hbGxleSAoUGl4ZWxab29tLCBJbmMuKVxyXG4gKi9cclxuXHJcbmltcG9ydCB7IEVtcHR5U2VsZk9wdGlvbnMsIG9wdGlvbml6ZTQgfSBmcm9tICcuLi8uLi8uLi8uLi9waGV0LWNvcmUvanMvb3B0aW9uaXplLmpzJztcclxuaW1wb3J0IFBpY2tSZXF1aXJlZCBmcm9tICcuLi8uLi8uLi8uLi9waGV0LWNvcmUvanMvdHlwZXMvUGlja1JlcXVpcmVkLmpzJztcclxuaW1wb3J0IHsgVGV4dCB9IGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XHJcbmltcG9ydCBEaWFsb2csIHsgRGlhbG9nT3B0aW9ucyB9IGZyb20gJy4uLy4uLy4uLy4uL3N1bi9qcy9EaWFsb2cuanMnO1xyXG5pbXBvcnQgbmF0dXJhbFNlbGVjdGlvbiBmcm9tICcuLi8uLi9uYXR1cmFsU2VsZWN0aW9uLmpzJztcclxuaW1wb3J0IE5hdHVyYWxTZWxlY3Rpb25TdHJpbmdzIGZyb20gJy4uLy4uL05hdHVyYWxTZWxlY3Rpb25TdHJpbmdzLmpzJztcclxuaW1wb3J0IE5hdHVyYWxTZWxlY3Rpb25Db25zdGFudHMgZnJvbSAnLi4vTmF0dXJhbFNlbGVjdGlvbkNvbnN0YW50cy5qcyc7XHJcblxyXG50eXBlIFNlbGZPcHRpb25zID0gRW1wdHlTZWxmT3B0aW9ucztcclxuXHJcbnR5cGUgRGllZERpYWxvZ09wdGlvbnMgPSBTZWxmT3B0aW9ucyAmIFBpY2tSZXF1aXJlZDxEaWFsb2dPcHRpb25zLCAndGFuZGVtJz47XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEaWVkRGlhbG9nIGV4dGVuZHMgRGlhbG9nIHtcclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKCBwcm92aWRlZE9wdGlvbnM6IERpZWREaWFsb2dPcHRpb25zICkge1xyXG5cclxuICAgIGNvbnN0IG9wdGlvbnMgPSBvcHRpb25pemU0PERpZWREaWFsb2dPcHRpb25zLCBTZWxmT3B0aW9ucywgRGlhbG9nT3B0aW9ucz4oKShcclxuICAgICAge30sIE5hdHVyYWxTZWxlY3Rpb25Db25zdGFudHMuRElBTE9HX09QVElPTlMsIHtcclxuXHJcbiAgICAgIC8vIERpYWxvZ09wdGlvbnNcclxuICAgICAgdG9wTWFyZ2luOiA1MCxcclxuICAgICAgYm90dG9tTWFyZ2luOiA1MCxcclxuICAgICAgcGhldGlvUmVhZE9ubHk6IHRydWUsXHJcbiAgICAgIHBoZXRpb0RvY3VtZW50YXRpb246ICdUaGlzIGRpYWxvZyBpcyBkaXNwbGF5ZWQgd2hlbiBhbGwgb2YgdGhlIGJ1bm5pZXMgaGF2ZSBkaWVkLidcclxuICAgIH0sIHByb3ZpZGVkT3B0aW9ucyApO1xyXG5cclxuICAgIGNvbnN0IG1lc3NhZ2VUZXh0ID0gbmV3IFRleHQoIE5hdHVyYWxTZWxlY3Rpb25TdHJpbmdzLmFsbE9mVGhlQnVubmllc0hhdmVEaWVkU3RyaW5nUHJvcGVydHksIHtcclxuICAgICAgZm9udDogTmF0dXJhbFNlbGVjdGlvbkNvbnN0YW50cy5ESUFMT0dfRk9OVCxcclxuICAgICAgbWF4V2lkdGg6IDQ1MCwgLy8gZGV0ZXJtaW5lZCBlbXBpcmljYWxseVxyXG4gICAgICB0YW5kZW06IG9wdGlvbnMudGFuZGVtLmNyZWF0ZVRhbmRlbSggJ21lc3NhZ2VUZXh0JyApXHJcbiAgICB9ICk7XHJcblxyXG4gICAgc3VwZXIoIG1lc3NhZ2VUZXh0LCBvcHRpb25zICk7XHJcbiAgfVxyXG59XHJcblxyXG5uYXR1cmFsU2VsZWN0aW9uLnJlZ2lzdGVyKCAnRGllZERpYWxvZycsIERpZWREaWFsb2cgKTsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxTQUEyQkEsVUFBVSxRQUFRLHVDQUF1QztBQUVwRixTQUFTQyxJQUFJLFFBQVEsbUNBQW1DO0FBQ3hELE9BQU9DLE1BQU0sTUFBeUIsOEJBQThCO0FBQ3BFLE9BQU9DLGdCQUFnQixNQUFNLDJCQUEyQjtBQUN4RCxPQUFPQyx1QkFBdUIsTUFBTSxrQ0FBa0M7QUFDdEUsT0FBT0MseUJBQXlCLE1BQU0saUNBQWlDO0FBTXZFLGVBQWUsTUFBTUMsVUFBVSxTQUFTSixNQUFNLENBQUM7RUFFdENLLFdBQVdBLENBQUVDLGVBQWtDLEVBQUc7SUFFdkQsTUFBTUMsT0FBTyxHQUFHVCxVQUFVLENBQWdELENBQUMsQ0FDekUsQ0FBQyxDQUFDLEVBQUVLLHlCQUF5QixDQUFDSyxjQUFjLEVBQUU7TUFFOUM7TUFDQUMsU0FBUyxFQUFFLEVBQUU7TUFDYkMsWUFBWSxFQUFFLEVBQUU7TUFDaEJDLGNBQWMsRUFBRSxJQUFJO01BQ3BCQyxtQkFBbUIsRUFBRTtJQUN2QixDQUFDLEVBQUVOLGVBQWdCLENBQUM7SUFFcEIsTUFBTU8sV0FBVyxHQUFHLElBQUlkLElBQUksQ0FBRUcsdUJBQXVCLENBQUNZLHFDQUFxQyxFQUFFO01BQzNGQyxJQUFJLEVBQUVaLHlCQUF5QixDQUFDYSxXQUFXO01BQzNDQyxRQUFRLEVBQUUsR0FBRztNQUFFO01BQ2ZDLE1BQU0sRUFBRVgsT0FBTyxDQUFDVyxNQUFNLENBQUNDLFlBQVksQ0FBRSxhQUFjO0lBQ3JELENBQUUsQ0FBQztJQUVILEtBQUssQ0FBRU4sV0FBVyxFQUFFTixPQUFRLENBQUM7RUFDL0I7QUFDRjtBQUVBTixnQkFBZ0IsQ0FBQ21CLFFBQVEsQ0FBRSxZQUFZLEVBQUVoQixVQUFXLENBQUMifQ==