// Copyright 2015-2022, University of Colorado Boulder

/**
 * The 'Intro' screen.
 *
 * @author Sam Reid (PhET Interactive Simulations)
 * @author Chandrashekar Bemagoni (Actual Concepts)
 */

import Property from '../../../axon/js/Property.js';
import Screen from '../../../joist/js/Screen.js';
import ScreenIcon from '../../../joist/js/ScreenIcon.js';
import { Image } from '../../../scenery/js/imports.js';
import introScreen_png from '../../mipmaps/introScreen_png.js';
import BendingLightStrings from '../BendingLightStrings.js';
import bendingLight from '../bendingLight.js';
import Substance from '../common/model/Substance.js';
import IntroModel from './model/IntroModel.js';
import IntroScreenView from './view/IntroScreenView.js';
import LaserTypeAquaRadioButtonGroup from './view/LaserTypeAquaRadioButtonGroup.js';
class IntroScreen extends Screen {
  constructor(tandem) {
    const options = {
      name: BendingLightStrings.introStringProperty,
      homeScreenIcon: new ScreenIcon(new Image(introScreen_png), {
        maxIconWidthProportion: 1,
        maxIconHeightProportion: 1
      }),
      backgroundColorProperty: new Property('white'),
      tandem: tandem
    };
    super(() => new IntroModel(Substance.WATER, true, tandem.createTandem('model')), model => new IntroScreenView(model, false,
    // hasMoreTools
    2,
    // indexOfRefractionDecimals

    // createLaserControlPanel
    introModel => new LaserTypeAquaRadioButtonGroup(introModel.laserViewProperty), {
      tandem: tandem.createTandem('view')
    }), options);
  }
}
bendingLight.register('IntroScreen', IntroScreen);
export default IntroScreen;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQcm9wZXJ0eSIsIlNjcmVlbiIsIlNjcmVlbkljb24iLCJJbWFnZSIsImludHJvU2NyZWVuX3BuZyIsIkJlbmRpbmdMaWdodFN0cmluZ3MiLCJiZW5kaW5nTGlnaHQiLCJTdWJzdGFuY2UiLCJJbnRyb01vZGVsIiwiSW50cm9TY3JlZW5WaWV3IiwiTGFzZXJUeXBlQXF1YVJhZGlvQnV0dG9uR3JvdXAiLCJJbnRyb1NjcmVlbiIsImNvbnN0cnVjdG9yIiwidGFuZGVtIiwib3B0aW9ucyIsIm5hbWUiLCJpbnRyb1N0cmluZ1Byb3BlcnR5IiwiaG9tZVNjcmVlbkljb24iLCJtYXhJY29uV2lkdGhQcm9wb3J0aW9uIiwibWF4SWNvbkhlaWdodFByb3BvcnRpb24iLCJiYWNrZ3JvdW5kQ29sb3JQcm9wZXJ0eSIsIldBVEVSIiwiY3JlYXRlVGFuZGVtIiwibW9kZWwiLCJpbnRyb01vZGVsIiwibGFzZXJWaWV3UHJvcGVydHkiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIkludHJvU2NyZWVuLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE1LTIwMjIsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIFRoZSAnSW50cm8nIHNjcmVlbi5cclxuICpcclxuICogQGF1dGhvciBTYW0gUmVpZCAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcclxuICogQGF1dGhvciBDaGFuZHJhc2hla2FyIEJlbWFnb25pIChBY3R1YWwgQ29uY2VwdHMpXHJcbiAqL1xyXG5cclxuaW1wb3J0IFByb3BlcnR5IGZyb20gJy4uLy4uLy4uL2F4b24vanMvUHJvcGVydHkuanMnO1xyXG5pbXBvcnQgU2NyZWVuIGZyb20gJy4uLy4uLy4uL2pvaXN0L2pzL1NjcmVlbi5qcyc7XHJcbmltcG9ydCBTY3JlZW5JY29uIGZyb20gJy4uLy4uLy4uL2pvaXN0L2pzL1NjcmVlbkljb24uanMnO1xyXG5pbXBvcnQgeyBJbWFnZSB9IGZyb20gJy4uLy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XHJcbmltcG9ydCBpbnRyb1NjcmVlbl9wbmcgZnJvbSAnLi4vLi4vbWlwbWFwcy9pbnRyb1NjcmVlbl9wbmcuanMnO1xyXG5pbXBvcnQgQmVuZGluZ0xpZ2h0U3RyaW5ncyBmcm9tICcuLi9CZW5kaW5nTGlnaHRTdHJpbmdzLmpzJztcclxuaW1wb3J0IGJlbmRpbmdMaWdodCBmcm9tICcuLi9iZW5kaW5nTGlnaHQuanMnO1xyXG5pbXBvcnQgU3Vic3RhbmNlIGZyb20gJy4uL2NvbW1vbi9tb2RlbC9TdWJzdGFuY2UuanMnO1xyXG5pbXBvcnQgSW50cm9Nb2RlbCBmcm9tICcuL21vZGVsL0ludHJvTW9kZWwuanMnO1xyXG5pbXBvcnQgSW50cm9TY3JlZW5WaWV3IGZyb20gJy4vdmlldy9JbnRyb1NjcmVlblZpZXcuanMnO1xyXG5pbXBvcnQgTGFzZXJUeXBlQXF1YVJhZGlvQnV0dG9uR3JvdXAgZnJvbSAnLi92aWV3L0xhc2VyVHlwZUFxdWFSYWRpb0J1dHRvbkdyb3VwLmpzJztcclxuaW1wb3J0IFRhbmRlbSBmcm9tICcuLi8uLi8uLi90YW5kZW0vanMvVGFuZGVtLmpzJztcclxuaW1wb3J0IEJlbmRpbmdMaWdodE1vZGVsIGZyb20gJy4uL2NvbW1vbi9tb2RlbC9CZW5kaW5nTGlnaHRNb2RlbC5qcyc7XHJcblxyXG5jbGFzcyBJbnRyb1NjcmVlbiBleHRlbmRzIFNjcmVlbjxJbnRyb01vZGVsLCBJbnRyb1NjcmVlblZpZXc+IHtcclxuXHJcbiAgcHJpdmF0ZSBjb25zdHJ1Y3RvciggdGFuZGVtOiBUYW5kZW0gKSB7XHJcblxyXG4gICAgY29uc3Qgb3B0aW9ucyA9IHtcclxuICAgICAgbmFtZTogQmVuZGluZ0xpZ2h0U3RyaW5ncy5pbnRyb1N0cmluZ1Byb3BlcnR5LFxyXG4gICAgICBob21lU2NyZWVuSWNvbjogbmV3IFNjcmVlbkljb24oIG5ldyBJbWFnZSggaW50cm9TY3JlZW5fcG5nICksIHtcclxuICAgICAgICBtYXhJY29uV2lkdGhQcm9wb3J0aW9uOiAxLFxyXG4gICAgICAgIG1heEljb25IZWlnaHRQcm9wb3J0aW9uOiAxXHJcbiAgICAgIH0gKSxcclxuICAgICAgYmFja2dyb3VuZENvbG9yUHJvcGVydHk6IG5ldyBQcm9wZXJ0eSggJ3doaXRlJyApLFxyXG4gICAgICB0YW5kZW06IHRhbmRlbVxyXG4gICAgfTtcclxuXHJcbiAgICBzdXBlcihcclxuICAgICAgKCkgPT4gbmV3IEludHJvTW9kZWwoIFN1YnN0YW5jZS5XQVRFUiwgdHJ1ZSwgdGFuZGVtLmNyZWF0ZVRhbmRlbSggJ21vZGVsJyApICksXHJcbiAgICAgIG1vZGVsID0+IG5ldyBJbnRyb1NjcmVlblZpZXcoIG1vZGVsLFxyXG4gICAgICAgIGZhbHNlLCAvLyBoYXNNb3JlVG9vbHNcclxuICAgICAgICAyLCAvLyBpbmRleE9mUmVmcmFjdGlvbkRlY2ltYWxzXHJcblxyXG4gICAgICAgIC8vIGNyZWF0ZUxhc2VyQ29udHJvbFBhbmVsXHJcbiAgICAgICAgKCBpbnRyb01vZGVsOiBCZW5kaW5nTGlnaHRNb2RlbCApID0+IG5ldyBMYXNlclR5cGVBcXVhUmFkaW9CdXR0b25Hcm91cCggaW50cm9Nb2RlbC5sYXNlclZpZXdQcm9wZXJ0eSApLCB7XHJcbiAgICAgICAgICB0YW5kZW06IHRhbmRlbS5jcmVhdGVUYW5kZW0oICd2aWV3JyApXHJcbiAgICAgICAgfSApLFxyXG4gICAgICBvcHRpb25zICk7XHJcbiAgfVxyXG59XHJcblxyXG5iZW5kaW5nTGlnaHQucmVnaXN0ZXIoICdJbnRyb1NjcmVlbicsIEludHJvU2NyZWVuICk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBJbnRyb1NjcmVlbjsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxRQUFRLE1BQU0sOEJBQThCO0FBQ25ELE9BQU9DLE1BQU0sTUFBTSw2QkFBNkI7QUFDaEQsT0FBT0MsVUFBVSxNQUFNLGlDQUFpQztBQUN4RCxTQUFTQyxLQUFLLFFBQVEsZ0NBQWdDO0FBQ3RELE9BQU9DLGVBQWUsTUFBTSxrQ0FBa0M7QUFDOUQsT0FBT0MsbUJBQW1CLE1BQU0sMkJBQTJCO0FBQzNELE9BQU9DLFlBQVksTUFBTSxvQkFBb0I7QUFDN0MsT0FBT0MsU0FBUyxNQUFNLDhCQUE4QjtBQUNwRCxPQUFPQyxVQUFVLE1BQU0sdUJBQXVCO0FBQzlDLE9BQU9DLGVBQWUsTUFBTSwyQkFBMkI7QUFDdkQsT0FBT0MsNkJBQTZCLE1BQU0seUNBQXlDO0FBSW5GLE1BQU1DLFdBQVcsU0FBU1YsTUFBTSxDQUE4QjtFQUVwRFcsV0FBV0EsQ0FBRUMsTUFBYyxFQUFHO0lBRXBDLE1BQU1DLE9BQU8sR0FBRztNQUNkQyxJQUFJLEVBQUVWLG1CQUFtQixDQUFDVyxtQkFBbUI7TUFDN0NDLGNBQWMsRUFBRSxJQUFJZixVQUFVLENBQUUsSUFBSUMsS0FBSyxDQUFFQyxlQUFnQixDQUFDLEVBQUU7UUFDNURjLHNCQUFzQixFQUFFLENBQUM7UUFDekJDLHVCQUF1QixFQUFFO01BQzNCLENBQUUsQ0FBQztNQUNIQyx1QkFBdUIsRUFBRSxJQUFJcEIsUUFBUSxDQUFFLE9BQVEsQ0FBQztNQUNoRGEsTUFBTSxFQUFFQTtJQUNWLENBQUM7SUFFRCxLQUFLLENBQ0gsTUFBTSxJQUFJTCxVQUFVLENBQUVELFNBQVMsQ0FBQ2MsS0FBSyxFQUFFLElBQUksRUFBRVIsTUFBTSxDQUFDUyxZQUFZLENBQUUsT0FBUSxDQUFFLENBQUMsRUFDN0VDLEtBQUssSUFBSSxJQUFJZCxlQUFlLENBQUVjLEtBQUssRUFDakMsS0FBSztJQUFFO0lBQ1AsQ0FBQztJQUFFOztJQUVIO0lBQ0VDLFVBQTZCLElBQU0sSUFBSWQsNkJBQTZCLENBQUVjLFVBQVUsQ0FBQ0MsaUJBQWtCLENBQUMsRUFBRTtNQUN0R1osTUFBTSxFQUFFQSxNQUFNLENBQUNTLFlBQVksQ0FBRSxNQUFPO0lBQ3RDLENBQUUsQ0FBQyxFQUNMUixPQUFRLENBQUM7RUFDYjtBQUNGO0FBRUFSLFlBQVksQ0FBQ29CLFFBQVEsQ0FBRSxhQUFhLEVBQUVmLFdBQVksQ0FBQztBQUVuRCxlQUFlQSxXQUFXIn0=