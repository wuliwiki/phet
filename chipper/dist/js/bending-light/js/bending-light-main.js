// Copyright 2015-2022, University of Colorado Boulder

/**
 * Main entry point for the sim.
 *
 * @author Sam Reid (PhET Interactive Simulations)
 * @author Chandrashekar Bemagoni (Actual Concepts)
 */

import Sim from '../../joist/js/Sim.js';
import simLauncher from '../../joist/js/simLauncher.js';
import Tandem from '../../tandem/js/Tandem.js';
import BendingLightStrings from './BendingLightStrings.js';
import IntroScreen from './intro/IntroScreen.js';
import MoreToolsScreen from './more-tools/MoreToolsScreen.js';
import PrismsScreen from './prisms/PrismsScreen.js';
const bendingLightTitleStringProperty = BendingLightStrings['bending-light'].titleStringProperty;

// constants
const tandem = Tandem.ROOT;
const simOptions = {
  credits: {
    leadDesign: 'Amy Rouinfar (HTML5),  Noah Podolefsky (Java)',
    softwareDevelopment: 'Sam Reid',
    team: 'Trish Loeblein, Ariel Paul, Kathy Perkins',
    qualityAssurance: 'Steele Dalton, Amanda Davis, Bryce Griebenow, Ethan Johnson, Elise Morgan, Oliver Orejola, ' + 'Arnab Purkayastha, Ben Roberts, Bryan Yoelin',
    thanks: 'Thanks to Actual Concepts for working with the PhET development team to convert this simulation to HTML5.'
  },
  webgl: true
};
simLauncher.launch(() => {
  const sim = new Sim(bendingLightTitleStringProperty, [new IntroScreen(tandem.createTandem('introScreen')), new PrismsScreen(tandem.createTandem('prismsScreen')), new MoreToolsScreen(tandem.createTandem('moreToolsScreen'))], simOptions);
  sim.start();
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTaW0iLCJzaW1MYXVuY2hlciIsIlRhbmRlbSIsIkJlbmRpbmdMaWdodFN0cmluZ3MiLCJJbnRyb1NjcmVlbiIsIk1vcmVUb29sc1NjcmVlbiIsIlByaXNtc1NjcmVlbiIsImJlbmRpbmdMaWdodFRpdGxlU3RyaW5nUHJvcGVydHkiLCJ0aXRsZVN0cmluZ1Byb3BlcnR5IiwidGFuZGVtIiwiUk9PVCIsInNpbU9wdGlvbnMiLCJjcmVkaXRzIiwibGVhZERlc2lnbiIsInNvZnR3YXJlRGV2ZWxvcG1lbnQiLCJ0ZWFtIiwicXVhbGl0eUFzc3VyYW5jZSIsInRoYW5rcyIsIndlYmdsIiwibGF1bmNoIiwic2ltIiwiY3JlYXRlVGFuZGVtIiwic3RhcnQiXSwic291cmNlcyI6WyJiZW5kaW5nLWxpZ2h0LW1haW4uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTUtMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogTWFpbiBlbnRyeSBwb2ludCBmb3IgdGhlIHNpbS5cclxuICpcclxuICogQGF1dGhvciBTYW0gUmVpZCAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcclxuICogQGF1dGhvciBDaGFuZHJhc2hla2FyIEJlbWFnb25pIChBY3R1YWwgQ29uY2VwdHMpXHJcbiAqL1xyXG5cclxuaW1wb3J0IFNpbSBmcm9tICcuLi8uLi9qb2lzdC9qcy9TaW0uanMnO1xyXG5pbXBvcnQgc2ltTGF1bmNoZXIgZnJvbSAnLi4vLi4vam9pc3QvanMvc2ltTGF1bmNoZXIuanMnO1xyXG5pbXBvcnQgVGFuZGVtIGZyb20gJy4uLy4uL3RhbmRlbS9qcy9UYW5kZW0uanMnO1xyXG5pbXBvcnQgQmVuZGluZ0xpZ2h0U3RyaW5ncyBmcm9tICcuL0JlbmRpbmdMaWdodFN0cmluZ3MuanMnO1xyXG5pbXBvcnQgSW50cm9TY3JlZW4gZnJvbSAnLi9pbnRyby9JbnRyb1NjcmVlbi5qcyc7XHJcbmltcG9ydCBNb3JlVG9vbHNTY3JlZW4gZnJvbSAnLi9tb3JlLXRvb2xzL01vcmVUb29sc1NjcmVlbi5qcyc7XHJcbmltcG9ydCBQcmlzbXNTY3JlZW4gZnJvbSAnLi9wcmlzbXMvUHJpc21zU2NyZWVuLmpzJztcclxuXHJcbmNvbnN0IGJlbmRpbmdMaWdodFRpdGxlU3RyaW5nUHJvcGVydHkgPSBCZW5kaW5nTGlnaHRTdHJpbmdzWyAnYmVuZGluZy1saWdodCcgXS50aXRsZVN0cmluZ1Byb3BlcnR5O1xyXG5cclxuLy8gY29uc3RhbnRzXHJcbmNvbnN0IHRhbmRlbSA9IFRhbmRlbS5ST09UO1xyXG5cclxuY29uc3Qgc2ltT3B0aW9ucyA9IHtcclxuICBjcmVkaXRzOiB7XHJcbiAgICBsZWFkRGVzaWduOiAnQW15IFJvdWluZmFyIChIVE1MNSksICBOb2FoIFBvZG9sZWZza3kgKEphdmEpJyxcclxuICAgIHNvZnR3YXJlRGV2ZWxvcG1lbnQ6ICdTYW0gUmVpZCcsXHJcbiAgICB0ZWFtOiAnVHJpc2ggTG9lYmxlaW4sIEFyaWVsIFBhdWwsIEthdGh5IFBlcmtpbnMnLFxyXG4gICAgcXVhbGl0eUFzc3VyYW5jZTogJ1N0ZWVsZSBEYWx0b24sIEFtYW5kYSBEYXZpcywgQnJ5Y2UgR3JpZWJlbm93LCBFdGhhbiBKb2huc29uLCBFbGlzZSBNb3JnYW4sIE9saXZlciBPcmVqb2xhLCAnICtcclxuICAgICAgICAgICAgICAgICAgICAgICdBcm5hYiBQdXJrYXlhc3RoYSwgQmVuIFJvYmVydHMsIEJyeWFuIFlvZWxpbicsXHJcbiAgICB0aGFua3M6ICdUaGFua3MgdG8gQWN0dWFsIENvbmNlcHRzIGZvciB3b3JraW5nIHdpdGggdGhlIFBoRVQgZGV2ZWxvcG1lbnQgdGVhbSB0byBjb252ZXJ0IHRoaXMgc2ltdWxhdGlvbiB0byBIVE1MNS4nXHJcbiAgfSxcclxuICB3ZWJnbDogdHJ1ZVxyXG59O1xyXG5cclxuc2ltTGF1bmNoZXIubGF1bmNoKCAoKSA9PiB7XHJcbiAgY29uc3Qgc2ltID0gbmV3IFNpbSggYmVuZGluZ0xpZ2h0VGl0bGVTdHJpbmdQcm9wZXJ0eSwgW1xyXG4gICAgbmV3IEludHJvU2NyZWVuKCB0YW5kZW0uY3JlYXRlVGFuZGVtKCAnaW50cm9TY3JlZW4nICkgKSxcclxuICAgIG5ldyBQcmlzbXNTY3JlZW4oIHRhbmRlbS5jcmVhdGVUYW5kZW0oICdwcmlzbXNTY3JlZW4nICkgKSxcclxuICAgIG5ldyBNb3JlVG9vbHNTY3JlZW4oIHRhbmRlbS5jcmVhdGVUYW5kZW0oICdtb3JlVG9vbHNTY3JlZW4nICkgKVxyXG4gIF0sIHNpbU9wdGlvbnMgKTtcclxuICBzaW0uc3RhcnQoKTtcclxufSApOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLEdBQUcsTUFBTSx1QkFBdUI7QUFDdkMsT0FBT0MsV0FBVyxNQUFNLCtCQUErQjtBQUN2RCxPQUFPQyxNQUFNLE1BQU0sMkJBQTJCO0FBQzlDLE9BQU9DLG1CQUFtQixNQUFNLDBCQUEwQjtBQUMxRCxPQUFPQyxXQUFXLE1BQU0sd0JBQXdCO0FBQ2hELE9BQU9DLGVBQWUsTUFBTSxpQ0FBaUM7QUFDN0QsT0FBT0MsWUFBWSxNQUFNLDBCQUEwQjtBQUVuRCxNQUFNQywrQkFBK0IsR0FBR0osbUJBQW1CLENBQUUsZUFBZSxDQUFFLENBQUNLLG1CQUFtQjs7QUFFbEc7QUFDQSxNQUFNQyxNQUFNLEdBQUdQLE1BQU0sQ0FBQ1EsSUFBSTtBQUUxQixNQUFNQyxVQUFVLEdBQUc7RUFDakJDLE9BQU8sRUFBRTtJQUNQQyxVQUFVLEVBQUUsK0NBQStDO0lBQzNEQyxtQkFBbUIsRUFBRSxVQUFVO0lBQy9CQyxJQUFJLEVBQUUsMkNBQTJDO0lBQ2pEQyxnQkFBZ0IsRUFBRSw2RkFBNkYsR0FDN0YsOENBQThDO0lBQ2hFQyxNQUFNLEVBQUU7RUFDVixDQUFDO0VBQ0RDLEtBQUssRUFBRTtBQUNULENBQUM7QUFFRGpCLFdBQVcsQ0FBQ2tCLE1BQU0sQ0FBRSxNQUFNO0VBQ3hCLE1BQU1DLEdBQUcsR0FBRyxJQUFJcEIsR0FBRyxDQUFFTywrQkFBK0IsRUFBRSxDQUNwRCxJQUFJSCxXQUFXLENBQUVLLE1BQU0sQ0FBQ1ksWUFBWSxDQUFFLGFBQWMsQ0FBRSxDQUFDLEVBQ3ZELElBQUlmLFlBQVksQ0FBRUcsTUFBTSxDQUFDWSxZQUFZLENBQUUsY0FBZSxDQUFFLENBQUMsRUFDekQsSUFBSWhCLGVBQWUsQ0FBRUksTUFBTSxDQUFDWSxZQUFZLENBQUUsaUJBQWtCLENBQUUsQ0FBQyxDQUNoRSxFQUFFVixVQUFXLENBQUM7RUFDZlMsR0FBRyxDQUFDRSxLQUFLLENBQUMsQ0FBQztBQUNiLENBQUUsQ0FBQyJ9