// Copyright 2015-2022, University of Colorado Boulder

/**
 * WaveParticle is to simulate the wave transformation in Canvas mode.
 * WaveParticle has position, width, angle and etc..
 *
 * @author Sam Reid (PhET Interactive Simulations)
 * @author Chandrashekar Bemagoni (Actual Concepts)
 */

import bendingLight from '../../bendingLight.js';
class WaveParticle {
  /**
   * @param position - position of wave particle
   * @param width - width of wave particle
   * @param color - color of wave particle
   * @param particleGradientColor
   * @param angle - angle of wave particle
   * @param waveHeight - height of wave particle
   */
  constructor(position, width, color, particleGradientColor, angle, waveHeight) {
    this.position = position;
    this.width = width;
    this.color = color;
    this.angle = angle;
    this.height = waveHeight;
    this.particleGradientColor = particleGradientColor;
  }

  /**
   * get particle x position
   */
  getX() {
    return this.position.x;
  }

  /**
   * get particle Y position
   */
  getY() {
    return this.position.y;
  }

  /**
   * Set the particle x position
   * @param x - x position in model values
   */
  setX(x) {
    this.position.x = x;
  }

  /**
   * @param y - y position in model values
   */
  setY(y) {
    this.position.y = y;
  }
}
bendingLight.register('WaveParticle', WaveParticle);
export default WaveParticle;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJiZW5kaW5nTGlnaHQiLCJXYXZlUGFydGljbGUiLCJjb25zdHJ1Y3RvciIsInBvc2l0aW9uIiwid2lkdGgiLCJjb2xvciIsInBhcnRpY2xlR3JhZGllbnRDb2xvciIsImFuZ2xlIiwid2F2ZUhlaWdodCIsImhlaWdodCIsImdldFgiLCJ4IiwiZ2V0WSIsInkiLCJzZXRYIiwic2V0WSIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiV2F2ZVBhcnRpY2xlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE1LTIwMjIsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIFdhdmVQYXJ0aWNsZSBpcyB0byBzaW11bGF0ZSB0aGUgd2F2ZSB0cmFuc2Zvcm1hdGlvbiBpbiBDYW52YXMgbW9kZS5cclxuICogV2F2ZVBhcnRpY2xlIGhhcyBwb3NpdGlvbiwgd2lkdGgsIGFuZ2xlIGFuZCBldGMuLlxyXG4gKlxyXG4gKiBAYXV0aG9yIFNhbSBSZWlkIChQaEVUIEludGVyYWN0aXZlIFNpbXVsYXRpb25zKVxyXG4gKiBAYXV0aG9yIENoYW5kcmFzaGVrYXIgQmVtYWdvbmkgKEFjdHVhbCBDb25jZXB0cylcclxuICovXHJcblxyXG5pbXBvcnQgVmVjdG9yMiBmcm9tICcuLi8uLi8uLi8uLi9kb3QvanMvVmVjdG9yMi5qcyc7XHJcbmltcG9ydCBiZW5kaW5nTGlnaHQgZnJvbSAnLi4vLi4vYmVuZGluZ0xpZ2h0LmpzJztcclxuXHJcbmNsYXNzIFdhdmVQYXJ0aWNsZSB7XHJcbiAgcHJpdmF0ZSByZWFkb25seSBwb3NpdGlvbjogVmVjdG9yMjtcclxuICBwcml2YXRlIHJlYWRvbmx5IHdpZHRoOiBudW1iZXI7XHJcbiAgcHVibGljIHJlYWRvbmx5IGNvbG9yOiBzdHJpbmc7XHJcbiAgcHVibGljIHJlYWRvbmx5IGFuZ2xlOiBudW1iZXI7XHJcbiAgcHVibGljIHJlYWRvbmx5IGhlaWdodDogbnVtYmVyO1xyXG4gIHB1YmxpYyByZWFkb25seSBwYXJ0aWNsZUdyYWRpZW50Q29sb3I6IHN0cmluZztcclxuXHJcbiAgLyoqXHJcbiAgICogQHBhcmFtIHBvc2l0aW9uIC0gcG9zaXRpb24gb2Ygd2F2ZSBwYXJ0aWNsZVxyXG4gICAqIEBwYXJhbSB3aWR0aCAtIHdpZHRoIG9mIHdhdmUgcGFydGljbGVcclxuICAgKiBAcGFyYW0gY29sb3IgLSBjb2xvciBvZiB3YXZlIHBhcnRpY2xlXHJcbiAgICogQHBhcmFtIHBhcnRpY2xlR3JhZGllbnRDb2xvclxyXG4gICAqIEBwYXJhbSBhbmdsZSAtIGFuZ2xlIG9mIHdhdmUgcGFydGljbGVcclxuICAgKiBAcGFyYW0gd2F2ZUhlaWdodCAtIGhlaWdodCBvZiB3YXZlIHBhcnRpY2xlXHJcbiAgICovXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKCBwb3NpdGlvbjogVmVjdG9yMiwgd2lkdGg6IG51bWJlciwgY29sb3I6IHN0cmluZywgcGFydGljbGVHcmFkaWVudENvbG9yOiBzdHJpbmcsIGFuZ2xlOiBudW1iZXIsIHdhdmVIZWlnaHQ6IG51bWJlciApIHtcclxuICAgIHRoaXMucG9zaXRpb24gPSBwb3NpdGlvbjtcclxuICAgIHRoaXMud2lkdGggPSB3aWR0aDtcclxuICAgIHRoaXMuY29sb3IgPSBjb2xvcjtcclxuICAgIHRoaXMuYW5nbGUgPSBhbmdsZTtcclxuICAgIHRoaXMuaGVpZ2h0ID0gd2F2ZUhlaWdodDtcclxuICAgIHRoaXMucGFydGljbGVHcmFkaWVudENvbG9yID0gcGFydGljbGVHcmFkaWVudENvbG9yO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogZ2V0IHBhcnRpY2xlIHggcG9zaXRpb25cclxuICAgKi9cclxuICBwdWJsaWMgZ2V0WCgpOiBudW1iZXIge1xyXG4gICAgcmV0dXJuIHRoaXMucG9zaXRpb24ueDtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIGdldCBwYXJ0aWNsZSBZIHBvc2l0aW9uXHJcbiAgICovXHJcbiAgcHVibGljIGdldFkoKTogbnVtYmVyIHtcclxuICAgIHJldHVybiB0aGlzLnBvc2l0aW9uLnk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBTZXQgdGhlIHBhcnRpY2xlIHggcG9zaXRpb25cclxuICAgKiBAcGFyYW0geCAtIHggcG9zaXRpb24gaW4gbW9kZWwgdmFsdWVzXHJcbiAgICovXHJcbiAgcHVibGljIHNldFgoIHg6IG51bWJlciApOiB2b2lkIHtcclxuICAgIHRoaXMucG9zaXRpb24ueCA9IHg7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBAcGFyYW0geSAtIHkgcG9zaXRpb24gaW4gbW9kZWwgdmFsdWVzXHJcbiAgICovXHJcbiAgcHVibGljIHNldFkoIHk6IG51bWJlciApOiB2b2lkIHtcclxuICAgIHRoaXMucG9zaXRpb24ueSA9IHk7XHJcbiAgfVxyXG59XHJcblxyXG5iZW5kaW5nTGlnaHQucmVnaXN0ZXIoICdXYXZlUGFydGljbGUnLCBXYXZlUGFydGljbGUgKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFdhdmVQYXJ0aWNsZTsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUdBLE9BQU9BLFlBQVksTUFBTSx1QkFBdUI7QUFFaEQsTUFBTUMsWUFBWSxDQUFDO0VBUWpCO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7RUFDU0MsV0FBV0EsQ0FBRUMsUUFBaUIsRUFBRUMsS0FBYSxFQUFFQyxLQUFhLEVBQUVDLHFCQUE2QixFQUFFQyxLQUFhLEVBQUVDLFVBQWtCLEVBQUc7SUFDdEksSUFBSSxDQUFDTCxRQUFRLEdBQUdBLFFBQVE7SUFDeEIsSUFBSSxDQUFDQyxLQUFLLEdBQUdBLEtBQUs7SUFDbEIsSUFBSSxDQUFDQyxLQUFLLEdBQUdBLEtBQUs7SUFDbEIsSUFBSSxDQUFDRSxLQUFLLEdBQUdBLEtBQUs7SUFDbEIsSUFBSSxDQUFDRSxNQUFNLEdBQUdELFVBQVU7SUFDeEIsSUFBSSxDQUFDRixxQkFBcUIsR0FBR0EscUJBQXFCO0VBQ3BEOztFQUVBO0FBQ0Y7QUFDQTtFQUNTSSxJQUFJQSxDQUFBLEVBQVc7SUFDcEIsT0FBTyxJQUFJLENBQUNQLFFBQVEsQ0FBQ1EsQ0FBQztFQUN4Qjs7RUFFQTtBQUNGO0FBQ0E7RUFDU0MsSUFBSUEsQ0FBQSxFQUFXO0lBQ3BCLE9BQU8sSUFBSSxDQUFDVCxRQUFRLENBQUNVLENBQUM7RUFDeEI7O0VBRUE7QUFDRjtBQUNBO0FBQ0E7RUFDU0MsSUFBSUEsQ0FBRUgsQ0FBUyxFQUFTO0lBQzdCLElBQUksQ0FBQ1IsUUFBUSxDQUFDUSxDQUFDLEdBQUdBLENBQUM7RUFDckI7O0VBRUE7QUFDRjtBQUNBO0VBQ1NJLElBQUlBLENBQUVGLENBQVMsRUFBUztJQUM3QixJQUFJLENBQUNWLFFBQVEsQ0FBQ1UsQ0FBQyxHQUFHQSxDQUFDO0VBQ3JCO0FBQ0Y7QUFFQWIsWUFBWSxDQUFDZ0IsUUFBUSxDQUFFLGNBQWMsRUFBRWYsWUFBYSxDQUFDO0FBRXJELGVBQWVBLFlBQVkifQ==