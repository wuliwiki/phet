// Copyright 2015-2022, University of Colorado Boulder

/**
 * The 'more tools' screen
 *
 * @author Sam Reid (PhET Interactive Simulations)
 * @author Chandrashekar Bemagoni (Actual Concepts)
 */

import Property from '../../../axon/js/Property.js';
import Screen from '../../../joist/js/Screen.js';
import ScreenIcon from '../../../joist/js/ScreenIcon.js';
import { Image } from '../../../scenery/js/imports.js';
import moreToolsScreen_png from '../../mipmaps/moreToolsScreen_png.js';
import BendingLightStrings from '../BendingLightStrings.js';
import bendingLight from '../bendingLight.js';
import MoreToolsModel from './model/MoreToolsModel.js';
import MoreToolsScreenView from './view/MoreToolsScreenView.js';
class MoreToolsScreen extends Screen {
  constructor(tandem) {
    const options = {
      name: BendingLightStrings.moreToolsStringProperty,
      homeScreenIcon: new ScreenIcon(new Image(moreToolsScreen_png), {
        maxIconWidthProportion: 1,
        maxIconHeightProportion: 1
      }),
      backgroundColorProperty: new Property('white'),
      tandem: tandem
    };
    super(() => new MoreToolsModel(tandem.createTandem('model')), model => new MoreToolsScreenView(model, {
      tandem: options.tandem.createTandem('view')
    }), options);
  }
}
bendingLight.register('MoreToolsScreen', MoreToolsScreen);
export default MoreToolsScreen;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQcm9wZXJ0eSIsIlNjcmVlbiIsIlNjcmVlbkljb24iLCJJbWFnZSIsIm1vcmVUb29sc1NjcmVlbl9wbmciLCJCZW5kaW5nTGlnaHRTdHJpbmdzIiwiYmVuZGluZ0xpZ2h0IiwiTW9yZVRvb2xzTW9kZWwiLCJNb3JlVG9vbHNTY3JlZW5WaWV3IiwiTW9yZVRvb2xzU2NyZWVuIiwiY29uc3RydWN0b3IiLCJ0YW5kZW0iLCJvcHRpb25zIiwibmFtZSIsIm1vcmVUb29sc1N0cmluZ1Byb3BlcnR5IiwiaG9tZVNjcmVlbkljb24iLCJtYXhJY29uV2lkdGhQcm9wb3J0aW9uIiwibWF4SWNvbkhlaWdodFByb3BvcnRpb24iLCJiYWNrZ3JvdW5kQ29sb3JQcm9wZXJ0eSIsImNyZWF0ZVRhbmRlbSIsIm1vZGVsIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJNb3JlVG9vbHNTY3JlZW4udHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTUtMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogVGhlICdtb3JlIHRvb2xzJyBzY3JlZW5cclxuICpcclxuICogQGF1dGhvciBTYW0gUmVpZCAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcclxuICogQGF1dGhvciBDaGFuZHJhc2hla2FyIEJlbWFnb25pIChBY3R1YWwgQ29uY2VwdHMpXHJcbiAqL1xyXG5cclxuaW1wb3J0IFByb3BlcnR5IGZyb20gJy4uLy4uLy4uL2F4b24vanMvUHJvcGVydHkuanMnO1xyXG5pbXBvcnQgU2NyZWVuLCB7IFNjcmVlbk9wdGlvbnMgfSBmcm9tICcuLi8uLi8uLi9qb2lzdC9qcy9TY3JlZW4uanMnO1xyXG5pbXBvcnQgU2NyZWVuSWNvbiBmcm9tICcuLi8uLi8uLi9qb2lzdC9qcy9TY3JlZW5JY29uLmpzJztcclxuaW1wb3J0IHsgSW1hZ2UgfSBmcm9tICcuLi8uLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgbW9yZVRvb2xzU2NyZWVuX3BuZyBmcm9tICcuLi8uLi9taXBtYXBzL21vcmVUb29sc1NjcmVlbl9wbmcuanMnO1xyXG5pbXBvcnQgQmVuZGluZ0xpZ2h0U3RyaW5ncyBmcm9tICcuLi9CZW5kaW5nTGlnaHRTdHJpbmdzLmpzJztcclxuaW1wb3J0IGJlbmRpbmdMaWdodCBmcm9tICcuLi9iZW5kaW5nTGlnaHQuanMnO1xyXG5pbXBvcnQgTW9yZVRvb2xzTW9kZWwgZnJvbSAnLi9tb2RlbC9Nb3JlVG9vbHNNb2RlbC5qcyc7XHJcbmltcG9ydCBNb3JlVG9vbHNTY3JlZW5WaWV3IGZyb20gJy4vdmlldy9Nb3JlVG9vbHNTY3JlZW5WaWV3LmpzJztcclxuaW1wb3J0IFRhbmRlbSBmcm9tICcuLi8uLi8uLi90YW5kZW0vanMvVGFuZGVtLmpzJztcclxuXHJcbmNsYXNzIE1vcmVUb29sc1NjcmVlbiBleHRlbmRzIFNjcmVlbjxNb3JlVG9vbHNNb2RlbCwgTW9yZVRvb2xzU2NyZWVuVmlldz4ge1xyXG4gIHByaXZhdGUgY29uc3RydWN0b3IoIHRhbmRlbTogVGFuZGVtICkge1xyXG5cclxuICAgIGNvbnN0IG9wdGlvbnM6IFNjcmVlbk9wdGlvbnMgPSB7XHJcbiAgICAgIG5hbWU6IEJlbmRpbmdMaWdodFN0cmluZ3MubW9yZVRvb2xzU3RyaW5nUHJvcGVydHksXHJcblxyXG4gICAgICBob21lU2NyZWVuSWNvbjogbmV3IFNjcmVlbkljb24oIG5ldyBJbWFnZSggbW9yZVRvb2xzU2NyZWVuX3BuZyApLCB7XHJcbiAgICAgICAgbWF4SWNvbldpZHRoUHJvcG9ydGlvbjogMSxcclxuICAgICAgICBtYXhJY29uSGVpZ2h0UHJvcG9ydGlvbjogMVxyXG4gICAgICB9ICksXHJcbiAgICAgIGJhY2tncm91bmRDb2xvclByb3BlcnR5OiBuZXcgUHJvcGVydHkoICd3aGl0ZScgKSxcclxuICAgICAgdGFuZGVtOiB0YW5kZW1cclxuICAgIH07XHJcblxyXG4gICAgc3VwZXIoXHJcbiAgICAgICgpID0+IG5ldyBNb3JlVG9vbHNNb2RlbCggdGFuZGVtLmNyZWF0ZVRhbmRlbSggJ21vZGVsJyApICksXHJcbiAgICAgIG1vZGVsID0+IG5ldyBNb3JlVG9vbHNTY3JlZW5WaWV3KCBtb2RlbCwge1xyXG4gICAgICAgIHRhbmRlbTogb3B0aW9ucy50YW5kZW0uY3JlYXRlVGFuZGVtKCAndmlldycgKVxyXG4gICAgICB9ICksXHJcbiAgICAgIG9wdGlvbnNcclxuICAgICk7XHJcbiAgfVxyXG59XHJcblxyXG5iZW5kaW5nTGlnaHQucmVnaXN0ZXIoICdNb3JlVG9vbHNTY3JlZW4nLCBNb3JlVG9vbHNTY3JlZW4gKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IE1vcmVUb29sc1NjcmVlbjsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxRQUFRLE1BQU0sOEJBQThCO0FBQ25ELE9BQU9DLE1BQU0sTUFBeUIsNkJBQTZCO0FBQ25FLE9BQU9DLFVBQVUsTUFBTSxpQ0FBaUM7QUFDeEQsU0FBU0MsS0FBSyxRQUFRLGdDQUFnQztBQUN0RCxPQUFPQyxtQkFBbUIsTUFBTSxzQ0FBc0M7QUFDdEUsT0FBT0MsbUJBQW1CLE1BQU0sMkJBQTJCO0FBQzNELE9BQU9DLFlBQVksTUFBTSxvQkFBb0I7QUFDN0MsT0FBT0MsY0FBYyxNQUFNLDJCQUEyQjtBQUN0RCxPQUFPQyxtQkFBbUIsTUFBTSwrQkFBK0I7QUFHL0QsTUFBTUMsZUFBZSxTQUFTUixNQUFNLENBQXNDO0VBQ2hFUyxXQUFXQSxDQUFFQyxNQUFjLEVBQUc7SUFFcEMsTUFBTUMsT0FBc0IsR0FBRztNQUM3QkMsSUFBSSxFQUFFUixtQkFBbUIsQ0FBQ1MsdUJBQXVCO01BRWpEQyxjQUFjLEVBQUUsSUFBSWIsVUFBVSxDQUFFLElBQUlDLEtBQUssQ0FBRUMsbUJBQW9CLENBQUMsRUFBRTtRQUNoRVksc0JBQXNCLEVBQUUsQ0FBQztRQUN6QkMsdUJBQXVCLEVBQUU7TUFDM0IsQ0FBRSxDQUFDO01BQ0hDLHVCQUF1QixFQUFFLElBQUlsQixRQUFRLENBQUUsT0FBUSxDQUFDO01BQ2hEVyxNQUFNLEVBQUVBO0lBQ1YsQ0FBQztJQUVELEtBQUssQ0FDSCxNQUFNLElBQUlKLGNBQWMsQ0FBRUksTUFBTSxDQUFDUSxZQUFZLENBQUUsT0FBUSxDQUFFLENBQUMsRUFDMURDLEtBQUssSUFBSSxJQUFJWixtQkFBbUIsQ0FBRVksS0FBSyxFQUFFO01BQ3ZDVCxNQUFNLEVBQUVDLE9BQU8sQ0FBQ0QsTUFBTSxDQUFDUSxZQUFZLENBQUUsTUFBTztJQUM5QyxDQUFFLENBQUMsRUFDSFAsT0FDRixDQUFDO0VBQ0g7QUFDRjtBQUVBTixZQUFZLENBQUNlLFFBQVEsQ0FBRSxpQkFBaUIsRUFBRVosZUFBZ0IsQ0FBQztBQUUzRCxlQUFlQSxlQUFlIn0=