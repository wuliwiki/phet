// Copyright 2022-2023, University of Colorado Boulder

/**
 * NumberSuiteCommonQueryParameters defines query parameters that are specific to Number Suite sims.
 *
 * @author Chris Klusendorf (PhET Interactive Simulations)
 */

import numberSuiteCommon from '../numberSuiteCommon.js';
const NumberSuiteCommonQueryParameters = QueryStringMachine.getAll({
  // whether the current number on the 'Ten' and 'Twenty' screens or the compare statement on the 'Compare' screen
  // should be spoken aloud when their value changes.
  autoHear: {
    public: true,
    type: 'flag'
  },
  // specifies a second locale to make available on the 'Ten', 'Twenty', and 'Compare' screens. Values are specified
  // with a locale code, e.g. "en" or "zh_CN".
  secondLocale: {
    public: true,
    type: 'string',
    isValidValue: locale => locale === null ||
    // default value
    !!locale && phet.chipper.strings.hasOwnProperty(locale) &&
    // This part is valuable if you tried this query parameter on the _en.html version
    Object.keys(phet.chipper.strings).length > 1,
    defaultValue: null
  },
  // whether the paper ones are visible on the 'Lab' screen
  showLabOnes: {
    public: true,
    type: 'boolean',
    defaultValue: true
  }
});
numberSuiteCommon.register('NumberSuiteCommonQueryParameters', NumberSuiteCommonQueryParameters);
export default NumberSuiteCommonQueryParameters;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJudW1iZXJTdWl0ZUNvbW1vbiIsIk51bWJlclN1aXRlQ29tbW9uUXVlcnlQYXJhbWV0ZXJzIiwiUXVlcnlTdHJpbmdNYWNoaW5lIiwiZ2V0QWxsIiwiYXV0b0hlYXIiLCJwdWJsaWMiLCJ0eXBlIiwic2Vjb25kTG9jYWxlIiwiaXNWYWxpZFZhbHVlIiwibG9jYWxlIiwicGhldCIsImNoaXBwZXIiLCJzdHJpbmdzIiwiaGFzT3duUHJvcGVydHkiLCJPYmplY3QiLCJrZXlzIiwibGVuZ3RoIiwiZGVmYXVsdFZhbHVlIiwic2hvd0xhYk9uZXMiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIk51bWJlclN1aXRlQ29tbW9uUXVlcnlQYXJhbWV0ZXJzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIyLTIwMjMsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIE51bWJlclN1aXRlQ29tbW9uUXVlcnlQYXJhbWV0ZXJzIGRlZmluZXMgcXVlcnkgcGFyYW1ldGVycyB0aGF0IGFyZSBzcGVjaWZpYyB0byBOdW1iZXIgU3VpdGUgc2ltcy5cclxuICpcclxuICogQGF1dGhvciBDaHJpcyBLbHVzZW5kb3JmIChQaEVUIEludGVyYWN0aXZlIFNpbXVsYXRpb25zKVxyXG4gKi9cclxuXHJcbmltcG9ydCBudW1iZXJTdWl0ZUNvbW1vbiBmcm9tICcuLi9udW1iZXJTdWl0ZUNvbW1vbi5qcyc7XHJcblxyXG5jb25zdCBOdW1iZXJTdWl0ZUNvbW1vblF1ZXJ5UGFyYW1ldGVycyA9IFF1ZXJ5U3RyaW5nTWFjaGluZS5nZXRBbGwoIHtcclxuXHJcbiAgLy8gd2hldGhlciB0aGUgY3VycmVudCBudW1iZXIgb24gdGhlICdUZW4nIGFuZCAnVHdlbnR5JyBzY3JlZW5zIG9yIHRoZSBjb21wYXJlIHN0YXRlbWVudCBvbiB0aGUgJ0NvbXBhcmUnIHNjcmVlblxyXG4gIC8vIHNob3VsZCBiZSBzcG9rZW4gYWxvdWQgd2hlbiB0aGVpciB2YWx1ZSBjaGFuZ2VzLlxyXG4gIGF1dG9IZWFyOiB7XHJcbiAgICBwdWJsaWM6IHRydWUsXHJcbiAgICB0eXBlOiAnZmxhZydcclxuICB9LFxyXG5cclxuICAvLyBzcGVjaWZpZXMgYSBzZWNvbmQgbG9jYWxlIHRvIG1ha2UgYXZhaWxhYmxlIG9uIHRoZSAnVGVuJywgJ1R3ZW50eScsIGFuZCAnQ29tcGFyZScgc2NyZWVucy4gVmFsdWVzIGFyZSBzcGVjaWZpZWRcclxuICAvLyB3aXRoIGEgbG9jYWxlIGNvZGUsIGUuZy4gXCJlblwiIG9yIFwiemhfQ05cIi5cclxuICBzZWNvbmRMb2NhbGU6IHtcclxuICAgIHB1YmxpYzogdHJ1ZSxcclxuICAgIHR5cGU6ICdzdHJpbmcnLFxyXG4gICAgaXNWYWxpZFZhbHVlOiBsb2NhbGUgPT4gbG9jYWxlID09PSBudWxsIHx8IC8vIGRlZmF1bHQgdmFsdWVcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICggISFsb2NhbGUgJiYgcGhldC5jaGlwcGVyLnN0cmluZ3MuaGFzT3duUHJvcGVydHkoIGxvY2FsZSApICYmXHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBUaGlzIHBhcnQgaXMgdmFsdWFibGUgaWYgeW91IHRyaWVkIHRoaXMgcXVlcnkgcGFyYW1ldGVyIG9uIHRoZSBfZW4uaHRtbCB2ZXJzaW9uXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE9iamVjdC5rZXlzKCBwaGV0LmNoaXBwZXIuc3RyaW5ncyApLmxlbmd0aCA+IDEgKSxcclxuICAgIGRlZmF1bHRWYWx1ZTogbnVsbFxyXG4gIH0sXHJcblxyXG4gIC8vIHdoZXRoZXIgdGhlIHBhcGVyIG9uZXMgYXJlIHZpc2libGUgb24gdGhlICdMYWInIHNjcmVlblxyXG4gIHNob3dMYWJPbmVzOiB7XHJcbiAgICBwdWJsaWM6IHRydWUsXHJcbiAgICB0eXBlOiAnYm9vbGVhbicsXHJcbiAgICBkZWZhdWx0VmFsdWU6IHRydWVcclxuICB9XHJcbn0gKTtcclxuXHJcbm51bWJlclN1aXRlQ29tbW9uLnJlZ2lzdGVyKCAnTnVtYmVyU3VpdGVDb21tb25RdWVyeVBhcmFtZXRlcnMnLCBOdW1iZXJTdWl0ZUNvbW1vblF1ZXJ5UGFyYW1ldGVycyApO1xyXG5leHBvcnQgZGVmYXVsdCBOdW1iZXJTdWl0ZUNvbW1vblF1ZXJ5UGFyYW1ldGVyczsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsaUJBQWlCLE1BQU0seUJBQXlCO0FBRXZELE1BQU1DLGdDQUFnQyxHQUFHQyxrQkFBa0IsQ0FBQ0MsTUFBTSxDQUFFO0VBRWxFO0VBQ0E7RUFDQUMsUUFBUSxFQUFFO0lBQ1JDLE1BQU0sRUFBRSxJQUFJO0lBQ1pDLElBQUksRUFBRTtFQUNSLENBQUM7RUFFRDtFQUNBO0VBQ0FDLFlBQVksRUFBRTtJQUNaRixNQUFNLEVBQUUsSUFBSTtJQUNaQyxJQUFJLEVBQUUsUUFBUTtJQUNkRSxZQUFZLEVBQUVDLE1BQU0sSUFBSUEsTUFBTSxLQUFLLElBQUk7SUFBSTtJQUNqQixDQUFDLENBQUNBLE1BQU0sSUFBSUMsSUFBSSxDQUFDQyxPQUFPLENBQUNDLE9BQU8sQ0FBQ0MsY0FBYyxDQUFFSixNQUFPLENBQUM7SUFFekQ7SUFDQUssTUFBTSxDQUFDQyxJQUFJLENBQUVMLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxPQUFRLENBQUMsQ0FBQ0ksTUFBTSxHQUFHLENBQUc7SUFDMUVDLFlBQVksRUFBRTtFQUNoQixDQUFDO0VBRUQ7RUFDQUMsV0FBVyxFQUFFO0lBQ1hiLE1BQU0sRUFBRSxJQUFJO0lBQ1pDLElBQUksRUFBRSxTQUFTO0lBQ2ZXLFlBQVksRUFBRTtFQUNoQjtBQUNGLENBQUUsQ0FBQztBQUVIakIsaUJBQWlCLENBQUNtQixRQUFRLENBQUUsa0NBQWtDLEVBQUVsQixnQ0FBaUMsQ0FBQztBQUNsRyxlQUFlQSxnQ0FBZ0MifQ==