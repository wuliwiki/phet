// Copyright 2021-2023, University of Colorado Boulder

/**
 * A button that speaks the speech data of the provided NumberSuiteCommonUtteranceQueue when pressed.
 *
 * @author Chris Klusendorf (PhET Interactive Simulations)
 */

import Dimension2 from '../../../../dot/js/Dimension2.js';
import { Color, Path } from '../../../../scenery/js/imports.js';
import bullhornSolidShape from '../../../../sherpa/js/fontawesome-5/bullhornSolidShape.js';
import RectangularPushButton from '../../../../sun/js/buttons/RectangularPushButton.js';
import numberSuiteCommon from '../../numberSuiteCommon.js';
import optionize from '../../../../phet-core/js/optionize.js';
import BooleanProperty from '../../../../axon/js/BooleanProperty.js';
import PhetColorScheme from '../../../../scenery-phet/js/PhetColorScheme.js';
import audioManager from '../../../../joist/js/audioManager.js';
import DerivedProperty from '../../../../axon/js/DerivedProperty.js';
import NumberSuiteCommonConstants from '../NumberSuiteCommonConstants.js';
// constants
const SIDE_LENGTH = NumberSuiteCommonConstants.BUTTON_LENGTH;
class SpeechSynthesisButton extends RectangularPushButton {
  constructor(speechSynthesisAnnouncer, utteranceQueue, providedOptions) {
    const options = optionize()({
      comparisonSignsAndTextVisibleProperty: new BooleanProperty(true)
    }, providedOptions);
    super({
      content: new Path(bullhornSolidShape, {
        fill: Color.BLACK
      }),
      size: new Dimension2(SIDE_LENGTH, SIDE_LENGTH),
      baseColor: PhetColorScheme.BUTTON_YELLOW,
      listener: () => utteranceQueue.speakSpeechData(),
      enabledProperty: new DerivedProperty([audioManager.audioEnabledProperty, options.comparisonSignsAndTextVisibleProperty, speechSynthesisAnnouncer.hasVoiceProperty], (audioEnabled, comparisonSignsAndTextVisible, hasVoice) => audioEnabled && comparisonSignsAndTextVisible && hasVoice)
    });
  }
}
numberSuiteCommon.register('SpeechSynthesisButton', SpeechSynthesisButton);
export default SpeechSynthesisButton;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJEaW1lbnNpb24yIiwiQ29sb3IiLCJQYXRoIiwiYnVsbGhvcm5Tb2xpZFNoYXBlIiwiUmVjdGFuZ3VsYXJQdXNoQnV0dG9uIiwibnVtYmVyU3VpdGVDb21tb24iLCJvcHRpb25pemUiLCJCb29sZWFuUHJvcGVydHkiLCJQaGV0Q29sb3JTY2hlbWUiLCJhdWRpb01hbmFnZXIiLCJEZXJpdmVkUHJvcGVydHkiLCJOdW1iZXJTdWl0ZUNvbW1vbkNvbnN0YW50cyIsIlNJREVfTEVOR1RIIiwiQlVUVE9OX0xFTkdUSCIsIlNwZWVjaFN5bnRoZXNpc0J1dHRvbiIsImNvbnN0cnVjdG9yIiwic3BlZWNoU3ludGhlc2lzQW5ub3VuY2VyIiwidXR0ZXJhbmNlUXVldWUiLCJwcm92aWRlZE9wdGlvbnMiLCJvcHRpb25zIiwiY29tcGFyaXNvblNpZ25zQW5kVGV4dFZpc2libGVQcm9wZXJ0eSIsImNvbnRlbnQiLCJmaWxsIiwiQkxBQ0siLCJzaXplIiwiYmFzZUNvbG9yIiwiQlVUVE9OX1lFTExPVyIsImxpc3RlbmVyIiwic3BlYWtTcGVlY2hEYXRhIiwiZW5hYmxlZFByb3BlcnR5IiwiYXVkaW9FbmFibGVkUHJvcGVydHkiLCJoYXNWb2ljZVByb3BlcnR5IiwiYXVkaW9FbmFibGVkIiwiY29tcGFyaXNvblNpZ25zQW5kVGV4dFZpc2libGUiLCJoYXNWb2ljZSIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiU3BlZWNoU3ludGhlc2lzQnV0dG9uLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjMsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIEEgYnV0dG9uIHRoYXQgc3BlYWtzIHRoZSBzcGVlY2ggZGF0YSBvZiB0aGUgcHJvdmlkZWQgTnVtYmVyU3VpdGVDb21tb25VdHRlcmFuY2VRdWV1ZSB3aGVuIHByZXNzZWQuXHJcbiAqXHJcbiAqIEBhdXRob3IgQ2hyaXMgS2x1c2VuZG9yZiAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcclxuICovXHJcblxyXG5pbXBvcnQgRGltZW5zaW9uMiBmcm9tICcuLi8uLi8uLi8uLi9kb3QvanMvRGltZW5zaW9uMi5qcyc7XHJcbmltcG9ydCB7IENvbG9yLCBQYXRoIH0gZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IGJ1bGxob3JuU29saWRTaGFwZSBmcm9tICcuLi8uLi8uLi8uLi9zaGVycGEvanMvZm9udGF3ZXNvbWUtNS9idWxsaG9yblNvbGlkU2hhcGUuanMnO1xyXG5pbXBvcnQgUmVjdGFuZ3VsYXJQdXNoQnV0dG9uIGZyb20gJy4uLy4uLy4uLy4uL3N1bi9qcy9idXR0b25zL1JlY3Rhbmd1bGFyUHVzaEJ1dHRvbi5qcyc7XHJcbmltcG9ydCBudW1iZXJTdWl0ZUNvbW1vbiBmcm9tICcuLi8uLi9udW1iZXJTdWl0ZUNvbW1vbi5qcyc7XHJcbmltcG9ydCBUUmVhZE9ubHlQcm9wZXJ0eSBmcm9tICcuLi8uLi8uLi8uLi9heG9uL2pzL1RSZWFkT25seVByb3BlcnR5LmpzJztcclxuaW1wb3J0IG9wdGlvbml6ZSBmcm9tICcuLi8uLi8uLi8uLi9waGV0LWNvcmUvanMvb3B0aW9uaXplLmpzJztcclxuaW1wb3J0IE51bWJlclN1aXRlQ29tbW9uU3BlZWNoU3ludGhlc2lzQW5ub3VuY2VyIGZyb20gJy4vTnVtYmVyU3VpdGVDb21tb25TcGVlY2hTeW50aGVzaXNBbm5vdW5jZXIuanMnO1xyXG5pbXBvcnQgQm9vbGVhblByb3BlcnR5IGZyb20gJy4uLy4uLy4uLy4uL2F4b24vanMvQm9vbGVhblByb3BlcnR5LmpzJztcclxuaW1wb3J0IFBoZXRDb2xvclNjaGVtZSBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5LXBoZXQvanMvUGhldENvbG9yU2NoZW1lLmpzJztcclxuaW1wb3J0IGF1ZGlvTWFuYWdlciBmcm9tICcuLi8uLi8uLi8uLi9qb2lzdC9qcy9hdWRpb01hbmFnZXIuanMnO1xyXG5pbXBvcnQgTnVtYmVyU3VpdGVDb21tb25VdHRlcmFuY2VRdWV1ZSBmcm9tICcuL051bWJlclN1aXRlQ29tbW9uVXR0ZXJhbmNlUXVldWUuanMnO1xyXG5pbXBvcnQgRGVyaXZlZFByb3BlcnR5IGZyb20gJy4uLy4uLy4uLy4uL2F4b24vanMvRGVyaXZlZFByb3BlcnR5LmpzJztcclxuaW1wb3J0IE51bWJlclN1aXRlQ29tbW9uQ29uc3RhbnRzIGZyb20gJy4uL051bWJlclN1aXRlQ29tbW9uQ29uc3RhbnRzLmpzJztcclxuXHJcbnR5cGUgU2VsZk9wdGlvbnMgPSB7XHJcbiAgY29tcGFyaXNvblNpZ25zQW5kVGV4dFZpc2libGVQcm9wZXJ0eT86IFRSZWFkT25seVByb3BlcnR5PGJvb2xlYW4+O1xyXG59O1xyXG5leHBvcnQgdHlwZSBTcGVlY2hTeW50aGVzaXNCdXR0b25PcHRpb25zID0gU2VsZk9wdGlvbnM7XHJcblxyXG4vLyBjb25zdGFudHNcclxuY29uc3QgU0lERV9MRU5HVEggPSBOdW1iZXJTdWl0ZUNvbW1vbkNvbnN0YW50cy5CVVRUT05fTEVOR1RIO1xyXG5cclxuY2xhc3MgU3BlZWNoU3ludGhlc2lzQnV0dG9uIGV4dGVuZHMgUmVjdGFuZ3VsYXJQdXNoQnV0dG9uIHtcclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKFxyXG4gICAgc3BlZWNoU3ludGhlc2lzQW5ub3VuY2VyOiBOdW1iZXJTdWl0ZUNvbW1vblNwZWVjaFN5bnRoZXNpc0Fubm91bmNlcixcclxuICAgIHV0dGVyYW5jZVF1ZXVlOiBOdW1iZXJTdWl0ZUNvbW1vblV0dGVyYW5jZVF1ZXVlLFxyXG4gICAgcHJvdmlkZWRPcHRpb25zPzogU3BlZWNoU3ludGhlc2lzQnV0dG9uT3B0aW9ucyApIHtcclxuXHJcbiAgICBjb25zdCBvcHRpb25zID0gb3B0aW9uaXplPFNwZWVjaFN5bnRoZXNpc0J1dHRvbk9wdGlvbnMsIFNlbGZPcHRpb25zPigpKCB7XHJcbiAgICAgIGNvbXBhcmlzb25TaWduc0FuZFRleHRWaXNpYmxlUHJvcGVydHk6IG5ldyBCb29sZWFuUHJvcGVydHkoIHRydWUgKVxyXG4gICAgfSwgcHJvdmlkZWRPcHRpb25zICk7XHJcblxyXG4gICAgc3VwZXIoIHtcclxuICAgICAgY29udGVudDogbmV3IFBhdGgoIGJ1bGxob3JuU29saWRTaGFwZSwge1xyXG4gICAgICAgIGZpbGw6IENvbG9yLkJMQUNLXHJcbiAgICAgIH0gKSxcclxuICAgICAgc2l6ZTogbmV3IERpbWVuc2lvbjIoIFNJREVfTEVOR1RILCBTSURFX0xFTkdUSCApLFxyXG4gICAgICBiYXNlQ29sb3I6IFBoZXRDb2xvclNjaGVtZS5CVVRUT05fWUVMTE9XLFxyXG4gICAgICBsaXN0ZW5lcjogKCkgPT4gdXR0ZXJhbmNlUXVldWUuc3BlYWtTcGVlY2hEYXRhKCksXHJcbiAgICAgIGVuYWJsZWRQcm9wZXJ0eTogbmV3IERlcml2ZWRQcm9wZXJ0eSggW1xyXG4gICAgICAgIGF1ZGlvTWFuYWdlci5hdWRpb0VuYWJsZWRQcm9wZXJ0eSxcclxuICAgICAgICBvcHRpb25zLmNvbXBhcmlzb25TaWduc0FuZFRleHRWaXNpYmxlUHJvcGVydHksXHJcbiAgICAgICAgc3BlZWNoU3ludGhlc2lzQW5ub3VuY2VyLmhhc1ZvaWNlUHJvcGVydHlcclxuICAgICAgXSwgKCBhdWRpb0VuYWJsZWQsIGNvbXBhcmlzb25TaWduc0FuZFRleHRWaXNpYmxlLCBoYXNWb2ljZSApID0+XHJcbiAgICAgICAgYXVkaW9FbmFibGVkICYmIGNvbXBhcmlzb25TaWduc0FuZFRleHRWaXNpYmxlICYmIGhhc1ZvaWNlIClcclxuICAgIH0gKTtcclxuICB9XHJcbn1cclxuXHJcbm51bWJlclN1aXRlQ29tbW9uLnJlZ2lzdGVyKCAnU3BlZWNoU3ludGhlc2lzQnV0dG9uJywgU3BlZWNoU3ludGhlc2lzQnV0dG9uICk7XHJcbmV4cG9ydCBkZWZhdWx0IFNwZWVjaFN5bnRoZXNpc0J1dHRvbjsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsVUFBVSxNQUFNLGtDQUFrQztBQUN6RCxTQUFTQyxLQUFLLEVBQUVDLElBQUksUUFBUSxtQ0FBbUM7QUFDL0QsT0FBT0Msa0JBQWtCLE1BQU0sMkRBQTJEO0FBQzFGLE9BQU9DLHFCQUFxQixNQUFNLHFEQUFxRDtBQUN2RixPQUFPQyxpQkFBaUIsTUFBTSw0QkFBNEI7QUFFMUQsT0FBT0MsU0FBUyxNQUFNLHVDQUF1QztBQUU3RCxPQUFPQyxlQUFlLE1BQU0sd0NBQXdDO0FBQ3BFLE9BQU9DLGVBQWUsTUFBTSxnREFBZ0Q7QUFDNUUsT0FBT0MsWUFBWSxNQUFNLHNDQUFzQztBQUUvRCxPQUFPQyxlQUFlLE1BQU0sd0NBQXdDO0FBQ3BFLE9BQU9DLDBCQUEwQixNQUFNLGtDQUFrQztBQU96RTtBQUNBLE1BQU1DLFdBQVcsR0FBR0QsMEJBQTBCLENBQUNFLGFBQWE7QUFFNUQsTUFBTUMscUJBQXFCLFNBQVNWLHFCQUFxQixDQUFDO0VBRWpEVyxXQUFXQSxDQUNoQkMsd0JBQW1FLEVBQ25FQyxjQUErQyxFQUMvQ0MsZUFBOEMsRUFBRztJQUVqRCxNQUFNQyxPQUFPLEdBQUdiLFNBQVMsQ0FBNEMsQ0FBQyxDQUFFO01BQ3RFYyxxQ0FBcUMsRUFBRSxJQUFJYixlQUFlLENBQUUsSUFBSztJQUNuRSxDQUFDLEVBQUVXLGVBQWdCLENBQUM7SUFFcEIsS0FBSyxDQUFFO01BQ0xHLE9BQU8sRUFBRSxJQUFJbkIsSUFBSSxDQUFFQyxrQkFBa0IsRUFBRTtRQUNyQ21CLElBQUksRUFBRXJCLEtBQUssQ0FBQ3NCO01BQ2QsQ0FBRSxDQUFDO01BQ0hDLElBQUksRUFBRSxJQUFJeEIsVUFBVSxDQUFFWSxXQUFXLEVBQUVBLFdBQVksQ0FBQztNQUNoRGEsU0FBUyxFQUFFakIsZUFBZSxDQUFDa0IsYUFBYTtNQUN4Q0MsUUFBUSxFQUFFQSxDQUFBLEtBQU1WLGNBQWMsQ0FBQ1csZUFBZSxDQUFDLENBQUM7TUFDaERDLGVBQWUsRUFBRSxJQUFJbkIsZUFBZSxDQUFFLENBQ3BDRCxZQUFZLENBQUNxQixvQkFBb0IsRUFDakNYLE9BQU8sQ0FBQ0MscUNBQXFDLEVBQzdDSix3QkFBd0IsQ0FBQ2UsZ0JBQWdCLENBQzFDLEVBQUUsQ0FBRUMsWUFBWSxFQUFFQyw2QkFBNkIsRUFBRUMsUUFBUSxLQUN4REYsWUFBWSxJQUFJQyw2QkFBNkIsSUFBSUMsUUFBUztJQUM5RCxDQUFFLENBQUM7RUFDTDtBQUNGO0FBRUE3QixpQkFBaUIsQ0FBQzhCLFFBQVEsQ0FBRSx1QkFBdUIsRUFBRXJCLHFCQUFzQixDQUFDO0FBQzVFLGVBQWVBLHFCQUFxQiJ9