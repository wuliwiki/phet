// Copyright 2022-2023, University of Colorado Boulder

/**
 * Message dialog displayed when the NoVoiceWarningButton is pressed that warns users that there are no voices for the
 * selected language.
 *
 * @author Chris Klusendorf (PhET Interactive Simulations)
 */

import DerivedProperty from '../../../../axon/js/DerivedProperty.js';
import OopsDialog from '../../../../scenery-phet/js/OopsDialog.js';
import PhetFont from '../../../../scenery-phet/js/PhetFont.js';
import { Color, Node, Path } from '../../../../scenery/js/imports.js';
import exclamationTriangleSolidShape from '../../../../sherpa/js/fontawesome-5/exclamationTriangleSolidShape.js';
import numberSuiteCommon from '../../numberSuiteCommon.js';
import NumberSuiteCommonStrings from '../../NumberSuiteCommonStrings.js';
class NoVoiceWarningDialog extends OopsDialog {
  constructor() {
    const messageProperty = new DerivedProperty([NumberSuiteCommonStrings.noVoiceFoundDescriptionStringProperty, NumberSuiteCommonStrings.yourDeviceMaySupportDescriptionStringProperty], (noVoiceFoundDescriptionString, yourDeviceMaySupportDescription) => {
      return `<br>${noVoiceFoundDescriptionString}<br><br>${yourDeviceMaySupportDescription}`;
    });
    super(messageProperty, {
      richTextOptions: {
        font: new PhetFont(18)
      },
      title: new Path(exclamationTriangleSolidShape, {
        fill: new Color(240, 79, 79),
        maxWidth: 35
      }),
      iconNode: new Node()
    });
  }
}
numberSuiteCommon.register('NoVoiceWarningDialog', NoVoiceWarningDialog);
export default NoVoiceWarningDialog;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJEZXJpdmVkUHJvcGVydHkiLCJPb3BzRGlhbG9nIiwiUGhldEZvbnQiLCJDb2xvciIsIk5vZGUiLCJQYXRoIiwiZXhjbGFtYXRpb25UcmlhbmdsZVNvbGlkU2hhcGUiLCJudW1iZXJTdWl0ZUNvbW1vbiIsIk51bWJlclN1aXRlQ29tbW9uU3RyaW5ncyIsIk5vVm9pY2VXYXJuaW5nRGlhbG9nIiwiY29uc3RydWN0b3IiLCJtZXNzYWdlUHJvcGVydHkiLCJub1ZvaWNlRm91bmREZXNjcmlwdGlvblN0cmluZ1Byb3BlcnR5IiwieW91ckRldmljZU1heVN1cHBvcnREZXNjcmlwdGlvblN0cmluZ1Byb3BlcnR5Iiwibm9Wb2ljZUZvdW5kRGVzY3JpcHRpb25TdHJpbmciLCJ5b3VyRGV2aWNlTWF5U3VwcG9ydERlc2NyaXB0aW9uIiwicmljaFRleHRPcHRpb25zIiwiZm9udCIsInRpdGxlIiwiZmlsbCIsIm1heFdpZHRoIiwiaWNvbk5vZGUiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIk5vVm9pY2VXYXJuaW5nRGlhbG9nLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIyLTIwMjMsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIE1lc3NhZ2UgZGlhbG9nIGRpc3BsYXllZCB3aGVuIHRoZSBOb1ZvaWNlV2FybmluZ0J1dHRvbiBpcyBwcmVzc2VkIHRoYXQgd2FybnMgdXNlcnMgdGhhdCB0aGVyZSBhcmUgbm8gdm9pY2VzIGZvciB0aGVcclxuICogc2VsZWN0ZWQgbGFuZ3VhZ2UuXHJcbiAqXHJcbiAqIEBhdXRob3IgQ2hyaXMgS2x1c2VuZG9yZiAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcclxuICovXHJcblxyXG5pbXBvcnQgRGVyaXZlZFByb3BlcnR5IGZyb20gJy4uLy4uLy4uLy4uL2F4b24vanMvRGVyaXZlZFByb3BlcnR5LmpzJztcclxuaW1wb3J0IE9vcHNEaWFsb2cgZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS1waGV0L2pzL09vcHNEaWFsb2cuanMnO1xyXG5pbXBvcnQgUGhldEZvbnQgZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS1waGV0L2pzL1BoZXRGb250LmpzJztcclxuaW1wb3J0IHsgQ29sb3IsIE5vZGUsIFBhdGggfSBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgZXhjbGFtYXRpb25UcmlhbmdsZVNvbGlkU2hhcGUgZnJvbSAnLi4vLi4vLi4vLi4vc2hlcnBhL2pzL2ZvbnRhd2Vzb21lLTUvZXhjbGFtYXRpb25UcmlhbmdsZVNvbGlkU2hhcGUuanMnO1xyXG5pbXBvcnQgbnVtYmVyU3VpdGVDb21tb24gZnJvbSAnLi4vLi4vbnVtYmVyU3VpdGVDb21tb24uanMnO1xyXG5pbXBvcnQgTnVtYmVyU3VpdGVDb21tb25TdHJpbmdzIGZyb20gJy4uLy4uL051bWJlclN1aXRlQ29tbW9uU3RyaW5ncy5qcyc7XHJcblxyXG5jbGFzcyBOb1ZvaWNlV2FybmluZ0RpYWxvZyBleHRlbmRzIE9vcHNEaWFsb2cge1xyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoKSB7XHJcblxyXG4gICAgY29uc3QgbWVzc2FnZVByb3BlcnR5ID0gbmV3IERlcml2ZWRQcm9wZXJ0eSggW1xyXG4gICAgICAgIE51bWJlclN1aXRlQ29tbW9uU3RyaW5ncy5ub1ZvaWNlRm91bmREZXNjcmlwdGlvblN0cmluZ1Byb3BlcnR5LFxyXG4gICAgICAgIE51bWJlclN1aXRlQ29tbW9uU3RyaW5ncy55b3VyRGV2aWNlTWF5U3VwcG9ydERlc2NyaXB0aW9uU3RyaW5nUHJvcGVydHkgXSxcclxuICAgICAgKCBub1ZvaWNlRm91bmREZXNjcmlwdGlvblN0cmluZywgeW91ckRldmljZU1heVN1cHBvcnREZXNjcmlwdGlvbiApID0+IHtcclxuICAgICAgICByZXR1cm4gYDxicj4ke25vVm9pY2VGb3VuZERlc2NyaXB0aW9uU3RyaW5nfTxicj48YnI+JHt5b3VyRGV2aWNlTWF5U3VwcG9ydERlc2NyaXB0aW9ufWA7XHJcbiAgICAgIH0gKTtcclxuXHJcbiAgICBzdXBlciggbWVzc2FnZVByb3BlcnR5LCB7XHJcbiAgICAgIHJpY2hUZXh0T3B0aW9uczoge1xyXG4gICAgICAgIGZvbnQ6IG5ldyBQaGV0Rm9udCggMTggKVxyXG4gICAgICB9LFxyXG4gICAgICB0aXRsZTogbmV3IFBhdGgoIGV4Y2xhbWF0aW9uVHJpYW5nbGVTb2xpZFNoYXBlLCB7XHJcbiAgICAgICAgZmlsbDogbmV3IENvbG9yKCAyNDAsIDc5LCA3OSApLFxyXG4gICAgICAgIG1heFdpZHRoOiAzNVxyXG4gICAgICB9ICksXHJcbiAgICAgIGljb25Ob2RlOiBuZXcgTm9kZSgpXHJcbiAgICB9ICk7XHJcbiAgfVxyXG59XHJcblxyXG5udW1iZXJTdWl0ZUNvbW1vbi5yZWdpc3RlciggJ05vVm9pY2VXYXJuaW5nRGlhbG9nJywgTm9Wb2ljZVdhcm5pbmdEaWFsb2cgKTtcclxuZXhwb3J0IGRlZmF1bHQgTm9Wb2ljZVdhcm5pbmdEaWFsb2c7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsZUFBZSxNQUFNLHdDQUF3QztBQUNwRSxPQUFPQyxVQUFVLE1BQU0sMkNBQTJDO0FBQ2xFLE9BQU9DLFFBQVEsTUFBTSx5Q0FBeUM7QUFDOUQsU0FBU0MsS0FBSyxFQUFFQyxJQUFJLEVBQUVDLElBQUksUUFBUSxtQ0FBbUM7QUFDckUsT0FBT0MsNkJBQTZCLE1BQU0sc0VBQXNFO0FBQ2hILE9BQU9DLGlCQUFpQixNQUFNLDRCQUE0QjtBQUMxRCxPQUFPQyx3QkFBd0IsTUFBTSxtQ0FBbUM7QUFFeEUsTUFBTUMsb0JBQW9CLFNBQVNSLFVBQVUsQ0FBQztFQUVyQ1MsV0FBV0EsQ0FBQSxFQUFHO0lBRW5CLE1BQU1DLGVBQWUsR0FBRyxJQUFJWCxlQUFlLENBQUUsQ0FDekNRLHdCQUF3QixDQUFDSSxxQ0FBcUMsRUFDOURKLHdCQUF3QixDQUFDSyw2Q0FBNkMsQ0FBRSxFQUMxRSxDQUFFQyw2QkFBNkIsRUFBRUMsK0JBQStCLEtBQU07TUFDcEUsT0FBUSxPQUFNRCw2QkFBOEIsV0FBVUMsK0JBQWdDLEVBQUM7SUFDekYsQ0FBRSxDQUFDO0lBRUwsS0FBSyxDQUFFSixlQUFlLEVBQUU7TUFDdEJLLGVBQWUsRUFBRTtRQUNmQyxJQUFJLEVBQUUsSUFBSWYsUUFBUSxDQUFFLEVBQUc7TUFDekIsQ0FBQztNQUNEZ0IsS0FBSyxFQUFFLElBQUliLElBQUksQ0FBRUMsNkJBQTZCLEVBQUU7UUFDOUNhLElBQUksRUFBRSxJQUFJaEIsS0FBSyxDQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsRUFBRyxDQUFDO1FBQzlCaUIsUUFBUSxFQUFFO01BQ1osQ0FBRSxDQUFDO01BQ0hDLFFBQVEsRUFBRSxJQUFJakIsSUFBSSxDQUFDO0lBQ3JCLENBQUUsQ0FBQztFQUNMO0FBQ0Y7QUFFQUcsaUJBQWlCLENBQUNlLFFBQVEsQ0FBRSxzQkFBc0IsRUFBRWIsb0JBQXFCLENBQUM7QUFDMUUsZUFBZUEsb0JBQW9CIn0=