// Copyright 2013-2022, University of Colorado Boulder

/**
 * Supertype for overlays that display colored shapes (updated every frame).
 *
 * @author Jonathan Olson <jonathan.olson@colorado.edu>
 */

import { scenery, svgns } from '../imports.js';
export default class ShapeBasedOverlay {
  constructor(display, rootNode, name) {
    this.display = display;
    this.rootNode = rootNode;
    const svg = document.createElementNS(svgns, 'svg');
    svg.style.position = 'absolute';
    svg.setAttribute('class', name);
    svg.style.top = '0';
    svg.style.left = '0';
    // @ts-expect-error
    svg.style['pointer-events'] = 'none';
    this.svg = svg;
    function resize(width, height) {
      svg.setAttribute('width', '' + width);
      svg.setAttribute('height', '' + height);
      svg.style.clip = `rect(0px,${width}px,${height}px,0px)`;
    }
    display.sizeProperty.link(dimension => {
      resize(dimension.width, dimension.height);
    });
    this.domElement = svg;
  }
  addShape(shape, color, isOffset) {
    const path = document.createElementNS(svgns, 'path');
    let svgPath = shape.getSVGPath();

    // temporary workaround for https://bugs.webkit.org/show_bug.cgi?id=78980
    // and http://code.google.com/p/chromium/issues/detail?id=231626 where even removing
    // the attribute can cause this bug
    if (!svgPath) {
      svgPath = 'M0 0';
    }
    if (svgPath) {
      // only set the SVG path if it's not the empty string
      path.setAttribute('d', svgPath);
    } else if (path.hasAttribute('d')) {
      path.removeAttribute('d');
    }
    path.setAttribute('style', `fill: none; stroke: ${color}; stroke-dasharray: 5, 3; stroke-dashoffset: ${isOffset ? 5 : 0}; stroke-width: 3;`);
    this.svg.appendChild(path);
  }
  update() {
    while (this.svg.childNodes.length) {
      this.svg.removeChild(this.svg.childNodes[this.svg.childNodes.length - 1]);
    }
    this.addShapes();
  }
  /**
   * Releases references
   */
  dispose() {
    // Nothing to dispose
  }
}
scenery.register('ShapeBasedOverlay', ShapeBasedOverlay);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJzY2VuZXJ5Iiwic3ZnbnMiLCJTaGFwZUJhc2VkT3ZlcmxheSIsImNvbnN0cnVjdG9yIiwiZGlzcGxheSIsInJvb3ROb2RlIiwibmFtZSIsInN2ZyIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudE5TIiwic3R5bGUiLCJwb3NpdGlvbiIsInNldEF0dHJpYnV0ZSIsInRvcCIsImxlZnQiLCJyZXNpemUiLCJ3aWR0aCIsImhlaWdodCIsImNsaXAiLCJzaXplUHJvcGVydHkiLCJsaW5rIiwiZGltZW5zaW9uIiwiZG9tRWxlbWVudCIsImFkZFNoYXBlIiwic2hhcGUiLCJjb2xvciIsImlzT2Zmc2V0IiwicGF0aCIsInN2Z1BhdGgiLCJnZXRTVkdQYXRoIiwiaGFzQXR0cmlidXRlIiwicmVtb3ZlQXR0cmlidXRlIiwiYXBwZW5kQ2hpbGQiLCJ1cGRhdGUiLCJjaGlsZE5vZGVzIiwibGVuZ3RoIiwicmVtb3ZlQ2hpbGQiLCJhZGRTaGFwZXMiLCJkaXNwb3NlIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJTaGFwZUJhc2VkT3ZlcmxheS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxMy0yMDIyLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBTdXBlcnR5cGUgZm9yIG92ZXJsYXlzIHRoYXQgZGlzcGxheSBjb2xvcmVkIHNoYXBlcyAodXBkYXRlZCBldmVyeSBmcmFtZSkuXHJcbiAqXHJcbiAqIEBhdXRob3IgSm9uYXRoYW4gT2xzb24gPGpvbmF0aGFuLm9sc29uQGNvbG9yYWRvLmVkdT5cclxuICovXHJcblxyXG5pbXBvcnQgeyBTaGFwZSB9IGZyb20gJy4uLy4uLy4uL2tpdGUvanMvaW1wb3J0cy5qcyc7XHJcbmltcG9ydCB7IERpc3BsYXksIFRPdmVybGF5LCBOb2RlLCBzY2VuZXJ5LCBzdmducyB9IGZyb20gJy4uL2ltcG9ydHMuanMnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgYWJzdHJhY3QgY2xhc3MgU2hhcGVCYXNlZE92ZXJsYXkgaW1wbGVtZW50cyBUT3ZlcmxheSB7XHJcblxyXG4gIHByb3RlY3RlZCBkaXNwbGF5OiBEaXNwbGF5O1xyXG4gIHByb3RlY3RlZCByb290Tm9kZTogTm9kZTtcclxuICBwcm90ZWN0ZWQgc3ZnOiBTVkdFbGVtZW50O1xyXG4gIHB1YmxpYyBkb21FbGVtZW50OiBTVkdFbGVtZW50O1xyXG5cclxuICBwcm90ZWN0ZWQgY29uc3RydWN0b3IoIGRpc3BsYXk6IERpc3BsYXksIHJvb3ROb2RlOiBOb2RlLCBuYW1lOiBzdHJpbmcgKSB7XHJcbiAgICB0aGlzLmRpc3BsYXkgPSBkaXNwbGF5O1xyXG4gICAgdGhpcy5yb290Tm9kZSA9IHJvb3ROb2RlO1xyXG5cclxuICAgIGNvbnN0IHN2ZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyggc3ZnbnMsICdzdmcnICk7XHJcbiAgICBzdmcuc3R5bGUucG9zaXRpb24gPSAnYWJzb2x1dGUnO1xyXG4gICAgc3ZnLnNldEF0dHJpYnV0ZSggJ2NsYXNzJywgbmFtZSApO1xyXG4gICAgc3ZnLnN0eWxlLnRvcCA9ICcwJztcclxuICAgIHN2Zy5zdHlsZS5sZWZ0ID0gJzAnO1xyXG4gICAgLy8gQHRzLWV4cGVjdC1lcnJvclxyXG4gICAgc3ZnLnN0eWxlWyAncG9pbnRlci1ldmVudHMnIF0gPSAnbm9uZSc7XHJcbiAgICB0aGlzLnN2ZyA9IHN2ZztcclxuXHJcbiAgICBmdW5jdGlvbiByZXNpemUoIHdpZHRoOiBudW1iZXIsIGhlaWdodDogbnVtYmVyICk6IHZvaWQge1xyXG4gICAgICBzdmcuc2V0QXR0cmlidXRlKCAnd2lkdGgnLCAnJyArIHdpZHRoICk7XHJcbiAgICAgIHN2Zy5zZXRBdHRyaWJ1dGUoICdoZWlnaHQnLCAnJyArIGhlaWdodCApO1xyXG4gICAgICBzdmcuc3R5bGUuY2xpcCA9IGByZWN0KDBweCwke3dpZHRofXB4LCR7aGVpZ2h0fXB4LDBweClgO1xyXG4gICAgfVxyXG5cclxuICAgIGRpc3BsYXkuc2l6ZVByb3BlcnR5LmxpbmsoIGRpbWVuc2lvbiA9PiB7XHJcbiAgICAgIHJlc2l6ZSggZGltZW5zaW9uLndpZHRoLCBkaW1lbnNpb24uaGVpZ2h0ICk7XHJcbiAgICB9ICk7XHJcblxyXG4gICAgdGhpcy5kb21FbGVtZW50ID0gc3ZnO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGFkZFNoYXBlKCBzaGFwZTogU2hhcGUsIGNvbG9yOiBzdHJpbmcsIGlzT2Zmc2V0OiBib29sZWFuICk6IHZvaWQge1xyXG4gICAgY29uc3QgcGF0aCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyggc3ZnbnMsICdwYXRoJyApO1xyXG4gICAgbGV0IHN2Z1BhdGggPSBzaGFwZS5nZXRTVkdQYXRoKCk7XHJcblxyXG4gICAgLy8gdGVtcG9yYXJ5IHdvcmthcm91bmQgZm9yIGh0dHBzOi8vYnVncy53ZWJraXQub3JnL3Nob3dfYnVnLmNnaT9pZD03ODk4MFxyXG4gICAgLy8gYW5kIGh0dHA6Ly9jb2RlLmdvb2dsZS5jb20vcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTIzMTYyNiB3aGVyZSBldmVuIHJlbW92aW5nXHJcbiAgICAvLyB0aGUgYXR0cmlidXRlIGNhbiBjYXVzZSB0aGlzIGJ1Z1xyXG4gICAgaWYgKCAhc3ZnUGF0aCApIHsgc3ZnUGF0aCA9ICdNMCAwJzsgfVxyXG5cclxuICAgIGlmICggc3ZnUGF0aCApIHtcclxuICAgICAgLy8gb25seSBzZXQgdGhlIFNWRyBwYXRoIGlmIGl0J3Mgbm90IHRoZSBlbXB0eSBzdHJpbmdcclxuICAgICAgcGF0aC5zZXRBdHRyaWJ1dGUoICdkJywgc3ZnUGF0aCApO1xyXG4gICAgfVxyXG4gICAgZWxzZSBpZiAoIHBhdGguaGFzQXR0cmlidXRlKCAnZCcgKSApIHtcclxuICAgICAgcGF0aC5yZW1vdmVBdHRyaWJ1dGUoICdkJyApO1xyXG4gICAgfVxyXG5cclxuICAgIHBhdGguc2V0QXR0cmlidXRlKCAnc3R5bGUnLCBgZmlsbDogbm9uZTsgc3Ryb2tlOiAke2NvbG9yfTsgc3Ryb2tlLWRhc2hhcnJheTogNSwgMzsgc3Ryb2tlLWRhc2hvZmZzZXQ6ICR7aXNPZmZzZXQgPyA1IDogMH07IHN0cm9rZS13aWR0aDogMztgICk7XHJcbiAgICB0aGlzLnN2Zy5hcHBlbmRDaGlsZCggcGF0aCApO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIHVwZGF0ZSgpOiB2b2lkIHtcclxuICAgIHdoaWxlICggdGhpcy5zdmcuY2hpbGROb2Rlcy5sZW5ndGggKSB7XHJcbiAgICAgIHRoaXMuc3ZnLnJlbW92ZUNoaWxkKCB0aGlzLnN2Zy5jaGlsZE5vZGVzWyB0aGlzLnN2Zy5jaGlsZE5vZGVzLmxlbmd0aCAtIDEgXSApO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuYWRkU2hhcGVzKCk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgYWJzdHJhY3QgYWRkU2hhcGVzKCk6IHZvaWQ7XHJcblxyXG4gIC8qKlxyXG4gICAqIFJlbGVhc2VzIHJlZmVyZW5jZXNcclxuICAgKi9cclxuICBwdWJsaWMgZGlzcG9zZSgpOiB2b2lkIHtcclxuICAvLyBOb3RoaW5nIHRvIGRpc3Bvc2VcclxuICB9XHJcbn1cclxuXHJcbnNjZW5lcnkucmVnaXN0ZXIoICdTaGFwZUJhc2VkT3ZlcmxheScsIFNoYXBlQmFzZWRPdmVybGF5ICk7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFHQSxTQUFrQ0EsT0FBTyxFQUFFQyxLQUFLLFFBQVEsZUFBZTtBQUV2RSxlQUFlLE1BQWVDLGlCQUFpQixDQUFxQjtFQU94REMsV0FBV0EsQ0FBRUMsT0FBZ0IsRUFBRUMsUUFBYyxFQUFFQyxJQUFZLEVBQUc7SUFDdEUsSUFBSSxDQUFDRixPQUFPLEdBQUdBLE9BQU87SUFDdEIsSUFBSSxDQUFDQyxRQUFRLEdBQUdBLFFBQVE7SUFFeEIsTUFBTUUsR0FBRyxHQUFHQyxRQUFRLENBQUNDLGVBQWUsQ0FBRVIsS0FBSyxFQUFFLEtBQU0sQ0FBQztJQUNwRE0sR0FBRyxDQUFDRyxLQUFLLENBQUNDLFFBQVEsR0FB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