// Copyright 2016-2022, University of Colorado Boulder

/**
 * SVG drawable for Path nodes.
 *
 * @author Jonathan Olson <jonathan.olson@colorado.edu>
 */

import platform from '../../../../phet-core/js/platform.js';
import Poolable from '../../../../phet-core/js/Poolable.js';
import { PathStatefulDrawable, scenery, svgns, SVGSelfDrawable } from '../../imports.js';

// TODO: change this based on memory and performance characteristics of the platform
const keepSVGPathElements = true; // whether we should pool SVG elements for the SVG rendering states, or whether we should free them when possible for memory

class PathSVGDrawable extends PathStatefulDrawable(SVGSelfDrawable) {
  /**
   * @public
   * @override
   *
   * @param {number} renderer
   * @param {Instance} instance
   */
  initialize(renderer, instance) {
    super.initialize(renderer, instance, true, keepSVGPathElements); // usesPaint: true

    // @protected {SVGPathElement} - Sole SVG element for this drawable, implementing API for SVGSelfDrawable
    this.svgElement = this.svgElement || document.createElementNS(svgns, 'path');
  }

  /**
   * Updates the SVG elements so that they will appear like the current node's representation.
   * @protected
   *
   * Implements the interface for SVGSelfDrawable (and is called from the SVGSelfDrawable's update).
   */
  updateSVGSelf() {
    assert && assert(!this.node.requiresSVGBoundsWorkaround(), 'No workaround for https://github.com/phetsims/scenery/issues/196 is provided at this time, please add an epsilon');
    const path = this.svgElement;
    if (this.dirtyShape) {
      let svgPath = this.node.hasShape() ? this.node._shape.getSVGPath() : '';

      // temporary workaround for https://bugs.webkit.org/show_bug.cgi?id=78980
      // and http://code.google.com/p/chromium/issues/detail?id=231626 where even removing
      // the attribute can cause this bug
      if (!svgPath) {
        svgPath = 'M0 0';
      }

      // only set the SVG path if it's not the empty string

      // We'll conditionally add another M0 0 to the end of the path if we're on Safari, we're running into a bug in
      // https://github.com/phetsims/gravity-and-orbits/issues/472 (debugged in
      // https://github.com/phetsims/geometric-optics-basics/issues/31) where we're getting artifacts.
      path.setAttribute('d', `${svgPath}${platform.safari ? ' M0 0' : ''}`);
    }

    // Apply any fill/stroke changes to our element.
    this.updateFillStrokeStyle(path);
  }
}
scenery.register('PathSVGDrawable', PathSVGDrawable);
Poolable.mixInto(PathSVGDrawable);
export default PathSVGDrawable;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJwbGF0Zm9ybSIsIlBvb2xhYmxlIiwiUGF0aFN0YXRlZnVsRHJhd2FibGUiLCJzY2VuZXJ5Iiwic3ZnbnMiLCJTVkdTZWxmRHJhd2FibGUiLCJrZWVwU1ZHUGF0aEVsZW1lbnRzIiwiUGF0aFNWR0RyYXdhYmxlIiwiaW5pdGlhbGl6ZSIsInJlbmRlcmVyIiwiaW5zdGFuY2UiLCJzdmdFbGVtZW50IiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50TlMiLCJ1cGRhdGVTVkdTZWxmIiwiYXNzZXJ0Iiwibm9kZSIsInJlcXVpcmVzU1ZHQm91bmRzV29ya2Fyb3VuZCIsInBhdGgiLCJkaXJ0eVNoYXBlIiwic3ZnUGF0aCIsImhhc1NoYXBlIiwiX3NoYXBlIiwiZ2V0U1ZHUGF0aCIsInNldEF0dHJpYnV0ZSIsInNhZmFyaSIsInVwZGF0ZUZpbGxTdHJva2VTdHlsZSIsInJlZ2lzdGVyIiwibWl4SW50byJdLCJzb3VyY2VzIjpbIlBhdGhTVkdEcmF3YWJsZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxNi0yMDIyLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBTVkcgZHJhd2FibGUgZm9yIFBhdGggbm9kZXMuXHJcbiAqXHJcbiAqIEBhdXRob3IgSm9uYXRoYW4gT2xzb24gPGpvbmF0aGFuLm9sc29uQGNvbG9yYWRvLmVkdT5cclxuICovXHJcblxyXG5pbXBvcnQgcGxhdGZvcm0gZnJvbSAnLi4vLi4vLi4vLi4vcGhldC1jb3JlL2pzL3BsYXRmb3JtLmpzJztcclxuaW1wb3J0IFBvb2xhYmxlIGZyb20gJy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy9Qb29sYWJsZS5qcyc7XHJcbmltcG9ydCB7IFBhdGhTdGF0ZWZ1bERyYXdhYmxlLCBzY2VuZXJ5LCBzdmducywgU1ZHU2VsZkRyYXdhYmxlIH0gZnJvbSAnLi4vLi4vaW1wb3J0cy5qcyc7XHJcblxyXG4vLyBUT0RPOiBjaGFuZ2UgdGhpcyBiYXNlZCBvbiBtZW1vcnkgYW5kIHBlcmZvcm1hbmNlIGNoYXJhY3RlcmlzdGljcyBvZiB0aGUgcGxhdGZvcm1cclxuY29uc3Qga2VlcFNWR1BhdGhFbGVtZW50cyA9IHRydWU7IC8vIHdoZXRoZXIgd2Ugc2hvdWxkIHBvb2wgU1ZHIGVsZW1lbnRzIGZvciB0aGUgU1ZHIHJlbmRlcmluZyBzdGF0ZXMsIG9yIHdoZXRoZXIgd2Ugc2hvdWxkIGZyZWUgdGhlbSB3aGVuIHBvc3NpYmxlIGZvciBtZW1vcnlcclxuXHJcbmNsYXNzIFBhdGhTVkdEcmF3YWJsZSBleHRlbmRzIFBhdGhTdGF0ZWZ1bERyYXdhYmxlKCBTVkdTZWxmRHJhd2FibGUgKSB7XHJcbiAgLyoqXHJcbiAgICogQHB1YmxpY1xyXG4gICAqIEBvdmVycmlkZVxyXG4gICAqXHJcbiAgICogQHBhcmFtIHtudW1iZXJ9IHJlbmRlcmVyXHJcbiAgICogQHBhcmFtIHtJbnN0YW5jZX0gaW5zdGFuY2VcclxuICAgKi9cclxuICBpbml0aWFsaXplKCByZW5kZXJlciwgaW5zdGFuY2UgKSB7XHJcbiAgICBzdXBlci5pbml0aWFsaXplKCByZW5kZXJlciwgaW5zdGFuY2UsIHRydWUsIGtlZXBTVkdQYXRoRWxlbWVudHMgKTsgLy8gdXNlc1BhaW50OiB0cnVlXHJcblxyXG4gICAgLy8gQHByb3RlY3RlZCB7U1ZHUGF0aEVsZW1lbnR9IC0gU29sZSBTVkcgZWxlbWVudCBmb3IgdGhpcyBkcmF3YWJsZSwgaW1wbGVtZW50aW5nIEFQSSBmb3IgU1ZHU2VsZkRyYXdhYmxlXHJcbiAgICB0aGlzLnN2Z0VsZW1lbnQgPSB0aGlzLnN2Z0VsZW1lbnQgfHwgZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKCBzdmducywgJ3BhdGgnICk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBVcGRhdGVzIHRoZSBTVkcgZWxlbWVudHMgc28gdGhhdCB0aGV5IHdpbGwgYXBwZWFyIGxpa2UgdGhlIGN1cnJlbnQgbm9kZSdzIHJlcHJlc2VudGF0aW9uLlxyXG4gICAqIEBwcm90ZWN0ZWRcclxuICAgKlxyXG4gICAqIEltcGxlbWVudHMgdGhlIGludGVyZmFjZSBmb3IgU1ZHU2VsZkRyYXdhYmxlIChhbmQgaXMgY2FsbGVkIGZyb20gdGhlIFNWR1NlbGZEcmF3YWJsZSdzIHVwZGF0ZSkuXHJcbiAgICovXHJcbiAgdXBkYXRlU1ZHU2VsZigpIHtcclxuICAgIGFzc2VydCAmJiBhc3NlcnQoICF0aGlzLm5vZGUucmVxdWlyZXNTVkdCb3VuZHNXb3JrYXJvdW5kKCksXHJcbiAgICAgICdObyB3b3JrYXJvdW5kIGZvciBodHRwczovL2dpdGh1Yi5jb20vcGhldHNpbXMvc2NlbmVyeS9pc3N1ZXMvMTk2IGlzIHByb3ZpZGVkIGF0IHRoaXMgdGltZSwgcGxlYXNlIGFkZCBhbiBlcHNpbG9uJyApO1xyXG5cclxuICAgIGNvbnN0IHBhdGggPSB0aGlzLnN2Z0VsZW1lbnQ7XHJcbiAgICBpZiAoIHRoaXMuZGlydHlTaGFwZSApIHtcclxuICAgICAgbGV0IHN2Z1BhdGggPSB0aGlzLm5vZGUuaGFzU2hhcGUoKSA/IHRoaXMubm9kZS5fc2hhcGUuZ2V0U1ZHUGF0aCgpIDogJyc7XHJcblxyXG4gICAgICAvLyB0ZW1wb3Jhcnkgd29ya2Fyb3VuZCBmb3IgaHR0cHM6Ly9idWdzLndlYmtpdC5vcmcvc2hvd19idWcuY2dpP2lkPTc4OTgwXHJcbiAgICAgIC8vIGFuZCBodHRwOi8vY29kZS5nb29nbGUuY29tL3AvY2hyb21pdW0vaXNzdWVzL2RldGFpbD9pZD0yMzE2MjYgd2hlcmUgZXZlbiByZW1vdmluZ1xyXG4gICAgICAvLyB0aGUgYXR0cmlidXRlIGNhbiBjYXVzZSB0aGlzIGJ1Z1xyXG4gICAgICBpZiAoICFzdmdQYXRoICkgeyBzdmdQYXRoID0gJ00wIDAnOyB9XHJcblxyXG4gICAgICAvLyBvbmx5IHNldCB0aGUgU1ZHIHBhdGggaWYgaXQncyBub3QgdGhlIGVtcHR5IHN0cmluZ1xyXG5cclxuICAgICAgLy8gV2UnbGwgY29uZGl0aW9uYWxseSBhZGQgYW5vdGhlciBNMCAwIHRvIHRoZSBlbmQgb2YgdGhlIHBhdGggaWYgd2UncmUgb24gU2FmYXJpLCB3ZSdyZSBydW5uaW5nIGludG8gYSBidWcgaW5cclxuICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL3BoZXRzaW1zL2dyYXZpdHktYW5kLW9yYml0cy9pc3N1ZXMvNDcyIChkZWJ1Z2dlZCBpblxyXG4gICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vcGhldHNpbXMvZ2VvbWV0cmljLW9wdGljcy1iYXNpY3MvaXNzdWVzLzMxKSB3aGVyZSB3ZSdyZSBnZXR0aW5nIGFydGlmYWN0cy5cclxuICAgICAgcGF0aC5zZXRBdHRyaWJ1dGUoICdkJywgYCR7c3ZnUGF0aH0ke3BsYXRmb3JtLnNhZmFyaSA/ICcgTTAgMCcgOiAnJ31gICk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gQXBwbHkgYW55IGZpbGwvc3Ryb2tlIGNoYW5nZXMgdG8gb3VyIGVsZW1lbnQuXHJcbiAgICB0aGlzLnVwZGF0ZUZpbGxTdHJva2VTdHlsZSggcGF0aCApO1xyXG4gIH1cclxufVxyXG5cclxuc2NlbmVyeS5yZWdpc3RlciggJ1BhdGhTVkdEcmF3YWJsZScsIFBhdGhTVkdEcmF3YWJsZSApO1xyXG5cclxuUG9vbGFibGUubWl4SW50byggUGF0aFNWR0RyYXdhYmxlICk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBQYXRoU1ZHRHJhd2FibGU7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLFFBQVEsTUFBTSxzQ0FBc0M7QUFDM0QsT0FBT0MsUUFBUSxNQUFNLHNDQUFzQztBQUMzRCxTQUFTQyxvQkFBb0IsRUFBRUMsT0FBTyxFQUFFQyxLQUFLLEVBQUVDLGVBQWUsUUFBUSxrQkFBa0I7O0FBRXhGO0FBQ0EsTUFBTUMsbUJBQW1CLEdBQUcsSUFBSSxDQUFDLENBQUM7O0FBRWxDLE1BQU1DLGVBQWUsU0FBU0wsb0JBQW9CLENBQUVHLGVBQWdCLENBQUMsQ0FBQztFQUNwRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtFQUNFRyxVQUFVQSxDQUFFQyxRQUFRLEVBQUVDLFFBQVEsRUFBRztJQUMvQixLQUFLLENBQUNGLFVBQVUsQ0FBRUMsUUFBUSxFQUFFQyxRQUFRLEVBQUUsSUFBSSxFQUFFSixtQkFBb0IsQ0FBQyxDQUFDLENBQUM7O0lBRW5FO0lBQ0EsSUFBSSxDQUFDSyxVQUFVLEdBQUcsSUFBSSxDQUFDQSxVQUFVLElBQUlDLFFBQVEsQ0FBQ0MsZUFBZSxDQUFFVCxLQUFLLEVBQUUsTUFBTyxDQUFDO0VBQ2hGOztFQUVBO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtFQUNFVSxhQUFhQSxDQUFBLEVBQUc7SUFDZEMsTUFBTSxJQUFJQSxNQUFNLENBQUUsQ0FBQyxJQUFJLENBQUNDLElBQUksQ0FBQ0MsMkJBQTJCLENBQUMsQ0FBQyxFQUN4RCxrSEFBbUgsQ0FBQztJQUV0SCxNQUFNQyxJQUFJLEdBQUcsSUFBSSxDQUFDUCxVQUFVO0lBQzVCLElBQUssSUFBSSxDQUFDUSxVQUFVLEVBQUc7TUFDckIsSUFBSUMsT0FBTyxHQUFHLElBQUksQ0FBQ0osSUFBSSxDQUFDSyxRQUFRLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQ0wsSUFBSSxDQUFDTSxNQUFNLENBQUNDLFVBQVUsQ0FBQyxDQUFDLEdBQUcsRUFBRTs7TUFFdkU7TUFDQTtNQUNBO01BQ0EsSUFBSyxDQUFDSCxPQUFPLEVBQUc7UUFBRUEsT0FBTyxHQUFHLE1BQU07TUFBRTs7TUFFcEM7O01BRUE7TUFDQTtNQUNBO01BQ0FGLElBQUksQ0FBQ00sWUFBWSxDQUFFLEdBQUcsRUFBRyxHQUFFSixPQUFRLEdBQUVwQixRQUFRLENBQUN5QixNQUFNLEdBQUcsT0FBTyxHQUFHLEVBQUcsRUFBRSxDQUFDO0lBQ3pFOztJQUVBO0lBQ0EsSUFBSSxDQUFDQyxxQkFBcUIsQ0FBRVIsSUFBSyxDQUFDO0VBQ3BDO0FBQ0Y7QUFFQWYsT0FBTyxDQUFDd0IsUUFBUSxDQUFFLGlCQUFpQixFQUFFcEIsZUFBZ0IsQ0FBQztBQUV0RE4sUUFBUSxDQUFDMkIsT0FBTyxDQUFFckIsZUFBZ0IsQ0FBQztBQUVuQyxlQUFlQSxlQUFlIn0=