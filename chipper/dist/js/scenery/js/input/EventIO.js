// Copyright 2018-2023, University of Colorado Boulder

/**
 * IOType for a window.Event. Since this needs to support any data from any subtype of window.Event, we supply NullableIO
 * attributes for the union of different supported subtypes.  The subtypes are listed at https://developer.mozilla.org/en-US/docs/Web/API/Event
 *
 * @author Michael Kauzmann (PhET Interactive Simulations)
 * @author Chris Klusendorf (PhET Interactive Simulations)
 * @author Sam Reid (PhET Interactive Simulations)
 */

import BooleanIO from '../../../tandem/js/types/BooleanIO.js';
import IOType from '../../../tandem/js/types/IOType.js';
import NullableIO from '../../../tandem/js/types/NullableIO.js';
import NumberIO from '../../../tandem/js/types/NumberIO.js';
import ObjectLiteralIO from '../../../tandem/js/types/ObjectLiteralIO.js';
import StringIO from '../../../tandem/js/types/StringIO.js';
import { Input, scenery } from '../imports.js';
const EventIO = new IOType('EventIO', {
  valueType: window.Event,
  documentation: 'A DOM Event',
  toStateObject: domEvent => Input.serializeDomEvent(domEvent),
  fromStateObject: stateObject => Input.deserializeDomEvent(stateObject),
  // This should remain the same as Input.domEventPropertiesToSerialize (local var). Each key can be null depending on
  // what Event interface is being serialized (which depends on what DOM Event the instance is).
  stateSchema: () => ({
    constructorName: StringIO,
    altKey: NullableIO(BooleanIO),
    button: NullableIO(NumberIO),
    charCode: NullableIO(NumberIO),
    clientX: NullableIO(NumberIO),
    clientY: NullableIO(NumberIO),
    code: NullableIO(StringIO),
    ctrlKey: NullableIO(BooleanIO),
    deltaMode: NullableIO(NumberIO),
    deltaX: NullableIO(NumberIO),
    deltaY: NullableIO(NumberIO),
    deltaZ: NullableIO(NumberIO),
    key: NullableIO(StringIO),
    keyCode: NullableIO(NumberIO),
    metaKey: NullableIO(BooleanIO),
    pageX: NullableIO(NumberIO),
    pageY: NullableIO(NumberIO),
    pointerId: NullableIO(NumberIO),
    pointerType: NullableIO(StringIO),
    scale: NullableIO(NumberIO),
    shiftKey: NullableIO(BooleanIO),
    target: NullableIO(ObjectLiteralIO),
    type: NullableIO(StringIO),
    relatedTarget: NullableIO(ObjectLiteralIO),
    which: NullableIO(NumberIO)
  })
});
scenery.register('EventIO', EventIO);
export default EventIO;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJCb29sZWFuSU8iLCJJT1R5cGUiLCJOdWxsYWJsZUlPIiwiTnVtYmVySU8iLCJPYmplY3RMaXRlcmFsSU8iLCJTdHJpbmdJTyIsIklucHV0Iiwic2NlbmVyeSIsIkV2ZW50SU8iLCJ2YWx1ZVR5cGUiLCJ3aW5kb3ciLCJFdmVudCIsImRvY3VtZW50YXRpb24iLCJ0b1N0YXRlT2JqZWN0IiwiZG9tRXZlbnQiLCJzZXJpYWxpemVEb21FdmVudCIsImZyb21TdGF0ZU9iamVjdCIsInN0YXRlT2JqZWN0IiwiZGVzZXJpYWxpemVEb21FdmVudCIsInN0YXRlU2NoZW1hIiwiY29uc3RydWN0b3JOYW1lIiwiYWx0S2V5IiwiYnV0dG9uIiwiY2hhckNvZGUiLCJjbGllbnRYIiwiY2xpZW50WSIsImNvZGUiLCJjdHJsS2V5IiwiZGVsdGFNb2RlIiwiZGVsdGFYIiwiZGVsdGFZIiwiZGVsdGFaIiwia2V5Iiwia2V5Q29kZSIsIm1ldGFLZXkiLCJwYWdlWCIsInBhZ2VZIiwicG9pbnRlcklkIiwicG9pbnRlclR5cGUiLCJzY2FsZSIsInNoaWZ0S2V5IiwidGFyZ2V0IiwidHlwZSIsInJlbGF0ZWRUYXJnZXQiLCJ3aGljaCIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiRXZlbnRJTy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxOC0yMDIzLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBJT1R5cGUgZm9yIGEgd2luZG93LkV2ZW50LiBTaW5jZSB0aGlzIG5lZWRzIHRvIHN1cHBvcnQgYW55IGRhdGEgZnJvbSBhbnkgc3VidHlwZSBvZiB3aW5kb3cuRXZlbnQsIHdlIHN1cHBseSBOdWxsYWJsZUlPXHJcbiAqIGF0dHJpYnV0ZXMgZm9yIHRoZSB1bmlvbiBvZiBkaWZmZXJlbnQgc3VwcG9ydGVkIHN1YnR5cGVzLiAgVGhlIHN1YnR5cGVzIGFyZSBsaXN0ZWQgYXQgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0V2ZW50XHJcbiAqXHJcbiAqIEBhdXRob3IgTWljaGFlbCBLYXV6bWFubiAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcclxuICogQGF1dGhvciBDaHJpcyBLbHVzZW5kb3JmIChQaEVUIEludGVyYWN0aXZlIFNpbXVsYXRpb25zKVxyXG4gKiBAYXV0aG9yIFNhbSBSZWlkIChQaEVUIEludGVyYWN0aXZlIFNpbXVsYXRpb25zKVxyXG4gKi9cclxuXHJcbmltcG9ydCBCb29sZWFuSU8gZnJvbSAnLi4vLi4vLi4vdGFuZGVtL2pzL3R5cGVzL0Jvb2xlYW5JTy5qcyc7XHJcbmltcG9ydCBJT1R5cGUgZnJvbSAnLi4vLi4vLi4vdGFuZGVtL2pzL3R5cGVzL0lPVHlwZS5qcyc7XHJcbmltcG9ydCBOdWxsYWJsZUlPIGZyb20gJy4uLy4uLy4uL3RhbmRlbS9qcy90eXBlcy9OdWxsYWJsZUlPLmpzJztcclxuaW1wb3J0IE51bWJlcklPIGZyb20gJy4uLy4uLy4uL3RhbmRlbS9qcy90eXBlcy9OdW1iZXJJTy5qcyc7XHJcbmltcG9ydCBPYmplY3RMaXRlcmFsSU8gZnJvbSAnLi4vLi4vLi4vdGFuZGVtL2pzL3R5cGVzL09iamVjdExpdGVyYWxJTy5qcyc7XHJcbmltcG9ydCBTdHJpbmdJTyBmcm9tICcuLi8uLi8uLi90YW5kZW0vanMvdHlwZXMvU3RyaW5nSU8uanMnO1xyXG5pbXBvcnQgeyBJbnB1dCwgc2NlbmVyeSB9IGZyb20gJy4uL2ltcG9ydHMuanMnO1xyXG5cclxuY29uc3QgRXZlbnRJTyA9IG5ldyBJT1R5cGUoICdFdmVudElPJywge1xyXG4gIHZhbHVlVHlwZTogd2luZG93LkV2ZW50LFxyXG4gIGRvY3VtZW50YXRpb246ICdBIERPTSBFdmVudCcsXHJcbiAgdG9TdGF0ZU9iamVjdDogZG9tRXZlbnQgPT4gSW5wdXQuc2VyaWFsaXplRG9tRXZlbnQoIGRvbUV2ZW50ICksXHJcbiAgZnJvbVN0YXRlT2JqZWN0OiBzdGF0ZU9iamVjdCA9PiBJbnB1dC5kZXNlcmlhbGl6ZURvbUV2ZW50KCBzdGF0ZU9iamVjdCApLFxyXG5cclxuICAvLyBUaGlzIHNob3VsZCByZW1haW4gdGhlIHNhbWUgYXMgSW5wdXQuZG9tRXZlbnRQcm9wZXJ0aWVzVG9TZXJpYWxpemUgKGxvY2FsIHZhcikuIEVhY2gga2V5IGNhbiBiZSBudWxsIGRlcGVuZGluZyBvblxyXG4gIC8vIHdoYXQgRXZlbnQgaW50ZXJmYWNlIGlzIGJlaW5nIHNlcmlhbGl6ZWQgKHdoaWNoIGRlcGVuZHMgb24gd2hhdCBET00gRXZlbnQgdGhlIGluc3RhbmNlIGlzKS5cclxuICBzdGF0ZVNjaGVtYTogKCkgPT4gKCB7XHJcbiAgICBjb25zdHJ1Y3Rvck5hbWU6IFN0cmluZ0lPLFxyXG4gICAgYWx0S2V5OiBOdWxsYWJsZUlPKCBCb29sZWFuSU8gKSxcclxuICAgIGJ1dHRvbjogTnVsbGFibGVJTyggTnVtYmVySU8gKSxcclxuICAgIGNoYXJDb2RlOiBOdWxsYWJsZUlPKCBOdW1iZXJJTyApLFxyXG4gICAgY2xpZW50WDogTnVsbGFibGVJTyggTnVtYmVySU8gKSxcclxuICAgIGNsaWVudFk6IE51bGxhYmxlSU8oIE51bWJlcklPICksXHJcbiAgICBjb2RlOiBOdWxsYWJsZUlPKCBTdHJpbmdJTyApLFxyXG4gICAgY3RybEtleTogTnVsbGFibGVJTyggQm9vbGVhbklPICksXHJcbiAgICBkZWx0YU1vZGU6IE51bGxhYmxlSU8oIE51bWJlcklPICksXHJcbiAgICBkZWx0YVg6IE51bGxhYmxlSU8oIE51bWJlcklPICksXHJcbiAgICBkZWx0YVk6IE51bGxhYmxlSU8oIE51bWJlcklPICksXHJcbiAgICBkZWx0YVo6IE51bGxhYmxlSU8oIE51bWJlcklPICksXHJcbiAgICBrZXk6IE51bGxhYmxlSU8oIFN0cmluZ0lPICksXHJcbiAgICBrZXlDb2RlOiBOdWxsYWJsZUlPKCBOdW1iZXJJTyApLFxyXG4gICAgbWV0YUtleTogTnVsbGFibGVJTyggQm9vbGVhbklPICksXHJcbiAgICBwYWdlWDogTnVsbGFibGVJTyggTnVtYmVySU8gKSxcclxuICAgIHBhZ2VZOiBOdWxsYWJsZUlPKCBOdW1iZXJJTyApLFxyXG4gICAgcG9pbnRlcklkOiBOdWxsYWJsZUlPKCBOdW1iZXJJTyApLFxyXG4gICAgcG9pbnRlclR5cGU6IE51bGxhYmxlSU8oIFN0cmluZ0lPICksXHJcbiAgICBzY2FsZTogTnVsbGFibGVJTyggTnVtYmVySU8gKSxcclxuICAgIHNoaWZ0S2V5OiBOdWxsYWJsZUlPKCBCb29sZWFuSU8gKSxcclxuICAgIHRhcmdldDogTnVsbGFibGVJTyggT2JqZWN0TGl0ZXJhbElPICksXHJcbiAgICB0eXBlOiBOdWxsYWJsZUlPKCBTdHJpbmdJTyApLFxyXG4gICAgcmVsYXRlZFRhcmdldDogTnVsbGFibGVJTyggT2JqZWN0TGl0ZXJhbElPICksXHJcbiAgICB3aGljaDogTnVsbGFibGVJTyggTnVtYmVySU8gKVxyXG4gIH0gKVxyXG59ICk7XHJcblxyXG5zY2VuZXJ5LnJlZ2lzdGVyKCAnRXZlbnRJTycsIEV2ZW50SU8gKTtcclxuZXhwb3J0IGRlZmF1bHQgRXZlbnRJTzsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsU0FBUyxNQUFNLHVDQUF1QztBQUM3RCxPQUFPQyxNQUFNLE1BQU0sb0NBQW9DO0FBQ3ZELE9BQU9DLFVBQVUsTUFBTSx3Q0FBd0M7QUFDL0QsT0FBT0MsUUFBUSxNQUFNLHNDQUFzQztBQUMzRCxPQUFPQyxlQUFlLE1BQU0sNkNBQTZDO0FBQ3pFLE9BQU9DLFFBQVEsTUFBTSxzQ0FBc0M7QUFDM0QsU0FBU0MsS0FBSyxFQUFFQyxPQUFPLFFBQVEsZUFBZTtBQUU5QyxNQUFNQyxPQUFPLEdBQUcsSUFBSVAsTUFBTSxDQUFFLFNBQVMsRUFBRTtFQUNyQ1EsU0FBUyxFQUFFQyxNQUFNLENBQUNDLEtBQUs7RUFDdkJDLGFBQWEsRUFBRSxhQUFhO0VBQzVCQyxhQUFhLEVBQUVDLFFBQVEsSUFBSVIsS0FBSyxDQUFDUyxpQkFBaUIsQ0FBRUQsUUFBUyxDQUFDO0VBQzlERSxlQUFlLEVBQUVDLFdBQVcsSUFBSVgsS0FBSyxDQUFDWSxtQkFBbUIsQ0FBRUQsV0FBWSxDQUFDO0VBRXhFO0VBQ0E7RUFDQUUsV0FBVyxFQUFFQSxDQUFBLE1BQVE7SUFDbkJDLGVBQWUsRUFBRWYsUUFBUTtJQUN6QmdCLE1BQU0sRUFBRW5CLFVBQVUsQ0FBRUYsU0FBVSxDQUFDO0lBQy9Cc0IsTUFBTSxFQUFFcEIsVUFBVSxDQUFFQyxRQUFTLENBQUM7SUFDOUJvQixRQUFRLEVBQUVyQixVQUFVLENBQUVDLFFBQVMsQ0FBQztJQUNoQ3FCLE9BQU8sRUFBRXRCLFVBQVUsQ0FBRUMsUUFBUyxDQUFDO0lBQy9Cc0IsT0FBTyxFQUFFdkIsVUFBVSxDQUFFQyxRQUFTLENBQUM7SUFDL0J1QixJQUFJLEVBQUV4QixVQUFVLENBQUVHLFFBQVMsQ0FBQztJQUM1QnNCLE9BQU8sRUFBRXpCLFVBQVUsQ0FBRUYsU0FBVSxDQUFDO0lBQ2hDNEIsU0FBUyxFQUFFMUIsVUFBVSxDQUFFQyxRQUFTLENBQUM7SUFDakMwQixNQUFNLEVBQUUzQixVQUFVLENBQUVDLFFBQVMsQ0FBQztJQUM5QjJCLE1BQU0sRUFBRTVCLFVBQVUsQ0FBRUMsUUFBUyxDQUFDO0lBQzlCNEIsTUFBTSxFQUFFN0IsVUFBVSxDQUFFQyxRQUFTLENBQUM7SUFDOUI2QixHQUFHLEVBQUU5QixVQUFVLENBQUVHLFFBQVMsQ0FBQztJQUMzQjRCLE9BQU8sRUFBRS9CLFVBQVUsQ0FBRUMsUUFBUyxDQUFDO0lBQy9CK0IsT0FBTyxFQUFFaEMsVUFBVSxDQUFFRixTQUFVLENBQUM7SUFDaENtQyxLQUFLLEVBQUVqQyxVQUFVLENBQUVDLFFBQVMsQ0FBQztJQUM3QmlDLEtBQUssRUFBRWxDLFVBQVUsQ0FBRUMsUUFBUyxDQUFDO0lBQzdCa0MsU0FBUyxFQUFFbkMsVUFBVSxDQUFFQyxRQUFTLENBQUM7SUFDakNtQyxXQUFXLEVBQUVwQyxVQUFVLENBQUVHLFFBQVMsQ0FBQztJQUNuQ2tDLEtBQUssRUFBRXJDLFVBQVUsQ0FBRUMsUUFBUyxDQUFDO0lBQzdCcUMsUUFBUSxFQUFFdEMsVUFBVSxDQUFFRixTQUFVLENBQUM7SUFDakN5QyxNQUFNLEVBQUV2QyxVQUFVLENBQUVFLGVBQWdCLENBQUM7SUFDckNzQyxJQUFJLEVBQUV4QyxVQUFVLENBQUVHLFFBQVMsQ0FBQztJQUM1QnNDLGFBQWEsRUFBRXpDLFVBQVUsQ0FBRUUsZUFBZ0IsQ0FBQztJQUM1Q3dDLEtBQUssRUFBRTFDLFVBQVUsQ0FBRUMsUUFBUztFQUM5QixDQUFDO0FBQ0gsQ0FBRSxDQUFDO0FBRUhJLE9BQU8sQ0FBQ3NDLFFBQVEsQ0FBRSxTQUFTLEVBQUVyQyxPQUFRLENBQUM7QUFDdEMsZUFBZUEsT0FBTyJ9