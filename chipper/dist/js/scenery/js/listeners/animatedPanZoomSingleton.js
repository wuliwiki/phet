// Copyright 2021-2022, University of Colorado Boulder

/**
 * A singleton with an instance of an AnimatedPanZoomListener that can be easily accessed for an application.
 * The AnimatedPanZoomListener adds global key press listeners and it is reasonable that you would only want
 * one for a document/application.
 *
 * @author Jesse Greenberg
 */

import { AnimatedPanZoomListener, scenery } from '../imports.js';
class AnimatedPanZoomSingleton {
  constructor() {
    // @private {null|AnimatedPanZoomListener} - null until initialized
    this._listener = null;
  }

  /**
   * @public
   * @param {../nodes/Node} targetNode
   * @param {Object} [options]
   */
  initialize(targetNode, options) {
    this._listener = new AnimatedPanZoomListener(targetNode, options);
  }

  /**
   * @public
   */
  dispose() {
    this._listener.dispose();
    this._listener = null;
  }

  /**
   * Returns the AnimatedPanZoomListener.
   * @public
   *
   * @returns {null|AnimatedPanZoomListener}
   */
  get listener() {
    assert && assert(this._listener, 'No listener, call initialize first.');
    return this._listener;
  }

  /**
   * Returns whether or not the animatedPanZoomSingleton has been initialized.
   * @returns {boolean}
   */
  get initialized() {
    return !!this._listener;
  }
}
const animatedPanZoomSingleton = new AnimatedPanZoomSingleton();
scenery.register('animatedPanZoomSingleton', animatedPanZoomSingleton);
export default animatedPanZoomSingleton;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJBbmltYXRlZFBhblpvb21MaXN0ZW5lciIsInNjZW5lcnkiLCJBbmltYXRlZFBhblpvb21TaW5nbGV0b24iLCJjb25zdHJ1Y3RvciIsIl9saXN0ZW5lciIsImluaXRpYWxpemUiLCJ0YXJnZXROb2RlIiwib3B0aW9ucyIsImRpc3Bvc2UiLCJsaXN0ZW5lciIsImFzc2VydCIsImluaXRpYWxpemVkIiwiYW5pbWF0ZWRQYW5ab29tU2luZ2xldG9uIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJhbmltYXRlZFBhblpvb21TaW5nbGV0b24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogQSBzaW5nbGV0b24gd2l0aCBhbiBpbnN0YW5jZSBvZiBhbiBBbmltYXRlZFBhblpvb21MaXN0ZW5lciB0aGF0IGNhbiBiZSBlYXNpbHkgYWNjZXNzZWQgZm9yIGFuIGFwcGxpY2F0aW9uLlxyXG4gKiBUaGUgQW5pbWF0ZWRQYW5ab29tTGlzdGVuZXIgYWRkcyBnbG9iYWwga2V5IHByZXNzIGxpc3RlbmVycyBhbmQgaXQgaXMgcmVhc29uYWJsZSB0aGF0IHlvdSB3b3VsZCBvbmx5IHdhbnRcclxuICogb25lIGZvciBhIGRvY3VtZW50L2FwcGxpY2F0aW9uLlxyXG4gKlxyXG4gKiBAYXV0aG9yIEplc3NlIEdyZWVuYmVyZ1xyXG4gKi9cclxuXHJcbmltcG9ydCB7IEFuaW1hdGVkUGFuWm9vbUxpc3RlbmVyLCBzY2VuZXJ5IH0gZnJvbSAnLi4vaW1wb3J0cy5qcyc7XHJcblxyXG5jbGFzcyBBbmltYXRlZFBhblpvb21TaW5nbGV0b24ge1xyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG5cclxuICAgIC8vIEBwcml2YXRlIHtudWxsfEFuaW1hdGVkUGFuWm9vbUxpc3RlbmVyfSAtIG51bGwgdW50aWwgaW5pdGlhbGl6ZWRcclxuICAgIHRoaXMuX2xpc3RlbmVyID0gbnVsbDtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBwdWJsaWNcclxuICAgKiBAcGFyYW0gey4uL25vZGVzL05vZGV9IHRhcmdldE5vZGVcclxuICAgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXHJcbiAgICovXHJcbiAgaW5pdGlhbGl6ZSggdGFyZ2V0Tm9kZSwgb3B0aW9ucyApIHtcclxuICAgIHRoaXMuX2xpc3RlbmVyID0gbmV3IEFuaW1hdGVkUGFuWm9vbUxpc3RlbmVyKCB0YXJnZXROb2RlLCBvcHRpb25zICk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBAcHVibGljXHJcbiAgICovXHJcbiAgZGlzcG9zZSgpIHtcclxuICAgIHRoaXMuX2xpc3RlbmVyLmRpc3Bvc2UoKTtcclxuICAgIHRoaXMuX2xpc3RlbmVyID0gbnVsbDtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFJldHVybnMgdGhlIEFuaW1hdGVkUGFuWm9vbUxpc3RlbmVyLlxyXG4gICAqIEBwdWJsaWNcclxuICAgKlxyXG4gICAqIEByZXR1cm5zIHtudWxsfEFuaW1hdGVkUGFuWm9vbUxpc3RlbmVyfVxyXG4gICAqL1xyXG4gIGdldCBsaXN0ZW5lcigpIHtcclxuICAgIGFzc2VydCAmJiBhc3NlcnQoIHRoaXMuX2xpc3RlbmVyLCAnTm8gbGlzdGVuZXIsIGNhbGwgaW5pdGlhbGl6ZSBmaXJzdC4nICk7XHJcbiAgICByZXR1cm4gdGhpcy5fbGlzdGVuZXI7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBSZXR1cm5zIHdoZXRoZXIgb3Igbm90IHRoZSBhbmltYXRlZFBhblpvb21TaW5nbGV0b24gaGFzIGJlZW4gaW5pdGlhbGl6ZWQuXHJcbiAgICogQHJldHVybnMge2Jvb2xlYW59XHJcbiAgICovXHJcbiAgZ2V0IGluaXRpYWxpemVkKCkge1xyXG4gICAgcmV0dXJuICEhdGhpcy5fbGlzdGVuZXI7XHJcbiAgfVxyXG59XHJcblxyXG5jb25zdCBhbmltYXRlZFBhblpvb21TaW5nbGV0b24gPSBuZXcgQW5pbWF0ZWRQYW5ab29tU2luZ2xldG9uKCk7XHJcbnNjZW5lcnkucmVnaXN0ZXIoICdhbmltYXRlZFBhblpvb21TaW5nbGV0b24nLCBhbmltYXRlZFBhblpvb21TaW5nbGV0b24gKTtcclxuZXhwb3J0IGRlZmF1bHQgYW5pbWF0ZWRQYW5ab29tU2luZ2xldG9uOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsU0FBU0EsdUJBQXVCLEVBQUVDLE9BQU8sUUFBUSxlQUFlO0FBRWhFLE1BQU1DLHdCQUF3QixDQUFDO0VBQzdCQyxXQUFXQSxDQUFBLEVBQUc7SUFFWjtJQUNBLElBQUksQ0FBQ0MsU0FBUyxHQUFHLElBQUk7RUFDdkI7O0VBRUE7QUFDRjtBQUNBO0FBQ0E7QUFDQTtFQUNFQyxVQUFVQSxDQUFFQyxVQUFVLEVBQUVDLE9BQU8sRUFBRztJQUNoQyxJQUFJLENBQUNILFNBQVMsR0FBRyxJQUFJSix1QkFBdUIsQ0FBRU0sVUFBVSxFQUFFQyxPQUFRLENBQUM7RUFDckU7O0VBRUE7QUFDRjtBQUNBO0VBQ0VDLE9BQU9BLENBQUEsRUFBRztJQUNSLElBQUksQ0FBQ0osU0FBUyxDQUFDSSxPQUFPLENBQUMsQ0FBQztJQUN4QixJQUFJLENBQUNKLFNBQVMsR0FBRyxJQUFJO0VBQ3ZCOztFQUVBO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtFQUNFLElBQUlLLFFBQVFBLENBQUEsRUFBRztJQUNiQyxNQUFNLElBQUlBLE1BQU0sQ0FBRSxJQUFJLENBQUNOLFNBQVMsRUFBRSxxQ0FBc0MsQ0FBQztJQUN6RSxPQUFPLElBQUksQ0FBQ0EsU0FBUztFQUN2Qjs7RUFFQTtBQUNGO0FBQ0E7QUFDQTtFQUNFLElBQUlPLFdBQVdBLENBQUEsRUFBRztJQUNoQixPQUFPLENBQUMsQ0FBQyxJQUFJLENBQUNQLFNBQVM7RUFDekI7QUFDRjtBQUVBLE1BQU1RLHdCQUF3QixHQUFHLElBQUlWLHdCQUF3QixDQUFDLENBQUM7QUFDL0RELE9BQU8sQ0FBQ1ksUUFBUSxDQUFFLDBCQUEwQixFQUFFRCx3QkFBeUIsQ0FBQztBQUN4RSxlQUFlQSx3QkFBd0IifQ==