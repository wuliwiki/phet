// Copyright 2014-2022, University of Colorado Boulder

/**
 * A Scenery node that depicts a grid with squares on it.  This is used in several places in the simulation to create
 * icons that look like the things that the user might create when using the simulation.
 *
 * @author John Blanco
 */

import Bounds2 from '../../../../dot/js/Bounds2.js';
import merge from '../../../../phet-core/js/merge.js';
import { Color, Node, Rectangle } from '../../../../scenery/js/imports.js';
import areaBuilder from '../../areaBuilder.js';
import Grid from './Grid.js';
class GridIcon extends Node {
  /**
   * @param {number} columns
   * @param {number} rows
   * @param {number} cellLength
   * @param {string} shapeFillColor
   * @param {Array.<Vector2>} occupiedCells
   * @param {Object} [options]
   */
  constructor(columns, rows, cellLength, shapeFillColor, occupiedCells, options) {
    super();
    options = merge({
      // defaults
      gridStroke: 'black',
      gridLineWidth: 1,
      backgroundStroke: null,
      backgroundFill: 'white',
      backgroundLineWidth: 1,
      shapeStroke: new Color(shapeFillColor).colorUtilsDarker(0.2),
      // darkening factor empirically determined
      shapeLineWidth: 1
    }, options);
    this.addChild(new Rectangle(0, 0, columns * cellLength, rows * cellLength, 0, 0, {
      fill: options.backgroundFill,
      stroke: options.backgroundStroke,
      lineWidth: options.backgroundLineWidth
    }));
    this.addChild(new Grid(new Bounds2(0, 0, columns * cellLength, rows * cellLength), cellLength, {
      stroke: options.gridStroke,
      lineWidth: options.gridLineWidth,
      fill: options.gridFill
    }));
    occupiedCells.forEach(occupiedCell => {
      this.addChild(new Rectangle(0, 0, cellLength, cellLength, 0, 0, {
        fill: shapeFillColor,
        stroke: options.shapeStroke,
        lineWidth: options.shapeLineWidth,
        left: occupiedCell.x * cellLength,
        top: occupiedCell.y * cellLength
      }));
    });

    // Pass options through to the parent class.
    this.mutate(options);
  }
}
areaBuilder.register('GridIcon', GridIcon);
export default GridIcon;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJCb3VuZHMyIiwibWVyZ2UiLCJDb2xvciIsIk5vZGUiLCJSZWN0YW5nbGUiLCJhcmVhQnVpbGRlciIsIkdyaWQiLCJHcmlkSWNvbiIsImNvbnN0cnVjdG9yIiwiY29sdW1ucyIsInJvd3MiLCJjZWxsTGVuZ3RoIiwic2hhcGVGaWxsQ29sb3IiLCJvY2N1cGllZENlbGxzIiwib3B0aW9ucyIsImdyaWRTdHJva2UiLCJncmlkTGluZVdpZHRoIiwiYmFja2dyb3VuZFN0cm9rZSIsImJhY2tncm91bmRGaWxsIiwiYmFja2dyb3VuZExpbmVXaWR0aCIsInNoYXBlU3Ryb2tlIiwiY29sb3JVdGlsc0RhcmtlciIsInNoYXBlTGluZVdpZHRoIiwiYWRkQ2hpbGQiLCJmaWxsIiwic3Ryb2tlIiwibGluZVdpZHRoIiwiZ3JpZEZpbGwiLCJmb3JFYWNoIiwib2NjdXBpZWRDZWxsIiwibGVmdCIsIngiLCJ0b3AiLCJ5IiwibXV0YXRlIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJHcmlkSWNvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxNC0yMDIyLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBBIFNjZW5lcnkgbm9kZSB0aGF0IGRlcGljdHMgYSBncmlkIHdpdGggc3F1YXJlcyBvbiBpdC4gIFRoaXMgaXMgdXNlZCBpbiBzZXZlcmFsIHBsYWNlcyBpbiB0aGUgc2ltdWxhdGlvbiB0byBjcmVhdGVcclxuICogaWNvbnMgdGhhdCBsb29rIGxpa2UgdGhlIHRoaW5ncyB0aGF0IHRoZSB1c2VyIG1pZ2h0IGNyZWF0ZSB3aGVuIHVzaW5nIHRoZSBzaW11bGF0aW9uLlxyXG4gKlxyXG4gKiBAYXV0aG9yIEpvaG4gQmxhbmNvXHJcbiAqL1xyXG5cclxuaW1wb3J0IEJvdW5kczIgZnJvbSAnLi4vLi4vLi4vLi4vZG90L2pzL0JvdW5kczIuanMnO1xyXG5pbXBvcnQgbWVyZ2UgZnJvbSAnLi4vLi4vLi4vLi4vcGhldC1jb3JlL2pzL21lcmdlLmpzJztcclxuaW1wb3J0IHsgQ29sb3IsIE5vZGUsIFJlY3RhbmdsZSB9IGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XHJcbmltcG9ydCBhcmVhQnVpbGRlciBmcm9tICcuLi8uLi9hcmVhQnVpbGRlci5qcyc7XHJcbmltcG9ydCBHcmlkIGZyb20gJy4vR3JpZC5qcyc7XHJcblxyXG5jbGFzcyBHcmlkSWNvbiBleHRlbmRzIE5vZGUge1xyXG5cclxuICAvKipcclxuICAgKiBAcGFyYW0ge251bWJlcn0gY29sdW1uc1xyXG4gICAqIEBwYXJhbSB7bnVtYmVyfSByb3dzXHJcbiAgICogQHBhcmFtIHtudW1iZXJ9IGNlbGxMZW5ndGhcclxuICAgKiBAcGFyYW0ge3N0cmluZ30gc2hhcGVGaWxsQ29sb3JcclxuICAgKiBAcGFyYW0ge0FycmF5LjxWZWN0b3IyPn0gb2NjdXBpZWRDZWxsc1xyXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc11cclxuICAgKi9cclxuICBjb25zdHJ1Y3RvciggY29sdW1ucywgcm93cywgY2VsbExlbmd0aCwgc2hhcGVGaWxsQ29sb3IsIG9jY3VwaWVkQ2VsbHMsIG9wdGlvbnMgKSB7XHJcblxyXG4gICAgc3VwZXIoKTtcclxuXHJcbiAgICBvcHRpb25zID0gbWVyZ2UoIHtcclxuICAgICAgLy8gZGVmYXVsdHNcclxuICAgICAgZ3JpZFN0cm9rZTogJ2JsYWNrJyxcclxuICAgICAgZ3JpZExpbmVXaWR0aDogMSxcclxuICAgICAgYmFja2dyb3VuZFN0cm9rZTogbnVsbCxcclxuICAgICAgYmFja2dyb3VuZEZpbGw6ICd3aGl0ZScsXHJcbiAgICAgIGJhY2tncm91bmRMaW5lV2lkdGg6IDEsXHJcbiAgICAgIHNoYXBlU3Ryb2tlOiBuZXcgQ29sb3IoIHNoYXBlRmlsbENvbG9yICkuY29sb3JVdGlsc0RhcmtlciggMC4yICksIC8vIGRhcmtlbmluZyBmYWN0b3IgZW1waXJpY2FsbHkgZGV0ZXJtaW5lZFxyXG4gICAgICBzaGFwZUxpbmVXaWR0aDogMVxyXG4gICAgfSwgb3B0aW9ucyApO1xyXG5cclxuICAgIHRoaXMuYWRkQ2hpbGQoIG5ldyBSZWN0YW5nbGUoIDAsIDAsIGNvbHVtbnMgKiBjZWxsTGVuZ3RoLCByb3dzICogY2VsbExlbmd0aCwgMCwgMCwge1xyXG4gICAgICBmaWxsOiBvcHRpb25zLmJhY2tncm91bmRGaWxsLFxyXG4gICAgICBzdHJva2U6IG9wdGlvbnMuYmFja2dyb3VuZFN0cm9rZSxcclxuICAgICAgbGluZVdpZHRoOiBvcHRpb25zLmJhY2tncm91bmRMaW5lV2lkdGhcclxuICAgIH0gKSApO1xyXG5cclxuICAgIHRoaXMuYWRkQ2hpbGQoIG5ldyBHcmlkKCBuZXcgQm91bmRzMiggMCwgMCwgY29sdW1ucyAqIGNlbGxMZW5ndGgsIHJvd3MgKiBjZWxsTGVuZ3RoICksIGNlbGxMZW5ndGgsIHtcclxuICAgICAgc3Ryb2tlOiBvcHRpb25zLmdyaWRTdHJva2UsXHJcbiAgICAgIGxpbmVXaWR0aDogb3B0aW9ucy5ncmlkTGluZVdpZHRoLFxyXG4gICAgICBmaWxsOiBvcHRpb25zLmdyaWRGaWxsXHJcbiAgICB9ICkgKTtcclxuXHJcbiAgICBvY2N1cGllZENlbGxzLmZvckVhY2goIG9jY3VwaWVkQ2VsbCA9PiB7XHJcbiAgICAgIHRoaXMuYWRkQ2hpbGQoIG5ldyBSZWN0YW5nbGUoIDAsIDAsIGNlbGxMZW5ndGgsIGNlbGxMZW5ndGgsIDAsIDAsIHtcclxuICAgICAgICBmaWxsOiBzaGFwZUZpbGxDb2xvcixcclxuICAgICAgICBzdHJva2U6IG9wdGlvbnMuc2hhcGVTdHJva2UsXHJcbiAgICAgICAgbGluZVdpZHRoOiBvcHRpb25zLnNoYXBlTGluZVdpZHRoLFxyXG4gICAgICAgIGxlZnQ6IG9jY3VwaWVkQ2VsbC54ICogY2VsbExlbmd0aCxcclxuICAgICAgICB0b3A6IG9jY3VwaWVkQ2VsbC55ICogY2VsbExlbmd0aFxyXG4gICAgICB9ICkgKTtcclxuICAgIH0gKTtcclxuXHJcbiAgICAvLyBQYXNzIG9wdGlvbnMgdGhyb3VnaCB0byB0aGUgcGFyZW50IGNsYXNzLlxyXG4gICAgdGhpcy5tdXRhdGUoIG9wdGlvbnMgKTtcclxuICB9XHJcbn1cclxuXHJcbmFyZWFCdWlsZGVyLnJlZ2lzdGVyKCAnR3JpZEljb24nLCBHcmlkSWNvbiApO1xyXG5leHBvcnQgZGVmYXVsdCBHcmlkSWNvbjsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxPQUFPLE1BQU0sK0JBQStCO0FBQ25ELE9BQU9DLEtBQUssTUFBTSxtQ0FBbUM7QUFDckQsU0FBU0MsS0FBSyxFQUFFQyxJQUFJLEVBQUVDLFNBQVMsUUFBUSxtQ0FBbUM7QUFDMUUsT0FBT0MsV0FBVyxNQUFNLHNCQUFzQjtBQUM5QyxPQUFPQyxJQUFJLE1BQU0sV0FBVztBQUU1QixNQUFNQyxRQUFRLFNBQVNKLElBQUksQ0FBQztFQUUxQjtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0VBQ0VLLFdBQVdBLENBQUVDLE9BQU8sRUFBRUMsSUFBSSxFQUFFQyxVQUFVLEVBQUVDLGNBQWMsRUFBRUMsYUFBYSxFQUFFQyxPQUFPLEVBQUc7SUFFL0UsS0FBSyxDQUFDLENBQUM7SUFFUEEsT0FBTyxHQUFHYixLQUFLLENBQUU7TUFDZjtNQUNBYyxVQUFVLEVBQUUsT0FBTztNQUNuQkMsYUFBYSxFQUFFLENBQUM7TUFDaEJDLGdCQUFnQixFQUFFLElBQUk7TUFDdEJDLGNBQWMsRUFBRSxPQUFPO01BQ3ZCQyxtQkFBbUIsRUFBRSxDQUFDO01BQ3RCQyxXQUFXLEVBQUUsSUFBSWxCLEtBQUssQ0FBRVUsY0FBZSxDQUFDLENBQUNTLGdCQUFnQixDQUFFLEdBQUksQ0FBQztNQUFFO01BQ2xFQyxjQUFjLEVBQUU7SUFDbEIsQ0FBQyxFQUFFUixPQUFRLENBQUM7SUFFWixJQUFJLENBQUNTLFFBQVEsQ0FBRSxJQUFJbkIsU0FBUyxDQUFFLENBQUMsRUFBRSxDQUFDLEVBQUVLLE9BQU8sR0FBR0UsVUFBVSxFQUFFRCxJQUFJLEdBQUdDLFVBQVUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO01BQ2pGYSxJQUFJLEVBQUVWLE9BQU8sQ0FBQ0ksY0FBYztNQUM1Qk8sTUFBTSxFQUFFWCxPQUFPLENBQUNHLGdCQUFnQjtNQUNoQ1MsU0FBUyxFQUFFWixPQUFPLENBQUNLO0lBQ3JCLENBQUUsQ0FBRSxDQUFDO0lBRUwsSUFBSSxDQUFDSSxRQUFRLENBQUUsSUFBSWpCLElBQUksQ0FBRSxJQUFJTixPQUFPLENBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRVMsT0FBTyxHQUFHRSxVQUFVLEVBQUVELElBQUksR0FBR0MsVUFBVyxDQUFDLEVBQUVBLFVBQVUsRUFBRTtNQUNqR2MsTUFBTSxFQUFFWCxPQUFPLENBQUNDLFVBQVU7TUFDMUJXLFNBQVMsRUFBRVosT0FBTyxDQUFDRSxhQUFhO01BQ2hDUSxJQUFJLEVBQUVWLE9BQU8sQ0FBQ2E7SUFDaEIsQ0FBRSxDQUFFLENBQUM7SUFFTGQsYUFBYSxDQUFDZSxPQUFPLENBQUVDLFlBQVksSUFBSTtNQUNyQyxJQUFJLENBQUNOLFFBQVEsQ0FBRSxJQUFJbkIsU0FBUyxDQUFFLENBQUMsRUFBRSxDQUFDLEVBQUVPLFVBQVUsRUFBRUEsVUFBVSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7UUFDaEVhLElBQUksRUFBRVosY0FBYztRQUNwQmEsTUFBTSxFQUFFWCxPQUFPLENBQUNNLFdBQVc7UUFDM0JNLFNBQVMsRUFBRVosT0FBTyxDQUFDUSxjQUFjO1FBQ2pDUSxJQUFJLEVBQUVELFlBQVksQ0FBQ0UsQ0FBQyxHQUFHcEIsVUFBVTtRQUNqQ3FCLEdBQUcsRUFBRUgsWUFBWSxDQUFDSSxDQUFDLEdBQUd0QjtNQUN4QixDQUFFLENBQUUsQ0FBQztJQUNQLENBQUUsQ0FBQzs7SUFFSDtJQUNBLElBQUksQ0FBQ3VCLE1BQU0sQ0FBRXBCLE9BQVEsQ0FBQztFQUN4QjtBQUNGO0FBRUFULFdBQVcsQ0FBQzhCLFFBQVEsQ0FBRSxVQUFVLEVBQUU1QixRQUFTLENBQUM7QUFDNUMsZUFBZUEsUUFBUSJ9