// Copyright 2014-2023, University of Colorado Boulder

/**
 * A Scenery node that represents a fraction.
 *
 * @author John Blanco
 */

import merge from '../../../../phet-core/js/merge.js';
import PhetFont from '../../../../scenery-phet/js/PhetFont.js';
import { Line, Node, Text } from '../../../../scenery/js/imports.js';
import areaBuilder from '../../areaBuilder.js';
class FractionNode extends Node {
  /**
   * @param {Fraction} fraction
   * @param {Object} [options]
   */
  constructor(fraction, options) {
    super();
    options = merge({
      // default options
      font: new PhetFont({
        size: 18
      }),
      color: 'black',
      fractionBarLineWidth: 1,
      // this option controls the width of the fraction bar as a function of the widest of the numerator and denominator.
      fractionBarWidthProportion: 1.1
    }, options);
    assert && assert(options.fractionBarWidthProportion >= 1, 'The fraction bar must be at least the width of the larger fraction component.');

    // Create and add the pieces
    this.numeratorNode = new Text('0', {
      font: options.font,
      fill: options.color
    });
    this.addChild(this.numeratorNode);
    this.denominatorNode = new Text('0', {
      font: options.font,
      fill: options.color
    });
    this.addChild(this.denominatorNode);
    const fractionBarWidth = options.fractionBarWidthProportion * Math.max(this.numeratorNode.width, this.denominatorNode.width);
    this.fractionBarNode = new Line(0, 0, fractionBarWidth, 0, {
      stroke: options.color,
      lineWidth: options.fractionBarLineWidth
    });
    this.addChild(this.fractionBarNode);
    this._fraction = fraction;
    this.update();
  }

  // @private
  update() {
    this.numeratorNode.string = this._fraction.numerator.toString();
    this.denominatorNode.string = this._fraction.denominator.toString();

    // Note: The fraction bar width is not updated here because the Line type didn't support changes when this code
    // was developed and the code that used this node didn't really need it.  If this code is being used in a more
    // general way, where the elements of the fraction could reach multiple digits, adjustments to the size of the
    // fraction bar will need to be added here.

    // layout
    this.numeratorNode.centerX = this.fractionBarNode.centerX;
    this.denominatorNode.centerX = this.fractionBarNode.centerX;
    this.fractionBarNode.centerY = this.numeratorNode.bottom;
    this.denominatorNode.top = this.fractionBarNode.bottom;
  }
  set fraction(fraction) {
    this._fraction = fraction;
    this.update();
  }
  get fraction() {
    return this._fraction;
  }
}
areaBuilder.register('FractionNode', FractionNode);
export default FractionNode;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtZXJnZSIsIlBoZXRGb250IiwiTGluZSIsIk5vZGUiLCJUZXh0IiwiYXJlYUJ1aWxkZXIiLCJGcmFjdGlvbk5vZGUiLCJjb25zdHJ1Y3RvciIsImZyYWN0aW9uIiwib3B0aW9ucyIsImZvbnQiLCJzaXplIiwiY29sb3IiLCJmcmFjdGlvbkJhckxpbmVXaWR0aCIsImZyYWN0aW9uQmFyV2lkdGhQcm9wb3J0aW9uIiwiYXNzZXJ0IiwibnVtZXJhdG9yTm9kZSIsImZpbGwiLCJhZGRDaGlsZCIsImRlbm9taW5hdG9yTm9kZSIsImZyYWN0aW9uQmFyV2lkdGgiLCJNYXRoIiwibWF4Iiwid2lkdGgiLCJmcmFjdGlvbkJhck5vZGUiLCJzdHJva2UiLCJsaW5lV2lkdGgiLCJfZnJhY3Rpb24iLCJ1cGRhdGUiLCJzdHJpbmciLCJudW1lcmF0b3IiLCJ0b1N0cmluZyIsImRlbm9taW5hdG9yIiwiY2VudGVyWCIsImNlbnRlclkiLCJib3R0b20iLCJ0b3AiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIkZyYWN0aW9uTm9kZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxNC0yMDIzLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBBIFNjZW5lcnkgbm9kZSB0aGF0IHJlcHJlc2VudHMgYSBmcmFjdGlvbi5cclxuICpcclxuICogQGF1dGhvciBKb2huIEJsYW5jb1xyXG4gKi9cclxuXHJcbmltcG9ydCBtZXJnZSBmcm9tICcuLi8uLi8uLi8uLi9waGV0LWNvcmUvanMvbWVyZ2UuanMnO1xyXG5pbXBvcnQgUGhldEZvbnQgZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS1waGV0L2pzL1BoZXRGb250LmpzJztcclxuaW1wb3J0IHsgTGluZSwgTm9kZSwgVGV4dCB9IGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XHJcbmltcG9ydCBhcmVhQnVpbGRlciBmcm9tICcuLi8uLi9hcmVhQnVpbGRlci5qcyc7XHJcblxyXG5jbGFzcyBGcmFjdGlvbk5vZGUgZXh0ZW5kcyBOb2RlIHtcclxuXHJcbiAgLyoqXHJcbiAgICogQHBhcmFtIHtGcmFjdGlvbn0gZnJhY3Rpb25cclxuICAgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXHJcbiAgICovXHJcbiAgY29uc3RydWN0b3IoIGZyYWN0aW9uLCBvcHRpb25zICkge1xyXG4gICAgc3VwZXIoKTtcclxuICAgIG9wdGlvbnMgPSBtZXJnZSgge1xyXG4gICAgICAvLyBkZWZhdWx0IG9wdGlvbnNcclxuICAgICAgZm9udDogbmV3IFBoZXRGb250KCB7IHNpemU6IDE4IH0gKSxcclxuICAgICAgY29sb3I6ICdibGFjaycsXHJcbiAgICAgIGZyYWN0aW9uQmFyTGluZVdpZHRoOiAxLFxyXG5cclxuICAgICAgLy8gdGhpcyBvcHRpb24gY29udHJvbHMgdGhlIHdpZHRoIG9mIHRoZSBmcmFjdGlvbiBiYXIgYXMgYSBmdW5jdGlvbiBvZiB0aGUgd2lkZXN0IG9mIHRoZSBudW1lcmF0b3IgYW5kIGRlbm9taW5hdG9yLlxyXG4gICAgICBmcmFjdGlvbkJhcldpZHRoUHJvcG9ydGlvbjogMS4xXHJcbiAgICB9LCBvcHRpb25zICk7XHJcblxyXG4gICAgYXNzZXJ0ICYmIGFzc2VydCggb3B0aW9ucy5mcmFjdGlvbkJhcldpZHRoUHJvcG9ydGlvbiA+PSAxLCAnVGhlIGZyYWN0aW9uIGJhciBtdXN0IGJlIGF0IGxlYXN0IHRoZSB3aWR0aCBvZiB0aGUgbGFyZ2VyIGZyYWN0aW9uIGNvbXBvbmVudC4nICk7XHJcblxyXG4gICAgLy8gQ3JlYXRlIGFuZCBhZGQgdGhlIHBpZWNlc1xyXG4gICAgdGhpcy5udW1lcmF0b3JOb2RlID0gbmV3IFRleHQoICcwJywgeyBmb250OiBvcHRpb25zLmZvbnQsIGZpbGw6IG9wdGlvbnMuY29sb3IgfSApO1xyXG4gICAgdGhpcy5hZGRDaGlsZCggdGhpcy5udW1lcmF0b3JOb2RlICk7XHJcbiAgICB0aGlzLmRlbm9taW5hdG9yTm9kZSA9IG5ldyBUZXh0KCAnMCcsIHsgZm9udDogb3B0aW9ucy5mb250LCBmaWxsOiBvcHRpb25zLmNvbG9yIH0gKTtcclxuICAgIHRoaXMuYWRkQ2hpbGQoIHRoaXMuZGVub21pbmF0b3JOb2RlICk7XHJcbiAgICBjb25zdCBmcmFjdGlvbkJhcldpZHRoID0gb3B0aW9ucy5mcmFjdGlvbkJhcldpZHRoUHJvcG9ydGlvbiAqIE1hdGgubWF4KCB0aGlzLm51bWVyYXRvck5vZGUud2lkdGgsIHRoaXMuZGVub21pbmF0b3JOb2RlLndpZHRoICk7XHJcbiAgICB0aGlzLmZyYWN0aW9uQmFyTm9kZSA9IG5ldyBMaW5lKCAwLCAwLCBmcmFjdGlvbkJhcldpZHRoLCAwLCB7XHJcbiAgICAgIHN0cm9rZTogb3B0aW9ucy5jb2xvcixcclxuICAgICAgbGluZVdpZHRoOiBvcHRpb25zLmZyYWN0aW9uQmFyTGluZVdpZHRoXHJcbiAgICB9ICk7XHJcbiAgICB0aGlzLmFkZENoaWxkKCB0aGlzLmZyYWN0aW9uQmFyTm9kZSApO1xyXG5cclxuICAgIHRoaXMuX2ZyYWN0aW9uID0gZnJhY3Rpb247XHJcbiAgICB0aGlzLnVwZGF0ZSgpO1xyXG4gIH1cclxuXHJcblxyXG4gIC8vIEBwcml2YXRlXHJcbiAgdXBkYXRlKCkge1xyXG4gICAgdGhpcy5udW1lcmF0b3JOb2RlLnN0cmluZyA9IHRoaXMuX2ZyYWN0aW9uLm51bWVyYXRvci50b1N0cmluZygpO1xyXG4gICAgdGhpcy5kZW5vbWluYXRvck5vZGUuc3RyaW5nID0gdGhpcy5fZnJhY3Rpb24uZGVub21pbmF0b3IudG9TdHJpbmcoKTtcclxuXHJcbiAgICAvLyBOb3RlOiBUaGUgZnJhY3Rpb24gYmFyIHdpZHRoIGlzIG5vdCB1cGRhdGVkIGhlcmUgYmVjYXVzZSB0aGUgTGluZSB0eXBlIGRpZG4ndCBzdXBwb3J0IGNoYW5nZXMgd2hlbiB0aGlzIGNvZGVcclxuICAgIC8vIHdhcyBkZXZlbG9wZWQgYW5kIHRoZSBjb2RlIHRoYXQgdXNlZCB0aGlzIG5vZGUgZGlkbid0IHJlYWxseSBuZWVkIGl0LiAgSWYgdGhpcyBjb2RlIGlzIGJlaW5nIHVzZWQgaW4gYSBtb3JlXHJcbiAgICAvLyBnZW5lcmFsIHdheSwgd2hlcmUgdGhlIGVsZW1lbnRzIG9mIHRoZSBmcmFjdGlvbiBjb3VsZCByZWFjaCBtdWx0aXBsZSBkaWdpdHMsIGFkanVzdG1lbnRzIHRvIHRoZSBzaXplIG9mIHRoZVxyXG4gICAgLy8gZnJhY3Rpb24gYmFyIHdpbGwgbmVlZCB0byBiZSBhZGRlZCBoZXJlLlxyXG5cclxuICAgIC8vIGxheW91dFxyXG4gICAgdGhpcy5udW1lcmF0b3JOb2RlLmNlbnRlclggPSB0aGlzLmZyYWN0aW9uQmFyTm9kZS5jZW50ZXJYO1xyXG4gICAgdGhpcy5kZW5vbWluYXRvck5vZGUuY2VudGVyWCA9IHRoaXMuZnJhY3Rpb25CYXJOb2RlLmNlbnRlclg7XHJcbiAgICB0aGlzLmZyYWN0aW9uQmFyTm9kZS5jZW50ZXJZID0gdGhpcy5udW1lcmF0b3JOb2RlLmJvdHRvbTtcclxuICAgIHRoaXMuZGVub21pbmF0b3JOb2RlLnRvcCA9IHRoaXMuZnJhY3Rpb25CYXJOb2RlLmJvdHRvbTtcclxuICB9XHJcblxyXG4gIHNldCBmcmFjdGlvbiggZnJhY3Rpb24gKSB7XHJcbiAgICB0aGlzLl9mcmFjdGlvbiA9IGZyYWN0aW9uO1xyXG4gICAgdGhpcy51cGRhdGUoKTtcclxuICB9XHJcblxyXG4gIGdldCBmcmFjdGlvbigpIHtcclxuICAgIHJldHVybiB0aGlzLl9mcmFjdGlvbjtcclxuICB9XHJcbn1cclxuXHJcbmFyZWFCdWlsZGVyLnJlZ2lzdGVyKCAnRnJhY3Rpb25Ob2RlJywgRnJhY3Rpb25Ob2RlICk7XHJcbmV4cG9ydCBkZWZhdWx0IEZyYWN0aW9uTm9kZTsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsS0FBSyxNQUFNLG1DQUFtQztBQUNyRCxPQUFPQyxRQUFRLE1BQU0seUNBQXlDO0FBQzlELFNBQVNDLElBQUksRUFBRUMsSUFB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