// Copyright 2014-2022, University of Colorado Boulder

/**
 * The 'Game' screen in the Area Builder simulation. Conforms to the contract specified in joist/Screen.
 *
 * @author John Blanco
 */

import Property from '../../../axon/js/Property.js';
import Screen from '../../../joist/js/Screen.js';
import ScreenIcon from '../../../joist/js/ScreenIcon.js';
import { Image } from '../../../scenery/js/imports.js';
import gameIcon_png from '../../images/gameIcon_png.js';
import areaBuilder from '../areaBuilder.js';
import AreaBuilderStrings from '../AreaBuilderStrings.js';
import AreaBuilderSharedConstants from '../common/AreaBuilderSharedConstants.js';
import AreaBuilderIconFactory from '../common/view/AreaBuilderIconFactory.js';
import AreaBuilderChallengeFactory from './model/AreaBuilderChallengeFactory.js';
import AreaBuilderGameModel from './model/AreaBuilderGameModel.js';
import QuizGameModel from './model/QuizGameModel.js';
import AreaBuilderGameView from './view/AreaBuilderGameView.js';
class AreaBuilderGameScreen extends Screen {
  constructor(tandem) {
    const options = {
      name: AreaBuilderStrings.gameStringProperty,
      backgroundColorProperty: new Property(AreaBuilderSharedConstants.BACKGROUND_COLOR),
      homeScreenIcon: new ScreenIcon(new Image(gameIcon_png), {
        maxIconWidthProportion: 1,
        maxIconHeightProportion: 1
      }),
      navigationBarIcon: AreaBuilderIconFactory.createGameScreenNavBarIcon(),
      tandem: tandem
    };
    super(() => new QuizGameModel(new AreaBuilderChallengeFactory(), new AreaBuilderGameModel()), model => new AreaBuilderGameView(model), options);
  }
}
areaBuilder.register('AreaBuilderGameScreen', AreaBuilderGameScreen);
export default AreaBuilderGameScreen;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQcm9wZXJ0eSIsIlNjcmVlbiIsIlNjcmVlbkljb24iLCJJbWFnZSIsImdhbWVJY29uX3BuZyIsImFyZWFCdWlsZGVyIiwiQXJlYUJ1aWxkZXJTdHJpbmdzIiwiQXJlYUJ1aWxkZXJTaGFyZWRDb25zdGFudHMiLCJBcmVhQnVpbGRlckljb25GYWN0b3J5IiwiQXJlYUJ1aWxkZXJDaGFsbGVuZ2VGYWN0b3J5IiwiQXJlYUJ1aWxkZXJHYW1lTW9kZWwiLCJRdWl6R2FtZU1vZGVsIiwiQXJlYUJ1aWxkZXJHYW1lVmlldyIsIkFyZWFCdWlsZGVyR2FtZVNjcmVlbiIsImNvbnN0cnVjdG9yIiwidGFuZGVtIiwib3B0aW9ucyIsIm5hbWUiLCJnYW1lU3RyaW5nUHJvcGVydHkiLCJiYWNrZ3JvdW5kQ29sb3JQcm9wZXJ0eSIsIkJBQ0tHUk9VTkRfQ09MT1IiLCJob21lU2NyZWVuSWNvbiIsIm1heEljb25XaWR0aFByb3BvcnRpb24iLCJtYXhJY29uSGVpZ2h0UHJvcG9ydGlvbiIsIm5hdmlnYXRpb25CYXJJY29uIiwiY3JlYXRlR2FtZVNjcmVlbk5hdkJhckljb24iLCJtb2RlbCIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiQXJlYUJ1aWxkZXJHYW1lU2NyZWVuLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE0LTIwMjIsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIFRoZSAnR2FtZScgc2NyZWVuIGluIHRoZSBBcmVhIEJ1aWxkZXIgc2ltdWxhdGlvbi4gQ29uZm9ybXMgdG8gdGhlIGNvbnRyYWN0IHNwZWNpZmllZCBpbiBqb2lzdC9TY3JlZW4uXHJcbiAqXHJcbiAqIEBhdXRob3IgSm9obiBCbGFuY29cclxuICovXHJcblxyXG5pbXBvcnQgUHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vYXhvbi9qcy9Qcm9wZXJ0eS5qcyc7XHJcbmltcG9ydCBTY3JlZW4gZnJvbSAnLi4vLi4vLi4vam9pc3QvanMvU2NyZWVuLmpzJztcclxuaW1wb3J0IFNjcmVlbkljb24gZnJvbSAnLi4vLi4vLi4vam9pc3QvanMvU2NyZWVuSWNvbi5qcyc7XHJcbmltcG9ydCB7IEltYWdlIH0gZnJvbSAnLi4vLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IGdhbWVJY29uX3BuZyBmcm9tICcuLi8uLi9pbWFnZXMvZ2FtZUljb25fcG5nLmpzJztcclxuaW1wb3J0IGFyZWFCdWlsZGVyIGZyb20gJy4uL2FyZWFCdWlsZGVyLmpzJztcclxuaW1wb3J0IEFyZWFCdWlsZGVyU3RyaW5ncyBmcm9tICcuLi9BcmVhQnVpbGRlclN0cmluZ3MuanMnO1xyXG5pbXBvcnQgQXJlYUJ1aWxkZXJTaGFyZWRDb25zdGFudHMgZnJvbSAnLi4vY29tbW9uL0FyZWFCdWlsZGVyU2hhcmVkQ29uc3RhbnRzLmpzJztcclxuaW1wb3J0IEFyZWFCdWlsZGVySWNvbkZhY3RvcnkgZnJvbSAnLi4vY29tbW9uL3ZpZXcvQXJlYUJ1aWxkZXJJY29uRmFjdG9yeS5qcyc7XHJcbmltcG9ydCBBcmVhQnVpbGRlckNoYWxsZW5nZUZhY3RvcnkgZnJvbSAnLi9tb2RlbC9BcmVhQnVpbGRlckNoYWxsZW5nZUZhY3RvcnkuanMnO1xyXG5pbXBvcnQgQXJlYUJ1aWxkZXJHYW1lTW9kZWwgZnJvbSAnLi9tb2RlbC9BcmVhQnVpbGRlckdhbWVNb2RlbC5qcyc7XHJcbmltcG9ydCBRdWl6R2FtZU1vZGVsIGZyb20gJy4vbW9kZWwvUXVpekdhbWVNb2RlbC5qcyc7XHJcbmltcG9ydCBBcmVhQnVpbGRlckdhbWVWaWV3IGZyb20gJy4vdmlldy9BcmVhQnVpbGRlckdhbWVWaWV3LmpzJztcclxuXHJcbmNsYXNzIEFyZWFCdWlsZGVyR2FtZVNjcmVlbiBleHRlbmRzIFNjcmVlbiB7XHJcblxyXG4gIGNvbnN0cnVjdG9yKCB0YW5kZW0gKSB7XHJcblxyXG4gICAgY29uc3Qgb3B0aW9ucyA9IHtcclxuICAgICAgbmFtZTogQXJlYUJ1aWxkZXJTdHJpbmdzLmdhbWVTdHJpbmdQcm9wZXJ0eSxcclxuICAgICAgYmFja2dyb3VuZENvbG9yUHJvcGVydHk6IG5ldyBQcm9wZXJ0eSggQXJlYUJ1aWxkZXJTaGFyZWRDb25zdGFudHMuQkFDS0dST1VORF9DT0xPUiApLFxyXG4gICAgICBob21lU2NyZWVuSWNvbjogbmV3IFNjcmVlbkljb24oIG5ldyBJbWFnZSggZ2FtZUljb25fcG5nICksIHtcclxuICAgICAgICBtYXhJY29uV2lkdGhQcm9wb3J0aW9uOiAxLFxyXG4gICAgICAgIG1heEljb25IZWlnaHRQcm9wb3J0aW9uOiAxXHJcbiAgICAgIH0gKSxcclxuICAgICAgbmF2aWdhdGlvbkJhckljb246IEFyZWFCdWlsZGVySWNvbkZhY3RvcnkuY3JlYXRlR2FtZVNjcmVlbk5hdkJhckljb24oKSxcclxuICAgICAgdGFuZGVtOiB0YW5kZW1cclxuICAgIH07XHJcblxyXG4gICAgc3VwZXIoXHJcbiAgICAgICgpID0+IG5ldyBRdWl6R2FtZU1vZGVsKCBuZXcgQXJlYUJ1aWxkZXJDaGFsbGVuZ2VGYWN0b3J5KCksIG5ldyBBcmVhQnVpbGRlckdhbWVNb2RlbCgpICksXHJcbiAgICAgIG1vZGVsID0+IG5ldyBBcmVhQnVpbGRlckdhbWVWaWV3KCBtb2RlbCApLFxyXG4gICAgICBvcHRpb25zXHJcbiAgICApO1xyXG4gIH1cclxufVxyXG5cclxuYXJlYUJ1aWxkZXIucmVnaXN0ZXIoICdBcmVhQnVpbGRlckdhbWVTY3JlZW4nLCBBcmVhQnVpbGRlckdhbWVTY3JlZW4gKTtcclxuZXhwb3J0IGRlZmF1bHQgQXJlYUJ1aWxkZXJHYW1lU2NyZWVuOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxRQUFRLE1BQU0sOEJBQThCO0FBQ25ELE9BQU9DLE1BQU0sTUFBTSw2QkFBNkI7QUFDaEQsT0FBT0MsVUFBVSxNQUFNLGlDQUFpQztBQUN4RCxTQUFTQyxLQUFLLFFBQVEsZ0NBQWdDO0FBQ3RELE9BQU9DLFlBQVksTUFBTSw4QkFBOEI7QUFDdkQsT0FBT0MsV0FBVyxNQUFNLG1CQUFtQjtBQUMzQyxPQUFPQyxrQkFBa0IsTUFBTSwwQkFBMEI7QUFDekQsT0FBT0MsMEJBQTBCLE1BQU0seUNBQXlDO0FBQ2hGLE9BQU9DLHNCQUFzQixNQUFNLDBDQUEwQztBQUM3RSxPQUFPQywyQkFBMkIsTUFBTSx3Q0FBd0M7QUFDaEYsT0FBT0Msb0JBQW9CLE1BQU0saUNBQWlDO0FBQ2xFLE9BQU9DLGFBQWEsTUFBTSwwQkFBMEI7QUFDcEQsT0FBT0MsbUJBQW1CLE1BQU0sK0JBQStCO0FBRS9ELE1BQU1DLHFCQUFxQixTQUFTWixNQUFNLENBQUM7RUFFekNhLFdBQVdBLENBQUVDLE1BQU0sRUFBRztJQUVwQixNQUFNQyxPQUFPLEdBQUc7TUFDZEMsSUFBSSxFQUFFWCxrQkFBa0IsQ0FBQ1ksa0JBQWtCO01BQzNDQyx1QkFBdUIsRUFBRSxJQUFJbkIsUUFBUSxDQUFFTywwQkFBMEIsQ0FBQ2EsZ0JBQWlCLENBQUM7TUFDcEZDLGNBQWMsRUFBRSxJQUFJbkIsVUFBVSxDQUFFLElBQUlDLEtBQUssQ0FBRUMsWUFBYSxDQUFDLEVBQUU7UUFDekRrQixzQkFBc0IsRUFBRSxDQUFDO1FBQ3pCQyx1QkFBdUIsRUFBRTtNQUMzQixDQUFFLENBQUM7TUFDSEMsaUJBQWlCLEVBQUVoQixzQkFBc0IsQ0FBQ2lCLDBCQUEwQixDQUFDLENBQUM7TUFDdEVWLE1BQU0sRUFBRUE7SUFDVixDQUFDO0lBRUQsS0FBSyxDQUNILE1BQU0sSUFBSUosYUFBYSxDQUFFLElBQUlGLDJCQUEyQixDQUFDLENBQUMsRUFBRSxJQUFJQyxvQkFBb0IsQ0FBQyxDQUFFLENBQUMsRUFDeEZnQixLQUFLLElBQUksSUFBSWQsbUJBQW1CLENBQUVjLEtBQU0sQ0FBQyxFQUN6Q1YsT0FDRixDQUFDO0VBQ0g7QUFDRjtBQUVBWCxXQUFXLENBQUNzQixRQUFRLENBQUUsdUJBQXVCLEVBQUVkLHFCQUFzQixDQUFDO0FBQ3RFLGVBQWVBLHFCQUFxQiJ9