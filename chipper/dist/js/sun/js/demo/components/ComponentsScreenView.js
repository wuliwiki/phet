// Copyright 2015-2022, University of Colorado Boulder

/**
 * Demonstration of misc sun UI components.
 * Demos are selected from a combo box, and are instantiated on demand.
 * Use the 'component' query parameter to set the initial selection of the combo box.
 *
 * @author Sam Reid (PhET Interactive Simulations)
 * @author Chris Malley (PixelZoom, Inc.)
 */

import optionize from '../../../../phet-core/js/optionize.js';
import sun from '../../sun.js';
import sunQueryParameters from '../../sunQueryParameters.js';
import DemosScreenView from '../DemosScreenView.js';
import demoABSwitch from './demoABSwitch.js';
import demoCarousel from './demoCarousel.js';
import demoCheckbox from './demoCheckbox.js';
import { demoHSlider, demoVSlider } from './demoSlider.js';
import demoComboBox from './demoComboBox.js';
import demoOnOffSwitch from './demoOnOffSwitch.js';
import demoPageControl from './demoPageControl.js';
import demoNumberSpinner from './demoNumberSpinner.js';
import demoNumberPicker from './demoNumberPicker.js';
import demoToggleSwitch from './demoToggleSwitch.js';
import demoAlignGroup from './demoAlignGroup.js';
import demoAccordionBox from './demoAccordionBox.js';
export default class ComponentsScreenView extends DemosScreenView {
  constructor(providedOptions) {
    const options = optionize()({
      selectedDemoLabel: sunQueryParameters.component
    }, providedOptions);

    // To add a demo, add an entry here of type SunDemo.
    const demos = [{
      label: 'ABSwitch',
      createNode: demoABSwitch
    }, {
      label: 'Carousel',
      createNode: demoCarousel
    }, {
      label: 'Checkbox',
      createNode: demoCheckbox
    }, {
      label: 'ComboBox',
      createNode: demoComboBox
    }, {
      label: 'HSlider',
      createNode: demoHSlider
    }, {
      label: 'VSlider',
      createNode: demoVSlider
    }, {
      label: 'OnOffSwitch',
      createNode: demoOnOffSwitch
    }, {
      label: 'PageControl',
      createNode: demoPageControl
    }, {
      label: 'NumberPicker',
      createNode: demoNumberPicker
    }, {
      label: 'NumberSpinner',
      createNode: demoNumberSpinner
    }, {
      label: 'AlignGroup',
      createNode: demoAlignGroup
    }, {
      label: 'AccordionBox',
      createNode: demoAccordionBox
    }, {
      label: 'ToggleSwitch',
      createNode: demoToggleSwitch
    }];
    super(demos, options);
  }
}
sun.register('ComponentsScreenView', ComponentsScreenView);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJvcHRpb25pemUiLCJzdW4iLCJzdW5RdWVyeVBhcmFtZXRlcnMiLCJEZW1vc1NjcmVlblZpZXciLCJkZW1vQUJTd2l0Y2giLCJkZW1vQ2Fyb3VzZWwiLCJkZW1vQ2hlY2tib3giLCJkZW1vSFNsaWRlciIsImRlbW9WU2xpZGVyIiwiZGVtb0NvbWJvQm94IiwiZGVtb09uT2ZmU3dpdGNoIiwiZGVtb1BhZ2VDb250cm9sIiwiZGVtb051bWJlclNwaW5uZXIiLCJkZW1vTnVtYmVyUGlja2VyIiwiZGVtb1RvZ2dsZVN3aXRjaCIsImRlbW9BbGlnbkdyb3VwIiwiZGVtb0FjY29yZGlvbkJveCIsIkNvbXBvbmVudHNTY3JlZW5WaWV3IiwiY29uc3RydWN0b3IiLCJwcm92aWRlZE9wdGlvbnMiLCJvcHRpb25zIiwic2VsZWN0ZWREZW1vTGFiZWwiLCJjb21wb25lbnQiLCJkZW1vcyIsImxhYmVsIiwiY3JlYXRlTm9kZSIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiQ29tcG9uZW50c1NjcmVlblZpZXcudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTUtMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogRGVtb25zdHJhdGlvbiBvZiBtaXNjIHN1biBVSSBjb21wb25lbnRzLlxyXG4gKiBEZW1vcyBhcmUgc2VsZWN0ZWQgZnJvbSBhIGNvbWJvIGJveCwgYW5kIGFyZSBpbnN0YW50aWF0ZWQgb24gZGVtYW5kLlxyXG4gKiBVc2UgdGhlICdjb21wb25lbnQnIHF1ZXJ5IHBhcmFtZXRlciB0byBzZXQgdGhlIGluaXRpYWwgc2VsZWN0aW9uIG9mIHRoZSBjb21ibyBib3guXHJcbiAqXHJcbiAqIEBhdXRob3IgU2FtIFJlaWQgKFBoRVQgSW50ZXJhY3RpdmUgU2ltdWxhdGlvbnMpXHJcbiAqIEBhdXRob3IgQ2hyaXMgTWFsbGV5IChQaXhlbFpvb20sIEluYy4pXHJcbiAqL1xyXG5cclxuaW1wb3J0IG9wdGlvbml6ZSwgeyBFbXB0eVNlbGZPcHRpb25zIH0gZnJvbSAnLi4vLi4vLi4vLi4vcGhldC1jb3JlL2pzL29wdGlvbml6ZS5qcyc7XHJcbmltcG9ydCBQaWNrUmVxdWlyZWQgZnJvbSAnLi4vLi4vLi4vLi4vcGhldC1jb3JlL2pzL3R5cGVzL1BpY2tSZXF1aXJlZC5qcyc7XHJcbmltcG9ydCBzdW4gZnJvbSAnLi4vLi4vc3VuLmpzJztcclxuaW1wb3J0IHN1blF1ZXJ5UGFyYW1ldGVycyBmcm9tICcuLi8uLi9zdW5RdWVyeVBhcmFtZXRlcnMuanMnO1xyXG5pbXBvcnQgRGVtb3NTY3JlZW5WaWV3LCB7IERlbW9zU2NyZWVuVmlld09wdGlvbnMgfSBmcm9tICcuLi9EZW1vc1NjcmVlblZpZXcuanMnO1xyXG5pbXBvcnQgZGVtb0FCU3dpdGNoIGZyb20gJy4vZGVtb0FCU3dpdGNoLmpzJztcclxuaW1wb3J0IGRlbW9DYXJvdXNlbCBmcm9tICcuL2RlbW9DYXJvdXNlbC5qcyc7XHJcbmltcG9ydCBkZW1vQ2hlY2tib3ggZnJvbSAnLi9kZW1vQ2hlY2tib3guanMnO1xyXG5pbXBvcnQgeyBkZW1vSFNsaWRlciwgZGVtb1ZTbGlkZXIgfSBmcm9tICcuL2RlbW9TbGlkZXIuanMnO1xyXG5pbXBvcnQgZGVtb0NvbWJvQm94IGZyb20gJy4vZGVtb0NvbWJvQm94LmpzJztcclxuaW1wb3J0IGRlbW9Pbk9mZlN3aXRjaCBmcm9tICcuL2RlbW9Pbk9mZlN3aXRjaC5qcyc7XHJcbmltcG9ydCBkZW1vUGFnZUNvbnRyb2wgZnJvbSAnLi9kZW1vUGFnZUNvbnRyb2wuanMnO1xyXG5pbXBvcnQgZGVtb051bWJlclNwaW5uZXIgZnJvbSAnLi9kZW1vTnVtYmVyU3Bpbm5lci5qcyc7XHJcbmltcG9ydCBkZW1vTnVtYmVyUGlja2VyIGZyb20gJy4vZGVtb051bWJlclBpY2tlci5qcyc7XHJcbmltcG9ydCBkZW1vVG9nZ2xlU3dpdGNoIGZyb20gJy4vZGVtb1RvZ2dsZVN3aXRjaC5qcyc7XHJcbmltcG9ydCBkZW1vQWxpZ25Hcm91cCBmcm9tICcuL2RlbW9BbGlnbkdyb3VwLmpzJztcclxuaW1wb3J0IGRlbW9BY2NvcmRpb25Cb3ggZnJvbSAnLi9kZW1vQWNjb3JkaW9uQm94LmpzJztcclxuXHJcbnR5cGUgU2VsZk9wdGlvbnMgPSBFbXB0eVNlbGZPcHRpb25zO1xyXG50eXBlIENvbXBvbmVudHNTY3JlZW5WaWV3T3B0aW9ucyA9IFNlbGZPcHRpb25zICYgUGlja1JlcXVpcmVkPERlbW9zU2NyZWVuVmlld09wdGlvbnMsICd0YW5kZW0nPjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENvbXBvbmVudHNTY3JlZW5WaWV3IGV4dGVuZHMgRGVtb3NTY3JlZW5WaWV3IHtcclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKCBwcm92aWRlZE9wdGlvbnM6IENvbXBvbmVudHNTY3JlZW5WaWV3T3B0aW9ucyApIHtcclxuXHJcbiAgICBjb25zdCBvcHRpb25zID0gb3B0aW9uaXplPENvbXBvbmVudHNTY3JlZW5WaWV3T3B0aW9ucywgU2VsZk9wdGlvbnMsIERlbW9zU2NyZWVuVmlld09wdGlvbnM+KCkoIHtcclxuICAgICAgc2VsZWN0ZWREZW1vTGFiZWw6IHN1blF1ZXJ5UGFyYW1ldGVycy5jb21wb25lbnRcclxuICAgIH0sIHByb3ZpZGVkT3B0aW9ucyApO1xyXG5cclxuICAgIC8vIFRvIGFkZCBhIGRlbW8sIGFkZCBhbiBlbnRyeSBoZXJlIG9mIHR5cGUgU3VuRGVtby5cclxuICAgIGNvbnN0IGRlbW9zID0gW1xyXG4gICAgICB7IGxhYmVsOiAnQUJTd2l0Y2gnLCBjcmVhdGVOb2RlOiBkZW1vQUJTd2l0Y2ggfSxcclxuICAgICAgeyBsYWJlbDogJ0Nhcm91c2VsJywgY3JlYXRlTm9kZTogZGVtb0Nhcm91c2VsIH0sXHJcbiAgICAgIHsgbGFiZWw6ICdDaGVja2JveCcsIGNyZWF0ZU5vZGU6IGRlbW9DaGVja2JveCB9LFxyXG4gICAgICB7IGxhYmVsOiAnQ29tYm9Cb3gnLCBjcmVhdGVOb2RlOiBkZW1vQ29tYm9Cb3ggfSxcclxuICAgICAgeyBsYWJlbDogJ0hTbGlkZXInLCBjcmVhdGVOb2RlOiBkZW1vSFNsaWRlciB9LFxyXG4gICAgICB7IGxhYmVsOiAnVlNsaWRlcicsIGNyZWF0ZU5vZGU6IGRlbW9WU2xpZGVyIH0sXHJcbiAgICAgIHsgbGFiZWw6ICdPbk9mZlN3aXRjaCcsIGNyZWF0ZU5vZGU6IGRlbW9Pbk9mZlN3aXRjaCB9LFxyXG4gICAgICB7IGxhYmVsOiAnUGFnZUNvbnRyb2wnLCBjcmVhdGVOb2RlOiBkZW1vUGFnZUNvbnRyb2wgfSxcclxuICAgICAgeyBsYWJlbDogJ051bWJlclBpY2tlcicsIGNyZWF0ZU5vZGU6IGRlbW9OdW1iZXJQaWNrZXIgfSxcclxuICAgICAgeyBsYWJlbDogJ051bWJlclNwaW5uZXInLCBjcmVhdGVOb2RlOiBkZW1vTnVtYmVyU3Bpbm5lciB9LFxyXG4gICAgICB7IGxhYmVsOiAnQWxpZ25Hcm91cCcsIGNyZWF0ZU5vZGU6IGRlbW9BbGlnbkdyb3VwIH0sXHJcbiAgICAgIHsgbGFiZWw6ICdBY2NvcmRpb25Cb3gnLCBjcmVhdGVOb2RlOiBkZW1vQWNjb3JkaW9uQm94IH0sXHJcbiAgICAgIHsgbGFiZWw6ICdUb2dnbGVTd2l0Y2gnLCBjcmVhdGVOb2RlOiBkZW1vVG9nZ2xlU3dpdGNoIH1cclxuICAgIF07XHJcblxyXG4gICAgc3VwZXIoIGRlbW9zLCBvcHRpb25zICk7XHJcbiAgfVxyXG59XHJcblxyXG5zdW4ucmVnaXN0ZXIoICdDb21wb25lbnRzU2NyZWVuVmlldycsIENvbXBvbmVudHNTY3JlZW5WaWV3ICk7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLFNBQVMsTUFBNEIsdUNBQXVDO0FBRW5GLE9BQU9DLEdBQUcsTUFBTSxjQUFjO0FBQzlCLE9BQU9DLGtCQUFrQixNQUFNLDZCQUE2QjtBQUM1RCxPQUFPQyxlQUFlLE1BQWtDLHVCQUF1QjtBQUMvRSxPQUFPQyxZQUFZLE1BQU0sbUJBQW1CO0FBQzVDLE9BQU9DLFlBQVksTUFBTSxtQkFBbUI7QUFDNUMsT0FBT0MsWUFBWSxNQUFNLG1CQUFtQjtBQUM1QyxTQUFTQyxXQUFXLEVBQUVDLFdBQVcsUUFBUSxpQkFBaUI7QUFDMUQsT0FBT0MsWUFBWSxNQUFNLG1CQUFtQjtBQUM1QyxPQUFPQyxlQUFlLE1BQU0sc0JBQXNCO0FBQ2xELE9BQU9DLGVBQWUsTUFBTSxzQkFBc0I7QUFDbEQsT0FBT0MsaUJBQWlCLE1BQU0sd0JBQXdCO0FBQ3RELE9BQU9DLGdCQUFnQixNQUFNLHVCQUF1QjtBQUNwRCxPQUFPQyxnQkFBZ0IsTUFBTSx1QkFBdUI7QUFDcEQsT0FBT0MsY0FBYyxNQUFNLHFCQUFxQjtBQUNoRCxPQUFPQyxnQkFBZ0IsTUFBTSx1QkFBdUI7QUFLcEQsZUFBZSxNQUFNQyxvQkFBb0IsU0FBU2QsZUFBZSxDQUFDO0VBRXpEZSxXQUFXQSxDQUFFQyxlQUE0QyxFQUFHO0lBRWpFLE1BQU1DLE9BQU8sR0FBR3BCLFNBQVMsQ0FBbUUsQ0FBQyxDQUFFO01BQzdGcUIsaUJBQWlCLEVBQUVuQixrQkFBa0IsQ0FBQ29CO0lBQ3hDLENBQUMsRUFBRUgsZUFBZ0IsQ0FBQzs7SUFFcEI7SUFDQSxNQUFNSSxLQUFLLEdBQUcsQ0FDWjtNQUFFQyxLQUFLLEVBQUUsVUFBVTtNQUFFQyxVQUFVLEVBQUVyQjtJQUFhLENBQUMsRUFDL0M7TUFBRW9CLEtBQUssRUFBRSxVQUFVO01BQUVDLFVBQVUsRUFBRXBCO0lBQWEsQ0FBQyxFQUMvQztNQUFFbUIsS0FBSyxFQUFFLFVBQVU7TUFBRUMsVUFBVSxFQUFFbkI7SUFBYSxDQUFDLEVBQy9DO01BQUVrQixLQUFLLEVBQUUsVUFBVTtNQUFFQyxVQUFVLEVBQUVoQjtJQUFhLENBQUMsRUFDL0M7TUFBRWUsS0FBSyxFQUFFLFNBQVM7TUFBRUMsVUFBVSxFQUFFbEI7SUFBWSxDQUFDLEVBQzdDO01BQUVpQixLQUFLLEVBQUUsU0FBUztNQUFFQyxVQUFVLEVBQUVqQjtJQUFZLENBQUMsRUFDN0M7TUFBRWdCLEtBQUssRUFBRSxhQUFhO01BQUVDLFVBQVUsRUFBRWY7SUFBZ0IsQ0FBQyxFQUNyRDtNQUFFYyxLQUFLLEVBQUUsYUFBYTtNQUFFQyxVQUFVLEVBQUVkO0lBQWdCLENBQUMsRUFDckQ7TUFBRWEsS0FBSyxFQUFFLGNBQWM7TUFBRUMsVUFBVSxFQUFFWjtJQUFpQixDQUFDLEVBQ3ZEO01BQUVXLEtBQUssRUFBRSxlQUFlO01BQUVDLFVBQVUsRUFBRWI7SUFBa0IsQ0FBQyxFQUN6RDtNQUFFWSxLQUFLLEVBQUUsWUFBWTtNQUFFQyxVQUFVLEVBQUVWO0lBQWUsQ0FBQyxFQUNuRDtNQUFFUyxLQUFLLEVBQUUsY0FBYztNQUFFQyxVQUFVLEVBQUVUO0lBQWlCLENBQUMsRUFDdkQ7TUFBRVEsS0FBSyxFQUFFLGNBQWM7TUFBRUMsVUFBVSxFQUFFWDtJQUFpQixDQUFDLENBQ3hEO0lBRUQsS0FBSyxDQUFFUyxLQUFLLEVBQUVILE9BQVEsQ0FBQztFQUN6QjtBQUNGO0FBRUFuQixHQUFHLENBQUN5QixRQUFRLENBQUUsc0JBQXNCLEVBQUVULG9CQUFxQixDQUFDIn0=