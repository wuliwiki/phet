// Copyright 2013-2022, University of Colorado Boulder

/**
 * This toggle button uses a boolean Property and a trueNode and falseNode to display its content.
 */

import Tandem from '../../../tandem/js/Tandem.js';
import BooleanToggleNode from '../BooleanToggleNode.js';
import sun from '../sun.js';
import RectangularToggleButton from './RectangularToggleButton.js';
import optionize from '../../../phet-core/js/optionize.js';
export default class BooleanRectangularToggleButton extends RectangularToggleButton {
  /**
   * @param booleanProperty
   * @param trueNode - shown when booleanProperty is true
   * @param falseNode - shown when booleanProperty is false
   * @param providedOptions?
   */
  constructor(booleanProperty, trueNode, falseNode, providedOptions) {
    const content = new BooleanToggleNode(booleanProperty, trueNode, falseNode);
    const options = optionize()({
      content: content,
      tandem: Tandem.REQUIRED,
      tandemNameSuffix: 'Button'
    }, providedOptions);
    super(booleanProperty, false, true, options);
    this.disposeBooleanRectangularToggleButton = () => {
      content.dispose();
    };
  }
  dispose() {
    this.disposeBooleanRectangularToggleButton();
    super.dispose();
  }
}
sun.register('BooleanRectangularToggleButton', BooleanRectangularToggleButton);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJUYW5kZW0iLCJCb29sZWFuVG9nZ2xlTm9kZSIsInN1biIsIlJlY3Rhbmd1bGFyVG9nZ2xlQnV0dG9uIiwib3B0aW9uaXplIiwiQm9vbGVhblJlY3Rhbmd1bGFyVG9nZ2xlQnV0dG9uIiwiY29uc3RydWN0b3IiLCJib29sZWFuUHJvcGVydHkiLCJ0cnVlTm9kZSIsImZhbHNlTm9kZSIsInByb3ZpZGVkT3B0aW9ucyIsImNvbnRlbnQiLCJvcHRpb25zIiwidGFuZGVtIiwiUkVRVUlSRUQiLCJ0YW5kZW1OYW1lU3VmZml4IiwiZGlzcG9zZUJvb2xlYW5SZWN0YW5ndWxhclRvZ2dsZUJ1dHRvbiIsImRpc3Bvc2UiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIkJvb2xlYW5SZWN0YW5ndWxhclRvZ2dsZUJ1dHRvbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxMy0yMDIyLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBUaGlzIHRvZ2dsZSBidXR0b24gdXNlcyBhIGJvb2xlYW4gUHJvcGVydHkgYW5kIGEgdHJ1ZU5vZGUgYW5kIGZhbHNlTm9kZSB0byBkaXNwbGF5IGl0cyBjb250ZW50LlxyXG4gKi9cclxuXHJcbmltcG9ydCBUYW5kZW0gZnJvbSAnLi4vLi4vLi4vdGFuZGVtL2pzL1RhbmRlbS5qcyc7XHJcbmltcG9ydCBCb29sZWFuVG9nZ2xlTm9kZSBmcm9tICcuLi9Cb29sZWFuVG9nZ2xlTm9kZS5qcyc7XHJcbmltcG9ydCBzdW4gZnJvbSAnLi4vc3VuLmpzJztcclxuaW1wb3J0IFJlY3Rhbmd1bGFyVG9nZ2xlQnV0dG9uLCB7IFJlY3Rhbmd1bGFyVG9nZ2xlQnV0dG9uT3B0aW9ucyB9IGZyb20gJy4vUmVjdGFuZ3VsYXJUb2dnbGVCdXR0b24uanMnO1xyXG5pbXBvcnQgeyBOb2RlIH0gZnJvbSAnLi4vLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IG9wdGlvbml6ZSwgeyBFbXB0eVNlbGZPcHRpb25zIH0gZnJvbSAnLi4vLi4vLi4vcGhldC1jb3JlL2pzL29wdGlvbml6ZS5qcyc7XHJcbmltcG9ydCBTdHJpY3RPbWl0IGZyb20gJy4uLy4uLy4uL3BoZXQtY29yZS9qcy90eXBlcy9TdHJpY3RPbWl0LmpzJztcclxuaW1wb3J0IFByb3BlcnR5IGZyb20gJy4uLy4uLy4uL2F4b24vanMvUHJvcGVydHkuanMnO1xyXG5cclxudHlwZSBTZWxmT3B0aW9ucyA9IEVtcHR5U2VsZk9wdGlvbnM7XHJcblxyXG5leHBvcnQgdHlwZSBCb29sZWFuUmVjdGFuZ3VsYXJUb2dnbGVCdXR0b25PcHRpb25zID0gU2VsZk9wdGlvbnMgJiBTdHJpY3RPbWl0PFJlY3Rhbmd1bGFyVG9nZ2xlQnV0dG9uT3B0aW9ucywgJ2NvbnRlbnQnPjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJvb2xlYW5SZWN0YW5ndWxhclRvZ2dsZUJ1dHRvbiBleHRlbmRzIFJlY3Rhbmd1bGFyVG9nZ2xlQnV0dG9uPGJvb2xlYW4+IHtcclxuXHJcbiAgcHJpdmF0ZSByZWFkb25seSBkaXNwb3NlQm9vbGVhblJlY3Rhbmd1bGFyVG9nZ2xlQnV0dG9uOiAoKSA9PiB2b2lkO1xyXG5cclxuICAvKipcclxuICAgKiBAcGFyYW0gYm9vbGVhblByb3BlcnR5XHJcbiAgICogQHBhcmFtIHRydWVOb2RlIC0gc2hvd24gd2hlbiBib29sZWFuUHJvcGVydHkgaXMgdHJ1ZVxyXG4gICAqIEBwYXJhbSBmYWxzZU5vZGUgLSBzaG93biB3aGVuIGJvb2xlYW5Qcm9wZXJ0eSBpcyBmYWxzZVxyXG4gICAqIEBwYXJhbSBwcm92aWRlZE9wdGlvbnM/XHJcbiAgICovXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKCBib29sZWFuUHJvcGVydHk6IFByb3BlcnR5PGJvb2xlYW4+LCB0cnVlTm9kZTogTm9kZSwgZmFsc2VOb2RlOiBOb2RlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgcHJvdmlkZWRPcHRpb25zPzogQm9vbGVhblJlY3Rhbmd1bGFyVG9nZ2xlQnV0dG9uT3B0aW9ucyApIHtcclxuXHJcbiAgICBjb25zdCBjb250ZW50ID0gbmV3IEJvb2xlYW5Ub2dnbGVOb2RlKCBib29sZWFuUHJvcGVydHksIHRydWVOb2RlLCBmYWxzZU5vZGUgKTtcclxuXHJcbiAgICBjb25zdCBvcHRpb25zID0gb3B0aW9uaXplPEJvb2xlYW5SZWN0YW5ndWxhclRvZ2dsZUJ1dHRvbk9wdGlvbnMsIFNlbGZPcHRpb25zLCBSZWN0YW5ndWxhclRvZ2dsZUJ1dHRvbk9wdGlvbnM+KCkoIHtcclxuICAgICAgY29udGVudDogY29udGVudCxcclxuICAgICAgdGFuZGVtOiBUYW5kZW0uUkVRVUlSRUQsXHJcbiAgICAgIHRhbmRlbU5hbWVTdWZmaXg6ICdCdXR0b24nXHJcbiAgICB9LCBwcm92aWRlZE9wdGlvbnMgKTtcclxuXHJcbiAgICBzdXBlciggYm9vbGVhblByb3BlcnR5LCBmYWxzZSwgdHJ1ZSwgb3B0aW9ucyApO1xyXG5cclxuICAgIHRoaXMuZGlzcG9zZUJvb2xlYW5SZWN0YW5ndWxhclRvZ2dsZUJ1dHRvbiA9ICgpID0+IHtcclxuICAgICAgY29udGVudC5kaXNwb3NlKCk7XHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgcHVibGljIG92ZXJyaWRlIGRpc3Bvc2UoKTogdm9pZCB7XHJcbiAgICB0aGlzLmRpc3Bvc2VCb29sZWFuUmVjdGFuZ3VsYXJUb2dnbGVCdXR0b24oKTtcclxuICAgIHN1cGVyLmRpc3Bvc2UoKTtcclxuICB9XHJcbn1cclxuXHJcbnN1bi5yZWdpc3RlciggJ0Jvb2xlYW5SZWN0YW5ndWxhclRvZ2dsZUJ1dHRvbicsIEJvb2xlYW5SZWN0YW5ndWxhclRvZ2dsZUJ1dHRvbiApO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxNQUFNLE1BQU0sOEJBQThCO0FBQ2pELE9BQU9DLGlCQUFpQixNQUFNLHlCQUF5QjtBQUN2RCxPQUFPQyxHQUFHLE1BQU0sV0FBVztBQUMzQixPQUFPQyx1QkFBdUIsTUFBMEMsOEJBQThCO0FBRXRHLE9BQU9DLFNBQVMsTUFBNEIsb0NBQW9DO0FBUWhGLGVBQWUsTUFBTUMsOEJBQThCLFNBQVNGLHVCQUF1QixDQUFVO0VBSTNGO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtFQUNTRyxXQUFXQSxDQUFFQyxlQUFrQyxFQUFFQyxRQUFjLEVBQUVDLFNBQWUsRUFDbkVDLGVBQXVELEVBQUc7SUFFNUUsTUFBTUMsT0FBTyxHQUFHLElBQUlWLGlCQUFpQixDQUFFTSxlQUFlLEVBQUVDLFFBQVEsRUFBRUMsU0FBVSxDQUFDO0lBRTdFLE1BQU1HLE9BQU8sR0FBR1IsU0FBUyxDQUFxRixDQUFDLENBQUU7TUFDL0dPLE9BQU8sRUFBRUEsT0FBTztNQUNoQkUsTUFBTSxFQUFFYixNQUFNLENBQUNjLFFBQVE7TUFDdkJDLGdCQUFnQixFQUFFO0lBQ3BCLENBQUMsRUFBRUwsZUFBZ0IsQ0FBQztJQUVwQixLQUFLLENBQUVILGVBQWUsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFSyxPQUFRLENBQUM7SUFFOUMsSUFBSSxDQUFDSSxxQ0FBcUMsR0FBRyxNQUFNO01BQ2pETCxPQUFPLENBQUNNLE9BQU8sQ0FBQyxDQUFDO0lBQ25CLENBQUM7RUFDSDtFQUVnQkEsT0FBT0EsQ0FBQSxFQUFTO0lBQzlCLElBQUksQ0FBQ0QscUNBQXFDLENBQUMsQ0FBQztJQUM1QyxLQUFLLENBQUNDLE9BQU8sQ0FBQyxDQUFDO0VBQ2pCO0FBQ0Y7QUFFQWYsR0FBRyxDQUFDZ0IsUUFBUSxDQUFFLGdDQUFnQyxFQUFFYiw4QkFBK0IsQ0FBQyJ9