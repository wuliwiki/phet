// Copyright 2017-2023, University of Colorado Boulder

/**
 * The "Codap" Screen for the Circuit Construction Kit: DC simulation.
 *
 * @author Sam Reid (PhET Interactive Simulations)
 */

import CCKCConstants from '../../../circuit-construction-kit-common/js/CCKCConstants.js';
import CCKCColors from '../../../circuit-construction-kit-common/js/view/CCKCColors.js';
import lightBulbMiddleHigh_png from '../../../circuit-construction-kit-common/mipmaps/lightBulbMiddleHigh_png.js';
import Screen from '../../../joist/js/Screen.js';
import ScreenIcon from '../../../joist/js/ScreenIcon.js';
import { Image, Rectangle } from '../../../scenery/js/imports.js';
import circuitConstructionKitDc from '../circuitConstructionKitDc.js';
import CircuitConstructionKitDcStrings from '../CircuitConstructionKitDcStrings.js';
import CodapModel from './model/CodapModel.js';
import CodapScreenView from './view/CodapScreenView.js';
const codapStringProperty = CircuitConstructionKitDcStrings.screen.codapStringProperty;
class CodapScreen extends Screen {
  constructor(tandem) {
    // Create the icon
    const homeScreenIcon = Rectangle.dimension(Screen.MINIMUM_HOME_SCREEN_ICON_SIZE, {
      fill: CCKCColors.screenBackgroundColorProperty
    });
    homeScreenIcon.addChild(new Image(lightBulbMiddleHigh_png, {
      scale: 0.95,
      center: homeScreenIcon.center
    }));

    // Render a smaller icon for Edge because it is aliasing the image (even with mipmap on)
    // see https://github.com/phetsims/circuit-construction-kit-dc/issues/120
    const navigationBarIcon = Rectangle.dimension(Screen.MINIMUM_NAVBAR_ICON_SIZE, {
      fill: CCKCColors.screenBackgroundColorProperty
    });
    navigationBarIcon.addChild(new Image(lightBulbMiddleHigh_png, {
      scale: 0.26,
      center: navigationBarIcon.center
    }));
    const options = {
      name: codapStringProperty,
      backgroundColorProperty: CCKCColors.screenBackgroundColorProperty,
      homeScreenIcon: new ScreenIcon(homeScreenIcon, {
        maxIconWidthProportion: 1,
        maxIconHeightProportion: 1
      }),
      navigationBarIcon: new ScreenIcon(navigationBarIcon, {
        maxIconWidthProportion: 1,
        maxIconHeightProportion: 1
      }),
      tandem: tandem,
      maxDT: CCKCConstants.MAX_DT
    };
    super(() => new CodapModel(tandem.createTandem('model')), model => new CodapScreenView(model, tandem.createTandem('view'), {
      circuitElementToolboxOptions: {
        carouselScale: CCKCConstants.DC_CAROUSEL_SCALE
      }
    }), options);
  }
}
circuitConstructionKitDc.register('CodapScreen', CodapScreen);
export default CodapScreen;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJDQ0tDQ29uc3RhbnRzIiwiQ0NLQ0NvbG9ycyIsImxpZ2h0QnVsYk1pZGRsZUhpZ2hfcG5nIiwiU2NyZWVuIiwiU2NyZWVuSWNvbiIsIkltYWdlIiwiUmVjdGFuZ2xlIiwiY2lyY3VpdENvbnN0cnVjdGlvbktpdERjIiwiQ2lyY3VpdENvbnN0cnVjdGlvbktpdERjU3RyaW5ncyIsIkNvZGFwTW9kZWwiLCJDb2RhcFNjcmVlblZpZXciLCJjb2RhcFN0cmluZ1Byb3BlcnR5Iiwic2NyZWVuIiwiQ29kYXBTY3JlZW4iLCJjb25zdHJ1Y3RvciIsInRhbmRlbSIsImhvbWVTY3JlZW5JY29uIiwiZGltZW5zaW9uIiwiTUlOSU1VTV9IT01FX1NDUkVFTl9JQ09OX1NJWkUiLCJmaWxsIiwic2NyZWVuQmFja2dyb3VuZENvbG9yUHJvcGVydHkiLCJhZGRDaGlsZCIsInNjYWxlIiwiY2VudGVyIiwibmF2aWdhdGlvbkJhckljb24iLCJNSU5JTVVNX05BVkJBUl9JQ09OX1NJWkUiLCJvcHRpb25zIiwibmFtZSIsImJhY2tncm91bmRDb2xvclByb3BlcnR5IiwibWF4SWNvbldpZHRoUHJvcG9ydGlvbiIsIm1heEljb25IZWlnaHRQcm9wb3J0aW9uIiwibWF4RFQiLCJNQVhfRFQiLCJjcmVhdGVUYW5kZW0iLCJtb2RlbCIsImNpcmN1aXRFbGVtZW50VG9vbGJveE9wdGlvbnMiLCJjYXJvdXNlbFNjYWxlIiwiRENfQ0FST1VTRUxfU0NBTEUiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIkNvZGFwU2NyZWVuLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE3LTIwMjMsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIFRoZSBcIkNvZGFwXCIgU2NyZWVuIGZvciB0aGUgQ2lyY3VpdCBDb25zdHJ1Y3Rpb24gS2l0OiBEQyBzaW11bGF0aW9uLlxyXG4gKlxyXG4gKiBAYXV0aG9yIFNhbSBSZWlkIChQaEVUIEludGVyYWN0aXZlIFNpbXVsYXRpb25zKVxyXG4gKi9cclxuXHJcbmltcG9ydCBDQ0tDQ29uc3RhbnRzIGZyb20gJy4uLy4uLy4uL2NpcmN1aXQtY29uc3RydWN0aW9uLWtpdC1jb21tb24vanMvQ0NLQ0NvbnN0YW50cy5qcyc7XHJcbmltcG9ydCBDQ0tDQ29sb3JzIGZyb20gJy4uLy4uLy4uL2NpcmN1aXQtY29uc3RydWN0aW9uLWtpdC1jb21tb24vanMvdmlldy9DQ0tDQ29sb3JzLmpzJztcclxuaW1wb3J0IGxpZ2h0QnVsYk1pZGRsZUhpZ2hfcG5nIGZyb20gJy4uLy4uLy4uL2NpcmN1aXQtY29uc3RydWN0aW9uLWtpdC1jb21tb24vbWlwbWFwcy9saWdodEJ1bGJNaWRkbGVIaWdoX3BuZy5qcyc7XHJcbmltcG9ydCBTY3JlZW4gZnJvbSAnLi4vLi4vLi4vam9pc3QvanMvU2NyZWVuLmpzJztcclxuaW1wb3J0IFNjcmVlbkljb24gZnJvbSAnLi4vLi4vLi4vam9pc3QvanMvU2NyZWVuSWNvbi5qcyc7XHJcbmltcG9ydCB7IEltYWdlLCBSZWN0YW5nbGUgfSBmcm9tICcuLi8uLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgVGFuZGVtIGZyb20gJy4uLy4uLy4uL3RhbmRlbS9qcy9UYW5kZW0uanMnO1xyXG5pbXBvcnQgY2lyY3VpdENvbnN0cnVjdGlvbktpdERjIGZyb20gJy4uL2NpcmN1aXRDb25zdHJ1Y3Rpb25LaXREYy5qcyc7XHJcbmltcG9ydCBDaXJjdWl0Q29uc3RydWN0aW9uS2l0RGNTdHJpbmdzIGZyb20gJy4uL0NpcmN1aXRDb25zdHJ1Y3Rpb25LaXREY1N0cmluZ3MuanMnO1xyXG5pbXBvcnQgQ29kYXBNb2RlbCBmcm9tICcuL21vZGVsL0NvZGFwTW9kZWwuanMnO1xyXG5pbXBvcnQgQ29kYXBTY3JlZW5WaWV3IGZyb20gJy4vdmlldy9Db2RhcFNjcmVlblZpZXcuanMnO1xyXG5cclxuY29uc3QgY29kYXBTdHJpbmdQcm9wZXJ0eSA9IENpcmN1aXRDb25zdHJ1Y3Rpb25LaXREY1N0cmluZ3Muc2NyZWVuLmNvZGFwU3RyaW5nUHJvcGVydHk7XHJcblxyXG5jbGFzcyBDb2RhcFNjcmVlbiBleHRlbmRzIFNjcmVlbjxDb2RhcE1vZGVsLCBDb2RhcFNjcmVlblZpZXc+IHtcclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKCB0YW5kZW06IFRhbmRlbSApIHtcclxuXHJcbiAgICAvLyBDcmVhdGUgdGhlIGljb25cclxuICAgIGNvbnN0IGhvbWVTY3JlZW5JY29uID0gUmVjdGFuZ2xlLmRpbWVuc2lvbiggU2NyZWVuLk1JTklNVU1fSE9NRV9TQ1JFRU5fSUNPTl9TSVpFLCB7XHJcbiAgICAgIGZpbGw6IENDS0NDb2xvcnMuc2NyZWVuQmFja2dyb3VuZENvbG9yUHJvcGVydHlcclxuICAgIH0gKTtcclxuICAgIGhvbWVTY3JlZW5JY29uLmFkZENoaWxkKCBuZXcgSW1hZ2UoIGxpZ2h0QnVsYk1pZGRsZUhpZ2hfcG5nLCB7XHJcbiAgICAgIHNjYWxlOiAwLjk1LFxyXG4gICAgICBjZW50ZXI6IGhvbWVTY3JlZW5JY29uLmNlbnRlclxyXG4gICAgfSApICk7XHJcblxyXG4gICAgLy8gUmVuZGVyIGEgc21hbGxlciBpY29uIGZvciBFZGdlIGJlY2F1c2UgaXQgaXMgYWxpYXNpbmcgdGhlIGltYWdlIChldmVuIHdpdGggbWlwbWFwIG9uKVxyXG4gICAgLy8gc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9waGV0c2ltcy9jaXJjdWl0LWNvbnN0cnVjdGlvbi1raXQtZGMvaXNzdWVzLzEyMFxyXG4gICAgY29uc3QgbmF2aWdhdGlvbkJhckljb24gPSBSZWN0YW5nbGUuZGltZW5zaW9uKCBTY3JlZW4uTUlOSU1VTV9OQVZCQVJfSUNPTl9TSVpFLCB7XHJcbiAgICAgIGZpbGw6IENDS0NDb2xvcnMuc2NyZWVuQmFja2dyb3VuZENvbG9yUHJvcGVydHlcclxuICAgIH0gKTtcclxuICAgIG5hdmlnYXRpb25CYXJJY29uLmFkZENoaWxkKCBuZXcgSW1hZ2UoIGxpZ2h0QnVsYk1pZGRsZUhpZ2hfcG5nLCB7XHJcbiAgICAgIHNjYWxlOiAwLjI2LFxyXG4gICAgICBjZW50ZXI6IG5hdmlnYXRpb25CYXJJY29uLmNlbnRlclxyXG4gICAgfSApICk7XHJcblxyXG4gICAgY29uc3Qgb3B0aW9ucyA9IHtcclxuICAgICAgbmFtZTogY29kYXBTdHJpbmdQcm9wZXJ0eSxcclxuICAgICAgYmFja2dyb3VuZENvbG9yUHJvcGVydHk6IENDS0NDb2xvcnMuc2NyZWVuQmFja2dyb3VuZENvbG9yUHJvcGVydHksXHJcbiAgICAgIGhvbWVTY3JlZW5JY29uOiBuZXcgU2NyZWVuSWNvbiggaG9tZVNjcmVlbkljb24sIHtcclxuICAgICAgICBtYXhJY29uV2lkdGhQcm9wb3J0aW9uOiAxLFxyXG4gICAgICAgIG1heEljb25IZWlnaHRQcm9wb3J0aW9uOiAxXHJcbiAgICAgIH0gKSxcclxuICAgICAgbmF2aWdhdGlvbkJhckljb246IG5ldyBTY3JlZW5JY29uKCBuYXZpZ2F0aW9uQmFySWNvbiwge1xyXG4gICAgICAgIG1heEljb25XaWR0aFByb3BvcnRpb246IDEsXHJcbiAgICAgICAgbWF4SWNvbkhlaWdodFByb3BvcnRpb246IDFcclxuICAgICAgfSApLFxyXG4gICAgICB0YW5kZW06IHRhbmRlbSxcclxuICAgICAgbWF4RFQ6IENDS0NDb25zdGFudHMuTUFYX0RUXHJcbiAgICB9O1xyXG5cclxuICAgIHN1cGVyKFxyXG4gICAgICAoKSA9PiBuZXcgQ29kYXBNb2RlbCggdGFuZGVtLmNyZWF0ZVRhbmRlbSggJ21vZGVsJyApICksXHJcbiAgICAgIG1vZGVsID0+IG5ldyBDb2RhcFNjcmVlblZpZXcoIG1vZGVsLCB0YW5kZW0uY3JlYXRlVGFuZGVtKCAndmlldycgKSwge1xyXG4gICAgICAgIGNpcmN1aXRFbGVtZW50VG9vbGJveE9wdGlvbnM6IHsgY2Fyb3VzZWxTY2FsZTogQ0NLQ0NvbnN0YW50cy5EQ19DQVJPVVNFTF9TQ0FMRSB9XHJcbiAgICAgIH0gKSwgb3B0aW9uc1xyXG4gICAgKTtcclxuICB9XHJcbn1cclxuXHJcbmNpcmN1aXRDb25zdHJ1Y3Rpb25LaXREYy5yZWdpc3RlciggJ0NvZGFwU2NyZWVuJywgQ29kYXBTY3JlZW4gKTtcclxuZXhwb3J0IGRlZmF1bHQgQ29kYXBTY3JlZW47Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLGFBQWEsTUFBTSw4REFBOEQ7QUFDeEYsT0FBT0MsVUFBVSxNQUFNLGdFQUFnRTtBQUN2RixPQUFPQyx1QkFBdUIsTUFBTSw2RUFBNkU7QUFDakgsT0FBT0MsTUFBTSxNQUFNLDZCQUE2QjtBQUNoRCxPQUFPQyxVQUFVLE1BQU0saUNBQWlDO0FBQ3hELFNBQVNDLEtBQUssRUFBRUMsU0FBUyxRQUFRLGdDQUFnQztBQUVqRSxPQUFPQyx3QkFBd0IsTUFBTSxnQ0FBZ0M7QUFDckUsT0FBT0MsK0JBQStCLE1BQU0sdUNBQXVDO0FBQ25GLE9BQU9DLFVBQVUsTUFBTSx1QkFBdUI7QUFDOUMsT0FBT0MsZUFBZSxNQUFNLDJCQUEyQjtBQUV2RCxNQUFNQyxtQkFBbUIsR0FBR0gsK0JBQStCLENBQUNJLE1BQU0sQ0FBQ0QsbUJBQW1CO0FBRXRGLE1BQU1FLFdBQVcsU0FBU1YsTUFBTSxDQUE4QjtFQUVyRFcsV0FBV0EsQ0FBRUMsTUFBYyxFQUFHO0lBRW5DO0lBQ0EsTUFBTUMsY0FBYyxHQUFHVixTQUFTLENBQUNXLFNBQVMsQ0FBRWQsTUFBTSxDQUFDZSw2QkFBNkIsRUFBRTtNQUNoRkMsSUFBSSxFQUFFbEIsVUFBVSxDQUFDbUI7SUFDbkIsQ0FBRSxDQUFDO0lBQ0hKLGNBQWMsQ0FBQ0ssUUFBUSxDQUFFLElBQUloQixLQUFLLENBQUVILHVCQUF1QixFQUFFO01BQzNEb0IsS0FBSyxFQUFFLElBQUk7TUFDWEMsTUFBTSxFQUFFUCxjQUFjLENBQUNPO0lBQ3pCLENBQUUsQ0FBRSxDQUFDOztJQUVMO0lBQ0E7SUFDQSxNQUFNQyxpQkFBaUIsR0FBR2xCLFNBQVMsQ0FBQ1csU0FBUyxDQUFFZCxNQUFNLENBQUNzQix3QkFBd0IsRUFBRTtNQUM5RU4sSUFBSSxFQUFFbEIsVUFBVSxDQUFDbUI7SUFDbkIsQ0FBRSxDQUFDO0lBQ0hJLGlCQUFpQixDQUFDSCxRQUFRLENBQUUsSUFBSWhCLEtBQUssQ0FBRUgsdUJBQXVCLEVBQUU7TUFDOURvQixLQUFLLEVBQUUsSUFBSTtNQUNYQyxNQUFNLEVBQUVDLGlCQUFpQixDQUFDRDtJQUM1QixDQUFFLENBQUUsQ0FBQztJQUVMLE1BQU1HLE9BQU8sR0FBRztNQUNkQyxJQUFJLEVBQUVoQixtQkFBbUI7TUFDekJpQix1QkFBdUIsRUFBRTNCLFVBQVUsQ0FBQ21CLDZCQUE2QjtNQUNqRUosY0FBYyxFQUFFLElBQUlaLFVBQVUsQ0FBRVksY0FBYyxFQUFFO1FBQzlDYSxzQkFBc0IsRUFBRSxDQUFDO1FBQ3pCQyx1QkFBdUIsRUFBRTtNQUMzQixDQUFFLENBQUM7TUFDSE4saUJBQWlCLEVBQUUsSUFBSXBCLFVBQVUsQ0FBRW9CLGlCQUFpQixFQUFFO1FBQ3BESyxzQkFBc0IsRUFBRSxDQUFDO1FBQ3pCQyx1QkFBdUIsRUFBRTtNQUMzQixDQUFFLENBQUM7TUFDSGYsTUFBTSxFQUFFQSxNQUFNO01BQ2RnQixLQUFLLEVBQUUvQixhQUFhLENBQUNnQztJQUN2QixDQUFDO0lBRUQsS0FBSyxDQUNILE1BQU0sSUFBSXZCLFVBQVUsQ0FBRU0sTUFBTSxDQUFDa0IsWUFBWSxDQUFFLE9BQVEsQ0FBRSxDQUFDLEVBQ3REQyxLQUFLLElBQUksSUFBSXhCLGVBQWUsQ0FBRXdCLEtBQUssRUFBRW5CLE1BQU0sQ0FBQ2tCLFlBQVksQ0FBRSxNQUFPLENBQUMsRUFBRTtNQUNsRUUsNEJBQTRCLEVBQUU7UUFBRUMsYUFBYSxFQUFFcEMsYUFBYSxDQUFDcUM7TUFBa0I7SUFDakYsQ0FBRSxDQUFDLEVBQUVYLE9BQ1AsQ0FBQztFQUNIO0FBQ0Y7QUFFQW5CLHdCQUF3QixDQUFDK0IsUUFBUSxDQUFFLGFBQWEsRUFBRXpCLFdBQVksQ0FBQztBQUMvRCxlQUFlQSxXQUFXIn0=