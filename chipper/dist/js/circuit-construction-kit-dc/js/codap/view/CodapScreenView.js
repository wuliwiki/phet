// Copyright 2017-2023, University of Colorado Boulder

/**
 * The view for the Lab screen.
 *
 * @author Sam Reid (PhET Interactive Simulations)
 */

import { Text } from '../../../../scenery/js/imports.js';
import circuitConstructionKitDc from '../../circuitConstructionKitDc.js';
import { combineOptions } from '../../../../phet-core/js/optionize.js';
import RectangularPushButton from '../../../../sun/js/buttons/RectangularPushButton.js';
import CCKCConstants from '../../../../circuit-construction-kit-common/js/CCKCConstants.js';
import PhetFont from '../../../../scenery-phet/js/PhetFont.js';
import DerivedProperty from '../../../../axon/js/DerivedProperty.js';
import LabScreenView from '../../lab/view/LabScreenView.js';
class CodapScreenView extends LabScreenView {
  constructor(model, tandem, providedOptions) {
    const options = combineOptions({
      showMeterPhetioIndex: true
    }, providedOptions);
    super(model, tandem, options);
    const collectDataButton = new RectangularPushButton({
      content: new Text('Collect Data', {
        font: new PhetFont(24),
        fill: 'rgb( 10, 10, 10 )'
      }),
      baseColor: 'rgb(247, 147, 29)',
      centerX: this.layoutBounds.centerX,
      xMargin: 10,
      yMargin: 8,
      tandem: tandem.createTandem('collectDataButton')
    });
    this.addChild(collectDataButton);
    const anyMetersVisibleProperty = DerivedProperty.or([...model.voltmeters.map(voltmeter => voltmeter.isActiveProperty), ...model.ammeters.map(ammeter => ammeter.isActiveProperty)]);
    anyMetersVisibleProperty.link(visible => collectDataButton.setVisible(visible));
    const anyMetersActiveProperty = new DerivedProperty([model.voltmeters[0].voltageProperty, model.voltmeters[1].voltageProperty, model.ammeters[0].currentProperty, model.ammeters[1].currentProperty], (voltage1, voltage2, current1, current2) => {
      return typeof voltage1 === 'number' || typeof voltage2 === 'number' || typeof current1 === 'number' || typeof current2 === 'number';
    });
    anyMetersActiveProperty.link(enable => {
      collectDataButton.setEnabled(enable);
    });
    this.visibleBoundsProperty.link(visibleBounds => {
      collectDataButton.mutate({
        centerX: 0.72 * visibleBounds.width,
        bottom: visibleBounds.bottom - CCKCConstants.HORIZONTAL_MARGIN
      });
    });
  }
}
circuitConstructionKitDc.register('CodapScreenView', CodapScreenView);
export default CodapScreenView;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJUZXh0IiwiY2lyY3VpdENvbnN0cnVjdGlvbktpdERjIiwiY29tYmluZU9wdGlvbnMiLCJSZWN0YW5ndWxhclB1c2hCdXR0b24iLCJDQ0tDQ29uc3RhbnRzIiwiUGhldEZvbnQiLCJEZXJpdmVkUHJvcGVydHkiLCJMYWJTY3JlZW5WaWV3IiwiQ29kYXBTY3JlZW5WaWV3IiwiY29uc3RydWN0b3IiLCJtb2RlbCIsInRhbmRlbSIsInByb3ZpZGVkT3B0aW9ucyIsIm9wdGlvbnMiLCJzaG93TWV0ZXJQaGV0aW9JbmRleCIsImNvbGxlY3REYXRhQnV0dG9uIiwiY29udGVudCIsImZvbnQiLCJmaWxsIiwiYmFzZUNvbG9yIiwiY2VudGVyWCIsImxheW91dEJvdW5kcyIsInhNYXJnaW4iLCJ5TWFyZ2luIiwiY3JlYXRlVGFuZGVtIiwiYWRkQ2hpbGQiLCJhbnlNZXRlcnNWaXNpYmxlUHJvcGVydHkiLCJvciIsInZvbHRtZXRlcnMiLCJtYXAiLCJ2b2x0bWV0ZXIiLCJpc0FjdGl2ZVByb3BlcnR5IiwiYW1tZXRlcnMiLCJhbW1ldGVyIiwibGluayIsInZpc2libGUiLCJzZXRWaXNpYmxlIiwiYW55TWV0ZXJzQWN0aXZlUHJvcGVydHkiLCJ2b2x0YWdlUHJvcGVydHkiLCJjdXJyZW50UHJvcGVydHkiLCJ2b2x0YWdlMSIsInZvbHRhZ2UyIiwiY3VycmVudDEiLCJjdXJyZW50MiIsImVuYWJsZSIsInNldEVuYWJsZWQiLCJ2aXNpYmxlQm91bmRzUHJvcGVydHkiLCJ2aXNpYmxlQm91bmRzIiwibXV0YXRlIiwid2lkdGgiLCJib3R0b20iLCJIT1JJWk9OVEFMX01BUkdJTiIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiQ29kYXBTY3JlZW5WaWV3LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE3LTIwMjMsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIFRoZSB2aWV3IGZvciB0aGUgTGFiIHNjcmVlbi5cclxuICpcclxuICogQGF1dGhvciBTYW0gUmVpZCAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcclxuICovXHJcblxyXG5pbXBvcnQgQ2lyY3VpdENvbnN0cnVjdGlvbktpdE1vZGVsIGZyb20gJy4uLy4uLy4uLy4uL2NpcmN1aXQtY29uc3RydWN0aW9uLWtpdC1jb21tb24vanMvbW9kZWwvQ2lyY3VpdENvbnN0cnVjdGlvbktpdE1vZGVsLmpzJztcclxuaW1wb3J0IHsgQ0NLQ1NjcmVlblZpZXdPcHRpb25zIH0gZnJvbSAnLi4vLi4vLi4vLi4vY2lyY3VpdC1jb25zdHJ1Y3Rpb24ta2l0LWNvbW1vbi9qcy92aWV3L0NDS0NTY3JlZW5WaWV3LmpzJztcclxuaW1wb3J0IHsgVGV4dCB9IGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XHJcbmltcG9ydCBUYW5kZW0gZnJvbSAnLi4vLi4vLi4vLi4vdGFuZGVtL2pzL1RhbmRlbS5qcyc7XHJcbmltcG9ydCBjaXJjdWl0Q29uc3RydWN0aW9uS2l0RGMgZnJvbSAnLi4vLi4vY2lyY3VpdENvbnN0cnVjdGlvbktpdERjLmpzJztcclxuaW1wb3J0IHsgY29tYmluZU9wdGlvbnMgfSBmcm9tICcuLi8uLi8uLi8uLi9waGV0LWNvcmUvanMvb3B0aW9uaXplLmpzJztcclxuaW1wb3J0IFJlY3Rhbmd1bGFyUHVzaEJ1dHRvbiBmcm9tICcuLi8uLi8uLi8uLi9zdW4vanMvYnV0dG9ucy9SZWN0YW5ndWxhclB1c2hCdXR0b24uanMnO1xyXG5pbXBvcnQgQ0NLQ0NvbnN0YW50cyBmcm9tICcuLi8uLi8uLi8uLi9jaXJjdWl0LWNvbnN0cnVjdGlvbi1raXQtY29tbW9uL2pzL0NDS0NDb25zdGFudHMuanMnO1xyXG5pbXBvcnQgQm91bmRzMiBmcm9tICcuLi8uLi8uLi8uLi9kb3QvanMvQm91bmRzMi5qcyc7XHJcbmltcG9ydCBQaGV0Rm9udCBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5LXBoZXQvanMvUGhldEZvbnQuanMnO1xyXG5pbXBvcnQgRGVyaXZlZFByb3BlcnR5IGZyb20gJy4uLy4uLy4uLy4uL2F4b24vanMvRGVyaXZlZFByb3BlcnR5LmpzJztcclxuaW1wb3J0IExhYlNjcmVlblZpZXcgZnJvbSAnLi4vLi4vbGFiL3ZpZXcvTGFiU2NyZWVuVmlldy5qcyc7XHJcblxyXG5jbGFzcyBDb2RhcFNjcmVlblZpZXcgZXh0ZW5kcyBMYWJTY3JlZW5WaWV3IHtcclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKCBtb2RlbDogQ2lyY3VpdENvbnN0cnVjdGlvbktpdE1vZGVsLCB0YW5kZW06IFRhbmRlbSwgcHJvdmlkZWRPcHRpb25zPzogQ0NLQ1NjcmVlblZpZXdPcHRpb25zICkge1xyXG5cclxuICAgIGNvbnN0IG9wdGlvbnMgPSBjb21iaW5lT3B0aW9uczxDQ0tDU2NyZWVuVmlld09wdGlvbnM+KCB7IHNob3dNZXRlclBoZXRpb0luZGV4OiB0cnVlIH0sIHByb3ZpZGVkT3B0aW9ucyApO1xyXG5cclxuICAgIHN1cGVyKCBtb2RlbCwgdGFuZGVtLCBvcHRpb25zICk7XHJcblxyXG4gICAgY29uc3QgY29sbGVjdERhdGFCdXR0b24gPSBuZXcgUmVjdGFuZ3VsYXJQdXNoQnV0dG9uKCB7XHJcbiAgICAgIGNvbnRlbnQ6IG5ldyBUZXh0KCAnQ29sbGVjdCBEYXRhJywgeyBmb250OiBuZXcgUGhldEZvbnQoIDI0ICksIGZpbGw6ICdyZ2IoIDEwLCAxMCwgMTAgKScgfSApLFxyXG4gICAgICBiYXNlQ29sb3I6ICdyZ2IoMjQ3LCAxNDcsIDI5KScsXHJcbiAgICAgIGNlbnRlclg6IHRoaXMubGF5b3V0Qm91bmRzLmNlbnRlclgsXHJcbiAgICAgIHhNYXJnaW46IDEwLFxyXG4gICAgICB5TWFyZ2luOiA4LFxyXG4gICAgICB0YW5kZW06IHRhbmRlbS5jcmVhdGVUYW5kZW0oICdjb2xsZWN0RGF0YUJ1dHRvbicgKVxyXG4gICAgfSApO1xyXG5cclxuICAgIHRoaXMuYWRkQ2hpbGQoIGNvbGxlY3REYXRhQnV0dG9uICk7XHJcblxyXG4gICAgY29uc3QgYW55TWV0ZXJzVmlzaWJsZVByb3BlcnR5ID0gRGVyaXZlZFByb3BlcnR5Lm9yKCBbIC4uLm1vZGVsLnZvbHRtZXRlcnMubWFwKCB2b2x0bWV0ZXIgPT4gdm9sdG1ldGVyLmlzQWN0aXZlUHJvcGVydHkgKSxcclxuICAgICAgLi4ubW9kZWwuYW1tZXRlcnMubWFwKCBhbW1ldGVyID0+IGFtbWV0ZXIuaXNBY3RpdmVQcm9wZXJ0eSApIF0gKTtcclxuXHJcbiAgICBhbnlNZXRlcnNWaXNpYmxlUHJvcGVydHkubGluayggdmlzaWJsZSA9PiBjb2xsZWN0RGF0YUJ1dHRvbi5zZXRWaXNpYmxlKCB2aXNpYmxlICkgKTtcclxuXHJcbiAgICBjb25zdCBhbnlNZXRlcnNBY3RpdmVQcm9wZXJ0eSA9IG5ldyBEZXJpdmVkUHJvcGVydHkoIFsgbW9kZWwudm9sdG1ldGVyc1sgMCBdLnZvbHRhZ2VQcm9wZXJ0eSwgbW9kZWwudm9sdG1ldGVyc1sgMSBdLnZvbHRhZ2VQcm9wZXJ0eSxcclxuICAgICAgICBtb2RlbC5hbW1ldGVyc1sgMCBdLmN1cnJlbnRQcm9wZXJ0eSwgbW9kZWwuYW1tZXRlcnNbIDEgXS5jdXJyZW50UHJvcGVydHkgXSxcclxuICAgICAgKCB2b2x0YWdlMSwgdm9sdGFnZTIsIGN1cnJlbnQxLCBjdXJyZW50MiApID0+IHtcclxuICAgICAgICByZXR1cm4gdHlwZW9mIHZvbHRhZ2UxID09PSAnbnVtYmVyJyB8fCB0eXBlb2Ygdm9sdGFnZTIgPT09ICdudW1iZXInIHx8IHR5cGVvZiBjdXJyZW50MSA9PT0gJ251bWJlcicgfHwgdHlwZW9mIGN1cnJlbnQyID09PSAnbnVtYmVyJztcclxuICAgICAgfSApO1xyXG5cclxuICAgIGFueU1ldGVyc0FjdGl2ZVByb3BlcnR5LmxpbmsoIGVuYWJsZSA9PiB7IGNvbGxlY3REYXRhQnV0dG9uLnNldEVuYWJsZWQoIGVuYWJsZSApOyB9ICk7XHJcblxyXG4gICAgdGhpcy52aXNpYmxlQm91bmRzUHJvcGVydHkubGluayggKCB2aXNpYmxlQm91bmRzOiBCb3VuZHMyICkgPT4ge1xyXG4gICAgICBjb2xsZWN0RGF0YUJ1dHRvbi5tdXRhdGUoIHtcclxuICAgICAgICBjZW50ZXJYOiAwLjcyICogdmlzaWJsZUJvdW5kcy53aWR0aCxcclxuICAgICAgICBib3R0b206IHZpc2libGVCb3VuZHMuYm90dG9tIC0gQ0NLQ0NvbnN0YW50cy5IT1JJWk9OVEFMX01BUkdJTlxyXG4gICAgICB9ICk7XHJcbiAgICB9ICk7XHJcbiAgfVxyXG59XHJcblxyXG5jaXJjdWl0Q29uc3RydWN0aW9uS2l0RGMucmVnaXN0ZXIoICdDb2RhcFNjcmVlblZpZXcnLCBDb2RhcFNjcmVlblZpZXcgKTtcclxuZXhwb3J0IGRlZmF1bHQgQ29kYXBTY3JlZW5WaWV3OyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFJQSxTQUFTQSxJQUFJLFFBQVEsbUNBQW1DO0FBRXhELE9BQU9DLHdCQUF3QixNQUFNLG1DQUFtQztBQUN4RSxTQUFTQyxjQUFjLFFBQVEsdUNBQXVDO0FBQ3RFLE9BQU9DLHFCQUFxQixNQUFNLHFEQUFxRDtBQUN2RixPQUFPQyxhQUFhLE1BQU0saUVBQWlFO0FBRTNGLE9BQU9DLFFBQVEsTUFBTSx5Q0FBeUM7QUFDOUQsT0FBT0MsZUFBZSxNQUFNLHdDQUF3QztBQUNwRSxPQUFPQyxhQUFhLE1BQU0saUNBQWlDO0FBRTNELE1BQU1DLGVBQWUsU0FBU0QsYUFBYSxDQUFDO0VBRW5DRSxXQUFXQSxDQUFFQyxLQUFrQyxFQUFFQyxNQUFjLEVBQUVDLGVBQXVDLEVBQUc7SUFFaEgsTUFBTUMsT0FBTyxHQUFHWCxjQUFjLENBQXlCO01BQUVZLG9CQUFvQixFQUFFO0lBQUssQ0FBQyxFQUFFRixlQUFnQixDQUFDO0lBRXhHLEtBQUssQ0FBRUYsS0FBSyxFQUFFQyxNQUFNLEVBQUVFLE9BQVEsQ0FBQztJQUUvQixNQUFNRSxpQkFBaUIsR0FBRyxJQUFJWixxQkFBcUIsQ0FBRTtNQUNuRGEsT0FBTyxFQUFFLElBQUloQixJQUFJLENBQUUsY0FBYyxFQUFFO1FBQUVpQixJQUFJLEVBQUUsSUFBSVosUUFBUSxDQUFFLEVBQUcsQ0FBQztRQUFFYSxJQUFJLEVBQUU7TUFBb0IsQ0FBRSxDQUFDO01BQzVGQyxTQUFTLEVBQUUsbUJBQW1CO01BQzlCQyxPQUFPLEVBQUUsSUFBSSxDQUFDQyxZQUFZLENBQUNELE9BQU87TUFDbENFLE9BQU8sRUFBRSxFQUFFO01BQ1hDLE9BQU8sRUFBRSxDQUFDO01BQ1ZaLE1BQU0sRUFBRUEsTUFBTSxDQUFDYSxZQUFZLENBQUUsbUJBQW9CO0lBQ25ELENBQUUsQ0FBQztJQUVILElBQUksQ0FBQ0MsUUFBUSxDQUFFVixpQkFBa0IsQ0FBQztJQUVsQyxNQUFNVyx3QkFBd0IsR0FBR3BCLGVBQWUsQ0FBQ3FCLEVBQUUsQ0FBRSxDQUFFLEdBQUdqQixLQUFLLENBQUNrQixVQUFVLENBQUNDLEdBQUcsQ0FBRUMsU0FBUyxJQUFJQSxTQUFTLENBQUNDLGdCQUFpQixDQUFDLEVBQ3ZILEdBQUdyQixLQUFLLENBQUNzQixRQUFRLENBQUNILEdBQUcsQ0FBRUksT0FBTyxJQUFJQSxPQUFPLENBQUNGLGdCQUFpQixDQUFDLENBQUcsQ0FBQztJQUVsRUwsd0JBQXdCLENBQUNRLElBQUksQ0FBRUMsT0FBTyxJQUFJcEIsaUJBQWlCLENBQUNxQixVQUFVLENBQUVELE9BQVEsQ0FBRSxDQUFDO0lBRW5GLE1BQU1FLHVCQUF1QixHQUFHLElBQUkvQixlQUFlLENBQUUsQ0FBRUksS0FBSyxDQUFDa0IsVUFBVSxDQUFFLENBQUMsQ0FBRSxDQUFDVSxlQUFlLEVBQUU1QixLQUFLLENBQUNrQixVQUFVLENBQUUsQ0FBQyxDQUFFLENBQUNVLGVBQWUsRUFDL0g1QixLQUFLLENBQUNzQixRQUFRLENBQUUsQ0FBQyxDQUFFLENBQUNPLGVBQWUsRUFBRTdCLEtBQUssQ0FBQ3NCLFFBQVEsQ0FBRSxDQUFDLENBQUUsQ0FBQ08sZUFBZSxDQUFFLEVBQzVFLENBQUVDLFFBQVEsRUFBRUMsUUFBUSxFQUFFQyxRQUFRLEVBQUVDLFFBQVEsS0FBTTtNQUM1QyxPQUFPLE9BQU9ILFFBQVEsS0FBSyxRQUFRLElBQUksT0FBT0MsUUFBUSxLQUFLLFFBQVEsSUFBSSxPQUFPQyxRQUFRLEtBQUssUUFBUSxJQUFJLE9BQU9DLFFBQVEsS0FBSyxRQUFRO0lBQ3JJLENBQUUsQ0FBQztJQUVMTix1QkFBdUIsQ0FBQ0gsSUFBSSxDQUFFVSxNQUFNLElBQUk7TUFBRTdCLGlCQUFpQixDQUFDOEIsVUFBVSxDQUFFRCxNQUFPLENBQUM7SUFBRSxDQUFFLENBQUM7SUFFckYsSUFBSSxDQUFDRSxxQkFBcUIsQ0FBQ1osSUFBSSxDQUFJYSxhQUFzQixJQUFNO01BQzdEaEMsaUJBQWlCLENBQUNpQyxNQUFNLENBQUU7UUFDeEI1QixPQUFPLEVBQUUsSUFBSSxHQUFHMkIsYUFBYSxDQUFDRSxLQUFLO1FBQ25DQyxNQUFNLEVBQUVILGFBQWEsQ0FBQ0csTUFBTSxHQUFHOUMsYUFBYSxDQUFDK0M7TUFDL0MsQ0FBRSxDQUFDO0lBQ0wsQ0FBRSxDQUFDO0VBQ0w7QUFDRjtBQUVBbEQsd0JBQXdCLENBQUNtRCxRQUFRLENBQUUsaUJBQWlCLEVBQUU1QyxlQUFnQixDQUFDO0FBQ3ZFLGVBQWVBLGVBQWUifQ==