// Copyright 2018-2022, University of Colorado Boulder

/**
 * View for the graphs screen in Energy Skate Park.
 * @author Jesse Greenberg (PhET Interactive Simulations)
 */

import { Node } from '../../../../scenery/js/imports.js';
import EnergySkateParkTrackSetScreenView from '../../common/view/EnergySkateParkTrackSetScreenView.js';
import energySkatePark from '../../energySkatePark.js';
import GraphsConstants from '../GraphsConstants.js';
import EnergyGraphAccordionBox from './EnergyGraphAccordionBox.js';

/**
 * @param {GraphsModel} model
 */
class GraphsScreenView extends EnergySkateParkTrackSetScreenView {
  /**
   * @param {EnergySkateParkTrackSetModel} model
   * @param {Tandem} tandem
   */
  constructor(model, tandem) {
    // parent layer for ComboBox, would use "this" but it is not available until after super
    const comboBoxParent = new Node();
    super(model, tandem, {
      drawSkaterPath: false,
      showBarGraph: false,
      controlPanelOptions: {
        visibilityControlsOptions: {
          showPieChartCheckbox: false,
          showGridCheckbox: false,
          showSpeedCheckbox: true,
          showStickToTrackCheckbox: true
        },
        gravityControlsOptions: {
          includeGravityComboBox: true
        }
      }
    });
    this.addChild(comboBoxParent);

    // @private - for layout
    this.graphAccordionBox = new EnergyGraphAccordionBox(model, this.modelViewTransform, tandem.createTandem('graphAccordionBox'));
    this.addToBottomLayer(this.graphAccordionBox);
  }

  /**
   * Special layout for the energy-skate-park, contents can float to the available bounds.
   * @public
   *
   * @param {Bounds2} viewBounds
   * @override
   */
  layout(viewBounds) {
    super.layout(viewBounds);

    // the graph within the accordion box needs to line up with the right edge of the track and grid lines so that
    // skater positions on track align perfectly with positions along the graph
    this.graphAccordionBox.right = this.modelViewTransform.modelToViewX(5) + this.graphAccordionBox.getContentRight();
    this.graphAccordionBox.top = this.controlPanel.top;

    // special layout for the speedometer in this screen
    this.speedometerNode.left = this.graphAccordionBox.left;
    this.speedometerNode.top = this.modelViewTransform.modelToViewY(GraphsConstants.TRACK_HEIGHT);
  }
}
energySkatePark.register('GraphsScreenView', GraphsScreenView);
export default GraphsScreenView;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJOb2RlIiwiRW5lcmd5U2thdGVQYXJrVHJhY2tTZXRTY3JlZW5WaWV3IiwiZW5lcmd5U2thdGVQYXJrIiwiR3JhcGhzQ29uc3RhbnRzIiwiRW5lcmd5R3JhcGhBY2NvcmRpb25Cb3giLCJHcmFwaHNTY3JlZW5WaWV3IiwiY29uc3RydWN0b3IiLCJtb2RlbCIsInRhbmRlbSIsImNvbWJvQm94UGFyZW50IiwiZHJhd1NrYXRlclBhdGgiLCJzaG93QmFyR3JhcGgiLCJjb250cm9sUGFuZWxPcHRpb25zIiwidmlzaWJpbGl0eUNvbnRyb2xzT3B0aW9ucyIsInNob3dQaWVDaGFydENoZWNrYm94Iiwic2hvd0dyaWRDaGVja2JveCIsInNob3dTcGVlZENoZWNrYm94Iiwic2hvd1N0aWNrVG9UcmFja0NoZWNrYm94IiwiZ3Jhdml0eUNvbnRyb2xzT3B0aW9ucyIsImluY2x1ZGVHcmF2aXR5Q29tYm9Cb3giLCJhZGRDaGlsZCIsImdyYXBoQWNjb3JkaW9uQm94IiwibW9kZWxWaWV3VHJhbnNmb3JtIiwiY3JlYXRlVGFuZGVtIiwiYWRkVG9Cb3R0b21MYXllciIsImxheW91dCIsInZpZXdCb3VuZHMiLCJyaWdodCIsIm1vZGVsVG9WaWV3WCIsImdldENvbnRlbnRSaWdodCIsInRvcCIsImNvbnRyb2xQYW5lbCIsInNwZWVkb21ldGVyTm9kZSIsImxlZnQiLCJtb2RlbFRvVmlld1kiLCJUUkFDS19IRUlHSFQiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIkdyYXBoc1NjcmVlblZpZXcuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTgtMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogVmlldyBmb3IgdGhlIGdyYXBocyBzY3JlZW4gaW4gRW5lcmd5IFNrYXRlIFBhcmsuXHJcbiAqIEBhdXRob3IgSmVzc2UgR3JlZW5iZXJnIChQaEVUIEludGVyYWN0aXZlIFNpbXVsYXRpb25zKVxyXG4gKi9cclxuXHJcbmltcG9ydCB7IE5vZGUgfSBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgRW5lcmd5U2thdGVQYXJrVHJhY2tTZXRTY3JlZW5WaWV3IGZyb20gJy4uLy4uL2NvbW1vbi92aWV3L0VuZXJneVNrYXRlUGFya1RyYWNrU2V0U2NyZWVuVmlldy5qcyc7XHJcbmltcG9ydCBlbmVyZ3lTa2F0ZVBhcmsgZnJvbSAnLi4vLi4vZW5lcmd5U2thdGVQYXJrLmpzJztcclxuaW1wb3J0IEdyYXBoc0NvbnN0YW50cyBmcm9tICcuLi9HcmFwaHNDb25zdGFudHMuanMnO1xyXG5pbXBvcnQgRW5lcmd5R3JhcGhBY2NvcmRpb25Cb3ggZnJvbSAnLi9FbmVyZ3lHcmFwaEFjY29yZGlvbkJveC5qcyc7XHJcblxyXG4vKipcclxuICogQHBhcmFtIHtHcmFwaHNNb2RlbH0gbW9kZWxcclxuICovXHJcbmNsYXNzIEdyYXBoc1NjcmVlblZpZXcgZXh0ZW5kcyBFbmVyZ3lTa2F0ZVBhcmtUcmFja1NldFNjcmVlblZpZXcge1xyXG5cclxuICAvKipcclxuICAgKiBAcGFyYW0ge0VuZXJneVNrYXRlUGFya1RyYWNrU2V0TW9kZWx9IG1vZGVsXHJcbiAgICogQHBhcmFtIHtUYW5kZW19IHRhbmRlbVxyXG4gICAqL1xyXG4gIGNvbnN0cnVjdG9yKCBtb2RlbCwgdGFuZGVtICkge1xyXG5cclxuICAgIC8vIHBhcmVudCBsYXllciBmb3IgQ29tYm9Cb3gsIHdvdWxkIHVzZSBcInRoaXNcIiBidXQgaXQgaXMgbm90IGF2YWlsYWJsZSB1bnRpbCBhZnRlciBzdXBlclxyXG4gICAgY29uc3QgY29tYm9Cb3hQYXJlbnQgPSBuZXcgTm9kZSgpO1xyXG5cclxuICAgIHN1cGVyKCBtb2RlbCwgdGFuZGVtLCB7XHJcbiAgICAgIGRyYXdTa2F0ZXJQYXRoOiBmYWxzZSxcclxuICAgICAgc2hvd0JhckdyYXBoOiBmYWxzZSxcclxuICAgICAgY29udHJvbFBhbmVsT3B0aW9uczoge1xyXG4gICAgICAgIHZpc2liaWxpdHlDb250cm9sc09wdGlvbnM6IHtcclxuICAgICAgICAgIHNob3dQaWVDaGFydENoZWNrYm94OiBmYWxzZSxcclxuICAgICAgICAgIHNob3dHcmlkQ2hlY2tib3g6IGZhbHNlLFxyXG4gICAgICAgICAgc2hvd1NwZWVkQ2hlY2tib3g6IHRydWUsXHJcbiAgICAgICAgICBzaG93U3RpY2tUb1RyYWNrQ2hlY2tib3g6IHRydWVcclxuICAgICAgICB9LFxyXG4gICAgICAgIGdyYXZpdHlDb250cm9sc09wdGlvbnM6IHtcclxuICAgICAgICAgIGluY2x1ZGVHcmF2aXR5Q29tYm9Cb3g6IHRydWVcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH0gKTtcclxuXHJcbiAgICB0aGlzLmFkZENoaWxkKCBjb21ib0JveFBhcmVudCApO1xyXG5cclxuICAgIC8vIEBwcml2YXRlIC0gZm9yIGxheW91dFxyXG4gICAgdGhpcy5ncmFwaEFjY29yZGlvbkJveCA9IG5ldyBFbmVyZ3lHcmFwaEFjY29yZGlvbkJveCggbW9kZWwsIHRoaXMubW9kZWxWaWV3VHJhbnNmb3JtLCB0YW5kZW0uY3JlYXRlVGFuZGVtKCAnZ3JhcGhBY2NvcmRpb25Cb3gnICkgKTtcclxuICAgIHRoaXMuYWRkVG9Cb3R0b21MYXllciggdGhpcy5ncmFwaEFjY29yZGlvbkJveCApO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogU3BlY2lhbCBsYXlvdXQgZm9yIHRoZSBlbmVyZ3ktc2thdGUtcGFyaywgY29udGVudHMgY2FuIGZsb2F0IHRvIHRoZSBhdmFpbGFibGUgYm91bmRzLlxyXG4gICAqIEBwdWJsaWNcclxuICAgKlxyXG4gICAqIEBwYXJhbSB7Qm91bmRzMn0gdmlld0JvdW5kc1xyXG4gICAqIEBvdmVycmlkZVxyXG4gICAqL1xyXG4gIGxheW91dCggdmlld0JvdW5kcyApIHtcclxuICAgIHN1cGVyLmxheW91dCggdmlld0JvdW5kcyApO1xyXG5cclxuICAgIC8vIHRoZSBncmFwaCB3aXRoaW4gdGhlIGFjY29yZGlvbiBib3ggbmVlZHMgdG8gbGluZSB1cCB3aXRoIHRoZSByaWdodCBlZGdlIG9mIHRoZSB0cmFjayBhbmQgZ3JpZCBsaW5lcyBzbyB0aGF0XHJcbiAgICAvLyBza2F0ZXIgcG9zaXRpb25zIG9uIHRyYWNrIGFsaWduIHBlcmZlY3RseSB3aXRoIHBvc2l0aW9ucyBhbG9uZyB0aGUgZ3JhcGhcclxuICAgIHRoaXMuZ3JhcGhBY2NvcmRpb25Cb3gucmlnaHQgPSB0aGlzLm1vZGVsVmlld1RyYW5zZm9ybS5tb2RlbFRvVmlld1goIDUgKSArIHRoaXMuZ3JhcGhBY2NvcmRpb25Cb3guZ2V0Q29udGVudFJpZ2h0KCk7XHJcbiAgICB0aGlzLmdyYXBoQWNjb3JkaW9uQm94LnRvcCA9IHRoaXMuY29udHJvbFBhbmVsLnRvcDtcclxuXHJcbiAgICAvLyBzcGVjaWFsIGxheW91dCBmb3IgdGhlIHNwZWVkb21ldGVyIGluIHRoaXMgc2NyZWVuXHJcbiAgICB0aGlzLnNwZWVkb21ldGVyTm9kZS5sZWZ0ID0gdGhpcy5ncmFwaEFjY29yZGlvbkJveC5sZWZ0O1xyXG4gICAgdGhpcy5zcGVlZG9tZXRlck5vZGUudG9wID0gdGhpcy5tb2RlbFZpZXdUcmFuc2Zvcm0ubW9kZWxUb1ZpZXdZKCBHcmFwaHNDb25zdGFudHMuVFJBQ0tfSEVJR0hUICk7XHJcbiAgfVxyXG59XHJcblxyXG5lbmVyZ3lTa2F0ZVBhcmsucmVnaXN0ZXIoICdHcmFwaHNTY3JlZW5WaWV3JywgR3JhcGhzU2NyZWVuVmlldyApO1xyXG5leHBvcnQgZGVmYXVsdCBHcmFwaHNTY3JlZW5WaWV3OyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsU0FBU0EsSUFBSSxRQUFRLG1DQUFtQztBQUN4RCxPQUFPQyxpQ0FBaUMsTUFBTSx3REFBd0Q7QUFDdEcsT0FBT0MsZUFBZSxNQUFNLDBCQUEwQjtBQUN0RCxPQUFPQyxlQUFlLE1BQU0sdUJBQXVCO0FBQ25ELE9BQU9DLHVCQUF1QixNQUFNLDhCQUE4Qjs7QUFFbEU7QUFDQTtBQUNBO0FBQ0EsTUFBTUMsZ0JBQWdCLFNBQVNKLGlDQUFpQyxDQUFDO0VBRS9EO0FBQ0Y7QUFDQTtBQUNBO0VBQ0VLLFdBQVdBLENBQUVDLEtBQUssRUFBRUMsTUFBTSxFQUFHO0lBRTNCO0lBQ0EsTUFBTUMsY0FBYyxHQUFHLElBQUlULElBQUksQ0FBQyxDQUFDO0lBRWpDLEtBQUssQ0FBRU8sS0FBSyxFQUFFQyxNQUFNLEVBQUU7TUFDcEJFLGNBQWMsRUFBRSxLQUFLO01BQ3JCQyxZQUFZLEVBQUUsS0FBSztNQUNuQkMsbUJBQW1CLEVBQUU7UUFDbkJDLHlCQUF5QixFQUFFO1VBQ3pCQyxvQkFBb0IsRUFBRSxLQUFLO1VBQzNCQyxnQkFBZ0IsRUFBRSxLQUFLO1VBQ3ZCQyxpQkFBaUIsRUFBRSxJQUFJO1VBQ3ZCQyx3QkFBd0IsRUFBRTtRQUM1QixDQUFDO1FBQ0RDLHNCQUFzQixFQUFFO1VBQ3RCQyxzQkFBc0IsRUFBRTtRQUMxQjtNQUNGO0lBQ0YsQ0FBRSxDQUFDO0lBRUgsSUFBSSxDQUFDQyxRQUFRLENBQUVYLGNBQWUsQ0FBQzs7SUFFL0I7SUFDQSxJQUFJLENBQUNZLGlCQUFpQixHQUFHLElBQUlqQix1QkFBdUIsQ0FBRUcsS0FBSyxFQUFFLElBQUksQ0FBQ2Usa0JBQWtCLEVBQUVkLE1BQU0sQ0FBQ2UsWUFBWSxDQUFFLG1CQUFvQixDQUFFLENBQUM7SUFDbEksSUFBSSxDQUFDQyxnQkFBZ0IsQ0FBRSxJQUFJLENBQUNILGlCQUFrQixDQUFDO0VBQ2pEOztFQUVBO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0VBQ0VJLE1BQU1BLENBQUVDLFVBQVUsRUFBRztJQUNuQixLQUFLLENBQUNELE1BQU0sQ0FBRUMsVUFBVyxDQUFDOztJQUUxQjtJQUNBO0lBQ0EsSUFBSSxDQUFDTCxpQkFBaUIsQ0FBQ00sS0FBSyxHQUFHLElBQUksQ0FBQ0wsa0JBQWtCLENBQUNNLFlBQVksQ0FBRSxDQUFFLENBQUMsR0FBRyxJQUFJLENBQUNQLGlCQUFpQixDQUFDUSxlQUFlLENBQUMsQ0FBQztJQUNuSCxJQUFJLENBQUNSLGlCQUFpQixDQUFDUyxHQUFHLEdBQUcsSUFBSSxDQUFDQyxZQUFZLENBQUNELEdBQUc7O0lBRWxEO0lBQ0EsSUFBSSxDQUFDRSxlQUFlLENBQUNDLElBQUksR0FBRyxJQUFJLENBQUNaLGlCQUFpQixDQUFDWSxJQUFJO0lBQ3ZELElBQUksQ0FBQ0QsZUFBZSxDQUFDRixHQUFHLEdBQUcsSUFBSSxDQUFDUixrQkFBa0IsQ0FBQ1ksWUFBWSxDQUFFL0IsZUFBZSxDQUFDZ0MsWUFBYSxDQUFDO0VBQ2pHO0FBQ0Y7QUFFQWpDLGVBQWUsQ0FBQ2tDLFFBQVEsQ0FBRSxrQkFBa0IsRUFBRS9CLGdCQUFpQixDQUFDO0FBQ2hFLGVBQWVBLGdCQUFnQiJ9