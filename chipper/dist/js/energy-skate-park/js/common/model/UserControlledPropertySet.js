// Copyright 2020-2022, University of Colorado Boulder

/**
 * A collection of Properties that indicate the User is modifying a physical Property that will change
 * the system in Energy Skate Park.
 * @author Jesse Greenberg
 */

import BooleanProperty from '../../../../axon/js/BooleanProperty.js';
import energySkatePark from '../../energySkatePark.js';
class UserControlledPropertySet {
  constructor() {
    // @public {BooleanProperty} - public so that various controls set these to `true` upon
    // user input
    this.frictionControlledProperty = new BooleanProperty(false);
    this.gravityControlledProperty = new BooleanProperty(false);
    this.massControlledProperty = new BooleanProperty(false);
    this.referenceHeightControlledProperty = new BooleanProperty(false);
    this.trackControlledProperty = new BooleanProperty(false);
    this.skaterControlledProperty = new BooleanProperty(false);
    this.stickingToTrackControlledProperty = new BooleanProperty(false);

    // @public {BooleanProperty[]} - collection of the Properties above, so they can conveniently be
    // used in a multilink
    this.properties = [this.frictionControlledProperty, this.gravityControlledProperty, this.massControlledProperty, this.referenceHeightControlledProperty, this.trackControlledProperty, this.skaterControlledProperty, this.stickingToTrackControlledProperty];
  }
}
energySkatePark.register('UserControlledPropertySet', UserControlledPropertySet);
export default UserControlledPropertySet;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJCb29sZWFuUHJvcGVydHkiLCJlbmVyZ3lTa2F0ZVBhcmsiLCJVc2VyQ29udHJvbGxlZFByb3BlcnR5U2V0IiwiY29uc3RydWN0b3IiLCJmcmljdGlvbkNvbnRyb2xsZWRQcm9wZXJ0eSIsImdyYXZpdHlDb250cm9sbGVkUHJvcGVydHkiLCJtYXNzQ29udHJvbGxlZFByb3BlcnR5IiwicmVmZXJlbmNlSGVpZ2h0Q29udHJvbGxlZFByb3BlcnR5IiwidHJhY2tDb250cm9sbGVkUHJvcGVydHkiLCJza2F0ZXJDb250cm9sbGVkUHJvcGVydHkiLCJzdGlja2luZ1RvVHJhY2tDb250cm9sbGVkUHJvcGVydHkiLCJwcm9wZXJ0aWVzIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJVc2VyQ29udHJvbGxlZFByb3BlcnR5U2V0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIwLTIwMjIsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIEEgY29sbGVjdGlvbiBvZiBQcm9wZXJ0aWVzIHRoYXQgaW5kaWNhdGUgdGhlIFVzZXIgaXMgbW9kaWZ5aW5nIGEgcGh5c2ljYWwgUHJvcGVydHkgdGhhdCB3aWxsIGNoYW5nZVxyXG4gKiB0aGUgc3lzdGVtIGluIEVuZXJneSBTa2F0ZSBQYXJrLlxyXG4gKiBAYXV0aG9yIEplc3NlIEdyZWVuYmVyZ1xyXG4gKi9cclxuXHJcbmltcG9ydCBCb29sZWFuUHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vLi4vYXhvbi9qcy9Cb29sZWFuUHJvcGVydHkuanMnO1xyXG5pbXBvcnQgZW5lcmd5U2thdGVQYXJrIGZyb20gJy4uLy4uL2VuZXJneVNrYXRlUGFyay5qcyc7XHJcblxyXG5jbGFzcyBVc2VyQ29udHJvbGxlZFByb3BlcnR5U2V0IHtcclxuICBjb25zdHJ1Y3RvcigpIHtcclxuXHJcbiAgICAvLyBAcHVibGljIHtCb29sZWFuUHJvcGVydHl9IC0gcHVibGljIHNvIHRoYXQgdmFyaW91cyBjb250cm9scyBzZXQgdGhlc2UgdG8gYHRydWVgIHVwb25cclxuICAgIC8vIHVzZXIgaW5wdXRcclxuICAgIHRoaXMuZnJpY3Rpb25Db250cm9sbGVkUHJvcGVydHkgPSBuZXcgQm9vbGVhblByb3BlcnR5KCBmYWxzZSApO1xyXG4gICAgdGhpcy5ncmF2aXR5Q29udHJvbGxlZFByb3BlcnR5ID0gbmV3IEJvb2xlYW5Qcm9wZXJ0eSggZmFsc2UgKTtcclxuICAgIHRoaXMubWFzc0NvbnRyb2xsZWRQcm9wZXJ0eSA9IG5ldyBCb29sZWFuUHJvcGVydHkoIGZhbHNlICk7XHJcbiAgICB0aGlzLnJlZmVyZW5jZUhlaWdodENvbnRyb2xsZWRQcm9wZXJ0eSA9IG5ldyBCb29sZWFuUHJvcGVydHkoIGZhbHNlICk7XHJcbiAgICB0aGlzLnRyYWNrQ29udHJvbGxlZFByb3BlcnR5ID0gbmV3IEJvb2xlYW5Qcm9wZXJ0eSggZmFsc2UgKTtcclxuICAgIHRoaXMuc2thdGVyQ29udHJvbGxlZFByb3BlcnR5ID0gbmV3IEJvb2xlYW5Qcm9wZXJ0eSggZmFsc2UgKTtcclxuICAgIHRoaXMuc3RpY2tpbmdUb1RyYWNrQ29udHJvbGxlZFByb3BlcnR5ID0gbmV3IEJvb2xlYW5Qcm9wZXJ0eSggZmFsc2UgKTtcclxuXHJcbiAgICAvLyBAcHVibGljIHtCb29sZWFuUHJvcGVydHlbXX0gLSBjb2xsZWN0aW9uIG9mIHRoZSBQcm9wZXJ0aWVzIGFib3ZlLCBzbyB0aGV5IGNhbiBjb252ZW5pZW50bHkgYmVcclxuICAgIC8vIHVzZWQgaW4gYSBtdWx0aWxpbmtcclxuICAgIHRoaXMucHJvcGVydGllcyA9IFtcclxuICAgICAgdGhpcy5mcmljdGlvbkNvbnRyb2xsZWRQcm9wZXJ0eSxcclxuICAgICAgdGhpcy5ncmF2aXR5Q29udHJvbGxlZFByb3BlcnR5LFxyXG4gICAgICB0aGlzLm1hc3NDb250cm9sbGVkUHJvcGVydHksXHJcbiAgICAgIHRoaXMucmVmZXJlbmNlSGVpZ2h0Q29udHJvbGxlZFByb3BlcnR5LFxyXG4gICAgICB0aGlzLnRyYWNrQ29udHJvbGxlZFByb3BlcnR5LFxyXG4gICAgICB0aGlzLnNrYXRlckNvbnRyb2xsZWRQcm9wZXJ0eSxcclxuICAgICAgdGhpcy5zdGlja2luZ1RvVHJhY2tDb250cm9sbGVkUHJvcGVydHlcclxuICAgIF07XHJcbiAgfVxyXG59XHJcblxyXG5lbmVyZ3lTa2F0ZVBhcmsucmVnaXN0ZXIoICdVc2VyQ29udHJvbGxlZFByb3BlcnR5U2V0JywgVXNlckNvbnRyb2xsZWRQcm9wZXJ0eVNldCApO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgVXNlckNvbnRyb2xsZWRQcm9wZXJ0eVNldDtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLGVBQWUsTUFBTSx3Q0FBd0M7QUFDcEUsT0FBT0MsZUFBZSxNQUFNLDBCQUEwQjtBQUV0RCxNQUFNQyx5QkFBeUIsQ0FBQztFQUM5QkMsV0FBV0EsQ0FBQSxFQUFHO0lBRVo7SUFDQTtJQUNBLElBQUksQ0FBQ0MsMEJBQTBCLEdBQUcsSUFBSUosZUFBZSxDQUFFLEtBQU0sQ0FBQztJQUM5RCxJQUFJLENBQUNLLHlCQUF5QixHQUFHLElBQUlMLGVBQWUsQ0FBRSxLQUFNLENBQUM7SUFDN0QsSUFBSSxDQUFDTSxzQkFBc0IsR0FBRyxJQUFJTixlQUFlLENBQUUsS0FBTSxDQUFDO0lBQzFELElBQUksQ0FBQ08saUNBQWlDLEdBQUcsSUFBSVAsZUFBZSxDQUFFLEtBQU0sQ0FBQztJQUNyRSxJQUFJLENBQUNRLHVCQUF1QixHQUFHLElBQUlSLGVBQWUsQ0FBRSxLQUFNLENBQUM7SUFDM0QsSUFBSSxDQUFDUyx3QkFBd0IsR0FBRyxJQUFJVCxlQUFlLENBQUUsS0FBTSxDQUFDO0lBQzVELElBQUksQ0FBQ1UsaUNBQWlDLEdBQUcsSUFBSVYsZUFBZSxDQUFFLEtBQU0sQ0FBQzs7SUFFckU7SUFDQTtJQUNBLElBQUksQ0FBQ1csVUFBVSxHQUFHLENBQ2hCLElBQUksQ0FBQ1AsMEJBQTBCLEVBQy9CLElBQUksQ0FBQ0MseUJBQXlCLEVBQzlCLElBQUksQ0FBQ0Msc0JBQXNCLEVBQzNCLElBQUksQ0FBQ0MsaUNBQWlDLEVBQ3RDLElBQUksQ0FBQ0MsdUJBQXVCLEVBQzVCLElBQUksQ0FBQ0Msd0JBQXdCLEVBQzdCLElBQUksQ0FBQ0MsaUNBQWlDLENBQ3ZDO0VBQ0g7QUFDRjtBQUVBVCxlQUFlLENBQUNXLFFBQVEsQ0FBRSwyQkFBMkIsRUFBRVYseUJBQTBCLENBQUM7QUFFbEYsZUFBZUEseUJBQXlCIn0=