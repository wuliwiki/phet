// Copyright 2022, University of Colorado Boulder

/**
 * A model that holds preferences that are specific to Energy Skate Park. These Properties are shared and reflected
 * across all sim screens.
 *
 * @author Jesse Greenberg (PhET Interactive Simulations)
 */

import EnumerationProperty from '../../../../axon/js/EnumerationProperty.js';
import Enumeration from '../../../../phet-core/js/Enumeration.js';
import regionAndCultureManager from '../../../../joist/js/preferences/regionAndCultureManager.js';
import EnumerationValue from '../../../../phet-core/js/EnumerationValue.js';
import Tandem from '../../../../tandem/js/Tandem.js';
import energySkatePark from '../../energySkatePark.js';
import EnergySkateParkQueryParameters from '../EnergySkateParkQueryParameters.js';

// Possible representations of units for acceleration in this sim, can be set by query parameter or in preferences.
class AccelerationUnits extends EnumerationValue {
  static METERS_PER_SECOND_SQUARED = new AccelerationUnits();
  static NEWTONS_PER_KILOGRAM = new AccelerationUnits();
  static enumeration = new Enumeration(AccelerationUnits);
}
class EnergySkateParkPreferencesModel {
  constructor() {
    // A Property that controls the acceleration units in the sim, "altAccelerationUnits" changes the default to N/kg
    const defaultUnits = EnergySkateParkQueryParameters.altAccelerationUnits ? AccelerationUnits.NEWTONS_PER_KILOGRAM : AccelerationUnits.METERS_PER_SECOND_SQUARED;
    this.accelerationUnitsProperty = new EnumerationProperty(defaultUnits, {
      tandem: Tandem.PREFERENCES.createTandem('accelerationUnitsProperty')
    });

    // Controls the selected SkaterImages.SkaterCharacterSet. A set of characters is selected from Preferences
    // and the actual skater character is chosen from in-screen UI.
    this.skaterCharacterSetProperty = regionAndCultureManager.regionAndCultureProperty;
  }
}

// @public
// @static
EnergySkateParkPreferencesModel.AccelerationUnits = AccelerationUnits;
energySkatePark.register('EnergySkateParkPreferencesModel', EnergySkateParkPreferencesModel);
export default EnergySkateParkPreferencesModel;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJFbnVtZXJhdGlvblByb3BlcnR5IiwiRW51bWVyYXRpb24iLCJyZWdpb25BbmRDdWx0dXJlTWFuYWdlciIsIkVudW1lcmF0aW9uVmFsdWUiLCJUYW5kZW0iLCJlbmVyZ3lTa2F0ZVBhcmsiLCJFbmVyZ3lTa2F0ZVBhcmtRdWVyeVBhcmFtZXRlcnMiLCJBY2NlbGVyYXRpb25Vbml0cyIsIk1FVEVSU19QRVJfU0VDT05EX1NRVUFSRUQiLCJORVdUT05TX1BFUl9LSUxPR1JBTSIsImVudW1lcmF0aW9uIiwiRW5lcmd5U2thdGVQYXJrUHJlZmVyZW5jZXNNb2RlbCIsImNvbnN0cnVjdG9yIiwiZGVmYXVsdFVuaXRzIiwiYWx0QWNjZWxlcmF0aW9uVW5pdHMiLCJhY2NlbGVyYXRpb25Vbml0c1Byb3BlcnR5IiwidGFuZGVtIiwiUFJFRkVSRU5DRVMiLCJjcmVhdGVUYW5kZW0iLCJza2F0ZXJDaGFyYWN0ZXJTZXRQcm9wZXJ0eSIsInJlZ2lvbkFuZEN1bHR1cmVQcm9wZXJ0eSIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiRW5lcmd5U2thdGVQYXJrUHJlZmVyZW5jZXNNb2RlbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogQSBtb2RlbCB0aGF0IGhvbGRzIHByZWZlcmVuY2VzIHRoYXQgYXJlIHNwZWNpZmljIHRvIEVuZXJneSBTa2F0ZSBQYXJrLiBUaGVzZSBQcm9wZXJ0aWVzIGFyZSBzaGFyZWQgYW5kIHJlZmxlY3RlZFxyXG4gKiBhY3Jvc3MgYWxsIHNpbSBzY3JlZW5zLlxyXG4gKlxyXG4gKiBAYXV0aG9yIEplc3NlIEdyZWVuYmVyZyAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcclxuICovXHJcblxyXG5pbXBvcnQgRW51bWVyYXRpb25Qcm9wZXJ0eSBmcm9tICcuLi8uLi8uLi8uLi9heG9uL2pzL0VudW1lcmF0aW9uUHJvcGVydHkuanMnO1xyXG5pbXBvcnQgRW51bWVyYXRpb24gZnJvbSAnLi4vLi4vLi4vLi4vcGhldC1jb3JlL2pzL0VudW1lcmF0aW9uLmpzJztcclxuaW1wb3J0IHJlZ2lvbkFuZEN1bHR1cmVNYW5hZ2VyIGZyb20gJy4uLy4uLy4uLy4uL2pvaXN0L2pzL3ByZWZlcmVuY2VzL3JlZ2lvbkFuZEN1bHR1cmVNYW5hZ2VyLmpzJztcclxuaW1wb3J0IEVudW1lcmF0aW9uVmFsdWUgZnJvbSAnLi4vLi4vLi4vLi4vcGhldC1jb3JlL2pzL0VudW1lcmF0aW9uVmFsdWUuanMnO1xyXG5pbXBvcnQgVGFuZGVtIGZyb20gJy4uLy4uLy4uLy4uL3RhbmRlbS9qcy9UYW5kZW0uanMnO1xyXG5pbXBvcnQgZW5lcmd5U2thdGVQYXJrIGZyb20gJy4uLy4uL2VuZXJneVNrYXRlUGFyay5qcyc7XHJcbmltcG9ydCBFbmVyZ3lTa2F0ZVBhcmtRdWVyeVBhcmFtZXRlcnMgZnJvbSAnLi4vRW5lcmd5U2thdGVQYXJrUXVlcnlQYXJhbWV0ZXJzLmpzJztcclxuXHJcbi8vIFBvc3NpYmxlIHJlcHJlc2VudGF0aW9ucyBvZiB1bml0cyBmb3IgYWNjZWxlcmF0aW9uIGluIHRoaXMgc2ltLCBjYW4gYmUgc2V0IGJ5IHF1ZXJ5IHBhcmFtZXRlciBvciBpbiBwcmVmZXJlbmNlcy5cclxuY2xhc3MgQWNjZWxlcmF0aW9uVW5pdHMgZXh0ZW5kcyBFbnVtZXJhdGlvblZhbHVlIHtcclxuICBzdGF0aWMgTUVURVJTX1BFUl9TRUNPTkRfU1FVQVJFRCA9IG5ldyBBY2NlbGVyYXRpb25Vbml0cygpO1xyXG4gIHN0YXRpYyBORVdUT05TX1BFUl9LSUxPR1JBTSA9IG5ldyBBY2NlbGVyYXRpb25Vbml0cygpO1xyXG5cclxuICBzdGF0aWMgZW51bWVyYXRpb24gPSBuZXcgRW51bWVyYXRpb24oIEFjY2VsZXJhdGlvblVuaXRzICk7XHJcbn1cclxuXHJcbmNsYXNzIEVuZXJneVNrYXRlUGFya1ByZWZlcmVuY2VzTW9kZWwge1xyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG5cclxuICAgIC8vIEEgUHJvcGVydHkgdGhhdCBjb250cm9scyB0aGUgYWNjZWxlcmF0aW9uIHVuaXRzIGluIHRoZSBzaW0sIFwiYWx0QWNjZWxlcmF0aW9uVW5pdHNcIiBjaGFuZ2VzIHRoZSBkZWZhdWx0IHRvIE4va2dcclxuICAgIGNvbnN0IGRlZmF1bHRVbml0cyA9IEVuZXJneVNrYXRlUGFya1F1ZXJ5UGFyYW1ldGVycy5hbHRBY2NlbGVyYXRpb25Vbml0cyA/IEFjY2VsZXJhdGlvblVuaXRzLk5FV1RPTlNfUEVSX0tJTE9HUkFNIDogQWNjZWxlcmF0aW9uVW5pdHMuTUVURVJTX1BFUl9TRUNPTkRfU1FVQVJFRDtcclxuICAgIHRoaXMuYWNjZWxlcmF0aW9uVW5pdHNQcm9wZXJ0eSA9IG5ldyBFbnVtZXJhdGlvblByb3BlcnR5KCBkZWZhdWx0VW5pdHMsIHtcclxuICAgICAgdGFuZGVtOiBUYW5kZW0uUFJFRkVSRU5DRVMuY3JlYXRlVGFuZGVtKCAnYWNjZWxlcmF0aW9uVW5pdHNQcm9wZXJ0eScgKVxyXG4gICAgfSApO1xyXG5cclxuICAgIC8vIENvbnRyb2xzIHRoZSBzZWxlY3RlZCBTa2F0ZXJJbWFnZXMuU2thdGVyQ2hhcmFjdGVyU2V0LiBBIHNldCBvZiBjaGFyYWN0ZXJzIGlzIHNlbGVjdGVkIGZyb20gUHJlZmVyZW5jZXNcclxuICAgIC8vIGFuZCB0aGUgYWN0dWFsIHNrYXRlciBjaGFyYWN0ZXIgaXMgY2hvc2VuIGZyb20gaW4tc2NyZWVuIFVJLlxyXG4gICAgdGhpcy5za2F0ZXJDaGFyYWN0ZXJTZXRQcm9wZXJ0eSA9IHJlZ2lvbkFuZEN1bHR1cmVNYW5hZ2VyLnJlZ2lvbkFuZEN1bHR1cmVQcm9wZXJ0eTtcclxuICB9XHJcbn1cclxuXHJcbi8vIEBwdWJsaWNcclxuLy8gQHN0YXRpY1xyXG5FbmVyZ3lTa2F0ZVBhcmtQcmVmZXJlbmNlc01vZGVsLkFjY2VsZXJhdGlvblVuaXRzID0gQWNjZWxlcmF0aW9uVW5pdHM7XHJcblxyXG5lbmVyZ3lTa2F0ZVBhcmsucmVnaXN0ZXIoICdFbmVyZ3lTa2F0ZVBhcmtQcmVmZXJlbmNlc01vZGVsJywgRW5lcmd5U2thdGVQYXJrUHJlZmVyZW5jZXNNb2RlbCApO1xyXG5leHBvcnQgZGVmYXVsdCBFbmVyZ3lTa2F0ZVBhcmtQcmVmZXJlbmNlc01vZGVsO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxtQkFBbUIsTUFBTSw0Q0FBNEM7QUFDNUUsT0FBT0MsV0FBVyxNQUFNLHlDQUF5QztBQUNqRSxPQUFPQyx1QkFBdUIsTUFBTSw2REFBNkQ7QUFDakcsT0FBT0MsZ0JBQWdCLE1BQU0sOENBQThDO0FBQzNFLE9BQU9DLE1BQU0sTUFBTSxpQ0FBaUM7QUFDcEQsT0FBT0MsZUFBZSxNQUFNLDBCQUEwQjtBQUN0RCxPQUFPQyw4QkFBOEIsTUFBTSxzQ0FBc0M7O0FBRWpGO0FBQ0EsTUFBTUMsaUJBQWlCLFNBQVNKLGdCQUFnQixDQUFDO0VBQy9DLE9BQU9LLHlCQUF5QixHQUFHLElBQUlELGlCQUFpQixDQUFDLENBQUM7RUFDMUQsT0FBT0Usb0JBQW9CLEdBQUcsSUFBSUYsaUJBQWlCLENBQUMsQ0FBQztFQUVyRCxPQUFPRyxXQUFXLEdBQUcsSUFBSVQsV0FBVyxDQUFFTSxpQkFBa0IsQ0FBQztBQUMzRDtBQUVBLE1BQU1JLCtCQUErQixDQUFDO0VBQ3BDQyxXQUFXQSxDQUFBLEVBQUc7SUFFWjtJQUNBLE1BQU1DLFlBQVksR0FBR1AsOEJBQThCLENBQUNRLG9CQUFvQixHQUFHUCxpQkFBaUIsQ0FBQ0Usb0JBQW9CLEdBQUdGLGlCQUFpQixDQUFDQyx5QkFBeUI7SUFDL0osSUFBSSxDQUFDTyx5QkFBeUIsR0FBRyxJQUFJZixtQkFBbUIsQ0FBRWEsWUFBWSxFQUFFO01BQ3RFRyxNQUFNLEVBQUVaLE1BQU0sQ0FBQ2EsV0FBVyxDQUFDQyxZQUFZLENBQUUsMkJBQTRCO0lBQ3ZFLENBQUUsQ0FBQzs7SUFFSDtJQUNBO0lBQ0EsSUFBSSxDQUFDQywwQkFBMEIsR0FBR2pCLHVCQUF1QixDQUFDa0Isd0JBQXdCO0VBQ3BGO0FBQ0Y7O0FBRUE7QUFDQTtBQUNBVCwrQkFBK0IsQ0FBQ0osaUJBQWlCLEdBQUdBLGlCQUFpQjtBQUVyRUYsZUFBZSxDQUFDZ0IsUUFBUSxDQUFFLGlDQUFpQyxFQUFFViwrQkFBZ0MsQ0FBQztBQUM5RixlQUFlQSwrQkFBK0IifQ==