// Copyright 2019-2022, University of Colorado Boulder

/**
 * A slider that controls the mass Property of the skater in energy skate park.
 *
 * @author Jesse Greenberg (PhET Interactive Simulations)
 */

import Utils from '../../../../dot/js/Utils.js';
import energySkatePark from '../../energySkatePark.js';
import EnergySkateParkStrings from '../../EnergySkateParkStrings.js';
import PhysicalSlider from './PhysicalSlider.js';
const controlsMassString = EnergySkateParkStrings.physicalControls.massControls.massStringProperty;
const smallString = EnergySkateParkStrings.physicalControls.smallStringProperty;
const largeString = EnergySkateParkStrings.physicalControls.largeStringProperty;
class MassSlider extends PhysicalSlider {
  /**
   * @param {NumberProperty} property
   * @param {BooleanProperty} userControlledProperty
   * @param {Range} massRange
   * @param {Tandem} tandem
   */
  constructor(property, userControlledProperty, massRange, tandem) {
    super(controlsMassString, property, massRange, userControlledProperty, tandem, {
      minLabel: smallString,
      maxLabel: largeString,
      sliderOptions: {
        constrainValue: value => Utils.roundToInterval(value, 5)
      }
    });
  }
}
energySkatePark.register('MassSlider', MassSlider);
export default MassSlider;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJVdGlscyIsImVuZXJneVNrYXRlUGFyayIsIkVuZXJneVNrYXRlUGFya1N0cmluZ3MiLCJQaHlzaWNhbFNsaWRlciIsImNvbnRyb2xzTWFzc1N0cmluZyIsInBoeXNpY2FsQ29udHJvbHMiLCJtYXNzQ29udHJvbHMiLCJtYXNzU3RyaW5nUHJvcGVydHkiLCJzbWFsbFN0cmluZyIsInNtYWxsU3RyaW5nUHJvcGVydHkiLCJsYXJnZVN0cmluZyIsImxhcmdlU3RyaW5nUHJvcGVydHkiLCJNYXNzU2xpZGVyIiwiY29uc3RydWN0b3IiLCJwcm9wZXJ0eSIsInVzZXJDb250cm9sbGVkUHJvcGVydHkiLCJtYXNzUmFuZ2UiLCJ0YW5kZW0iLCJtaW5MYWJlbCIsIm1heExhYmVsIiwic2xpZGVyT3B0aW9ucyIsImNvbnN0cmFpblZhbHVlIiwidmFsdWUiLCJyb3VuZFRvSW50ZXJ2YWwiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIk1hc3NTbGlkZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTktMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogQSBzbGlkZXIgdGhhdCBjb250cm9scyB0aGUgbWFzcyBQcm9wZXJ0eSBvZiB0aGUgc2thdGVyIGluIGVuZXJneSBza2F0ZSBwYXJrLlxyXG4gKlxyXG4gKiBAYXV0aG9yIEplc3NlIEdyZWVuYmVyZyAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcclxuICovXHJcblxyXG5pbXBvcnQgVXRpbHMgZnJvbSAnLi4vLi4vLi4vLi4vZG90L2pzL1V0aWxzLmpzJztcclxuaW1wb3J0IGVuZXJneVNrYXRlUGFyayBmcm9tICcuLi8uLi9lbmVyZ3lTa2F0ZVBhcmsuanMnO1xyXG5pbXBvcnQgRW5lcmd5U2thdGVQYXJrU3RyaW5ncyBmcm9tICcuLi8uLi9FbmVyZ3lTa2F0ZVBhcmtTdHJpbmdzLmpzJztcclxuaW1wb3J0IFBoeXNpY2FsU2xpZGVyIGZyb20gJy4vUGh5c2ljYWxTbGlkZXIuanMnO1xyXG5cclxuY29uc3QgY29udHJvbHNNYXNzU3RyaW5nID0gRW5lcmd5U2thdGVQYXJrU3RyaW5ncy5waHlzaWNhbENvbnRyb2xzLm1hc3NDb250cm9scy5tYXNzU3RyaW5nUHJvcGVydHk7XHJcbmNvbnN0IHNtYWxsU3RyaW5nID0gRW5lcmd5U2thdGVQYXJrU3RyaW5ncy5waHlzaWNhbENvbnRyb2xzLnNtYWxsU3RyaW5nUHJvcGVydHk7XHJcbmNvbnN0IGxhcmdlU3RyaW5nID0gRW5lcmd5U2thdGVQYXJrU3RyaW5ncy5waHlzaWNhbENvbnRyb2xzLmxhcmdlU3RyaW5nUHJvcGVydHk7XHJcblxyXG5jbGFzcyBNYXNzU2xpZGVyIGV4dGVuZHMgUGh5c2ljYWxTbGlkZXIge1xyXG5cclxuICAvKipcclxuICAgKiBAcGFyYW0ge051bWJlclByb3BlcnR5fSBwcm9wZXJ0eVxyXG4gICAqIEBwYXJhbSB7Qm9vbGVhblByb3BlcnR5fSB1c2VyQ29udHJvbGxlZFByb3BlcnR5XHJcbiAgICogQHBhcmFtIHtSYW5nZX0gbWFzc1JhbmdlXHJcbiAgICogQHBhcmFtIHtUYW5kZW19IHRhbmRlbVxyXG4gICAqL1xyXG4gIGNvbnN0cnVjdG9yKCBwcm9wZXJ0eSwgdXNlckNvbnRyb2xsZWRQcm9wZXJ0eSwgbWFzc1JhbmdlLCB0YW5kZW0gKSB7XHJcbiAgICBzdXBlciggY29udHJvbHNNYXNzU3RyaW5nLCBwcm9wZXJ0eSwgbWFzc1JhbmdlLCB1c2VyQ29udHJvbGxlZFByb3BlcnR5LCB0YW5kZW0sIHtcclxuICAgICAgbWluTGFiZWw6IHNtYWxsU3RyaW5nLFxyXG4gICAgICBtYXhMYWJlbDogbGFyZ2VTdHJpbmcsXHJcbiAgICAgIHNsaWRlck9wdGlvbnM6IHtcclxuICAgICAgICBjb25zdHJhaW5WYWx1ZTogdmFsdWUgPT4gVXRpbHMucm91bmRUb0ludGVydmFsKCB2YWx1ZSwgNSApXHJcbiAgICAgIH1cclxuICAgIH0gKTtcclxuICB9XHJcbn1cclxuXHJcbmVuZXJneVNrYXRlUGFyay5yZWdpc3RlciggJ01hc3NTbGlkZXInLCBNYXNzU2xpZGVyICk7XHJcbmV4cG9ydCBkZWZhdWx0IE1hc3NTbGlkZXI7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLEtBQUssTUFBTSw2QkFBNkI7QUFDL0MsT0FBT0MsZUFBZSxNQUFNLDBCQUEwQjtBQUN0RCxPQUFPQyxzQkFBc0IsTUFBTSxpQ0FBaUM7QUFDcEUsT0FBT0MsY0FBYyxNQUFNLHFCQUFxQjtBQUVoRCxNQUFNQyxrQkFBa0IsR0FBR0Ysc0JBQXNCLENBQUNHLGdCQUFnQixDQUFDQyxZQUFZLENBQUNDLGtCQUFrQjtBQUNsRyxNQUFNQyxXQUFXLEdBQUdOLHNCQUFzQixDQUFDRyxnQkFBZ0IsQ0FBQ0ksbUJBQW1CO0FBQy9FLE1BQU1DLFdBQVcsR0FBR1Isc0JBQXNCLENBQUNHLGdCQUFnQixDQUFDTSxtQkFBbUI7QUFFL0UsTUFBTUMsVUFBVSxTQUFTVCxjQUFjLENBQUM7RUFFdEM7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0VBQ0VVLFdBQVdBLENBQUVDLFFBQVEsRUFBRUMsc0JBQXNCLEVBQUVDLFNBQVMsRUFBRUMsTUFBTSxFQUFHO0lBQ2pFLEtBQUssQ0FBRWIsa0JBQWtCLEVBQUVVLFFBQVEsRUFBRUUsU0FBUyxFQUFFRCxzQkFBc0IsRUFBRUUsTUFBTSxFQUFFO01BQzlFQyxRQUFRLEVBQUVWLFdBQVc7TUFDckJXLFFBQVEsRUFBRVQsV0FBVztNQUNyQlUsYUFBYSxFQUFFO1FBQ2JDLGNBQWMsRUFBRUMsS0FBSyxJQUFJdEIsS0FBSyxDQUFDdUIsZUFBZSxDQUFFRCxLQUFLLEVBQUUsQ0FBRTtNQUMzRDtJQUNGLENBQUUsQ0FBQztFQUNMO0FBQ0Y7QUFFQXJCLGVBQWUsQ0FBQ3VCLFFBQVEsQ0FBRSxZQUFZLEVBQUVaLFVBQVcsQ0FBQztBQUNwRCxlQUFlQSxVQUFVIn0=