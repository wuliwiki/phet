// Copyright 2013-2022, University of Colorado Boulder

/**
 * Scenery node that shows the background, including the mountains, sky, ground and grass.
 *
 * @author Sam Reid (PhET Interactive Simulations)
 */

import { Image, LinearGradient, Node, Pattern, Rectangle } from '../../../../scenery/js/imports.js';
import cementTextureDark_jpg from '../../../images/cementTextureDark_jpg.js';
import mountains_png from '../../../images/mountains_png.js';
import energySkatePark from '../../energySkatePark.js';

// constants
const earthHeight = 86;
const cementWidth = 5;
class BackgroundNode extends Node {
  /**
   * @param {Bounds2} layoutBounds
   * @param {Property.<Bounds2>} visibleBoundsProperty - in the view coordinate frame
   * @param {Tandem} tandem
   * @param {Object} [options]
   */
  constructor(layoutBounds, visibleBoundsProperty, tandem, options) {
    super({
      pickable: false,
      tandem: tandem
    });

    // @private
    this.sky = new Rectangle(0, 0, 0, 0);
    this.addChild(this.sky);

    // @private - wait for bounds to fill in the grass
    this.earth = new Rectangle(0, 0, 0, 0, {
      fill: '#93774c'
    });
    this.addChild(this.earth);

    // @private {number}
    this.cementY = layoutBounds.height - earthHeight;

    // @private
    this.mountain = new Image(mountains_png, {
      scale: 1.23,
      bottom: this.cementY,
      tandem: tandem.createTandem('mountainImage')
    });
    this.addChild(this.mountain);

    // @private
    this.cement = new Rectangle(0, 0, 0, cementWidth, {
      fill: new Pattern(cementTextureDark_jpg)
    });
    this.addChild(this.cement);
    if (options) {
      this.mutate(options);
    }

    // update layout when visible bounds change
    visibleBoundsProperty.link(bounds => this.layout(bounds));
  }

  /**
   * Exactly fit the geometry to the screen so no matter what aspect ratio it will always show something.
   * @public
   *
   * @param {Bounds2} bounds - in the view coordinate frame
   */
  layout(bounds) {
    const cementY = this.cementY;
    this.earth.setRect(bounds.minX, cementY, bounds.width, earthHeight);

    // Work around scenery horizontal line pattern problem, see https:// github.com/phetsims/scenery/issues/196
    this.cement.setRect(bounds.minX, cementY, bounds.width, cementWidth);
    this.sky.setRect(bounds.minX, bounds.minY, bounds.width, bounds.height);
    this.sky.fill = new LinearGradient(0, 0, 0, bounds.height / 2).addColorStop(0, '#02ace4').addColorStop(1, '#cfecfc');
  }
}

// @static
BackgroundNode.earthHeight = earthHeight;
energySkatePark.register('BackgroundNode', BackgroundNode);
export default BackgroundNode;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJJbWFnZSIsIkxpbmVhckdyYWRpZW50IiwiTm9kZSIsIlBhdHRlcm4iLCJSZWN0YW5nbGUiLCJjZW1lbnRUZXh0dXJlRGFya19qcGciLCJtb3VudGFpbnNfcG5nIiwiZW5lcmd5U2thdGVQYXJrIiwiZWFydGhIZWlnaHQiLCJjZW1lbnRXaWR0aCIsIkJhY2tncm91bmROb2RlIiwiY29uc3RydWN0b3IiLCJsYXlvdXRCb3VuZHMiLCJ2aXNpYmxlQm91bmRzUHJvcGVydHkiLCJ0YW5kZW0iLCJvcHRpb25zIiwicGlja2FibGUiLCJza3kiLCJhZGRDaGlsZCIsImVhcnRoIiwiZmlsbCIsImNlbWVudFkiLCJoZWlnaHQiLCJtb3VudGFpbiIsInNjYWxlIiwiYm90dG9tIiwiY3JlYXRlVGFuZGVtIiwiY2VtZW50IiwibXV0YXRlIiwibGluayIsImJvdW5kcyIsImxheW91dCIsInNldFJlY3QiLCJtaW5YIiwid2lkdGgiLCJtaW5ZIiwiYWRkQ29sb3JTdG9wIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJCYWNrZ3JvdW5kTm9kZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxMy0yMDIyLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBTY2VuZXJ5IG5vZGUgdGhhdCBzaG93cyB0aGUgYmFja2dyb3VuZCwgaW5jbHVkaW5nIHRoZSBtb3VudGFpbnMsIHNreSwgZ3JvdW5kIGFuZCBncmFzcy5cclxuICpcclxuICogQGF1dGhvciBTYW0gUmVpZCAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcclxuICovXHJcblxyXG5pbXBvcnQgeyBJbWFnZSwgTGluZWFyR3JhZGllbnQsIE5vZGUsIFBhdHRlcm4sIFJlY3RhbmdsZSB9IGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XHJcbmltcG9ydCBjZW1lbnRUZXh0dXJlRGFya19qcGcgZnJvbSAnLi4vLi4vLi4vaW1hZ2VzL2NlbWVudFRleHR1cmVEYXJrX2pwZy5qcyc7XHJcbmltcG9ydCBtb3VudGFpbnNfcG5nIGZyb20gJy4uLy4uLy4uL2ltYWdlcy9tb3VudGFpbnNfcG5nLmpzJztcclxuaW1wb3J0IGVuZXJneVNrYXRlUGFyayBmcm9tICcuLi8uLi9lbmVyZ3lTa2F0ZVBhcmsuanMnO1xyXG5cclxuLy8gY29uc3RhbnRzXHJcbmNvbnN0IGVhcnRoSGVpZ2h0ID0gODY7XHJcbmNvbnN0IGNlbWVudFdpZHRoID0gNTtcclxuXHJcbmNsYXNzIEJhY2tncm91bmROb2RlIGV4dGVuZHMgTm9kZSB7XHJcblxyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSB7Qm91bmRzMn0gbGF5b3V0Qm91bmRzXHJcbiAgICogQHBhcmFtIHtQcm9wZXJ0eS48Qm91bmRzMj59IHZpc2libGVCb3VuZHNQcm9wZXJ0eSAtIGluIHRoZSB2aWV3IGNvb3JkaW5hdGUgZnJhbWVcclxuICAgKiBAcGFyYW0ge1RhbmRlbX0gdGFuZGVtXHJcbiAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxyXG4gICAqL1xyXG4gIGNvbnN0cnVjdG9yKCBsYXlvdXRCb3VuZHMsIHZpc2libGVCb3VuZHNQcm9wZXJ0eSwgdGFuZGVtLCBvcHRpb25zICkge1xyXG4gICAgc3VwZXIoIHtcclxuICAgICAgcGlja2FibGU6IGZhbHNlLFxyXG4gICAgICB0YW5kZW06IHRhbmRlbVxyXG4gICAgfSApO1xyXG5cclxuICAgIC8vIEBwcml2YXRlXHJcbiAgICB0aGlzLnNreSA9IG5ldyBSZWN0YW5nbGUoIDAsIDAsIDAsIDAgKTtcclxuICAgIHRoaXMuYWRkQ2hpbGQoIHRoaXMuc2t5ICk7XHJcblxyXG4gICAgLy8gQHByaXZhdGUgLSB3YWl0IGZvciBib3VuZHMgdG8gZmlsbCBpbiB0aGUgZ3Jhc3NcclxuICAgIHRoaXMuZWFydGggPSBuZXcgUmVjdGFuZ2xlKCAwLCAwLCAwLCAwLCB7IGZpbGw6ICcjOTM3NzRjJyB9ICk7XHJcbiAgICB0aGlzLmFkZENoaWxkKCB0aGlzLmVhcnRoICk7XHJcblxyXG4gICAgLy8gQHByaXZhdGUge251bWJlcn1cclxuICAgIHRoaXMuY2VtZW50WSA9IGxheW91dEJvdW5kcy5oZWlnaHQgLSBlYXJ0aEhlaWdodDtcclxuXHJcbiAgICAvLyBAcHJpdmF0ZVxyXG4gICAgdGhpcy5tb3VudGFpbiA9IG5ldyBJbWFnZSggbW91bnRhaW5zX3BuZywge1xyXG4gICAgICBzY2FsZTogMS4yMyxcclxuICAgICAgYm90dG9tOiB0aGlzLmNlbWVudFksXHJcbiAgICAgIHRhbmRlbTogdGFuZGVtLmNyZWF0ZVRhbmRlbSggJ21vdW50YWluSW1hZ2UnIClcclxuICAgIH0gKTtcclxuICAgIHRoaXMuYWRkQ2hpbGQoIHRoaXMubW91bnRhaW4gKTtcclxuXHJcbiAgICAvLyBAcHJpdmF0ZVxyXG4gICAgdGhpcy5jZW1lbnQgPSBuZXcgUmVjdGFuZ2xlKCAwLCAwLCAwLCBjZW1lbnRXaWR0aCwgeyBmaWxsOiBuZXcgUGF0dGVybiggY2VtZW50VGV4dHVyZURhcmtfanBnICkgfSApO1xyXG4gICAgdGhpcy5hZGRDaGlsZCggdGhpcy5jZW1lbnQgKTtcclxuXHJcbiAgICBpZiAoIG9wdGlvbnMgKSB7XHJcbiAgICAgIHRoaXMubXV0YXRlKCBvcHRpb25zICk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gdXBkYXRlIGxheW91dCB3aGVuIHZpc2libGUgYm91bmRzIGNoYW5nZVxyXG4gICAgdmlzaWJsZUJvdW5kc1Byb3BlcnR5LmxpbmsoIGJvdW5kcyA9PiB0aGlzLmxheW91dCggYm91bmRzICkgKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEV4YWN0bHkgZml0IHRoZSBnZW9tZXRyeSB0byB0aGUgc2NyZWVuIHNvIG5vIG1hdHRlciB3aGF0IGFzcGVjdCByYXRpbyBpdCB3aWxsIGFsd2F5cyBzaG93IHNvbWV0aGluZy5cclxuICAgKiBAcHVibGljXHJcbiAgICpcclxuICAgKiBAcGFyYW0ge0JvdW5kczJ9IGJvdW5kcyAtIGluIHRoZSB2aWV3IGNvb3JkaW5hdGUgZnJhbWVcclxuICAgKi9cclxuICBsYXlvdXQoIGJvdW5kcyApIHtcclxuICAgIGNvbnN0IGNlbWVudFkgPSB0aGlzLmNlbWVudFk7XHJcbiAgICB0aGlzLmVhcnRoLnNldFJlY3QoIGJvdW5kcy5taW5YLCBjZW1lbnRZLCBib3VuZHMud2lkdGgsIGVhcnRoSGVpZ2h0ICk7XHJcblxyXG4gICAgLy8gV29yayBhcm91bmQgc2NlbmVyeSBob3Jpem9udGFsIGxpbmUgcGF0dGVybiBwcm9ibGVtLCBzZWUgaHR0cHM6Ly8gZ2l0aHViLmNvbS9waGV0c2ltcy9zY2VuZXJ5L2lzc3Vlcy8xOTZcclxuICAgIHRoaXMuY2VtZW50LnNldFJlY3QoIGJvdW5kcy5taW5YLCBjZW1lbnRZLCBib3VuZHMud2lkdGgsIGNlbWVudFdpZHRoICk7XHJcbiAgICB0aGlzLnNreS5zZXRSZWN0KCBib3VuZHMubWluWCwgYm91bmRzLm1pblksIGJvdW5kcy53aWR0aCwgYm91bmRzLmhlaWdodCApO1xyXG4gICAgdGhpcy5za3kuZmlsbCA9IG5ldyBMaW5lYXJHcmFkaWVudCggMCwgMCwgMCwgYm91bmRzLmhlaWdodCAvIDIgKS5hZGRDb2xvclN0b3AoIDAsICcjMDJhY2U0JyApLmFkZENvbG9yU3RvcCggMSwgJyNjZmVjZmMnICk7XHJcbiAgfVxyXG59XHJcblxyXG4vLyBAc3RhdGljXHJcbkJhY2tncm91bmROb2RlLmVhcnRoSGVpZ2h0ID0gZWFydGhIZWlnaHQ7XHJcblxyXG5lbmVyZ3lTa2F0ZVBhcmsucmVnaXN0ZXIoICdCYWNrZ3JvdW5kTm9kZScsIEJhY2tncm91bmROb2RlICk7XHJcbmV4cG9ydCBkZWZhdWx0IEJhY2tncm91bmROb2RlOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxTQUFTQSxLQUFLLEVBQUVDLGNBQWMsRUFBRUMsSUFBSSxFQUFFQyxPQUFPLEVBQUVDLFNBQVMsUUFBUSxtQ0FBbUM7QUFDbkcsT0FBT0MscUJBQXFCLE1BQU0sMENBQTBDO0FBQzVFLE9B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