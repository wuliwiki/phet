// Copyright 2019-2022, University of Colorado Boulder

/**
 * A slider that controls the gravity Property of energy skate park.
 *
 * @author Jesse Greenberg (PhET Interactive Simulations)
 */

import Range from '../../../../dot/js/Range.js';
import Utils from '../../../../dot/js/Utils.js';
import energySkatePark from '../../energySkatePark.js';
import EnergySkateParkStrings from '../../EnergySkateParkStrings.js';
import EnergySkateParkConstants from '../EnergySkateParkConstants.js';
import PhysicalSlider from './PhysicalSlider.js';
const controlsGravityLabelString = EnergySkateParkStrings.physicalControls.gravityControls.gravityStringProperty;
const controlsValueTinyString = EnergySkateParkStrings.physicalControls.tinyStringProperty;
class GravitySlider extends PhysicalSlider {
  /**
   * @param {NumberProperty} property
   * @param {BooleanProperty} userControlledProperty
   * @param {Tandem} tandem
   */
  constructor(property, userControlledProperty, tandem) {
    super(controlsGravityLabelString, property, new Range(Math.abs(EnergySkateParkConstants.MIN_GRAVITY), Math.abs(EnergySkateParkConstants.MAX_GRAVITY)), userControlledProperty, tandem, {
      minLabel: controlsValueTinyString,
      sliderOptions: {
        constrainValue: value => Utils.roundToInterval(value, 1)
      }
    });
  }
}
energySkatePark.register('GravitySlider', GravitySlider);
export default GravitySlider;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSYW5nZSIsIlV0aWxzIiwiZW5lcmd5U2thdGVQYXJrIiwiRW5lcmd5U2thdGVQYXJrU3RyaW5ncyIsIkVuZXJneVNrYXRlUGFya0NvbnN0YW50cyIsIlBoeXNpY2FsU2xpZGVyIiwiY29udHJvbHNHcmF2aXR5TGFiZWxTdHJpbmciLCJwaHlzaWNhbENvbnRyb2xzIiwiZ3Jhdml0eUNvbnRyb2xzIiwiZ3Jhdml0eVN0cmluZ1Byb3BlcnR5IiwiY29udHJvbHNWYWx1ZVRpbnlTdHJpbmciLCJ0aW55U3RyaW5nUHJvcGVydHkiLCJHcmF2aXR5U2xpZGVyIiwiY29uc3RydWN0b3IiLCJwcm9wZXJ0eSIsInVzZXJDb250cm9sbGVkUHJvcGVydHkiLCJ0YW5kZW0iLCJNYXRoIiwiYWJzIiwiTUlOX0dSQVZJVFkiLCJNQVhfR1JBVklUWSIsIm1pbkxhYmVsIiwic2xpZGVyT3B0aW9ucyIsImNvbnN0cmFpblZhbHVlIiwidmFsdWUiLCJyb3VuZFRvSW50ZXJ2YWwiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIkdyYXZpdHlTbGlkZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTktMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogQSBzbGlkZXIgdGhhdCBjb250cm9scyB0aGUgZ3Jhdml0eSBQcm9wZXJ0eSBvZiBlbmVyZ3kgc2thdGUgcGFyay5cclxuICpcclxuICogQGF1dGhvciBKZXNzZSBHcmVlbmJlcmcgKFBoRVQgSW50ZXJhY3RpdmUgU2ltdWxhdGlvbnMpXHJcbiAqL1xyXG5cclxuaW1wb3J0IFJhbmdlIGZyb20gJy4uLy4uLy4uLy4uL2RvdC9qcy9SYW5nZS5qcyc7XHJcbmltcG9ydCBVdGlscyBmcm9tICcuLi8uLi8uLi8uLi9kb3QvanMvVXRpbHMuanMnO1xyXG5pbXBvcnQgZW5lcmd5U2thdGVQYXJrIGZyb20gJy4uLy4uL2VuZXJneVNrYXRlUGFyay5qcyc7XHJcbmltcG9ydCBFbmVyZ3lTa2F0ZVBhcmtTdHJpbmdzIGZyb20gJy4uLy4uL0VuZXJneVNrYXRlUGFya1N0cmluZ3MuanMnO1xyXG5pbXBvcnQgRW5lcmd5U2thdGVQYXJrQ29uc3RhbnRzIGZyb20gJy4uL0VuZXJneVNrYXRlUGFya0NvbnN0YW50cy5qcyc7XHJcbmltcG9ydCBQaHlzaWNhbFNsaWRlciBmcm9tICcuL1BoeXNpY2FsU2xpZGVyLmpzJztcclxuXHJcbmNvbnN0IGNvbnRyb2xzR3Jhdml0eUxhYmVsU3RyaW5nID0gRW5lcmd5U2thdGVQYXJrU3RyaW5ncy5waHlzaWNhbENvbnRyb2xzLmdyYXZpdHlDb250cm9scy5ncmF2aXR5U3RyaW5nUHJvcGVydHk7XHJcbmNvbnN0IGNvbnRyb2xzVmFsdWVUaW55U3RyaW5nID0gRW5lcmd5U2thdGVQYXJrU3RyaW5ncy5waHlzaWNhbENvbnRyb2xzLnRpbnlTdHJpbmdQcm9wZXJ0eTtcclxuXHJcbmNsYXNzIEdyYXZpdHlTbGlkZXIgZXh0ZW5kcyBQaHlzaWNhbFNsaWRlciB7XHJcblxyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSB7TnVtYmVyUHJvcGVydHl9IHByb3BlcnR5XHJcbiAgICogQHBhcmFtIHtCb29sZWFuUHJvcGVydHl9IHVzZXJDb250cm9sbGVkUHJvcGVydHlcclxuICAgKiBAcGFyYW0ge1RhbmRlbX0gdGFuZGVtXHJcbiAgICovXHJcbiAgY29uc3RydWN0b3IoIHByb3BlcnR5LCB1c2VyQ29udHJvbGxlZFByb3BlcnR5LCB0YW5kZW0gKSB7XHJcbiAgICBzdXBlcihcclxuICAgICAgY29udHJvbHNHcmF2aXR5TGFiZWxTdHJpbmcsXHJcbiAgICAgIHByb3BlcnR5LFxyXG4gICAgICBuZXcgUmFuZ2UoIE1hdGguYWJzKCBFbmVyZ3lTa2F0ZVBhcmtDb25zdGFudHMuTUlOX0dSQVZJVFkgKSwgTWF0aC5hYnMoIEVuZXJneVNrYXRlUGFya0NvbnN0YW50cy5NQVhfR1JBVklUWSApICksXHJcbiAgICAgIHVzZXJDb250cm9sbGVkUHJvcGVydHksXHJcbiAgICAgIHRhbmRlbSwge1xyXG4gICAgICAgIG1pbkxhYmVsOiBjb250cm9sc1ZhbHVlVGlueVN0cmluZyxcclxuICAgICAgICBzbGlkZXJPcHRpb25zOiB7XHJcbiAgICAgICAgICBjb25zdHJhaW5WYWx1ZTogdmFsdWUgPT4gVXRpbHMucm91bmRUb0ludGVydmFsKCB2YWx1ZSwgMSApXHJcbiAgICAgICAgfVxyXG4gICAgICB9ICk7XHJcbiAgfVxyXG59XHJcblxyXG5lbmVyZ3lTa2F0ZVBhcmsucmVnaXN0ZXIoICdHcmF2aXR5U2xpZGVyJywgR3Jhdml0eVNsaWRlciApO1xyXG5leHBvcnQgZGVmYXVsdCBHcmF2aXR5U2xpZGVyOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxLQUFLLE1BQU0sNkJBQTZCO0FBQy9DLE9BQU9DLEtBQUssTUFBTSw2QkFBNkI7QUFDL0MsT0FBT0MsZUFBZSxNQUFNLDBCQUEwQjtBQUN0RCxPQUFPQyxzQkFBc0IsTUFBTSxpQ0FBaUM7QUFDcEUsT0FBT0Msd0JBQXdCLE1BQU0sZ0NBQWdDO0FBQ3JFLE9BQU9DLGNBQWMsTUFBTSxxQkFBcUI7QUFFaEQsTUFBTUMsMEJBQTBCLEdBQUdILHNCQUFzQixDQUFDSSxnQkFBZ0IsQ0FBQ0MsZUFBZSxDQUFDQyxxQkFBcUI7QUFDaEgsTUFBTUMsdUJBQXVCLEdBQUdQLHNCQUFzQixDQUFDSSxnQkFBZ0IsQ0FBQ0ksa0JBQWtCO0FBRTFGLE1BQU1DLGFBQWEsU0FBU1AsY0FBYyxDQUFDO0VBRXpDO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7RUFDRVEsV0FBV0EsQ0FBRUMsUUFBUSxFQUFFQyxzQkFBc0IsRUFBRUMsTUFBTSxFQUFHO0lBQ3RELEtBQUssQ0FDSFYsMEJBQTBCLEVBQzFCUSxRQUFRLEVBQ1IsSUFBSWQsS0FBSyxDQUFFaUIsSUFBSSxDQUFDQyxHQUFHLENBQUVkLHdCQUF3QixDQUFDZSxXQUFZLENBQUMsRUFBRUYsSUFBSSxDQUFDQyxHQUFHLENBQUVkLHdCQUF3QixDQUFDZ0IsV0FBWSxDQUFFLENBQUMsRUFDL0dMLHNCQUFzQixFQUN0QkMsTUFBTSxFQUFFO01BQ05LLFFBQVEsRUFBRVgsdUJBQXVCO01BQ2pDWSxhQUFhLEVBQUU7UUFDYkMsY0FBYyxFQUFFQyxLQUFLLElBQUl2QixLQUFLLENBQUN3QixlQUFlLENBQUVELEtBQUssRUFBRSxDQUFFO01BQzNEO0lBQ0YsQ0FBRSxDQUFDO0VBQ1A7QUFDRjtBQUVBdEIsZUFBZSxDQUFDd0IsUUFBUSxDQUFFLGVBQWUsRUFBRWQsYUFBYyxDQUFDO0FBQzFELGVBQWVBLGFBQWEifQ==