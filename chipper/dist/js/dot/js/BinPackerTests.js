// Copyright 2015-2021, University of Colorado Boulder

/**
 * BinPacker tests
 *
 * @author Sam Reid (PhET Interactive Simulations)
 */

import BinPacker from './BinPacker.js';
import Bounds2 from './Bounds2.js';
QUnit.module('BinPacker');
QUnit.test('Entire BinPacker allocation', assert => {
  const p = new BinPacker(new Bounds2(0, 0, 1, 1));
  const bin = p.allocate(1, 1);
  assert.ok(bin, 'Should have a bin');
  assert.ok(!p.allocate(1, 1), 'Should not be able to fit another bin');
});
QUnit.test('Many bins', assert => {
  function checkNoOverlappingBins(array, containingBounds) {
    for (let i = 0; i < array.length; i++) {
      if (array[i]) {
        assert.ok(array[i].bounds.intersection(containingBounds).equals(array[i].bounds), 'Bin containment in packer');
        for (let j = 0; j < array.length; j++) {
          if (array[i] && array[j]) {
            assert.ok(!array[i].bounds.intersection(array[j]).hasNonzeroArea(), 'Bin intersection');
          }
        }
      }
    }
  }
  const bounds = new Bounds2(0, 0, 1, 1);

  // manual selection
  let p = new BinPacker(bounds);
  let bins = [];
  bins.push(p.allocate(0.5, 0.5));
  bins.push(p.allocate(0.7, 0.5));
  bins.push(p.allocate(0.25, 0.25));
  bins.push(p.allocate(0.25, 0.25));
  bins.push(p.allocate(0.25, 0.25));
  bins.push(p.allocate(0.5, 0.5));
  bins.push(p.allocate(0.25, 0.25));
  bins.push(p.allocate(0.125, 0.125));
  checkNoOverlappingBins(bins, bounds);

  // random selection 1
  p = new BinPacker(bounds);
  bins = [];
  bins.push(p.allocate(0.44616834132466465, 0.41642577887978405));
  bins.push(p.allocate(0.17503398610278964, 0.4698250909568742));
  bins.push(p.allocate(0.3687713402323425, 0.49438447563443333));
  bins.push(p.allocate(0.2212155022425577, 0.12973863759543747));
  bins.push(p.allocate(0.23436783626675606, 0.1793858843157068));
  bins.push(p.allocate(0.3277881086105481, 0.4529883404029533));
  bins.push(p.allocate(0.4578828973462805, 0.16699283372145146));
  bins.push(p.allocate(0.4951147836400196, 0.3712761078495532));
  bins.push(p.allocate(0.12035920866765082, 0.07933398941531777));
  bins.push(p.allocate(0.36102635774295777, 0.26559913356322795));
  bins.push(p.allocate(0.26784382725600153, 0.1836349458899349));
  bins.push(p.allocate(0.456789412884973, 0.42209713079500943));
  bins.push(p.allocate(0.02109772653784603, 0.4639585859840736));
  bins.push(p.allocate(0.044332472258247435, 0.33952464745379984));
  bins.push(p.allocate(0.11757566663436592, 0.36193573055788875));
  bins.push(p.allocate(0.14551889873109758, 0.24299477378372103));
  bins.push(p.allocate(0.12425019813235849, 0.19861565995961428));
  bins.push(p.allocate(0.44360995781607926, 0.22602709149941802));
  bins.push(p.allocate(0.2773028160445392, 0.244650712586008));
  bins.push(p.allocate(0.010583164519630373, 0.36023413320071995));
  bins.push(p.allocate(0.4406554071465507, 0.03555020003113896));
  bins.push(p.allocate(0.003882627352140844, 0.3892397922463715));
  bins.push(p.allocate(0.4342632673215121, 0.26994243171066046));
  bins.push(p.allocate(0.058485708897933364, 0.45621076493989676));
  bins.push(p.allocate(0.433261381695047, 0.2682658712146804));
  checkNoOverlappingBins(bins, bounds);

  // random selection 2
  p = new BinPacker(bounds);
  bins = [];
  bins.push(p.allocate(0.28867508897868294, 0.11809981148689985));
  bins.push(p.allocate(0.05196294980123639, 0.2273987023315082));
  bins.push(p.allocate(0.3091744827882697, 0.12894233805127442));
  bins.push(p.allocate(0.2400183773910006, 0.1845946432246516));
  bins.push(p.allocate(0.23558943594495454, 0.3245649382006377));
  bins.push(p.allocate(0.2981676709993432, 0.03869332140311599));
  bins.push(p.allocate(0.017755866593991716, 0.06222250103019178));
  bins.push(p.allocate(0.1694269891207417, 0.05473406030796468));
  bins.push(p.allocate(0.2209187406115234, 0.14402692733953396));
  bins.push(p.allocate(0.12201850721612573, 0.29193569083387655));
  bins.push(p.allocate(0.21890780849692723, 0.31901532093373436));
  bins.push(p.allocate(0.15136818083313605, 0.23815657361410558));
  bins.push(p.allocate(0.2932796392124146, 0.21944063684592643));
  bins.push(p.allocate(0.19007220507288972, 0.32989378677060205));
  bins.push(p.allocate(0.3011179862078279, 0.22924432515477142));
  bins.push(p.allocate(0.00008728060250480969, 0.2887297725925843));
  bins.push(p.allocate(0.07768157411677142, 0.2697811302108069));
  bins.push(p.allocate(0.16336605860851705, 0.22413462478046617));
  bins.push(p.allocate(0.1316782592330128, 0.12904599534037212));
  bins.push(p.allocate(0.025292747964461643, 0.3277013657304148));
  bins.push(p.allocate(0.06412563938647509, 0.21915481549998125));
  bins.push(p.allocate(0.32486365052560967, 0.2792208661946158));
  bins.push(p.allocate(0.10311868538459142, 0.2188195480654637));
  bins.push(p.allocate(0.28303924466793734, 0.1862659997617205));
  bins.push(p.allocate(0.08514244800123076, 0.10663530377981563));
  bins.push(p.allocate(0.29217134749827284, 0.19149748445488513));
  bins.push(p.allocate(0.027393308002501726, 0.21918218621673682));
  bins.push(p.allocate(0.10661425278522074, 0.29555924283340573));
  bins.push(p.allocate(0.2672333570662886, 0.27894352834361297));
  bins.push(p.allocate(0.04347166659620901, 0.1237633553488801));
  bins.push(p.allocate(0.05252628649274508, 0.07491425851670404));
  bins.push(p.allocate(0.3171079190603147, 0.05559094832278788));
  bins.push(p.allocate(0.0013751634396612644, 0.10906922242914636));
  bins.push(p.allocate(0.10426920272099476, 0.3224470660400887));
  bins.push(p.allocate(0.020921604009345174, 0.272700310839961));
  checkNoOverlappingBins(bins, bounds);

  // remove some (every other one)
  for (let i = 0; i < bins.length; i += 2) {
    if (bins[i]) {
      p.deallocate(bins[i]);
      bins[i] = null;
    }
  }

  // and try adding more
  bins.push(p.allocate(0.07768157411677142, 0.2697811302108069));
  bins.push(p.allocate(0.16336605860851705, 0.22413462478046617));
  bins.push(p.allocate(0.1316782592330128, 0.12904599534037212));
  bins.push(p.allocate(0.025292747964461643, 0.3277013657304148));
  bins.push(p.allocate(0.06412563938647509, 0.21915481549998125));
  bins.push(p.allocate(0.32486365052560967, 0.2792208661946158));
  bins.push(p.allocate(0.10311868538459142, 0.2188195480654637));
  bins.push(p.allocate(0.28303924466793734, 0.1862659997617205));
  bins.push(p.allocate(0.08514244800123076, 0.10663530377981563));
  bins.push(p.allocate(0.29217134749827284, 0.19149748445488513));
  bins.push(p.allocate(0.027393308002501726, 0.21918218621673682));
  bins.push(p.allocate(0.10661425278522074, 0.29555924283340573));
  bins.push(p.allocate(0.2672333570662886, 0.27894352834361297));
  bins.push(p.allocate(0.04347166659620901, 0.1237633553488801));
  bins.push(p.allocate(0.05252628649274508, 0.07491425851670404));
  bins.push(p.allocate(0.3171079190603147, 0.05559094832278788));
  bins.push(p.allocate(0.0013751634396612644, 0.10906922242914636));
  bins.push(p.allocate(0.10426920272099476, 0.3224470660400887));
  bins.push(p.allocate(0.020921604009345174, 0.272700310839961));
  checkNoOverlappingBins(bins, bounds);

  // remove all bins
  for (let i = 0; i < bins.length; i++) {
    if (bins[i]) {
      p.deallocate(bins[i]);
      bins[i] = null;
    }
  }

  // once empty, ensure we can allocate the full thing
  const fullBin = p.allocate(1, 1);
  assert.ok(fullBin, 'Allocation of full bin');
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJCaW5QYWNrZXIiLCJCb3VuZHMyIiwiUVVuaXQiLCJtb2R1bGUiLCJ0ZXN0IiwiYXNzZXJ0IiwicCIsImJpbiIsImFsbG9jYXRlIiwib2siLCJjaGVja05vT3ZlcmxhcHBpbmdCaW5zIiwiYXJyYXkiLCJjb250YWluaW5nQm91bmRzIiwiaSIsImxlbmd0aCIsImJvdW5kcyIsImludGVyc2VjdGlvbiIsImVxdWFscyIsImoiLCJoYXNOb256ZXJvQXJlYSIsImJpbnMiLCJwdXNoIiwiZGVhbGxvY2F0ZSIsImZ1bGxCaW4iXSwic291cmNlcyI6WyJCaW5QYWNrZXJUZXN0cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxNS0yMDIxLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBCaW5QYWNrZXIgdGVzdHNcclxuICpcclxuICogQGF1dGhvciBTYW0gUmVpZCAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcclxuICovXHJcblxyXG5pbXBvcnQgQmluUGFja2VyIGZyb20gJy4vQmluUGFja2VyLmpzJztcclxuaW1wb3J0IEJvdW5kczIgZnJvbSAnLi9Cb3VuZHMyLmpzJztcclxuXHJcblFVbml0Lm1vZHVsZSggJ0JpblBhY2tlcicgKTtcclxuXHJcblFVbml0LnRlc3QoICdFbnRpcmUgQmluUGFja2VyIGFsbG9jYXRpb24nLCBhc3NlcnQgPT4ge1xyXG4gIGNvbnN0IHAgPSBuZXcgQmluUGFja2VyKCBuZXcgQm91bmRzMiggMCwgMCwgMSwgMSApICk7XHJcbiAgY29uc3QgYmluID0gcC5hbGxvY2F0ZSggMSwgMSApO1xyXG4gIGFzc2VydC5vayggYmluLCAnU2hvdWxkIGhhdmUgYSBiaW4nICk7XHJcbiAgYXNzZXJ0Lm9rKCAhcC5hbGxvY2F0ZSggMSwgMSApLCAnU2hvdWxkIG5vdCBiZSBhYmxlIHRvIGZpdCBhbm90aGVyIGJpbicgKTtcclxufSApO1xyXG5cclxuUVVuaXQudGVzdCggJ01hbnkgYmlucycsIGFzc2VydCA9PiB7XHJcbiAgZnVuY3Rpb24gY2hlY2tOb092ZXJsYXBwaW5nQmlucyggYXJyYXksIGNvbnRhaW5pbmdCb3VuZHMgKSB7XHJcbiAgICBmb3IgKCBsZXQgaSA9IDA7IGkgPCBhcnJheS5sZW5ndGg7IGkrKyApIHtcclxuICAgICAgaWYgKCBhcnJheVsgaSBdICkge1xyXG4gICAgICAgIGFzc2VydC5vayggYXJyYXlbIGkgXS5ib3VuZHMuaW50ZXJzZWN0aW9uKCBjb250YWluaW5nQm91bmRzICkuZXF1YWxzKCBhcnJheVsgaSBdLmJvdW5kcyApLCAnQmluIGNvbnRhaW5tZW50IGluIHBhY2tlcicgKTtcclxuICAgICAgICBmb3IgKCBsZXQgaiA9IDA7IGogPCBhcnJheS5sZW5ndGg7IGorKyApIHtcclxuICAgICAgICAgIGlmICggYXJyYXlbIGkgXSAmJiBhcnJheVsgaiBdICkge1xyXG4gICAgICAgICAgICBhc3NlcnQub2soICFhcnJheVsgaSBdLmJvdW5kcy5pbnRlcnNlY3Rpb24oIGFycmF5WyBqIF0gKS5oYXNOb256ZXJvQXJlYSgpLCAnQmluIGludGVyc2VjdGlvbicgKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIGNvbnN0IGJvdW5kcyA9IG5ldyBCb3VuZHMyKCAwLCAwLCAxLCAxICk7XHJcblxyXG4gIC8vIG1hbnVhbCBzZWxlY3Rpb25cclxuICBsZXQgcCA9IG5ldyBCaW5QYWNrZXIoIGJvdW5kcyApO1xyXG4gIGxldCBiaW5zID0gW107XHJcbiAgYmlucy5wdXNoKCBwLmFsbG9jYXRlKCAwLjUsIDAuNSApICk7XHJcbiAgYmlucy5wdXNoKCBwLmFsbG9jYXRlKCAwLjcsIDAuNSApICk7XHJcbiAgYmlucy5wdXNoKCBwLmFsbG9jYXRlKCAwLjI1LCAwLjI1ICkgKTtcclxuICBiaW5zLnB1c2goIHAuYWxsb2NhdGUoIDAuMjUsIDAuMjUgKSApO1xyXG4gIGJpbnMucHVzaCggcC5hbGxvY2F0ZSggMC4yNSwgMC4yNSApICk7XHJcbiAgYmlucy5wdXNoKCBwLmFsbG9jYXRlKCAwLjUsIDAuNSApICk7XHJcbiAgYmlucy5wdXNoKCBwLmFsbG9jYXRlKCAwLjI1LCAwLjI1ICkgKTtcclxuICBiaW5zLnB1c2goIHAuYWxsb2NhdGUoIDAuMTI1LCAwLjEyNSApICk7XHJcbiAgY2hlY2tOb092ZXJsYXBwaW5nQmlucyggYmlucywgYm91bmRzICk7XHJcblxyXG4gIC8vIHJhbmRvbSBzZWxlY3Rpb24gMVxyXG4gIHAgPSBuZXcgQmluUGFja2VyKCBib3VuZHMgKTtcclxuICBiaW5zID0gW107XHJcbiAgYmlucy5wdXNoKCBwLmFsbG9jYXRlKCAwLjQ0NjE2ODM0MTMyNDY2NDY1LCAwLjQxNjQyNTc3ODg3OTc4NDA1ICkgKTtcclxuICBiaW5zLnB1c2goIHAuYWxsb2NhdGUoIDAuMTc1MDMzOTg2MTAyNzg5NjQsIDAuNDY5ODI1MDkwOTU2ODc0MiApICk7XHJcbiAgYmlucy5wdXNoKCBwLmFsbG9jYXRlKCAwLjM2ODc3MTM0MDIzMjM0MjUsIDAuNDk0Mzg0NDc1NjM0NDMzMzMgKSApO1xyXG4gIGJpbnMucHVzaCggcC5hbGxvY2F0ZSggMC4yMjEyMTU1MDIyNDI1NTc3LCAwLjEyOTczODYzNzU5NTQzNzQ3ICkgKTtcclxuICBiaW5zLnB1c2goIHAuYWxsb2NhdGUoIDAuMjM0MzY3ODM2MjY2NzU2MDYsIDAuMTc5Mzg1ODg0MzE1NzA2OCApICk7XHJcbiAgYmlucy5wdXNoKCBwLmFsbG9jYXRlKCAwLjMyNzc4ODEwODYxMDU0ODEsIDAuNDUyOTg4MzQwNDAyOTUzMyApICk7XHJcbiAgYmlucy5wdXNoKCBwLmFsbG9jYXRlKCAwLjQ1Nzg4Mjg5NzM0NjI4MDUsIDAuMTY2OTkyODMzNzIxNDUxNDYgKSApO1xyXG4gIGJpbnMucHVzaCggcC5hbGxvY2F0ZSggMC40OTUxMTQ3ODM2NDAwMTk2LCAwLjM3MTI3NjEwNzg0OTU1MzIgKSApO1xyXG4gIGJpbnMucHVzaCggcC5hbGxvY2F0ZSggMC4xMjAzNTkyMDg2Njc2NTA4MiwgMC4wNzkzMzM5ODk0MTUzMTc3NyApICk7XHJcbiAgYmlucy5wdXNoKCBwLmFsbG9jYXRlKCAwLjM2MTAyNjM1Nzc0Mjk1Nzc3LCAwLjI2NTU5OTEzMzU2MzIyNzk1ICkgKTtcclxuICBiaW5zLnB1c2goIHAuYWxsb2NhdGUoIDAuMjY3ODQzODI3MjU2MDAxNTMsIDAuMTgzNjM0OTQ1ODg5OTM0OSApICk7XHJcbiAgYmlucy5wdXNoKCBwLmFsbG9jYXRlKCAwLjQ1Njc4OTQxMjg4NDk3MywgMC40MjIwOTcxMzA3OTUwMDk0MyApICk7XHJcbiAgYmlucy5wdXNoKCBwLmFsbG9jYXRlKCAwLjAyMTA5NzcyNjUzNzg0NjAzLCAwLjQ2Mzk1ODU4NTk4NDA3MzYgKSApO1xyXG4gIGJpbnMucHVzaCggcC5hbGxvY2F0ZSggMC4wNDQzMzI0NzIyNTgyNDc0MzUsIDAuMzM5NTI0NjQ3NDUzNzk5ODQgKSApO1xyXG4gIGJpbnMucHVzaCggcC5hbGxvY2F0ZSggMC4xMTc1NzU2NjY2MzQzNjU5MiwgMC4zNjE5MzU3MzA1NTc4ODg3NSApICk7XHJcbiAgYmlucy5wdXNoKCBwLmFsbG9jYXRlKCAwLjE0NTUxODg5ODczMTA5NzU4LCAwLjI0Mjk5NDc3Mzc4MzcyMTAzICkgKTtcclxuICBiaW5zLnB1c2goIHAuYWxsb2NhdGUoIDAuMTI0MjUwMTk4MTMyMzU4NDksIDAuMTk4NjE1NjU5OTU5NjE0MjggKSApO1xyXG4gIGJpbnMucHVzaCggcC5hbGxvY2F0ZSggMC40NDM2MDk5NTc4MTYwNzkyNiwgMC4yMjYwMjcwOTE0OTk0MTgwMiApICk7XHJcbiAgYmlucy5wdXNoKCBwLmFsbG9jYXRlKCAwLjI3NzMwMjgxNjA0NDUzOTIsIDAuMjQ0NjUwNzEyNTg2MDA4ICkgKTtcclxuICBiaW5zLnB1c2goIHAuYWxsb2NhdGUoIDAuMDEwNTgzMTY0NTE5NjMwMzczLCAwLjM2MDIzNDEzMzIwMDcxOTk1ICkgKTtcclxuICBiaW5zLnB1c2goIHAuYWxsb2NhdGUoIDAuNDQwNjU1NDA3MTQ2NTUwNywgMC4wMzU1NTAyMDAwMzExMzg5NiApICk7XHJcbiAgYmlucy5wdXNoKCBwLmFsbG9jYXRlKCAwLjAwMzg4MjYyNzM1MjE0MDg0NCwgMC4zODkyMzk3OTIyNDYzNzE1ICkgKTtcclxuICBiaW5zLnB1c2goIHAuYWxsb2NhdGUoIDAuNDM0MjYzMjY3MzIxNTEyMSwgMC4yNjk5NDI0MzE3MTA2NjA0NiApICk7XHJcbiAgYmlucy5wdXNoKCBwLmFsbG9jYXRlKCAwLjA1ODQ4NTcwODg5NzkzMzM2NCwgMC40NTYyMTA3NjQ5Mzk4OTY3NiApICk7XHJcbiAgYmlucy5wdXNoKCBwLmFsbG9jYXRlKCAwLjQzMzI2MTM4MTY5NTA0NywgMC4yNjgyNjU4NzEyMTQ2ODA0ICkgKTtcclxuICBjaGVja05vT3ZlcmxhcHBpbmdCaW5zKCBiaW5zLCBib3VuZHMgKTtcclxuXHJcbiAgLy8gcmFuZG9tIHNlbGVjdGlvbiAyXHJcbiAgcCA9IG5ldyBCaW5QYWNrZXIoIGJvdW5kcyApO1xyXG4gIGJpbnMgPSBbXTtcclxuICBiaW5zLnB1c2goIHAuYWxsb2NhdGUoIDAuMjg4Njc1MDg4OTc4NjgyOTQsIDAuMTE4MDk5ODExNDg2ODk5ODUgKSApO1xyXG4gIGJpbnMucHVzaCggcC5hbGxvY2F0ZSggMC4wNTE5NjI5NDk4MDEyMzYzOSwgMC4yMjczOTg3MDIzMzE1MDgyICkgKTtcclxuICBiaW5zLnB1c2goIHAuYWxsb2NhdGUoIDAuMzA5MTc0NDgyNzg4MjY5NywgMC4xMjg5NDIzMzgwNTEyNzQ0MiApICk7XHJcbiAgYmlucy5wdXNoKCBwLmFsbG9jYXRlKCAwLjI0MDAxODM3NzM5MTAwMDYsIDAuMTg0NTk0NjQzMjI0NjUxNiApICk7XHJcbiAgYmlucy5wdXNoKCBwLmFsbG9jYXRlKCAwLjIzNTU4OTQzNTk0NDk1NDU0LCAwLjMyNDU2NDkzODIwMDYzNzcgKSApO1xyXG4gIGJpbnMucHVzaCggcC5hbGxvY2F0ZSggMC4yOTgxNjc2NzA5OTkzNDMyLCAwLjAzODY5MzMyMTQwMzExNTk5ICkgKTtcclxuICBiaW5zLnB1c2goIHAuYWxsb2NhdGUoIDAuMDE3NzU1ODY2NTkzOTkxNzE2LCAwLjA2MjIyMjUwMTAzMDE5MTc4ICkgKTtcclxuICBiaW5zLnB1c2goIHAuYWxsb2NhdGUoIDAuMTY5NDI2OTg5MTIwNzQxNywgMC4wNTQ3MzQwNjAzMDc5NjQ2OCApICk7XHJcbiAgYmlucy5wdXNoKCBwLmFsbG9jYXRlKCAwLjIyMDkxODc0MDYxMTUyMzQsIDAuMTQ0MDI2OTI3MzM5NTMzOTYgKSApO1xyXG4gIGJpbnMucHVzaCggcC5hbGxvY2F0ZSggMC4xMjIwMTg1MDcyMTYxMjU3MywgMC4yOTE5MzU2OTA4MzM4NzY1NSApICk7XHJcbiAgYmlucy5wdXNoKCBwLmFsbG9jYXRlKCAwLjIxODkwNzgwODQ5NjkyNzIzLCAwLjMxOTAxNTMyMDkzMzczNDM2ICkgKTtcclxuICBiaW5zLnB1c2goIHAuYWxsb2NhdGUoIDAuMTUxMzY4MTgwODMzMTM2MDUsIDAuMjM4MTU2NTczNjE0MTA1NTggKSApO1xyXG4gIGJpbnMucHVzaCggcC5hbGxvY2F0ZSggMC4yOTMyNzk2MzkyMTI0MTQ2LCAwLjIxOTQ0MDYzNjg0NTkyNjQzICkgKTtcclxuICBiaW5zLnB1c2goIHAuYWxsb2NhdGUoIDAuMTkwMDcyMjA1MDcyODg5NzIsIDAuMzI5ODkzNzg2NzcwNjAyMDUgKSApO1xyXG4gIGJpbnMucHVzaCggcC5hbGxvY2F0ZSggMC4zMDExMTc5ODYyMDc4Mjc5LCAwLjIyOTI0NDMyNTE1NDc3MTQyICkgKTtcclxuICBiaW5zLnB1c2goIHAuYWxsb2NhdGUoIDAuMDAwMDg3MjgwNjAyNTA0ODA5NjksIDAuMjg4NzI5NzcyNTkyNTg0MyApICk7XHJcbiAgYmlucy5wdXNoKCBwLmFsbG9jYXRlKCAwLjA3NzY4MTU3NDExNjc3MTQyLCAwLjI2OTc4MTEzMDIxMDgwNjkgKSApO1xyXG4gIGJpbnMucHVzaCggcC5hbGxvY2F0ZSggMC4xNjMzNjYwNTg2MDg1MTcwNSwgMC4yMjQxMzQ2MjQ3ODA0NjYxNyApICk7XHJcbiAgYmlucy5wdXNoKCBwLmFsbG9jYXRlKCAwLjEzMTY3ODI1OTIzMzAxMjgsIDAuMTI5MDQ1OTk1MzQwMzcyMTIgKSApO1xyXG4gIGJpbnMucHVzaCggcC5hbGxvY2F0ZSggMC4wMjUyOTI3NDc5NjQ0NjE2NDMsIDAuMzI3NzAxMzY1NzMwNDE0OCApICk7XHJcbiAgYmlucy5wdXNoKCBwLmFsbG9jYXRlKCAwLjA2NDEyNTYzOTM4NjQ3NTA5LCAwLjIxOTE1NDgxNTQ5OTk4MTI1ICkgKTtcclxuICBiaW5zLnB1c2goIHAuYWxsb2NhdGUoIDAuMzI0ODYzNjUwNTI1NjA5NjcsIDAuMjc5MjIwODY2MTk0NjE1OCApICk7XHJcbiAgYmlucy5wdXNoKCBwLmFsbG9jYXRlKCAwLjEwMzExODY4NTM4NDU5MTQyLCAwLjIxODgxOTU0ODA2NTQ2MzcgKSApO1xyXG4gIGJpbnMucHVzaCggcC5hbGxvY2F0ZSggMC4yODMwMzkyNDQ2Njc5MzczNCwgMC4xODYyNjU5OTk3NjE3MjA1ICkgKTtcclxuICBiaW5zLnB1c2goIHAuYWxsb2NhdGUoIDAuMDg1MTQyNDQ4MDAxMjMwNzYsIDAuMTA2NjM1MzAzNzc5ODE1NjMgKSApO1xyXG4gIGJpbnMucHVzaCggcC5hbGxvY2F0ZSggMC4yOTIxNzEzNDc0OTgyNzI4NCwgMC4xOTE0OTc0ODQ0NTQ4ODUxMyApICk7XHJcbiAgYmlucy5wdXNoKCBwLmFsbG9jYXRlKCAwLjAyNzM5MzMwODAwMjUwMTcyNiwgMC4yMTkxODIxODYyMTY3MzY4MiApICk7XHJcbiAgYmlucy5wdXNoKCBwLmFsbG9jYXRlKCAwLjEwNjYxNDI1Mjc4NTIyMDc0LCAwLjI5NTU1OTI0MjgzMzQwNTczICkgKTtcclxuICBiaW5zLnB1c2goIHAuYWxsb2NhdGUoIDAuMjY3MjMzMzU3MDY2Mjg4NiwgMC4yNzg5NDM1MjgzNDM2MTI5NyApICk7XHJcbiAgYmlucy5wdXNoKCBwLmFsbG9jYXRlKCAwLjA0MzQ3MTY2NjU5NjIwOTAxLCAwLjEyMzc2MzM1NTM0ODg4MDEgKSApO1xyXG4gIGJpbnMucHVzaCggcC5hbGxvY2F0ZSggMC4wNTI1MjYyODY0OTI3NDUwOCwgMC4wNzQ5MTQyNTg1MTY3MDQwNCApICk7XHJcbiAgYmlucy5wdXNoKCBwLmFsbG9jYXRlKCAwLjMxNzEwNzkxOTA2MDMxNDcsIDAuMDU1NTkwOTQ4MzIyNzg3ODggKSApO1xyXG4gIGJpbnMucHVzaCggcC5hbGxvY2F0ZSggMC4wMDEzNzUxNjM0Mzk2NjEyNjQ0LCAwLjEwOTA2OTIyMjQyOTE0NjM2ICkgKTtcclxuICBiaW5zLnB1c2goIHAuYWxsb2NhdGUoIDAuMTA0MjY5MjAyNzIwOTk0NzYsIDAuMzIyNDQ3MDY2MDQwMDg4NyApICk7XHJcbiAgYmlucy5wdXNoKCBwLmFsbG9jYXRlKCAwLjAyMDkyMTYwNDAwOTM0NTE3NCwgMC4yNzI3MDAzMTA4Mzk5NjEgKSApO1xyXG4gIGNoZWNrTm9PdmVybGFwcGluZ0JpbnMoIGJpbnMsIGJvdW5kcyApO1xyXG5cclxuICAvLyByZW1vdmUgc29tZSAoZXZlcnkgb3RoZXIgb25lKVxyXG4gIGZvciAoIGxldCBpID0gMDsgaSA8IGJpbnMubGVuZ3RoOyBpICs9IDIgKSB7XHJcbiAgICBpZiAoIGJpbnNbIGkgXSApIHtcclxuICAgICAgcC5kZWFsbG9jYXRlKCBiaW5zWyBpIF0gKTtcclxuICAgICAgYmluc1sgaSBdID0gbnVsbDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vIGFuZCB0cnkgYWRkaW5nIG1vcmVcclxuICBiaW5zLnB1c2goIHAuYWxsb2NhdGUoIDAuMDc3NjgxNTc0MTE2NzcxNDIsIDAuMjY5NzgxMTMwMjEwODA2OSApICk7XHJcbiAgYmlucy5wdXNoKCBwLmFsbG9jYXRlKCAwLjE2MzM2NjA1ODYwODUxNzA1LCAwLjIyNDEzNDYyNDc4MDQ2NjE3ICkgKTtcclxuICBiaW5zLnB1c2goIHAuYWxsb2NhdGUoIDAuMTMxNjc4MjU5MjMzMDEyOCwgMC4xMjkwNDU5OTUzNDAzNzIxMiApICk7XHJcbiAgYmlucy5wdXNoKCBwLmFsbG9jYXRlKCAwLjAyNTI5Mjc0Nzk2NDQ2MTY0MywgMC4zMjc3MDEzNjU3MzA0MTQ4ICkgKTtcclxuICBiaW5zLnB1c2goIHAuYWxsb2NhdGUoIDAuMDY0MTI1NjM5Mzg2NDc1MDksIDAuMjE5MTU0ODE1NDk5OTgxMjUgKSApO1xyXG4gIGJpbnMucHVzaCggcC5hbGxvY2F0ZSggMC4zMjQ4NjM2NTA1MjU2MDk2NywgMC4yNzkyMjA4NjYxOTQ2MTU4ICkgKTtcclxuICBiaW5zLnB1c2goIHAuYWxsb2NhdGUoIDAuMTAzMTE4Njg1Mzg0NTkxNDIsIDAuMjE4ODE5NTQ4MDY1NDYzNyApICk7XHJcbiAgYmlucy5wdXNoKCBwLmFsbG9jYXRlKCAwLjI4MzAzOTI0NDY2NzkzNzM0LCAwLjE4NjI2NTk5OTc2MTcyMDUgKSApO1xyXG4gIGJpbnMucHVzaCggcC5hbGxvY2F0ZSggMC4wODUxNDI0NDgwMDEyMzA3NiwgMC4xMDY2MzUzMDM3Nzk4MTU2MyApICk7XHJcbiAgYmlucy5wdXNoKCBwLmFsbG9jYXRlKCAwLjI5MjE3MTM0NzQ5ODI3Mjg0LCAwLjE5MTQ5NzQ4NDQ1NDg4NTEzICkgKTtcclxuICBiaW5zLnB1c2goIHAuYWxsb2NhdGUoIDAuMDI3MzkzMzA4MDAyNTAxNzI2LCAwLjIxOTE4MjE4NjIxNjczNjgyICkgKTtcclxuICBiaW5zLnB1c2goIHAuYWxsb2NhdGUoIDAuMTA2NjE0MjUyNzg1MjIwNzQsIDAuMjk1NTU5MjQyODMzNDA1NzMgKSApO1xyXG4gIGJpbnMucHVzaCggcC5hbGxvY2F0ZSggMC4yNjcyMzMzNTcwNjYyODg2LCAwLjI3ODk0MzUyODM0MzYxMjk3ICkgKTtcclxuICBiaW5zLnB1c2goIHAuYWxsb2NhdGUoIDAuMDQzNDcxNjY2NTk2MjA5MDEsIDAuMTIzNzYzMzU1MzQ4ODgwMSApICk7XHJcbiAgYmlucy5wdXNoKCBwLmFsbG9jYXRlKCAwLjA1MjUyNjI4NjQ5Mjc0NTA4LCAwLjA3NDkxNDI1ODUxNjcwNDA0ICkgKTtcclxuICBiaW5zLnB1c2goIHAuYWxsb2NhdGUoIDAuMzE3MTA3OTE5MDYwMzE0NywgMC4wNTU1OTA5NDgzMjI3ODc4OCApICk7XHJcbiAgYmlucy5wdXNoKCBwLmFsbG9jYXRlKCAwLjAwMTM3NTE2MzQzOTY2MTI2NDQsIDAuMTA5MDY5MjIyNDI5MTQ2MzYgKSApO1xyXG4gIGJpbnMucHVzaCggcC5hbGxvY2F0ZSggMC4xMDQyNjkyMDI3MjA5OTQ3NiwgMC4zMjI0NDcwNjYwNDAwODg3ICkgKTtcclxuICBiaW5zLnB1c2goIHAuYWxsb2NhdGUoIDAuMDIwOTIxNjA0MDA5MzQ1MTc0LCAwLjI3MjcwMDMxMDgzOTk2MSApICk7XHJcblxyXG4gIGNoZWNrTm9PdmVybGFwcGluZ0JpbnMoIGJpbnMsIGJvdW5kcyApO1xyXG5cclxuICAvLyByZW1vdmUgYWxsIGJpbnNcclxuICBmb3IgKCBsZXQgaSA9IDA7IGkgPCBiaW5zLmxlbmd0aDsgaSsrICkge1xyXG4gICAgaWYgKCBiaW5zWyBpIF0gKSB7XHJcbiAgICAgIHAuZGVhbGxvY2F0ZSggYmluc1sgaSBdICk7XHJcbiAgICAgIGJpbnNbIGkgXSA9IG51bGw7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvLyBvbmNlIGVtcHR5LCBlbnN1cmUgd2UgY2FuIGFsbG9jYXRlIHRoZSBmdWxsIHRoaW5nXHJcbiAgY29uc3QgZnVsbEJpbiA9IHAuYWxsb2NhdGUoIDEsIDEgKTtcclxuICBhc3NlcnQub2soIGZ1bGxCaW4sICdBbGxvY2F0aW9uIG9mIGZ1bGwgYmluJyApO1xyXG59ICk7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLFNBQVMsTUFBTSxnQkFBZ0I7QUFDdEMsT0FBT0MsT0FBTyxNQUFNLGNBQWM7QUFFbENDLEtBQUssQ0FBQ0MsTUFBTSxDQUFFLFdBQVksQ0FBQztBQUUzQkQsS0FBSyxDQUFDRSxJQUFJLENBQUUsNkJBQTZCLEVBQUVDLE1BQU0sSUFBSTtFQUNuRCxNQUFNQyxDQUFDLEdBQUcsSUFBSU4sU0FBUyxDQUFFLElBQUlDLE9BQU8sQ0FBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFFLENBQUUsQ0FBQztFQUNwRCxNQUFNTSxHQUFHLEdBQUdELENBQUMsQ0FBQ0UsUUFBUSxDQUFFLENBQUMsRUFBRSxDQUFFLENBQUM7RUFDOUJILE1BQU0sQ0FBQ0ksRUFBRSxDQUFFRixHQUFHLEVBQUUsbUJBQW9CLENBQUM7RUFDckNGLE1BQU0sQ0FBQ0ksRUFBRSxDQUFFLENBQUNILENBQUMsQ0FBQ0UsUUFBUSxDQUFFLENBQUMsRUFBRSxDQUFFLENBQUMsRUFBRSx1Q0FBd0MsQ0FBQztBQUMzRSxDQUFFLENBQUM7QUFFSE4sS0FBSyxDQUFDRSxJQUFJLENBQUUsV0FBVyxFQUFFQyxNQUFNLElBQUk7RUFDakMsU0FBU0ssc0JBQXNCQSxDQUFFQyxLQUFLLEVBQUVDLGdCQUFnQixFQUFHO0lBQ3pELEtBQU0sSUFBSUMsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHRixLQUFLLENBQUNHLE1BQU0sRUFBRUQsQ0FBQyxFQUFFLEVBQUc7TUFDdkMsSUFBS0YsS0FBSyxDQUFFRSxDQUFDLENBQUUsRUFBRztRQUNoQlIsTUFBTSxDQUFDSSxFQUFFLENBQUVFLEtBQUssQ0FBRUUsQ0FBQyxDQUFFLENBQUNFLE1BQU0sQ0FBQ0MsWUFBWSxDQUFFSixnQkFBaUIsQ0FBQyxDQUFDSyxNQUFNLENBQUVOLEtBQUssQ0FBRUUsQ0FBQyxDQUFFLENBQUNFLE1BQU8sQ0FBQyxFQUFFLDJCQUE0QixDQUFDO1FBQ3hILEtBQU0sSUFBSUcsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHUCxLQUFLLENBQUNHLE1BQU0sRUFBRUksQ0FBQyxFQUFFLEVBQUc7VUFDdkMsSUFBS1AsS0FBSyxDQUFFRSxDQUFDLENBQUUsSUFBSUYsS0FBSyxDQUFFTyxDQUFDLENBQUUsRUFBRztZQUM5QmIsTUFBTSxDQUFDSSxFQUFFLENBQUUsQ0FBQ0UsS0FBSyxDQUFFRSxDQUFDLENBQUUsQ0FBQ0UsTUFBTSxDQUFDQyxZQUFZLENBQUVMLEtBQUssQ0FBRU8sQ0FBQyxDQUFHLENBQUMsQ0FBQ0MsY0FBYyxDQUFDLENBQUMsRUFBRSxrQkFBbUIsQ0FBQztVQUNqRztRQUNGO01BQ0Y7SUFDRjtFQUNGO0VBRUEsTUFBTUosTUFBTSxHQUFHLElBQUlkLE9BQU8sQ0FBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFFLENBQUM7O0VBRXhDO0VBQ0EsSUFBSUssQ0FBQyxHQUFHLElBQUlOLFNBQVMsQ0FBRWUsTUFBTyxDQUFDO0VBQy9CLElBQUlLLElBQUksR0FBRyxFQUFFO0VBQ2JBLElBQUksQ0FBQ0MsSUFBSSxDQUFFZixDQUFDLENBQUNFLFFBQVEsQ0FBRSxHQUFHLEVBQUUsR0FBSSxDQUFFLENBQUM7RUFDbkNZLElBQUksQ0FBQ0MsSUFBSSxDQUFFZixDQUFDLENBQUNFLFFBQVEsQ0FBRSxHQUFHLEVBQUUsR0FBSSxDQUFFLENBQUM7RUFDbkNZLElBQUksQ0FBQ0MsSUFBSSxDQUFFZixDQUFDLENBQUNFLFFBQVEsQ0FBRSxJQUFJLEVBQUUsSUFBSyxDQUFFLENBQUM7RUFDckNZLElBQUksQ0FBQ0MsSUFBSSxDQUFFZixDQUFDLENBQUNFLFFBQVEsQ0FBRSxJQUFJLEVBQUUsSUFBSyxDQUFFLENBQUM7RUFDckNZLElBQUksQ0FBQ0MsSUFBSSxDQUFFZixDQUFDLENBQUNFLFFBQVEsQ0FBRSxJQUFJLEVBQUUsSUFBSyxDQUFFLENBQUM7RUFDckNZLElBQUksQ0FBQ0MsSUFBSSxDQUFFZixDQUFDLENBQUNFLFFBQVEsQ0FBRSxHQUFHLEVBQUUsR0FBSSxDQUFFLENBQUM7RUFDbkNZLElBQUksQ0FBQ0MsSUFBSSxDQUFFZixDQUFDLENBQUNFLFFBQVEsQ0FBRSxJQUFJLEVBQUUsSUFBSyxDQUFFLENBQUM7RUFDckNZLElBQUksQ0FBQ0MsSUFBSSxDQUFFZixDQUFDLENBQUNFLFFBQVEsQ0FBRSxLQUFLLEVBQUUsS0FBTSxDQUFFLENBQUM7RUFDdkNFLHNCQUFzQixDQUFFVSxJQUFJLEVBQUVMLE1BQU8sQ0FBQzs7RUFFdEM7RUFDQVQsQ0FBQyxHQUFHLElBQUlOLFNBQVMsQ0FBRWUsTUFBTyxDQUFDO0VBQzNCSyxJQUFJLEdBQUcsRUFBRTtFQUNUQSxJQUFJLENBQUNDLElBQUksQ0FBRWYsQ0FBQyxDQUFDRSxRQUFRLENBQUUsbUJBQW1CLEVBQUUsbUJBQW9CLENBQUUsQ0FBQztFQUNuRVksSUFBSSxDQUFDQyxJQUFJLENBQUVmLENBQUMsQ0FBQ0UsUUFBUSxDQUFFLG1CQUFtQixFQUFFLGtCQUFtQixDQUFFLENBQUM7RUFDbEVZLElBQUksQ0FBQ0MsSUFBSSxDQUFFZixDQUFDLENBQUNFLFFBQVEsQ0FBRSxrQkFBa0IsRUFBRSxtQkFBb0IsQ0FBRSxDQUFDO0VBQ2xFWSxJQUFJLENBQUNDLElBQUksQ0FBRWYsQ0FBQyxDQUFDRSxRQUFRLENBQUUsa0JBQWtCLEVBQUUsbUJBQW9CLENBQUUsQ0FBQztFQUNsRVksSUFBSSxDQUFDQyxJQUFJLENBQUVmLENBQUMsQ0FBQ0UsUUFBUSxDQUFFLG1CQUFtQixFQUFFLGtCQUFtQixDQUFFLENBQUM7RUFDbEVZLElBQUksQ0FBQ0MsSUFBSSxDQUFFZixDQUFDLENBQUNFLFFBQVEsQ0FBRSxrQkFBa0IsRUFBRSxrQkFBbUIsQ0FBRSxDQUFDO0VBQ2pFWSxJQUFJLENBQUNDLElBQUksQ0FBRWYsQ0FBQyxDQUFDRSxRQUFRLENBQUUsa0JBQWtCLEVBQUUsbUJBQW9CLENBQUUsQ0FBQztFQUNsRVksSUFBSSxDQUFDQyxJQUFJLENBQUVmLENBQUMsQ0FBQ0UsUUFBUSxDQUFFLGtCQUFrQixFQUFFLGtCQUFtQixDQUFFLENBQUM7RUFDakVZLElBQUksQ0FBQ0MsSUFBSSxDQUFFZixDQUFDLENBQUNFLFFBQVEsQ0FBRSxtQkFBbUIsRUFBRSxtQkFBb0IsQ0FBRSxDQUFDO0VBQ25FWSxJQUFJLENBQUNDLElBQUksQ0FBRWYsQ0FBQyxDQUFDRSxRQUFRLENBQUUsbUJBQW1CLEVBQUUsbUJBQW9CLENBQUUsQ0FBQztFQUNuRVksSUFBSSxDQUFDQyxJQUFJLENBQUVmLENBQUMsQ0FBQ0UsUUFBUSxDQUFFLG1CQUFtQixFQUFFLGtCQUFtQixDQUFFLENBQUM7RUFDbEVZLElBQUksQ0FBQ0MsSUFBSSxDQUFFZixDQUFDLENBQUNFLFFBQVEsQ0FBRSxpQkFBaUIsRUFBRSxtQkFBb0IsQ0FBRSxDQUFDO0VBQ2pFWSxJQUFJLENBQUNDLElBQUksQ0FBRWYsQ0FBQyxDQUFDRSxRQUFRLENBQUUsbUJBQW1CLEVBQUUsa0JBQW1CLENBQUUsQ0FBQztFQUNsRVksSUFBSSxDQUFDQyxJQUFJLENBQUVmLENBQUMsQ0FBQ0UsUUFBUSxDQUFFLG9CQUFvQixFQUFFLG1CQUFvQixDQUFFLENBQUM7RUFDcEVZLElBQUksQ0FBQ0MsSUFBSSxDQUFFZixDQUFDLENBQUNFLFFBQVEsQ0FBRSxtQkFBbUIsRUFBRSxtQkFBb0IsQ0FBRSxDQUFDO0VBQ25FWSxJQUFJLENBQUNDLElBQUksQ0FBRWYsQ0FBQyxDQUFDRSxRQUFRLENBQUUsbUJBQW1CLEVBQUUsbUJBQW9CLENBQUUsQ0FBQztFQUNuRVksSUFBSSxDQUFDQyxJQUFJLENBQUVmLENBQUMsQ0FBQ0UsUUFBUSxDQUFFLG1CQUFtQixFQUFFLG1CQUFvQixDQUFFLENBQUM7RUFDbkVZLElBQUksQ0FBQ0MsSUFBSSxDQUFFZixDQUFDLENBQUNFLFFBQVEsQ0FBRSxtQkFBbUIsRUFBRSxtQkFBb0IsQ0FBRSxDQUFDO0VBQ25FWSxJQUFJLENBQUNDLElBQUksQ0FBRWYsQ0FBQyxDQUFDRSxRQUFRLENBQUUsa0JBQWtCLEVBQUUsaUJBQWtCLENBQUUsQ0FBQztFQUNoRVksSUFBSSxDQUFDQyxJQUFJLENBQUVmLENBQUMsQ0FBQ0UsUUFBUSxDQUFFLG9CQUFvQixFQUFFLG1CQUFvQixDQUFFLENBQUM7RUFDcEVZLElBQUksQ0FBQ0MsSUFBSSxDQUFFZixDQUFDLENBQUNFLFFBQVEsQ0FBRSxrQkFBa0IsRUFBRSxtQkFBb0IsQ0FBRSxDQUFDO0VBQ2xFWSxJQUFJLENBQUNDLElBQUksQ0FBRWYsQ0FBQyxDQUFDRSxRQUFRLENBQUUsb0JBQW9CLEVBQUUsa0JBQW1CLENBQUUsQ0FBQztFQUNuRVksSUFBSSxDQUFDQyxJQUFJLENBQUVmLENBQUMsQ0FBQ0UsUUFBUSxDQUFFLGtCQUFrQixFQUFFLG1CQUFvQixDQUFFLENBQUM7RUFDbEVZLElBQUksQ0FBQ0MsSUFBSSxDQUFFZixDQUFDLENBQUNFLFFBQVEsQ0FBRSxvQkFBb0IsRUFBRSxtQkFBb0IsQ0FBRSxDQUFDO0VBQ3BFWSxJQUFJLENBQUNDLElBQUksQ0FBRWYsQ0FBQyxDQUFDRSxRQUFRLENBQUUsaUJBQWlCLEVBQUUsa0JBQW1CLENBQUUsQ0FBQztFQUNoRUUsc0JBQXNCLENBQUVVLElBQUksRUFBRUwsTUFBTyxDQUFDOztFQUV0QztFQUNBVCxDQUFDLEdBQUcsSUFBSU4sU0FBUyxDQUFFZSxNQUFPLENBQUM7RUFDM0JLLElBQUksR0FBRyxFQUFFO0VBQ1RBLElBQUksQ0FBQ0MsSUFBSSxDQUFFZixDQUFDLENBQUNFLFFBQVEsQ0FBRSxtQkFBbUIsRUFBRSxtQkFBb0IsQ0FBRSxDQUFDO0VBQ25FWSxJQUFJLENBQUNDLElBQUksQ0FBRWYsQ0FBQyxDQUFDRSxRQUFRLENBQUUsbUJBQW1CLEVBQUUsa0JBQW1CLENBQUUsQ0FBQztFQUNsRVksSUFBSSxDQUFDQyxJQUFJLENBQUVmLENBQUMsQ0FBQ0UsUUFBUSxDQUFFLGtCQUFrQixFQUFFLG1CQUFvQixDQUFFLENBQUM7RUFDbEVZLElBQUksQ0FBQ0MsSUFBSSxDQUFFZixDQUFDLENBQUNFLFFBQVEsQ0FBRSxrQkFBa0IsRUFBRSxrQkFBbUIsQ0FBRSxDQUFDO0VBQ2pFWSxJQUFJLENBQUNDLElBQUksQ0FBRWYsQ0FBQyxDQUFDRSxRQUFRLENBQUUsbUJBQW1CLEVBQUUsa0JBQW1CLENBQUUsQ0FBQztFQUNsRVksSUFBSSxDQUFDQyxJQUFJLENBQUVmLENBQUMsQ0FBQ0UsUUFBUSxDQUFFLGtCQUFrQixFQUFFLG1CQUFvQixDQUFFLENBQUM7RUFDbEVZLElBQUksQ0FBQ0MsSUFBSSxDQUFFZixDQUFDLENBQUNFLFFBQVEsQ0FBRSxvQkFBb0IsRUFBRSxtQkFBb0IsQ0FBRSxDQUFDO0VBQ3BFWSxJQUFJLENBQUNDLElBQUksQ0FBRWYsQ0FBQyxDQUFDRSxRQUFRLENBQUUsa0JBQWtCLEVBQUUsbUJBQW9CLENBQUUsQ0FBQztFQUNsRVksSUFBSSxDQUFDQyxJQUFJLENBQUVmLENBQUMsQ0FBQ0UsUUFBUSxDQUFFLGtCQUFrQixFQUFFLG1CQUFvQixDQUFFLENBQUM7RUFDbEVZLElBQUksQ0FBQ0MsSUFBSSxDQUFFZixDQUFDLENBQUNFLFFBQVEsQ0FBRSxtQkFBbUIsRUFBRSxtQkFBb0IsQ0FBRSxDQUFDO0VBQ25FWSxJQUFJLENBQUNDLElBQUksQ0FBRWYsQ0FBQyxDQUFDRSxRQUFRLENBQUUsbUJBQW1CLEVBQUUsbUJBQW9CLENBQUUsQ0FBQztFQUNuRVksSUFBSSxDQUFDQyxJQUFJLENBQUVmLENBQUMsQ0FBQ0UsUUFBUSxDQUFFLG1CQUFtQixFQUFFLG1CQUFvQixDQUFFLENBQUM7RUFDbkVZLElBQUksQ0FBQ0MsSUFBSSxDQUFFZixDQUFDLENBQUNFLFFBQVEsQ0FBRSxrQkFBa0IsRUFBRSxtQkFBb0IsQ0FBRSxDQUFDO0VBQ2xFWSxJQUFJLENBQUNDLElBQUksQ0FBRWYsQ0FBQyxDQUFDRSxRQUFRLENBQUUsbUJBQW1CLEVBQUUsbUJBQW9CLENBQUUsQ0FBQztFQUNuRVksSUFBSSxDQUFDQyxJQUFJLENBQUVmLENBQUMsQ0FBQ0UsUUFBUSxDQUFFLGtCQUFrQixFQUFFLG1CQUFvQixDQUFFLENBQUM7RUFDbEVZLElBQUksQ0FBQ0MsSUFBSSxDQUFFZixDQUFDLENBQUNFLFFBQVEsQ0FBRSxzQkFBc0IsRUFBRSxrQkFBbUIsQ0FBRSxDQUFDO0VBQ3JFWSxJQUFJLENBQUNDLElBQUksQ0FBRWYsQ0FBQyxDQUFDRSxRQUFRLENBQUUsbUJBQW1CLEVBQUUsa0JBQW1CLENBQUUsQ0FBQztFQUNsRVksSUFBSSxDQUFDQyxJQUFJLENBQUVmLENBQUMsQ0FBQ0UsUUFBUSxDQUFFLG1CQUFtQixFQUFFLG1CQUFvQixDQUFFLENBQUM7RUFDbkVZLElBQUksQ0FBQ0MsSUFBSSxDQUFFZixDQUFDLENBQUNFLFFBQVEsQ0FBRSxrQkFBa0IsRUFBRSxtQkFBb0IsQ0FBRSxDQUFDO0VBQ2xFWSxJQUFJLENBQUNDLElBQUksQ0FBRWYsQ0FBQyxDQUFDRSxRQUFRLENBQUUsb0JBQW9CLEVBQUUsa0JBQW1CLENBQUUsQ0FBQztFQUNuRVksSUFBSSxDQUFDQyxJQUFJLENBQUVmLENBQUMsQ0FBQ0UsUUFBUSxDQUFFLG1CQUFtQixFQUFFLG1CQUFvQixDQUFFLENBQUM7RUFDbkVZLElBQUksQ0FBQ0MsSUFBSSxDQUFFZixDQUFDLENBQUNFLFFBQVEsQ0FBRSxtQkFBbUIsRUFBRSxrQkFBbUIsQ0FBRSxDQUFDO0VBQ2xFWSxJQUFJLENBQUNDLElBQUksQ0FBRWYsQ0FBQyxDQUFDRSxRQUFRLENBQUUsbUJBQW1CLEVBQUUsa0JBQW1CLENBQUUsQ0FBQztFQUNsRVksSUFBSSxDQUFDQyxJQUFJLENBQUVmLENBQUMsQ0FBQ0UsUUFBUSxDQUFFLG1CQUFtQixFQUFFLGtCQUFtQixDQUFFLENBQUM7RUFDbEVZLElBQUksQ0FBQ0MsSUFBSSxDQUFFZixDQUFDLENBQUNFLFFBQVEsQ0FBRSxtQkFBbUIsRUFBRSxtQkFBb0IsQ0FBRSxDQUFDO0VBQ25FWSxJQUFJLENBQUNDLElBQUksQ0FBRWYsQ0FBQyxDQUFDRSxRQUFRLENBQUUsbUJBQW1CLEVBQUUsbUJBQW9CLENBQUUsQ0FBQztFQUNuRVksSUFBSSxDQUFDQyxJQUFJLENBQUVmLENBQUMsQ0FBQ0UsUUFBUSxDQUFFLG9CQUFvQixFQUFFLG1CQUFvQixDQUFFLENBQUM7RUFDcEVZLElBQUksQ0FBQ0MsSUFBSSxDQUFFZixDQUFDLENBQUNFLFFBQVEsQ0FBRSxtQkFBbUIsRUFBRSxtQkFBb0IsQ0FBRSxDQUFDO0VBQ25FWSxJQUFJLENBQUNDLElBQUksQ0FBRWYsQ0FBQyxDQUFDRSxRQUFRLENBQUUsa0JBQWtCLEVBQUUsbUJBQW9CLENBQUUsQ0FBQztFQUNsRVksSUFBSSxDQUFDQyxJQUFJLENBQUVmLENBQUMsQ0FBQ0UsUUFBUSxDQUFFLG1CQUFtQixFQUFFLGtCQUFtQixDQUFFLENBQUM7RUFDbEVZLElBQUksQ0FBQ0MsSUFBSSxDQUFFZixDQUFDLENBQUNFLFFBQVEsQ0FBRSxtQkFBbUIsRUFBRSxtQkFBb0IsQ0FBRSxDQUFDO0VBQ25FWSxJQUFJLENBQUNDLElBQUksQ0FBRWYsQ0FBQyxDQUFDRSxRQUFRLENBQUUsa0JBQWtCLEVBQUUsbUJBQW9CLENBQUUsQ0FBQztFQUNsRVksSUFBSSxDQUFDQyxJQUFJLENBQUVmLENBQUMsQ0FBQ0UsUUFBUSxDQUFFLHFCQUFxQixFQUFFLG1CQUFvQixDQUFFLENBQUM7RUFDckVZLElBQUksQ0FBQ0MsSUFBSSxDQUFFZixDQUFDLENBQUNFLFFBQVEsQ0FBRSxtQkFBbUIsRUFBRSxrQkFBbUIsQ0FBRSxDQUFDO0VBQ2xFWSxJQUFJLENBQUNDLElBQUksQ0FBRWYsQ0FBQyxDQUFDRSxRQUFRLENBQUUsb0JBQW9CLEVBQUUsaUJBQWtCLENBQUUsQ0FBQztFQUNsRUUsc0JBQXNCLENBQUVVLElBQUksRUFBRUwsTUFBTyxDQUFDOztFQUV0QztFQUNBLEtBQU0sSUFBSUYsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHTyxJQUFJLENBQUNOLE1BQU0sRUFBRUQsQ0FBQyxJQUFJLENBQUMsRUFBRztJQUN6QyxJQUFLTyxJQUFJLENBQUVQLENBQUMsQ0FBRSxFQUFHO01BQ2ZQLENBQUMsQ0FBQ2dCLFVBQVUsQ0FBRUYsSUFBSSxDQUFFUCxDQUFDLENBQUcsQ0FBQztNQUN6Qk8sSUFBSSxDQUFFUCxDQUFDLENBQUUsR0FBRyxJQUFJO0lBQ2xCO0VBQ0Y7O0VBRUE7RUFDQU8sSUFBSSxDQUFDQyxJQUFJLENBQUVmLENBQUMsQ0FBQ0UsUUFBUSxDQUFFLG1CQUFtQixFQUFFLGtCQUFtQixDQUFFLENBQUM7RUFDbEVZLElBQUksQ0FBQ0MsSUFBSSxDQUFFZixDQUFDLENBQUNFLFFBQVEsQ0FBRSxtQkFBbUIsRUFBRSxtQkFBb0IsQ0FBRSxDQUFDO0VBQ25FWSxJQUFJLENBQUNDLElBQUksQ0FBRWYsQ0FBQyxDQUFDRSxRQUFRLENBQUUsa0JBQWtCLEVBQUUsbUJBQW9CLENBQUUsQ0FBQztFQUNsRVksSUFBSSxDQUFDQyxJQUFJLENBQUVmLENBQUMsQ0FBQ0UsUUFBUSxDQUFFLG9CQUFvQixFQUFFLGtCQUFtQixDQUFFLENBQUM7RUFDbkVZLElBQUksQ0FBQ0MsSUFBSSxDQUFFZixDQUFDLENBQUNFLFFBQVEsQ0FBRSxtQkFBbUIsRUFBRSxtQkFBb0IsQ0FBRSxDQUFDO0VBQ25FWSxJQUFJLENBQUNDLElBQUksQ0FBRWYsQ0FBQyxDQUFDRSxRQUFRLENBQUUsbUJBQW1CLEVBQUUsa0JBQW1CLENBQUUsQ0FBQztFQUNsRVksSUFBSSxDQUFDQyxJQUFJLENBQUVmLENBQUMsQ0FBQ0UsUUFBUSxDQUFFLG1CQUFtQixFQUFFLGtCQUFtQixDQUFFLENBQUM7RUFDbEVZLElBQUksQ0FBQ0MsSUFBSSxDQUFFZixDQUFDLENBQUNFLFFBQVEsQ0FBRSxtQkFBbUIsRUFBRSxrQkFBbUIsQ0FBRSxDQUFDO0VBQ2xFWSxJQUFJLENBQUNDLElBQUksQ0FBRWYsQ0FBQyxDQUFDRSxRQUFRLENBQUUsbUJBQW1CLEVBQUUsbUJBQW9CLENBQUUsQ0FBQztFQUNuRVksSUFBSSxDQUFDQyxJQUFJLENBQUVmLENBQUMsQ0FBQ0UsUUFBUSxDQUFFLG1CQUFtQixFQUFFLG1CQUFvQixDQUFFLENBQUM7RUFDbkVZLElBQUksQ0FBQ0MsSUFBSSxDQUFFZixDQUFDLENBQUNFLFFBQVEsQ0FBRSxvQkFBb0IsRUFBRSxtQkFBb0IsQ0FBRSxDQUFDO0VBQ3BFWSxJQUFJLENBQUNDLElBQUksQ0FBRWYsQ0FBQyxDQUFDRSxRQUFRLENBQUUsbUJBQW1CLEVBQUUsbUJBQW9CLENBQUUsQ0FBQztFQUNuRVksSUFBSSxDQUFDQyxJQUFJLENBQUVmLENBQUMsQ0FBQ0UsUUFBUSxDQUFFLGtCQUFrQixFQUFFLG1CQUFvQixDQUFFLENBQUM7RUFDbEVZLElBQUksQ0FBQ0MsSUFBSSxDQUFFZixDQUFDLENBQUNFLFFBQVEsQ0FBRSxtQkFBbUIsRUFBRSxrQkFBbUIsQ0FBRSxDQUFDO0VBQ2xFWSxJQUFJLENBQUNDLElBQUksQ0FBRWYsQ0FBQyxDQUFDRSxRQUFRLENBQUUsbUJBQW1CLEVBQUUsbUJBQW9CLENBQUUsQ0FBQztFQUNuRVksSUFBSSxDQUFDQyxJQUFJLENBQUVmLENBQUMsQ0FBQ0UsUUFBUSxDQUFFLGtCQUFrQixFQUFFLG1CQUFvQixDQUFFLENBQUM7RUFDbEVZLElBQUksQ0FBQ0MsSUFBSSxDQUFFZixDQUFDLENBQUNFLFFBQVEsQ0FBRSxxQkFBcUIsRUFBRSxtQkFBb0IsQ0FBRSxDQUFDO0VBQ3JFWSxJQUFJLENBQUNDLElBQUksQ0FBRWYsQ0FBQyxDQUFDRSxRQUFRLENBQUUsbUJBQW1CLEVBQUUsa0JBQW1CLENBQUUsQ0FBQztFQUNsRVksSUFBSSxDQUFDQyxJQUFJLENBQUVmLENBQUMsQ0FBQ0UsUUFBUSxDQUFFLG9CQUFvQixFQUFFLGlCQUFrQixDQUFFLENBQUM7RUFFbEVFLHNCQUFzQixDQUFFVSxJQUFJLEVBQUVMLE1BQU8sQ0FBQzs7RUFFdEM7RUFDQSxLQUFNLElBQUlGLENBQUMsR0FBRyxDQUFDLEVBQUVBLENBQUMsR0FBR08sSUFBSSxDQUFDTixNQUFNLEVBQUVELENBQUMsRUFBRSxFQUFHO0lBQ3RDLElBQUtPLElBQUksQ0FBRVAsQ0FBQyxDQUFFLEVBQUc7TUFDZlAsQ0FBQyxDQUFDZ0IsVUFBVSxDQUFFRixJQUFJLENBQUVQLENBQUMsQ0FBRyxDQUFDO01BQ3pCTyxJQUFJLENBQUVQLENBQUMsQ0FBRSxHQUFHLElBQUk7SUFDbEI7RUFDRjs7RUFFQTtFQUNBLE1BQU1VLE9BQU8sR0FBR2pCLENBQUMsQ0FBQ0UsUUFBUSxDQUFFLENBQUMsRUFBRSxDQUFFLENBQUM7RUFDbENILE1BQU0sQ0FBQ0ksRUFBRSxDQUFFYyxPQUFPLEVBQUUsd0JBQXlCLENBQUM7QUFDaEQsQ0FBRSxDQUFDIn0=