// Copyright 2019-2023, University of Colorado Boulder

/**
 * GraphControlPanel is the base class for graph control panels. These panels contain controls that affect the graph.
 *
 * @author Brandon Li
 * @author Chris Malley (PixelZoom, Inc.)
 */

import merge from '../../../../phet-core/js/merge.js';
import { Text, VBox } from '../../../../scenery/js/imports.js';
import Panel from '../../../../sun/js/Panel.js';
import LorentzView from "./LorentzView.js";
export default class LorentzPanelView extends Panel {
  isPlaying = false;
  velocity = 0;
  aChecked = true;
  space_shuttle_x = 0;
  space_shuttle_x_ = 0;
  space_shuttle_t = 0;
  space_shuttle_t_ = 0;

  /**
   * @param {Node[]} children
   * @param {Object} [options]
   */
  constructor(options) {
    options = merge({
      cornerRadius: 5,
      xMargin: 6,
      yMargin: 8,
      stroke: 'rgb( 190, 190, 190 )',
      fill: 'rgb( 240, 240, 240 )',
      resize: true
    }, options);
    const fontSize = 18;
    const textSpeed0 = new Text("洛伦兹变换:", {
      fontSize: fontSize
    });
    const lv = new LorentzView({});
    const vBox = new VBox({
      spacing: 6,
      children: [textSpeed0, lv]
    });
    super(vBox, options);
  }

  /**
   * @public
   * @override
   */
  /*dispose() {
    assert && assert( false, 'GraphControlPanel is not intended to be disposed' );
  }*/
}

//relativity.register( 'ControlPanelView', ControlPanelView );
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtZXJnZSIsIlRleHQiLCJWQm94IiwiUGFuZWwiLCJMb3JlbnR6VmlldyIsIkxvcmVudHpQYW5lbFZpZXciLCJpc1BsYXlpbmciLCJ2ZWxvY2l0eSIsImFDaGVja2VkIiwic3BhY2Vfc2h1dHRsZV94Iiwic3BhY2Vfc2h1dHRsZV94XyIsInNwYWNlX3NodXR0bGVfdCIsInNwYWNlX3NodXR0bGVfdF8iLCJjb25zdHJ1Y3RvciIsIm9wdGlvbnMiLCJjb3JuZXJSYWRpdXMiLCJ4TWFyZ2luIiwieU1hcmdpbiIsInN0cm9rZSIsImZpbGwiLCJyZXNpemUiLCJmb250U2l6ZSIsInRleHRTcGVlZDAiLCJsdiIsInZCb3giLCJzcGFjaW5nIiwiY2hpbGRyZW4iXSwic291cmNlcyI6WyJMb3JlbnR6UGFuZWwudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTktMjAyMywgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogR3JhcGhDb250cm9sUGFuZWwgaXMgdGhlIGJhc2UgY2xhc3MgZm9yIGdyYXBoIGNvbnRyb2wgcGFuZWxzLiBUaGVzZSBwYW5lbHMgY29udGFpbiBjb250cm9scyB0aGF0IGFmZmVjdCB0aGUgZ3JhcGguXHJcbiAqXHJcbiAqIEBhdXRob3IgQnJhbmRvbiBMaVxyXG4gKiBAYXV0aG9yIENocmlzIE1hbGxleSAoUGl4ZWxab29tLCBJbmMuKVxyXG4gKi9cclxuXHJcbmltcG9ydCBtZXJnZSBmcm9tICcuLi8uLi8uLi8uLi9waGV0LWNvcmUvanMvbWVyZ2UuanMnO1xyXG5pbXBvcnQge0FsaWduQm94LCBIQm94LCBOb2RlLCBUZXh0LCBWQm94fSBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgUGFuZWwsIHtQYW5lbE9wdGlvbnN9IGZyb20gJy4uLy4uLy4uLy4uL3N1bi9qcy9QYW5lbC5qcyc7XHJcbmltcG9ydCBCb29sZWFuUHJvcGVydHkgZnJvbSBcIi4uLy4uLy4uLy4uL2F4b24vanMvQm9vbGVhblByb3BlcnR5LmpzXCI7XHJcbmltcG9ydCBNYXRoU3ltYm9sRm9udCBmcm9tIFwiLi4vLi4vLi4vLi4vc2NlbmVyeS1waGV0L2pzL01hdGhTeW1ib2xGb250LmpzXCI7XHJcbmltcG9ydCBOdW1iZXJQcm9wZXJ0eSBmcm9tIFwiLi4vLi4vLi4vLi4vYXhvbi9qcy9OdW1iZXJQcm9wZXJ0eS5qc1wiO1xyXG5pbXBvcnQgUmFuZ2UgZnJvbSBcIi4uLy4uLy4uLy4uL2RvdC9qcy9SYW5nZS5qc1wiO1xyXG5pbXBvcnQgUGxheVBhdXNlQnV0dG9uIGZyb20gXCIuLi8uLi8uLi8uLi9zY2VuZXJ5LXBoZXQvanMvYnV0dG9ucy9QbGF5UGF1c2VCdXR0b24uanNcIjtcclxuaW1wb3J0IFNsaWRlciBmcm9tIFwiLi4vLi4vLi4vLi4vc3VuL2pzL1NsaWRlci5qc1wiO1xyXG5pbXBvcnQgRGltZW5zaW9uMiBmcm9tIFwiLi4vLi4vLi4vLi4vZG90L2pzL0RpbWVuc2lvbjIuanNcIjtcclxuaW1wb3J0IExvcmVudHpWaWV3IGZyb20gXCIuL0xvcmVudHpWaWV3LmpzXCI7XHJcbmltcG9ydCBSZWxhdGl2aXR5Q29uc3RhbnRzIGZyb20gXCIuLi8uLi9jb21tb24vUmVsYXRpdml0eUNvbnN0YW50c1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTG9yZW50elBhbmVsVmlldyBleHRlbmRzIFBhbmVsIHtcclxuICBwdWJsaWMgaXNQbGF5aW5nOiBib29sZWFuID0gZmFsc2U7XHJcbiAgcHVibGljIHZlbG9jaXR5OiBudW1iZXI9MDtcclxuICBwdWJsaWMgYUNoZWNrZWQ6IGJvb2xlYW49dHJ1ZTtcclxuICBwdWJsaWMgc3BhY2Vfc2h1dHRsZV94PTBcclxuICBwdWJsaWMgc3BhY2Vfc2h1dHRsZV94Xz0wXHJcbiAgcHVibGljIHNwYWNlX3NodXR0bGVfdD0wXHJcbiAgcHVibGljIHNwYWNlX3NodXR0bGVfdF89MFxyXG5cclxuICAvKipcclxuICAgKiBAcGFyYW0ge05vZGVbXX0gY2hpbGRyZW5cclxuICAgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXHJcbiAgICovXHJcbiAgY29uc3RydWN0b3IoIG9wdGlvbnM6UGFuZWxPcHRpb25zICkge1xyXG5cclxuICAgIG9wdGlvbnMgPSBtZXJnZSgge1xyXG4gICAgICBjb3JuZXJSYWRpdXM6IDUsXHJcbiAgICAgIHhNYXJnaW46IDYsXHJcbiAgICAgIHlNYXJnaW46IDgsXHJcbiAgICAgIHN0cm9rZTogJ3JnYiggMTkwLCAxOTAsIDE5MCApJyxcclxuICAgICAgZmlsbDogJ3JnYiggMjQwLCAyNDAsIDI0MCApJyxcclxuICAgICAgcmVzaXplOiB0cnVlLFxyXG4gICAgfSwgb3B0aW9ucyApO1xyXG5cclxuICAgIGNvbnN0IGZvbnRTaXplID0gMThcclxuXHJcbiAgICBjb25zdCB0ZXh0U3BlZWQwID0gbmV3IFRleHQoIFwi5rSb5Lym5YW55Y+Y5o2iOlwiLCB7ICBmb250U2l6ZTogZm9udFNpemUgIH0gKTtcclxuICAgIGNvbnN0IGx2ID0gbmV3IExvcmVudHpWaWV3KHt9KVxyXG5cclxuICAgIGNvbnN0IHZCb3ggPSBuZXcgVkJveCh7XHJcbiAgICAgIHNwYWNpbmc6IDYsXHJcbiAgICAgIGNoaWxkcmVuOiBbIHRleHRTcGVlZDAsIGx2IF0sXHJcbiAgICB9KTtcclxuXHJcbiAgICBzdXBlcih2Qm94LCBvcHRpb25zKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBwdWJsaWNcclxuICAgKiBAb3ZlcnJpZGVcclxuICAgKi9cclxuICAvKmRpc3Bvc2UoKSB7XHJcbiAgICBhc3NlcnQgJiYgYXNzZXJ0KCBmYWxzZSwgJ0dyYXBoQ29udHJvbFBhbmVsIGlzIG5vdCBpbnRlbmRlZCB0byBiZSBkaXNwb3NlZCcgKTtcclxuICB9Ki9cclxufVxyXG5cclxuLy9yZWxhdGl2aXR5LnJlZ2lzdGVyKCAnQ29udHJvbFBhbmVsVmlldycsIENvbnRyb2xQYW5lbFZpZXcgKTsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxLQUFLLE1BQU0sbUNBQW1DO0FBQ3JELFNBQThCQyxJQUFJLEVBQUVDLElBQUksUUFBTyxtQ0FBbUM7QUFDbEYsT0FBT0MsS0FBSyxNQUFzQiw2QkFBNkI7QUFRL0QsT0FBT0MsV0FBVyxNQUFNLGtCQUFrQjtBQUcxQyxlQUFlLE1BQU1DLGdCQUFnQixTQUFTRixLQUFLLENBQUM7RUFDM0NHLFNBQVMsR0FBWSxLQUFLO0VBQzFCQyxRQUFRLEdBQVMsQ0FBQztFQUNsQkMsUUFBUSxHQUFVLElBQUk7RUFDdEJDLGVBQWUsR0FBQyxDQUFDO0VBQ2pCQyxnQkFBZ0IsR0FBQyxDQUFDO0VBQ2xCQyxlQUFlLEdBQUMsQ0FBQztFQUNqQkMsZ0JBQWdCLEdBQUMsQ0FBQzs7RUFFekI7QUFDRjtBQUNBO0FBQ0E7RUFDRUMsV0FBV0EsQ0FBRUMsT0FBb0IsRUFBRztJQUVsQ0EsT0FBTyxHQUFHZCxLQUFLLENBQUU7TUFDZmUsWUFBWSxFQUFFLENBQUM7TUFDZkMsT0FBTyxFQUFFLENBQUM7TUFDVkMsT0FBTyxFQUFFLENBQUM7TUFDVkMsTUFBTSxFQUFFLHNCQUFzQjtNQUM5QkMsSUFBSSxFQUFFLHNCQUFzQjtNQUM1QkMsTUFBTSxFQUFFO0lBQ1YsQ0FBQyxFQUFFTixPQUFRLENBQUM7SUFFWixNQUFNTyxRQUFRLEdBQUcsRUFBRTtJQUVuQixNQUFNQyxVQUFVLEdBQUcsSUFBSXJCLElBQUksQ0FBRSxRQUFRLEVBQUU7TUFBR29CLFFBQVEsRUFBRUE7SUFBVSxDQUFFLENBQUM7SUFDakUsTUFBTUUsRUFBRSxHQUFHLElBQUluQixXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFFOUIsTUFBTW9CLElBQUksR0FBRyxJQUFJdEIsSUFBSSxDQUFDO01BQ3BCdUIsT0FBTyxFQUFFLENBQUM7TUFDVkMsUUFBUSxFQUFFLENBQUVKLFVBQVUsRUFBRUMsRUFBRTtJQUM1QixDQUFDLENBQUM7SUFFRixLQUFLLENBQUNDLElBQUksRUFBRVYsT0FBTyxDQUFDO0VBQ3RCOztFQUVBO0FBQ0Y7QUFDQTtBQUNBO0VBQ0U7QUFDRjtBQUNBO0FBQ0E7O0FBRUEifQ==