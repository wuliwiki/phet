// Copyright 2023, University of Colorado Boulder

/**
 * TODO Describe this class and its responsibilities.
 *
 * @author Zijian Wang
 */

import { Image, Node } from '../../../../scenery/js/imports.js';
import relativity from '../../relativity.js';
import space_shuttle from '../../../images/space_shuttle_png.js';
import Matrix3 from "../../../../dot/js/Matrix3.js";
export default class PlaneView extends Node {
  //private plane: Plane;

  isRight = true;
  mat = new Matrix3();
  constructor() {
    super({
      //cursor: 'pointer'
    });
    //this.plane = new Plane();

    this.img = new Image(space_shuttle, {
      scale: 0.3
    });
    this.addChild(this.img);
    this.img.setCenterX(0);
    this.img.setCenterY(0);

    //this.setCenterX(0)
    //this.setCenterY(0)
    // Move the magnet by dragging it.
    /*
    this.addInputListener(new DragListener({
        //allowTouchSnag: true, // When dragging across it on a touch device, pick it up
        positionProperty: this.plane.positionProperty,
        transform: modelViewTransform
    }));
      this.plane.positionProperty.link( position => {
        this.translation = modelViewTransform.modelToViewPosition( position );
    } );
    */
  }

  flip() {
    this.scale(-1, 1);
    this.isRight = !this.isRight;
  }
  move() {
    //this.
  }
}
relativity.register('PlaneView', PlaneView);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJJbWFnZSIsIk5vZGUiLCJyZWxhdGl2aXR5Iiwic3BhY2Vfc2h1dHRsZSIsIk1hdHJpeDMiLCJQbGFuZVZpZXciLCJpc1JpZ2h0IiwibWF0IiwiY29uc3RydWN0b3IiLCJpbWciLCJzY2FsZSIsImFkZENoaWxkIiwic2V0Q2VudGVyWCIsInNldENlbnRlclkiLCJmbGlwIiwibW92ZSIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiUGxhbmVWaWV3LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIzLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBUT0RPIERlc2NyaWJlIHRoaXMgY2xhc3MgYW5kIGl0cyByZXNwb25zaWJpbGl0aWVzLlxyXG4gKlxyXG4gKiBAYXV0aG9yIFppamlhbiBXYW5nXHJcbiAqL1xyXG5cclxuaW1wb3J0IFZlY3RvcjIgZnJvbSAnLi4vLi4vLi4vLi4vZG90L2pzL1ZlY3RvcjIuanMnO1xyXG5pbXBvcnQge0RyYWdMaXN0ZW5lciwgSW1hZ2UsIE5vZGV9IGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XHJcbmltcG9ydCByZWxhdGl2aXR5IGZyb20gJy4uLy4uL3JlbGF0aXZpdHkuanMnO1xyXG5pbXBvcnQgc3BhY2Vfc2h1dHRsZSBmcm9tICcuLi8uLi8uLi9pbWFnZXMvc3BhY2Vfc2h1dHRsZV9wbmcuanMnO1xyXG5pbXBvcnQgUGxhbmUgZnJvbSBcIi4uL21vZGVsL1BsYW5lLmpzXCI7XHJcbmltcG9ydCBNYXRyaXgzIGZyb20gXCIuLi8uLi8uLi8uLi9kb3QvanMvTWF0cml4My5qc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGxhbmVWaWV3IGV4dGVuZHMgTm9kZSB7XHJcbiAgICAvL3ByaXZhdGUgcGxhbmU6IFBsYW5lO1xyXG4gICAgcHJpdmF0ZSBpbWdcclxuICAgIHB1YmxpYyBpc1JpZ2h0PXRydWU7XHJcbiAgICBwcml2YXRlIG1hdD1uZXcgTWF0cml4MygpO1xyXG5cclxuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBzdXBlcih7XHJcbiAgICAgICAgICAgIC8vY3Vyc29yOiAncG9pbnRlcidcclxuICAgICAgICB9KTtcclxuICAgICAgICAvL3RoaXMucGxhbmUgPSBuZXcgUGxhbmUoKTtcclxuXHJcbiAgICAgICAgdGhpcy5pbWcgPSBuZXcgSW1hZ2UoIHNwYWNlX3NodXR0bGUsIHtcclxuICAgICAgICAgICAgc2NhbGU6IDAuMyxcclxuICAgICAgICB9KVxyXG4gICAgICAgIHRoaXMuYWRkQ2hpbGQodGhpcy5pbWcpO1xyXG4gICAgICAgIHRoaXMuaW1nLnNldENlbnRlclgoMClcclxuICAgICAgICB0aGlzLmltZy5zZXRDZW50ZXJZKDApXHJcblxyXG4gICAgICAgIC8vdGhpcy5zZXRDZW50ZXJYKDApXHJcbiAgICAgICAgLy90aGlzLnNldENlbnRlclkoMClcclxuICAgICAgICAvLyBNb3ZlIHRoZSBtYWduZXQgYnkgZHJhZ2dpbmcgaXQuXHJcbiAgICAgICAgLypcclxuICAgICAgICB0aGlzLmFkZElucHV0TGlzdGVuZXIobmV3IERyYWdMaXN0ZW5lcih7XHJcbiAgICAgICAgICAgIC8vYWxsb3dUb3VjaFNuYWc6IHRydWUsIC8vIFdoZW4gZHJhZ2dpbmcgYWNyb3NzIGl0IG9uIGEgdG91Y2ggZGV2aWNlLCBwaWNrIGl0IHVwXHJcbiAgICAgICAgICAgIHBvc2l0aW9uUHJvcGVydHk6IHRoaXMucGxhbmUucG9zaXRpb25Qcm9wZXJ0eSxcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiBtb2RlbFZpZXdUcmFuc2Zvcm1cclxuICAgICAgICB9KSk7XHJcblxyXG4gICAgICAgIHRoaXMucGxhbmUucG9zaXRpb25Qcm9wZXJ0eS5saW5rKCBwb3NpdGlvbiA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMudHJhbnNsYXRpb24gPSBtb2RlbFZpZXdUcmFuc2Zvcm0ubW9kZWxUb1ZpZXdQb3NpdGlvbiggcG9zaXRpb24gKTtcclxuICAgICAgICB9ICk7XHJcbiAgICAgICAgKi9cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZmxpcCgpe1xyXG4gICAgICAgIHRoaXMuc2NhbGUoLTEsMSlcclxuICAgICAgICB0aGlzLmlzUmlnaHQgPSAhdGhpcy5pc1JpZ2h0O1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBtb3ZlKCl7XHJcbiAgICAgICAgLy90aGlzLlxyXG4gICAgfVxyXG59XHJcblxyXG5yZWxhdGl2aXR5LnJlZ2lzdGVyKCdQbGFuZVZpZXcnLCBQbGFuZVZpZXcpOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFHQSxTQUFzQkEsS0FBSyxFQUFFQyxJQUFJLFFBQU8sbUNBQW1DO0FBQzNFLE9BQU9DLFVBQVUsTUFBTSxxQkFBcUI7QUFDNUMsT0FBT0MsYUFBYSxNQUFNLHNDQUFzQztBQUVoRSxPQUFPQyxPQUFPLE1BQU0sK0JBQStCO0FBRW5ELGVBQWUsTUFBTUMsU0FBUyxTQUFTSixJQUFJLENBQUM7RUFDeEM7O0VBRU9LLE9BQU8sR0FBQyxJQUFJO0VBQ1hDLEdBQUcsR0FBQyxJQUFJSCxPQUFPLENBQUMsQ0FBQztFQUVsQkksV0FBV0EsQ0FBQSxFQUFHO0lBQ2pCLEtBQUssQ0FBQztNQUNGO0lBQUEsQ0FDSCxDQUFDO0lBQ0Y7O0lBRUEsSUFBSSxDQUFDQyxHQUFHLEdBQUcsSUFBSVQsS0FBSyxDQUFFRyxhQUFhLEVBQUU7TUFDakNPLEtBQUssRUFBRTtJQUNYLENBQUMsQ0FBQztJQUNGLElBQUksQ0FBQ0MsUUFBUSxDQUFDLElBQUksQ0FBQ0YsR0FBRyxDQUFDO0lBQ3ZCLElBQUksQ0FBQ0EsR0FBRyxDQUFDRyxVQUFVLENBQUMsQ0FBQyxDQUFDO0lBQ3RCLElBQUksQ0FBQ0gsR0FBRyxDQUFDSSxVQUFVLENBQUMsQ0FBQyxDQUFDOztJQUV0QjtJQUNBO0lBQ0E7SUFDQTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtFQUVJOztFQUVPQyxJQUFJQSxDQUFBLEVBQUU7SUFDVCxJQUFJLENBQUNKLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUM7SUFDaEIsSUFBSSxDQUFDSixPQUFPLEdBQUcsQ0FBQyxJQUFJLENBQUNBLE9BQU87RUFDaEM7RUFFT1MsSUFBSUEsQ0FBQSxFQUFFO0lBQ1Q7RUFBQTtBQUVSO0FBRUFiLFVBQVUsQ0FBQ2MsUUFBUSxDQUFDLFdBQVcsRUFBRVgsU0FBUyxDQUFDIn0=