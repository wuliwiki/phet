// Copyright 2023, University of Colorado Boulder

/**
 * TODO Describe this class and its responsibilities.
 *
 * @author Zijian Wang
 */

import { DragListener, Image, Node } from '../../../../scenery/js/imports.js';
import relativity from '../../relativity.js';
import plane_png from '../../../images/plane_png.js';
import Plane from "../model/Plane.js";
export default class PlaneView extends Node {
  constructor(position, modelViewTransform) {
    super({
      cursor: 'pointer'
    });
    this.plane = new Plane(position);
    this.addChild(new Image(plane_png, {
      centerX: position.x,
      centerY: position.y
    }));
    const scaleX = 0.2; //modelViewTransform.modelToViewDeltaX( barMagnet.size.width ) / this.width;
    const scaleY = 0.2; //modelViewTransform.modelToViewDeltaY( barMagnet.size.height ) / this.height;
    this.scale(scaleX, scaleY);

    // Move the magnet by dragging it.
    this.addInputListener(new DragListener({
      //allowTouchSnag: true, // When dragging across it on a touch device, pick it up
      positionProperty: this.plane.positionProperty,
      transform: modelViewTransform
    }));
    this.plane.positionProperty.link(position => {
      this.translation = modelViewTransform.modelToViewPosition(position);
    });
  }
  move() {
    //this.
  }
}
relativity.register('PlaneView', PlaneView);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJEcmFnTGlzdGVuZXIiLCJJbWFnZSIsIk5vZGUiLCJyZWxhdGl2aXR5IiwicGxhbmVfcG5nIiwiUGxhbmUiLCJQbGFuZVZpZXciLCJjb25zdHJ1Y3RvciIsInBvc2l0aW9uIiwibW9kZWxWaWV3VHJhbnNmb3JtIiwiY3Vyc29yIiwicGxhbmUiLCJhZGRDaGlsZCIsImNlbnRlclgiLCJ4IiwiY2VudGVyWSIsInkiLCJzY2FsZVgiLCJzY2FsZVkiLCJzY2FsZSIsImFkZElucHV0TGlzdGVuZXIiLCJwb3NpdGlvblByb3BlcnR5IiwidHJhbnNmb3JtIiwibGluayIsInRyYW5zbGF0aW9uIiwibW9kZWxUb1ZpZXdQb3NpdGlvbiIsIm1vdmUiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIlBsYW5lVmlldy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMywgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogVE9ETyBEZXNjcmliZSB0aGlzIGNsYXNzIGFuZCBpdHMgcmVzcG9uc2liaWxpdGllcy5cclxuICpcclxuICogQGF1dGhvciBaaWppYW4gV2FuZ1xyXG4gKi9cclxuXHJcbmltcG9ydCBWZWN0b3IyIGZyb20gJy4uLy4uLy4uLy4uL2RvdC9qcy9WZWN0b3IyLmpzJztcclxuaW1wb3J0IHtEcmFnTGlzdGVuZXIsIEltYWdlLCBOb2RlfSBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgcmVsYXRpdml0eSBmcm9tICcuLi8uLi9yZWxhdGl2aXR5LmpzJztcclxuaW1wb3J0IHBsYW5lX3BuZyBmcm9tICcuLi8uLi8uLi9pbWFnZXMvcGxhbmVfcG5nLmpzJztcclxuaW1wb3J0IFBsYW5lIGZyb20gXCIuLi9tb2RlbC9QbGFuZS5qc1wiO1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQbGFuZVZpZXcgZXh0ZW5kcyBOb2RlIHtcclxuICAgIHByaXZhdGUgcGxhbmU6IFBsYW5lO1xyXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKHBvc2l0aW9uOiBWZWN0b3IyLCBtb2RlbFZpZXdUcmFuc2Zvcm0pIHtcclxuXHJcbiAgICAgICAgc3VwZXIoe1xyXG4gICAgICAgICAgICBjdXJzb3I6ICdwb2ludGVyJ1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICB0aGlzLnBsYW5lID0gbmV3IFBsYW5lKHBvc2l0aW9uKTtcclxuXHJcbiAgICAgICAgdGhpcy5hZGRDaGlsZCggbmV3IEltYWdlKCBwbGFuZV9wbmcsIHtcclxuICAgICAgICAgICAgY2VudGVyWDogcG9zaXRpb24ueCxcclxuICAgICAgICAgICAgY2VudGVyWTogcG9zaXRpb24ueVxyXG4gICAgICAgIH0gKSApO1xyXG5cclxuXHJcbiAgICAgICAgY29uc3Qgc2NhbGVYID0gMC4yOy8vbW9kZWxWaWV3VHJhbnNmb3JtLm1vZGVsVG9WaWV3RGVsdGFYKCBiYXJNYWduZXQuc2l6ZS53aWR0aCApIC8gdGhpcy53aWR0aDtcclxuICAgICAgICBjb25zdCBzY2FsZVkgPSAwLjI7Ly9tb2RlbFZpZXdUcmFuc2Zvcm0ubW9kZWxUb1ZpZXdEZWx0YVkoIGJhck1hZ25ldC5zaXplLmhlaWdodCApIC8gdGhpcy5oZWlnaHQ7XHJcbiAgICAgICAgdGhpcy5zY2FsZSggc2NhbGVYLCBzY2FsZVkgKTtcclxuXHJcbiAgICAgICAgLy8gTW92ZSB0aGUgbWFnbmV0IGJ5IGRyYWdnaW5nIGl0LlxyXG4gICAgICAgIHRoaXMuYWRkSW5wdXRMaXN0ZW5lcihuZXcgRHJhZ0xpc3RlbmVyKHtcclxuICAgICAgICAgICAgLy9hbGxvd1RvdWNoU25hZzogdHJ1ZSwgLy8gV2hlbiBkcmFnZ2luZyBhY3Jvc3MgaXQgb24gYSB0b3VjaCBkZXZpY2UsIHBpY2sgaXQgdXBcclxuICAgICAgICAgICAgcG9zaXRpb25Qcm9wZXJ0eTogdGhpcy5wbGFuZS5wb3NpdGlvblByb3BlcnR5LFxyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IG1vZGVsVmlld1RyYW5zZm9ybVxyXG4gICAgICAgIH0pKTtcclxuXHJcbiAgICAgICAgdGhpcy5wbGFuZS5wb3NpdGlvblByb3BlcnR5LmxpbmsoIHBvc2l0aW9uID0+IHtcclxuICAgICAgICAgICAgdGhpcy50cmFuc2xhdGlvbiA9IG1vZGVsVmlld1RyYW5zZm9ybS5tb2RlbFRvVmlld1Bvc2l0aW9uKCBwb3NpdGlvbiApO1xyXG4gICAgICAgIH0gKTtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIG1vdmUoKXtcclxuICAgICAgICAvL3RoaXMuXHJcbiAgICB9XHJcbn1cclxuXHJcbnJlbGF0aXZpdHkucmVnaXN0ZXIoJ1BsYW5lVmlldycsIFBsYW5lVmlldyk7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUdBLFNBQVFBLFlBQVksRUFBRUMsS0FBSyxFQUFFQyxJQUFJLFFBQU8sbUNBQW1DO0FBQzNFLE9BQU9DLFVBQVUsTUFBTSxxQkFBcUI7QUFDNUMsT0FBT0MsU0FBUyxNQUFNLDhCQUE4QjtBQUNwRCxPQUFPQyxLQUFLLE1BQU0sbUJBQW1CO0FBQ3JDLGVBQWUsTUFBTUMsU0FBUyxTQUFTSixJQUFJLENBQUM7RUFFakNLLFdBQVdBLENBQUNDLFFBQWlCLEVBQUVDLGtCQUFrQixFQUFFO0lBRXRELEtBQUssQ0FBQztNQUNGQyxNQUFNLEVBQUU7SUFDWixDQUFDLENBQUM7SUFFRixJQUFJLENBQUNDLEtBQUssR0FBRyxJQUFJTixLQUFLLENBQUNHLFFBQVEsQ0FBQztJQUVoQyxJQUFJLENBQUNJLFFBQVEsQ0FBRSxJQUFJWCxLQUFLLENBQUVHLFNBQVMsRUFBRTtNQUNqQ1MsT0FBTyxFQUFFTCxRQUFRLENBQUNNLENBQUM7TUFDbkJDLE9BQU8sRUFBRVAsUUFBUSxDQUFDUTtJQUN0QixDQUFFLENBQUUsQ0FBQztJQUdMLE1BQU1DLE1BQU0sR0FBRyxHQUFHLENBQUM7SUFDbkIsTUFBTUMsTUFBTSxHQUFHLEdBQUcsQ0FBQztJQUNuQixJQUFJLENBQUNDLEtBQUssQ0FBRUYsTUFBTSxFQUFFQyxNQUFPLENBQUM7O0lBRTVCO0lBQ0EsSUFBSSxDQUFDRSxnQkFBZ0IsQ0FBQyxJQUFJcEIsWUFBWSxDQUFDO01BQ25DO01BQ0FxQixnQkFBZ0IsRUFBRSxJQUFJLENBQUNWLEtBQUssQ0FBQ1UsZ0JBQWdCO01BQzdDQyxTQUFTLEVBQUViO0lBQ2YsQ0FBQyxDQUFDLENBQUM7SUFFSCxJQUFJLENBQUNFLEtBQUssQ0FBQ1UsZ0JBQWdCLENBQUNFLElBQUksQ0FBRWYsUUFBUSxJQUFJO01BQzFDLElBQUksQ0FBQ2dCLFdBQVcsR0FBR2Ysa0JBQWtCLENBQUNnQixtQkFBbUIsQ0FBRWpCLFFBQVMsQ0FBQztJQUN6RSxDQUFFLENBQUM7RUFFUDtFQUVPa0IsSUFBSUEsQ0FBQSxFQUFFO0lBQ1Q7RUFBQTtBQUVSO0FBRUF2QixVQUFVLENBQUN3QixRQUFRLENBQUMsV0FBVyxFQUFFckIsU0FBUyxDQUFDIn0=