// Copyright 2020-2022, University of Colorado Boulder

/**
 * Constants used throughout this simulation.
 *
 * @author John Blanco
 * @author Saurabh Totey
 */

import Bounds2 from '../../../dot/js/Bounds2.js';
import Range from '../../../dot/js/Range.js';
import ScreenView from '../../../joist/js/ScreenView.js';
import StringUtils from '../../../phetcommon/js/util/StringUtils.js';
import numberLineDistance from '../numberLineDistance.js';
import NumberLineDistanceStrings from '../NumberLineDistanceStrings.js';
const xString = NumberLineDistanceStrings.symbol.x;
const yString = NumberLineDistanceStrings.symbol.y;
const BOX_INSET = 30;
const BOTTOM_BOX_WIDTH = 320;
const BOTTOM_BOX_HEIGHT = 70;
const SIDE_BOX_WIDTH = BOTTOM_BOX_HEIGHT;
const SIDE_BOX_HEIGHT = BOTTOM_BOX_WIDTH;
const VARIABLE_SUBSCRIPT_TEMPLATE = '{{variable}}<sub style=\'font-style:normal\'>{{subscript}}</sub>';
const NLDConstants = {
  NLD_LAYOUT_BOUNDS: ScreenView.DEFAULT_LAYOUT_BOUNDS,
  SCREEN_VIEW_X_MARGIN: 15,
  SCREEN_VIEW_Y_MARGIN: 15,
  GENERIC_NUMBER_LINE_RANGES: [new Range(-10, 10), new Range(-30, 30), new Range(-100, 100)],
  BOTTOM_BOX_BOUNDS: new Bounds2(ScreenView.DEFAULT_LAYOUT_BOUNDS.centerX - BOTTOM_BOX_WIDTH / 2, ScreenView.DEFAULT_LAYOUT_BOUNDS.maxY - BOTTOM_BOX_HEIGHT - BOX_INSET, ScreenView.DEFAULT_LAYOUT_BOUNDS.centerX + BOTTOM_BOX_WIDTH / 2, ScreenView.DEFAULT_LAYOUT_BOUNDS.maxY - BOX_INSET),
  SIDE_BOX_BOUNDS: new Bounds2(ScreenView.DEFAULT_LAYOUT_BOUNDS.minX + BOX_INSET, ScreenView.DEFAULT_LAYOUT_BOUNDS.centerY - SIDE_BOX_HEIGHT / 2, ScreenView.DEFAULT_LAYOUT_BOUNDS.minX + BOX_INSET + SIDE_BOX_WIDTH, ScreenView.DEFAULT_LAYOUT_BOUNDS.centerY + SIDE_BOX_HEIGHT / 2),
  X_1_STRING: StringUtils.fillIn(VARIABLE_SUBSCRIPT_TEMPLATE, {
    variable: xString,
    subscript: 1
  }),
  X_2_STRING: StringUtils.fillIn(VARIABLE_SUBSCRIPT_TEMPLATE, {
    variable: xString,
    subscript: 2
  }),
  Y_1_STRING: StringUtils.fillIn(VARIABLE_SUBSCRIPT_TEMPLATE, {
    variable: yString,
    subscript: 1
  }),
  Y_2_STRING: StringUtils.fillIn(VARIABLE_SUBSCRIPT_TEMPLATE, {
    variable: yString,
    subscript: 2
  })
};
numberLineDistance.register('NLDConstants', NLDConstants);
export default NLDConstants;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJCb3VuZHMyIiwiUmFuZ2UiLCJTY3JlZW5WaWV3IiwiU3RyaW5nVXRpbHMiLCJudW1iZXJMaW5lRGlzdGFuY2UiLCJOdW1iZXJMaW5lRGlzdGFuY2VTdHJpbmdzIiwieFN0cmluZyIsInN5bWJvbCIsIngiLCJ5U3RyaW5nIiwieSIsIkJPWF9JTlNFVCIsIkJPVFRPTV9CT1hfV0lEVEgiLCJCT1RUT01fQk9YX0hFSUdIVCIsIlNJREVfQk9YX1dJRFRIIiwiU0lERV9CT1hfSEVJR0hUIiwiVkFSSUFCTEVfU1VCU0NSSVBUX1RFTVBMQVRFIiwiTkxEQ29uc3RhbnRzIiwiTkxEX0xBWU9VVF9CT1VORFMiLCJERUZBVUxUX0xBWU9VVF9CT1VORFMiLCJTQ1JFRU5fVklFV19YX01BUkdJTiIsIlNDUkVFTl9WSUVXX1lfTUFSR0lOIiwiR0VORVJJQ19OVU1CRVJfTElORV9SQU5HRVMiLCJCT1RUT01fQk9YX0JPVU5EUyIsImNlbnRlclgiLCJtYXhZIiwiU0lERV9CT1hfQk9VTkRTIiwibWluWCIsImNlbnRlclkiLCJYXzFfU1RSSU5HIiwiZmlsbEluIiwidmFyaWFibGUiLCJzdWJzY3JpcHQiLCJYXzJfU1RSSU5HIiwiWV8xX1NUUklORyIsIllfMl9TVFJJTkciLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIk5MRENvbnN0YW50cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMC0yMDIyLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBDb25zdGFudHMgdXNlZCB0aHJvdWdob3V0IHRoaXMgc2ltdWxhdGlvbi5cclxuICpcclxuICogQGF1dGhvciBKb2huIEJsYW5jb1xyXG4gKiBAYXV0aG9yIFNhdXJhYmggVG90ZXlcclxuICovXHJcblxyXG5pbXBvcnQgQm91bmRzMiBmcm9tICcuLi8uLi8uLi9kb3QvanMvQm91bmRzMi5qcyc7XHJcbmltcG9ydCBSYW5nZSBmcm9tICcuLi8uLi8uLi9kb3QvanMvUmFuZ2UuanMnO1xyXG5pbXBvcnQgU2NyZWVuVmlldyBmcm9tICcuLi8uLi8uLi9qb2lzdC9qcy9TY3JlZW5WaWV3LmpzJztcclxuaW1wb3J0IFN0cmluZ1V0aWxzIGZyb20gJy4uLy4uLy4uL3BoZXRjb21tb24vanMvdXRpbC9TdHJpbmdVdGlscy5qcyc7XHJcbmltcG9ydCBudW1iZXJMaW5lRGlzdGFuY2UgZnJvbSAnLi4vbnVtYmVyTGluZURpc3RhbmNlLmpzJztcclxuaW1wb3J0IE51bWJlckxpbmVEaXN0YW5jZVN0cmluZ3MgZnJvbSAnLi4vTnVtYmVyTGluZURpc3RhbmNlU3RyaW5ncy5qcyc7XHJcblxyXG5jb25zdCB4U3RyaW5nID0gTnVtYmVyTGluZURpc3RhbmNlU3RyaW5ncy5zeW1ib2wueDtcclxuY29uc3QgeVN0cmluZyA9IE51bWJlckxpbmVEaXN0YW5jZVN0cmluZ3Muc3ltYm9sLnk7XHJcblxyXG5jb25zdCBCT1hfSU5TRVQgPSAzMDtcclxuY29uc3QgQk9UVE9NX0JPWF9XSURUSCA9IDMyMDtcclxuY29uc3QgQk9UVE9NX0JPWF9IRUlHSFQgPSA3MDtcclxuY29uc3QgU0lERV9CT1hfV0lEVEggPSBCT1RUT01fQk9YX0hFSUdIVDtcclxuY29uc3QgU0lERV9CT1hfSEVJR0hUID0gQk9UVE9NX0JPWF9XSURUSDtcclxuY29uc3QgVkFSSUFCTEVfU1VCU0NSSVBUX1RFTVBMQVRFID0gJ3t7dmFyaWFibGV9fTxzdWIgc3R5bGU9XFwnZm9udC1zdHlsZTpub3JtYWxcXCc+e3tzdWJzY3JpcHR9fTwvc3ViPic7XHJcblxyXG5jb25zdCBOTERDb25zdGFudHMgPSB7XHJcblxyXG4gIE5MRF9MQVlPVVRfQk9VTkRTOiBTY3JlZW5WaWV3LkRFRkFVTFRfTEFZT1VUX0JPVU5EUyxcclxuXHJcbiAgU0NSRUVOX1ZJRVdfWF9NQVJHSU46IDE1LFxyXG4gIFNDUkVFTl9WSUVXX1lfTUFSR0lOOiAxNSxcclxuXHJcbiAgR0VORVJJQ19OVU1CRVJfTElORV9SQU5HRVM6IFtcclxuICAgIG5ldyBSYW5nZSggLTEwLCAxMCApLFxyXG4gICAgbmV3IFJhbmdlKCAtMzAsIDMwICksXHJcbiAgICBuZXcgUmFuZ2UoIC0xMDAsIDEwMCApXHJcbiAgXSxcclxuXHJcbiAgQk9UVE9NX0JPWF9CT1VORFM6IG5ldyBCb3VuZHMyKFxyXG4gICAgU2NyZWVuVmlldy5ERUZBVUxUX0xBWU9VVF9CT1VORFMuY2VudGVyWCAtIEJPVFRPTV9CT1hfV0lEVEggLyAyLFxyXG4gICAgU2NyZWVuVmlldy5ERUZBVUxUX0xBWU9VVF9CT1VORFMubWF4WSAtIEJPVFRPTV9CT1hfSEVJR0hUIC0gQk9YX0lOU0VULFxyXG4gICAgU2NyZWVuVmlldy5ERUZBVUxUX0xBWU9VVF9CT1VORFMuY2VudGVyWCArIEJPVFRPTV9CT1hfV0lEVEggLyAyLFxyXG4gICAgU2NyZWVuVmlldy5ERUZBVUxUX0xBWU9VVF9CT1VORFMubWF4WSAtIEJPWF9JTlNFVFxyXG4gICksXHJcbiAgU0lERV9CT1hfQk9VTkRTOiBuZXcgQm91bmRzMihcclxuICAgIFNjcmVlblZpZXcuREVGQVVMVF9MQVlPVVRfQk9VTkRTLm1pblggKyBCT1hfSU5TRVQsXHJcbiAgICBTY3JlZW5WaWV3LkRFRkFVTFRfTEFZT1VUX0JPVU5EUy5jZW50ZXJZIC0gU0lERV9CT1hfSEVJR0hUIC8gMixcclxuICAgIFNjcmVlblZpZXcuREVGQVVMVF9MQVlPVVRfQk9VTkRTLm1pblggKyBCT1hfSU5TRVQgKyBTSURFX0JPWF9XSURUSCxcclxuICAgIFNjcmVlblZpZXcuREVGQVVMVF9MQVlPVVRfQk9VTkRTLmNlbnRlclkgKyBTSURFX0JPWF9IRUlHSFQgLyAyXHJcbiAgKSxcclxuXHJcbiAgWF8xX1NUUklORzogU3RyaW5nVXRpbHMuZmlsbEluKCBWQVJJQUJMRV9TVUJTQ1JJUFRfVEVNUExBVEUsIHsgdmFyaWFibGU6IHhTdHJpbmcsIHN1YnNjcmlwdDogMSB9ICksXHJcbiAgWF8yX1NUUklORzogU3RyaW5nVXRpbHMuZmlsbEluKCBWQVJJQUJMRV9TVUJTQ1JJUFRfVEVNUExBVEUsIHsgdmFyaWFibGU6IHhTdHJpbmcsIHN1YnNjcmlwdDogMiB9ICksXHJcbiAgWV8xX1NUUklORzogU3RyaW5nVXRpbHMuZmlsbEluKCBWQVJJQUJMRV9TVUJTQ1JJUFRfVEVNUExBVEUsIHsgdmFyaWFibGU6IHlTdHJpbmcsIHN1YnNjcmlwdDogMSB9ICksXHJcbiAgWV8yX1NUUklORzogU3RyaW5nVXRpbHMuZmlsbEluKCBWQVJJQUJMRV9TVUJTQ1JJUFRfVEVNUExBVEUsIHsgdmFyaWFibGU6IHlTdHJpbmcsIHN1YnNjcmlwdDogMiB9IClcclxufTtcclxuXHJcbm51bWJlckxpbmVEaXN0YW5jZS5yZWdpc3RlciggJ05MRENvbnN0YW50cycsIE5MRENvbnN0YW50cyApO1xyXG5leHBvcnQgZGVmYXVsdCBOTERDb25zdGFudHM7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLE9BQU8sTUFBTSw0QkFBNEI7QUFDaEQsT0FBT0MsS0FBSyxNQUFNLDBCQUEwQjtBQUM1QyxPQUFPQyxVQUFVLE1BQU0saUNBQWlDO0FBQ3hELE9BQU9DLFdBQVcsTUFBTSw0Q0FBNEM7QUFDcEUsT0FBT0Msa0JBQWtCLE1BQU0sMEJBQTBCO0FBQ3pELE9BQU9DLHlCQUF5QixNQUFNLGlDQUFpQztBQUV2RSxNQUFNQyxPQUFPLEdBQUdELHlCQUF5QixDQUFDRSxNQUFNLENBQUNDLENBQUM7QUFDbEQsTUFBTUMsT0FBTyxHQUFHSix5QkFBeUIsQ0FBQ0UsTUFBTSxDQUFDRyxDQUFDO0FBRWxELE1BQU1DLFNBQVMsR0FBRyxFQUFFO0FBQ3BCLE1BQU1DLGdCQUFnQixHQUFHLEdBQUc7QUFDNUIsTUFBTUMsaUJBQWlCLEdBQUcsRUFBRTtBQUM1QixNQUFNQyxjQUFjLEdBQUdELGlCQUFpQjtBQUN4QyxNQUFNRSxlQUFlLEdBQUdILGdCQUFnQjtBQUN4QyxNQUFNSSwyQkFBMkIsR0FBRyxrRUFBa0U7QUFFdEcsTUFBTUMsWUFBWSxHQUFHO0VBRW5CQyxpQkFBaUIsRUFBRWhCLFVBQVUsQ0FBQ2lCLHFCQUFxQjtFQUVuREMsb0JBQW9CLEVBQUUsRUFBRTtFQUN4QkMsb0JBQW9CLEVBQUUsRUFBRTtFQUV4QkMsMEJBQTBCLEVBQUUsQ0FDMUIsSUFBSXJCLEtBQUssQ0FBRSxDQUFDLEVBQUUsRUFBRSxFQUFHLENBQUMsRUFDcEIsSUFBSUEsS0FBSyxDQUFFLENBQUMsRUFBRSxFQUFFLEVBQUcsQ0FBQyxFQUNwQixJQUFJQSxLQUFLLENBQUUsQ0FBQyxHQUFHLEVBQUUsR0FBSSxDQUFDLENBQ3ZCO0VBRURzQixpQkFBaUIsRUFBRSxJQUFJdkIsT0FBTyxDQUM1QkUsVUFBVSxDQUFDaUIscUJBQXFCLENBQUNLLE9BQU8sR0FBR1osZ0JBQWdCLEdBQUcsQ0FBQyxFQUMvRFYsVUFBVSxDQUFDaUIscUJBQXFCLENBQUNNLElBQUksR0FBR1osaUJBQWlCLEdBQUdGLFNBQVMsRUFDckVULFVBQVUsQ0FBQ2lCLHFCQUFxQixDQUFDSyxPQUFPLEdBQUdaLGdCQUFnQixHQUFHLENBQUMsRUFDL0RWLFVBQVUsQ0FBQ2lCLHFCQUFxQixDQUFDTSxJQUFJLEdBQUdkLFNBQzFDLENBQUM7RUFDRGUsZUFBZSxFQUFFLElBQUkxQixPQUFPLENBQzFCRSxVQUFVLENBQUNpQixxQkFBcUIsQ0FBQ1EsSUFBSSxHQUFHaEIsU0FBUyxFQUNqRFQsVUFBVSxDQUFDaUIscUJBQXFCLENBQUNTLE9BQU8sR0FBR2IsZUFBZSxHQUFHLENBQUMsRUFDOURiLFVBQVUsQ0FBQ2lCLHFCQUFxQixDQUFDUSxJQUFJLEdBQUdoQixTQUFTLEdBQUdHLGNBQWMsRUFDbEVaLFVBQVUsQ0FBQ2lCLHFCQUFxQixDQUFDUyxPQUFPLEdBQUdiLGVBQWUsR0FBRyxDQUMvRCxDQUFDO0VBRURjLFVBQVUsRUFBRTFCLFdBQVcsQ0FBQzJCLE1BQU0sQ0FBRWQsMkJBQTJCLEVBQUU7SUFBRWUsUUFBUSxFQUFFekIsT0FBTztJQUFFMEIsU0FBUyxFQUFFO0VBQUUsQ0FBRSxDQUFDO0VBQ2xHQyxVQUFVLEVBQUU5QixXQUFXLENBQUMyQixNQUFNLENBQUVkLDJCQUEyQixFQUFFO0lBQUVlLFFBQVEsRUFBRXpCLE9BQU87SUFBRTBCLFNBQVMsRUFBRTtFQUFFLENBQUUsQ0FBQztFQUNsR0UsVUFBVSxFQUFFL0IsV0FBVyxDQUFDMkIsTUFBTSxDQUFFZCwyQkFBMkIsRUFBRTtJQUFFZSxRQUFRLEVBQUV0QixPQUFPO0lBQUV1QixTQUFTLEVBQUU7RUFBRSxDQUFFLENBQUM7RUFDbEdHLFVBQVUsRUFBRWhDLFdBQVcsQ0FBQzJCLE1BQU0sQ0FBRWQsMkJBQTJCLEVBQUU7SUFBRWUsUUFBUSxFQUFFdEIsT0FBTztJQUFFdUIsU0FBUyxFQUFFO0VBQUUsQ0FBRTtBQUNuRyxDQUFDO0FBRUQ1QixrQkFBa0IsQ0FBQ2dDLFFBQVEsQ0FBRSxjQUFjLEVBQUVuQixZQUFhLENBQUM7QUFDM0QsZUFBZUEsWUFBWSJ9