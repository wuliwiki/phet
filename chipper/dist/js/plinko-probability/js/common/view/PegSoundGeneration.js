// Copyright 2016-2021, University of Colorado Boulder

/**
 * Sound generator for the for when the balls hit the pegs.
 *
 * @author Denzell Barnett (Berea College)
 * @author Martin Veillette (Berea College)
 */

import Sound from '../../../../vibe/js/Sound.js';
import bonk1ForPlinko_mp3 from '../../../sounds/bonk1ForPlinko_mp3.js';
import bonk2ForPlinko_mp3 from '../../../sounds/bonk2ForPlinko_mp3.js';
import plinkoProbability from '../../plinkoProbability.js';
import PlinkoProbabilityConstants from '../PlinkoProbabilityConstants.js';
class PegSoundGeneration {
  /**
   * @param {Property.<boolean>} isSoundEnabledProperty
   */
  constructor(isSoundEnabledProperty) {
    // Audio for ball hitting pegs
    this.bonk1Sound = new Sound(bonk1ForPlinko_mp3); // @private
    this.bonk2Sound = new Sound(bonk2ForPlinko_mp3); // @private
    this.soundTimeElapsed = 0; // @private - number used to keep track of the last sound playing
    this.isSoundEnabledProperty = isSoundEnabledProperty; // @private
  }

  // @public
  reset() {
    this.soundTimeElapsed = 0;
  }

  /**
   * @param {number} dt - change in time
   * @public
   */
  step(dt) {
    this.soundTimeElapsed += dt;
  }

  /**
   * Play sound that depends on the direction of the ball
   *
   * @param {string} direction - acceptable values are 'left' and 'right'
   * @public
   */
  playBallHittingPegSound(direction) {
    assert && assert(direction === 'left' || direction === 'right', 'direction should be left or right');

    // play sound if the previous sound was played more than some elapsed time
    if (this.isSoundEnabledProperty.get() && this.soundTimeElapsed > PlinkoProbabilityConstants.SOUND_TIME_INTERVAL) {
      // will play sound based on ball's motion, left or right
      direction === 'left' ? this.bonk1Sound.play() : this.bonk2Sound.play();
      this.soundTimeElapsed = 0; // reset the time elapsed since last sound to zero
    }
  }
}

plinkoProbability.register('PegSoundGeneration', PegSoundGeneration);
export default PegSoundGeneration;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTb3VuZCIsImJvbmsxRm9yUGxpbmtvX21wMyIsImJvbmsyRm9yUGxpbmtvX21wMyIsInBsaW5rb1Byb2JhYmlsaXR5IiwiUGxpbmtvUHJvYmFiaWxpdHlDb25zdGFudHMiLCJQZWdTb3VuZEdlbmVyYXRpb24iLCJjb25zdHJ1Y3RvciIsImlzU291bmRFbmFibGVkUHJvcGVydHkiLCJib25rMVNvdW5kIiwiYm9uazJTb3VuZCIsInNvdW5kVGltZUVsYXBzZWQiLCJyZXNldCIsInN0ZXAiLCJkdCIsInBsYXlCYWxsSGl0dGluZ1BlZ1NvdW5kIiwiZGlyZWN0aW9uIiwiYXNzZXJ0IiwiZ2V0IiwiU09VTkRfVElNRV9JTlRFUlZBTCIsInBsYXkiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIlBlZ1NvdW5kR2VuZXJhdGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxNi0yMDIxLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBTb3VuZCBnZW5lcmF0b3IgZm9yIHRoZSBmb3Igd2hlbiB0aGUgYmFsbHMgaGl0IHRoZSBwZWdzLlxyXG4gKlxyXG4gKiBAYXV0aG9yIERlbnplbGwgQmFybmV0dCAoQmVyZWEgQ29sbGVnZSlcclxuICogQGF1dGhvciBNYXJ0aW4gVmVpbGxldHRlIChCZXJlYSBDb2xsZWdlKVxyXG4gKi9cclxuXHJcbmltcG9ydCBTb3VuZCBmcm9tICcuLi8uLi8uLi8uLi92aWJlL2pzL1NvdW5kLmpzJztcclxuaW1wb3J0IGJvbmsxRm9yUGxpbmtvX21wMyBmcm9tICcuLi8uLi8uLi9zb3VuZHMvYm9uazFGb3JQbGlua29fbXAzLmpzJztcclxuaW1wb3J0IGJvbmsyRm9yUGxpbmtvX21wMyBmcm9tICcuLi8uLi8uLi9zb3VuZHMvYm9uazJGb3JQbGlua29fbXAzLmpzJztcclxuaW1wb3J0IHBsaW5rb1Byb2JhYmlsaXR5IGZyb20gJy4uLy4uL3BsaW5rb1Byb2JhYmlsaXR5LmpzJztcclxuaW1wb3J0IFBsaW5rb1Byb2JhYmlsaXR5Q29uc3RhbnRzIGZyb20gJy4uL1BsaW5rb1Byb2JhYmlsaXR5Q29uc3RhbnRzLmpzJztcclxuXHJcbmNsYXNzIFBlZ1NvdW5kR2VuZXJhdGlvbiB7XHJcbiAgLyoqXHJcbiAgICogQHBhcmFtIHtQcm9wZXJ0eS48Ym9vbGVhbj59IGlzU291bmRFbmFibGVkUHJvcGVydHlcclxuICAgKi9cclxuICBjb25zdHJ1Y3RvciggaXNTb3VuZEVuYWJsZWRQcm9wZXJ0eSApIHtcclxuXHJcbiAgICAvLyBBdWRpbyBmb3IgYmFsbCBoaXR0aW5nIHBlZ3NcclxuICAgIHRoaXMuYm9uazFTb3VuZCA9IG5ldyBTb3VuZCggYm9uazFGb3JQbGlua29fbXAzICk7ICAvLyBAcHJpdmF0ZVxyXG4gICAgdGhpcy5ib25rMlNvdW5kID0gbmV3IFNvdW5kKCBib25rMkZvclBsaW5rb19tcDMgKTsgIC8vIEBwcml2YXRlXHJcbiAgICB0aGlzLnNvdW5kVGltZUVsYXBzZWQgPSAwOyAgLy8gQHByaXZhdGUgLSBudW1iZXIgdXNlZCB0byBrZWVwIHRyYWNrIG9mIHRoZSBsYXN0IHNvdW5kIHBsYXlpbmdcclxuICAgIHRoaXMuaXNTb3VuZEVuYWJsZWRQcm9wZXJ0eSA9IGlzU291bmRFbmFibGVkUHJvcGVydHk7IC8vIEBwcml2YXRlXHJcbiAgfVxyXG5cclxuXHJcbiAgLy8gQHB1YmxpY1xyXG4gIHJlc2V0KCkge1xyXG4gICAgdGhpcy5zb3VuZFRpbWVFbGFwc2VkID0gMDtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBkdCAtIGNoYW5nZSBpbiB0aW1lXHJcbiAgICogQHB1YmxpY1xyXG4gICAqL1xyXG4gIHN0ZXAoIGR0ICkge1xyXG4gICAgdGhpcy5zb3VuZFRpbWVFbGFwc2VkICs9IGR0O1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogUGxheSBzb3VuZCB0aGF0IGRlcGVuZHMgb24gdGhlIGRpcmVjdGlvbiBvZiB0aGUgYmFsbFxyXG4gICAqXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IGRpcmVjdGlvbiAtIGFjY2VwdGFibGUgdmFsdWVzIGFyZSAnbGVmdCcgYW5kICdyaWdodCdcclxuICAgKiBAcHVibGljXHJcbiAgICovXHJcbiAgcGxheUJhbGxIaXR0aW5nUGVnU291bmQoIGRpcmVjdGlvbiApIHtcclxuXHJcbiAgICBhc3NlcnQgJiYgYXNzZXJ0KCBkaXJlY3Rpb24gPT09ICdsZWZ0JyB8fCBkaXJlY3Rpb24gPT09ICdyaWdodCcsICdkaXJlY3Rpb24gc2hvdWxkIGJlIGxlZnQgb3IgcmlnaHQnICk7XHJcblxyXG4gICAgLy8gcGxheSBzb3VuZCBpZiB0aGUgcHJldmlvdXMgc291bmQgd2FzIHBsYXllZCBtb3JlIHRoYW4gc29tZSBlbGFwc2VkIHRpbWVcclxuICAgIGlmICggdGhpcy5pc1NvdW5kRW5hYmxlZFByb3BlcnR5LmdldCgpICYmICggdGhpcy5zb3VuZFRpbWVFbGFwc2VkID4gUGxpbmtvUHJvYmFiaWxpdHlDb25zdGFudHMuU09VTkRfVElNRV9JTlRFUlZBTCApICkge1xyXG5cclxuICAgICAgLy8gd2lsbCBwbGF5IHNvdW5kIGJhc2VkIG9uIGJhbGwncyBtb3Rpb24sIGxlZnQgb3IgcmlnaHRcclxuICAgICAgKCBkaXJlY3Rpb24gPT09ICdsZWZ0JyApID8gdGhpcy5ib25rMVNvdW5kLnBsYXkoKSA6IHRoaXMuYm9uazJTb3VuZC5wbGF5KCk7XHJcbiAgICAgIHRoaXMuc291bmRUaW1lRWxhcHNlZCA9IDA7IC8vIHJlc2V0IHRoZSB0aW1lIGVsYXBzZWQgc2luY2UgbGFzdCBzb3VuZCB0byB6ZXJvXHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5wbGlua29Qcm9iYWJpbGl0eS5yZWdpc3RlciggJ1BlZ1NvdW5kR2VuZXJhdGlvbicsIFBlZ1NvdW5kR2VuZXJhdGlvbiApO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgUGVnU291bmRHZW5lcmF0aW9uOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLEtBQUssTUFBTSw4QkFBOEI7QUFDaEQsT0FBT0Msa0JBQWtCLE1BQU0sdUNBQXVDO0FBQ3RFLE9BQU9DLGtCQUFrQixNQUFNLHVDQUF1QztBQUN0RSxPQUFPQyxpQkFBaUIsTUFBTSw0QkFBNEI7QUFDMUQsT0FBT0MsMEJBQTBCLE1BQU0sa0NBQWtDO0FBRXpFLE1BQU1DLGtCQUFrQixDQUFDO0VBQ3ZCO0FBQ0Y7QUFDQTtFQUNFQyxXQUFXQSxDQUFFQyxzQkFBc0IsRUFBRztJQUVwQztJQUNBLElBQUksQ0FBQ0MsVUFBVSxHQUFHLElBQUlSLEtBQUssQ0FBRUMsa0JBQW1CLENBQUMsQ0FBQyxDQUFFO0lBQ3BELElBQUksQ0FBQ1EsVUFBVSxHQUFHLElBQUlULEtBQUssQ0FBRUUsa0JBQW1CLENBQUMsQ0FBQyxDQUFFO0lBQ3BELElBQUksQ0FBQ1EsZ0JBQWdCLEdBQUcsQ0FBQyxDQUFDLENBQUU7SUFDNUIsSUFBSSxDQUFDSCxzQkFBc0IsR0FBR0Esc0JBQXNCLENBQUMsQ0FBQztFQUN4RDs7RUFHQTtFQUNBSSxLQUFLQSxDQUFBLEVBQUc7SUFDTixJQUFJLENBQUNELGdCQUFnQixHQUFHLENBQUM7RUFDM0I7O0VBRUE7QUFDRjtBQUNBO0FBQ0E7RUFDRUUsSUFBSUEsQ0FBRUMsRUFBRSxFQUFHO0lBQ1QsSUFBSSxDQUFDSCxnQkFBZ0IsSUFBSUcsRUFBRTtFQUM3Qjs7RUFFQTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7RUFDRUMsdUJBQXVCQSxDQUFFQyxTQUFTLEVBQUc7SUFFbkNDLE1BQU0sSUFBSUEsTUFBTSxDQUFFRCxTQUFTLEtBQUssTUFBTSxJQUFJQSxTQUFTLEtBQUssT0FBTyxFQUFFLG1DQUFvQyxDQUFDOztJQUV0RztJQUNBLElBQUssSUFBSSxDQUFDUixzQkFBc0IsQ0FBQ1UsR0FBRyxDQUFDLENBQUMsSUFBTSxJQUFJLENBQUNQLGdCQUFnQixHQUFHTiwwQkFBMEIsQ0FBQ2MsbUJBQXFCLEVBQUc7TUFFckg7TUFDRUgsU0FBUyxLQUFLLE1BQU0sR0FBSyxJQUFJLENBQUNQLFVBQVUsQ0FBQ1csSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUNWLFVBQVUsQ0FBQ1UsSUFBSSxDQUFDLENBQUM7TUFDMUUsSUFBSSxDQUFDVCxnQkFBZ0IsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUM3QjtFQUNGO0FBQ0Y7O0FBRUFQLGlCQUFpQixDQUFDaUIsUUFBUSxDQUFFLG9CQUFvQixFQUFFZixrQkFBbUIsQ0FBQztBQUV0RSxlQUFlQSxrQkFBa0IifQ==