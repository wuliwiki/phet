// Copyright 2016-2022, University of Colorado Boulder

/**
 * Pause button for stopping the sim.
 *
 * @author Sam Reid (PhET Interactive Simulations)
 * @author Martin Veillette
 */

import { Shape } from '../../../../kite/js/imports.js';
import merge from '../../../../phet-core/js/merge.js';
import { Path } from '../../../../scenery/js/imports.js';
import RoundPushButton from '../../../../sun/js/buttons/RoundPushButton.js';
import plinkoProbability from '../../plinkoProbability.js';
import PlinkoProbabilityConstants from '../PlinkoProbabilityConstants.js';
class PauseButton extends RoundPushButton {
  /**
   * @param {Object} [options]
   */
  constructor(options) {
    options = merge({
      radius: PlinkoProbabilityConstants.PLAY_PAUSE_BUTTON_RADIUS,
      baseColor: 'red',
      iconColor: 'black',
      buttonAppearanceStrategy: PlinkoProbabilityConstants.PLAY_PAUSE_BUTTON_APPEARANCE_STRATEGY
    }, options);

    // pause symbol is sized relative to the radius
    const barWidth = options.radius * 0.2;
    const barHeight = options.radius;
    const iconShape = new Shape().rect(0, 0, barWidth, barHeight).rect(2 * barWidth, 0, barWidth, barHeight);
    const iconNode = new Path(iconShape, {
      fill: options.iconColor
    });
    assert && assert(!options.content, 'PauseButton sets content');
    options.content = iconNode;
    super(options);
  }
}
plinkoProbability.register('PauseButton', PauseButton);
export default PauseButton;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTaGFwZSIsIm1lcmdlIiwiUGF0aCIsIlJvdW5kUHVzaEJ1dHRvbiIsInBsaW5rb1Byb2JhYmlsaXR5IiwiUGxpbmtvUHJvYmFiaWxpdHlDb25zdGFudHMiLCJQYXVzZUJ1dHRvbiIsImNvbnN0cnVjdG9yIiwib3B0aW9ucyIsInJhZGl1cyIsIlBMQVlfUEFVU0VfQlVUVE9OX1JBRElVUyIsImJhc2VDb2xvciIsImljb25Db2xvciIsImJ1dHRvbkFwcGVhcmFuY2VTdHJhdGVneSIsIlBMQVlfUEFVU0VfQlVUVE9OX0FQUEVBUkFOQ0VfU1RSQVRFR1kiLCJiYXJXaWR0aCIsImJhckhlaWdodCIsImljb25TaGFwZSIsInJlY3QiLCJpY29uTm9kZSIsImZpbGwiLCJhc3NlcnQiLCJjb250ZW50IiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJQYXVzZUJ1dHRvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxNi0yMDIyLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBQYXVzZSBidXR0b24gZm9yIHN0b3BwaW5nIHRoZSBzaW0uXHJcbiAqXHJcbiAqIEBhdXRob3IgU2FtIFJlaWQgKFBoRVQgSW50ZXJhY3RpdmUgU2ltdWxhdGlvbnMpXHJcbiAqIEBhdXRob3IgTWFydGluIFZlaWxsZXR0ZVxyXG4gKi9cclxuXHJcbmltcG9ydCB7IFNoYXBlIH0gZnJvbSAnLi4vLi4vLi4vLi4va2l0ZS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IG1lcmdlIGZyb20gJy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy9tZXJnZS5qcyc7XHJcbmltcG9ydCB7IFBhdGggfSBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgUm91bmRQdXNoQnV0dG9uIGZyb20gJy4uLy4uLy4uLy4uL3N1bi9qcy9idXR0b25zL1JvdW5kUHVzaEJ1dHRvbi5qcyc7XHJcbmltcG9ydCBwbGlua29Qcm9iYWJpbGl0eSBmcm9tICcuLi8uLi9wbGlua29Qcm9iYWJpbGl0eS5qcyc7XHJcbmltcG9ydCBQbGlua29Qcm9iYWJpbGl0eUNvbnN0YW50cyBmcm9tICcuLi9QbGlua29Qcm9iYWJpbGl0eUNvbnN0YW50cy5qcyc7XHJcblxyXG5jbGFzcyBQYXVzZUJ1dHRvbiBleHRlbmRzIFJvdW5kUHVzaEJ1dHRvbiB7XHJcblxyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc11cclxuICAgKi9cclxuICBjb25zdHJ1Y3Rvciggb3B0aW9ucyApIHtcclxuXHJcbiAgICBvcHRpb25zID0gbWVyZ2UoIHtcclxuICAgICAgcmFkaXVzOiBQbGlua29Qcm9iYWJpbGl0eUNvbnN0YW50cy5QTEFZX1BBVVNFX0JVVFRPTl9SQURJVVMsXHJcbiAgICAgIGJhc2VDb2xvcjogJ3JlZCcsXHJcbiAgICAgIGljb25Db2xvcjogJ2JsYWNrJyxcclxuICAgICAgYnV0dG9uQXBwZWFyYW5jZVN0cmF0ZWd5OiBQbGlua29Qcm9iYWJpbGl0eUNvbnN0YW50cy5QTEFZX1BBVVNFX0JVVFRPTl9BUFBFQVJBTkNFX1NUUkFURUdZXHJcbiAgICB9LCBvcHRpb25zICk7XHJcblxyXG4gICAgLy8gcGF1c2Ugc3ltYm9sIGlzIHNpemVkIHJlbGF0aXZlIHRvIHRoZSByYWRpdXNcclxuICAgIGNvbnN0IGJhcldpZHRoID0gb3B0aW9ucy5yYWRpdXMgKiAwLjI7XHJcbiAgICBjb25zdCBiYXJIZWlnaHQgPSBvcHRpb25zLnJhZGl1cztcclxuXHJcbiAgICBjb25zdCBpY29uU2hhcGUgPSBuZXcgU2hhcGUoKVxyXG4gICAgICAucmVjdCggMCwgMCwgYmFyV2lkdGgsIGJhckhlaWdodCApXHJcbiAgICAgIC5yZWN0KCAyICogYmFyV2lkdGgsIDAsIGJhcldpZHRoLCBiYXJIZWlnaHQgKTtcclxuXHJcbiAgICBjb25zdCBpY29uTm9kZSA9IG5ldyBQYXRoKCBpY29uU2hhcGUsIHtcclxuICAgICAgZmlsbDogb3B0aW9ucy5pY29uQ29sb3JcclxuICAgIH0gKTtcclxuXHJcbiAgICBhc3NlcnQgJiYgYXNzZXJ0KCAhb3B0aW9ucy5jb250ZW50LCAnUGF1c2VCdXR0b24gc2V0cyBjb250ZW50JyApO1xyXG4gICAgb3B0aW9ucy5jb250ZW50ID0gaWNvbk5vZGU7XHJcblxyXG4gICAgc3VwZXIoIG9wdGlvbnMgKTtcclxuICB9XHJcbn1cclxuXHJcbnBsaW5rb1Byb2JhYmlsaXR5LnJlZ2lzdGVyKCAnUGF1c2VCdXR0b24nLCBQYXVzZUJ1dHRvbiApO1xyXG5leHBvcnQgZGVmYXVsdCBQYXVzZUJ1dHRvbjsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxTQUFTQSxLQUFLLFFBQVEsZ0NBQWdDO0FBQ3RELE9BQU9DLEtBQUssTUFBTSxtQ0FBbUM7QUFDckQsU0FBU0MsSUFBSSxRQUFRLG1DQUFtQztBQUN4RCxPQUFPQyxlQUFlLE1BQU0sK0NBQStDO0FBQzNFLE9BQU9DLGlCQUFpQixNQUFNLDRCQUE0QjtBQUMxRCxPQUFPQywwQkFBMEIsTUFBTSxrQ0FBa0M7QUFFekUsTUFBTUMsV0FBVyxTQUFTSCxlQUFlLENBQUM7RUFFeEM7QUFDRjtBQUNBO0VBQ0VJLFdBQVdBLENBQUVDLE9BQU8sRUFBRztJQUVyQkEsT0FBTyxHQUFHUCxLQUFLLENBQUU7TUFDZlEsTUFBTSxFQUFFSiwwQkFBMEIsQ0FBQ0ssd0JBQXdCO01BQzNEQyxTQUFTLEVBQUUsS0FBSztNQUNoQkMsU0FBUyxFQUFFLE9BQU87TUFDbEJDLHdCQUF3QixFQUFFUiwwQkFBMEIsQ0FBQ1M7SUFDdkQsQ0FBQyxFQUFFTixPQUFRLENBQUM7O0lBRVo7SUFDQSxNQUFNTyxRQUFRLEdBQUdQLE9BQU8sQ0FBQ0MsTUFBTSxHQUFHLEdBQUc7SUFDckMsTUFBTU8sU0FBUyxHQUFHUixPQUFPLENBQUNDLE1BQU07SUFFaEMsTUFBTVEsU0FBUyxHQUFHLElBQUlqQixLQUFLLENBQUMsQ0FBQyxDQUMxQmtCLElBQUksQ0FBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFSCxRQUFRLEVBQUVDLFNBQVUsQ0FBQyxDQUNqQ0UsSUFBSSxDQUFFLENBQUMsR0FBR0gsUUFBUSxFQUFFLENBQUMsRUFBRUEsUUFBUSxFQUFFQyxTQUFVLENBQUM7SUFFL0MsTUFBTUcsUUFBUSxHQUFHLElBQUlqQixJQUFJLENBQUVlLFNBQVMsRUFBRTtNQUNwQ0csSUFBSSxFQUFFWixPQUFPLENBQUNJO0lBQ2hCLENBQUUsQ0FBQztJQUVIUyxNQUFNLElBQUlBLE1BQU0sQ0FBRSxDQUFDYixPQUFPLENBQUNjLE9BQU8sRUFBRSwwQkFBMkIsQ0FBQztJQUNoRWQsT0FBTyxDQUFDYyxPQUFPLEdBQUdILFFBQVE7SUFFMUIsS0FBSyxDQUFFWCxPQUFRLENBQUM7RUFDbEI7QUFDRjtBQUVBSixpQkFBaUIsQ0FBQ21CLFFBQVEsQ0FBRSxhQUFhLEVBQUVqQixXQUFZLENBQUM7QUFDeEQsZUFBZUEsV0FBVyJ9