// Copyright 2013-2022, University of Colorado Boulder

/**
 * Main entry point for the 'Fraction Matcher sim.
 *
 * @author Anton Ulyanov
 * @author Andrew Zelenkov (Mlearner)
 * @author Sam Reid (PhET Interactive Simulations)
 */

import MatchingGameModel from '../../../fractions-common/js/matching/model/MatchingGameModel.js';
import MatchingGameScreenView from '../../../fractions-common/js/matching/view/MatchingGameScreenView.js';
import Screen from '../../../joist/js/Screen.js';
import ScreenIcon from '../../../joist/js/ScreenIcon.js';
import merge from '../../../phet-core/js/merge.js';
import fractionMatcher from '../fractionMatcher.js';
import FractionMatcherStrings from '../FractionMatcherStrings.js';
class MixedNumbersScreen extends Screen {
  /**
   * @param {Tandem} tandem
   * @param {Object} [options]
   */
  constructor(tandem, options) {
    options = merge({
      name: FractionMatcherStrings.mixedNumbersTitleStringProperty,
      homeScreenIcon: new ScreenIcon(MatchingGameScreenView.createMixedHomeIcon(), {
        maxIconWidthProportion: 1,
        maxIconHeightProportion: 1
      }),
      navigationBarIcon: new ScreenIcon(MatchingGameScreenView.createMixedNavbarIcon(), {
        maxIconWidthProportion: 1,
        maxIconHeightProportion: 1
      }),
      tandem: tandem
    }, options);
    super(() => new MatchingGameModel(true), model => new MatchingGameScreenView(model), options);
  }
}
fractionMatcher.register('MixedNumbersScreen', MixedNumbersScreen);
export default MixedNumbersScreen;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJNYXRjaGluZ0dhbWVNb2RlbCIsIk1hdGNoaW5nR2FtZVNjcmVlblZpZXciLCJTY3JlZW4iLCJTY3JlZW5JY29uIiwibWVyZ2UiLCJmcmFjdGlvbk1hdGNoZXIiLCJGcmFjdGlvbk1hdGNoZXJTdHJpbmdzIiwiTWl4ZWROdW1iZXJzU2NyZWVuIiwiY29uc3RydWN0b3IiLCJ0YW5kZW0iLCJvcHRpb25zIiwibmFtZSIsIm1peGVkTnVtYmVyc1RpdGxlU3RyaW5nUHJvcGVydHkiLCJob21lU2NyZWVuSWNvbiIsImNyZWF0ZU1peGVkSG9tZUljb24iLCJtYXhJY29uV2lkdGhQcm9wb3J0aW9uIiwibWF4SWNvbkhlaWdodFByb3BvcnRpb24iLCJuYXZpZ2F0aW9uQmFySWNvbiIsImNyZWF0ZU1peGVkTmF2YmFySWNvbiIsIm1vZGVsIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJNaXhlZE51bWJlcnNTY3JlZW4uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTMtMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogTWFpbiBlbnRyeSBwb2ludCBmb3IgdGhlICdGcmFjdGlvbiBNYXRjaGVyIHNpbS5cclxuICpcclxuICogQGF1dGhvciBBbnRvbiBVbHlhbm92XHJcbiAqIEBhdXRob3IgQW5kcmV3IFplbGVua292IChNbGVhcm5lcilcclxuICogQGF1dGhvciBTYW0gUmVpZCAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcclxuICovXHJcblxyXG5pbXBvcnQgTWF0Y2hpbmdHYW1lTW9kZWwgZnJvbSAnLi4vLi4vLi4vZnJhY3Rpb25zLWNvbW1vbi9qcy9tYXRjaGluZy9tb2RlbC9NYXRjaGluZ0dhbWVNb2RlbC5qcyc7XHJcbmltcG9ydCBNYXRjaGluZ0dhbWVTY3JlZW5WaWV3IGZyb20gJy4uLy4uLy4uL2ZyYWN0aW9ucy1jb21tb24vanMvbWF0Y2hpbmcvdmlldy9NYXRjaGluZ0dhbWVTY3JlZW5WaWV3LmpzJztcclxuaW1wb3J0IFNjcmVlbiBmcm9tICcuLi8uLi8uLi9qb2lzdC9qcy9TY3JlZW4uanMnO1xyXG5pbXBvcnQgU2NyZWVuSWNvbiBmcm9tICcuLi8uLi8uLi9qb2lzdC9qcy9TY3JlZW5JY29uLmpzJztcclxuaW1wb3J0IG1lcmdlIGZyb20gJy4uLy4uLy4uL3BoZXQtY29yZS9qcy9tZXJnZS5qcyc7XHJcbmltcG9ydCBmcmFjdGlvbk1hdGNoZXIgZnJvbSAnLi4vZnJhY3Rpb25NYXRjaGVyLmpzJztcclxuaW1wb3J0IEZyYWN0aW9uTWF0Y2hlclN0cmluZ3MgZnJvbSAnLi4vRnJhY3Rpb25NYXRjaGVyU3RyaW5ncy5qcyc7XHJcblxyXG5jbGFzcyBNaXhlZE51bWJlcnNTY3JlZW4gZXh0ZW5kcyBTY3JlZW4ge1xyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSB7VGFuZGVtfSB0YW5kZW1cclxuICAgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXHJcbiAgICovXHJcbiAgY29uc3RydWN0b3IoIHRhbmRlbSwgb3B0aW9ucyApIHtcclxuICAgIG9wdGlvbnMgPSBtZXJnZSgge1xyXG4gICAgICBuYW1lOiBGcmFjdGlvbk1hdGNoZXJTdHJpbmdzLm1peGVkTnVtYmVyc1RpdGxlU3RyaW5nUHJvcGVydHksXHJcbiAgICAgIGhvbWVTY3JlZW5JY29uOiBuZXcgU2NyZWVuSWNvbiggTWF0Y2hpbmdHYW1lU2NyZWVuVmlldy5jcmVhdGVNaXhlZEhvbWVJY29uKCksIHtcclxuICAgICAgICBtYXhJY29uV2lkdGhQcm9wb3J0aW9uOiAxLFxyXG4gICAgICAgIG1heEljb25IZWlnaHRQcm9wb3J0aW9uOiAxXHJcbiAgICAgIH0gKSxcclxuICAgICAgbmF2aWdhdGlvbkJhckljb246IG5ldyBTY3JlZW5JY29uKCBNYXRjaGluZ0dhbWVTY3JlZW5WaWV3LmNyZWF0ZU1peGVkTmF2YmFySWNvbigpLCB7XHJcbiAgICAgICAgbWF4SWNvbldpZHRoUHJvcG9ydGlvbjogMSxcclxuICAgICAgICBtYXhJY29uSGVpZ2h0UHJvcG9ydGlvbjogMVxyXG4gICAgICB9ICksXHJcbiAgICAgIHRhbmRlbTogdGFuZGVtXHJcbiAgICB9LCBvcHRpb25zICk7XHJcblxyXG4gICAgc3VwZXIoICgpID0+IG5ldyBNYXRjaGluZ0dhbWVNb2RlbCggdHJ1ZSApLFxyXG4gICAgICBtb2RlbCA9PiBuZXcgTWF0Y2hpbmdHYW1lU2NyZWVuVmlldyggbW9kZWwgKSxcclxuICAgICAgb3B0aW9ucyApO1xyXG4gIH1cclxufVxyXG5cclxuZnJhY3Rpb25NYXRjaGVyLnJlZ2lzdGVyKCAnTWl4ZWROdW1iZXJzU2NyZWVuJywgTWl4ZWROdW1iZXJzU2NyZWVuICk7XHJcbmV4cG9ydCBkZWZhdWx0IE1peGVkTnVtYmVyc1NjcmVlbjsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLGlCQUFpQixNQUFNLGtFQUFrRTtBQUNoRyxPQUFPQyxzQkFBc0IsTUFBTSxzRUFBc0U7QUFDekcsT0FBT0MsTUFBTSxNQUFNLDZCQUE2QjtBQUNoRCxPQUFPQyxVQUFVLE1BQU0saUNBQWlDO0FBQ3hELE9BQU9DLEtBQUssTUFBTSxnQ0FBZ0M7QUFDbEQsT0FBT0MsZUFBZSxNQUFNLHVCQUF1QjtBQUNuRCxPQUFPQyxzQkFBc0IsTUFBTSw4QkFBOEI7QUFFakUsTUFBTUMsa0JBQWtCLFNBQVNMLE1BQU0sQ0FBQztFQUN0QztBQUNGO0FBQ0E7QUFDQTtFQUNFTSxXQUFXQSxDQUFFQyxNQUFNLEVBQUVDLE9BQU8sRUFBRztJQUM3QkEsT0FBTyxHQUFHTixLQUFLLENBQUU7TUFDZk8sSUFBSSxFQUFFTCxzQkFBc0IsQ0FBQ00sK0JBQStCO01BQzVEQyxjQUFjLEVBQUUsSUFBSVYsVUFBVSxDQUFFRixzQkFBc0IsQ0FBQ2EsbUJBQW1CLENBQUMsQ0FBQyxFQUFFO1FBQzVFQyxzQkFBc0IsRUFBRSxDQUFDO1FBQ3pCQyx1QkFBdUIsRUFBRTtNQUMzQixDQUFFLENBQUM7TUFDSEMsaUJBQWlCLEVBQUUsSUFBSWQsVUFBVSxDQUFFRixzQkFBc0IsQ0FBQ2lCLHFCQUFxQixDQUFDLENBQUMsRUFBRTtRQUNqRkgsc0JBQXNCLEVBQUUsQ0FBQztRQUN6QkMsdUJBQXVCLEVBQUU7TUFDM0IsQ0FBRSxDQUFDO01BQ0hQLE1BQU0sRUFBRUE7SUFDVixDQUFDLEVBQUVDLE9BQVEsQ0FBQztJQUVaLEtBQUssQ0FBRSxNQUFNLElBQUlWLGlCQUFpQixDQUFFLElBQUssQ0FBQyxFQUN4Q21CLEtBQUssSUFBSSxJQUFJbEIsc0JBQXNCLENBQUVrQixLQUFNLENBQUMsRUFDNUNULE9BQVEsQ0FBQztFQUNiO0FBQ0Y7QUFFQUwsZUFBZSxDQUFDZSxRQUFRLENBQUUsb0JBQW9CLEVBQUViLGtCQUFtQixDQUFDO0FBQ3BFLGVBQWVBLGtCQUFrQiJ9