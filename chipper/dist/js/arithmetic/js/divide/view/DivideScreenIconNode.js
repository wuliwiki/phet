// Copyright 2014-2022, University of Colorado Boulder

/**
 * Icon node for 'Divide' screen.
 *
 * @author Andrey Zelenkov (MLearner)
 * @author John Blanco (MLearner)
 */

import { Circle, Line, Rectangle } from '../../../../scenery/js/imports.js';
import arithmetic from '../../arithmetic.js';
import ArithmeticConstants from '../../common/ArithmeticConstants.js';

// constants
const ICON_SIZE = ArithmeticConstants.SCREEN_ICON_SIZE;
const SYMBOL_COLOR = '#FFF31E';
const CIRCLE_RADIUS = 30; // Empirically determined

class DivideScreenIconNode extends Rectangle {
  /**
   */
  constructor() {
    // create the background
    super(0, 0, ICON_SIZE.width, ICON_SIZE.height, {
      fill: ArithmeticConstants.ICON_BACKGROUND_COLOR
    });

    // Create and add the divide symbol.  We are doing our own, since the Unicode one doesn't look very good.
    this.addChild(new Line(0, 0, ICON_SIZE.width * 0.4, 0, {
      stroke: SYMBOL_COLOR,
      lineWidth: 33,
      // empirically determined
      center: this.center
    }));
    this.addChild(new Circle(CIRCLE_RADIUS, {
      fill: SYMBOL_COLOR,
      centerX: ICON_SIZE.width / 2,
      centerY: ICON_SIZE.height * 0.3
    }));
    this.addChild(new Circle(CIRCLE_RADIUS, {
      fill: SYMBOL_COLOR,
      centerX: ICON_SIZE.width / 2,
      centerY: ICON_SIZE.height * 0.7
    }));
  }
}
arithmetic.register('DivideScreenIconNode', DivideScreenIconNode);
export default DivideScreenIconNode;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJDaXJjbGUiLCJMaW5lIiwiUmVjdGFuZ2xlIiwiYXJpdGhtZXRpYyIsIkFyaXRobWV0aWNDb25zdGFudHMiLCJJQ09OX1NJWkUiLCJTQ1JFRU5fSUNPTl9TSVpFIiwiU1lNQk9MX0NPTE9SIiwiQ0lSQ0xFX1JBRElVUyIsIkRpdmlkZVNjcmVlbkljb25Ob2RlIiwiY29uc3RydWN0b3IiLCJ3aWR0aCIsImhlaWdodCIsImZpbGwiLCJJQ09OX0JBQ0tHUk9VTkRfQ09MT1IiLCJhZGRDaGlsZCIsInN0cm9rZSIsImxpbmVXaWR0aCIsImNlbnRlciIsImNlbnRlclgiLCJjZW50ZXJZIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJEaXZpZGVTY3JlZW5JY29uTm9kZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxNC0yMDIyLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBJY29uIG5vZGUgZm9yICdEaXZpZGUnIHNjcmVlbi5cclxuICpcclxuICogQGF1dGhvciBBbmRyZXkgWmVsZW5rb3YgKE1MZWFybmVyKVxyXG4gKiBAYXV0aG9yIEpvaG4gQmxhbmNvIChNTGVhcm5lcilcclxuICovXHJcblxyXG5pbXBvcnQgeyBDaXJjbGUsIExpbmUsIFJlY3RhbmdsZSB9IGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XHJcbmltcG9ydCBhcml0aG1ldGljIGZyb20gJy4uLy4uL2FyaXRobWV0aWMuanMnO1xyXG5pbXBvcnQgQXJpdGhtZXRpY0NvbnN0YW50cyBmcm9tICcuLi8uLi9jb21tb24vQXJpdGhtZXRpY0NvbnN0YW50cy5qcyc7XHJcblxyXG4vLyBjb25zdGFudHNcclxuY29uc3QgSUNPTl9TSVpFID0gQXJpdGhtZXRpY0NvbnN0YW50cy5TQ1JFRU5fSUNPTl9TSVpFO1xyXG5jb25zdCBTWU1CT0xfQ09MT1IgPSAnI0ZGRjMxRSc7XHJcbmNvbnN0IENJUkNMRV9SQURJVVMgPSAzMDsgLy8gRW1waXJpY2FsbHkgZGV0ZXJtaW5lZFxyXG5cclxuY2xhc3MgRGl2aWRlU2NyZWVuSWNvbk5vZGUgZXh0ZW5kcyBSZWN0YW5nbGUge1xyXG5cclxuICAvKipcclxuICAgKi9cclxuICBjb25zdHJ1Y3RvcigpIHtcclxuXHJcbiAgICAvLyBjcmVhdGUgdGhlIGJhY2tncm91bmRcclxuICAgIHN1cGVyKCAwLCAwLCBJQ09OX1NJWkUud2lkdGgsIElDT05fU0laRS5oZWlnaHQsIHsgZmlsbDogQXJpdGhtZXRpY0NvbnN0YW50cy5JQ09OX0JBQ0tHUk9VTkRfQ09MT1IgfSApO1xyXG5cclxuICAgIC8vIENyZWF0ZSBhbmQgYWRkIHRoZSBkaXZpZGUgc3ltYm9sLiAgV2UgYXJlIGRvaW5nIG91ciBvd24sIHNpbmNlIHRoZSBVbmljb2RlIG9uZSBkb2Vzbid0IGxvb2sgdmVyeSBnb29kLlxyXG4gICAgdGhpcy5hZGRDaGlsZCggbmV3IExpbmUoIDAsIDAsIElDT05fU0laRS53aWR0aCAqIDAuNCwgMCwge1xyXG4gICAgICBzdHJva2U6IFNZTUJPTF9DT0xPUixcclxuICAgICAgbGluZVdpZHRoOiAzMywgLy8gZW1waXJpY2FsbHkgZGV0ZXJtaW5lZFxyXG4gICAgICBjZW50ZXI6IHRoaXMuY2VudGVyXHJcbiAgICB9ICkgKTtcclxuICAgIHRoaXMuYWRkQ2hpbGQoIG5ldyBDaXJjbGUoIENJUkNMRV9SQURJVVMsIHtcclxuICAgICAgZmlsbDogU1lNQk9MX0NPTE9SLFxyXG4gICAgICBjZW50ZXJYOiBJQ09OX1NJWkUud2lkdGggLyAyLFxyXG4gICAgICBjZW50ZXJZOiBJQ09OX1NJWkUuaGVpZ2h0ICogMC4zXHJcbiAgICB9ICkgKTtcclxuICAgIHRoaXMuYWRkQ2hpbGQoIG5ldyBDaXJjbGUoIENJUkNMRV9SQURJVVMsIHtcclxuICAgICAgZmlsbDogU1lNQk9MX0NPTE9SLFxyXG4gICAgICBjZW50ZXJYOiBJQ09OX1NJWkUud2lkdGggLyAyLFxyXG4gICAgICBjZW50ZXJZOiBJQ09OX1NJWkUuaGVpZ2h0ICogMC43XHJcbiAgICB9ICkgKTtcclxuICB9XHJcbn1cclxuXHJcbmFyaXRobWV0aWMucmVnaXN0ZXIoICdEaXZpZGVTY3JlZW5JY29uTm9kZScsIERpdmlkZVNjcmVlbkljb25Ob2RlICk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBEaXZpZGVTY3JlZW5JY29uTm9kZTsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxTQUFTQSxNQUFNLEVBQUVDLElBQUksRUFBRUMsU0FBUyxRQUFRLG1DQUFtQztBQUMzRSxPQUFPQyxVQUFVLE1BQU0scUJBQXFCO0FBQzVDLE9BQU9DLG1CQUFtQixNQUFNLHFDQUFxQzs7QUFFckU7QUFDQSxNQUFNQyxTQUFTLEdBQUdELG1CQUFtQixDQUFDRSxnQkFBZ0I7QUFDdEQsTUFBTUMsWUFBWSxHQUFHLFNBQVM7QUFDOUIsTUFBTUMsYUFBYSxHQUFHLEVBQUUsQ0FBQyxDQUFDOztBQUUxQixNQUFNQyxvQkFBb0IsU0FBU1AsU0FBUyxDQUFDO0VBRTNDO0FBQ0Y7RUFDRVEsV0FBV0EsQ0FBQSxFQUFHO0lBRVo7SUFDQSxLQUFLLENBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRUwsU0FBUyxDQUFDTSxLQUFLLEVBQUVOLFNBQVMsQ0FBQ08sTUFBTSxFQUFFO01BQUVDLElBQUksRUFBRVQsbUJBQW1CLENBQUNVO0lBQXNCLENBQUUsQ0FBQzs7SUFFckc7SUFDQSxJQUFJLENBQUNDLFFBQVEsQ0FBRSxJQUFJZCxJQUFJLENBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRUksU0FBUyxDQUFDTSxLQUFLLEdBQUcsR0FBRyxFQUFFLENBQUMsRUFBRTtNQUN2REssTUFBTSxFQUFFVCxZQUFZO01BQ3BCVSxTQUFTLEVBQUUsRUFBRTtNQUFFO01BQ2ZDLE1BQU0sRUFBRSxJQUFJLENBQUNBO0lBQ2YsQ0FBRSxDQUFFLENBQUM7SUFDTCxJQUFJLENBQUNILFFBQVEsQ0FBRSxJQUFJZixNQUFNLENBQUVRLGFBQWEsRUFBRTtNQUN4Q0ssSUFBSSxFQUFFTixZQUFZO01BQ2xCWSxPQUFPLEVBQUVkLFNBQVMsQ0FBQ00sS0FBSyxHQUFHLENBQUM7TUFDNUJTLE9BQU8sRUFBRWYsU0FBUyxDQUFDTyxNQUFNLEdBQUc7SUFDOUIsQ0FBRSxDQUFFLENBQUM7SUFDTCxJQUFJLENBQUNHLFFBQVEsQ0FBRSxJQUFJZixNQUFNLENBQUVRLGFBQWEsRUFBRTtNQUN4Q0ssSUFBSSxFQUFFTixZQUFZO01BQ2xCWSxPQUFPLEVBQUVkLFNBQVMsQ0FBQ00sS0FBSyxHQUFHLENBQUM7TUFDNUJTLE9BQU8sRUFBRWYsU0FBUyxDQUFDTyxNQUFNLEdBQUc7SUFDOUIsQ0FBRSxDQUFFLENBQUM7RUFDUDtBQUNGO0FBRUFULFVBQVUsQ0FBQ2tCLFFBQVEsQ0FBRSxzQkFBc0IsRUFBRVosb0JBQXFCLENBQUM7QUFFbkUsZUFBZUEsb0JBQW9CIn0=