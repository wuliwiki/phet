// Copyright 2014-2022, University of Colorado Boulder

/**
 * Icon node for 'Multiply' screen.
 *
 * @author Andrey Zelenkov (MLearner)
 * @author John Blanco (MLearner)
 */

import { Line, Rectangle } from '../../../../scenery/js/imports.js';
import arithmetic from '../../arithmetic.js';
import ArithmeticConstants from '../../common/ArithmeticConstants.js';

// constants
const ICON_SIZE = ArithmeticConstants.SCREEN_ICON_SIZE;
const SYMBOL_COLOR = '#FFF31E';
const LINE_WIDTH = 33; // empirically determined

class MultiplyScreenIconNode extends Rectangle {
  /**
   */
  constructor() {
    // create the background
    super(0, 0, ICON_SIZE.width, ICON_SIZE.height, {
      fill: ArithmeticConstants.ICON_BACKGROUND_COLOR
    });

    // Add the multiply symbol.  Create our own rather than use the Unicode char, since this gives us more control.
    const symbolWidth = ICON_SIZE.width * 0.3;
    this.addChild(new Line(0, 0, symbolWidth, symbolWidth, {
      stroke: SYMBOL_COLOR,
      lineWidth: LINE_WIDTH,
      center: this.center
    }));
    this.addChild(new Line(symbolWidth, 0, 0, symbolWidth, {
      stroke: SYMBOL_COLOR,
      lineWidth: LINE_WIDTH,
      // empirically determined
      center: this.center
    }));
  }
}
arithmetic.register('MultiplyScreenIconNode', MultiplyScreenIconNode);
export default MultiplyScreenIconNode;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJMaW5lIiwiUmVjdGFuZ2xlIiwiYXJpdGhtZXRpYyIsIkFyaXRobWV0aWNDb25zdGFudHMiLCJJQ09OX1NJWkUiLCJTQ1JFRU5fSUNPTl9TSVpFIiwiU1lNQk9MX0NPTE9SIiwiTElORV9XSURUSCIsIk11bHRpcGx5U2NyZWVuSWNvbk5vZGUiLCJjb25zdHJ1Y3RvciIsIndpZHRoIiwiaGVpZ2h0IiwiZmlsbCIsIklDT05fQkFDS0dST1VORF9DT0xPUiIsInN5bWJvbFdpZHRoIiwiYWRkQ2hpbGQiLCJzdHJva2UiLCJsaW5lV2lkdGgiLCJjZW50ZXIiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIk11bHRpcGx5U2NyZWVuSWNvbk5vZGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTQtMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogSWNvbiBub2RlIGZvciAnTXVsdGlwbHknIHNjcmVlbi5cclxuICpcclxuICogQGF1dGhvciBBbmRyZXkgWmVsZW5rb3YgKE1MZWFybmVyKVxyXG4gKiBAYXV0aG9yIEpvaG4gQmxhbmNvIChNTGVhcm5lcilcclxuICovXHJcblxyXG5pbXBvcnQgeyBMaW5lLCBSZWN0YW5nbGUgfSBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgYXJpdGhtZXRpYyBmcm9tICcuLi8uLi9hcml0aG1ldGljLmpzJztcclxuaW1wb3J0IEFyaXRobWV0aWNDb25zdGFudHMgZnJvbSAnLi4vLi4vY29tbW9uL0FyaXRobWV0aWNDb25zdGFudHMuanMnO1xyXG5cclxuLy8gY29uc3RhbnRzXHJcbmNvbnN0IElDT05fU0laRSA9IEFyaXRobWV0aWNDb25zdGFudHMuU0NSRUVOX0lDT05fU0laRTtcclxuY29uc3QgU1lNQk9MX0NPTE9SID0gJyNGRkYzMUUnO1xyXG5jb25zdCBMSU5FX1dJRFRIID0gMzM7IC8vIGVtcGlyaWNhbGx5IGRldGVybWluZWRcclxuXHJcbmNsYXNzIE11bHRpcGx5U2NyZWVuSWNvbk5vZGUgZXh0ZW5kcyBSZWN0YW5nbGUge1xyXG5cclxuICAvKipcclxuICAgKi9cclxuICBjb25zdHJ1Y3RvcigpIHtcclxuXHJcbiAgICAvLyBjcmVhdGUgdGhlIGJhY2tncm91bmRcclxuICAgIHN1cGVyKCAwLCAwLCBJQ09OX1NJWkUud2lkdGgsIElDT05fU0laRS5oZWlnaHQsIHsgZmlsbDogQXJpdGhtZXRpY0NvbnN0YW50cy5JQ09OX0JBQ0tHUk9VTkRfQ09MT1IgfSApO1xyXG5cclxuICAgIC8vIEFkZCB0aGUgbXVsdGlwbHkgc3ltYm9sLiAgQ3JlYXRlIG91ciBvd24gcmF0aGVyIHRoYW4gdXNlIHRoZSBVbmljb2RlIGNoYXIsIHNpbmNlIHRoaXMgZ2l2ZXMgdXMgbW9yZSBjb250cm9sLlxyXG4gICAgY29uc3Qgc3ltYm9sV2lkdGggPSBJQ09OX1NJWkUud2lkdGggKiAwLjM7XHJcbiAgICB0aGlzLmFkZENoaWxkKCBuZXcgTGluZSggMCwgMCwgc3ltYm9sV2lkdGgsIHN5bWJvbFdpZHRoLCB7XHJcbiAgICAgIHN0cm9rZTogU1lNQk9MX0NPTE9SLFxyXG4gICAgICBsaW5lV2lkdGg6IExJTkVfV0lEVEgsXHJcbiAgICAgIGNlbnRlcjogdGhpcy5jZW50ZXJcclxuICAgIH0gKSApO1xyXG4gICAgdGhpcy5hZGRDaGlsZCggbmV3IExpbmUoIHN5bWJvbFdpZHRoLCAwLCAwLCBzeW1ib2xXaWR0aCwge1xyXG4gICAgICBzdHJva2U6IFNZTUJPTF9DT0xPUixcclxuICAgICAgbGluZVdpZHRoOiBMSU5FX1dJRFRILCAvLyBlbXBpcmljYWxseSBkZXRlcm1pbmVkXHJcbiAgICAgIGNlbnRlcjogdGhpcy5jZW50ZXJcclxuICAgIH0gKSApO1xyXG4gIH1cclxufVxyXG5cclxuYXJpdGhtZXRpYy5yZWdpc3RlciggJ011bHRpcGx5U2NyZWVuSWNvbk5vZGUnLCBNdWx0aXBseVNjcmVlbkljb25Ob2RlICk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBNdWx0aXBseVNjcmVlbkljb25Ob2RlOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFNBQVNBLElBQUksRUFBRUMsU0FBUyxRQUFRLG1DQUFtQztBQUNuRSxPQUFPQyxVQUFVLE1BQU0scUJBQXFCO0FBQzVDLE9BQU9DLG1CQUFtQixNQUFNLHFDQUFxQzs7QUFFckU7QUFDQSxNQUFNQyxTQUFTLEdBQUdELG1CQUFtQixDQUFDRSxnQkFBZ0I7QUFDdEQsTUFBTUMsWUFBWSxHQUFHLFNBQVM7QUFDOUIsTUFBTUMsVUFBVSxHQUFHLEVBQUUsQ0FBQyxDQUFDOztBQUV2QixNQUFNQyxzQkFBc0IsU0FBU1AsU0FBUyxDQUFDO0VBRTdDO0FBQ0Y7RUFDRVEsV0FBV0EsQ0FBQSxFQUFHO0lBRVo7SUFDQSxLQUFLLENBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRUwsU0FBUyxDQUFDTSxLQUFLLEVBQUVOLFNBQVMsQ0FBQ08sTUFBTSxFQUFFO01BQUVDLElBQUksRUFBRVQsbUJBQW1CLENBQUNVO0lBQXNCLENBQUUsQ0FBQzs7SUFFckc7SUFDQSxNQUFNQyxXQUFXLEdBQUdWLFNBQVMsQ0FBQ00sS0FBSyxHQUFHLEdBQUc7SUFDekMsSUFBSSxDQUFDSyxRQUFRLENBQUUsSUFBSWYsSUFBSSxDQUFFLENBQUMsRUFBRSxDQUFDLEVBQUVjLFdBQVcsRUFBRUEsV0FBVyxFQUFFO01BQ3ZERSxNQUFNLEVBQUVWLFlBQVk7TUFDcEJXLFNBQVMsRUFBRVYsVUFBVTtNQUNyQlcsTUFBTSxFQUFFLElBQUksQ0FBQ0E7SUFDZixDQUFFLENBQUUsQ0FBQztJQUNMLElBQUksQ0FBQ0gsUUFBUSxDQUFFLElBQUlmLElBQUksQ0FBRWMsV0FBVyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUVBLFdBQVcsRUFBRTtNQUN2REUsTUFBTSxFQUFFVixZQUFZO01BQ3BCVyxTQUFTLEVBQUVWLFVBQVU7TUFBRTtNQUN2QlcsTUFBTSxFQUFFLElBQUksQ0FBQ0E7SUFDZixDQUFFLENBQUUsQ0FBQztFQUNQO0FBQ0Y7QUFFQWhCLFVBQVUsQ0FBQ2lCLFFBQVEsQ0FBRSx3QkFBd0IsRUFBRVgsc0JBQXVCLENBQUM7QUFFdkUsZUFBZUEsc0JBQXNCIn0=