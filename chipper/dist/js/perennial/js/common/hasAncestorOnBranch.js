// Copyright 2018, University of Colorado Boulder

/**
 * Checks whether a sim branch's dependency has an ancestor commit in its tree.
 *
 * @author Jonathan Olson <jonathan.olson@colorado.edu>
 */

const getDependencies = require('./getDependencies');
const gitCheckout = require('./gitCheckout');
const gitIsAncestor = require('./gitIsAncestor');
const winston = require('winston');

/**
 * Checks whether a sim branch's dependency has an ancestor commit in its tree.
 * @public
 *
 * @param {string} sim
 * @param {string} branch
 * @param {string} repo
 * @param {string} sha
 * @returns {Promise.<boolean>} - Whether it is an ancestor or not
 * @rejects {ExecuteError}
 */
module.exports = async function (sim, branch, repo, sha) {
  winston.info(`Checking whether ${repo} has commit ${sha} in its tree for the branch ${branch} of ${sim}`);
  await gitCheckout(sim, branch);
  const dependencies = await getDependencies(sim);
  if (!dependencies[repo]) {
    return false;
  }
  const repoSHA = dependencies[repo].sha;
  const isAncestor = await gitIsAncestor(repo, sha, repoSHA);
  await gitCheckout(sim, 'master');
  return isAncestor;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJnZXREZXBlbmRlbmNpZXMiLCJyZXF1aXJlIiwiZ2l0Q2hlY2tvdXQiLCJnaXRJc0FuY2VzdG9yIiwid2luc3RvbiIsIm1vZHVsZSIsImV4cG9ydHMiLCJzaW0iLCJicmFuY2giLCJyZXBvIiwic2hhIiwiaW5mbyIsImRlcGVuZGVuY2llcyIsInJlcG9TSEEiLCJpc0FuY2VzdG9yIl0sInNvdXJjZXMiOlsiaGFzQW5jZXN0b3JPbkJyYW5jaC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxOCwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogQ2hlY2tzIHdoZXRoZXIgYSBzaW0gYnJhbmNoJ3MgZGVwZW5kZW5jeSBoYXMgYW4gYW5jZXN0b3IgY29tbWl0IGluIGl0cyB0cmVlLlxyXG4gKlxyXG4gKiBAYXV0aG9yIEpvbmF0aGFuIE9sc29uIDxqb25hdGhhbi5vbHNvbkBjb2xvcmFkby5lZHU+XHJcbiAqL1xyXG5cclxuY29uc3QgZ2V0RGVwZW5kZW5jaWVzID0gcmVxdWlyZSggJy4vZ2V0RGVwZW5kZW5jaWVzJyApO1xyXG5jb25zdCBnaXRDaGVja291dCA9IHJlcXVpcmUoICcuL2dpdENoZWNrb3V0JyApO1xyXG5jb25zdCBnaXRJc0FuY2VzdG9yID0gcmVxdWlyZSggJy4vZ2l0SXNBbmNlc3RvcicgKTtcclxuY29uc3Qgd2luc3RvbiA9IHJlcXVpcmUoICd3aW5zdG9uJyApO1xyXG5cclxuLyoqXHJcbiAqIENoZWNrcyB3aGV0aGVyIGEgc2ltIGJyYW5jaCdzIGRlcGVuZGVuY3kgaGFzIGFuIGFuY2VzdG9yIGNvbW1pdCBpbiBpdHMgdHJlZS5cclxuICogQHB1YmxpY1xyXG4gKlxyXG4gKiBAcGFyYW0ge3N0cmluZ30gc2ltXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBicmFuY2hcclxuICogQHBhcmFtIHtzdHJpbmd9IHJlcG9cclxuICogQHBhcmFtIHtzdHJpbmd9IHNoYVxyXG4gKiBAcmV0dXJucyB7UHJvbWlzZS48Ym9vbGVhbj59IC0gV2hldGhlciBpdCBpcyBhbiBhbmNlc3RvciBvciBub3RcclxuICogQHJlamVjdHMge0V4ZWN1dGVFcnJvcn1cclxuICovXHJcbm1vZHVsZS5leHBvcnRzID0gYXN5bmMgZnVuY3Rpb24oIHNpbSwgYnJhbmNoLCByZXBvLCBzaGEgKSB7XHJcbiAgd2luc3Rvbi5pbmZvKCBgQ2hlY2tpbmcgd2hldGhlciAke3JlcG99IGhhcyBjb21taXQgJHtzaGF9IGluIGl0cyB0cmVlIGZvciB0aGUgYnJhbmNoICR7YnJhbmNofSBvZiAke3NpbX1gICk7XHJcblxyXG4gIGF3YWl0IGdpdENoZWNrb3V0KCBzaW0sIGJyYW5jaCApO1xyXG4gIGNvbnN0IGRlcGVuZGVuY2llcyA9IGF3YWl0IGdldERlcGVuZGVuY2llcyggc2ltICk7XHJcblxyXG4gIGlmICggIWRlcGVuZGVuY2llc1sgcmVwbyBdICkge1xyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG4gIH1cclxuICBjb25zdCByZXBvU0hBID0gZGVwZW5kZW5jaWVzWyByZXBvIF0uc2hhO1xyXG5cclxuICBjb25zdCBpc0FuY2VzdG9yID0gYXdhaXQgZ2l0SXNBbmNlc3RvciggcmVwbywgc2hhLCByZXBvU0hBICk7XHJcbiAgYXdhaXQgZ2l0Q2hlY2tvdXQoIHNpbSwgJ21hc3RlcicgKTtcclxuXHJcbiAgcmV0dXJuIGlzQW5jZXN0b3I7XHJcbn07XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxNQUFNQSxlQUFlLEdBQUdDLE9BQU8sQ0FBRSxtQkFBb0IsQ0FBQztBQUN0RCxNQUFNQyxXQUFXLEdBQUdELE9BQU8sQ0FBRSxlQUFnQixDQUFDO0FBQzlDLE1BQU1FLGFBQWEsR0FBR0YsT0FBTyxDQUFFLGlCQUFrQixDQUFDO0FBQ2xELE1BQU1HLE9BQU8sR0FBR0gsT0FBTyxDQUFFLFNBQVUsQ0FBQzs7QUFFcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBSSxNQUFNLENBQUNDLE9BQU8sR0FBRyxnQkFBZ0JDLEdBQUcsRUFBRUMsTUFBTSxFQUFFQyxJQUFJLEVBQUVDLEdBQUcsRUFBRztFQUN4RE4sT0FBTyxDQUFDTyxJQUFJLENBQUcsb0JBQW1CRixJQUFLLGVBQWNDLEdBQUksK0JBQThCRixNQUFPLE9BQU1ELEdBQUksRUFBRSxDQUFDO0VBRTNHLE1BQU1MLFdBQVcsQ0FBRUssR0FBRyxFQUFFQyxNQUFPLENBQUM7RUFDaEMsTUFBTUksWUFBWSxHQUFHLE1BQU1aLGVBQWUsQ0FBRU8sR0FBSSxDQUFDO0VBRWpELElBQUssQ0FBQ0ssWUFBWSxDQUFFSCxJQUFJLENBQUUsRUFBRztJQUMzQixPQUFPLEtBQUs7RUFDZDtFQUNBLE1BQU1JLE9BQU8sR0FBR0QsWUFBWSxDQUFFSCxJQUFJLENBQUUsQ0FBQ0MsR0FBRztFQUV4QyxNQUFNSSxVQUFVLEdBQUcsTUFBTVgsYUFBYSxDQUFFTSxJQUFJLEVBQUVDLEdBQUcsRUFBRUcsT0FBUSxDQUFDO0VBQzVELE1BQU1YLFdBQVcsQ0FBRUssR0FBRyxFQUFFLFFBQVMsQ0FBQztFQUVsQyxPQUFPTyxVQUFVO0FBQ25CLENBQUMifQ==