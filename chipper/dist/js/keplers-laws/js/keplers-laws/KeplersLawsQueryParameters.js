// Copyright 2023, University of Colorado Boulder

/**
 * Defines query parameters that are specific to this simulation.
 * Run with ?log to print query parameters and their values to the browser console at startup.
 *
 * @author Agust√≠n Vallejo
 */

import logGlobal from '../../../phet-core/js/logGlobal.js';
import keplersLaws from '../keplersLaws.js';
const SCHEMA_MAP = {
  //TODO add schemas for query parameters
};
const KeplersLawsQueryParameters = QueryStringMachine.getAll(SCHEMA_MAP);

// The schema map is a read-only part of the public API, in case schema details (e.g. validValues) are needed elsewhere.
KeplersLawsQueryParameters.SCHEMA_MAP = SCHEMA_MAP;
keplersLaws.register('KeplersLawsQueryParameters', KeplersLawsQueryParameters);

// Log query parameters
logGlobal('phet.chipper.queryParameters');
logGlobal('phet.preloads.phetio.queryParameters');
logGlobal('phet.keplersLaws.KeplersLawsQueryParameters');
export default KeplersLawsQueryParameters;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJsb2dHbG9iYWwiLCJrZXBsZXJzTGF3cyIsIlNDSEVNQV9NQVAiLCJLZXBsZXJzTGF3c1F1ZXJ5UGFyYW1ldGVycyIsIlF1ZXJ5U3RyaW5nTWFjaGluZSIsImdldEFsbCIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiS2VwbGVyc0xhd3NRdWVyeVBhcmFtZXRlcnMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjMsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIERlZmluZXMgcXVlcnkgcGFyYW1ldGVycyB0aGF0IGFyZSBzcGVjaWZpYyB0byB0aGlzIHNpbXVsYXRpb24uXHJcbiAqIFJ1biB3aXRoID9sb2cgdG8gcHJpbnQgcXVlcnkgcGFyYW1ldGVycyBhbmQgdGhlaXIgdmFsdWVzIHRvIHRoZSBicm93c2VyIGNvbnNvbGUgYXQgc3RhcnR1cC5cclxuICpcclxuICogQGF1dGhvciBBZ3VzdMOtbiBWYWxsZWpvXHJcbiAqL1xyXG5cclxuaW1wb3J0IGxvZ0dsb2JhbCBmcm9tICcuLi8uLi8uLi9waGV0LWNvcmUvanMvbG9nR2xvYmFsLmpzJztcclxuaW1wb3J0IGtlcGxlcnNMYXdzIGZyb20gJy4uL2tlcGxlcnNMYXdzLmpzJztcclxuXHJcbmNvbnN0IFNDSEVNQV9NQVAgPSB7XHJcbiAgLy9UT0RPIGFkZCBzY2hlbWFzIGZvciBxdWVyeSBwYXJhbWV0ZXJzXHJcbn07XHJcblxyXG5jb25zdCBLZXBsZXJzTGF3c1F1ZXJ5UGFyYW1ldGVycyA9IFF1ZXJ5U3RyaW5nTWFjaGluZS5nZXRBbGwoIFNDSEVNQV9NQVAgKTtcclxuXHJcbi8vIFRoZSBzY2hlbWEgbWFwIGlzIGEgcmVhZC1vbmx5IHBhcnQgb2YgdGhlIHB1YmxpYyBBUEksIGluIGNhc2Ugc2NoZW1hIGRldGFpbHMgKGUuZy4gdmFsaWRWYWx1ZXMpIGFyZSBuZWVkZWQgZWxzZXdoZXJlLlxyXG5LZXBsZXJzTGF3c1F1ZXJ5UGFyYW1ldGVycy5TQ0hFTUFfTUFQID0gU0NIRU1BX01BUDtcclxuXHJcbmtlcGxlcnNMYXdzLnJlZ2lzdGVyKCAnS2VwbGVyc0xhd3NRdWVyeVBhcmFtZXRlcnMnLCBLZXBsZXJzTGF3c1F1ZXJ5UGFyYW1ldGVycyApO1xyXG5cclxuLy8gTG9nIHF1ZXJ5IHBhcmFtZXRlcnNcclxubG9nR2xvYmFsKCAncGhldC5jaGlwcGVyLnF1ZXJ5UGFyYW1ldGVycycgKTtcclxubG9nR2xvYmFsKCAncGhldC5wcmVsb2Fkcy5waGV0aW8ucXVlcnlQYXJhbWV0ZXJzJyApO1xyXG5sb2dHbG9iYWwoICdwaGV0LmtlcGxlcnNMYXdzLktlcGxlcnNMYXdzUXVlcnlQYXJhbWV0ZXJzJyApO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgS2VwbGVyc0xhd3NRdWVyeVBhcmFtZXRlcnM7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsU0FBUyxNQUFNLG9DQUFvQztBQUMxRCxPQUFPQyxXQUFXLE1BQU0sbUJBQW1CO0FBRTNDLE1BQU1DLFVBQVUsR0FBRztFQUNqQjtBQUFBLENBQ0Q7QUFFRCxNQUFNQywwQkFBMEIsR0FBR0Msa0JBQWtCLENBQUNDLE1BQU0sQ0FBRUgsVUFBVyxDQUFDOztBQUUxRTtBQUNBQywwQkFBMEIsQ0FBQ0QsVUFBVSxHQUFHQSxVQUFVO0FBRWxERCxXQUFXLENBQUNLLFFBQVEsQ0FBRSw0QkFBNEIsRUFBRUgsMEJBQTJCLENBQUM7O0FBRWhGO0FBQ0FILFNBQVMsQ0FBRSw4QkFBK0IsQ0FBQztBQUMzQ0EsU0FBUyxDQUFFLHNDQUF1QyxDQUFDO0FBQ25EQSxTQUFTLENBQUUsNkNBQThDLENBQUM7QUFFMUQsZUFBZUcsMEJBQTBCIn0=