// Copyright 2023, University of Colorado Boulder

/**
 * Third Law Screen, where the user can learn about Kepler's Laws via an elliptical orbit
 *
 * @author AgustÃ­n Vallejo
 */

import { Image } from '../../../scenery/js/imports.js';
import ScreenIcon from '../../../joist/js/ScreenIcon.js';
import Screen from '../../../joist/js/Screen.js';
import SolarSystemCommonColors from '../../../solar-system-common/js/SolarSystemCommonColors.js';
import KeplersLawsModel from '../keplers-laws/model/KeplersLawsModel.js';
import LawMode from '../keplers-laws/model/LawMode.js';
import KeplersLawsScreenView from '../keplers-laws/view/KeplersLawsScreenView.js';
import keplersLaws from '../keplersLaws.js';
import KeplersLawsStrings from '../KeplersLawsStrings.js';
import iconThirdLaw_png from '../../images/iconThirdLaw_png.js';
class ThirdLawScreen extends Screen {
  constructor(tandem) {
    const options = {
      name: KeplersLawsStrings.screen.thirdLawStringProperty,
      homeScreenIcon: new ScreenIcon(new Image(iconThirdLaw_png), {
        fill: SolarSystemCommonColors.backgroundProperty
      }),
      backgroundColorProperty: SolarSystemCommonColors.backgroundProperty,
      tandem: tandem
    };
    super(() => new KeplersLawsModel({
      initialLaw: LawMode.THIRD_LAW,
      tandem: tandem.createTandem('model')
    }), model => new KeplersLawsScreenView(model, {
      tandem: tandem.createTandem('view')
    }), options);
  }
}
keplersLaws.register('ThirdLawScreen', ThirdLawScreen);
export default ThirdLawScreen;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJJbWFnZSIsIlNjcmVlbkljb24iLCJTY3JlZW4iLCJTb2xhclN5c3RlbUNvbW1vbkNvbG9ycyIsIktlcGxlcnNMYXdzTW9kZWwiLCJMYXdNb2RlIiwiS2VwbGVyc0xhd3NTY3JlZW5WaWV3Iiwia2VwbGVyc0xhd3MiLCJLZXBsZXJzTGF3c1N0cmluZ3MiLCJpY29uVGhpcmRMYXdfcG5nIiwiVGhpcmRMYXdTY3JlZW4iLCJjb25zdHJ1Y3RvciIsInRhbmRlbSIsIm9wdGlvbnMiLCJuYW1lIiwic2NyZWVuIiwidGhpcmRMYXdTdHJpbmdQcm9wZXJ0eSIsImhvbWVTY3JlZW5JY29uIiwiZmlsbCIsImJhY2tncm91bmRQcm9wZXJ0eSIsImJhY2tncm91bmRDb2xvclByb3BlcnR5IiwiaW5pdGlhbExhdyIsIlRISVJEX0xBVyIsImNyZWF0ZVRhbmRlbSIsIm1vZGVsIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJUaGlyZExhd1NjcmVlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMywgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogVGhpcmQgTGF3IFNjcmVlbiwgd2hlcmUgdGhlIHVzZXIgY2FuIGxlYXJuIGFib3V0IEtlcGxlcidzIExhd3MgdmlhIGFuIGVsbGlwdGljYWwgb3JiaXRcclxuICpcclxuICogQGF1dGhvciBBZ3VzdMOtbiBWYWxsZWpvXHJcbiAqL1xyXG5cclxuaW1wb3J0IHsgSW1hZ2UgfSBmcm9tICcuLi8uLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgU2NyZWVuSWNvbiBmcm9tICcuLi8uLi8uLi9qb2lzdC9qcy9TY3JlZW5JY29uLmpzJztcclxuaW1wb3J0IFNjcmVlbiBmcm9tICcuLi8uLi8uLi9qb2lzdC9qcy9TY3JlZW4uanMnO1xyXG5pbXBvcnQgVGFuZGVtIGZyb20gJy4uLy4uLy4uL3RhbmRlbS9qcy9UYW5kZW0uanMnO1xyXG5pbXBvcnQgU29sYXJTeXN0ZW1Db21tb25Db2xvcnMgZnJvbSAnLi4vLi4vLi4vc29sYXItc3lzdGVtLWNvbW1vbi9qcy9Tb2xhclN5c3RlbUNvbW1vbkNvbG9ycy5qcyc7XHJcbmltcG9ydCBLZXBsZXJzTGF3c01vZGVsIGZyb20gJy4uL2tlcGxlcnMtbGF3cy9tb2RlbC9LZXBsZXJzTGF3c01vZGVsLmpzJztcclxuaW1wb3J0IExhd01vZGUgZnJvbSAnLi4va2VwbGVycy1sYXdzL21vZGVsL0xhd01vZGUuanMnO1xyXG5pbXBvcnQgS2VwbGVyc0xhd3NTY3JlZW5WaWV3IGZyb20gJy4uL2tlcGxlcnMtbGF3cy92aWV3L0tlcGxlcnNMYXdzU2NyZWVuVmlldy5qcyc7XHJcbmltcG9ydCBrZXBsZXJzTGF3cyBmcm9tICcuLi9rZXBsZXJzTGF3cy5qcyc7XHJcbmltcG9ydCBLZXBsZXJzTGF3c1N0cmluZ3MgZnJvbSAnLi4vS2VwbGVyc0xhd3NTdHJpbmdzLmpzJztcclxuaW1wb3J0IGljb25UaGlyZExhd19wbmcgZnJvbSAnLi4vLi4vaW1hZ2VzL2ljb25UaGlyZExhd19wbmcuanMnO1xyXG5cclxuY2xhc3MgVGhpcmRMYXdTY3JlZW4gZXh0ZW5kcyBTY3JlZW48S2VwbGVyc0xhd3NNb2RlbCwgS2VwbGVyc0xhd3NTY3JlZW5WaWV3PiB7XHJcblxyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvciggdGFuZGVtOiBUYW5kZW0gKSB7XHJcblxyXG4gICAgY29uc3Qgb3B0aW9ucyA9IHtcclxuICAgICAgbmFtZTogS2VwbGVyc0xhd3NTdHJpbmdzLnNjcmVlbi50aGlyZExhd1N0cmluZ1Byb3BlcnR5LFxyXG4gICAgICBob21lU2NyZWVuSWNvbjogbmV3IFNjcmVlbkljb24oIG5ldyBJbWFnZSggaWNvblRoaXJkTGF3X3BuZyApLCB7XHJcbiAgICAgICAgZmlsbDogU29sYXJTeXN0ZW1Db21tb25Db2xvcnMuYmFja2dyb3VuZFByb3BlcnR5XHJcbiAgICAgIH0gKSxcclxuICAgICAgYmFja2dyb3VuZENvbG9yUHJvcGVydHk6IFNvbGFyU3lzdGVtQ29tbW9uQ29sb3JzLmJhY2tncm91bmRQcm9wZXJ0eSxcclxuICAgICAgdGFuZGVtOiB0YW5kZW1cclxuICAgIH07XHJcblxyXG4gICAgc3VwZXIoXHJcbiAgICAgICgpID0+IG5ldyBLZXBsZXJzTGF3c01vZGVsKCB7XHJcbiAgICAgICAgaW5pdGlhbExhdzogTGF3TW9kZS5USElSRF9MQVcsXHJcbiAgICAgICAgdGFuZGVtOiB0YW5kZW0uY3JlYXRlVGFuZGVtKCAnbW9kZWwnIClcclxuICAgICAgfSApLFxyXG4gICAgICBtb2RlbCA9PiBuZXcgS2VwbGVyc0xhd3NTY3JlZW5WaWV3KCBtb2RlbCwge1xyXG4gICAgICAgIHRhbmRlbTogdGFuZGVtLmNyZWF0ZVRhbmRlbSggJ3ZpZXcnIClcclxuICAgICAgfSApLFxyXG4gICAgICBvcHRpb25zXHJcbiAgICApO1xyXG4gIH1cclxufVxyXG5cclxua2VwbGVyc0xhd3MucmVnaXN0ZXIoICdUaGlyZExhd1NjcmVlbicsIFRoaXJkTGF3U2NyZWVuICk7XHJcbmV4cG9ydCBkZWZhdWx0IFRoaXJkTGF3U2NyZWVuOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxTQUFTQSxLQUFLLFFBQVEsZ0NBQWdDO0FBQ3RELE9BQU9DLFVBQVUsTUFBTSxpQ0FBaUM7QUFDeEQsT0FBT0MsTUFBTSxNQUFNLDZCQUE2QjtBQUVoRCxPQUFPQyx1QkFBdUIsTUFBTSw0REFBNEQ7QUFDaEcsT0FBT0MsZ0JBQWdCLE1BQU0sMkNBQTJDO0FBQ3hFLE9BQU9DLE9BQU8sTUFBTSxrQ0FBa0M7QUFDdEQsT0FBT0MscUJBQXFCLE1BQU0sK0NBQStDO0FBQ2pGLE9BQU9DLFdBQVcsTUFBTSxtQkFBbUI7QUFDM0MsT0FBT0Msa0JBQWtCLE1BQU0sMEJBQTBCO0FBQ3pELE9BQU9DLGdCQUFnQixNQUFNLGtDQUFrQztBQUUvRCxNQUFNQyxjQUFjLFNBQVNSLE1BQU0sQ0FBMEM7RUFFcEVTLFdBQVdBLENBQUVDLE1BQWMsRUFBRztJQUVuQyxNQUFNQyxPQUFPLEdBQUc7TUFDZEMsSUFBSSxFQUFFTixrQkFBa0IsQ0FBQ08sTUFBTSxDQUFDQyxzQkFBc0I7TUFDdERDLGNBQWMsRUFBRSxJQUFJaEIsVUFBVSxDQUFFLElBQUlELEtBQUssQ0FBRVMsZ0JBQWlCLENBQUMsRUFBRTtRQUM3RFMsSUFBSSxFQUFFZix1QkFBdUIsQ0FBQ2dCO01BQ2hDLENBQUUsQ0FBQztNQUNIQyx1QkFBdUIsRUFBRWpCLHVCQUF1QixDQUFDZ0Isa0JBQWtCO01BQ25FUCxNQUFNLEVBQUVBO0lBQ1YsQ0FBQztJQUVELEtBQUssQ0FDSCxNQUFNLElBQUlSLGdCQUFnQixDQUFFO01BQzFCaUIsVUFBVSxFQUFFaEIsT0FBTyxDQUFDaUIsU0FBUztNQUM3QlYsTUFBTSxFQUFFQSxNQUFNLENBQUNXLFlBQVksQ0FBRSxPQUFRO0lBQ3ZDLENBQUUsQ0FBQyxFQUNIQyxLQUFLLElBQUksSUFBSWxCLHFCQUFxQixDQUFFa0IsS0FBSyxFQUFFO01BQ3pDWixNQUFNLEVBQUVBLE1BQU0sQ0FBQ1csWUFBWSxDQUFFLE1BQU87SUFDdEMsQ0FBRSxDQUFDLEVBQ0hWLE9BQ0YsQ0FBQztFQUNIO0FBQ0Y7QUFFQU4sV0FBVyxDQUFDa0IsUUFBUSxDQUFFLGdCQUFnQixFQUFFZixjQUFlLENBQUM7QUFDeEQsZUFBZUEsY0FBYyJ9