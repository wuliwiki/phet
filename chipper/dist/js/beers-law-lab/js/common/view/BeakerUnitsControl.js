// Copyright 2022-2023, University of Colorado Boulder

/**
 * BeakerUnitsControl is the Preferences dialog control for setting the units for the beaker.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import optionize from '../../../../phet-core/js/optionize.js';
import { HBox, Text } from '../../../../scenery/js/imports.js';
import AquaRadioButtonGroup from '../../../../sun/js/AquaRadioButtonGroup.js';
import beersLawLab from '../../beersLawLab.js';
import AquaRadioButton from '../../../../sun/js/AquaRadioButton.js';
import BeersLawLabStrings from '../../BeersLawLabStrings.js';
import PreferencesDialog from '../../../../joist/js/preferences/PreferencesDialog.js';
export default class BeakerUnitsControl extends HBox {
  constructor(beakerUnitsProperty, providedOptions) {
    const options = optionize()({
      // HBoxOptions
      spacing: 15
    }, providedOptions);
    const labelText = new Text(BeersLawLabStrings.beakerUnitsStringProperty, {
      font: PreferencesDialog.CONTENT_FONT,
      tandem: options.tandem.createTandem('labelText')
    });
    const radioButtonGroup = new BeakerUnitsRadioButtonGroup(beakerUnitsProperty, {
      tandem: options.tandem.createTandem('radioButtonGroup')
    });
    options.children = [labelText, radioButtonGroup];
    super(options);
    this.addLinkedElement(beakerUnitsProperty, {
      tandem: options.tandem.createTandem(beakerUnitsProperty.tandem.name)
    });
    this.disposeBeakerUnitsControl = () => {
      labelText.dispose();
      radioButtonGroup.dispose();
    };
  }
  dispose() {
    super.dispose();
    this.disposeBeakerUnitsControl();
  }
}
class BeakerUnitsRadioButtonGroup extends AquaRadioButtonGroup {
  constructor(beakerUnitsProperty, providedOptions) {
    const options = optionize()({
      // AquaRadioButtonGroupOptions
      orientation: 'horizontal',
      spacing: 15
    }, providedOptions);
    const items = [createItem('liters', BeersLawLabStrings.units.litersStringProperty), createItem('milliliters', BeersLawLabStrings.units.millilitersStringProperty)];
    super(beakerUnitsProperty, items, options);
  }
}
function createItem(value, stringProperty) {
  return {
    value: value,
    createNode: tandem => new Text(stringProperty, {
      font: PreferencesDialog.CONTENT_FONT,
      maxWidth: 200,
      tandem: tandem.createTandem('text')
    }),
    tandemName: `${value}${AquaRadioButton.TANDEM_NAME_SUFFIX}`
  };
}
beersLawLab.register('BeakerUnitsControl', BeakerUnitsControl);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,