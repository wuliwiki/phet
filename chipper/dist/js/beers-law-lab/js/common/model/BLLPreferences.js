// Copyright 2022, University of Colorado Boulder

/**
 * BLLPreferences is the model for sim-specific preferences, accessed via the Preferences dialog.
 * These preferences are global, and affect all screens.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import BooleanProperty from '../../../../axon/js/BooleanProperty.js';
import Tandem from '../../../../tandem/js/Tandem.js';
import BLLQueryParameters, { BeakerUnitsValues, ConcentrationMeterUnitsValues } from '../BLLQueryParameters.js';
import beersLawLab from '../../beersLawLab.js';
import StringUnionProperty from '../../../../axon/js/StringUnionProperty.js';
const BLLPreferences = {
  showSolutionVolumeProperty: new BooleanProperty(BLLQueryParameters.showSolutionVolume, {
    tandem: Tandem.PREFERENCES.createTandem('showSolutionVolumeProperty'),
    phetioDocumentation: 'Shows the volume of the solution that is in the beaker'
  }),
  showSoluteAmountProperty: new BooleanProperty(BLLQueryParameters.showSoluteAmount, {
    tandem: Tandem.PREFERENCES.createTandem('showSoluteAmountProperty'),
    phetioDocumentation: 'Shows the amount of solute that is in the beaker'
  }),
  beakerUnitsProperty: new StringUnionProperty(BLLQueryParameters.beakerUnits, {
    validValues: BeakerUnitsValues,
    tandem: Tandem.PREFERENCES.createTandem('beakerUnitsProperty'),
    phetioDocumentation: 'Units displayed on the beaker tick marks'
  }),
  concentrationMeterUnitsProperty: new StringUnionProperty(BLLQueryParameters.concentrationMeterUnits, {
    validValues: ConcentrationMeterUnitsValues,
    tandem: Tandem.PREFERENCES.createTandem('concentrationMeterUnitsProperty'),
    phetioDocumentation: 'Units displayed by the concentration meter'
  })
};
beersLawLab.register('BLLPreferences', BLLPreferences);
export default BLLPreferences;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJCb29sZWFuUHJvcGVydHkiLCJUYW5kZW0iLCJCTExRdWVyeVBhcmFtZXRlcnMiLCJCZWFrZXJVbml0c1ZhbHVlcyIsIkNvbmNlbnRyYXRpb25NZXRlclVuaXRzVmFsdWVzIiwiYmVlcnNMYXdMYWIiLCJTdHJpbmdVbmlvblByb3BlcnR5IiwiQkxMUHJlZmVyZW5jZXMiLCJzaG93U29sdXRpb25Wb2x1bWVQcm9wZXJ0eSIsInNob3dTb2x1dGlvblZvbHVtZSIsInRhbmRlbSIsIlBSRUZFUkVOQ0VTIiwiY3JlYXRlVGFuZGVtIiwicGhldGlvRG9jdW1lbnRhdGlvbiIsInNob3dTb2x1dGVBbW91bnRQcm9wZXJ0eSIsInNob3dTb2x1dGVBbW91bnQiLCJiZWFrZXJVbml0c1Byb3BlcnR5IiwiYmVha2VyVW5pdHMiLCJ2YWxpZFZhbHVlcyIsImNvbmNlbnRyYXRpb25NZXRlclVuaXRzUHJvcGVydHkiLCJjb25jZW50cmF0aW9uTWV0ZXJVbml0cyIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiQkxMUHJlZmVyZW5jZXMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjIsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIEJMTFByZWZlcmVuY2VzIGlzIHRoZSBtb2RlbCBmb3Igc2ltLXNwZWNpZmljIHByZWZlcmVuY2VzLCBhY2Nlc3NlZCB2aWEgdGhlIFByZWZlcmVuY2VzIGRpYWxvZy5cclxuICogVGhlc2UgcHJlZmVyZW5jZXMgYXJlIGdsb2JhbCwgYW5kIGFmZmVjdCBhbGwgc2NyZWVucy5cclxuICpcclxuICogQGF1dGhvciBDaHJpcyBNYWxsZXkgKFBpeGVsWm9vbSwgSW5jLilcclxuICovXHJcblxyXG5pbXBvcnQgQm9vbGVhblByb3BlcnR5IGZyb20gJy4uLy4uLy4uLy4uL2F4b24vanMvQm9vbGVhblByb3BlcnR5LmpzJztcclxuaW1wb3J0IFRhbmRlbSBmcm9tICcuLi8uLi8uLi8uLi90YW5kZW0vanMvVGFuZGVtLmpzJztcclxuaW1wb3J0IEJMTFF1ZXJ5UGFyYW1ldGVycywgeyBCZWFrZXJVbml0cywgQmVha2VyVW5pdHNWYWx1ZXMsIENvbmNlbnRyYXRpb25NZXRlclVuaXRzLCBDb25jZW50cmF0aW9uTWV0ZXJVbml0c1ZhbHVlcyB9IGZyb20gJy4uL0JMTFF1ZXJ5UGFyYW1ldGVycy5qcyc7XHJcbmltcG9ydCBiZWVyc0xhd0xhYiBmcm9tICcuLi8uLi9iZWVyc0xhd0xhYi5qcyc7XHJcbmltcG9ydCBTdHJpbmdVbmlvblByb3BlcnR5IGZyb20gJy4uLy4uLy4uLy4uL2F4b24vanMvU3RyaW5nVW5pb25Qcm9wZXJ0eS5qcyc7XHJcblxyXG5jb25zdCBCTExQcmVmZXJlbmNlcyA9IHtcclxuXHJcbiAgc2hvd1NvbHV0aW9uVm9sdW1lUHJvcGVydHk6IG5ldyBCb29sZWFuUHJvcGVydHkoIEJMTFF1ZXJ5UGFyYW1ldGVycy5zaG93U29sdXRpb25Wb2x1bWUsIHtcclxuICAgIHRhbmRlbTogVGFuZGVtLlBSRUZFUkVOQ0VTLmNyZWF0ZVRhbmRlbSggJ3Nob3dTb2x1dGlvblZvbHVtZVByb3BlcnR5JyApLFxyXG4gICAgcGhldGlvRG9jdW1lbnRhdGlvbjogJ1Nob3dzIHRoZSB2b2x1bWUgb2YgdGhlIHNvbHV0aW9uIHRoYXQgaXMgaW4gdGhlIGJlYWtlcidcclxuICB9ICksXHJcblxyXG4gIHNob3dTb2x1dGVBbW91bnRQcm9wZXJ0eTogbmV3IEJvb2xlYW5Qcm9wZXJ0eSggQkxMUXVlcnlQYXJhbWV0ZXJzLnNob3dTb2x1dGVBbW91bnQsIHtcclxuICAgIHRhbmRlbTogVGFuZGVtLlBSRUZFUkVOQ0VTLmNyZWF0ZVRhbmRlbSggJ3Nob3dTb2x1dGVBbW91bnRQcm9wZXJ0eScgKSxcclxuICAgIHBoZXRpb0RvY3VtZW50YXRpb246ICdTaG93cyB0aGUgYW1vdW50IG9mIHNvbHV0ZSB0aGF0IGlzIGluIHRoZSBiZWFrZXInXHJcbiAgfSApLFxyXG5cclxuICBiZWFrZXJVbml0c1Byb3BlcnR5OiBuZXcgU3RyaW5nVW5pb25Qcm9wZXJ0eTxCZWFrZXJVbml0cz4oIEJMTFF1ZXJ5UGFyYW1ldGVycy5iZWFrZXJVbml0cyBhcyBCZWFrZXJVbml0cywge1xyXG4gICAgdmFsaWRWYWx1ZXM6IEJlYWtlclVuaXRzVmFsdWVzLFxyXG4gICAgdGFuZGVtOiBUYW5kZW0uUFJFRkVSRU5DRVMuY3JlYXRlVGFuZGVtKCAnYmVha2VyVW5pdHNQcm9wZXJ0eScgKSxcclxuICAgIHBoZXRpb0RvY3VtZW50YXRpb246ICdVbml0cyBkaXNwbGF5ZWQgb24gdGhlIGJlYWtlciB0aWNrIG1hcmtzJ1xyXG4gIH0gKSxcclxuXHJcbiAgY29uY2VudHJhdGlvbk1ldGVyVW5pdHNQcm9wZXJ0eTogbmV3IFN0cmluZ1VuaW9uUHJvcGVydHk8Q29uY2VudHJhdGlvbk1ldGVyVW5pdHM+KCBCTExRdWVyeVBhcmFtZXRlcnMuY29uY2VudHJhdGlvbk1ldGVyVW5pdHMgYXMgQ29uY2VudHJhdGlvbk1ldGVyVW5pdHMsIHtcclxuICAgIHZhbGlkVmFsdWVzOiBDb25jZW50cmF0aW9uTWV0ZXJVbml0c1ZhbHVlcyxcclxuICAgIHRhbmRlbTogVGFuZGVtLlBSRUZFUkVOQ0VTLmNyZWF0ZVRhbmRlbSggJ2NvbmNlbnRyYXRpb25NZXRlclVuaXRzUHJvcGVydHknICksXHJcbiAgICBwaGV0aW9Eb2N1bWVudGF0aW9uOiAnVW5pdHMgZGlzcGxheWVkIGJ5IHRoZSBjb25jZW50cmF0aW9uIG1ldGVyJ1xyXG4gIH0gKVxyXG59O1xyXG5cclxuYmVlcnNMYXdMYWIucmVnaXN0ZXIoICdCTExQcmVmZXJlbmNlcycsIEJMTFByZWZlcmVuY2VzICk7XHJcbmV4cG9ydCBkZWZhdWx0IEJMTFByZWZlcmVuY2VzOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLGVBQWUsTUFBTSx3Q0FBd0M7QUFDcEUsT0FBT0MsTUFBTSxNQUFNLGlDQUFpQztBQUNwRCxPQUFPQyxrQkFBa0IsSUFBaUJDLGlCQUFpQixFQUEyQkMsNkJBQTZCLFFBQVEsMEJBQTBCO0FBQ3JKLE9BQU9DLFdBQVcsTUFBTSxzQkFBc0I7QUFDOUMsT0FBT0MsbUJBQW1CLE1BQU0sNENBQTRDO0FBRTVFLE1BQU1DLGNBQWMsR0FBRztFQUVyQkMsMEJBQTBCLEVBQUUsSUFBSVIsZUFBZSxDQUFFRSxrQkFBa0IsQ0FBQ08sa0JBQWtCLEVBQUU7SUFDdEZDLE1BQU0sRUFBRVQsTUFBTSxDQUFDVSxXQUFXLENBQUNDLFlBQVksQ0FBRSw0QkFBNkIsQ0FBQztJQUN2RUMsbUJBQW1CLEVBQUU7RUFDdkIsQ0FBRSxDQUFDO0VBRUhDLHdCQUF3QixFQUFFLElBQUlkLGVBQWUsQ0FBRUUsa0JBQWtCLENBQUNhLGdCQUFnQixFQUFFO0lBQ2xGTCxNQUFNLEVBQUVULE1BQU0sQ0FBQ1UsV0FBVyxDQUFDQyxZQUFZLENBQUUsMEJBQTJCLENBQUM7SUFDckVDLG1CQUFtQixFQUFFO0VBQ3ZCLENBQUUsQ0FBQztFQUVIRyxtQkFBbUIsRUFBRSxJQUFJVixtQkFBbUIsQ0FBZUosa0JBQWtCLENBQUNlLFdBQVcsRUFBaUI7SUFDeEdDLFdBQVcsRUFBRWYsaUJBQWlCO0lBQzlCTyxNQUFNLEVBQUVULE1BQU0sQ0FBQ1UsV0FBVyxDQUFDQyxZQUFZLENBQUUscUJBQXNCLENBQUM7SUFDaEVDLG1CQUFtQixFQUFFO0VBQ3ZCLENBQUUsQ0FBQztFQUVITSwrQkFBK0IsRUFBRSxJQUFJYixtQkFBbUIsQ0FBMkJKLGtCQUFrQixDQUFDa0IsdUJBQXVCLEVBQTZCO0lBQ3hKRixXQUFXLEVBQUVkLDZCQUE2QjtJQUMxQ00sTUFBTSxFQUFFVCxNQUFNLENBQUNVLFdBQVcsQ0FBQ0MsWUFBWSxDQUFFLGlDQUFrQyxDQUFDO0lBQzVFQyxtQkFBbUIsRUFBRTtFQUN2QixDQUFFO0FBQ0osQ0FBQztBQUVEUixXQUFXLENBQUNnQixRQUFRLENBQUUsZ0JBQWdCLEVBQUVkLGNBQWUsQ0FBQztBQUN4RCxlQUFlQSxjQUFjIn0=