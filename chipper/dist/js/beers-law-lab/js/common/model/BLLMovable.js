// Copyright 2013-2023, University of Colorado Boulder

/**
 * BLLMovable is a movable model element.
 * Semantics of units are determined by the client.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import Bounds2 from '../../../../dot/js/Bounds2.js';
import Vector2 from '../../../../dot/js/Vector2.js';
import Vector2Property from '../../../../dot/js/Vector2Property.js';
import optionize from '../../../../phet-core/js/optionize.js';
import PhetioObject from '../../../../tandem/js/PhetioObject.js';
import beersLawLab from '../../beersLawLab.js';
export default class BLLMovable extends PhetioObject {
  constructor(providedOptions) {
    const options = optionize()({
      // SelfOptions
      position: Vector2.ZERO,
      positionPhetioReadOnly: true,
      dragBounds: Bounds2.EVERYTHING,
      // PhetioObjectOptions
      phetioState: false
    }, providedOptions);
    super(options);
    this.positionProperty = new Vector2Property(options.position, {
      units: 'cm',
      tandem: options.tandem.createTandem('positionProperty'),
      phetioReadOnly: options.positionPhetioReadOnly,
      phetioDocumentation: 'Note that (0,0) is at the upper-LEFT, +x is to the right, and +y is DOWN.'
    });
    this.dragBounds = options.dragBounds;
  }
  dispose() {
    assert && assert(false, 'dispose is not supported, exists for the lifetime of the sim');
    super.dispose();
  }
  reset() {
    this.positionProperty.reset();
  }
}
beersLawLab.register('BLLMovable', BLLMovable);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJCb3VuZHMyIiwiVmVjdG9yMiIsIlZlY3RvcjJQcm9wZXJ0eSIsIm9wdGlvbml6ZSIsIlBoZXRpb09iamVjdCIsImJlZXJzTGF3TGFiIiwiQkxMTW92YWJsZSIsImNvbnN0cnVjdG9yIiwicHJvdmlkZWRPcHRpb25zIiwib3B0aW9ucyIsInBvc2l0aW9uIiwiWkVSTyIsInBvc2l0aW9uUGhldGlvUmVhZE9ubHkiLCJkcmFnQm91bmRzIiwiRVZFUllUSElORyIsInBoZXRpb1N0YXRlIiwicG9zaXRpb25Qcm9wZXJ0eSIsInVuaXRzIiwidGFuZGVtIiwiY3JlYXRlVGFuZGVtIiwicGhldGlvUmVhZE9ubHkiLCJwaGV0aW9Eb2N1bWVudGF0aW9uIiwiZGlzcG9zZSIsImFzc2VydCIsInJlc2V0IiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJCTExNb3ZhYmxlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDEzLTIwMjMsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIEJMTE1vdmFibGUgaXMgYSBtb3ZhYmxlIG1vZGVsIGVsZW1lbnQuXHJcbiAqIFNlbWFudGljcyBvZiB1bml0cyBhcmUgZGV0ZXJtaW5lZCBieSB0aGUgY2xpZW50LlxyXG4gKlxyXG4gKiBAYXV0aG9yIENocmlzIE1hbGxleSAoUGl4ZWxab29tLCBJbmMuKVxyXG4gKi9cclxuXHJcbmltcG9ydCBQcm9wZXJ0eSBmcm9tICcuLi8uLi8uLi8uLi9heG9uL2pzL1Byb3BlcnR5LmpzJztcclxuaW1wb3J0IEJvdW5kczIgZnJvbSAnLi4vLi4vLi4vLi4vZG90L2pzL0JvdW5kczIuanMnO1xyXG5pbXBvcnQgVmVjdG9yMiBmcm9tICcuLi8uLi8uLi8uLi9kb3QvanMvVmVjdG9yMi5qcyc7XHJcbmltcG9ydCBWZWN0b3IyUHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vLi4vZG90L2pzL1ZlY3RvcjJQcm9wZXJ0eS5qcyc7XHJcbmltcG9ydCBvcHRpb25pemUgZnJvbSAnLi4vLi4vLi4vLi4vcGhldC1jb3JlL2pzL29wdGlvbml6ZS5qcyc7XHJcbmltcG9ydCBQaWNrT3B0aW9uYWwgZnJvbSAnLi4vLi4vLi4vLi4vcGhldC1jb3JlL2pzL3R5cGVzL1BpY2tPcHRpb25hbC5qcyc7XHJcbmltcG9ydCBQaWNrUmVxdWlyZWQgZnJvbSAnLi4vLi4vLi4vLi4vcGhldC1jb3JlL2pzL3R5cGVzL1BpY2tSZXF1aXJlZC5qcyc7XHJcbmltcG9ydCBQaGV0aW9PYmplY3QsIHsgUGhldGlvT2JqZWN0T3B0aW9ucyB9IGZyb20gJy4uLy4uLy4uLy4uL3RhbmRlbS9qcy9QaGV0aW9PYmplY3QuanMnO1xyXG5pbXBvcnQgYmVlcnNMYXdMYWIgZnJvbSAnLi4vLi4vYmVlcnNMYXdMYWIuanMnO1xyXG5cclxudHlwZSBTZWxmT3B0aW9ucyA9IHtcclxuICBwb3NpdGlvbj86IFZlY3RvcjI7IC8vIGluaXRpYWwgcG9zaXRpb25cclxuICBwb3NpdGlvblBoZXRpb1JlYWRPbmx5PzogYm9vbGVhbjsgLy8gd2hldGhlciBwb3NpdGlvblByb3BlcnR5IGlzIHJlYWQtb25seVxyXG4gIGRyYWdCb3VuZHM/OiBCb3VuZHMyOyAvLyBkcmFnIGJvdW5kc1xyXG59O1xyXG5cclxuZXhwb3J0IHR5cGUgQkxMTW92YWJsZU9wdGlvbnMgPSBTZWxmT3B0aW9ucyAmXHJcbiAgUGlja1JlcXVpcmVkPFBoZXRpb09iamVjdE9wdGlvbnMsICd0YW5kZW0nPiAmXHJcbiAgUGlja09wdGlvbmFsPFBoZXRpb09iamVjdE9wdGlvbnMsICdwaGV0aW9TdGF0ZSc+O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQkxMTW92YWJsZSBleHRlbmRzIFBoZXRpb09iamVjdCB7XHJcblxyXG4gIHB1YmxpYyByZWFkb25seSBwb3NpdGlvblByb3BlcnR5OiBQcm9wZXJ0eTxWZWN0b3IyPjtcclxuICBwdWJsaWMgcmVhZG9ubHkgZHJhZ0JvdW5kczogQm91bmRzMjtcclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKCBwcm92aWRlZE9wdGlvbnM6IEJMTE1vdmFibGVPcHRpb25zICkge1xyXG5cclxuICAgIGNvbnN0IG9wdGlvbnMgPSBvcHRpb25pemU8QkxMTW92YWJsZU9wdGlvbnMsIFNlbGZPcHRpb25zLCBQaGV0aW9PYmplY3RPcHRpb25zPigpKCB7XHJcblxyXG4gICAgICAvLyBTZWxmT3B0aW9uc1xyXG4gICAgICBwb3NpdGlvbjogVmVjdG9yMi5aRVJPLFxyXG4gICAgICBwb3NpdGlvblBoZXRpb1JlYWRPbmx5OiB0cnVlLFxyXG4gICAgICBkcmFnQm91bmRzOiBCb3VuZHMyLkVWRVJZVEhJTkcsXHJcblxyXG4gICAgICAvLyBQaGV0aW9PYmplY3RPcHRpb25zXHJcbiAgICAgIHBoZXRpb1N0YXRlOiBmYWxzZVxyXG4gICAgfSwgcHJvdmlkZWRPcHRpb25zICk7XHJcblxyXG4gICAgc3VwZXIoIG9wdGlvbnMgKTtcclxuXHJcbiAgICB0aGlzLnBvc2l0aW9uUHJvcGVydHkgPSBuZXcgVmVjdG9yMlByb3BlcnR5KCBvcHRpb25zLnBvc2l0aW9uLCB7XHJcbiAgICAgIHVuaXRzOiAnY20nLFxyXG4gICAgICB0YW5kZW06IG9wdGlvbnMudGFuZGVtLmNyZWF0ZVRhbmRlbSggJ3Bvc2l0aW9uUHJvcGVydHknICksXHJcbiAgICAgIHBoZXRpb1JlYWRPbmx5OiBvcHRpb25zLnBvc2l0aW9uUGhldGlvUmVhZE9ubHksXHJcbiAgICAgIHBoZXRpb0RvY3VtZW50YXRpb246ICdOb3RlIHRoYXQgKDAsMCkgaXMgYXQgdGhlIHVwcGVyLUxFRlQsICt4IGlzIHRvIHRoZSByaWdodCwgYW5kICt5IGlzIERPV04uJ1xyXG4gICAgfSApO1xyXG5cclxuICAgIHRoaXMuZHJhZ0JvdW5kcyA9IG9wdGlvbnMuZHJhZ0JvdW5kcztcclxuICB9XHJcblxyXG4gIHB1YmxpYyBvdmVycmlkZSBkaXNwb3NlKCk6IHZvaWQge1xyXG4gICAgYXNzZXJ0ICYmIGFzc2VydCggZmFsc2UsICdkaXNwb3NlIGlzIG5vdCBzdXBwb3J0ZWQsIGV4aXN0cyBmb3IgdGhlIGxpZmV0aW1lIG9mIHRoZSBzaW0nICk7XHJcbiAgICBzdXBlci5kaXNwb3NlKCk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgcmVzZXQoKTogdm9pZCB7XHJcbiAgICB0aGlzLnBvc2l0aW9uUHJvcGVydHkucmVzZXQoKTtcclxuICB9XHJcbn1cclxuXHJcbmJlZXJzTGF3TGFiLnJlZ2lzdGVyKCAnQkxMTW92YWJsZScsIEJMTE1vdmFibGUgKTsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFHQSxPQUFPQSxPQUFPLE1BQU0sK0JBQStCO0FBQ25ELE9BQU9DLE9BQU8sTUFBTSwrQkFBK0I7QUFDbkQsT0FBT0MsZUFBZSxNQUFNLHVDQUF1QztBQUNuRSxPQUFPQyxTQUFTLE1BQU0sdUNBQXVDO0FBRzdELE9BQU9DLFlBQVksTUFBK0IsdUNBQXVDO0FBQ3pGLE9BQU9DLFdBQVcsTUFBTSxzQkFBc0I7QUFZOUMsZUFBZSxNQUFNQyxVQUFVLFNBQVNGLFlBQVksQ0FBQztFQUs1Q0csV0FBV0EsQ0FBRUMsZUFBa0MsRUFBRztJQUV2RCxNQUFNQyxPQUFPLEdBQUdOLFNBQVMsQ0FBc0QsQ0FBQyxDQUFFO01BRWhGO01BQ0FPLFFBQVEsRUFBRVQsT0FBTyxDQUFDVSxJQUFJO01BQ3RCQyxzQkFBc0IsRUFBRSxJQUFJO01BQzVCQyxVQUFVLEVBQUViLE9BQU8sQ0FBQ2MsVUFBVTtNQUU5QjtNQUNBQyxXQUFXLEVBQUU7SUFDZixDQUFDLEVBQUVQLGVBQWdCLENBQUM7SUFFcEIsS0FBSyxDQUFFQyxPQUFRLENBQUM7SUFFaEIsSUFBSSxDQUFDTyxnQkFBZ0IsR0FBRyxJQUFJZCxlQUFlLENBQUVPLE9BQU8sQ0FBQ0MsUUFBUSxFQUFFO01BQzdETyxLQUFLLEVBQUUsSUFBSTtNQUNYQyxNQUFNLEVBQUVULE9BQU8sQ0FBQ1MsTUFBTSxDQUFDQyxZQUFZLENBQUUsa0JBQW1CLENBQUM7TUFDekRDLGNBQWMsRUFBRVgsT0FBTyxDQUFDRyxzQkFBc0I7TUFDOUNTLG1CQUFtQixFQUFFO0lBQ3ZCLENBQUUsQ0FBQztJQUVILElBQUksQ0FBQ1IsVUFBVSxHQUFHSixPQUFPLENBQUNJLFVBQVU7RUFDdEM7RUFFZ0JTLE9BQU9BLENBQUEsRUFBUztJQUM5QkMsTUFBTSxJQUFJQSxNQUFNLENBQUUsS0FBSyxFQUFFLDhEQUErRCxDQUFDO0lBQ3pGLEtBQUssQ0FBQ0QsT0FBTyxDQUFDLENBQUM7RUFDakI7RUFFT0UsS0FBS0EsQ0FBQSxFQUFTO0lBQ25CLElBQUksQ0FBQ1IsZ0JBQWdCLENBQUNRLEtBQUssQ0FBQyxDQUFDO0VBQy9CO0FBQ0Y7QUFFQW5CLFdBQVcsQ0FBQ29CLFFBQVEsQ0FBRSxZQUFZLEVBQUVuQixVQUFXLENBQUMifQ==