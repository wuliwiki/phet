// Copyright 2013-2022, University of Colorado Boulder

/**
 * Fluid coming out of a faucet.
 * Origin is at the top center, to simplify alignment with the center of the faucet's output pipe.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import { Rectangle } from '../../../../scenery/js/imports.js';
import beersLawLab from '../../beersLawLab.js';
export default class FaucetFluidNode extends Rectangle {
  constructor(faucet, fluid, height, modelViewTransform) {
    super(0, 0, 0, 0, {
      lineWidth: 1,
      pickable: false
    });

    // Set the color of the fluid coming out of the spout.
    fluid.colorProperty.link(color => {
      this.fill = color;
      this.stroke = color.darkerColor();
    });

    // Set the width of the shape to match the flow rate.
    const viewPosition = modelViewTransform.modelToViewPosition(faucet.position);
    const viewHeight = modelViewTransform.modelToViewDeltaY(height);
    faucet.flowRateProperty.link(flowRate => {
      if (flowRate === 0) {
        this.setRect(0, 0, 0, 0);
      } else {
        const viewWidth = modelViewTransform.modelToViewDeltaX(faucet.spoutWidth * flowRate / faucet.maxFlowRate);
        this.setRect(viewPosition.x - viewWidth / 2, viewPosition.y, viewWidth, viewHeight);
      }
    });
  }
  dispose() {
    assert && assert(false, 'dispose is not supported, exists for the lifetime of the sim');
    super.dispose();
  }
}
beersLawLab.register('FaucetFluidNode', FaucetFluidNode);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWN0YW5nbGUiLCJiZWVyc0xhd0xhYiIsIkZhdWNldEZsdWlkTm9kZSIsImNvbnN0cnVjdG9yIiwiZmF1Y2V0IiwiZmx1aWQiLCJoZWlnaHQiLCJtb2RlbFZpZXdUcmFuc2Zvcm0iLCJsaW5lV2lkdGgiLCJwaWNrYWJsZSIsImNvbG9yUHJvcGVydHkiLCJsaW5rIiwiY29sb3IiLCJmaWxsIiwic3Ryb2tlIiwiZGFya2VyQ29sb3IiLCJ2aWV3UG9zaXRpb24iLCJtb2RlbFRvVmlld1Bvc2l0aW9uIiwicG9zaXRpb24iLCJ2aWV3SGVpZ2h0IiwibW9kZWxUb1ZpZXdEZWx0YVkiLCJmbG93UmF0ZVByb3BlcnR5IiwiZmxvd1JhdGUiLCJzZXRSZWN0Iiwidmlld1dpZHRoIiwibW9kZWxUb1ZpZXdEZWx0YVgiLCJzcG91dFdpZHRoIiwibWF4Rmxvd1JhdGUiLCJ4IiwieSIsImRpc3Bvc2UiLCJhc3NlcnQiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIkZhdWNldEZsdWlkTm9kZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxMy0yMDIyLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBGbHVpZCBjb21pbmcgb3V0IG9mIGEgZmF1Y2V0LlxyXG4gKiBPcmlnaW4gaXMgYXQgdGhlIHRvcCBjZW50ZXIsIHRvIHNpbXBsaWZ5IGFsaWdubWVudCB3aXRoIHRoZSBjZW50ZXIgb2YgdGhlIGZhdWNldCdzIG91dHB1dCBwaXBlLlxyXG4gKlxyXG4gKiBAYXV0aG9yIENocmlzIE1hbGxleSAoUGl4ZWxab29tLCBJbmMuKVxyXG4gKi9cclxuXHJcbmltcG9ydCBNb2RlbFZpZXdUcmFuc2Zvcm0yIGZyb20gJy4uLy4uLy4uLy4uL3BoZXRjb21tb24vanMvdmlldy9Nb2RlbFZpZXdUcmFuc2Zvcm0yLmpzJztcclxuaW1wb3J0IHsgUmVjdGFuZ2xlIH0gZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IGJlZXJzTGF3TGFiIGZyb20gJy4uLy4uL2JlZXJzTGF3TGFiLmpzJztcclxuaW1wb3J0IEZsdWlkIGZyb20gJy4uLy4uL2NvbW1vbi9tb2RlbC9GbHVpZC5qcyc7XHJcbmltcG9ydCBGYXVjZXQgZnJvbSAnLi4vbW9kZWwvRmF1Y2V0LmpzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZhdWNldEZsdWlkTm9kZSBleHRlbmRzIFJlY3RhbmdsZSB7XHJcblxyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvciggZmF1Y2V0OiBGYXVjZXQsIGZsdWlkOiBGbHVpZCwgaGVpZ2h0OiBudW1iZXIsIG1vZGVsVmlld1RyYW5zZm9ybTogTW9kZWxWaWV3VHJhbnNmb3JtMiApIHtcclxuXHJcbiAgICBzdXBlciggMCwgMCwgMCwgMCwgeyBsaW5lV2lkdGg6IDEsIHBpY2thYmxlOiBmYWxzZSB9ICk7XHJcblxyXG4gICAgLy8gU2V0IHRoZSBjb2xvciBvZiB0aGUgZmx1aWQgY29taW5nIG91dCBvZiB0aGUgc3BvdXQuXHJcbiAgICBmbHVpZC5jb2xvclByb3BlcnR5LmxpbmsoIGNvbG9yID0+IHtcclxuICAgICAgdGhpcy5maWxsID0gY29sb3I7XHJcbiAgICAgIHRoaXMuc3Ryb2tlID0gY29sb3IuZGFya2VyQ29sb3IoKTtcclxuICAgIH0gKTtcclxuXHJcbiAgICAvLyBTZXQgdGhlIHdpZHRoIG9mIHRoZSBzaGFwZSB0byBtYXRjaCB0aGUgZmxvdyByYXRlLlxyXG4gICAgY29uc3Qgdmlld1Bvc2l0aW9uID0gbW9kZWxWaWV3VHJhbnNmb3JtLm1vZGVsVG9WaWV3UG9zaXRpb24oIGZhdWNldC5wb3NpdGlvbiApO1xyXG4gICAgY29uc3Qgdmlld0hlaWdodCA9IG1vZGVsVmlld1RyYW5zZm9ybS5tb2RlbFRvVmlld0RlbHRhWSggaGVpZ2h0ICk7XHJcbiAgICBmYXVjZXQuZmxvd1JhdGVQcm9wZXJ0eS5saW5rKCBmbG93UmF0ZSA9PiB7XHJcbiAgICAgIGlmICggZmxvd1JhdGUgPT09IDAgKSB7XHJcbiAgICAgICAgdGhpcy5zZXRSZWN0KCAwLCAwLCAwLCAwICk7XHJcbiAgICAgIH1cclxuICAgICAgZWxzZSB7XHJcbiAgICAgICAgY29uc3Qgdmlld1dpZHRoID0gbW9kZWxWaWV3VHJhbnNmb3JtLm1vZGVsVG9WaWV3RGVsdGFYKCBmYXVjZXQuc3BvdXRXaWR0aCAqIGZsb3dSYXRlIC8gZmF1Y2V0Lm1heEZsb3dSYXRlICk7XHJcbiAgICAgICAgdGhpcy5zZXRSZWN0KCB2aWV3UG9zaXRpb24ueCAtICggdmlld1dpZHRoIC8gMiApLCB2aWV3UG9zaXRpb24ueSwgdmlld1dpZHRoLCB2aWV3SGVpZ2h0ICk7XHJcbiAgICAgIH1cclxuICAgIH0gKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBvdmVycmlkZSBkaXNwb3NlKCk6IHZvaWQge1xyXG4gICAgYXNzZXJ0ICYmIGFzc2VydCggZmFsc2UsICdkaXNwb3NlIGlzIG5vdCBzdXBwb3J0ZWQsIGV4aXN0cyBmb3IgdGhlIGxpZmV0aW1lIG9mIHRoZSBzaW0nICk7XHJcbiAgICBzdXBlci5kaXNwb3NlKCk7XHJcbiAgfVxyXG59XHJcblxyXG5iZWVyc0xhd0xhYi5yZWdpc3RlciggJ0ZhdWNldEZsdWlkTm9kZScsIEZhdWNldEZsdWlkTm9kZSApOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUdBLFNBQVNBLFNBQVMsUUFBUSxtQ0FBbUM7QUFDN0QsT0FBT0MsV0FBVyxNQUFNLHNCQUFzQjtBQUk5QyxlQUFlLE1BQU1DLGVBQWUsU0FBU0YsU0FBUyxDQUFDO0VBRTlDRyxXQUFXQSxDQUFFQyxNQUFjLEVBQUVDLEtBQVksRUFBRUMsTUFBYyxFQUFFQyxrQkFBdUMsRUFBRztJQUUxRyxLQUFLLENBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO01BQUVDLFNBQVMsRUFBRSxDQUFDO01BQUVDLFFBQVEsRUFBRTtJQUFNLENBQUUsQ0FBQzs7SUFFdEQ7SUFDQUosS0FBSyxDQUFDSyxhQUFhLENBQUNDLElBQUksQ0FBRUMsS0FBSyxJQUFJO01BQ2pDLElBQUksQ0FBQ0MsSUFBSSxHQUFHRCxLQUFLO01BQ2pCLElBQUksQ0FBQ0UsTUFBTSxHQUFHRixLQUFLLENBQUNHLFdBQVcsQ0FBQyxDQUFDO0lBQ25DLENBQUUsQ0FBQzs7SUFFSDtJQUNBLE1BQU1DLFlBQVksR0FBR1Qsa0JBQWtCLENBQUNVLG1CQUFtQixDQUFFYixNQUFNLENBQUNjLFFBQVMsQ0FBQztJQUM5RSxNQUFNQyxVQUFVLEdBQUdaLGtCQUFrQixDQUFDYSxpQkFBaUIsQ0FBRWQsTUFBTyxDQUFDO0lBQ2pFRixNQUFNLENBQUNpQixnQkFBZ0IsQ0FBQ1YsSUFBSSxDQUFFVyxRQUFRLElBQUk7TUFDeEMsSUFBS0EsUUFBUSxLQUFLLENBQUMsRUFBRztRQUNwQixJQUFJLENBQUNDLE9BQU8sQ0FBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFFLENBQUM7TUFDNUIsQ0FBQyxNQUNJO1FBQ0gsTUFBTUMsU0FBUyxHQUFHakIsa0JBQWtCLENBQUNrQixpQkFBaUIsQ0FBRXJCLE1BQU0sQ0FBQ3NCLFVBQVUsR0FBR0osUUFBUSxHQUFHbEIsTUFBTSxDQUFDdUIsV0FBWSxDQUFDO1FBQzNHLElBQUksQ0FBQ0osT0FBTyxDQUFFUCxZQUFZLENBQUNZLENBQUMsR0FBS0osU0FBUyxHQUFHLENBQUcsRUFBRVIsWUFBWSxDQUFDYSxDQUFDLEVBQUVMLFNBQVMsRUFBRUwsVUFBVyxDQUFDO01BQzNGO0lBQ0YsQ0FBRSxDQUFDO0VBQ0w7RUFFZ0JXLE9BQU9BLENBQUEsRUFBUztJQUM5QkMsTUFBTSxJQUFJQSxNQUFNLENBQUUsS0FBSyxFQUFFLDhEQUErRCxDQUFDO0lBQ3pGLEtBQUssQ0FBQ0QsT0FBTyxDQUFDLENBQUM7RUFDakI7QUFDRjtBQUVBN0IsV0FBVyxDQUFDK0IsUUFBUSxDQUFFLGlCQUFpQixFQUFFOUIsZUFBZ0IsQ0FBQyJ9