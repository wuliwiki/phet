// Copyright 2013-2022, University of Colorado Boulder

/**
 * Faucet node for this sim.
 * Handles scaling, and adapters our Faucet model to scenery-phet.FaucetNode.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import optionize from '../../../../phet-core/js/optionize.js';
import FaucetNode from '../../../../scenery-phet/js/FaucetNode.js';
import beersLawLab from '../../beersLawLab.js';
// constants
const SCALE = 0.75;
export default class BLLFaucetNode extends FaucetNode {
  constructor(faucet, modelViewTransform, providedOptions) {
    const horizontalPipeLength = modelViewTransform.modelToViewX(faucet.position.x - faucet.pipeMinX) / SCALE;
    const options = optionize()({
      // FaucetNodeOptions
      horizontalPipeLength: horizontalPipeLength,
      scale: SCALE,
      shooterOptions: {
        touchAreaXDilation: 37,
        touchAreaYDilation: 60
      }
    }, providedOptions);
    super(faucet.maxFlowRate, faucet.flowRateProperty, faucet.enabledProperty, options);
    this.translation = modelViewTransform.modelToViewPosition(faucet.position);
  }
  dispose() {
    assert && assert(false, 'dispose is not supported, exists for the lifetime of the sim');
    super.dispose();
  }
}
beersLawLab.register('BLLFaucetNode', BLLFaucetNode);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJvcHRpb25pemUiLCJGYXVjZXROb2RlIiwiYmVlcnNMYXdMYWIiLCJTQ0FMRSIsIkJMTEZhdWNldE5vZGUiLCJjb25zdHJ1Y3RvciIsImZhdWNldCIsIm1vZGVsVmlld1RyYW5zZm9ybSIsInByb3ZpZGVkT3B0aW9ucyIsImhvcml6b250YWxQaXBlTGVuZ3RoIiwibW9kZWxUb1ZpZXdYIiwicG9zaXRpb24iLCJ4IiwicGlwZU1pblgiLCJvcHRpb25zIiwic2NhbGUiLCJzaG9vdGVyT3B0aW9ucyIsInRvdWNoQXJlYVhEaWxhdGlvbiIsInRvdWNoQXJlYVlEaWxhdGlvbiIsIm1heEZsb3dSYXRlIiwiZmxvd1JhdGVQcm9wZXJ0eSIsImVuYWJsZWRQcm9wZXJ0eSIsInRyYW5zbGF0aW9uIiwibW9kZWxUb1ZpZXdQb3NpdGlvbiIsImRpc3Bvc2UiLCJhc3NlcnQiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIkJMTEZhdWNldE5vZGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTMtMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogRmF1Y2V0IG5vZGUgZm9yIHRoaXMgc2ltLlxyXG4gKiBIYW5kbGVzIHNjYWxpbmcsIGFuZCBhZGFwdGVycyBvdXIgRmF1Y2V0IG1vZGVsIHRvIHNjZW5lcnktcGhldC5GYXVjZXROb2RlLlxyXG4gKlxyXG4gKiBAYXV0aG9yIENocmlzIE1hbGxleSAoUGl4ZWxab29tLCBJbmMuKVxyXG4gKi9cclxuXHJcbmltcG9ydCBvcHRpb25pemUsIHsgRW1wdHlTZWxmT3B0aW9ucyB9IGZyb20gJy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy9vcHRpb25pemUuanMnO1xyXG5pbXBvcnQgUGlja1JlcXVpcmVkIGZyb20gJy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy90eXBlcy9QaWNrUmVxdWlyZWQuanMnO1xyXG5pbXBvcnQgTW9kZWxWaWV3VHJhbnNmb3JtMiBmcm9tICcuLi8uLi8uLi8uLi9waGV0Y29tbW9uL2pzL3ZpZXcvTW9kZWxWaWV3VHJhbnNmb3JtMi5qcyc7XHJcbmltcG9ydCBGYXVjZXROb2RlLCB7IEZhdWNldE5vZGVPcHRpb25zIH0gZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS1waGV0L2pzL0ZhdWNldE5vZGUuanMnO1xyXG5pbXBvcnQgYmVlcnNMYXdMYWIgZnJvbSAnLi4vLi4vYmVlcnNMYXdMYWIuanMnO1xyXG5pbXBvcnQgRmF1Y2V0IGZyb20gJy4uL21vZGVsL0ZhdWNldC5qcyc7XHJcblxyXG4vLyBjb25zdGFudHNcclxuY29uc3QgU0NBTEUgPSAwLjc1O1xyXG5cclxudHlwZSBTZWxmT3B0aW9ucyA9IEVtcHR5U2VsZk9wdGlvbnM7XHJcblxyXG50eXBlIEJMTEZhdWNldE5vZGVPcHRpb25zID0gU2VsZk9wdGlvbnMgJiBQaWNrUmVxdWlyZWQ8RmF1Y2V0Tm9kZU9wdGlvbnMsICd0YW5kZW0nPjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJMTEZhdWNldE5vZGUgZXh0ZW5kcyBGYXVjZXROb2RlIHtcclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKCBmYXVjZXQ6IEZhdWNldCwgbW9kZWxWaWV3VHJhbnNmb3JtOiBNb2RlbFZpZXdUcmFuc2Zvcm0yLCBwcm92aWRlZE9wdGlvbnM6IEJMTEZhdWNldE5vZGVPcHRpb25zICkge1xyXG5cclxuICAgIGNvbnN0IGhvcml6b250YWxQaXBlTGVuZ3RoID0gbW9kZWxWaWV3VHJhbnNmb3JtLm1vZGVsVG9WaWV3WCggZmF1Y2V0LnBvc2l0aW9uLnggLSBmYXVjZXQucGlwZU1pblggKSAvIFNDQUxFO1xyXG5cclxuICAgIGNvbnN0IG9wdGlvbnMgPSBvcHRpb25pemU8QkxMRmF1Y2V0Tm9kZU9wdGlvbnMsIFNlbGZPcHRpb25zLCBGYXVjZXROb2RlT3B0aW9ucz4oKSgge1xyXG5cclxuICAgICAgLy8gRmF1Y2V0Tm9kZU9wdGlvbnNcclxuICAgICAgaG9yaXpvbnRhbFBpcGVMZW5ndGg6IGhvcml6b250YWxQaXBlTGVuZ3RoLFxyXG4gICAgICBzY2FsZTogU0NBTEUsXHJcbiAgICAgIHNob290ZXJPcHRpb25zOiB7XHJcbiAgICAgICAgdG91Y2hBcmVhWERpbGF0aW9uOiAzNyxcclxuICAgICAgICB0b3VjaEFyZWFZRGlsYXRpb246IDYwXHJcbiAgICAgIH1cclxuICAgIH0sIHByb3ZpZGVkT3B0aW9ucyApO1xyXG5cclxuICAgIHN1cGVyKCBmYXVjZXQubWF4Rmxvd1JhdGUsIGZhdWNldC5mbG93UmF0ZVByb3BlcnR5LCBmYXVjZXQuZW5hYmxlZFByb3BlcnR5LCBvcHRpb25zICk7XHJcblxyXG4gICAgdGhpcy50cmFuc2xhdGlvbiA9IG1vZGVsVmlld1RyYW5zZm9ybS5tb2RlbFRvVmlld1Bvc2l0aW9uKCBmYXVjZXQucG9zaXRpb24gKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBvdmVycmlkZSBkaXNwb3NlKCk6IHZvaWQge1xyXG4gICAgYXNzZXJ0ICYmIGFzc2VydCggZmFsc2UsICdkaXNwb3NlIGlzIG5vdCBzdXBwb3J0ZWQsIGV4aXN0cyBmb3IgdGhlIGxpZmV0aW1lIG9mIHRoZSBzaW0nICk7XHJcbiAgICBzdXBlci5kaXNwb3NlKCk7XHJcbiAgfVxyXG59XHJcblxyXG5iZWVyc0xhd0xhYi5yZWdpc3RlciggJ0JMTEZhdWNldE5vZGUnLCBCTExGYXVjZXROb2RlICk7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsU0FBUyxNQUE0Qix1Q0FBdUM7QUFHbkYsT0FBT0MsVUFBVSxNQUE2QiwyQ0FBMkM7QUFDekYsT0FBT0MsV0FBVyxNQUFNLHNCQUFzQjtBQUc5QztBQUNBLE1BQU1DLEtBQUssR0FBRyxJQUFJO0FBTWxCLGVBQWUsTUFBTUMsYUFBYSxTQUFTSCxVQUFVLENBQUM7RUFFN0NJLFdBQVdBLENBQUVDLE1BQWMsRUFBRUMsa0JBQXVDLEVBQUVDLGVBQXFDLEVBQUc7SUFFbkgsTUFBTUMsb0JBQW9CLEdBQUdGLGtCQUFrQixDQUFDRyxZQUFZLENBQUVKLE1BQU0sQ0FBQ0ssUUFBUSxDQUFDQyxDQUFDLEdBQUdOLE1BQU0sQ0FBQ08sUUFBUyxDQUFDLEdBQUdWLEtBQUs7SUFFM0csTUFBTVcsT0FBTyxHQUFHZCxTQUFTLENBQXVELENBQUMsQ0FBRTtNQUVqRjtNQUNBUyxvQkFBb0IsRUFBRUEsb0JBQW9CO01BQzFDTSxLQUFLLEVBQUVaLEtBQUs7TUFDWmEsY0FBYyxFQUFFO1FBQ2RDLGtCQUFrQixFQUFFLEVBQUU7UUFDdEJDLGtCQUFrQixFQUFFO01BQ3RCO0lBQ0YsQ0FBQyxFQUFFVixlQUFnQixDQUFDO0lBRXBCLEtBQUssQ0FBRUYsTUFBTSxDQUFDYSxXQUFXLEVBQUViLE1BQU0sQ0FBQ2MsZ0JBQWdCLEVBQUVkLE1BQU0sQ0FBQ2UsZUFBZSxFQUFFUCxPQUFRLENBQUM7SUFFckYsSUFBSSxDQUFDUSxXQUFXLEdBQUdmLGtCQUFrQixDQUFDZ0IsbUJBQW1CLENBQUVqQixNQUFNLENBQUNLLFFBQVMsQ0FBQztFQUM5RTtFQUVnQmEsT0FBT0EsQ0FBQSxFQUFTO0lBQzlCQyxNQUFNLElBQUlBLE1BQU0sQ0FBRSxLQUFLLEVBQUUsOERBQStELENBQUM7SUFDekYsS0FBSyxDQUFDRCxPQUFPLENBQUMsQ0FBQztFQUNqQjtBQUNGO0FBRUF0QixXQUFXLENBQUN3QixRQUFRLENBQUUsZUFBZSxFQUFFdEIsYUFBYyxDQUFDIn0=