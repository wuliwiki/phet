// Copyright 2013-2022, University of Colorado Boulder

/**
 * The 'Concentration' screen. Conforms to the contract specified in joist/Screen.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import Screen from '../../../joist/js/Screen.js';
import ScreenIcon from '../../../joist/js/ScreenIcon.js';
import ModelViewTransform2 from '../../../phetcommon/js/view/ModelViewTransform2.js';
import { Image } from '../../../scenery/js/imports.js';
import concentrationScreenIcon_jpg from '../../images/concentrationScreenIcon_jpg.js';
import beersLawLab from '../beersLawLab.js';
import BeersLawLabStrings from '../BeersLawLabStrings.js';
import ConcentrationModel from './model/ConcentrationModel.js';
import ConcentrationScreenView from './view/ConcentrationScreenView.js';
export default class ConcentrationScreen extends Screen {
  constructor(tandem) {
    const options = {
      // ScreenOptions
      name: BeersLawLabStrings.screen.concentrationStringProperty,
      homeScreenIcon: createScreenIcon(),
      tandem: tandem
    };
    const modelViewTransform = ModelViewTransform2.createIdentity();
    super(() => new ConcentrationModel(options.tandem.createTandem('model')), model => new ConcentrationScreenView(model, modelViewTransform, options.tandem.createTandem('view')), options);
  }
}
function createScreenIcon() {
  return new ScreenIcon(new Image(concentrationScreenIcon_jpg), {
    maxIconWidthProportion: 1,
    maxIconHeightProportion: 1
  });
}
beersLawLab.register('ConcentrationScreen', ConcentrationScreen);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTY3JlZW4iLCJTY3JlZW5JY29uIiwiTW9kZWxWaWV3VHJhbnNmb3JtMiIsIkltYWdlIiwiY29uY2VudHJhdGlvblNjcmVlbkljb25fanBnIiwiYmVlcnNMYXdMYWIiLCJCZWVyc0xhd0xhYlN0cmluZ3MiLCJDb25jZW50cmF0aW9uTW9kZWwiLCJDb25jZW50cmF0aW9uU2NyZWVuVmlldyIsIkNvbmNlbnRyYXRpb25TY3JlZW4iLCJjb25zdHJ1Y3RvciIsInRhbmRlbSIsIm9wdGlvbnMiLCJuYW1lIiwic2NyZWVuIiwiY29uY2VudHJhdGlvblN0cmluZ1Byb3BlcnR5IiwiaG9tZVNjcmVlbkljb24iLCJjcmVhdGVTY3JlZW5JY29uIiwibW9kZWxWaWV3VHJhbnNmb3JtIiwiY3JlYXRlSWRlbnRpdHkiLCJjcmVhdGVUYW5kZW0iLCJtb2RlbCIsIm1heEljb25XaWR0aFByb3BvcnRpb24iLCJtYXhJY29uSGVpZ2h0UHJvcG9ydGlvbiIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiQ29uY2VudHJhdGlvblNjcmVlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxMy0yMDIyLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBUaGUgJ0NvbmNlbnRyYXRpb24nIHNjcmVlbi4gQ29uZm9ybXMgdG8gdGhlIGNvbnRyYWN0IHNwZWNpZmllZCBpbiBqb2lzdC9TY3JlZW4uXHJcbiAqXHJcbiAqIEBhdXRob3IgQ2hyaXMgTWFsbGV5IChQaXhlbFpvb20sIEluYy4pXHJcbiAqL1xyXG5cclxuaW1wb3J0IFNjcmVlbiBmcm9tICcuLi8uLi8uLi9qb2lzdC9qcy9TY3JlZW4uanMnO1xyXG5pbXBvcnQgU2NyZWVuSWNvbiBmcm9tICcuLi8uLi8uLi9qb2lzdC9qcy9TY3JlZW5JY29uLmpzJztcclxuaW1wb3J0IE1vZGVsVmlld1RyYW5zZm9ybTIgZnJvbSAnLi4vLi4vLi4vcGhldGNvbW1vbi9qcy92aWV3L01vZGVsVmlld1RyYW5zZm9ybTIuanMnO1xyXG5pbXBvcnQgeyBJbWFnZSB9IGZyb20gJy4uLy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XHJcbmltcG9ydCBUYW5kZW0gZnJvbSAnLi4vLi4vLi4vdGFuZGVtL2pzL1RhbmRlbS5qcyc7XHJcbmltcG9ydCBjb25jZW50cmF0aW9uU2NyZWVuSWNvbl9qcGcgZnJvbSAnLi4vLi4vaW1hZ2VzL2NvbmNlbnRyYXRpb25TY3JlZW5JY29uX2pwZy5qcyc7XHJcbmltcG9ydCBiZWVyc0xhd0xhYiBmcm9tICcuLi9iZWVyc0xhd0xhYi5qcyc7XHJcbmltcG9ydCBCZWVyc0xhd0xhYlN0cmluZ3MgZnJvbSAnLi4vQmVlcnNMYXdMYWJTdHJpbmdzLmpzJztcclxuaW1wb3J0IENvbmNlbnRyYXRpb25Nb2RlbCBmcm9tICcuL21vZGVsL0NvbmNlbnRyYXRpb25Nb2RlbC5qcyc7XHJcbmltcG9ydCBDb25jZW50cmF0aW9uU2NyZWVuVmlldyBmcm9tICcuL3ZpZXcvQ29uY2VudHJhdGlvblNjcmVlblZpZXcuanMnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ29uY2VudHJhdGlvblNjcmVlbiBleHRlbmRzIFNjcmVlbjxDb25jZW50cmF0aW9uTW9kZWwsIENvbmNlbnRyYXRpb25TY3JlZW5WaWV3PiB7XHJcblxyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvciggdGFuZGVtOiBUYW5kZW0gKSB7XHJcblxyXG4gICAgY29uc3Qgb3B0aW9ucyA9IHtcclxuXHJcbiAgICAgIC8vIFNjcmVlbk9wdGlvbnNcclxuICAgICAgbmFtZTogQmVlcnNMYXdMYWJTdHJpbmdzLnNjcmVlbi5jb25jZW50cmF0aW9uU3RyaW5nUHJvcGVydHksXHJcbiAgICAgIGhvbWVTY3JlZW5JY29uOiBjcmVhdGVTY3JlZW5JY29uKCksXHJcbiAgICAgIHRhbmRlbTogdGFuZGVtXHJcbiAgICB9O1xyXG5cclxuICAgIGNvbnN0IG1vZGVsVmlld1RyYW5zZm9ybSA9IE1vZGVsVmlld1RyYW5zZm9ybTIuY3JlYXRlSWRlbnRpdHkoKTtcclxuXHJcbiAgICBzdXBlcihcclxuICAgICAgKCkgPT4gbmV3IENvbmNlbnRyYXRpb25Nb2RlbCggb3B0aW9ucy50YW5kZW0uY3JlYXRlVGFuZGVtKCAnbW9kZWwnICkgKSxcclxuICAgICAgbW9kZWwgPT4gbmV3IENvbmNlbnRyYXRpb25TY3JlZW5WaWV3KCBtb2RlbCwgbW9kZWxWaWV3VHJhbnNmb3JtLCBvcHRpb25zLnRhbmRlbS5jcmVhdGVUYW5kZW0oICd2aWV3JyApICksXHJcbiAgICAgIG9wdGlvbnNcclxuICAgICk7XHJcbiAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBjcmVhdGVTY3JlZW5JY29uKCk6IFNjcmVlbkljb24ge1xyXG4gIHJldHVybiBuZXcgU2NyZWVuSWNvbiggbmV3IEltYWdlKCBjb25jZW50cmF0aW9uU2NyZWVuSWNvbl9qcGcgKSwge1xyXG4gICAgbWF4SWNvbldpZHRoUHJvcG9ydGlvbjogMSxcclxuICAgIG1heEljb25IZWlnaHRQcm9wb3J0aW9uOiAxXHJcbiAgfSApO1xyXG59XHJcblxyXG5iZWVyc0xhd0xhYi5yZWdpc3RlciggJ0NvbmNlbnRyYXRpb25TY3JlZW4nLCBDb25jZW50cmF0aW9uU2NyZWVuICk7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLE1BQU0sTUFBTSw2QkFBNkI7QUFDaEQsT0FBT0MsVUFBVSxNQUFNLGlDQUFpQztBQUN4RCxPQUFPQyxtQkFBbUIsTUFBTSxvREFBb0Q7QUFDcEYsU0FBU0MsS0FBSyxRQUFRLGdDQUFnQztBQUV0RCxPQUFPQywyQkFBMkIsTUFBTSw2Q0FBNkM7QUFDckYsT0FBT0MsV0FBVyxNQUFNLG1CQUFtQjtBQUMzQyxPQUFPQyxrQkFBa0IsTUFBTSwwQkFBMEI7QUFDekQsT0FBT0Msa0JBQWtCLE1BQU0sK0JBQStCO0FBQzlELE9BQU9DLHVCQUF1QixNQUFNLG1DQUFtQztBQUV2RSxlQUFlLE1BQU1DLG1CQUFtQixTQUFTVCxNQUFNLENBQThDO0VBRTVGVSxXQUFXQSxDQUFFQyxNQUFjLEVBQUc7SUFFbkMsTUFBTUMsT0FBTyxHQUFHO01BRWQ7TUFDQUMsSUFBSSxFQUFFUCxrQkFBa0IsQ0FBQ1EsTUFBTSxDQUFDQywyQkFBMkI7TUFDM0RDLGNBQWMsRUFBRUMsZ0JBQWdCLENBQUMsQ0FBQztNQUNsQ04sTUFBTSxFQUFFQTtJQUNWLENBQUM7SUFFRCxNQUFNTyxrQkFBa0IsR0FBR2hCLG1CQUFtQixDQUFDaUIsY0FBYyxDQUFDLENBQUM7SUFFL0QsS0FBSyxDQUNILE1BQU0sSUFBSVosa0JBQWtCLENBQUVLLE9BQU8sQ0FBQ0QsTUFBTSxDQUFDUyxZQUFZLENBQUUsT0FBUSxDQUFFLENBQUMsRUFDdEVDLEtBQUssSUFBSSxJQUFJYix1QkFBdUIsQ0FBRWEsS0FBSyxFQUFFSCxrQkFBa0IsRUFBRU4sT0FBTyxDQUFDRCxNQUFNLENBQUNTLFlBQVksQ0FBRSxNQUFPLENBQUUsQ0FBQyxFQUN4R1IsT0FDRixDQUFDO0VBQ0g7QUFDRjtBQUVBLFNBQVNLLGdCQUFnQkEsQ0FBQSxFQUFlO0VBQ3RDLE9BQU8sSUFBSWhCLFVBQVUsQ0FBRSxJQUFJRSxLQUFLLENBQUVDLDJCQUE0QixDQUFDLEVBQUU7SUFDL0RrQixzQkFBc0IsRUFBRSxDQUFDO0lBQ3pCQyx1QkFBdUIsRUFBRTtFQUMzQixDQUFFLENBQUM7QUFDTDtBQUVBbEIsV0FBVyxDQUFDbUIsUUFBUSxDQUFFLHFCQUFxQixFQUFFZixtQkFBb0IsQ0FBQyJ9