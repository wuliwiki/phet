// Copyright 2013-2023, University of Colorado Boulder

/**
 * Visual representation of the light in the Beer's Law screen.
 * Origin is at the right center, where the light comes out of the 'housing'.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import Dimension2 from '../../../../dot/js/Dimension2.js';
import optionize from '../../../../phet-core/js/optionize.js';
import LaserPointerNode from '../../../../scenery-phet/js/LaserPointerNode.js';
import beersLawLab from '../../beersLawLab.js';
export default class LightNode extends LaserPointerNode {
  constructor(light, modelViewTransform, providedOptions) {
    const options = optionize()({
      // LaserPointerNodeOptions
      bodySize: new Dimension2(126, 78),
      nozzleSize: new Dimension2(16, 65),
      buttonRadius: 26,
      buttonTouchAreaDilation: 25,
      translation: modelViewTransform.modelToViewPosition(light.position),
      phetioVisiblePropertyInstrumented: false // see https://github.com/phetsims/beers-law-lab/issues/310
    }, providedOptions);
    super(light.isOnProperty, options);
    this.addLinkedElement(light, {
      tandem: options.tandem.createTandem('light')
    });
  }
  dispose() {
    assert && assert(false, 'dispose is not supported, exists for the lifetime of the sim');
    super.dispose();
  }
}
beersLawLab.register('LightNode', LightNode);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJEaW1lbnNpb24yIiwib3B0aW9uaXplIiwiTGFzZXJQb2ludGVyTm9kZSIsImJlZXJzTGF3TGFiIiwiTGlnaHROb2RlIiwiY29uc3RydWN0b3IiLCJsaWdodCIsIm1vZGVsVmlld1RyYW5zZm9ybSIsInByb3ZpZGVkT3B0aW9ucyIsIm9wdGlvbnMiLCJib2R5U2l6ZSIsIm5venpsZVNpemUiLCJidXR0b25SYWRpdXMiLCJidXR0b25Ub3VjaEFyZWFEaWxhdGlvbiIsInRyYW5zbGF0aW9uIiwibW9kZWxUb1ZpZXdQb3NpdGlvbiIsInBvc2l0aW9uIiwicGhldGlvVmlzaWJsZVByb3BlcnR5SW5zdHJ1bWVudGVkIiwiaXNPblByb3BlcnR5IiwiYWRkTGlua2VkRWxlbWVudCIsInRhbmRlbSIsImNyZWF0ZVRhbmRlbSIsImRpc3Bvc2UiLCJhc3NlcnQiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIkxpZ2h0Tm9kZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxMy0yMDIzLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBWaXN1YWwgcmVwcmVzZW50YXRpb24gb2YgdGhlIGxpZ2h0IGluIHRoZSBCZWVyJ3MgTGF3IHNjcmVlbi5cclxuICogT3JpZ2luIGlzIGF0IHRoZSByaWdodCBjZW50ZXIsIHdoZXJlIHRoZSBsaWdodCBjb21lcyBvdXQgb2YgdGhlICdob3VzaW5nJy5cclxuICpcclxuICogQGF1dGhvciBDaHJpcyBNYWxsZXkgKFBpeGVsWm9vbSwgSW5jLilcclxuICovXHJcblxyXG5pbXBvcnQgRGltZW5zaW9uMiBmcm9tICcuLi8uLi8uLi8uLi9kb3QvanMvRGltZW5zaW9uMi5qcyc7XHJcbmltcG9ydCBvcHRpb25pemUsIHsgRW1wdHlTZWxmT3B0aW9ucyB9IGZyb20gJy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy9vcHRpb25pemUuanMnO1xyXG5pbXBvcnQgUGlja1JlcXVpcmVkIGZyb20gJy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy90eXBlcy9QaWNrUmVxdWlyZWQuanMnO1xyXG5pbXBvcnQgTW9kZWxWaWV3VHJhbnNmb3JtMiBmcm9tICcuLi8uLi8uLi8uLi9waGV0Y29tbW9uL2pzL3ZpZXcvTW9kZWxWaWV3VHJhbnNmb3JtMi5qcyc7XHJcbmltcG9ydCBMYXNlclBvaW50ZXJOb2RlLCB7IExhc2VyUG9pbnRlck5vZGVPcHRpb25zIH0gZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS1waGV0L2pzL0xhc2VyUG9pbnRlck5vZGUuanMnO1xyXG5pbXBvcnQgYmVlcnNMYXdMYWIgZnJvbSAnLi4vLi4vYmVlcnNMYXdMYWIuanMnO1xyXG5pbXBvcnQgTGlnaHQgZnJvbSAnLi4vbW9kZWwvTGlnaHQuanMnO1xyXG5cclxudHlwZSBTZWxmT3B0aW9ucyA9IEVtcHR5U2VsZk9wdGlvbnM7XHJcblxyXG50eXBlIExpZ2h0Tm9kZU9wdGlvbnMgPSBTZWxmT3B0aW9ucyAmIFBpY2tSZXF1aXJlZDxMYXNlclBvaW50ZXJOb2RlT3B0aW9ucywgJ3RhbmRlbSc+O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTGlnaHROb2RlIGV4dGVuZHMgTGFzZXJQb2ludGVyTm9kZSB7XHJcblxyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvciggbGlnaHQ6IExpZ2h0LCBtb2RlbFZpZXdUcmFuc2Zvcm06IE1vZGVsVmlld1RyYW5zZm9ybTIsIHByb3ZpZGVkT3B0aW9uczogTGlnaHROb2RlT3B0aW9ucyApIHtcclxuXHJcbiAgICBjb25zdCBvcHRpb25zID0gb3B0aW9uaXplPExpZ2h0Tm9kZU9wdGlvbnMsIFNlbGZPcHRpb25zLCBMYXNlclBvaW50ZXJOb2RlT3B0aW9ucz4oKSgge1xyXG5cclxuICAgICAgLy8gTGFzZXJQb2ludGVyTm9kZU9wdGlvbnNcclxuICAgICAgYm9keVNpemU6IG5ldyBEaW1lbnNpb24yKCAxMjYsIDc4ICksXHJcbiAgICAgIG5venpsZVNpemU6IG5ldyBEaW1lbnNpb24yKCAxNiwgNjUgKSxcclxuICAgICAgYnV0dG9uUmFkaXVzOiAyNixcclxuICAgICAgYnV0dG9uVG91Y2hBcmVhRGlsYXRpb246IDI1LFxyXG4gICAgICB0cmFuc2xhdGlvbjogbW9kZWxWaWV3VHJhbnNmb3JtLm1vZGVsVG9WaWV3UG9zaXRpb24oIGxpZ2h0LnBvc2l0aW9uICksXHJcbiAgICAgIHBoZXRpb1Zpc2libGVQcm9wZXJ0eUluc3RydW1lbnRlZDogZmFsc2UgLy8gc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9waGV0c2ltcy9iZWVycy1sYXctbGFiL2lzc3Vlcy8zMTBcclxuICAgIH0sIHByb3ZpZGVkT3B0aW9ucyApO1xyXG5cclxuICAgIHN1cGVyKCBsaWdodC5pc09uUHJvcGVydHksIG9wdGlvbnMgKTtcclxuXHJcbiAgICB0aGlzLmFkZExpbmtlZEVsZW1lbnQoIGxpZ2h0LCB7XHJcbiAgICAgIHRhbmRlbTogb3B0aW9ucy50YW5kZW0uY3JlYXRlVGFuZGVtKCAnbGlnaHQnIClcclxuICAgIH0gKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBvdmVycmlkZSBkaXNwb3NlKCk6IHZvaWQge1xyXG4gICAgYXNzZXJ0ICYmIGFzc2VydCggZmFsc2UsICdkaXNwb3NlIGlzIG5vdCBzdXBwb3J0ZWQsIGV4aXN0cyBmb3IgdGhlIGxpZmV0aW1lIG9mIHRoZSBzaW0nICk7XHJcbiAgICBzdXBlci5kaXNwb3NlKCk7XHJcbiAgfVxyXG59XHJcblxyXG5iZWVyc0xhd0xhYi5yZWdpc3RlciggJ0xpZ2h0Tm9kZScsIExpZ2h0Tm9kZSApOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLFVBQVUsTUFBTSxrQ0FBa0M7QUFDekQsT0FBT0MsU0FBUyxNQUE0Qix1Q0FBdUM7QUFHbkYsT0FBT0MsZ0JBQWdCLE1BQW1DLGlEQUFpRDtBQUMzRyxPQUFPQyxXQUFXLE1BQU0sc0JBQXNCO0FBTzlDLGVBQWUsTUFBTUMsU0FBUyxTQUFTRixnQkFBZ0IsQ0FBQztFQUUvQ0csV0FBV0EsQ0FBRUMsS0FBWSxFQUFFQyxrQkFBdUMsRUFBRUMsZUFBaUMsRUFBRztJQUU3RyxNQUFNQyxPQUFPLEdBQUdSLFNBQVMsQ0FBeUQsQ0FBQyxDQUFFO01BRW5GO01BQ0FTLFFBQVEsRUFBRSxJQUFJVixVQUFVLENBQUUsR0FBRyxFQUFFLEVBQUcsQ0FBQztNQUNuQ1csVUFBVSxFQUFFLElBQUlYLFVBQVUsQ0FBRSxFQUFFLEVBQUUsRUFBRyxDQUFDO01BQ3BDWSxZQUFZLEVBQUUsRUFBRTtNQUNoQkMsdUJBQXVCLEVBQUUsRUFBRTtNQUMzQkMsV0FBVyxFQUFFUCxrQkFBa0IsQ0FBQ1EsbUJBQW1CLENBQUVULEtBQUssQ0FBQ1UsUUFBUyxDQUFDO01BQ3JFQyxpQ0FBaUMsRUFBRSxLQUFLLENBQUM7SUFDM0MsQ0FBQyxFQUFFVCxlQUFnQixDQUFDO0lBRXBCLEtBQUssQ0FBRUYsS0FBSyxDQUFDWSxZQUFZLEVBQUVULE9BQVEsQ0FBQztJQUVwQyxJQUFJLENBQUNVLGdCQUFnQixDQUFFYixLQUFLLEVBQUU7TUFDNUJjLE1BQU0sRUFBRVgsT0FBTyxDQUFDVyxNQUFNLENBQUNDLFlBQVksQ0FBRSxPQUFRO0lBQy9DLENBQUUsQ0FBQztFQUNMO0VBRWdCQyxPQUFPQSxDQUFBLEVBQVM7SUFDOUJDLE1BQU0sSUFBSUEsTUFBTSxDQUFFLEtBQUssRUFBRSw4REFBK0QsQ0FBQztJQUN6RixLQUFLLENBQUNELE9BQU8sQ0FBQyxDQUFDO0VBQ2pCO0FBQ0Y7QUFFQW5CLFdBQVcsQ0FBQ3FCLFFBQVEsQ0FBRSxXQUFXLEVBQUVwQixTQUFVLENBQUMifQ==