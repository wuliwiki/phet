// Copyright 2019-2022, University of Colorado Boulder

/**
 * sound generator used to indicate changes to the selected solute
 *
 * @author John Blanco (PhET Interactive Simulations)
 */

import MultiClip from '../../../../tambo/js/sound-generators/MultiClip.js';
import selectionArpeggio001_mp3 from '../../../../tambo/sounds/selectionArpeggio001_mp3.js';
import selectionArpeggio002_mp3 from '../../../../tambo/sounds/selectionArpeggio002_mp3.js';
import selectionArpeggio003_mp3 from '../../../../tambo/sounds/selectionArpeggio003_mp3.js';
import selectionArpeggio004_mp3 from '../../../../tambo/sounds/selectionArpeggio004_mp3.js';
import selectionArpeggio005_mp3 from '../../../../tambo/sounds/selectionArpeggio005_mp3.js';
import selectionArpeggio006_mp3 from '../../../../tambo/sounds/selectionArpeggio006_mp3.js';
import selectionArpeggio007_mp3 from '../../../../tambo/sounds/selectionArpeggio007_mp3.js';
import selectionArpeggio008_mp3 from '../../../../tambo/sounds/selectionArpeggio008_mp3.js';
import selectionArpeggio009_mp3 from '../../../../tambo/sounds/selectionArpeggio009_mp3.js';
import molarity from '../../molarity.js';

// sounds
const selectionSounds = [selectionArpeggio001_mp3, selectionArpeggio002_mp3, selectionArpeggio003_mp3, selectionArpeggio004_mp3, selectionArpeggio005_mp3, selectionArpeggio006_mp3, selectionArpeggio007_mp3, selectionArpeggio008_mp3, selectionArpeggio009_mp3];
class SoluteSelectionSoundGenerator extends MultiClip {
  /**
   * @param {Property.<Solute>} soluteProperty
   * @param {Solute[]} solutes - a list of the values that soluteProperty can take on
   * @param {Property.<boolean>} resetInProgressProperty - indicates when a reset is happening, used to mute sounds
   * @param {Object} [options]
   */
  constructor(soluteProperty, solutes, resetInProgressProperty, options) {
    // the number of solutes needs to match the number of available sounds
    assert && assert(solutes.length === selectionSounds.length, 'the number of solutes must match the number of selection sounds');

    // map the solutes to the sounds
    const soluteToSoundMap = new Map();
    solutes.forEach((solute, index) => {
      soluteToSoundMap.set(solute, selectionSounds[index]);
    });
    super(soluteToSoundMap, options);

    // play a sound when the solute change unless a reset is in progress
    soluteProperty.lazyLink(solute => {
      if (!resetInProgressProperty.value) {
        this.playAssociatedSound(solute);
      }
    });
  }
}
molarity.register('SoluteSelectionSoundGenerator', SoluteSelectionSoundGenerator);
export default SoluteSelectionSoundGenerator;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJNdWx0aUNsaXAiLCJzZWxlY3Rpb25BcnBlZ2dpbzAwMV9tcDMiLCJzZWxlY3Rpb25BcnBlZ2dpbzAwMl9tcDMiLCJzZWxlY3Rpb25BcnBlZ2dpbzAwM19tcDMiLCJzZWxlY3Rpb25BcnBlZ2dpbzAwNF9tcDMiLCJzZWxlY3Rpb25BcnBlZ2dpbzAwNV9tcDMiLCJzZWxlY3Rpb25BcnBlZ2dpbzAwNl9tcDMiLCJzZWxlY3Rpb25BcnBlZ2dpbzAwN19tcDMiLCJzZWxlY3Rpb25BcnBlZ2dpbzAwOF9tcDMiLCJzZWxlY3Rpb25BcnBlZ2dpbzAwOV9tcDMiLCJtb2xhcml0eSIsInNlbGVjdGlvblNvdW5kcyIsIlNvbHV0ZVNlbGVjdGlvblNvdW5kR2VuZXJhdG9yIiwiY29uc3RydWN0b3IiLCJzb2x1dGVQcm9wZXJ0eSIsInNvbHV0ZXMiLCJyZXNldEluUHJvZ3Jlc3NQcm9wZXJ0eSIsIm9wdGlvbnMiLCJhc3NlcnQiLCJsZW5ndGgiLCJzb2x1dGVUb1NvdW5kTWFwIiwiTWFwIiwiZm9yRWFjaCIsInNvbHV0ZSIsImluZGV4Iiwic2V0IiwibGF6eUxpbmsiLCJ2YWx1ZSIsInBsYXlBc3NvY2lhdGVkU291bmQiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIlNvbHV0ZVNlbGVjdGlvblNvdW5kR2VuZXJhdG9yLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE5LTIwMjIsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIHNvdW5kIGdlbmVyYXRvciB1c2VkIHRvIGluZGljYXRlIGNoYW5nZXMgdG8gdGhlIHNlbGVjdGVkIHNvbHV0ZVxyXG4gKlxyXG4gKiBAYXV0aG9yIEpvaG4gQmxhbmNvIChQaEVUIEludGVyYWN0aXZlIFNpbXVsYXRpb25zKVxyXG4gKi9cclxuXHJcbmltcG9ydCBNdWx0aUNsaXAgZnJvbSAnLi4vLi4vLi4vLi4vdGFtYm8vanMvc291bmQtZ2VuZXJhdG9ycy9NdWx0aUNsaXAuanMnO1xyXG5pbXBvcnQgc2VsZWN0aW9uQXJwZWdnaW8wMDFfbXAzIGZyb20gJy4uLy4uLy4uLy4uL3RhbWJvL3NvdW5kcy9zZWxlY3Rpb25BcnBlZ2dpbzAwMV9tcDMuanMnO1xyXG5pbXBvcnQgc2VsZWN0aW9uQXJwZWdnaW8wMDJfbXAzIGZyb20gJy4uLy4uLy4uLy4uL3RhbWJvL3NvdW5kcy9zZWxlY3Rpb25BcnBlZ2dpbzAwMl9tcDMuanMnO1xyXG5pbXBvcnQgc2VsZWN0aW9uQXJwZWdnaW8wMDNfbXAzIGZyb20gJy4uLy4uLy4uLy4uL3RhbWJvL3NvdW5kcy9zZWxlY3Rpb25BcnBlZ2dpbzAwM19tcDMuanMnO1xyXG5pbXBvcnQgc2VsZWN0aW9uQXJwZWdnaW8wMDRfbXAzIGZyb20gJy4uLy4uLy4uLy4uL3RhbWJvL3NvdW5kcy9zZWxlY3Rpb25BcnBlZ2dpbzAwNF9tcDMuanMnO1xyXG5pbXBvcnQgc2VsZWN0aW9uQXJwZWdnaW8wMDVfbXAzIGZyb20gJy4uLy4uLy4uLy4uL3RhbWJvL3NvdW5kcy9zZWxlY3Rpb25BcnBlZ2dpbzAwNV9tcDMuanMnO1xyXG5pbXBvcnQgc2VsZWN0aW9uQXJwZWdnaW8wMDZfbXAzIGZyb20gJy4uLy4uLy4uLy4uL3RhbWJvL3NvdW5kcy9zZWxlY3Rpb25BcnBlZ2dpbzAwNl9tcDMuanMnO1xyXG5pbXBvcnQgc2VsZWN0aW9uQXJwZWdnaW8wMDdfbXAzIGZyb20gJy4uLy4uLy4uLy4uL3RhbWJvL3NvdW5kcy9zZWxlY3Rpb25BcnBlZ2dpbzAwN19tcDMuanMnO1xyXG5pbXBvcnQgc2VsZWN0aW9uQXJwZWdnaW8wMDhfbXAzIGZyb20gJy4uLy4uLy4uLy4uL3RhbWJvL3NvdW5kcy9zZWxlY3Rpb25BcnBlZ2dpbzAwOF9tcDMuanMnO1xyXG5pbXBvcnQgc2VsZWN0aW9uQXJwZWdnaW8wMDlfbXAzIGZyb20gJy4uLy4uLy4uLy4uL3RhbWJvL3NvdW5kcy9zZWxlY3Rpb25BcnBlZ2dpbzAwOV9tcDMuanMnO1xyXG5pbXBvcnQgbW9sYXJpdHkgZnJvbSAnLi4vLi4vbW9sYXJpdHkuanMnO1xyXG5cclxuLy8gc291bmRzXHJcbmNvbnN0IHNlbGVjdGlvblNvdW5kcyA9IFtcclxuICBzZWxlY3Rpb25BcnBlZ2dpbzAwMV9tcDMsXHJcbiAgc2VsZWN0aW9uQXJwZWdnaW8wMDJfbXAzLFxyXG4gIHNlbGVjdGlvbkFycGVnZ2lvMDAzX21wMyxcclxuICBzZWxlY3Rpb25BcnBlZ2dpbzAwNF9tcDMsXHJcbiAgc2VsZWN0aW9uQXJwZWdnaW8wMDVfbXAzLFxyXG4gIHNlbGVjdGlvbkFycGVnZ2lvMDA2X21wMyxcclxuICBzZWxlY3Rpb25BcnBlZ2dpbzAwN19tcDMsXHJcbiAgc2VsZWN0aW9uQXJwZWdnaW8wMDhfbXAzLFxyXG4gIHNlbGVjdGlvbkFycGVnZ2lvMDA5X21wM1xyXG5dO1xyXG5cclxuY2xhc3MgU29sdXRlU2VsZWN0aW9uU291bmRHZW5lcmF0b3IgZXh0ZW5kcyBNdWx0aUNsaXAge1xyXG5cclxuICAvKipcclxuICAgKiBAcGFyYW0ge1Byb3BlcnR5LjxTb2x1dGU+fSBzb2x1dGVQcm9wZXJ0eVxyXG4gICAqIEBwYXJhbSB7U29sdXRlW119IHNvbHV0ZXMgLSBhIGxpc3Qgb2YgdGhlIHZhbHVlcyB0aGF0IHNvbHV0ZVByb3BlcnR5IGNhbiB0YWtlIG9uXHJcbiAgICogQHBhcmFtIHtQcm9wZXJ0eS48Ym9vbGVhbj59IHJlc2V0SW5Qcm9ncmVzc1Byb3BlcnR5IC0gaW5kaWNhdGVzIHdoZW4gYSByZXNldCBpcyBoYXBwZW5pbmcsIHVzZWQgdG8gbXV0ZSBzb3VuZHNcclxuICAgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXHJcbiAgICovXHJcbiAgY29uc3RydWN0b3IoIHNvbHV0ZVByb3BlcnR5LCBzb2x1dGVzLCByZXNldEluUHJvZ3Jlc3NQcm9wZXJ0eSwgb3B0aW9ucyApIHtcclxuXHJcbiAgICAvLyB0aGUgbnVtYmVyIG9mIHNvbHV0ZXMgbmVlZHMgdG8gbWF0Y2ggdGhlIG51bWJlciBvZiBhdmFpbGFibGUgc291bmRzXHJcbiAgICBhc3NlcnQgJiYgYXNzZXJ0KCBzb2x1dGVzLmxlbmd0aCA9PT0gc2VsZWN0aW9uU291bmRzLmxlbmd0aCwgJ3RoZSBudW1iZXIgb2Ygc29sdXRlcyBtdXN0IG1hdGNoIHRoZSBudW1iZXIgb2Ygc2VsZWN0aW9uIHNvdW5kcycgKTtcclxuXHJcbiAgICAvLyBtYXAgdGhlIHNvbHV0ZXMgdG8gdGhlIHNvdW5kc1xyXG4gICAgY29uc3Qgc29sdXRlVG9Tb3VuZE1hcCA9IG5ldyBNYXAoKTtcclxuICAgIHNvbHV0ZXMuZm9yRWFjaCggKCBzb2x1dGUsIGluZGV4ICkgPT4ge1xyXG4gICAgICBzb2x1dGVUb1NvdW5kTWFwLnNldCggc29sdXRlLCBzZWxlY3Rpb25Tb3VuZHNbIGluZGV4IF0gKTtcclxuICAgIH0gKTtcclxuICAgIHN1cGVyKCBzb2x1dGVUb1NvdW5kTWFwLCBvcHRpb25zICk7XHJcblxyXG4gICAgLy8gcGxheSBhIHNvdW5kIHdoZW4gdGhlIHNvbHV0ZSBjaGFuZ2UgdW5sZXNzIGEgcmVzZXQgaXMgaW4gcHJvZ3Jlc3NcclxuICAgIHNvbHV0ZVByb3BlcnR5LmxhenlMaW5rKCBzb2x1dGUgPT4ge1xyXG5cclxuICAgICAgaWYgKCAhcmVzZXRJblByb2dyZXNzUHJvcGVydHkudmFsdWUgKSB7XHJcbiAgICAgICAgdGhpcy5wbGF5QXNzb2NpYXRlZFNvdW5kKCBzb2x1dGUgKTtcclxuICAgICAgfVxyXG4gICAgfSApO1xyXG4gIH1cclxufVxyXG5cclxubW9sYXJpdHkucmVnaXN0ZXIoICdTb2x1dGVTZWxlY3Rpb25Tb3VuZEdlbmVyYXRvcicsIFNvbHV0ZVNlbGVjdGlvblNvdW5kR2VuZXJhdG9yICk7XHJcbmV4cG9ydCBkZWZhdWx0IFNvbHV0ZVNlbGVjdGlvblNvdW5kR2VuZXJhdG9yOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxTQUFTLE1BQU0sb0RBQW9EO0FBQzFFLE9BQU9DLHdCQUF3QixNQUFNLHNEQUFzRDtBQUMzRixPQUFPQyx3QkFBd0IsTUFBTSxzREFBc0Q7QUFDM0YsT0FBT0Msd0JBQXdCLE1BQU0sc0RBQXNEO0FBQzNGLE9BQU9DLHdCQUF3QixNQUFNLHNEQUFzRDtBQUMzRixPQUFPQyx3QkFBd0IsTUFBTSxzREFBc0Q7QUFDM0YsT0FBT0Msd0JBQXdCLE1BQU0sc0RBQXNEO0FBQzNGLE9BQU9DLHdCQUF3QixNQUFNLHNEQUFzRDtBQUMzRixPQUFPQyx3QkFBd0IsTUFBTSxzREFBc0Q7QUFDM0YsT0FBT0Msd0JBQXdCLE1BQU0sc0RBQXNEO0FBQzNGLE9BQU9DLFFBQVEsTUFBTSxtQkFBbUI7O0FBRXhDO0FBQ0EsTUFBTUMsZUFBZSxHQUFHLENBQ3RCVix3QkFBd0IsRUFDeEJDLHdCQUF3QixFQUN4QkMsd0JBQXdCLEVBQ3hCQyx3QkFBd0IsRUFDeEJDLHdCQUF3QixFQUN4QkMsd0JBQXdCLEVBQ3hCQyx3QkFBd0IsRUFDeEJDLHdCQUF3QixFQUN4QkMsd0JBQXdCLENBQ3pCO0FBRUQsTUFBTUcsNkJBQTZCLFNBQVNaLFNBQVMsQ0FBQztFQUVwRDtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7RUFDRWEsV0FBV0EsQ0FBRUMsY0FBYyxFQUFFQyxPQUFPLEVBQUVDLHVCQUF1QixFQUFFQyxPQUFPLEVBQUc7SUFFdkU7SUFDQUMsTUFBTSxJQUFJQSxNQUFNLENBQUVILE9BQU8sQ0FBQ0ksTUFBTSxLQUFLUixlQUFlLENBQUNRLE1BQU0sRUFBRSxpRUFBa0UsQ0FBQzs7SUFFaEk7SUFDQSxNQUFNQyxnQkFBZ0IsR0FBRyxJQUFJQyxHQUFHLENBQUMsQ0FBQztJQUNsQ04sT0FBTyxDQUFDTyxPQUFPLENBQUUsQ0FBRUMsTUFBTSxFQUFFQyxLQUFLLEtBQU07TUFDcENKLGdCQUFnQixDQUFDSyxHQUFHLENBQUVGLE1BQU0sRUFBRVosZUFBZSxDQUFFYSxLQUFLLENBQUcsQ0FBQztJQUMxRCxDQUFFLENBQUM7SUFDSCxLQUFLLENBQUVKLGdCQUFnQixFQUFFSCxPQUFRLENBQUM7O0lBRWxDO0lBQ0FILGNBQWMsQ0FBQ1ksUUFBUSxDQUFFSCxNQUFNLElBQUk7TUFFakMsSUFBSyxDQUFDUCx1QkFBdUIsQ0FBQ1csS0FBSyxFQUFHO1FBQ3BDLElBQUksQ0FBQ0MsbUJBQW1CLENBQUVMLE1BQU8sQ0FBQztNQUNwQztJQUNGLENBQUUsQ0FBQztFQUNMO0FBQ0Y7QUFFQWIsUUFBUSxDQUFDbUIsUUFBUSxDQUFFLCtCQUErQixFQUFFakIsNkJBQThCLENBQUM7QUFDbkYsZUFBZUEsNkJBQTZCIn0=