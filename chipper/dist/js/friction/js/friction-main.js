// Copyright 2013-2023, University of Colorado Boulder

/**
 * Main entry point for the 'Friction' sim.
 *
 * @author Andrey Zelenkov (Mlearner)
 * @author Sam Reid (PhET Interactive Simulations)
 * @author Michael Kauzmann (PhET Interactive Simulations)
 * @author Jonathan Olson (PhET Interactive Simulations)
 * @author Chris Malley (PixelZoom, Inc.)
 * @author John Blanco (PhET Interactive Simulations)
 */

import Property from '../../axon/js/Property.js';
import Bounds2 from '../../dot/js/Bounds2.js';
import Screen from '../../joist/js/Screen.js';
import Sim from '../../joist/js/Sim.js';
import simLauncher from '../../joist/js/simLauncher.js';
import Tandem from '../../tandem/js/Tandem.js';
import FrictionModel from './friction/model/FrictionModel.js';
import FrictionKeyboardHelpContent from './friction/view/FrictionKeyboardHelpContent.js';
import FrictionScreenView from './friction/view/FrictionScreenView.js';
import FrictionStrings from './FrictionStrings.js';

// constants
const LAYOUT_BOUNDS = new Bounds2(0, 0, 768, 504);
simLauncher.launch(() => {
  const simOptions = {
    credits: {
      leadDesign: 'Michael Dubson, Noah Podolefsky',
      softwareDevelopment: 'Michael Dubson, John Blanco, Jonathan Olson, Michael Kauzmann',
      team: 'Wendy Adams, Mindy Gratny, Emily B. Moore, Matthew Moore, Ariel Paul, Katherine Perkins, Taliesin Smith, Brianna Tomlinson, Carl Wieman',
      soundDesign: 'Ashton Morris, Mike Winters',
      qualityAssurance: 'Steele Dalton, Kerrie Dochen, Jaron Droder, Bryce Griebenow, Ethan Johnson, Emily Miller, Elise Morgan, ' + 'Liam Mulhall, Nancy Salpepi, Oliver Orejola, Ben Roberts, Bryan Yoelin, Jacob Romero, Laura Rea, Megan Lai, ' + 'Kathryn Woessner',
      thanks: 'Thanks to Mobile Learner Labs for working with the PhET development team to convert this simulation to HTML5.'
    },
    phetioDesigned: true
  };

  // Create and start the sim
  const screenTandem = Tandem.ROOT.createTandem('frictionScreen');
  new Sim(FrictionStrings.friction.titleStringProperty, [new Screen(() => new FrictionModel(LAYOUT_BOUNDS.width, LAYOUT_BOUNDS.height, screenTandem.createTandem('model')), model => new FrictionScreenView(model, screenTandem.createTandem('view')), {
    backgroundColorProperty: new Property('#fff'),
    tandem: screenTandem,
    createKeyboardHelpNode: () => new FrictionKeyboardHelpContent()
  })], simOptions).start();
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQcm9wZXJ0eSIsIkJvdW5kczIiLCJTY3JlZW4iLCJTaW0iLCJzaW1MYXVuY2hlciIsIlRhbmRlbSIsIkZyaWN0aW9uTW9kZWwiLCJGcmljdGlvbktleWJvYXJkSGVscENvbnRlbnQiLCJGcmljdGlvblNjcmVlblZpZXciLCJGcmljdGlvblN0cmluZ3MiLCJMQVlPVVRfQk9VTkRTIiwibGF1bmNoIiwic2ltT3B0aW9ucyIsImNyZWRpdHMiLCJsZWFkRGVzaWduIiwic29mdHdhcmVEZXZlbG9wbWVudCIsInRlYW0iLCJzb3VuZERlc2lnbiIsInF1YWxpdHlBc3N1cmFuY2UiLCJ0aGFua3MiLCJwaGV0aW9EZXNpZ25lZCIsInNjcmVlblRhbmRlbSIsIlJPT1QiLCJjcmVhdGVUYW5kZW0iLCJmcmljdGlvbiIsInRpdGxlU3RyaW5nUHJvcGVydHkiLCJ3aWR0aCIsImhlaWdodCIsIm1vZGVsIiwiYmFja2dyb3VuZENvbG9yUHJvcGVydHkiLCJ0YW5kZW0iLCJjcmVhdGVLZXlib2FyZEhlbHBOb2RlIiwic3RhcnQiXSwic291cmNlcyI6WyJmcmljdGlvbi1tYWluLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDEzLTIwMjMsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIE1haW4gZW50cnkgcG9pbnQgZm9yIHRoZSAnRnJpY3Rpb24nIHNpbS5cclxuICpcclxuICogQGF1dGhvciBBbmRyZXkgWmVsZW5rb3YgKE1sZWFybmVyKVxyXG4gKiBAYXV0aG9yIFNhbSBSZWlkIChQaEVUIEludGVyYWN0aXZlIFNpbXVsYXRpb25zKVxyXG4gKiBAYXV0aG9yIE1pY2hhZWwgS2F1em1hbm4gKFBoRVQgSW50ZXJhY3RpdmUgU2ltdWxhdGlvbnMpXHJcbiAqIEBhdXRob3IgSm9uYXRoYW4gT2xzb24gKFBoRVQgSW50ZXJhY3RpdmUgU2ltdWxhdGlvbnMpXHJcbiAqIEBhdXRob3IgQ2hyaXMgTWFsbGV5IChQaXhlbFpvb20sIEluYy4pXHJcbiAqIEBhdXRob3IgSm9obiBCbGFuY28gKFBoRVQgSW50ZXJhY3RpdmUgU2ltdWxhdGlvbnMpXHJcbiAqL1xyXG5cclxuaW1wb3J0IFByb3BlcnR5IGZyb20gJy4uLy4uL2F4b24vanMvUHJvcGVydHkuanMnO1xyXG5pbXBvcnQgQm91bmRzMiBmcm9tICcuLi8uLi9kb3QvanMvQm91bmRzMi5qcyc7XHJcbmltcG9ydCBTY3JlZW4gZnJvbSAnLi4vLi4vam9pc3QvanMvU2NyZWVuLmpzJztcclxuaW1wb3J0IFNpbSBmcm9tICcuLi8uLi9qb2lzdC9qcy9TaW0uanMnO1xyXG5pbXBvcnQgc2ltTGF1bmNoZXIgZnJvbSAnLi4vLi4vam9pc3QvanMvc2ltTGF1bmNoZXIuanMnO1xyXG5pbXBvcnQgVGFuZGVtIGZyb20gJy4uLy4uL3RhbmRlbS9qcy9UYW5kZW0uanMnO1xyXG5pbXBvcnQgRnJpY3Rpb25Nb2RlbCBmcm9tICcuL2ZyaWN0aW9uL21vZGVsL0ZyaWN0aW9uTW9kZWwuanMnO1xyXG5pbXBvcnQgRnJpY3Rpb25LZXlib2FyZEhlbHBDb250ZW50IGZyb20gJy4vZnJpY3Rpb24vdmlldy9GcmljdGlvbktleWJvYXJkSGVscENvbnRlbnQuanMnO1xyXG5pbXBvcnQgRnJpY3Rpb25TY3JlZW5WaWV3IGZyb20gJy4vZnJpY3Rpb24vdmlldy9GcmljdGlvblNjcmVlblZpZXcuanMnO1xyXG5pbXBvcnQgRnJpY3Rpb25TdHJpbmdzIGZyb20gJy4vRnJpY3Rpb25TdHJpbmdzLmpzJztcclxuXHJcbi8vIGNvbnN0YW50c1xyXG5jb25zdCBMQVlPVVRfQk9VTkRTID0gbmV3IEJvdW5kczIoIDAsIDAsIDc2OCwgNTA0ICk7XHJcblxyXG5zaW1MYXVuY2hlci5sYXVuY2goICgpID0+IHtcclxuXHJcbiAgY29uc3Qgc2ltT3B0aW9ucyA9IHtcclxuICAgIGNyZWRpdHM6IHtcclxuICAgICAgbGVhZERlc2lnbjogJ01pY2hhZWwgRHVic29uLCBOb2FoIFBvZG9sZWZza3knLFxyXG4gICAgICBzb2Z0d2FyZURldmVsb3BtZW50OiAnTWljaGFlbCBEdWJzb24sIEpvaG4gQmxhbmNvLCBKb25hdGhhbiBPbHNvbiwgTWljaGFlbCBLYXV6bWFubicsXHJcbiAgICAgIHRlYW06ICdXZW5keSBBZGFtcywgTWluZHkgR3JhdG55LCBFbWlseSBCLiBNb29yZSwgTWF0dGhldyBNb29yZSwgQXJpZWwgUGF1bCwgS2F0aGVyaW5lIFBlcmtpbnMsIFRhbGllc2luIFNtaXRoLCBCcmlhbm5hIFRvbWxpbnNvbiwgQ2FybCBXaWVtYW4nLFxyXG4gICAgICBzb3VuZERlc2lnbjogJ0FzaHRvbiBNb3JyaXMsIE1pa2UgV2ludGVycycsXHJcbiAgICAgIHF1YWxpdHlBc3N1cmFuY2U6ICdTdGVlbGUgRGFsdG9uLCBLZXJyaWUgRG9jaGVuLCBKYXJvbiBEcm9kZXIsIEJyeWNlIEdyaWViZW5vdywgRXRoYW4gSm9obnNvbiwgRW1pbHkgTWlsbGVyLCBFbGlzZSBNb3JnYW4sICcgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAnTGlhbSBNdWxoYWxsLCBOYW5jeSBTYWxwZXBpLCBPbGl2ZXIgT3Jlam9sYSwgQmVuIFJvYmVydHMsIEJyeWFuIFlvZWxpbiwgSmFjb2IgUm9tZXJvLCBMYXVyYSBSZWEsIE1lZ2FuIExhaSwgJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICdLYXRocnluIFdvZXNzbmVyJyxcclxuICAgICAgdGhhbmtzOiAnVGhhbmtzIHRvIE1vYmlsZSBMZWFybmVyIExhYnMgZm9yIHdvcmtpbmcgd2l0aCB0aGUgUGhFVCBkZXZlbG9wbWVudCB0ZWFtIHRvIGNvbnZlcnQgdGhpcyBzaW11bGF0aW9uIHRvIEhUTUw1LidcclxuICAgIH0sXHJcbiAgICBwaGV0aW9EZXNpZ25lZDogdHJ1ZVxyXG4gIH07XHJcblxyXG4gIC8vIENyZWF0ZSBhbmQgc3RhcnQgdGhlIHNpbVxyXG4gIGNvbnN0IHNjcmVlblRhbmRlbSA9IFRhbmRlbS5ST09ULmNyZWF0ZVRhbmRlbSggJ2ZyaWN0aW9uU2NyZWVuJyApO1xyXG4gIG5ldyBTaW0oIEZyaWN0aW9uU3RyaW5ncy5mcmljdGlvbi50aXRsZVN0cmluZ1Byb3BlcnR5LCBbXHJcbiAgICBuZXcgU2NyZWVuKCAoKSA9PiBuZXcgRnJpY3Rpb25Nb2RlbCggTEFZT1VUX0JPVU5EUy53aWR0aCwgTEFZT1VUX0JPVU5EUy5oZWlnaHQsIHNjcmVlblRhbmRlbS5jcmVhdGVUYW5kZW0oICdtb2RlbCcgKSApLFxyXG4gICAgICBtb2RlbCA9PiBuZXcgRnJpY3Rpb25TY3JlZW5WaWV3KCBtb2RlbCwgc2NyZWVuVGFuZGVtLmNyZWF0ZVRhbmRlbSggJ3ZpZXcnICkgKSwge1xyXG4gICAgICAgIGJhY2tncm91bmRDb2xvclByb3BlcnR5OiBuZXcgUHJvcGVydHkoICcjZmZmJyApLFxyXG4gICAgICAgIHRhbmRlbTogc2NyZWVuVGFuZGVtLFxyXG4gICAgICAgIGNyZWF0ZUtleWJvYXJkSGVscE5vZGU6ICgpID0+IG5ldyBGcmljdGlvbktleWJvYXJkSGVscENvbnRlbnQoKVxyXG4gICAgICB9XHJcbiAgICApXHJcbiAgXSwgc2ltT3B0aW9ucyApLnN0YXJ0KCk7XHJcbn0gKTsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLFFBQVEsTUFBTSwyQkFBMkI7QUFDaEQsT0FBT0MsT0FBTyxNQUFNLHlCQUF5QjtBQUM3QyxPQUFPQyxNQUFNLE1BQU0sMEJBQTBCO0FBQzdDLE9BQU9DLEdBQUcsTUFBTSx1QkFBdUI7QUFDdkMsT0FBT0MsV0FBVyxNQUFNLCtCQUErQjtBQUN2RCxPQUFPQyxNQUFNLE1BQU0sMkJBQTJCO0FBQzlDLE9BQU9DLGFBQWEsTUFBTSxtQ0FBbUM7QUFDN0QsT0FBT0MsMkJBQTJCLE1BQU0sZ0RBQWdEO0FBQ3hGLE9BQU9DLGtCQUFrQixNQUFNLHVDQUF1QztBQUN0RSxPQUFPQyxlQUFlLE1BQU0sc0JBQXNCOztBQUVsRDtBQUNBLE1BQU1DLGFBQWEsR0FBRyxJQUFJVCxPQUFPLENBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsR0FBSSxDQUFDO0FBRW5ERyxXQUFXLENBQUNPLE1BQU0sQ0FBRSxNQUFNO0VBRXhCLE1BQU1DLFVBQVUsR0FBRztJQUNqQkMsT0FBTyxFQUFFO01BQ1BDLFVBQVUsRUFBRSxpQ0FBaUM7TUFDN0NDLG1CQUFtQixFQUFFLCtEQUErRDtNQUNwRkMsSUFBSSxFQUFFLHlJQUF5STtNQUMvSUMsV0FBVyxFQUFFLDZCQUE2QjtNQUMxQ0MsZ0JBQWdCLEVBQUUsMEdBQTBHLEdBQzFHLDhHQUE4RyxHQUM5RyxrQkFBa0I7TUFDcENDLE1BQU0sRUFBRTtJQUNWLENBQUM7SUFDREMsY0FBYyxFQUFFO0VBQ2xCLENBQUM7O0VBRUQ7RUFDQSxNQUFNQyxZQUFZLEdBQUdoQixNQUFNLENBQUNpQixJQUFJLENBQUNDLFlBQVksQ0FBRSxnQkFBaUIsQ0FBQztFQUNqRSxJQUFJcEIsR0FBRyxDQUFFTSxlQUFlLENBQUNlLFFBQVEsQ0FBQ0MsbUJBQW1CLEVBQUUsQ0FDckQsSUFBSXZCLE1BQU0sQ0FBRSxNQUFNLElBQUlJLGFBQWEsQ0FBRUksYUFBYSxDQUFDZ0IsS0FBSyxFQUFFaEIsYUFBYSxDQUFDaUIsTUFBTSxFQUFFTixZQUFZLENBQUNFLFlBQVksQ0FBRSxPQUFRLENBQUUsQ0FBQyxFQUNwSEssS0FBSyxJQUFJLElBQUlwQixrQkFBa0IsQ0FBRW9CLEtBQUssRUFBRVAsWUFBWSxDQUFDRSxZQUFZLENBQUUsTUFBTyxDQUFFLENBQUMsRUFBRTtJQUM3RU0sdUJBQXVCLEVBQUUsSUFBSTdCLFFBQVEsQ0FBRSxNQUFPLENBQUM7SUFDL0M4QixNQUFNLEVBQUVULFlBQVk7SUFDcEJVLHNCQUFzQixFQUFFQSxDQUFBLEtBQU0sSUFBSXhCLDJCQUEyQixDQUFDO0VBQ2hFLENBQ0YsQ0FBQyxDQUNGLEVBQUVLLFVBQVcsQ0FBQyxDQUFDb0IsS0FBSyxDQUFDLENBQUM7QUFDekIsQ0FBRSxDQUFDIn0=