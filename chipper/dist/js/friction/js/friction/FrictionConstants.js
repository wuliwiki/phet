// Copyright 2013-2022, University of Colorado Boulder

/**
 * Shared constants for the 'Friction' simulation.
 *
 * @author Jesse Greenberg (PhET Interactive Simulations)
 * @author Michael Kauzmann (PhET Interactive Simulations)
 */

import dotRandom from '../../../dot/js/dotRandom.js';
import { Color } from '../../../scenery/js/imports.js';
import friction from '../friction.js';
import FrictionStrings from '../FrictionStrings.js';

// constants
const MAJOR_PENTATONIC_PLAYBACK_RATES = [1, Math.pow(2, 2 / 12), Math.pow(2, 4 / 12), Math.pow(2, 7 / 12), Math.pow(2, 9 / 12)];
const jiggleALotString = FrictionStrings.a11y.jiggle.jiggleALot;
const jiggleALittleString = FrictionStrings.a11y.jiggle.jiggleALittle;
const jiggleABitString = FrictionStrings.a11y.jiggle.jiggleABit;
const veryHotString = FrictionStrings.a11y.temperature.veryHot;
const hotString = FrictionStrings.a11y.temperature.hot;
const atWarmString = FrictionStrings.a11y.temperature.atWarm;
const atCoolString = FrictionStrings.a11y.temperature.atCool;
const FrictionConstants = {
  TOP_BOOK_COLOR_MACRO: new Color('rgb(125,226,249)'),
  // color of the macroscopic view of the book
  TOP_BOOK_COLOR: new Color('rgb(125,226,249)'),
  // color for the book in the magnified view
  TOP_BOOK_ATOMS_COLOR: new Color('rgb( 0, 255, 255 )'),
  // color for the atoms in the magnified view
  BOTTOM_BOOK_COLOR_MACRO: new Color('rgb( 183, 255, 181 )'),
  // color for the macroscopic view of the bottom book
  BOTTOM_BOOK_COLOR: new Color('rgb( 187, 255, 187 )'),
  // color for the book in the magnified view
  BOTTOM_BOOK_ATOMS_COLOR: new Color('rgb( 0, 255, 0 )'),
  // color for the bottom book in the magnified view,
  BOOK_TEXT_COLOR: new Color('#404040'),
  ATOM_RADIUS: 7,
  // in model coordinates, empirically determined to have the desired look
  INITIAL_ATOM_SPACING_X: 20,
  // x-distance between neighboring atoms in the books, excluding any gaps
  INITIAL_ATOM_SPACING_Y: 20,
  // y-distance between neighboring atoms in the books
  MAGNIFIER_WINDOW_HEIGHT: 300,
  MAGNIFIER_WINDOW_WIDTH: 690,
  // sound - a function for choosing a random playback rate from a one-octave pentatonic scale
  GET_RANDOM_PENTATONIC_PLAYBACK_RATE() {
    return dotRandom.sample(MAJOR_PENTATONIC_PLAYBACK_RATES);
  },
  // pdom - the mappings work well divided into 9 sections (arbitrary, but @terracoda's design diagram fit into 9 well
  // These are only used for the screen summary description in the PDOM, not alerts
  TEMPERATURE_STRINGS: [atCoolString, atCoolString, atWarmString, atWarmString, atWarmString, hotString, hotString, hotString, veryHotString],
  JIGGLE_STRINGS: [jiggleABitString, jiggleABitString, jiggleALittleString, jiggleALittleString, jiggleALittleString, jiggleALotString, jiggleALotString, jiggleALotString, jiggleALotString]
};
friction.register('FrictionConstants', FrictionConstants);
export default FrictionConstants;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJkb3RSYW5kb20iLCJDb2xvciIsImZyaWN0aW9uIiwiRnJpY3Rpb25TdHJpbmdzIiwiTUFKT1JfUEVOVEFUT05JQ19QTEFZQkFDS19SQVRFUyIsIk1hdGgiLCJwb3ciLCJqaWdnbGVBTG90U3RyaW5nIiwiYTExeSIsImppZ2dsZSIsImppZ2dsZUFMb3QiLCJqaWdnbGVBTGl0dGxlU3RyaW5nIiwiamlnZ2xlQUxpdHRsZSIsImppZ2dsZUFCaXRTdHJpbmciLCJqaWdnbGVBQml0IiwidmVyeUhvdFN0cmluZyIsInRlbXBlcmF0dXJlIiwidmVyeUhvdCIsImhvdFN0cmluZyIsImhvdCIsImF0V2FybVN0cmluZyIsImF0V2FybSIsImF0Q29vbFN0cmluZyIsImF0Q29vbCIsIkZyaWN0aW9uQ29uc3RhbnRzIiwiVE9QX0JPT0tfQ09MT1JfTUFDUk8iLCJUT1BfQk9PS19DT0xPUiIsIlRPUF9CT09LX0FUT01TX0NPTE9SIiwiQk9UVE9NX0JPT0tfQ09MT1JfTUFDUk8iLCJCT1RUT01fQk9PS19DT0xPUiIsIkJPVFRPTV9CT09LX0FUT01TX0NPTE9SIiwiQk9PS19URVhUX0NPTE9SIiwiQVRPTV9SQURJVVMiLCJJTklUSUFMX0FUT01fU1BBQ0lOR19YIiwiSU5JVElBTF9BVE9NX1NQQUNJTkdfWSIsIk1BR05JRklFUl9XSU5ET1dfSEVJR0hUIiwiTUFHTklGSUVSX1dJTkRPV19XSURUSCIsIkdFVF9SQU5ET01fUEVOVEFUT05JQ19QTEFZQkFDS19SQVRFIiwic2FtcGxlIiwiVEVNUEVSQVRVUkVfU1RSSU5HUyIsIkpJR0dMRV9TVFJJTkdTIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJGcmljdGlvbkNvbnN0YW50cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxMy0yMDIyLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBTaGFyZWQgY29uc3RhbnRzIGZvciB0aGUgJ0ZyaWN0aW9uJyBzaW11bGF0aW9uLlxyXG4gKlxyXG4gKiBAYXV0aG9yIEplc3NlIEdyZWVuYmVyZyAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcclxuICogQGF1dGhvciBNaWNoYWVsIEthdXptYW5uIChQaEVUIEludGVyYWN0aXZlIFNpbXVsYXRpb25zKVxyXG4gKi9cclxuXHJcbmltcG9ydCBkb3RSYW5kb20gZnJvbSAnLi4vLi4vLi4vZG90L2pzL2RvdFJhbmRvbS5qcyc7XHJcbmltcG9ydCB7IENvbG9yIH0gZnJvbSAnLi4vLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IGZyaWN0aW9uIGZyb20gJy4uL2ZyaWN0aW9uLmpzJztcclxuaW1wb3J0IEZyaWN0aW9uU3RyaW5ncyBmcm9tICcuLi9GcmljdGlvblN0cmluZ3MuanMnO1xyXG5cclxuLy8gY29uc3RhbnRzXHJcbmNvbnN0IE1BSk9SX1BFTlRBVE9OSUNfUExBWUJBQ0tfUkFURVMgPSBbXHJcbiAgMSwgTWF0aC5wb3coIDIsIDIgLyAxMiApLCBNYXRoLnBvdyggMiwgNCAvIDEyICksIE1hdGgucG93KCAyLCA3IC8gMTIgKSwgTWF0aC5wb3coIDIsIDkgLyAxMiApXHJcbl07XHJcblxyXG5jb25zdCBqaWdnbGVBTG90U3RyaW5nID0gRnJpY3Rpb25TdHJpbmdzLmExMXkuamlnZ2xlLmppZ2dsZUFMb3Q7XHJcbmNvbnN0IGppZ2dsZUFMaXR0bGVTdHJpbmcgPSBGcmljdGlvblN0cmluZ3MuYTExeS5qaWdnbGUuamlnZ2xlQUxpdHRsZTtcclxuY29uc3QgamlnZ2xlQUJpdFN0cmluZyA9IEZyaWN0aW9uU3RyaW5ncy5hMTF5LmppZ2dsZS5qaWdnbGVBQml0O1xyXG5jb25zdCB2ZXJ5SG90U3RyaW5nID0gRnJpY3Rpb25TdHJpbmdzLmExMXkudGVtcGVyYXR1cmUudmVyeUhvdDtcclxuY29uc3QgaG90U3RyaW5nID0gRnJpY3Rpb25TdHJpbmdzLmExMXkudGVtcGVyYXR1cmUuaG90O1xyXG5jb25zdCBhdFdhcm1TdHJpbmcgPSBGcmljdGlvblN0cmluZ3MuYTExeS50ZW1wZXJhdHVyZS5hdFdhcm07XHJcbmNvbnN0IGF0Q29vbFN0cmluZyA9IEZyaWN0aW9uU3RyaW5ncy5hMTF5LnRlbXBlcmF0dXJlLmF0Q29vbDtcclxuXHJcbmNvbnN0IEZyaWN0aW9uQ29uc3RhbnRzID0ge1xyXG4gIFRPUF9CT09LX0NPTE9SX01BQ1JPOiBuZXcgQ29sb3IoICdyZ2IoMTI1LDIyNiwyNDkpJyApLCAvLyBjb2xvciBvZiB0aGUgbWFjcm9zY29waWMgdmlldyBvZiB0aGUgYm9va1xyXG4gIFRPUF9CT09LX0NPTE9SOiBuZXcgQ29sb3IoICdyZ2IoMTI1LDIyNiwyNDkpJyApLCAvLyBjb2xvciBmb3IgdGhlIGJvb2sgaW4gdGhlIG1hZ25pZmllZCB2aWV3XHJcbiAgVE9QX0JPT0tfQVRPTVNfQ09MT1I6IG5ldyBDb2xvciggJ3JnYiggMCwgMjU1LCAyNTUgKScgKSwgLy8gY29sb3IgZm9yIHRoZSBhdG9tcyBpbiB0aGUgbWFnbmlmaWVkIHZpZXdcclxuICBCT1RUT01fQk9PS19DT0xPUl9NQUNSTzogbmV3IENvbG9yKCAncmdiKCAxODMsIDI1NSwgMTgxICknICksIC8vIGNvbG9yIGZvciB0aGUgbWFjcm9zY29waWMgdmlldyBvZiB0aGUgYm90dG9tIGJvb2tcclxuICBCT1RUT01fQk9PS19DT0xPUjogbmV3IENvbG9yKCAncmdiKCAxODcsIDI1NSwgMTg3ICknICksIC8vIGNvbG9yIGZvciB0aGUgYm9vayBpbiB0aGUgbWFnbmlmaWVkIHZpZXdcclxuICBCT1RUT01fQk9PS19BVE9NU19DT0xPUjogbmV3IENvbG9yKCAncmdiKCAwLCAyNTUsIDAgKScgKSwgLy8gY29sb3IgZm9yIHRoZSBib3R0b20gYm9vayBpbiB0aGUgbWFnbmlmaWVkIHZpZXcsXHJcbiAgQk9PS19URVhUX0NPTE9SOiBuZXcgQ29sb3IoICcjNDA0MDQwJyApLFxyXG4gIEFUT01fUkFESVVTOiA3LCAvLyBpbiBtb2RlbCBjb29yZGluYXRlcywgZW1waXJpY2FsbHkgZGV0ZXJtaW5lZCB0byBoYXZlIHRoZSBkZXNpcmVkIGxvb2tcclxuICBJTklUSUFMX0FUT01fU1BBQ0lOR19YOiAyMCwgLy8geC1kaXN0YW5jZSBiZXR3ZWVuIG5laWdoYm9yaW5nIGF0b21zIGluIHRoZSBib29rcywgZXhjbHVkaW5nIGFueSBnYXBzXHJcbiAgSU5JVElBTF9BVE9NX1NQQUNJTkdfWTogMjAsIC8vIHktZGlzdGFuY2UgYmV0d2VlbiBuZWlnaGJvcmluZyBhdG9tcyBpbiB0aGUgYm9va3NcclxuICBNQUdOSUZJRVJfV0lORE9XX0hFSUdIVDogMzAwLFxyXG4gIE1BR05JRklFUl9XSU5ET1dfV0lEVEg6IDY5MCxcclxuXHJcbiAgLy8gc291bmQgLSBhIGZ1bmN0aW9uIGZvciBjaG9vc2luZyBhIHJhbmRvbSBwbGF5YmFjayByYXRlIGZyb20gYSBvbmUtb2N0YXZlIHBlbnRhdG9uaWMgc2NhbGVcclxuICBHRVRfUkFORE9NX1BFTlRBVE9OSUNfUExBWUJBQ0tfUkFURSgpIHtcclxuICAgIHJldHVybiBkb3RSYW5kb20uc2FtcGxlKCBNQUpPUl9QRU5UQVRPTklDX1BMQVlCQUNLX1JBVEVTICk7XHJcbiAgfSxcclxuXHJcbiAgLy8gcGRvbSAtIHRoZSBtYXBwaW5ncyB3b3JrIHdlbGwgZGl2aWRlZCBpbnRvIDkgc2VjdGlvbnMgKGFyYml0cmFyeSwgYnV0IEB0ZXJyYWNvZGEncyBkZXNpZ24gZGlhZ3JhbSBmaXQgaW50byA5IHdlbGxcclxuICAvLyBUaGVzZSBhcmUgb25seSB1c2VkIGZvciB0aGUgc2NyZWVuIHN1bW1hcnkgZGVzY3JpcHRpb24gaW4gdGhlIFBET00sIG5vdCBhbGVydHNcclxuICBURU1QRVJBVFVSRV9TVFJJTkdTOiBbIGF0Q29vbFN0cmluZywgYXRDb29sU3RyaW5nLCBhdFdhcm1TdHJpbmcsIGF0V2FybVN0cmluZywgYXRXYXJtU3RyaW5nLCBob3RTdHJpbmcsIGhvdFN0cmluZyxcclxuICAgIGhvdFN0cmluZywgdmVyeUhvdFN0cmluZyBdLFxyXG4gIEpJR0dMRV9TVFJJTkdTOiBbIGppZ2dsZUFCaXRTdHJpbmcsIGppZ2dsZUFCaXRTdHJpbmcsIGppZ2dsZUFMaXR0bGVTdHJpbmcsIGppZ2dsZUFMaXR0bGVTdHJpbmcsIGppZ2dsZUFMaXR0bGVTdHJpbmcsXHJcbiAgICBqaWdnbGVBTG90U3RyaW5nLCBqaWdnbGVBTG90U3RyaW5nLCBqaWdnbGVBTG90U3RyaW5nLCBqaWdnbGVBTG90U3RyaW5nIF1cclxufTtcclxuXHJcbmZyaWN0aW9uLnJlZ2lzdGVyKCAnRnJpY3Rpb25Db25zdGFudHMnLCBGcmljdGlvbkNvbnN0YW50cyApO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgRnJpY3Rpb25Db25zdGFudHM7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsU0FBUyxNQUFNLDhCQUE4QjtBQUNwRCxTQUFTQyxLQUFLLFFBQVEsZ0NBQWdDO0FBQ3RELE9BQU9DLFFBQVEsTUFBTSxnQkFBZ0I7QUFDckMsT0FBT0MsZUFBZSxNQUFNLHVCQUF1Qjs7QUFFbkQ7QUFDQSxNQUFNQywrQkFBK0IsR0FBRyxDQUN0QyxDQUFDLEVBQUVDLElBQUksQ0FBQ0MsR0FBRyxDQUFFLENBQUMsRUFBRSxDQUFDLEdBQUcsRUFBRyxDQUFDLEVBQUVELElBQUksQ0FBQ0MsR0FBRyxDQUFFLENBQUMsRUFBRSxDQUFDLEdBQUcsRUFBRyxDQUFDLEVBQUVELElBQUksQ0FBQ0MsR0FBRyxDQUFFLENBQUMsRUFBRSxDQUFDLEdBQUcsRUFBRyxDQUFDLEVBQUVELElBQUksQ0FBQ0MsR0FBRyxDQUFFLENBQUMsRUFBRSxDQUFDLEdBQUcsRUFBRyxDQUFDLENBQzlGO0FBRUQsTUFBTUMsZ0JBQWdCLEdBQUdKLGVBQWUsQ0FBQ0ssSUFBSSxDQUFDQyxNQUFNLENBQUNDLFVBQVU7QUFDL0QsTUFBTUMsbUJBQW1CLEdBQUdSLGVBQWUsQ0FBQ0ssSUFBSSxDQUFDQyxNQUFNLENBQUNHLGFBQWE7QUFDckUsTUFBTUMsZ0JBQWdCLEdBQUdWLGVBQWUsQ0FBQ0ssSUFBSSxDQUFDQyxNQUFNLENBQUNLLFVBQVU7QUFDL0QsTUFBTUMsYUFBYSxHQUFHWixlQUFlLENBQUNLLElBQUksQ0FBQ1EsV0FBVyxDQUFDQyxPQUFPO0FBQzlELE1BQU1DLFNBQVMsR0FBR2YsZUFBZSxDQUFDSyxJQUFJLENBQUNRLFdBQVcsQ0FBQ0csR0FBRztBQUN0RCxNQUFNQyxZQUFZLEdBQUdqQixlQUFlLENBQUNLLElBQUksQ0FBQ1EsV0FBVyxDQUFDSyxNQUFNO0FBQzVELE1BQU1DLFlBQVksR0FBR25CLGVBQWUsQ0FBQ0ssSUFBSSxDQUFDUSxXQUFXLENBQUNPLE1BQU07QUFFNUQsTUFBTUMsaUJBQWlCLEdBQUc7RUFDeEJDLG9CQUFvQixFQUFFLElBQUl4QixLQUFLLENBQUUsa0JBQW1CLENBQUM7RUFBRTtFQUN2RHlCLGNBQWMsRUFBRSxJQUFJekIsS0FBSyxDQUFFLGtCQUFtQixDQUFDO0VBQUU7RUFDakQwQixvQkFBb0IsRUFBRSxJQUFJMUIsS0FBSyxDQUFFLG9CQUFxQixDQUFDO0VBQUU7RUFDekQyQix1QkFBdUIsRUFBRSxJQUFJM0IsS0FBSyxDQUFFLHNCQUF1QixDQUFDO0VBQUU7RUFDOUQ0QixpQkFBaUIsRUFBRSxJQUFJNUIsS0FBSyxDQUFFLHNCQUF1QixDQUFDO0VBQUU7RUFDeEQ2Qix1QkFBdUIsRUFBRSxJQUFJN0IsS0FBSyxDQUFFLGtCQUFtQixDQUFDO0VBQUU7RUFDMUQ4QixlQUFlLEVBQUUsSUFBSTlCLEtBQUssQ0FBRSxTQUFVLENBQUM7RUFDdkMrQixXQUFXLEVBQUUsQ0FBQztFQUFFO0VBQ2hCQyxzQkFBc0IsRUFBRSxFQUFFO0VBQUU7RUFDNUJDLHNCQUFzQixFQUFFLEVBQUU7RUFBRTtFQUM1QkMsdUJBQXVCLEVBQUUsR0FBRztFQUM1QkMsc0JBQXNCLEVBQUUsR0FBRztFQUUzQjtFQUNBQyxtQ0FBbUNBLENBQUEsRUFBRztJQUNwQyxPQUFPckMsU0FBUyxDQUFDc0MsTUFBTSxDQUFFbEMsK0JBQWdDLENBQUM7RUFDNUQsQ0FBQztFQUVEO0VBQ0E7RUFDQW1DLG1CQUFtQixFQUFFLENBQUVqQixZQUFZLEVBQUVBLFlBQVksRUFBRUYsWUFBWSxFQUFFQSxZQUFZLEVBQUVBLFlBQVksRUFBRUYsU0FBUyxFQUFFQSxTQUFTLEVBQy9HQSxTQUFTLEVBQUVILGFBQWEsQ0FBRTtFQUM1QnlCLGNBQWMsRUFBRSxDQUFFM0IsZ0JBQWdCLEVBQUVBLGdCQUFnQixFQUFFRixtQkFBbUIsRUFBRUEsbUJBQW1CLEVBQUVBLG1CQUFtQixFQUNqSEosZ0JBQWdCLEVBQUVBLGdCQUFnQixFQUFFQSxnQkFBZ0IsRUFBRUEsZ0JBQWdCO0FBQzFFLENBQUM7QUFFREwsUUFBUSxDQUFDdUMsUUFBUSxDQUFFLG1CQUFtQixFQUFFakIsaUJBQWtCLENBQUM7QUFFM0QsZUFBZUEsaUJBQWlCIn0=