/* eslint-disable */
import asyncLoader from '../../phet-core/js/asyncLoader.js';
import base64SoundToByteArray from '../../tambo/js/base64SoundToByteArray.js';
import WrappedAudioBuffer from '../../tambo/js/WrappedAudioBuffer.js';
import phetAudioContext from '../../tambo/js/phetAudioContext.js';
const soundURI = 'data:audio/mpeg;base64,//swxAAABqQXORQxgAkqmO7nIFAAAAhAAOu5xCcAADD4DvDw8f4AAADsAAAd/Q8PzeI68PeAABkcfxwjN/4AAAAOEf4j////44eA15BlSwqKDIAT8LJhsAllVM0PqSs5sXshPZz/Q4cZwECw6HBg8aGEI0lxjAXRh7HPaNarlJ12yEZcykFV8gb5SgVdnyaz4Y9B/l0BSa60SAAE//syxAOASFjNZ52VABEComstp5xyyZlwOGYs41WW2H+nYal2Va/QS604pOUqTHm/oPhBAKkdTSyhSm/+7SE7PN/9H+v/0WpATZM/zuh/3lpIBOW2wLZYc2kLUH6KxbRirUDxjp/ZJTwZSwYjDhf/ygFjbVHAKp/46bA0s0c/+PC75rf/G1AJHVb/5R/kv/3xrWoAmUW0UIAAIC4Fqv/7MsQFgEixE0+OPUORCCIobcadcphoHw0SlPMMJJrZirX/M6NaQkOLAaO/6CWFAQlh8kHhPO/8o8SRNaR//R/o3/qNdy1SX/5349/+vIqwAEw4hwweBjrBiEvMRBhOJvZFRP3K45V5k1IJ07O3/mIXF0TrMPwcT/9y+Oi3M/+hf5T/6E6hUtRf/lW3x7/68dk6AVFj4AYEwYuapRz/+zLEBYBIaRE3D21BEQoiJUnsnFlkQDSERAC+1DGRuxDk/e6NUtjFv/Fwbs5Z5EB7/4qtGIKcj/+UG2dkT//IsVXoO//NffIf/q1SKllDDsEVNIt00zqAwTCTA6PJM0wAwFWKDqCU2m7a//7gFMgRPEIlL/2EzrDOOf/Qvtq//xJoIBnJf/FT1bKP/6tjrpbADATGBOHjbE1LxlzD//swxAaDSIkRIC9pQsEHIiNB/RRYWBuOarNAOMaDAwAvGu9xJe3bO0/+LwUuaRtEkUN/7tQlz//oX3yr//G1BBHSpb/7ttn//m1IpEwPcNeMWsX0DF5QsIwPYDtPjuNw1MuWAgVmT8sufkeRjoQg5af/II4jiIL/8uM6f/R/r/+TOOsK/94iu2yf/LQRkTIYFOPrV5w5qgLjFJAL//syxAcCyGg1Fg9pIsDeA2JV/2gAPUiOKTDthQ7L4IeKrvYFj4pUJirSrmrZSkC4SHgI24OkljZoiVsIlV+W6ltTohOe9z91FuXEYQEGXmOrKZZraFcmEeHQbDeZF0ADoqIT3Zu0GFWfH22J/T96i33uuXfyNSKFzci+ibiRgZbHNgPqqphi0UR0ZZQul4KNkNGGkQ3i0Qtjkq9Oiv/7MsQNggZEGRrO5eIQxILi5e28ABtzhlKvkFfXsYreLKbuzb4yxoaZr/8OzMsoEGI4D4ZNKKBpskYGPgKAs5dD/VjyO5bb1ms3nsog2ZKizkbPv9qb/9+vcPF/+moACFGUQg1aGExTnM5sIwEPi/LBgMkzAhNzi6qMkixqVvDv1GP04t4RfVaqr9Df1Yw5o7zxVxM3RgyN7QCcaIz/+zLEH4IGABMVLvEgQPICoUHMJAn7LCXnFvhX/duQn////4/Nlf/t8uVV/+xW4r+dewcUmp6hUvcLgDOZxdRO1qQaAApm/gMMxfjkWwXTDCQSQoiyU4q5UX5HDWJSxIqISwdU/5GJXflnq9T4ifR+Cp7lmpAQMygMgnM/aMVdFbwBtmenHNSh305zs26DMvAuA5mFsDFrNZw6Rzsl//swxC0AxggPBS3lIBDShgYhrOkWDiPzSzjEUyFII0tMQU1FMy45OS4zVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV';
const soundByteArray = base64SoundToByteArray(phetAudioContext, soundURI);
const unlock = asyncLoader.createLock(soundURI);
const wrappedAudioBuffer = new WrappedAudioBuffer();

// safe way to unlock
let unlocked = false;
const safeUnlock = () => {
  if (!unlocked) {
    unlock();
    unlocked = true;
  }
};
const onDecodeSuccess = decodedAudio => {
  if (wrappedAudioBuffer.audioBufferProperty.value === null) {
    wrappedAudioBuffer.audioBufferProperty.set(decodedAudio);
    safeUnlock();
  }
};
const onDecodeError = decodeError => {
  console.warn('decode of audio data failed, using stubbed sound, error: ' + decodeError);
  wrappedAudioBuffer.audioBufferProperty.set(phetAudioContext.createBuffer(1, 1, phetAudioContext.sampleRate));
  safeUnlock();
};
const decodePromise = phetAudioContext.decodeAudioData(soundByteArray.buffer, onDecodeSuccess, onDecodeError);
if (decodePromise) {
  decodePromise.then(decodedAudio => {
    if (wrappedAudioBuffer.audioBufferProperty.value === null) {
      wrappedAudioBuffer.audioBufferProperty.set(decodedAudio);
      safeUnlock();
    }
  }).catch(e => {
    console.warn('promise rejection caught for audio decode, error = ' + e);
    safeUnlock();
  });
}
export default wrappedAudioBuffer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhc3luY0xvYWRlciIsImJhc2U2NFNvdW5kVG9CeXRlQXJyYXkiLCJXcmFwcGVkQXVkaW9CdWZmZXIiLCJwaGV0QXVkaW9Db250ZXh0Iiwic291bmRVUkkiLCJzb3VuZEJ5dGVBcnJheSIsInVubG9jayIsImNyZWF0ZUxvY2siLCJ3cmFwcGVkQXVkaW9CdWZmZXIiLCJ1bmxvY2tlZCIsInNhZmVVbmxvY2siLCJvbkRlY29kZVN1Y2Nlc3MiLCJkZWNvZGVkQXVkaW8iLCJhdWRpb0J1ZmZlclByb3BlcnR5IiwidmFsdWUiLCJzZXQiLCJvbkRlY29kZUVycm9yIiwiZGVjb2RlRXJyb3IiLCJjb25zb2xlIiwid2FybiIsImNyZWF0ZUJ1ZmZlciIsInNhbXBsZVJhdGUiLCJkZWNvZGVQcm9taXNlIiwiZGVjb2RlQXVkaW9EYXRhIiwiYnVmZmVyIiwidGhlbiIsImNhdGNoIiwiZSJdLCJzb3VyY2VzIjpbImNvbnRhY3RMb3dlcl9tcDMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgKi9cclxuaW1wb3J0IGFzeW5jTG9hZGVyIGZyb20gJy4uLy4uL3BoZXQtY29yZS9qcy9hc3luY0xvYWRlci5qcyc7XHJcbmltcG9ydCBiYXNlNjRTb3VuZFRvQnl0ZUFycmF5IGZyb20gJy4uLy4uL3RhbWJvL2pzL2Jhc2U2NFNvdW5kVG9CeXRlQXJyYXkuanMnO1xyXG5pbXBvcnQgV3JhcHBlZEF1ZGlvQnVmZmVyIGZyb20gJy4uLy4uL3RhbWJvL2pzL1dyYXBwZWRBdWRpb0J1ZmZlci5qcyc7XHJcbmltcG9ydCBwaGV0QXVkaW9Db250ZXh0IGZyb20gJy4uLy4uL3RhbWJvL2pzL3BoZXRBdWRpb0NvbnRleHQuanMnO1xyXG5cclxuY29uc3Qgc291bmRVUkkgPSAnZGF0YTphdWRpby9tcGVnO2Jhc2U2NCwvL3N3eEFBQUJxUVhPUlF4Z0FrcW1PN25JRkFBQUFoQUFPdTV4Q2NBQURENER2RHc4ZjRBQUFEc0FBQWQvUThQemVJNjhQZUFBQmtjZnh3ak4vNEFBQUFPRWY0ai8vLy80NGVBMTVCbFN3cUtESUFUOExKaHNBbGxWTTBQcVNzNXNYc2hQWnovUTRjWndFQ3c2SEJnOGFHRUkwbHhqQVhSaDdIUGFOYXJsSjEyeUVaY3lrRlY4Z2I1U2dWZG55YXo0WTlCL2wwQlNhNjBTQUFFLy9zeXhBT0FTRmpOWjUyVkFCRUNvbXN0cDV4eXlabHdPR1lzNDFXVzJIK25ZYWwyVmEvUVM2MDRwT1VxVEhtL29QaEJBS2tkVFN5aFNtLys3U0U3UE4vOUgrdi8wV3BBVFpNL3p1aC8zbHBJQk9XMndMWlljMmtMVUg2S3hiUmlyVUR4anAvWkpUd1pTd1lqRGhmL3lnRmpiVkhBS3AvNDZiQTBzMGMvK1BDNzVyZi9HMUFKSFZiLzVSL2t2LzN4cldvQW1VVzBVSUFBSUM0RnF2LzdNc1FGZ0VpeEUwK09QVU9SQ0NJb2JjYWRjcGhvSHcwU2xQTU1KSnJaaXJYL002TmFRa09MQWFPLzZDV0ZBUWxoOGtIaFBPLzhvOFNSTmFSLy9SL28zL3FOZHkxU1gvNTM0OS8rdklxd0FFdzRod3dlQmpyQmlFdk1SQmhPSnZaRlJQM0s0NVY1azFJSjA3TzMvbUlYRjBUck1Qd2NULzl5K09pM00vK2hmNVQvNkU2aFV0UmYvbFczeDcvNjhkazZBVkZqNEFZRXdZdWFwUnovK3pMRUJZQklhUkUzRDIxQkVRb2lKVW5zbkZsa1FEU0VSQUMrMURHUnV4RGsvZTZOVXRqRnYvRndiczVaNUVCNy80cXRHSUtjai8rVUcyZGtULy9Jc1ZYb08vL05mZklmL3ExU0tsbEREc0VWTkl0MDB6cUF3VENUQTZQSk0wd0F3RldLRHFDVTJtN2EvLzdnRk1nUlBFSWxMLzJFenJET09mL1F2dHEvL3hKb0lCbkpmL0ZUMWJLUC82dGpycGJBREFUR0JPSGpiRTFMeGx6RC8vc3d4QWFEU0lrUklDOXBRc0VISWlOQi9SUllXQnVPYXJOQU9NYURBd0F2R3U5eEplM2JPMC8rTHdVdWFSdEVrVU4vN3RRbHovL29YM3lyLy9HMUJCSFNwYi83dHRuLy9tMUlwRXdQY05lTVdzWDBERjVRc0l3UFlEdFBqdU53MU11V0FnVm1UOHN1ZmtlUmpvUWc1YWYvSUk0amlJTC84dU02Zi9SL3IvK1RPT3NLLzk0aXUyeWYvTFFSa1RJWUZPUHJWNXc1cWdMakZKQUwvL3N5eEFjQ3lHZzFGZzlwSXNEZUEySlYvMmdBUFVpT0tURHRoUTdMNEllS3J2WUZqNHBVSmlyU3JtclpTa0M0U0hnSTI0T2tsalpvaVZzSWxWK1c2bHRUb2hPZTl6OTFGdVhFWVFFR1htT3JLWlpyYUZjbUVlSFFiRGVaRjBBRG9xSVQzWnUwR0ZXZkgyMkovVDk2aTMzdXVYZnlOU0tGemNpK2liaVJnWmJITmdQcXFwaGkwVVIwWlpRdWw0S05rTkdHa1EzaTBRdGprcTlPaXYvN01zUU5nZ1pFR1JyTzVlSVF4SUxpNWUyOEFCdHpobEt2a0ZmWHNZcmVMS2J1emI0eXhvYVpyLzhPek1zb0VHSTRENFpOS0tCcHNrWUdQZ0tBczVkRC9WanlPNWJiMW1zM25zb2cyWktpemtiUHY5cWIvOSt2Y1BGLyttb0FDRkdVUWcxYUdFeFRuTTVzSXdFUGkvTEJnTWt6QWhOemk2cU1raXhxVnZEdjFHUDA0dDRSZlZhcXI5RGYxWXc1bzd6eFZ4TTNSZ3lON1FDY2FJei8rekxFSDRJR0FCTVZMdkVnUVBJQ29VSE1KQW43TENYbkZ2aFgvZHVRbi8vLy80L05sZi90OHVWVi8reFc0citkZXdjVW1wNmhVdmNMZ0RPWnhkUk8xcVFhQUFwbS9nTU14ZmprV3dYVERDUVNRb2l5VTRxNVVYNUhEV0pTeElxSVN3ZFUvNUdKWGZsbnE5VDRpZlIrQ3A3bG1wQVFNeWdNZ25NL2FNVmRGYndCdG1lbkhOU2gzMDV6czI2RE12QXVBNW1Gc0RGck5adzZSenNsLy9zd3hDMEF4Z2dQQlMzbElCRFNoZ1lock9rV0RpUHpTempFVXlGSUkwdE1RVTFGTXk0NU9TNHpWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVic7XHJcbmNvbnN0IHNvdW5kQnl0ZUFycmF5ID0gYmFzZTY0U291bmRUb0J5dGVBcnJheSggcGhldEF1ZGlvQ29udGV4dCwgc291bmRVUkkgKTtcclxuY29uc3QgdW5sb2NrID0gYXN5bmNMb2FkZXIuY3JlYXRlTG9jayggc291bmRVUkkgKTtcclxuY29uc3Qgd3JhcHBlZEF1ZGlvQnVmZmVyID0gbmV3IFdyYXBwZWRBdWRpb0J1ZmZlcigpO1xyXG5cclxuLy8gc2FmZSB3YXkgdG8gdW5sb2NrXHJcbmxldCB1bmxvY2tlZCA9IGZhbHNlO1xyXG5jb25zdCBzYWZlVW5sb2NrID0gKCkgPT4ge1xyXG4gIGlmICggIXVubG9ja2VkICkge1xyXG4gICAgdW5sb2NrKCk7XHJcbiAgICB1bmxvY2tlZCA9IHRydWU7XHJcbiAgfVxyXG59O1xyXG5cclxuY29uc3Qgb25EZWNvZGVTdWNjZXNzID0gZGVjb2RlZEF1ZGlvID0+IHtcclxuICBpZiAoIHdyYXBwZWRBdWRpb0J1ZmZlci5hdWRpb0J1ZmZlclByb3BlcnR5LnZhbHVlID09PSBudWxsICkge1xyXG4gICAgd3JhcHBlZEF1ZGlvQnVmZmVyLmF1ZGlvQnVmZmVyUHJvcGVydHkuc2V0KCBkZWNvZGVkQXVkaW8gKTtcclxuICAgIHNhZmVVbmxvY2soKTtcclxuICB9XHJcbn07XHJcbmNvbnN0IG9uRGVjb2RlRXJyb3IgPSBkZWNvZGVFcnJvciA9PiB7XHJcbiAgY29uc29sZS53YXJuKCAnZGVjb2RlIG9mIGF1ZGlvIGRhdGEgZmFpbGVkLCB1c2luZyBzdHViYmVkIHNvdW5kLCBlcnJvcjogJyArIGRlY29kZUVycm9yICk7XHJcbiAgd3JhcHBlZEF1ZGlvQnVmZmVyLmF1ZGlvQnVmZmVyUHJvcGVydHkuc2V0KCBwaGV0QXVkaW9Db250ZXh0LmNyZWF0ZUJ1ZmZlciggMSwgMSwgcGhldEF1ZGlvQ29udGV4dC5zYW1wbGVSYXRlICkgKTtcclxuICBzYWZlVW5sb2NrKCk7XHJcbn07XHJcbmNvbnN0IGRlY29kZVByb21pc2UgPSBwaGV0QXVkaW9Db250ZXh0LmRlY29kZUF1ZGlvRGF0YSggc291bmRCeXRlQXJyYXkuYnVmZmVyLCBvbkRlY29kZVN1Y2Nlc3MsIG9uRGVjb2RlRXJyb3IgKTtcclxuaWYgKCBkZWNvZGVQcm9taXNlICkge1xyXG4gIGRlY29kZVByb21pc2VcclxuICAgIC50aGVuKCBkZWNvZGVkQXVkaW8gPT4ge1xyXG4gICAgICBpZiAoIHdyYXBwZWRBdWRpb0J1ZmZlci5hdWRpb0J1ZmZlclByb3BlcnR5LnZhbHVlID09PSBudWxsICkge1xyXG4gICAgICAgIHdyYXBwZWRBdWRpb0J1ZmZlci5hdWRpb0J1ZmZlclByb3BlcnR5LnNldCggZGVjb2RlZEF1ZGlvICk7XHJcbiAgICAgICAgc2FmZVVubG9jaygpO1xyXG4gICAgICB9XHJcbiAgICB9IClcclxuICAgIC5jYXRjaCggZSA9PiB7XHJcbiAgICAgIGNvbnNvbGUud2FybiggJ3Byb21pc2UgcmVqZWN0aW9uIGNhdWdodCBmb3IgYXVkaW8gZGVjb2RlLCBlcnJvciA9ICcgKyBlICk7XHJcbiAgICAgIHNhZmVVbmxvY2soKTtcclxuICAgIH0gKTtcclxufVxyXG5leHBvcnQgZGVmYXVsdCB3cmFwcGVkQXVkaW9CdWZmZXI7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLE9BQU9BLFdBQVcsTUFBTSxtQ0FBbUM7QUFDM0QsT0FBT0Msc0JBQXNCLE1BQU0sMENBQTBDO0FBQzdFLE9BQU9DLGtCQUFrQixNQUFNLHNDQUFzQztBQUNyRSxPQUFPQyxnQkFBZ0IsTUFBTSxvQ0FBb0M7QUFFakUsTUFBTUMsUUFBUSxHQUFHLGkzREFBaTNEO0FBQ2w0RCxNQUFNQyxjQUFjLEdBQUdKLHNCQUFzQixDQUFFRSxnQkFBZ0IsRUFBRUMsUUFBUyxDQUFDO0FBQzNFLE1BQU1FLE1BQU0sR0FBR04sV0FBVyxDQUFDTyxVQUFVLENBQUVILFFBQVMsQ0FBQztBQUNqRCxNQUFNSSxrQkFBa0IsR0FBRyxJQUFJTixrQkFBa0IsQ0FBQyxDQUFDOztBQUVuRDtBQUNBLElBQUlPLFFBQVEsR0FBRyxLQUFLO0FBQ3BCLE1BQU1DLFVBQVUsR0FBR0EsQ0FBQSxLQUFNO0VBQ3ZCLElBQUssQ0FBQ0QsUUFBUSxFQUFHO0lBQ2ZILE1BQU0sQ0FBQyxDQUFDO0lBQ1JHLFFBQVEsR0FBRyxJQUFJO0VBQ2pCO0FBQ0YsQ0FBQztBQUVELE1BQU1FLGVBQWUsR0FBR0MsWUFBWSxJQUFJO0VBQ3RDLElBQUtKLGtCQUFrQixDQUFDSyxtQkFBbUIsQ0FBQ0MsS0FBSyxLQUFLLElBQUksRUFBRztJQUMzRE4sa0JBQWtCLENBQUNLLG1CQUFtQixDQUFDRSxHQUFHLENBQUVILFlBQWEsQ0FBQztJQUMxREYsVUFBVSxDQUFDLENBQUM7RUFDZDtBQUNGLENBQUM7QUFDRCxNQUFNTSxhQUFhLEdBQUdDLFdBQVcsSUFBSTtFQUNuQ0MsT0FBTyxDQUFDQyxJQUFJLENBQUUsMkRBQTJELEdBQUdGLFdBQVksQ0FBQztFQUN6RlQsa0JBQWtCLENBQUNLLG1CQUFtQixDQUFDRSxHQUFHLENBQUVaLGdCQUFnQixDQUFDaUIsWUFBWSxDQUFFLENBQUMsRUFBRSxDQUFDLEVBQUVqQixnQkFBZ0IsQ0FBQ2tCLFVBQVcsQ0FBRSxDQUFDO0VBQ2hIWCxVQUFVLENBQUMsQ0FBQztBQUNkLENBQUM7QUFDRCxNQUFNWSxhQUFhLEdBQUduQixnQkFBZ0IsQ0FBQ29CLGVBQWUsQ0FBRWxCLGNBQWMsQ0FBQ21CLE1BQU0sRUFBRWIsZUFBZSxFQUFFSyxhQUFjLENBQUM7QUFDL0csSUFBS00sYUFBYSxFQUFHO0VBQ25CQSxhQUFhLENBQ1ZHLElBQUksQ0FBRWIsWUFBWSxJQUFJO0lBQ3JCLElBQUtKLGtCQUFrQixDQUFDSyxtQkFBbUIsQ0FBQ0MsS0FBSyxLQUFLLElBQUksRUFBRztNQUMzRE4sa0JBQWtCLENBQUNLLG1CQUFtQixDQUFDRSxHQUFHLENBQUVILFlBQWEsQ0FBQztNQUMxREYsVUFBVSxDQUFDLENBQUM7SUFDZDtFQUNGLENBQUUsQ0FBQyxDQUNGZ0IsS0FBSyxDQUFFQyxDQUFDLElBQUk7SUFDWFQsT0FBTyxDQUFDQyxJQUFJLENBQUUscURBQXFELEdBQUdRLENBQUUsQ0FBQztJQUN6RWpCLFVBQVUsQ0FBQyxDQUFDO0VBQ2QsQ0FBRSxDQUFDO0FBQ1A7QUFDQSxlQUFlRixrQkFBa0IifQ==