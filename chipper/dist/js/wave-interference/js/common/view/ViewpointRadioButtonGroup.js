// Copyright 2018-2023, University of Colorado Boulder
// @ts-nocheck
/**
 * Selects between Top View and Side View.
 *
 * @author Sam Reid (PhET Interactive Simulations)
 */

import waveInterference from '../../waveInterference.js';
import WaveInterferenceStrings from '../../WaveInterferenceStrings.js';
import WavesModel from '../../waves/model/WavesModel.js';
import WaveInterferenceConstants from '../WaveInterferenceConstants.js';
import WaveInterferenceText from './WaveInterferenceText.js';
import WaveInterferenceVerticalAquaRadioButtonGroup from './WaveInterferenceVerticalAquaRadioButtonGroup.js';
const sideViewString = WaveInterferenceStrings.sideView;
const topViewString = WaveInterferenceStrings.topView;

// constants
const TEXT_OPTIONS = {
  maxWidth: WaveInterferenceConstants.MAX_WIDTH_VIEWPORT_BUTTON_TEXT
}; // Prevent from overlapping the play/pause button

class ViewpointRadioButtonGroup extends WaveInterferenceVerticalAquaRadioButtonGroup {
  constructor(viewpointProperty, options) {
    super(viewpointProperty, [{
      createNode: () => new WaveInterferenceText(topViewString, TEXT_OPTIONS),
      value: WavesModel.Viewpoint.TOP
    }, {
      createNode: () => new WaveInterferenceText(sideViewString, TEXT_OPTIONS),
      value: WavesModel.Viewpoint.SIDE
    }], options);
  }
}
waveInterference.register('ViewpointRadioButtonGroup', ViewpointRadioButtonGroup);
export default ViewpointRadioButtonGroup;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJ3YXZlSW50ZXJmZXJlbmNlIiwiV2F2ZUludGVyZmVyZW5jZVN0cmluZ3MiLCJXYXZlc01vZGVsIiwiV2F2ZUludGVyZmVyZW5jZUNvbnN0YW50cyIsIldhdmVJbnRlcmZlcmVuY2VUZXh0IiwiV2F2ZUludGVyZmVyZW5jZVZlcnRpY2FsQXF1YVJhZGlvQnV0dG9uR3JvdXAiLCJzaWRlVmlld1N0cmluZyIsInNpZGVWaWV3IiwidG9wVmlld1N0cmluZyIsInRvcFZpZXciLCJURVhUX09QVElPTlMiLCJtYXhXaWR0aCIsIk1BWF9XSURUSF9WSUVXUE9SVF9CVVRUT05fVEVYVCIsIlZpZXdwb2ludFJhZGlvQnV0dG9uR3JvdXAiLCJjb25zdHJ1Y3RvciIsInZpZXdwb2ludFByb3BlcnR5Iiwib3B0aW9ucyIsImNyZWF0ZU5vZGUiLCJ2YWx1ZSIsIlZpZXdwb2ludCIsIlRPUCIsIlNJREUiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIlZpZXdwb2ludFJhZGlvQnV0dG9uR3JvdXAudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTgtMjAyMywgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcbi8vIEB0cy1ub2NoZWNrXHJcbi8qKlxyXG4gKiBTZWxlY3RzIGJldHdlZW4gVG9wIFZpZXcgYW5kIFNpZGUgVmlldy5cclxuICpcclxuICogQGF1dGhvciBTYW0gUmVpZCAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcclxuICovXHJcblxyXG5pbXBvcnQgd2F2ZUludGVyZmVyZW5jZSBmcm9tICcuLi8uLi93YXZlSW50ZXJmZXJlbmNlLmpzJztcclxuaW1wb3J0IFdhdmVJbnRlcmZlcmVuY2VTdHJpbmdzIGZyb20gJy4uLy4uL1dhdmVJbnRlcmZlcmVuY2VTdHJpbmdzLmpzJztcclxuaW1wb3J0IFdhdmVzTW9kZWwgZnJvbSAnLi4vLi4vd2F2ZXMvbW9kZWwvV2F2ZXNNb2RlbC5qcyc7XHJcbmltcG9ydCBXYXZlSW50ZXJmZXJlbmNlQ29uc3RhbnRzIGZyb20gJy4uL1dhdmVJbnRlcmZlcmVuY2VDb25zdGFudHMuanMnO1xyXG5pbXBvcnQgV2F2ZUludGVyZmVyZW5jZVRleHQgZnJvbSAnLi9XYXZlSW50ZXJmZXJlbmNlVGV4dC5qcyc7XHJcbmltcG9ydCBXYXZlSW50ZXJmZXJlbmNlVmVydGljYWxBcXVhUmFkaW9CdXR0b25Hcm91cCBmcm9tICcuL1dhdmVJbnRlcmZlcmVuY2VWZXJ0aWNhbEFxdWFSYWRpb0J1dHRvbkdyb3VwLmpzJztcclxuXHJcbmNvbnN0IHNpZGVWaWV3U3RyaW5nID0gV2F2ZUludGVyZmVyZW5jZVN0cmluZ3Muc2lkZVZpZXc7XHJcbmNvbnN0IHRvcFZpZXdTdHJpbmcgPSBXYXZlSW50ZXJmZXJlbmNlU3RyaW5ncy50b3BWaWV3O1xyXG5cclxuLy8gY29uc3RhbnRzXHJcbmNvbnN0IFRFWFRfT1BUSU9OUyA9IHsgbWF4V2lkdGg6IFdhdmVJbnRlcmZlcmVuY2VDb25zdGFudHMuTUFYX1dJRFRIX1ZJRVdQT1JUX0JVVFRPTl9URVhUIH07IC8vIFByZXZlbnQgZnJvbSBvdmVybGFwcGluZyB0aGUgcGxheS9wYXVzZSBidXR0b25cclxuXHJcbmNsYXNzIFZpZXdwb2ludFJhZGlvQnV0dG9uR3JvdXAgZXh0ZW5kcyBXYXZlSW50ZXJmZXJlbmNlVmVydGljYWxBcXVhUmFkaW9CdXR0b25Hcm91cCB7XHJcblxyXG4gIHB1YmxpYyBjb25zdHJ1Y3Rvciggdmlld3BvaW50UHJvcGVydHksIG9wdGlvbnMgKSB7XHJcblxyXG4gICAgc3VwZXIoIHZpZXdwb2ludFByb3BlcnR5LCBbIHtcclxuICAgICAgY3JlYXRlTm9kZTogKCkgPT4gbmV3IFdhdmVJbnRlcmZlcmVuY2VUZXh0KCB0b3BWaWV3U3RyaW5nLCBURVhUX09QVElPTlMgKSxcclxuICAgICAgdmFsdWU6IFdhdmVzTW9kZWwuVmlld3BvaW50LlRPUFxyXG4gICAgfSwge1xyXG4gICAgICBjcmVhdGVOb2RlOiAoKSA9PiBuZXcgV2F2ZUludGVyZmVyZW5jZVRleHQoIHNpZGVWaWV3U3RyaW5nLCBURVhUX09QVElPTlMgKSxcclxuICAgICAgdmFsdWU6IFdhdmVzTW9kZWwuVmlld3BvaW50LlNJREVcclxuICAgIH0gXSwgb3B0aW9ucyApO1xyXG4gIH1cclxufVxyXG5cclxud2F2ZUludGVyZmVyZW5jZS5yZWdpc3RlciggJ1ZpZXdwb2ludFJhZGlvQnV0dG9uR3JvdXAnLCBWaWV3cG9pbnRSYWRpb0J1dHRvbkdyb3VwICk7XHJcbmV4cG9ydCBkZWZhdWx0IFZpZXdwb2ludFJhZGlvQnV0dG9uR3JvdXA7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxnQkFBZ0IsTUFBTSwyQkFBMkI7QUFDeEQsT0FBT0MsdUJBQXVCLE1BQU0sa0NBQWtDO0FBQ3RFLE9BQU9DLFVBQVUsTUFBTSxpQ0FBaUM7QUFDeEQsT0FBT0MseUJBQXlCLE1BQU0saUNBQWlDO0FBQ3ZFLE9BQU9DLG9CQUFvQixNQUFNLDJCQUEyQjtBQUM1RCxPQUFPQyw0Q0FBNEMsTUFBTSxtREFBbUQ7QUFFNUcsTUFBTUMsY0FBYyxHQUFHTCx1QkFBdUIsQ0FBQ00sUUFBUTtBQUN2RCxNQUFNQyxhQUFhLEdBQUdQLHVCQUF1QixDQUFDUSxPQUFPOztBQUVyRDtBQUNBLE1BQU1DLFlBQVksR0FBRztFQUFFQyxRQUFRLEVBQUVSLHlCQUF5QixDQUFDUztBQUErQixDQUFDLENBQUMsQ0FBQzs7QUFFN0YsTUFBTUMseUJBQXlCLFNBQVNSLDRDQUE0QyxDQUFDO0VBRTVFUyxXQUFXQSxDQUFFQyxpQkFBaUIsRUFBRUMsT0FBTyxFQUFHO0lBRS9DLEtBQUssQ0FBRUQsaUJBQWlCLEVBQUUsQ0FBRTtNQUMxQkUsVUFBVSxFQUFFQSxDQUFBLEtBQU0sSUFBSWIsb0JBQW9CLENBQUVJLGFBQWEsRUFBRUUsWUFBYSxDQUFDO01BQ3pFUSxLQUFLLEVBQUVoQixVQUFVLENBQUNpQixTQUFTLENBQUNDO0lBQzlCLENBQUMsRUFBRTtNQUNESCxVQUFVLEVBQUVBLENBQUEsS0FBTSxJQUFJYixvQkFBb0IsQ0FBRUUsY0FBYyxFQUFFSSxZQUFhLENBQUM7TUFDMUVRLEtBQUssRUFBRWhCLFVBQVUsQ0FBQ2lCLFNBQVMsQ0FBQ0U7SUFDOUIsQ0FBQyxDQUFFLEVBQUVMLE9BQVEsQ0FBQztFQUNoQjtBQUNGO0FBRUFoQixnQkFBZ0IsQ0FBQ3NCLFFBQVEsQ0FBRSwyQkFBMkIsRUFBRVQseUJBQTBCLENBQUM7QUFDbkYsZUFBZUEseUJBQXlCIn0=