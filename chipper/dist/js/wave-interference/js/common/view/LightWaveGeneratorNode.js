// Copyright 2018-2022, University of Colorado Boulder
// @ts-nocheck
/**
 * For the light scene, shows one laser pointer for each wave generator, each with its own on/off button.
 *
 * @author Sam Reid (PhET Interactive Simulations)
 */

import Dimension2 from '../../../../dot/js/Dimension2.js';
import merge from '../../../../phet-core/js/merge.js';
import LaserPointerNode from '../../../../scenery-phet/js/LaserPointerNode.js';
import waveInterference from '../../waveInterference.js';
import WaveGeneratorNode from './WaveGeneratorNode.js';
// constants
const DEFAULT_OPTIONS = {
  bodySize: new Dimension2(80, 40),
  nozzleSize: new Dimension2(10, 28),
  hasGlass: true,
  hasButton: false
};
class LightWaveGeneratorNode extends WaveGeneratorNode {
  constructor(lightScene, waveAreaNode, isPrimarySource) {
    const laserPointerNode = new LaserPointerNode(lightScene.button1PressedProperty, merge({
      rightCenter: waveAreaNode.leftCenter.plusXY(20, 0)
    }, DEFAULT_OPTIONS));
    super(lightScene, waveAreaNode, 70, isPrimarySource, laserPointerNode);
  }
}

/**
 * @static
 * @public
 */
LightWaveGeneratorNode.DEFAULT_NODE_OPTIONS = DEFAULT_OPTIONS;
waveInterference.register('LightWaveGeneratorNode', LightWaveGeneratorNode);
export default LightWaveGeneratorNode;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJEaW1lbnNpb24yIiwibWVyZ2UiLCJMYXNlclBvaW50ZXJOb2RlIiwid2F2ZUludGVyZmVyZW5jZSIsIldhdmVHZW5lcmF0b3JOb2RlIiwiREVGQVVMVF9PUFRJT05TIiwiYm9keVNpemUiLCJub3p6bGVTaXplIiwiaGFzR2xhc3MiLCJoYXNCdXR0b24iLCJMaWdodFdhdmVHZW5lcmF0b3JOb2RlIiwiY29uc3RydWN0b3IiLCJsaWdodFNjZW5lIiwid2F2ZUFyZWFOb2RlIiwiaXNQcmltYXJ5U291cmNlIiwibGFzZXJQb2ludGVyTm9kZSIsImJ1dHRvbjFQcmVzc2VkUHJvcGVydHkiLCJyaWdodENlbnRlciIsImxlZnRDZW50ZXIiLCJwbHVzWFkiLCJERUZBVUxUX05PREVfT1BUSU9OUyIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiTGlnaHRXYXZlR2VuZXJhdG9yTm9kZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxOC0yMDIyLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuLy8gQHRzLW5vY2hlY2tcclxuLyoqXHJcbiAqIEZvciB0aGUgbGlnaHQgc2NlbmUsIHNob3dzIG9uZSBsYXNlciBwb2ludGVyIGZvciBlYWNoIHdhdmUgZ2VuZXJhdG9yLCBlYWNoIHdpdGggaXRzIG93biBvbi9vZmYgYnV0dG9uLlxyXG4gKlxyXG4gKiBAYXV0aG9yIFNhbSBSZWlkIChQaEVUIEludGVyYWN0aXZlIFNpbXVsYXRpb25zKVxyXG4gKi9cclxuXHJcbmltcG9ydCBEaW1lbnNpb24yIGZyb20gJy4uLy4uLy4uLy4uL2RvdC9qcy9EaW1lbnNpb24yLmpzJztcclxuaW1wb3J0IG1lcmdlIGZyb20gJy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy9tZXJnZS5qcyc7XHJcbmltcG9ydCBMYXNlclBvaW50ZXJOb2RlIGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnktcGhldC9qcy9MYXNlclBvaW50ZXJOb2RlLmpzJztcclxuaW1wb3J0IHdhdmVJbnRlcmZlcmVuY2UgZnJvbSAnLi4vLi4vd2F2ZUludGVyZmVyZW5jZS5qcyc7XHJcbmltcG9ydCBMaWdodFNjZW5lIGZyb20gJy4uL21vZGVsL0xpZ2h0U2NlbmUuanMnO1xyXG5pbXBvcnQgV2F2ZUdlbmVyYXRvck5vZGUgZnJvbSAnLi9XYXZlR2VuZXJhdG9yTm9kZS5qcyc7XHJcbmltcG9ydCBXYXZlQXJlYU5vZGUgZnJvbSAnLi9XYXZlQXJlYU5vZGUuanMnO1xyXG5cclxuLy8gY29uc3RhbnRzXHJcbmNvbnN0IERFRkFVTFRfT1BUSU9OUyA9IHtcclxuICBib2R5U2l6ZTogbmV3IERpbWVuc2lvbjIoIDgwLCA0MCApLFxyXG4gIG5venpsZVNpemU6IG5ldyBEaW1lbnNpb24yKCAxMCwgMjggKSxcclxuICBoYXNHbGFzczogdHJ1ZSxcclxuICBoYXNCdXR0b246IGZhbHNlXHJcbn07XHJcblxyXG5jbGFzcyBMaWdodFdhdmVHZW5lcmF0b3JOb2RlIGV4dGVuZHMgV2F2ZUdlbmVyYXRvck5vZGUge1xyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoIGxpZ2h0U2NlbmU6IExpZ2h0U2NlbmUsIHdhdmVBcmVhTm9kZTogV2F2ZUFyZWFOb2RlLCBpc1ByaW1hcnlTb3VyY2U6IGJvb2xlYW4gKSB7XHJcbiAgICBjb25zdCBsYXNlclBvaW50ZXJOb2RlID0gbmV3IExhc2VyUG9pbnRlck5vZGUoIGxpZ2h0U2NlbmUuYnV0dG9uMVByZXNzZWRQcm9wZXJ0eSwgbWVyZ2UoIHtcclxuICAgICAgcmlnaHRDZW50ZXI6IHdhdmVBcmVhTm9kZS5sZWZ0Q2VudGVyLnBsdXNYWSggMjAsIDAgKVxyXG4gICAgfSwgREVGQVVMVF9PUFRJT05TICkgKTtcclxuICAgIHN1cGVyKCBsaWdodFNjZW5lLCB3YXZlQXJlYU5vZGUsIDcwLCBpc1ByaW1hcnlTb3VyY2UsIGxhc2VyUG9pbnRlck5vZGUgKTtcclxuICB9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBAc3RhdGljXHJcbiAqIEBwdWJsaWNcclxuICovXHJcbkxpZ2h0V2F2ZUdlbmVyYXRvck5vZGUuREVGQVVMVF9OT0RFX09QVElPTlMgPSBERUZBVUxUX09QVElPTlM7XHJcblxyXG53YXZlSW50ZXJmZXJlbmNlLnJlZ2lzdGVyKCAnTGlnaHRXYXZlR2VuZXJhdG9yTm9kZScsIExpZ2h0V2F2ZUdlbmVyYXRvck5vZGUgKTtcclxuZXhwb3J0IGRlZmF1bHQgTGlnaHRXYXZlR2VuZXJhdG9yTm9kZTsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLFVBQVUsTUFBTSxrQ0FBa0M7QUFDekQsT0FBT0MsS0FBSyxNQUFNLG1DQUFtQztBQUNyRCxPQUFPQyxnQkFBZ0IsTUFBTSxpREFBaUQ7QUFDOUUsT0FBT0MsZ0JBQWdCLE1BQU0sMkJBQTJCO0FBRXhELE9BQU9DLGlCQUFpQixNQUFNLHdCQUF3QjtBQUd0RDtBQUNBLE1BQU1DLGVBQWUsR0FBRztFQUN0QkMsUUFBUSxFQUFFLElBQUlOLFVBQVUsQ0FBRSxFQUFFLEVBQUUsRUFBRyxDQUFDO0VBQ2xDTyxVQUFVLEVBQUUsSUFBSVAsVUFBVSxDQUFFLEVBQUUsRUFBRSxFQUFHLENBQUM7RUFDcENRLFFBQVEsRUFBRSxJQUFJO0VBQ2RDLFNBQVMsRUFBRTtBQUNiLENBQUM7QUFFRCxNQUFNQyxzQkFBc0IsU0FBU04saUJBQWlCLENBQUM7RUFFOUNPLFdBQVdBLENBQUVDLFVBQXNCLEVBQUVDLFlBQTBCLEVBQUVDLGVBQXdCLEVBQUc7SUFDakcsTUFBTUMsZ0JBQWdCLEdBQUcsSUFBSWIsZ0JBQWdCLENBQUVVLFVBQVUsQ0FBQ0ksc0JBQXNCLEVBQUVmLEtBQUssQ0FBRTtNQUN2RmdCLFdBQVcsRUFBRUosWUFBWSxDQUFDSyxVQUFVLENBQUNDLE1BQU0sQ0FBRSxFQUFFLEVBQUUsQ0FBRTtJQUNyRCxDQUFDLEVBQUVkLGVBQWdCLENBQUUsQ0FBQztJQUN0QixLQUFLLENBQUVPLFVBQVUsRUFBRUMsWUFBWSxFQUFFLEVBQUUsRUFBRUMsZUFBZSxFQUFFQyxnQkFBaUIsQ0FBQztFQUMxRTtBQUNGOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0FMLHNCQUFzQixDQUFDVSxvQkFBb0IsR0FBR2YsZUFBZTtBQUU3REYsZ0JBQWdCLENBQUNrQixRQUFRLENBQUUsd0JBQXdCLEVBQUVYLHNCQUF1QixDQUFDO0FBQzdFLGVBQWVBLHNCQUFzQiJ9