// Copyright 2018-2022, University of Colorado Boulder

/**
 * One probe for the WaveMeterNode
 *
 * @author Sam Reid (PhET Interactive Simulations)
 */

import optionize from '../../../../phet-core/js/optionize.js';
import ProbeNode from '../../../../scenery-phet/js/ProbeNode.js';
import { DragListener, InteractiveHighlighting } from '../../../../scenery/js/imports.js';
import waveInterference from '../../waveInterference.js';
class WaveMeterProbeNode extends InteractiveHighlighting(ProbeNode) {
  /**
   * @param visibleBoundsProperty - visible bounds of the ScreenView
   * @param [providedOptions]
   */
  constructor(visibleBoundsProperty, providedOptions) {
    const options = optionize()({
      cursor: 'pointer',
      sensorTypeFunction: ProbeNode.crosshairs({
        stroke: 'white'
      }),
      scale: 0.4,
      dragStart: _.noop,
      drag: _.noop
    }, providedOptions);
    super(options);
    visibleBoundsProperty.link(visibleBounds => this.setCenter(visibleBounds.closestPointTo(this.center)));
    this.addInputListener(new DragListener({
      translateNode: true,
      dragBoundsProperty: visibleBoundsProperty,
      start: () => options.dragStart(),
      drag: () => options.drag()
    }));
  }
}
waveInterference.register('WaveMeterProbeNode', WaveMeterProbeNode);
export default WaveMeterProbeNode;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJvcHRpb25pemUiLCJQcm9iZU5vZGUiLCJEcmFnTGlzdGVuZXIiLCJJbnRlcmFjdGl2ZUhpZ2hsaWdodGluZyIsIndhdmVJbnRlcmZlcmVuY2UiLCJXYXZlTWV0ZXJQcm9iZU5vZGUiLCJjb25zdHJ1Y3RvciIsInZpc2libGVCb3VuZHNQcm9wZXJ0eSIsInByb3ZpZGVkT3B0aW9ucyIsIm9wdGlvbnMiLCJjdXJzb3IiLCJzZW5zb3JUeXBlRnVuY3Rpb24iLCJjcm9zc2hhaXJzIiwic3Ryb2tlIiwic2NhbGUiLCJkcmFnU3RhcnQiLCJfIiwibm9vcCIsImRyYWciLCJsaW5rIiwidmlzaWJsZUJvdW5kcyIsInNldENlbnRlciIsImNsb3Nlc3RQb2ludFRvIiwiY2VudGVyIiwiYWRkSW5wdXRMaXN0ZW5lciIsInRyYW5zbGF0ZU5vZGUiLCJkcmFnQm91bmRzUHJvcGVydHkiLCJzdGFydCIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiV2F2ZU1ldGVyUHJvYmVOb2RlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE4LTIwMjIsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIE9uZSBwcm9iZSBmb3IgdGhlIFdhdmVNZXRlck5vZGVcclxuICpcclxuICogQGF1dGhvciBTYW0gUmVpZCAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcclxuICovXHJcblxyXG5pbXBvcnQgVFJlYWRPbmx5UHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vLi4vYXhvbi9qcy9UUmVhZE9ubHlQcm9wZXJ0eS5qcyc7XHJcbmltcG9ydCBCb3VuZHMyIGZyb20gJy4uLy4uLy4uLy4uL2RvdC9qcy9Cb3VuZHMyLmpzJztcclxuaW1wb3J0IG9wdGlvbml6ZSBmcm9tICcuLi8uLi8uLi8uLi9waGV0LWNvcmUvanMvb3B0aW9uaXplLmpzJztcclxuaW1wb3J0IFByb2JlTm9kZSwgeyBQcm9iZU5vZGVPcHRpb25zIH0gZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS1waGV0L2pzL1Byb2JlTm9kZS5qcyc7XHJcbmltcG9ydCB7IERyYWdMaXN0ZW5lciwgSW50ZXJhY3RpdmVIaWdobGlnaHRpbmcgfSBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgd2F2ZUludGVyZmVyZW5jZSBmcm9tICcuLi8uLi93YXZlSW50ZXJmZXJlbmNlLmpzJztcclxuXHJcbnR5cGUgU2VsZk9wdGlvbnMgPSB7XHJcbiAgZHJhZ1N0YXJ0PzogKCkgPT4gdm9pZDtcclxuICBkcmFnPzogKCkgPT4gdm9pZDtcclxufTtcclxuXHJcbnR5cGUgV2F2ZU1ldGVyUHJvYmVOb2RlT3B0aW9ucyA9IFNlbGZPcHRpb25zICYgUHJvYmVOb2RlT3B0aW9ucztcclxuXHJcbmNsYXNzIFdhdmVNZXRlclByb2JlTm9kZSBleHRlbmRzIEludGVyYWN0aXZlSGlnaGxpZ2h0aW5nKCBQcm9iZU5vZGUgKSB7XHJcblxyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSB2aXNpYmxlQm91bmRzUHJvcGVydHkgLSB2aXNpYmxlIGJvdW5kcyBvZiB0aGUgU2NyZWVuVmlld1xyXG4gICAqIEBwYXJhbSBbcHJvdmlkZWRPcHRpb25zXVxyXG4gICAqL1xyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvciggdmlzaWJsZUJvdW5kc1Byb3BlcnR5OiBUUmVhZE9ubHlQcm9wZXJ0eTxCb3VuZHMyPiwgcHJvdmlkZWRPcHRpb25zPzogV2F2ZU1ldGVyUHJvYmVOb2RlT3B0aW9ucyApIHtcclxuXHJcbiAgICBjb25zdCBvcHRpb25zID0gb3B0aW9uaXplPFdhdmVNZXRlclByb2JlTm9kZU9wdGlvbnMsIFNlbGZPcHRpb25zLCBQcm9iZU5vZGVPcHRpb25zPigpKCB7XHJcbiAgICAgIGN1cnNvcjogJ3BvaW50ZXInLFxyXG4gICAgICBzZW5zb3JUeXBlRnVuY3Rpb246IFByb2JlTm9kZS5jcm9zc2hhaXJzKCB7IHN0cm9rZTogJ3doaXRlJyB9ICksXHJcbiAgICAgIHNjYWxlOiAwLjQsXHJcbiAgICAgIGRyYWdTdGFydDogXy5ub29wLFxyXG4gICAgICBkcmFnOiBfLm5vb3BcclxuICAgIH0sIHByb3ZpZGVkT3B0aW9ucyApO1xyXG5cclxuICAgIHN1cGVyKCBvcHRpb25zICk7XHJcblxyXG4gICAgdmlzaWJsZUJvdW5kc1Byb3BlcnR5LmxpbmsoIHZpc2libGVCb3VuZHMgPT4gdGhpcy5zZXRDZW50ZXIoIHZpc2libGVCb3VuZHMuY2xvc2VzdFBvaW50VG8oIHRoaXMuY2VudGVyICkgKSApO1xyXG5cclxuICAgIHRoaXMuYWRkSW5wdXRMaXN0ZW5lciggbmV3IERyYWdMaXN0ZW5lcigge1xyXG4gICAgICB0cmFuc2xhdGVOb2RlOiB0cnVlLFxyXG4gICAgICBkcmFnQm91bmRzUHJvcGVydHk6IHZpc2libGVCb3VuZHNQcm9wZXJ0eSxcclxuICAgICAgc3RhcnQ6ICgpID0+IG9wdGlvbnMuZHJhZ1N0YXJ0KCksXHJcbiAgICAgIGRyYWc6ICgpID0+IG9wdGlvbnMuZHJhZygpXHJcbiAgICB9ICkgKTtcclxuICB9XHJcbn1cclxuXHJcbndhdmVJbnRlcmZlcmVuY2UucmVnaXN0ZXIoICdXYXZlTWV0ZXJQcm9iZU5vZGUnLCBXYXZlTWV0ZXJQcm9iZU5vZGUgKTtcclxuZXhwb3J0IGRlZmF1bHQgV2F2ZU1ldGVyUHJvYmVOb2RlOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFJQSxPQUFPQSxTQUFTLE1BQU0sdUNBQXVDO0FBQzdELE9BQU9DLFNBQVMsTUFBNEIsMENBQTBDO0FBQ3RGLFNBQVNDLFlBQVksRUFBRUMsdUJBQXVCLFFBQVEsbUNBQW1DO0FBQ3pGLE9BQU9DLGdCQUFnQixNQUFNLDJCQUEyQjtBQVN4RCxNQUFNQyxrQkFBa0IsU0FBU0YsdUJBQXVCLENBQUVGLFNBQVUsQ0FBQyxDQUFDO0VBRXBFO0FBQ0Y7QUFDQTtBQUNBO0VBQ1NLLFdBQVdBLENBQUVDLHFCQUFpRCxFQUFFQyxlQUEyQyxFQUFHO0lBRW5ILE1BQU1DLE9BQU8sR0FBR1QsU0FBUyxDQUEyRCxDQUFDLENBQUU7TUFDckZVLE1BQU0sRUFBRSxTQUFTO01BQ2pCQyxrQkFBa0IsRUFBRVYsU0FBUyxDQUFDVyxVQUFVLENBQUU7UUFBRUMsTUFBTSxFQUFFO01BQVEsQ0FBRSxDQUFDO01BQy9EQyxLQUFLLEVBQUUsR0FBRztNQUNWQyxTQUFTLEVBQUVDLENBQUMsQ0FBQ0MsSUFBSTtNQUNqQkMsSUFBSSxFQUFFRixDQUFDLENBQUNDO0lBQ1YsQ0FBQyxFQUFFVCxlQUFnQixDQUFDO0lBRXBCLEtBQUssQ0FBRUMsT0FBUSxDQUFDO0lBRWhCRixxQkFBcUIsQ0FBQ1ksSUFBSSxDQUFFQyxhQUFhLElBQUksSUFBSSxDQUFDQyxTQUFTLENBQUVELGFBQWEsQ0FBQ0UsY0FBYyxDQUFFLElBQUksQ0FBQ0MsTUFBTyxDQUFFLENBQUUsQ0FBQztJQUU1RyxJQUFJLENBQUNDLGdCQUFnQixDQUFFLElBQUl0QixZQUFZLENBQUU7TUFDdkN1QixhQUFhLEVBQUUsSUFBSTtNQUNuQkMsa0JBQWtCLEVBQUVuQixxQkFBcUI7TUFDekNvQixLQUFLLEVBQUVBLENBQUEsS0FBTWxCLE9BQU8sQ0FBQ00sU0FBUyxDQUFDLENBQUM7TUFDaENHLElBQUksRUFBRUEsQ0FBQSxLQUFNVCxPQUFPLENBQUNTLElBQUksQ0FBQztJQUMzQixDQUFFLENBQUUsQ0FBQztFQUNQO0FBQ0Y7QUFFQWQsZ0JBQWdCLENBQUN3QixRQUFRLENBQUUsb0JBQW9CLEVBQUV2QixrQkFBbUIsQ0FBQztBQUNyRSxlQUFlQSxrQkFBa0IifQ==