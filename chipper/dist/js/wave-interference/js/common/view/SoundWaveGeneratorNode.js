// Copyright 2018-2022, University of Colorado Boulder
// @ts-nocheck
/**
 * For the sound scene, shows one speaker for each wave generator, each with its own on/off button.
 *
 * @author Sam Reid (PhET Interactive Simulations)
 */

import Utils from '../../../../dot/js/Utils.js';
import { Image } from '../../../../scenery/js/imports.js';
import speaker_L10_png from '../../../../scenery-phet/images/speaker/speaker_L10_png.js';
import speaker_L1_png from '../../../../scenery-phet/images/speaker/speaker_L1_png.js';
import speaker_L2_png from '../../../../scenery-phet/images/speaker/speaker_L2_png.js';
import speaker_L3_png from '../../../../scenery-phet/images/speaker/speaker_L3_png.js';
import speaker_L4_png from '../../../../scenery-phet/images/speaker/speaker_L4_png.js';
import speaker_L5_png from '../../../../scenery-phet/images/speaker/speaker_L5_png.js';
import speaker_L6_png from '../../../../scenery-phet/images/speaker/speaker_L6_png.js';
import speaker_L7_png from '../../../../scenery-phet/images/speaker/speaker_L7_png.js';
import speaker_L8_png from '../../../../scenery-phet/images/speaker/speaker_L8_png.js';
import speaker_L9_png from '../../../../scenery-phet/images/speaker/speaker_L9_png.js';
import speaker_MID_png from '../../../../scenery-phet/images/speaker/speaker_MID_png.js';
import speaker_R10_png from '../../../../scenery-phet/images/speaker/speaker_R10_png.js';
import speaker_R1_png from '../../../../scenery-phet/images/speaker/speaker_R1_png.js';
import speaker_R2_png from '../../../../scenery-phet/images/speaker/speaker_R2_png.js';
import speaker_R3_png from '../../../../scenery-phet/images/speaker/speaker_R3_png.js';
import speaker_R4_png from '../../../../scenery-phet/images/speaker/speaker_R4_png.js';
import speaker_R5_png from '../../../../scenery-phet/images/speaker/speaker_R5_png.js';
import speaker_R6_png from '../../../../scenery-phet/images/speaker/speaker_R6_png.js';
import speaker_R7_png from '../../../../scenery-phet/images/speaker/speaker_R7_png.js';
import speaker_R8_png from '../../../../scenery-phet/images/speaker/speaker_R8_png.js';
import speaker_R9_png from '../../../../scenery-phet/images/speaker/speaker_R9_png.js';
import waveInterference from '../../waveInterference.js';
import WaveInterferenceConstants from '../WaveInterferenceConstants.js';
import WaveGeneratorNode from './WaveGeneratorNode.js';
// variables
const speakers = [speaker_L10_png, speaker_L9_png, speaker_L8_png, speaker_L7_png, speaker_L6_png, speaker_L5_png, speaker_L4_png, speaker_L3_png, speaker_L2_png, speaker_L1_png, speaker_MID_png, speaker_R1_png, speaker_R2_png, speaker_R3_png, speaker_R4_png, speaker_R5_png, speaker_R6_png, speaker_R7_png, speaker_R8_png, speaker_R9_png, speaker_R10_png];
class SoundWaveGeneratorNode extends WaveGeneratorNode {
  constructor(soundScene, waveAreaNode, isPrimarySource) {
    const image = new Image(speaker_MID_png, {
      rightCenter: waveAreaNode.leftCenter.plusXY(20, 0),
      scale: 0.75,
      renderer: 'canvas'
    });
    super(soundScene, waveAreaNode, 42, isPrimarySource, image);
    const modelProperty = isPrimarySource ? soundScene.oscillator1Property : soundScene.oscillator2Property;
    modelProperty.link(oscillator1 => {
      const max = soundScene.amplitudeProperty.range.max * WaveInterferenceConstants.AMPLITUDE_CALIBRATION_SCALE;

      // Sign is chosen so that the membrane forward corresponds to a high pressure outside the speaker,
      // see https://github.com/phetsims/wave-interference/issues/178
      const interpolated = Utils.linear(-max, max, 0, speakers.length - 1, oscillator1);
      const index = Utils.roundSymmetric(interpolated);
      image.image = speakers[index];
    });
  }
}
waveInterference.register('SoundWaveGeneratorNode', SoundWaveGeneratorNode);
export default SoundWaveGeneratorNode;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJVdGlscyIsIkltYWdlIiwic3BlYWtlcl9MMTBfcG5nIiwic3BlYWtlcl9MMV9wbmciLCJzcGVha2VyX0wyX3BuZyIsInNwZWFrZXJfTDNfcG5nIiwic3BlYWtlcl9MNF9wbmciLCJzcGVha2VyX0w1X3BuZyIsInNwZWFrZXJfTDZfcG5nIiwic3BlYWtlcl9MN19wbmciLCJzcGVha2VyX0w4X3BuZyIsInNwZWFrZXJfTDlfcG5nIiwic3BlYWtlcl9NSURfcG5nIiwic3BlYWtlcl9SMTBfcG5nIiwic3BlYWtlcl9SMV9wbmciLCJzcGVha2VyX1IyX3BuZyIsInNwZWFrZXJfUjNfcG5nIiwic3BlYWtlcl9SNF9wbmciLCJzcGVha2VyX1I1X3BuZyIsInNwZWFrZXJfUjZfcG5nIiwic3BlYWtlcl9SN19wbmciLCJzcGVha2VyX1I4X3BuZyIsInNwZWFrZXJfUjlfcG5nIiwid2F2ZUludGVyZmVyZW5jZSIsIldhdmVJbnRlcmZlcmVuY2VDb25zdGFudHMiLCJXYXZlR2VuZXJhdG9yTm9kZSIsInNwZWFrZXJzIiwiU291bmRXYXZlR2VuZXJhdG9yTm9kZSIsImNvbnN0cnVjdG9yIiwic291bmRTY2VuZSIsIndhdmVBcmVhTm9kZSIsImlzUHJpbWFyeVNvdXJjZSIsImltYWdlIiwicmlnaHRDZW50ZXIiLCJsZWZ0Q2VudGVyIiwicGx1c1hZIiwic2NhbGUiLCJyZW5kZXJlciIsIm1vZGVsUHJvcGVydHkiLCJvc2NpbGxhdG9yMVByb3BlcnR5Iiwib3NjaWxsYXRvcjJQcm9wZXJ0eSIsImxpbmsiLCJvc2NpbGxhdG9yMSIsIm1heCIsImFtcGxpdHVkZVByb3BlcnR5IiwicmFuZ2UiLCJBTVBMSVRVREVfQ0FMSUJSQVRJT05fU0NBTEUiLCJpbnRlcnBvbGF0ZWQiLCJsaW5lYXIiLCJsZW5ndGgiLCJpbmRleCIsInJvdW5kU3ltbWV0cmljIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJTb3VuZFdhdmVHZW5lcmF0b3JOb2RlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE4LTIwMjIsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG4vLyBAdHMtbm9jaGVja1xyXG4vKipcclxuICogRm9yIHRoZSBzb3VuZCBzY2VuZSwgc2hvd3Mgb25lIHNwZWFrZXIgZm9yIGVhY2ggd2F2ZSBnZW5lcmF0b3IsIGVhY2ggd2l0aCBpdHMgb3duIG9uL29mZiBidXR0b24uXHJcbiAqXHJcbiAqIEBhdXRob3IgU2FtIFJlaWQgKFBoRVQgSW50ZXJhY3RpdmUgU2ltdWxhdGlvbnMpXHJcbiAqL1xyXG5cclxuaW1wb3J0IFV0aWxzIGZyb20gJy4uLy4uLy4uLy4uL2RvdC9qcy9VdGlscy5qcyc7XHJcbmltcG9ydCB7IEltYWdlIH0gZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IHNwZWFrZXJfTDEwX3BuZyBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5LXBoZXQvaW1hZ2VzL3NwZWFrZXIvc3BlYWtlcl9MMTBfcG5nLmpzJztcclxuaW1wb3J0IHNwZWFrZXJfTDFfcG5nIGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnktcGhldC9pbWFnZXMvc3BlYWtlci9zcGVha2VyX0wxX3BuZy5qcyc7XHJcbmltcG9ydCBzcGVha2VyX0wyX3BuZyBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5LXBoZXQvaW1hZ2VzL3NwZWFrZXIvc3BlYWtlcl9MMl9wbmcuanMnO1xyXG5pbXBvcnQgc3BlYWtlcl9MM19wbmcgZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS1waGV0L2ltYWdlcy9zcGVha2VyL3NwZWFrZXJfTDNfcG5nLmpzJztcclxuaW1wb3J0IHNwZWFrZXJfTDRfcG5nIGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnktcGhldC9pbWFnZXMvc3BlYWtlci9zcGVha2VyX0w0X3BuZy5qcyc7XHJcbmltcG9ydCBzcGVha2VyX0w1X3BuZyBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5LXBoZXQvaW1hZ2VzL3NwZWFrZXIvc3BlYWtlcl9MNV9wbmcuanMnO1xyXG5pbXBvcnQgc3BlYWtlcl9MNl9wbmcgZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS1waGV0L2ltYWdlcy9zcGVha2VyL3NwZWFrZXJfTDZfcG5nLmpzJztcclxuaW1wb3J0IHNwZWFrZXJfTDdfcG5nIGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnktcGhldC9pbWFnZXMvc3BlYWtlci9zcGVha2VyX0w3X3BuZy5qcyc7XHJcbmltcG9ydCBzcGVha2VyX0w4X3BuZyBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5LXBoZXQvaW1hZ2VzL3NwZWFrZXIvc3BlYWtlcl9MOF9wbmcuanMnO1xyXG5pbXBvcnQgc3BlYWtlcl9MOV9wbmcgZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS1waGV0L2ltYWdlcy9zcGVha2VyL3NwZWFrZXJfTDlfcG5nLmpzJztcclxuaW1wb3J0IHNwZWFrZXJfTUlEX3BuZyBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5LXBoZXQvaW1hZ2VzL3NwZWFrZXIvc3BlYWtlcl9NSURfcG5nLmpzJztcclxuaW1wb3J0IHNwZWFrZXJfUjEwX3BuZyBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5LXBoZXQvaW1hZ2VzL3NwZWFrZXIvc3BlYWtlcl9SMTBfcG5nLmpzJztcclxuaW1wb3J0IHNwZWFrZXJfUjFfcG5nIGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnktcGhldC9pbWFnZXMvc3BlYWtlci9zcGVha2VyX1IxX3BuZy5qcyc7XHJcbmltcG9ydCBzcGVha2VyX1IyX3BuZyBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5LXBoZXQvaW1hZ2VzL3NwZWFrZXIvc3BlYWtlcl9SMl9wbmcuanMnO1xyXG5pbXBvcnQgc3BlYWtlcl9SM19wbmcgZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS1waGV0L2ltYWdlcy9zcGVha2VyL3NwZWFrZXJfUjNfcG5nLmpzJztcclxuaW1wb3J0IHNwZWFrZXJfUjRfcG5nIGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnktcGhldC9pbWFnZXMvc3BlYWtlci9zcGVha2VyX1I0X3BuZy5qcyc7XHJcbmltcG9ydCBzcGVha2VyX1I1X3BuZyBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5LXBoZXQvaW1hZ2VzL3NwZWFrZXIvc3BlYWtlcl9SNV9wbmcuanMnO1xyXG5pbXBvcnQgc3BlYWtlcl9SNl9wbmcgZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS1waGV0L2ltYWdlcy9zcGVha2VyL3NwZWFrZXJfUjZfcG5nLmpzJztcclxuaW1wb3J0IHNwZWFrZXJfUjdfcG5nIGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnktcGhldC9pbWFnZXMvc3BlYWtlci9zcGVha2VyX1I3X3BuZy5qcyc7XHJcbmltcG9ydCBzcGVha2VyX1I4X3BuZyBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5LXBoZXQvaW1hZ2VzL3NwZWFrZXIvc3BlYWtlcl9SOF9wbmcuanMnO1xyXG5pbXBvcnQgc3BlYWtlcl9SOV9wbmcgZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS1waGV0L2ltYWdlcy9zcGVha2VyL3NwZWFrZXJfUjlfcG5nLmpzJztcclxuaW1wb3J0IHdhdmVJbnRlcmZlcmVuY2UgZnJvbSAnLi4vLi4vd2F2ZUludGVyZmVyZW5jZS5qcyc7XHJcbmltcG9ydCBTb3VuZFNjZW5lIGZyb20gJy4uL21vZGVsL1NvdW5kU2NlbmUuanMnO1xyXG5pbXBvcnQgV2F2ZUludGVyZmVyZW5jZUNvbnN0YW50cyBmcm9tICcuLi9XYXZlSW50ZXJmZXJlbmNlQ29uc3RhbnRzLmpzJztcclxuaW1wb3J0IFdhdmVHZW5lcmF0b3JOb2RlIGZyb20gJy4vV2F2ZUdlbmVyYXRvck5vZGUuanMnO1xyXG5pbXBvcnQgV2F2ZUFyZWFOb2RlIGZyb20gJy4vV2F2ZUFyZWFOb2RlLmpzJztcclxuXHJcbi8vIHZhcmlhYmxlc1xyXG5jb25zdCBzcGVha2VycyA9IFtcclxuICBzcGVha2VyX0wxMF9wbmcsXHJcbiAgc3BlYWtlcl9MOV9wbmcsXHJcbiAgc3BlYWtlcl9MOF9wbmcsXHJcbiAgc3BlYWtlcl9MN19wbmcsXHJcbiAgc3BlYWtlcl9MNl9wbmcsXHJcbiAgc3BlYWtlcl9MNV9wbmcsXHJcbiAgc3BlYWtlcl9MNF9wbmcsXHJcbiAgc3BlYWtlcl9MM19wbmcsXHJcbiAgc3BlYWtlcl9MMl9wbmcsXHJcbiAgc3BlYWtlcl9MMV9wbmcsXHJcbiAgc3BlYWtlcl9NSURfcG5nLFxyXG4gIHNwZWFrZXJfUjFfcG5nLFxyXG4gIHNwZWFrZXJfUjJfcG5nLFxyXG4gIHNwZWFrZXJfUjNfcG5nLFxyXG4gIHNwZWFrZXJfUjRfcG5nLFxyXG4gIHNwZWFrZXJfUjVfcG5nLFxyXG4gIHNwZWFrZXJfUjZfcG5nLFxyXG4gIHNwZWFrZXJfUjdfcG5nLFxyXG4gIHNwZWFrZXJfUjhfcG5nLFxyXG4gIHNwZWFrZXJfUjlfcG5nLFxyXG4gIHNwZWFrZXJfUjEwX3BuZ1xyXG5dO1xyXG5cclxuY2xhc3MgU291bmRXYXZlR2VuZXJhdG9yTm9kZSBleHRlbmRzIFdhdmVHZW5lcmF0b3JOb2RlIHtcclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKCBzb3VuZFNjZW5lOiBTb3VuZFNjZW5lLCB3YXZlQXJlYU5vZGU6IFdhdmVBcmVhTm9kZSwgaXNQcmltYXJ5U291cmNlOiBib29sZWFuICkge1xyXG4gICAgY29uc3QgaW1hZ2UgPSBuZXcgSW1hZ2UoIHNwZWFrZXJfTUlEX3BuZywge1xyXG4gICAgICByaWdodENlbnRlcjogd2F2ZUFyZWFOb2RlLmxlZnRDZW50ZXIucGx1c1hZKCAyMCwgMCApLFxyXG4gICAgICBzY2FsZTogMC43NSxcclxuICAgICAgcmVuZGVyZXI6ICdjYW52YXMnXHJcbiAgICB9ICk7XHJcbiAgICBzdXBlciggc291bmRTY2VuZSwgd2F2ZUFyZWFOb2RlLCA0MiwgaXNQcmltYXJ5U291cmNlLCBpbWFnZSApO1xyXG4gICAgY29uc3QgbW9kZWxQcm9wZXJ0eSA9IGlzUHJpbWFyeVNvdXJjZSA/IHNvdW5kU2NlbmUub3NjaWxsYXRvcjFQcm9wZXJ0eSA6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgc291bmRTY2VuZS5vc2NpbGxhdG9yMlByb3BlcnR5O1xyXG4gICAgbW9kZWxQcm9wZXJ0eS5saW5rKCBvc2NpbGxhdG9yMSA9PiB7XHJcblxyXG4gICAgICBjb25zdCBtYXggPSBzb3VuZFNjZW5lLmFtcGxpdHVkZVByb3BlcnR5LnJhbmdlLm1heCAqIFdhdmVJbnRlcmZlcmVuY2VDb25zdGFudHMuQU1QTElUVURFX0NBTElCUkFUSU9OX1NDQUxFO1xyXG5cclxuICAgICAgLy8gU2lnbiBpcyBjaG9zZW4gc28gdGhhdCB0aGUgbWVtYnJhbmUgZm9yd2FyZCBjb3JyZXNwb25kcyB0byBhIGhpZ2ggcHJlc3N1cmUgb3V0c2lkZSB0aGUgc3BlYWtlcixcclxuICAgICAgLy8gc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9waGV0c2ltcy93YXZlLWludGVyZmVyZW5jZS9pc3N1ZXMvMTc4XHJcbiAgICAgIGNvbnN0IGludGVycG9sYXRlZCA9IFV0aWxzLmxpbmVhciggLW1heCwgbWF4LCAwLCBzcGVha2Vycy5sZW5ndGggLSAxLCBvc2NpbGxhdG9yMSApO1xyXG4gICAgICBjb25zdCBpbmRleCA9IFV0aWxzLnJvdW5kU3ltbWV0cmljKCBpbnRlcnBvbGF0ZWQgKTtcclxuICAgICAgaW1hZ2UuaW1hZ2UgPSBzcGVha2Vyc1sgaW5kZXggXTtcclxuICAgIH0gKTtcclxuICB9XHJcbn1cclxuXHJcbndhdmVJbnRlcmZlcmVuY2UucmVnaXN0ZXIoICdTb3VuZFdhdmVHZW5lcmF0b3JOb2RlJywgU291bmRXYXZlR2VuZXJhdG9yTm9kZSApO1xyXG5leHBvcnQgZGVmYXVsdCBTb3VuZFdhdmVHZW5lcmF0b3JOb2RlOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsS0FBSyxNQUFNLDZCQUE2QjtBQUMvQyxTQUFTQyxLQUFLLFFBQVEsbUNBQW1DO0FBQ3pELE9BQU9DLGVBQWUsTUFBTSw0REFBNEQ7QUFDeEYsT0FBT0MsY0FBYyxNQUFNLDJEQUEyRDtBQUN0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