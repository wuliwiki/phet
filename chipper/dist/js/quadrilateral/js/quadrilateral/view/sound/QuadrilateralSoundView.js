// Copyright 2021-2023, University of Colorado Boulder

/**
 * File responsible for the sound view of the quadrilateral. There are two sound designs that can be used (changed
 * from preferences). Manages the active one.
 *
 * @author Jesse Greenberg (PhET Interactive Simulations)
 */

import quadrilateral from '../../../quadrilateral.js';
import { SoundDesign } from '../../model/QuadrilateralSoundOptionsModel.js';
import LayersTracksSoundView from './LayersTracksSoundView.js';
import EmphasisTracksSoundView from './EmphasisTracksSoundView.js';
export default class QuadrilateralSoundView {
  // The sound view that is currently "active" and playing sounds.
  activeSoundView = null;
  constructor(model, soundOptionsModel) {
    soundOptionsModel.soundDesignProperty.link(soundDesign => {
      this.activeSoundView && this.activeSoundView.dispose();
      if (soundDesign === SoundDesign.TRACKS_LAYER) {
        this.activeSoundView = new LayersTracksSoundView(model.quadrilateralShapeModel, model.shapeSoundEnabledProperty, model.resetNotInProgressProperty, soundOptionsModel);
      } else if (soundDesign === SoundDesign.TRACKS_UNIQUE) {
        this.activeSoundView = new EmphasisTracksSoundView(model.quadrilateralShapeModel, model.shapeSoundEnabledProperty, model.resetNotInProgressProperty, soundOptionsModel);
      }
    });
  }

  /**
   * Step the sound view.
   *
   * @param dt - in seconds
   */
  step(dt) {
    assert && assert(this.activeSoundView, 'There must be an active sound view to update sounds.');
    this.activeSoundView.step(dt);
  }
}
quadrilateral.register('QuadrilateralSoundView', QuadrilateralSoundView);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJxdWFkcmlsYXRlcmFsIiwiU291bmREZXNpZ24iLCJMYXllcnNUcmFja3NTb3VuZFZpZXciLCJFbXBoYXNpc1RyYWNrc1NvdW5kVmlldyIsIlF1YWRyaWxhdGVyYWxTb3VuZFZpZXciLCJhY3RpdmVTb3VuZFZpZXciLCJjb25zdHJ1Y3RvciIsIm1vZGVsIiwic291bmRPcHRpb25zTW9kZWwiLCJzb3VuZERlc2lnblByb3BlcnR5IiwibGluayIsInNvdW5kRGVzaWduIiwiZGlzcG9zZSIsIlRSQUNLU19MQVlFUiIsInF1YWRyaWxhdGVyYWxTaGFwZU1vZGVsIiwic2hhcGVTb3VuZEVuYWJsZWRQcm9wZXJ0eSIsInJlc2V0Tm90SW5Qcm9ncmVzc1Byb3BlcnR5IiwiVFJBQ0tTX1VOSVFVRSIsInN0ZXAiLCJkdCIsImFzc2VydCIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiUXVhZHJpbGF0ZXJhbFNvdW5kVmlldy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDIzLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBGaWxlIHJlc3BvbnNpYmxlIGZvciB0aGUgc291bmQgdmlldyBvZiB0aGUgcXVhZHJpbGF0ZXJhbC4gVGhlcmUgYXJlIHR3byBzb3VuZCBkZXNpZ25zIHRoYXQgY2FuIGJlIHVzZWQgKGNoYW5nZWRcclxuICogZnJvbSBwcmVmZXJlbmNlcykuIE1hbmFnZXMgdGhlIGFjdGl2ZSBvbmUuXHJcbiAqXHJcbiAqIEBhdXRob3IgSmVzc2UgR3JlZW5iZXJnIChQaEVUIEludGVyYWN0aXZlIFNpbXVsYXRpb25zKVxyXG4gKi9cclxuXHJcbmltcG9ydCBxdWFkcmlsYXRlcmFsIGZyb20gJy4uLy4uLy4uL3F1YWRyaWxhdGVyYWwuanMnO1xyXG5pbXBvcnQgUXVhZHJpbGF0ZXJhbE1vZGVsIGZyb20gJy4uLy4uL21vZGVsL1F1YWRyaWxhdGVyYWxNb2RlbC5qcyc7XHJcbmltcG9ydCBRdWFkcmlsYXRlcmFsU291bmRPcHRpb25zTW9kZWwsIHsgU291bmREZXNpZ24gfSBmcm9tICcuLi8uLi9tb2RlbC9RdWFkcmlsYXRlcmFsU291bmRPcHRpb25zTW9kZWwuanMnO1xyXG5pbXBvcnQgTGF5ZXJzVHJhY2tzU291bmRWaWV3IGZyb20gJy4vTGF5ZXJzVHJhY2tzU291bmRWaWV3LmpzJztcclxuaW1wb3J0IFRyYWNrc1NvdW5kVmlldyBmcm9tICcuL1RyYWNrc1NvdW5kVmlldy5qcyc7XHJcbmltcG9ydCBFbXBoYXNpc1RyYWNrc1NvdW5kVmlldyBmcm9tICcuL0VtcGhhc2lzVHJhY2tzU291bmRWaWV3LmpzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFF1YWRyaWxhdGVyYWxTb3VuZFZpZXcge1xyXG5cclxuICAvLyBUaGUgc291bmQgdmlldyB0aGF0IGlzIGN1cnJlbnRseSBcImFjdGl2ZVwiIGFuZCBwbGF5aW5nIHNvdW5kcy5cclxuICBwdWJsaWMgYWN0aXZlU291bmRWaWV3OiBudWxsIHwgVHJhY2tzU291bmRWaWV3ID0gbnVsbDtcclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKCBtb2RlbDogUXVhZHJpbGF0ZXJhbE1vZGVsLCBzb3VuZE9wdGlvbnNNb2RlbDogUXVhZHJpbGF0ZXJhbFNvdW5kT3B0aW9uc01vZGVsICkge1xyXG5cclxuICAgIHNvdW5kT3B0aW9uc01vZGVsLnNvdW5kRGVzaWduUHJvcGVydHkubGluayggc291bmREZXNpZ24gPT4ge1xyXG4gICAgICB0aGlzLmFjdGl2ZVNvdW5kVmlldyAmJiB0aGlzLmFjdGl2ZVNvdW5kVmlldy5kaXNwb3NlKCk7XHJcblxyXG4gICAgICBpZiAoIHNvdW5kRGVzaWduID09PSBTb3VuZERlc2lnbi5UUkFDS1NfTEFZRVIgKSB7XHJcbiAgICAgICAgdGhpcy5hY3RpdmVTb3VuZFZpZXcgPSBuZXcgTGF5ZXJzVHJhY2tzU291bmRWaWV3KCBtb2RlbC5xdWFkcmlsYXRlcmFsU2hhcGVNb2RlbCwgbW9kZWwuc2hhcGVTb3VuZEVuYWJsZWRQcm9wZXJ0eSwgbW9kZWwucmVzZXROb3RJblByb2dyZXNzUHJvcGVydHksIHNvdW5kT3B0aW9uc01vZGVsICk7XHJcbiAgICAgIH1cclxuICAgICAgZWxzZSBpZiAoIHNvdW5kRGVzaWduID09PSBTb3VuZERlc2lnbi5UUkFDS1NfVU5JUVVFICkge1xyXG4gICAgICAgIHRoaXMuYWN0aXZlU291bmRWaWV3ID0gbmV3IEVtcGhhc2lzVHJhY2tzU291bmRWaWV3KCBtb2RlbC5xdWFkcmlsYXRlcmFsU2hhcGVNb2RlbCwgbW9kZWwuc2hhcGVTb3VuZEVuYWJsZWRQcm9wZXJ0eSwgbW9kZWwucmVzZXROb3RJblByb2dyZXNzUHJvcGVydHksIHNvdW5kT3B0aW9uc01vZGVsICk7XHJcbiAgICAgIH1cclxuICAgIH0gKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFN0ZXAgdGhlIHNvdW5kIHZpZXcuXHJcbiAgICpcclxuICAgKiBAcGFyYW0gZHQgLSBpbiBzZWNvbmRzXHJcbiAgICovXHJcbiAgcHVibGljIHN0ZXAoIGR0OiBudW1iZXIgKTogdm9pZCB7XHJcbiAgICBhc3NlcnQgJiYgYXNzZXJ0KCB0aGlzLmFjdGl2ZVNvdW5kVmlldywgJ1RoZXJlIG11c3QgYmUgYW4gYWN0aXZlIHNvdW5kIHZpZXcgdG8gdXBkYXRlIHNvdW5kcy4nICk7XHJcbiAgICB0aGlzLmFjdGl2ZVNvdW5kVmlldyEuc3RlcCggZHQgKTtcclxuICB9XHJcblxyXG59XHJcblxyXG5xdWFkcmlsYXRlcmFsLnJlZ2lzdGVyKCAnUXVhZHJpbGF0ZXJhbFNvdW5kVmlldycsIFF1YWRyaWxhdGVyYWxTb3VuZFZpZXcgKTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsYUFBYSxNQUFNLDJCQUEyQjtBQUVyRCxTQUF5Q0MsV0FBVyxRQUFRLCtDQUErQztBQUMzRyxPQUFPQyxxQkFBcUIsTUFBTSw0QkFBNEI7QUFFOUQsT0FBT0MsdUJBQXVCLE1BQU0sOEJBQThCO0FBRWxFLGVBQWUsTUFBTUMsc0JBQXNCLENBQUM7RUFFMUM7RUFDT0MsZUFBZSxHQUEyQixJQUFJO0VBRTlDQyxXQUFXQSxDQUFFQyxLQUF5QixFQUFFQyxpQkFBaUQsRUFBRztJQUVqR0EsaUJBQWlCLENBQUNDLG1CQUFtQixDQUFDQyxJQUFJLENBQUVDLFdBQVcsSUFBSTtNQUN6RCxJQUFJLENBQUNOLGVBQWUsSUFBSSxJQUFJLENBQUNBLGVBQWUsQ0FBQ08sT0FBTyxDQUFDLENBQUM7TUFFdEQsSUFBS0QsV0FBVyxLQUFLVixXQUFXLENBQUNZLFlBQVksRUFBRztRQUM5QyxJQUFJLENBQUNSLGVBQWUsR0FBRyxJQUFJSCxxQkFBcUIsQ0FBRUssS0FBSyxDQUFDTyx1QkFBdUIsRUFBRVAsS0FBSyxDQUFDUSx5QkFBeUIsRUFBRVIsS0FBSyxDQUFDUywwQkFBMEIsRUFBRVIsaUJBQWtCLENBQUM7TUFDekssQ0FBQyxNQUNJLElBQUtHLFdBQVcsS0FBS1YsV0FBVyxDQUFDZ0IsYUFBYSxFQUFHO1FBQ3BELElBQUksQ0FBQ1osZUFBZSxHQUFHLElBQUlGLHVCQUF1QixDQUFFSSxLQUFLLENBQUNPLHVCQUF1QixFQUFFUCxLQUFLLENBQUNRLHlCQUF5QixFQUFFUixLQUFLLENBQUNTLDBCQUEwQixFQUFFUixpQkFBa0IsQ0FBQztNQUMzSztJQUNGLENBQUUsQ0FBQztFQUNMOztFQUVBO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7RUFDU1UsSUFBSUEsQ0FBRUMsRUFBVSxFQUFTO0lBQzlCQyxNQUFNLElBQUlBLE1BQU0sQ0FBRSxJQUFJLENBQUNmLGVBQWUsRUFBRSxzREFBdUQsQ0FBQztJQUNoRyxJQUFJLENBQUNBLGVBQWUsQ0FBRWEsSUFBSSxDQUFFQyxFQUFHLENBQUM7RUFDbEM7QUFFRjtBQUVBbkIsYUFBYSxDQUFDcUIsUUFBUSxDQUFFLHdCQUF3QixFQUFFakIsc0JBQXVCLENBQUMifQ==