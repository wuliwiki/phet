// Copyright 2022-2023, University of Colorado Boulder

/**
 * Input Preferences specific to this simulation.
 *
 * @author Jesse Greenberg (PhET Interactive Simulations)
 */

import quadrilateral from '../../../quadrilateral.js';
import NumberControl from '../../../../../scenery-phet/js/NumberControl.js';
import optionize from '../../../../../phet-core/js/optionize.js';
import Tandem from '../../../../../tandem/js/Tandem.js';
import PreferencesPanelSection from '../../../../../joist/js/preferences/PreferencesPanelSection.js';
import { Text, VBox } from '../../../../../scenery/js/imports.js';
import PreferencesDialog from '../../../../../joist/js/preferences/PreferencesDialog.js';
export default class QuadrilateralInputPreferencesNode extends PreferencesPanelSection {
  constructor(tangibleOptionsModel) {
    // Controls specifically for tangible connection
    const tangibleControlsTitle = new Text('Tangible Controls', PreferencesDialog.PANEL_SECTION_LABEL_OPTIONS);
    const gridSpacingNumberControl = new TangiblePropertyNumberControl('Position interval', tangibleOptionsModel.deviceGridSpacingProperty, {
      numberDisplayOptions: {
        decimalPlaces: 4
      }
    });
    const smoothingLengthNumberControl = new TangiblePropertyNumberControl('Smoothing length', tangibleOptionsModel.smoothingLengthProperty);
    const updateIntervalNumberControl = new TangiblePropertyNumberControl('Update interval', tangibleOptionsModel.bluetoothUpdateIntervalProperty, {
      numberDisplayOptions: {
        decimalPlaces: 1
      },
      delta: 0.1
    });
    const content = new VBox({
      children: [gridSpacingNumberControl, smoothingLengthNumberControl, updateIntervalNumberControl],
      spacing: PreferencesDialog.CONTENT_SPACING
    });
    super({
      titleNode: tangibleControlsTitle,
      contentNode: content,
      // margin doesn't make sense for this list of controls
      contentLeftMargin: 0
    });
    this.disposeQuadrilateralInputPreferencesNode = () => {
      tangibleControlsTitle.dispose();
      gridSpacingNumberControl.dispose();
      smoothingLengthNumberControl.dispose();
      updateIntervalNumberControl.dispose();
    };
  }
  dispose() {
    this.disposeQuadrilateralInputPreferencesNode();
    super.dispose();
  }
}

/**
 * Inner class, reusable NumberControl with default options for the purposes of this Preferences dialog content.
 */
class TangiblePropertyNumberControl extends NumberControl {
  constructor(label, property, providedOptions) {
    const propertyRange = property.range;
    const options = optionize()({
      delta: propertyRange.min,
      // opt out of tandems for these preferences because NumberControl requires phet.joist.sim and these
      // controls are created before the sim
      tandem: Tandem.OPT_OUT
    }, providedOptions);
    super(label, property, propertyRange, options);
  }
}
quadrilateral.register('QuadrilateralInputPreferencesNode', QuadrilateralInputPreferencesNode);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJxdWFkcmlsYXRlcmFsIiwiTnVtYmVyQ29udHJvbCIsIm9wdGlvbml6ZSIsIlRhbmRlbSIsIlByZWZlcmVuY2VzUGFuZWxTZWN0aW9uIiwiVGV4dCIsIlZCb3giLCJQcmVmZXJlbmNlc0RpYWxvZyIsIlF1YWRyaWxhdGVyYWxJbnB1dFByZWZlcmVuY2VzTm9kZSIsImNvbnN0cnVjdG9yIiwidGFuZ2libGVPcHRpb25zTW9kZWwiLCJ0YW5naWJsZUNvbnRyb2xzVGl0bGUiLCJQQU5FTF9TRUNUSU9OX0xBQkVMX09QVElPTlMiLCJncmlkU3BhY2luZ051bWJlckNvbnRyb2wiLCJUYW5naWJsZVByb3BlcnR5TnVtYmVyQ29udHJvbCIsImRldmljZUdyaWRTcGFjaW5nUHJvcGVydHkiLCJudW1iZXJEaXNwbGF5T3B0aW9ucyIsImRlY2ltYWxQbGFjZXMiLCJzbW9vdGhpbmdMZW5ndGhOdW1iZXJDb250cm9sIiwic21vb3RoaW5nTGVuZ3RoUHJvcGVydHkiLCJ1cGRhdGVJbnRlcnZhbE51bWJlckNvbnRyb2wiLCJibHVldG9vdGhVcGRhdGVJbnRlcnZhbFByb3BlcnR5IiwiZGVsdGEiLCJjb250ZW50IiwiY2hpbGRyZW4iLCJzcGFjaW5nIiwiQ09OVEVOVF9TUEFDSU5HIiwidGl0bGVOb2RlIiwiY29udGVudE5vZGUiLCJjb250ZW50TGVmdE1hcmdpbiIsImRpc3Bvc2VRdWFkcmlsYXRlcmFsSW5wdXRQcmVmZXJlbmNlc05vZGUiLCJkaXNwb3NlIiwibGFiZWwiLCJwcm9wZXJ0eSIsInByb3ZpZGVkT3B0aW9ucyIsInByb3BlcnR5UmFuZ2UiLCJyYW5nZSIsIm9wdGlvbnMiLCJtaW4iLCJ0YW5kZW0iLCJPUFRfT1VUIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJRdWFkcmlsYXRlcmFsSW5wdXRQcmVmZXJlbmNlc05vZGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjItMjAyMywgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogSW5wdXQgUHJlZmVyZW5jZXMgc3BlY2lmaWMgdG8gdGhpcyBzaW11bGF0aW9uLlxyXG4gKlxyXG4gKiBAYXV0aG9yIEplc3NlIEdyZWVuYmVyZyAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcclxuICovXHJcblxyXG5pbXBvcnQgcXVhZHJpbGF0ZXJhbCBmcm9tICcuLi8uLi8uLi9xdWFkcmlsYXRlcmFsLmpzJztcclxuaW1wb3J0IE51bWJlckNvbnRyb2wsIHsgTnVtYmVyQ29udHJvbE9wdGlvbnMgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi9zY2VuZXJ5LXBoZXQvanMvTnVtYmVyQ29udHJvbC5qcyc7XHJcbmltcG9ydCBOdW1iZXJQcm9wZXJ0eSBmcm9tICcuLi8uLi8uLi8uLi8uLi9heG9uL2pzL051bWJlclByb3BlcnR5LmpzJztcclxuaW1wb3J0IG9wdGlvbml6ZSwgeyBFbXB0eVNlbGZPcHRpb25zIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vcGhldC1jb3JlL2pzL29wdGlvbml6ZS5qcyc7XHJcbmltcG9ydCBUYW5kZW0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vdGFuZGVtL2pzL1RhbmRlbS5qcyc7XHJcbmltcG9ydCBQcmVmZXJlbmNlc1BhbmVsU2VjdGlvbiBmcm9tICcuLi8uLi8uLi8uLi8uLi9qb2lzdC9qcy9wcmVmZXJlbmNlcy9QcmVmZXJlbmNlc1BhbmVsU2VjdGlvbi5qcyc7XHJcbmltcG9ydCB7IFRleHQsIFZCb3ggfSBmcm9tICcuLi8uLi8uLi8uLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgUHJlZmVyZW5jZXNEaWFsb2cgZnJvbSAnLi4vLi4vLi4vLi4vLi4vam9pc3QvanMvcHJlZmVyZW5jZXMvUHJlZmVyZW5jZXNEaWFsb2cuanMnO1xyXG5pbXBvcnQgUXVhZHJpbGF0ZXJhbFRhbmdpYmxlT3B0aW9uc01vZGVsIGZyb20gJy4uLy4uL21vZGVsL3Byb3RvdHlwZS9RdWFkcmlsYXRlcmFsVGFuZ2libGVPcHRpb25zTW9kZWwuanMnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUXVhZHJpbGF0ZXJhbElucHV0UHJlZmVyZW5jZXNOb2RlIGV4dGVuZHMgUHJlZmVyZW5jZXNQYW5lbFNlY3Rpb24ge1xyXG4gIHByaXZhdGUgcmVhZG9ubHkgZGlzcG9zZVF1YWRyaWxhdGVyYWxJbnB1dFByZWZlcmVuY2VzTm9kZTogKCkgPT4gdm9pZDtcclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKCB0YW5naWJsZU9wdGlvbnNNb2RlbDogUXVhZHJpbGF0ZXJhbFRhbmdpYmxlT3B0aW9uc01vZGVsICkge1xyXG5cclxuICAgIC8vIENvbnRyb2xzIHNwZWNpZmljYWxseSBmb3IgdGFuZ2libGUgY29ubmVjdGlvblxyXG4gICAgY29uc3QgdGFuZ2libGVDb250cm9sc1RpdGxlID0gbmV3IFRleHQoICdUYW5naWJsZSBDb250cm9scycsIFByZWZlcmVuY2VzRGlhbG9nLlBBTkVMX1NFQ1RJT05fTEFCRUxfT1BUSU9OUyApO1xyXG4gICAgY29uc3QgZ3JpZFNwYWNpbmdOdW1iZXJDb250cm9sID0gbmV3IFRhbmdpYmxlUHJvcGVydHlOdW1iZXJDb250cm9sKCAnUG9zaXRpb24gaW50ZXJ2YWwnLCB0YW5naWJsZU9wdGlvbnNNb2RlbC5kZXZpY2VHcmlkU3BhY2luZ1Byb3BlcnR5LCB7XHJcbiAgICAgIG51bWJlckRpc3BsYXlPcHRpb25zOiB7XHJcbiAgICAgICAgZGVjaW1hbFBsYWNlczogNFxyXG4gICAgICB9XHJcbiAgICB9ICk7XHJcbiAgICBjb25zdCBzbW9vdGhpbmdMZW5ndGhOdW1iZXJDb250cm9sID0gbmV3IFRhbmdpYmxlUHJvcGVydHlOdW1iZXJDb250cm9sKCAnU21vb3RoaW5nIGxlbmd0aCcsIHRhbmdpYmxlT3B0aW9uc01vZGVsLnNtb290aGluZ0xlbmd0aFByb3BlcnR5ICk7XHJcbiAgICBjb25zdCB1cGRhdGVJbnRlcnZhbE51bWJlckNvbnRyb2wgPSBuZXcgVGFuZ2libGVQcm9wZXJ0eU51bWJlckNvbnRyb2woICdVcGRhdGUgaW50ZXJ2YWwnLCB0YW5naWJsZU9wdGlvbnNNb2RlbC5ibHVldG9vdGhVcGRhdGVJbnRlcnZhbFByb3BlcnR5LCB7XHJcbiAgICAgIG51bWJlckRpc3BsYXlPcHRpb25zOiB7XHJcbiAgICAgICAgZGVjaW1hbFBsYWNlczogMVxyXG4gICAgICB9LFxyXG4gICAgICBkZWx0YTogMC4xXHJcbiAgICB9ICk7XHJcblxyXG4gICAgY29uc3QgY29udGVudCA9IG5ldyBWQm94KCB7XHJcbiAgICAgIGNoaWxkcmVuOiBbIGdyaWRTcGFjaW5nTnVtYmVyQ29udHJvbCwgc21vb3RoaW5nTGVuZ3RoTnVtYmVyQ29udHJvbCwgdXBkYXRlSW50ZXJ2YWxOdW1iZXJDb250cm9sIF0sXHJcbiAgICAgIHNwYWNpbmc6IFByZWZlcmVuY2VzRGlhbG9nLkNPTlRFTlRfU1BBQ0lOR1xyXG4gICAgfSApO1xyXG5cclxuICAgIHN1cGVyKCB7XHJcbiAgICAgIHRpdGxlTm9kZTogdGFuZ2libGVDb250cm9sc1RpdGxlLFxyXG4gICAgICBjb250ZW50Tm9kZTogY29udGVudCxcclxuXHJcbiAgICAgIC8vIG1hcmdpbiBkb2Vzbid0IG1ha2Ugc2Vuc2UgZm9yIHRoaXMgbGlzdCBvZiBjb250cm9sc1xyXG4gICAgICBjb250ZW50TGVmdE1hcmdpbjogMFxyXG4gICAgfSApO1xyXG5cclxuICAgIHRoaXMuZGlzcG9zZVF1YWRyaWxhdGVyYWxJbnB1dFByZWZlcmVuY2VzTm9kZSA9ICgpID0+IHtcclxuICAgICAgdGFuZ2libGVDb250cm9sc1RpdGxlLmRpc3Bvc2UoKTtcclxuICAgICAgZ3JpZFNwYWNpbmdOdW1iZXJDb250cm9sLmRpc3Bvc2UoKTtcclxuICAgICAgc21vb3RoaW5nTGVuZ3RoTnVtYmVyQ29udHJvbC5kaXNwb3NlKCk7XHJcbiAgICAgIHVwZGF0ZUludGVydmFsTnVtYmVyQ29udHJvbC5kaXNwb3NlKCk7XHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgcHVibGljIG92ZXJyaWRlIGRpc3Bvc2UoKTogdm9pZCB7XHJcbiAgICB0aGlzLmRpc3Bvc2VRdWFkcmlsYXRlcmFsSW5wdXRQcmVmZXJlbmNlc05vZGUoKTtcclxuICAgIHN1cGVyLmRpc3Bvc2UoKTtcclxuICB9XHJcblxyXG59XHJcblxyXG4vKipcclxuICogSW5uZXIgY2xhc3MsIHJldXNhYmxlIE51bWJlckNvbnRyb2wgd2l0aCBkZWZhdWx0IG9wdGlvbnMgZm9yIHRoZSBwdXJwb3NlcyBvZiB0aGlzIFByZWZlcmVuY2VzIGRpYWxvZyBjb250ZW50LlxyXG4gKi9cclxuY2xhc3MgVGFuZ2libGVQcm9wZXJ0eU51bWJlckNvbnRyb2wgZXh0ZW5kcyBOdW1iZXJDb250cm9sIHtcclxuICBwdWJsaWMgY29uc3RydWN0b3IoIGxhYmVsOiBzdHJpbmcsIHByb3BlcnR5OiBOdW1iZXJQcm9wZXJ0eSwgcHJvdmlkZWRPcHRpb25zPzogTnVtYmVyQ29udHJvbE9wdGlvbnMgKSB7XHJcbiAgICBjb25zdCBwcm9wZXJ0eVJhbmdlID0gcHJvcGVydHkucmFuZ2U7XHJcblxyXG4gICAgY29uc3Qgb3B0aW9ucyA9IG9wdGlvbml6ZTxOdW1iZXJDb250cm9sT3B0aW9ucywgRW1wdHlTZWxmT3B0aW9ucywgTnVtYmVyQ29udHJvbE9wdGlvbnM+KCkoIHtcclxuICAgICAgZGVsdGE6IHByb3BlcnR5UmFuZ2UubWluLFxyXG5cclxuICAgICAgLy8gb3B0IG91dCBvZiB0YW5kZW1zIGZvciB0aGVzZSBwcmVmZXJlbmNlcyBiZWNhdXNlIE51bWJlckNvbnRyb2wgcmVxdWlyZXMgcGhldC5qb2lzdC5zaW0gYW5kIHRoZXNlXHJcbiAgICAgIC8vIGNvbnRyb2xzIGFyZSBjcmVhdGVkIGJlZm9yZSB0aGUgc2ltXHJcbiAgICAgIHRhbmRlbTogVGFuZGVtLk9QVF9PVVRcclxuICAgIH0sIHByb3ZpZGVkT3B0aW9ucyApO1xyXG5cclxuICAgIHN1cGVyKCBsYWJlbCwgcHJvcGVydHksIHByb3BlcnR5UmFuZ2UsIG9wdGlvbnMgKTtcclxuICB9XHJcbn1cclxuXHJcbnF1YWRyaWxhdGVyYWwucmVnaXN0ZXIoICdRdWFkcmlsYXRlcmFsSW5wdXRQcmVmZXJlbmNlc05vZGUnLCBRdWFkcmlsYXRlcmFsSW5wdXRQcmVmZXJlbmNlc05vZGUgKTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLGFBQWEsTUFBTSwyQkFBMkI7QUFDckQsT0FBT0MsYUFBYSxNQUFnQyxpREFBaUQ7QUFFckcsT0FBT0MsU0FBUyxNQUE0QiwwQ0FBMEM7QUFDdEYsT0FBT0MsTUFBTSxNQUFNLG9DQUFvQztBQUN2RCxPQUFPQyx1QkFBdUIsTUFBTSxnRUFBZ0U7QUFDcEcsU0FBU0MsSUFBSSxFQUFFQyxJQUFJLFFBQVEsc0NBQXNDO0FBQ2pFLE9BQU9DLGlCQUFpQixNQUFNLDBEQUEwRDtBQUd4RixlQUFlLE1BQU1DLGlDQUFpQyxTQUFTSix1QkFBdUIsQ0FBQztFQUc5RUssV0FBV0EsQ0FBRUMsb0JBQXVELEVBQUc7SUFFNUU7SUFDQSxNQUFNQyxxQkFBcUIsR0FBRyxJQUFJTixJQUFJLENBQUUsbUJBQW1CLEVBQUVFLGlCQUFpQixDQUFDSywyQkFBNEIsQ0FBQztJQUM1RyxNQUFNQyx3QkFBd0IsR0FBRyxJQUFJQyw2QkFBNkIsQ0FBRSxtQkFBbUIsRUFBRUosb0JBQW9CLENBQUNLLHlCQUF5QixFQUFFO01BQ3ZJQyxvQkFBb0IsRUFBRTtRQUNwQkMsYUFBYSxFQUFFO01BQ2pCO0lBQ0YsQ0FBRSxDQUFDO0lBQ0gsTUFBTUMsNEJBQTRCLEdBQUcsSUFBSUosNkJBQTZCLENBQUUsa0JBQWtCLEVBQUVKLG9CQUFvQixDQUFDUyx1QkFBd0IsQ0FBQztJQUMxSSxNQUFNQywyQkFBMkIsR0FBRyxJQUFJTiw2QkFBNkIsQ0FBRSxpQkFBaUIsRUFBRUosb0JBQW9CLENBQUNXLCtCQUErQixFQUFFO01BQzlJTCxvQkFBb0IsRUFBRTtRQUNwQkMsYUFBYSxFQUFFO01BQ2pCLENBQUM7TUFDREssS0FBSyxFQUFFO0lBQ1QsQ0FBRSxDQUFDO0lBRUgsTUFBTUMsT0FBTyxHQUFHLElBQUlqQixJQUFJLENBQUU7TUFDeEJrQixRQUFRLEVBQUUsQ0FBRVgsd0JBQXdCLEVBQUVLLDRCQUE0QixFQUFFRSwyQkFBMkIsQ0FBRTtNQUNqR0ssT0FBTyxFQUFFbEIsaUJBQWlCLENBQUNtQjtJQUM3QixDQUFFLENBQUM7SUFFSCxLQUFLLENBQUU7TUFDTEMsU0FBUyxFQUFFaEIscUJBQXFCO01BQ2hDaUIsV0FBVyxFQUFFTCxPQUFPO01BRXBCO01BQ0FNLGlCQUFpQixFQUFFO0lBQ3JCLENBQUUsQ0FBQztJQUVILElBQUksQ0FBQ0Msd0NBQXdDLEdBQUcsTUFBTTtNQUNwRG5CLHFCQUFxQixDQUFDb0IsT0FBTyxDQUFDLENBQUM7TUFDL0JsQix3QkFBd0IsQ0FBQ2tCLE9BQU8sQ0FBQyxDQUFDO01BQ2xDYiw0QkFBNEIsQ0FBQ2EsT0FBTyxDQUFDLENBQUM7TUFDdENYLDJCQUEyQixDQUFDVyxPQUFPLENBQUMsQ0FBQztJQUN2QyxDQUFDO0VBQ0g7RUFFZ0JBLE9BQU9BLENBQUEsRUFBUztJQUM5QixJQUFJLENBQUNELHdDQUF3QyxDQUFDLENBQUM7SUFDL0MsS0FBSyxDQUFDQyxPQUFPLENBQUMsQ0FBQztFQUNqQjtBQUVGOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQU1qQiw2QkFBNkIsU0FBU2IsYUFBYSxDQUFDO0VBQ2pEUSxXQUFXQSxDQUFFdUIsS0FBYSxFQUFFQyxRQUF3QixFQUFFQyxlQUFzQyxFQUFHO0lBQ3BHLE1BQU1DLGFBQWEsR0FBR0YsUUFBUSxDQUFDRyxLQUFLO0lBRXBDLE1BQU1DLE9BQU8sR0FBR25DLFNBQVMsQ0FBK0QsQ0FBQyxDQUFFO01BQ3pGb0IsS0FBSyxFQUFFYSxhQUFhLENBQUNHLEdBQUc7TUFFeEI7TUFDQTtNQUNBQyxNQUFNLEVBQUVwQyxNQUFNLENBQUNxQztJQUNqQixDQUFDLEVBQUVOLGVBQWdCLENBQUM7SUFFcEIsS0FBSyxDQUFFRixLQUFLLEVBQUVDLFFBQVEsRUFBRUUsYUFBYSxFQUFFRSxPQUFRLENBQUM7RUFDbEQ7QUFDRjtBQUVBckMsYUFBYSxDQUFDeUMsUUFBUSxDQUFFLG1DQUFtQyxFQUFFakMsaUNBQWtDLENBQUMifQ==