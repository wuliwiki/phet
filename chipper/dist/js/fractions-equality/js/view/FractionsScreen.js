// Copyright 2019-2022, University of Colorado Boulder

/**
 * Main entry point for the 'Fraction Matcher sim.
 *
 * @author Anton Ulyanov (Mlearner)
 * @author Andrew Zelenkov (Mlearner)
 * @author Sam Reid (PhET Interactive Simulations)
 */

import FractionMatcherStrings from '../../../fraction-matcher/js/FractionMatcherStrings.js';
import MatchingGameModel from '../../../fractions-common/js/matching/model/MatchingGameModel.js';
import MatchingGameScreenView from '../../../fractions-common/js/matching/view/MatchingGameScreenView.js';
import Screen from '../../../joist/js/Screen.js';
import ScreenIcon from '../../../joist/js/ScreenIcon.js';
import merge from '../../../phet-core/js/merge.js';
import fractionsEquality from '../fractionsEquality.js';
class FractionsScreen extends Screen {
  /**
   * @param {Tandem} tandem
   * @param {Object} [options]
   */
  constructor(tandem, options) {
    super(() => new MatchingGameModel(false, true), model => new MatchingGameScreenView(model), merge({
      name: FractionMatcherStrings.fractionsTitleStringProperty,
      homeScreenIcon: new ScreenIcon(MatchingGameScreenView.createIntroHomeIcon(), {
        maxIconWidthProportion: 1,
        maxIconHeightProportion: 1
      }),
      tandem: tandem
    }, options));
  }
}
fractionsEquality.register('FractionsScreen', FractionsScreen);
export default FractionsScreen;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJGcmFjdGlvbk1hdGNoZXJTdHJpbmdzIiwiTWF0Y2hpbmdHYW1lTW9kZWwiLCJNYXRjaGluZ0dhbWVTY3JlZW5WaWV3IiwiU2NyZWVuIiwiU2NyZWVuSWNvbiIsIm1lcmdlIiwiZnJhY3Rpb25zRXF1YWxpdHkiLCJGcmFjdGlvbnNTY3JlZW4iLCJjb25zdHJ1Y3RvciIsInRhbmRlbSIsIm9wdGlvbnMiLCJtb2RlbCIsIm5hbWUiLCJmcmFjdGlvbnNUaXRsZVN0cmluZ1Byb3BlcnR5IiwiaG9tZVNjcmVlbkljb24iLCJjcmVhdGVJbnRyb0hvbWVJY29uIiwibWF4SWNvbldpZHRoUHJvcG9ydGlvbiIsIm1heEljb25IZWlnaHRQcm9wb3J0aW9uIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJGcmFjdGlvbnNTY3JlZW4uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTktMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogTWFpbiBlbnRyeSBwb2ludCBmb3IgdGhlICdGcmFjdGlvbiBNYXRjaGVyIHNpbS5cclxuICpcclxuICogQGF1dGhvciBBbnRvbiBVbHlhbm92IChNbGVhcm5lcilcclxuICogQGF1dGhvciBBbmRyZXcgWmVsZW5rb3YgKE1sZWFybmVyKVxyXG4gKiBAYXV0aG9yIFNhbSBSZWlkIChQaEVUIEludGVyYWN0aXZlIFNpbXVsYXRpb25zKVxyXG4gKi9cclxuXHJcbmltcG9ydCBGcmFjdGlvbk1hdGNoZXJTdHJpbmdzIGZyb20gJy4uLy4uLy4uL2ZyYWN0aW9uLW1hdGNoZXIvanMvRnJhY3Rpb25NYXRjaGVyU3RyaW5ncy5qcyc7XHJcbmltcG9ydCBNYXRjaGluZ0dhbWVNb2RlbCBmcm9tICcuLi8uLi8uLi9mcmFjdGlvbnMtY29tbW9uL2pzL21hdGNoaW5nL21vZGVsL01hdGNoaW5nR2FtZU1vZGVsLmpzJztcclxuaW1wb3J0IE1hdGNoaW5nR2FtZVNjcmVlblZpZXcgZnJvbSAnLi4vLi4vLi4vZnJhY3Rpb25zLWNvbW1vbi9qcy9tYXRjaGluZy92aWV3L01hdGNoaW5nR2FtZVNjcmVlblZpZXcuanMnO1xyXG5pbXBvcnQgU2NyZWVuIGZyb20gJy4uLy4uLy4uL2pvaXN0L2pzL1NjcmVlbi5qcyc7XHJcbmltcG9ydCBTY3JlZW5JY29uIGZyb20gJy4uLy4uLy4uL2pvaXN0L2pzL1NjcmVlbkljb24uanMnO1xyXG5pbXBvcnQgbWVyZ2UgZnJvbSAnLi4vLi4vLi4vcGhldC1jb3JlL2pzL21lcmdlLmpzJztcclxuaW1wb3J0IGZyYWN0aW9uc0VxdWFsaXR5IGZyb20gJy4uL2ZyYWN0aW9uc0VxdWFsaXR5LmpzJztcclxuXHJcbmNsYXNzIEZyYWN0aW9uc1NjcmVlbiBleHRlbmRzIFNjcmVlbiB7XHJcbiAgLyoqXHJcbiAgICogQHBhcmFtIHtUYW5kZW19IHRhbmRlbVxyXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc11cclxuICAgKi9cclxuICBjb25zdHJ1Y3RvciggdGFuZGVtLCBvcHRpb25zICkge1xyXG4gICAgc3VwZXIoXHJcbiAgICAgICgpID0+IG5ldyBNYXRjaGluZ0dhbWVNb2RlbCggZmFsc2UsIHRydWUgKSxcclxuICAgICAgbW9kZWwgPT4gbmV3IE1hdGNoaW5nR2FtZVNjcmVlblZpZXcoIG1vZGVsICksXHJcbiAgICAgIG1lcmdlKCB7XHJcbiAgICAgICAgbmFtZTogRnJhY3Rpb25NYXRjaGVyU3RyaW5ncy5mcmFjdGlvbnNUaXRsZVN0cmluZ1Byb3BlcnR5LFxyXG4gICAgICAgIGhvbWVTY3JlZW5JY29uOiBuZXcgU2NyZWVuSWNvbiggTWF0Y2hpbmdHYW1lU2NyZWVuVmlldy5jcmVhdGVJbnRyb0hvbWVJY29uKCksIHtcclxuICAgICAgICAgIG1heEljb25XaWR0aFByb3BvcnRpb246IDEsXHJcbiAgICAgICAgICBtYXhJY29uSGVpZ2h0UHJvcG9ydGlvbjogMVxyXG4gICAgICAgIH0gKSxcclxuICAgICAgICB0YW5kZW06IHRhbmRlbVxyXG4gICAgICB9LCBvcHRpb25zIClcclxuICAgICk7XHJcbiAgfVxyXG59XHJcblxyXG5mcmFjdGlvbnNFcXVhbGl0eS5yZWdpc3RlciggJ0ZyYWN0aW9uc1NjcmVlbicsIEZyYWN0aW9uc1NjcmVlbiApO1xyXG5leHBvcnQgZGVmYXVsdCBGcmFjdGlvbnNTY3JlZW47Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxzQkFBc0IsTUFBTSx3REFBd0Q7QUFDM0YsT0FBT0MsaUJBQWlCLE1BQU0sa0VBQWtFO0FBQ2hHLE9BQU9DLHNCQUFzQixNQUFNLHNFQUFzRTtBQUN6RyxPQUFPQyxNQUFNLE1BQU0sNkJBQTZCO0FBQ2hELE9BQU9DLFVBQVUsTUFBTSxpQ0FBaUM7QUFDeEQsT0FBT0MsS0FBSyxNQUFNLGdDQUFnQztBQUNsRCxPQUFPQyxpQkFBaUIsTUFBTSx5QkFBeUI7QUFFdkQsTUFBTUMsZUFBZSxTQUFTSixNQUFNLENBQUM7RUFDbkM7QUFDRjtBQUNBO0FBQ0E7RUFDRUssV0FBV0EsQ0FBRUMsTUFBTSxFQUFFQyxPQUFPLEVBQUc7SUFDN0IsS0FBSyxDQUNILE1BQU0sSUFBSVQsaUJBQWlCLENBQUUsS0FBSyxFQUFFLElBQUssQ0FBQyxFQUMxQ1UsS0FBSyxJQUFJLElBQUlULHNCQUFzQixDQUFFUyxLQUFNLENBQUMsRUFDNUNOLEtBQUssQ0FBRTtNQUNMTyxJQUFJLEVBQUVaLHNCQUFzQixDQUFDYSw0QkFBNEI7TUFDekRDLGNBQWMsRUFBRSxJQUFJVixVQUFVLENBQUVGLHNCQUFzQixDQUFDYSxtQkFBbUIsQ0FBQyxDQUFDLEVBQUU7UUFDNUVDLHNCQUFzQixFQUFFLENBQUM7UUFDekJDLHVCQUF1QixFQUFFO01BQzNCLENBQUUsQ0FBQztNQUNIUixNQUFNLEVBQUVBO0lBQ1YsQ0FBQyxFQUFFQyxPQUFRLENBQ2IsQ0FBQztFQUNIO0FBQ0Y7QUFFQUosaUJBQWlCLENBQUNZLFFBQVEsQ0FBRSxpQkFBaUIsRUFBRVgsZUFBZ0IsQ0FBQztBQUNoRSxlQUFlQSxlQUFlIn0=