// Copyright 2015-2021, University of Colorado Boulder

/**
 * Visual representation of a hinge point for the switch.  This is a black circle with an inner black circle that
 * represents the ability to the user that the switch can be rotated about the hinge point.
 *
 * @author Jesse Greenberg (PhET Interactive Simulations)
 */

import merge from '../../../../phet-core/js/merge.js';
import { Circle } from '../../../../scenery/js/imports.js';
import capacitorLabBasics from '../../capacitorLabBasics.js';
import CLBConstants from '../CLBConstants.js';

// constants
const HINGE_POINT_RADIUS = 8;
const PIN_RADIUS = 5;
class HingePointNode extends Circle {
  /**
   * @param {Object} [options]
   */
  constructor(options) {
    options = merge({
      fill: CLBConstants.CONNECTION_POINT_COLOR,
      lineWidth: 3,
      stroke: CLBConstants.CONNECTION_POINT_COLOR,
      innerPinRadius: PIN_RADIUS,
      pinFillColor: CLBConstants.PIN_COLOR
    }, options);
    super(HINGE_POINT_RADIUS, options);

    // Inner circle of hings
    this.addChild(new Circle(options.innerPinRadius, {
      fill: options.pinFillColor,
      center: this.center
    }));
  }
}
capacitorLabBasics.register('HingePointNode', HingePointNode);
export default HingePointNode;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtZXJnZSIsIkNpcmNsZSIsImNhcGFjaXRvckxhYkJhc2ljcyIsIkNMQkNvbnN0YW50cyIsIkhJTkdFX1BPSU5UX1JBRElVUyIsIlBJTl9SQURJVVMiLCJIaW5nZVBvaW50Tm9kZSIsImNvbnN0cnVjdG9yIiwib3B0aW9ucyIsImZpbGwiLCJDT05ORUNUSU9OX1BPSU5UX0NPTE9SIiwibGluZVdpZHRoIiwic3Ryb2tlIiwiaW5uZXJQaW5SYWRpdXMiLCJwaW5GaWxsQ29sb3IiLCJQSU5fQ09MT1IiLCJhZGRDaGlsZCIsImNlbnRlciIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiSGluZ2VQb2ludE5vZGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTUtMjAyMSwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogVmlzdWFsIHJlcHJlc2VudGF0aW9uIG9mIGEgaGluZ2UgcG9pbnQgZm9yIHRoZSBzd2l0Y2guICBUaGlzIGlzIGEgYmxhY2sgY2lyY2xlIHdpdGggYW4gaW5uZXIgYmxhY2sgY2lyY2xlIHRoYXRcclxuICogcmVwcmVzZW50cyB0aGUgYWJpbGl0eSB0byB0aGUgdXNlciB0aGF0IHRoZSBzd2l0Y2ggY2FuIGJlIHJvdGF0ZWQgYWJvdXQgdGhlIGhpbmdlIHBvaW50LlxyXG4gKlxyXG4gKiBAYXV0aG9yIEplc3NlIEdyZWVuYmVyZyAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcclxuICovXHJcblxyXG5pbXBvcnQgbWVyZ2UgZnJvbSAnLi4vLi4vLi4vLi4vcGhldC1jb3JlL2pzL21lcmdlLmpzJztcclxuaW1wb3J0IHsgQ2lyY2xlIH0gZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IGNhcGFjaXRvckxhYkJhc2ljcyBmcm9tICcuLi8uLi9jYXBhY2l0b3JMYWJCYXNpY3MuanMnO1xyXG5pbXBvcnQgQ0xCQ29uc3RhbnRzIGZyb20gJy4uL0NMQkNvbnN0YW50cy5qcyc7XHJcblxyXG4vLyBjb25zdGFudHNcclxuY29uc3QgSElOR0VfUE9JTlRfUkFESVVTID0gODtcclxuY29uc3QgUElOX1JBRElVUyA9IDU7XHJcblxyXG5jbGFzcyBIaW5nZVBvaW50Tm9kZSBleHRlbmRzIENpcmNsZSB7XHJcbiAgLyoqXHJcbiAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxyXG4gICAqL1xyXG4gIGNvbnN0cnVjdG9yKCBvcHRpb25zICkge1xyXG5cclxuICAgIG9wdGlvbnMgPSBtZXJnZSgge1xyXG4gICAgICBmaWxsOiBDTEJDb25zdGFudHMuQ09OTkVDVElPTl9QT0lOVF9DT0xPUixcclxuICAgICAgbGluZVdpZHRoOiAzLFxyXG4gICAgICBzdHJva2U6IENMQkNvbnN0YW50cy5DT05ORUNUSU9OX1BPSU5UX0NPTE9SLFxyXG4gICAgICBpbm5lclBpblJhZGl1czogUElOX1JBRElVUyxcclxuICAgICAgcGluRmlsbENvbG9yOiBDTEJDb25zdGFudHMuUElOX0NPTE9SXHJcbiAgICB9LCBvcHRpb25zICk7XHJcbiAgICBzdXBlciggSElOR0VfUE9JTlRfUkFESVVTLCBvcHRpb25zICk7XHJcblxyXG4gICAgLy8gSW5uZXIgY2lyY2xlIG9mIGhpbmdzXHJcbiAgICB0aGlzLmFkZENoaWxkKCBuZXcgQ2lyY2xlKCBvcHRpb25zLmlubmVyUGluUmFkaXVzLCB7XHJcbiAgICAgIGZpbGw6IG9wdGlvbnMucGluRmlsbENvbG9yLFxyXG4gICAgICBjZW50ZXI6IHRoaXMuY2VudGVyXHJcbiAgICB9ICkgKTtcclxuICB9XHJcbn1cclxuXHJcbmNhcGFjaXRvckxhYkJhc2ljcy5yZWdpc3RlciggJ0hpbmdlUG9pbnROb2RlJywgSGluZ2VQb2ludE5vZGUgKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IEhpbmdlUG9pbnROb2RlOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLEtBQUssTUFBTSxtQ0FBbUM7QUFDckQsU0FBU0MsTUFBTSxRQUFRLG1DQUFtQztBQUMxRCxPQUFPQyxrQkFBa0IsTUFBTSw2QkFBNkI7QUFDNUQsT0FBT0MsWUFBWSxNQUFNLG9CQUFvQjs7QUFFN0M7QUFDQSxNQUFNQyxrQkFBa0IsR0FBRyxDQUFDO0FBQzVCLE1BQU1DLFVBQVUsR0FBRyxDQUFDO0FBRXBCLE1BQU1DLGNBQWMsU0FBU0wsTUFBTSxDQUFDO0VBQ2xDO0FBQ0Y7QUFDQTtFQUNFTSxXQUFXQSxDQUFFQyxPQUFPLEVBQUc7SUFFckJBLE9BQU8sR0FBR1IsS0FBSyxDQUFFO01BQ2ZTLElBQUksRUFBRU4sWUFBWSxDQUFDTyxzQkFBc0I7TUFDekNDLFNBQVMsRUFBRSxDQUFDO01BQ1pDLE1BQU0sRUFBRVQsWUFBWSxDQUFDTyxzQkFBc0I7TUFDM0NHLGNBQWMsRUFBRVIsVUFBVTtNQUMxQlMsWUFBWSxFQUFFWCxZQUFZLENBQUNZO0lBQzdCLENBQUMsRUFBRVAsT0FBUSxDQUFDO0lBQ1osS0FBSyxDQUFFSixrQkFBa0IsRUFBRUksT0FBUSxDQUFDOztJQUVwQztJQUNBLElBQUksQ0FBQ1EsUUFBUSxDQUFFLElBQUlmLE1BQU0sQ0FBRU8sT0FBTyxDQUFDSyxjQUFjLEVBQUU7TUFDakRKLElBQUksRUFBRUQsT0FBTyxDQUFDTSxZQUFZO01BQzFCRyxNQUFNLEVBQUUsSUFBSSxDQUFDQTtJQUNmLENBQUUsQ0FBRSxDQUFDO0VBQ1A7QUFDRjtBQUVBZixrQkFBa0IsQ0FBQ2dCLFFBQVEsQ0FBRSxnQkFBZ0IsRUFBRVosY0FBZSxDQUFDO0FBRS9ELGVBQWVBLGNBQWMifQ==