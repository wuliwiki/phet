// Copyright 2016-2022, University of Colorado Boulder

/**
 * Combines an AppleGroupNode with NumberPickers (spinners) that let you change the number of apples and coins.
 *
 * @author Sam Reid (PhET Interactive Simulations)
 */

import StringUtils from '../../../../../phetcommon/js/util/StringUtils.js';
import proportionPlayground from '../../../proportionPlayground.js';
import ProportionPlaygroundStrings from '../../../ProportionPlaygroundStrings.js';
import ProportionPlaygroundColors from '../ProportionPlaygroundColors.js';
import SceneRatioControl from '../SceneRatioControl.js';
import AppleGroupNode from './AppleGroupNode.js';
const applesString = ProportionPlaygroundStrings.apples;
const pricePatternString = ProportionPlaygroundStrings.pricePattern;
const totalCostString = ProportionPlaygroundStrings.totalCost;
class AppleGroupControl extends SceneRatioControl {
  /**
   * @param {AppleGroup} appleGroup - the model
   * @param {Property.<boolean>} showCostPerAppleProperty - true if the price tag should be shown
   * @param {Tandem} tandem
   */
  constructor(appleGroup, showCostPerAppleProperty, tandem) {
    assert && assert(tandem);
    super(appleGroup, ProportionPlaygroundColors.appleCostPickerProperty, ProportionPlaygroundColors.appleProperty, tandem, {
      leftPickerLabel: totalCostString,
      leftPickerOptions: {
        // Put a $ sign in front of the spinner number
        formatValue: value => StringUtils.fillIn(pricePatternString, {
          price: `${value}`
        })
      },
      rightPickerLabel: applesString,
      pickerLabelMaxWidth: 90
    });

    // Create the place where apples and coins will be shown.
    const appleGroupNode = new AppleGroupNode(appleGroup, showCostPerAppleProperty);
    this.addChild(appleGroupNode);
    this.addBottomPickersWithPosition(appleGroupNode.coinStack.centerX, appleGroupNode.appleCrate.centerX);
    appleGroupNode.bottom = this.pickerContainer.top - 30;
  }
}
proportionPlayground.register('AppleGroupControl', AppleGroupControl);
export default AppleGroupControl;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTdHJpbmdVdGlscyIsInByb3BvcnRpb25QbGF5Z3JvdW5kIiwiUHJvcG9ydGlvblBsYXlncm91bmRTdHJpbmdzIiwiUHJvcG9ydGlvblBsYXlncm91bmRDb2xvcnMiLCJTY2VuZVJhdGlvQ29udHJvbCIsIkFwcGxlR3JvdXBOb2RlIiwiYXBwbGVzU3RyaW5nIiwiYXBwbGVzIiwicHJpY2VQYXR0ZXJuU3RyaW5nIiwicHJpY2VQYXR0ZXJuIiwidG90YWxDb3N0U3RyaW5nIiwidG90YWxDb3N0IiwiQXBwbGVHcm91cENvbnRyb2wiLCJjb25zdHJ1Y3RvciIsImFwcGxlR3JvdXAiLCJzaG93Q29zdFBlckFwcGxlUHJvcGVydHkiLCJ0YW5kZW0iLCJhc3NlcnQiLCJhcHBsZUNvc3RQaWNrZXJQcm9wZXJ0eSIsImFwcGxlUHJvcGVydHkiLCJsZWZ0UGlja2VyTGFiZWwiLCJsZWZ0UGlja2VyT3B0aW9ucyIsImZvcm1hdFZhbHVlIiwidmFsdWUiLCJmaWxsSW4iLCJwcmljZSIsInJpZ2h0UGlja2VyTGFiZWwiLCJwaWNrZXJMYWJlbE1heFdpZHRoIiwiYXBwbGVHcm91cE5vZGUiLCJhZGRDaGlsZCIsImFkZEJvdHRvbVBpY2tlcnNXaXRoUG9zaXRpb24iLCJjb2luU3RhY2siLCJjZW50ZXJYIiwiYXBwbGVDcmF0ZSIsImJvdHRvbSIsInBpY2tlckNvbnRhaW5lciIsInRvcCIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiQXBwbGVHcm91cENvbnRyb2wuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTYtMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogQ29tYmluZXMgYW4gQXBwbGVHcm91cE5vZGUgd2l0aCBOdW1iZXJQaWNrZXJzIChzcGlubmVycykgdGhhdCBsZXQgeW91IGNoYW5nZSB0aGUgbnVtYmVyIG9mIGFwcGxlcyBhbmQgY29pbnMuXHJcbiAqXHJcbiAqIEBhdXRob3IgU2FtIFJlaWQgKFBoRVQgSW50ZXJhY3RpdmUgU2ltdWxhdGlvbnMpXHJcbiAqL1xyXG5cclxuaW1wb3J0IFN0cmluZ1V0aWxzIGZyb20gJy4uLy4uLy4uLy4uLy4uL3BoZXRjb21tb24vanMvdXRpbC9TdHJpbmdVdGlscy5qcyc7XHJcbmltcG9ydCBwcm9wb3J0aW9uUGxheWdyb3VuZCBmcm9tICcuLi8uLi8uLi9wcm9wb3J0aW9uUGxheWdyb3VuZC5qcyc7XHJcbmltcG9ydCBQcm9wb3J0aW9uUGxheWdyb3VuZFN0cmluZ3MgZnJvbSAnLi4vLi4vLi4vUHJvcG9ydGlvblBsYXlncm91bmRTdHJpbmdzLmpzJztcclxuaW1wb3J0IFByb3BvcnRpb25QbGF5Z3JvdW5kQ29sb3JzIGZyb20gJy4uL1Byb3BvcnRpb25QbGF5Z3JvdW5kQ29sb3JzLmpzJztcclxuaW1wb3J0IFNjZW5lUmF0aW9Db250cm9sIGZyb20gJy4uL1NjZW5lUmF0aW9Db250cm9sLmpzJztcclxuaW1wb3J0IEFwcGxlR3JvdXBOb2RlIGZyb20gJy4vQXBwbGVHcm91cE5vZGUuanMnO1xyXG5cclxuY29uc3QgYXBwbGVzU3RyaW5nID0gUHJvcG9ydGlvblBsYXlncm91bmRTdHJpbmdzLmFwcGxlcztcclxuY29uc3QgcHJpY2VQYXR0ZXJuU3RyaW5nID0gUHJvcG9ydGlvblBsYXlncm91bmRTdHJpbmdzLnByaWNlUGF0dGVybjtcclxuY29uc3QgdG90YWxDb3N0U3RyaW5nID0gUHJvcG9ydGlvblBsYXlncm91bmRTdHJpbmdzLnRvdGFsQ29zdDtcclxuXHJcbmNsYXNzIEFwcGxlR3JvdXBDb250cm9sIGV4dGVuZHMgU2NlbmVSYXRpb0NvbnRyb2wge1xyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSB7QXBwbGVHcm91cH0gYXBwbGVHcm91cCAtIHRoZSBtb2RlbFxyXG4gICAqIEBwYXJhbSB7UHJvcGVydHkuPGJvb2xlYW4+fSBzaG93Q29zdFBlckFwcGxlUHJvcGVydHkgLSB0cnVlIGlmIHRoZSBwcmljZSB0YWcgc2hvdWxkIGJlIHNob3duXHJcbiAgICogQHBhcmFtIHtUYW5kZW19IHRhbmRlbVxyXG4gICAqL1xyXG4gIGNvbnN0cnVjdG9yKCBhcHBsZUdyb3VwLCBzaG93Q29zdFBlckFwcGxlUHJvcGVydHksIHRhbmRlbSApIHtcclxuICAgIGFzc2VydCAmJiBhc3NlcnQoIHRhbmRlbSApO1xyXG5cclxuICAgIHN1cGVyKFxyXG4gICAgICBhcHBsZUdyb3VwLFxyXG4gICAgICBQcm9wb3J0aW9uUGxheWdyb3VuZENvbG9ycy5hcHBsZUNvc3RQaWNrZXJQcm9wZXJ0eSxcclxuICAgICAgUHJvcG9ydGlvblBsYXlncm91bmRDb2xvcnMuYXBwbGVQcm9wZXJ0eSxcclxuICAgICAgdGFuZGVtLFxyXG4gICAgICB7XHJcbiAgICAgICAgbGVmdFBpY2tlckxhYmVsOiB0b3RhbENvc3RTdHJpbmcsXHJcbiAgICAgICAgbGVmdFBpY2tlck9wdGlvbnM6IHtcclxuICAgICAgICAgIC8vIFB1dCBhICQgc2lnbiBpbiBmcm9udCBvZiB0aGUgc3Bpbm5lciBudW1iZXJcclxuICAgICAgICAgIGZvcm1hdFZhbHVlOiB2YWx1ZSA9PiBTdHJpbmdVdGlscy5maWxsSW4oIHByaWNlUGF0dGVyblN0cmluZywge1xyXG4gICAgICAgICAgICBwcmljZTogYCR7dmFsdWV9YFxyXG4gICAgICAgICAgfSApXHJcbiAgICAgICAgfSxcclxuICAgICAgICByaWdodFBpY2tlckxhYmVsOiBhcHBsZXNTdHJpbmcsXHJcbiAgICAgICAgcGlja2VyTGFiZWxNYXhXaWR0aDogOTBcclxuICAgICAgfVxyXG4gICAgKTtcclxuXHJcbiAgICAvLyBDcmVhdGUgdGhlIHBsYWNlIHdoZXJlIGFwcGxlcyBhbmQgY29pbnMgd2lsbCBiZSBzaG93bi5cclxuICAgIGNvbnN0IGFwcGxlR3JvdXBOb2RlID0gbmV3IEFwcGxlR3JvdXBOb2RlKCBhcHBsZUdyb3VwLCBzaG93Q29zdFBlckFwcGxlUHJvcGVydHkgKTtcclxuXHJcbiAgICB0aGlzLmFkZENoaWxkKCBhcHBsZUdyb3VwTm9kZSApO1xyXG4gICAgdGhpcy5hZGRCb3R0b21QaWNrZXJzV2l0aFBvc2l0aW9uKCBhcHBsZUdyb3VwTm9kZS5jb2luU3RhY2suY2VudGVyWCwgYXBwbGVHcm91cE5vZGUuYXBwbGVDcmF0ZS5jZW50ZXJYICk7XHJcblxyXG4gICAgYXBwbGVHcm91cE5vZGUuYm90dG9tID0gdGhpcy5waWNrZXJDb250YWluZXIudG9wIC0gMzA7XHJcbiAgfVxyXG59XHJcblxyXG5wcm9wb3J0aW9uUGxheWdyb3VuZC5yZWdpc3RlciggJ0FwcGxlR3JvdXBDb250cm9sJywgQXBwbGVHcm91cENvbnRyb2wgKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IEFwcGxlR3JvdXBDb250cm9sO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsV0FBVyxNQUFNLGtEQUFrRDtBQUMxRSxPQUFPQyxvQkFBb0IsTUFBTSxrQ0FBa0M7QUFDbkUsT0FBT0MsMkJBQTJCLE1BQU0seUNBQXlDO0FBQ2pGLE9BQU9DLDBCQUEwQixNQUFNLGtDQUFrQztBQUN6RSxPQUFPQyxpQkFBaUIsTUFBTSx5QkFBeUI7QUFDdkQsT0FBT0MsY0FBYyxNQUFNLHFCQUFxQjtBQUVoRCxNQUFNQyxZQUFZLEdBQUdKLDJCQUEyQixDQUFDSyxNQUFNO0FBQ3ZELE1BQU1DLGtCQUFrQixHQUFHTiwyQkFBMkIsQ0FBQ08sWUFBWTtBQUNuRSxNQUFNQyxlQUFlLEdBQUdSLDJCQUEyQixDQUFDUyxTQUFTO0FBRTdELE1BQU1DLGlCQUFpQixTQUFTUixpQkFBaUIsQ0FBQztFQUNoRDtBQUNGO0FBQ0E7QUFDQTtBQUNBO0VBQ0VTLFdBQVdBLENBQUVDLFVBQVUsRUFBRUMsd0JBQXdCLEVBQUVDLE1BQU0sRUFBRztJQUMxREMsTUFBTSxJQUFJQSxNQUFNLENBQUVELE1BQU8sQ0FBQztJQUUxQixLQUFLLENBQ0hGLFVBQVUsRUFDVlgsMEJBQTBCLENBQUNlLHVCQUF1QixFQUNsRGYsMEJBQTBCLENBQUNnQixhQUFhLEVBQ3hDSCxNQUFNLEVBQ047TUFDRUksZUFBZSxFQUFFVixlQUFlO01BQ2hDVyxpQkFBaUIsRUFBRTtRQUNqQjtRQUNBQyxXQUFXLEVBQUVDLEtBQUssSUFBSXZCLFdBQVcsQ0FBQ3dCLE1BQU0sQ0FBRWhCLGtCQUFrQixFQUFFO1VBQzVEaUIsS0FBSyxFQUFHLEdBQUVGLEtBQU07UUFDbEIsQ0FBRTtNQUNKLENBQUM7TUFDREcsZ0JBQWdCLEVBQUVwQixZQUFZO01BQzlCcUIsbUJBQW1CLEVBQUU7SUFDdkIsQ0FDRixDQUFDOztJQUVEO0lBQ0EsTUFBTUMsY0FBYyxHQUFHLElBQUl2QixjQUFjLENBQUVTLFVBQVUsRUFBRUMsd0JBQXlCLENBQUM7SUFFakYsSUFBSSxDQUFDYyxRQUFRLENBQUVELGNBQWUsQ0FBQztJQUMvQixJQUFJLENBQUNFLDRCQUE0QixDQUFFRixjQUFjLENBQUNHLFNBQVMsQ0FBQ0MsT0FBTyxFQUFFSixjQUFjLENBQUNLLFVBQVUsQ0FBQ0QsT0FBUSxDQUFDO0lBRXhHSixjQUFjLENBQUNNLE1BQU0sR0FBRyxJQUFJLENBQUNDLGVBQWUsQ0FBQ0MsR0FBRyxHQUFHLEVBQUU7RUFDdkQ7QUFDRjtBQUVBbkMsb0JBQW9CLENBQUNvQyxRQUFRLENBQUUsbUJBQW1CLEVBQUV6QixpQkFBa0IsQ0FBQztBQUV2RSxlQUFlQSxpQkFBaUIifQ==