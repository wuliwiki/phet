// Copyright 2016-2023, University of Colorado Boulder

/**
 * Shows a group of 4 radio buttons that allows switching between different scenes.
 *
 * @author Sam Reid (PhET Interactive Simulations)
 */

import merge from '../../../../phet-core/js/merge.js';
import { AlignBox, AlignGroup } from '../../../../scenery/js/imports.js';
import RectangularRadioButtonGroup from '../../../../sun/js/buttons/RectangularRadioButtonGroup.js';
import proportionPlayground from '../../proportionPlayground.js';
import ProportionPlaygroundColors from './ProportionPlaygroundColors.js';
class SceneSelectionControls extends RectangularRadioButtonGroup {
  /**
   * @param {Property.<Scene>} sceneProperty - Determines which scene is visible
   * @param {Array.<SceneNode>} sceneNodes - Each sceneNode has a scene and an icon
   * @param {Tandem} tandem
   * @param {Object} [options] - node options
   */
  constructor(sceneProperty, sceneNodes, tandem, options) {
    const group = new AlignGroup();
    const ratioItems = sceneNodes.map(sceneNode => ({
      value: sceneNode.scene,
      createNode: () => new AlignBox(sceneNode.sceneIcon, {
        group: group
      }),
      tandemName: `${sceneNode.tandem.name}RadioButton`
    }));
    options = merge({
      orientation: 'horizontal',
      radioButtonOptions: {
        baseColor: ProportionPlaygroundColors.sceneSelectionBackgroundProperty,
        xMargin: 20,
        yMargin: 12,
        buttonAppearanceStrategyOptions: {
          selectedLineWidth: 2,
          selectedStroke: ProportionPlaygroundColors.sceneSelectionBorderProperty
        }
      },
      tandem: tandem
    }, options);
    super(sceneProperty, ratioItems, options);
  }
}
proportionPlayground.register('SceneSelectionControls', SceneSelectionControls);
export default SceneSelectionControls;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtZXJnZSIsIkFsaWduQm94IiwiQWxpZ25Hcm91cCIsIlJlY3Rhbmd1bGFyUmFkaW9CdXR0b25Hcm91cCIsInByb3BvcnRpb25QbGF5Z3JvdW5kIiwiUHJvcG9ydGlvblBsYXlncm91bmRDb2xvcnMiLCJTY2VuZVNlbGVjdGlvbkNvbnRyb2xzIiwiY29uc3RydWN0b3IiLCJzY2VuZVByb3BlcnR5Iiwic2NlbmVOb2RlcyIsInRhbmRlbSIsIm9wdGlvbnMiLCJncm91cCIsInJhdGlvSXRlbXMiLCJtYXAiLCJzY2VuZU5vZGUiLCJ2YWx1ZSIsInNjZW5lIiwiY3JlYXRlTm9kZSIsInNjZW5lSWNvbiIsInRhbmRlbU5hbWUiLCJuYW1lIiwib3JpZW50YXRpb24iLCJyYWRpb0J1dHRvbk9wdGlvbnMiLCJiYXNlQ29sb3IiLCJzY2VuZVNlbGVjdGlvbkJhY2tncm91bmRQcm9wZXJ0eSIsInhNYXJnaW4iLCJ5TWFyZ2luIiwiYnV0dG9uQXBwZWFyYW5jZVN0cmF0ZWd5T3B0aW9ucyIsInNlbGVjdGVkTGluZVdpZHRoIiwic2VsZWN0ZWRTdHJva2UiLCJzY2VuZVNlbGVjdGlvbkJvcmRlclByb3BlcnR5IiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJTY2VuZVNlbGVjdGlvbkNvbnRyb2xzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE2LTIwMjMsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIFNob3dzIGEgZ3JvdXAgb2YgNCByYWRpbyBidXR0b25zIHRoYXQgYWxsb3dzIHN3aXRjaGluZyBiZXR3ZWVuIGRpZmZlcmVudCBzY2VuZXMuXHJcbiAqXHJcbiAqIEBhdXRob3IgU2FtIFJlaWQgKFBoRVQgSW50ZXJhY3RpdmUgU2ltdWxhdGlvbnMpXHJcbiAqL1xyXG5cclxuaW1wb3J0IG1lcmdlIGZyb20gJy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy9tZXJnZS5qcyc7XHJcbmltcG9ydCB7IEFsaWduQm94LCBBbGlnbkdyb3VwIH0gZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IFJlY3Rhbmd1bGFyUmFkaW9CdXR0b25Hcm91cCBmcm9tICcuLi8uLi8uLi8uLi9zdW4vanMvYnV0dG9ucy9SZWN0YW5ndWxhclJhZGlvQnV0dG9uR3JvdXAuanMnO1xyXG5pbXBvcnQgcHJvcG9ydGlvblBsYXlncm91bmQgZnJvbSAnLi4vLi4vcHJvcG9ydGlvblBsYXlncm91bmQuanMnO1xyXG5pbXBvcnQgUHJvcG9ydGlvblBsYXlncm91bmRDb2xvcnMgZnJvbSAnLi9Qcm9wb3J0aW9uUGxheWdyb3VuZENvbG9ycy5qcyc7XHJcblxyXG5jbGFzcyBTY2VuZVNlbGVjdGlvbkNvbnRyb2xzIGV4dGVuZHMgUmVjdGFuZ3VsYXJSYWRpb0J1dHRvbkdyb3VwIHtcclxuICAvKipcclxuICAgKiBAcGFyYW0ge1Byb3BlcnR5LjxTY2VuZT59IHNjZW5lUHJvcGVydHkgLSBEZXRlcm1pbmVzIHdoaWNoIHNjZW5lIGlzIHZpc2libGVcclxuICAgKiBAcGFyYW0ge0FycmF5LjxTY2VuZU5vZGU+fSBzY2VuZU5vZGVzIC0gRWFjaCBzY2VuZU5vZGUgaGFzIGEgc2NlbmUgYW5kIGFuIGljb25cclxuICAgKiBAcGFyYW0ge1RhbmRlbX0gdGFuZGVtXHJcbiAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXSAtIG5vZGUgb3B0aW9uc1xyXG4gICAqL1xyXG4gIGNvbnN0cnVjdG9yKCBzY2VuZVByb3BlcnR5LCBzY2VuZU5vZGVzLCB0YW5kZW0sIG9wdGlvbnMgKSB7XHJcbiAgICBjb25zdCBncm91cCA9IG5ldyBBbGlnbkdyb3VwKCk7XHJcbiAgICBjb25zdCByYXRpb0l0ZW1zID0gc2NlbmVOb2Rlcy5tYXAoIHNjZW5lTm9kZSA9PiAoIHtcclxuICAgICAgdmFsdWU6IHNjZW5lTm9kZS5zY2VuZSxcclxuICAgICAgY3JlYXRlTm9kZTogKCkgPT4gbmV3IEFsaWduQm94KCBzY2VuZU5vZGUuc2NlbmVJY29uLCB7IGdyb3VwOiBncm91cCB9ICksXHJcbiAgICAgIHRhbmRlbU5hbWU6IGAke3NjZW5lTm9kZS50YW5kZW0ubmFtZX1SYWRpb0J1dHRvbmBcclxuICAgIH0gKSApO1xyXG5cclxuICAgIG9wdGlvbnMgPSBtZXJnZSgge1xyXG4gICAgICBvcmllbnRhdGlvbjogJ2hvcml6b250YWwnLFxyXG4gICAgICByYWRpb0J1dHRvbk9wdGlvbnM6IHtcclxuICAgICAgICBiYXNlQ29sb3I6IFByb3BvcnRpb25QbGF5Z3JvdW5kQ29sb3JzLnNjZW5lU2VsZWN0aW9uQmFja2dyb3VuZFByb3BlcnR5LFxyXG4gICAgICAgIHhNYXJnaW46IDIwLFxyXG4gICAgICAgIHlNYXJnaW46IDEyLFxyXG4gICAgICAgIGJ1dHRvbkFwcGVhcmFuY2VTdHJhdGVneU9wdGlvbnM6IHtcclxuICAgICAgICAgIHNlbGVjdGVkTGluZVdpZHRoOiAyLFxyXG4gICAgICAgICAgc2VsZWN0ZWRTdHJva2U6IFByb3BvcnRpb25QbGF5Z3JvdW5kQ29sb3JzLnNjZW5lU2VsZWN0aW9uQm9yZGVyUHJvcGVydHlcclxuICAgICAgICB9XHJcbiAgICAgIH0sXHJcbiAgICAgIHRhbmRlbTogdGFuZGVtXHJcbiAgICB9LCBvcHRpb25zICk7XHJcblxyXG4gICAgc3VwZXIoIHNjZW5lUHJvcGVydHksIHJhdGlvSXRlbXMsIG9wdGlvbnMgKTtcclxuICB9XHJcbn1cclxuXHJcbnByb3BvcnRpb25QbGF5Z3JvdW5kLnJlZ2lzdGVyKCAnU2NlbmVTZWxlY3Rpb25Db250cm9scycsIFNjZW5lU2VsZWN0aW9uQ29udHJvbHMgKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFNjZW5lU2VsZWN0aW9uQ29udHJvbHM7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLEtBQUssTUFBTSxtQ0FBbUM7QUFDckQsU0FBU0MsUUFBUSxFQUFFQyxVQUFVLFFBQVEsbUNBQW1DO0FBQ3hFLE9BQU9DLDJCQUEyQixNQUFNLDJEQUEyRDtBQUNuRyxPQUFPQyxvQkFBb0IsTUFBTSwrQkFBK0I7QUFDaEUsT0FBT0MsMEJBQTBCLE1BQU0saUNBQWlDO0FBRXhFLE1BQU1DLHNCQUFzQixTQUFTSCwyQkFBMkIsQ0FBQztFQUMvRDtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7RUFDRUksV0FBV0EsQ0FBRUMsYUFBYSxFQUFFQyxVQUFVLEVBQUVDLE1BQU0sRUFBRUMsT0FBTyxFQUFHO0lBQ3hELE1BQU1DLEtBQUssR0FBRyxJQUFJVixVQUFVLENBQUMsQ0FBQztJQUM5QixNQUFNVyxVQUFVLEdBQUdKLFVBQVUsQ0FBQ0ssR0FBRyxDQUFFQyxTQUFTLEtBQU07TUFDaERDLEtBQUssRUFBRUQsU0FBUyxDQUFDRSxLQUFLO01BQ3RCQyxVQUFVLEVBQUVBLENBQUEsS0FBTSxJQUFJakIsUUFBUSxDQUFFYyxTQUFTLENBQUNJLFNBQVMsRUFBRTtRQUFFUCxLQUFLLEVBQUVBO01BQU0sQ0FBRSxDQUFDO01BQ3ZFUSxVQUFVLEVBQUcsR0FBRUwsU0FBUyxDQUFDTCxNQUFNLENBQUNXLElBQUs7SUFDdkMsQ0FBQyxDQUFHLENBQUM7SUFFTFYsT0FBTyxHQUFHWCxLQUFLLENBQUU7TUFDZnNCLFdBQVcsRUFBRSxZQUFZO01BQ3pCQyxrQkFBa0IsRUFBRTtRQUNsQkMsU0FBUyxFQUFFbkIsMEJBQTBCLENBQUNvQixnQ0FBZ0M7UUFDdEVDLE9BQU8sRUFBRSxFQUFFO1FBQ1hDLE9BQU8sRUFBRSxFQUFFO1FBQ1hDLCtCQUErQixFQUFFO1VBQy9CQyxpQkFBaUIsRUFBRSxDQUFDO1VBQ3BCQyxjQUFjLEVBQUV6QiwwQkFBMEIsQ0FBQzBCO1FBQzdDO01BQ0YsQ0FBQztNQUNEckIsTUFBTSxFQUFFQTtJQUNWLENBQUMsRUFBRUMsT0FBUSxDQUFDO0lBRVosS0FBSyxDQUFFSCxhQUFhLEVBQUVLLFVBQVUsRUFBRUYsT0FBUSxDQUFDO0VBQzdDO0FBQ0Y7QUFFQVAsb0JBQW9CLENBQUM0QixRQUFRLENBQUUsd0JBQXdCLEVBQUUxQixzQkFBdUIsQ0FBQztBQUVqRixlQUFlQSxzQkFBc0IifQ==