// Copyright 2016-2022, University of Colorado Boulder

/**
 * The model for the paint scene, which contains two splotches.
 *
 * @author Sam Reid (PhET Interactive Simulations)
 */

import Property from '../../../../../axon/js/Property.js';
import ReferenceIO from '../../../../../tandem/js/types/ReferenceIO.js';
import proportionPlayground from '../../../proportionPlayground.js';
import Scene from '../Scene.js';
import SceneRatio from '../SceneRatio.js';
import PaintChoice from './PaintChoice.js';
import Splotch from './Splotch.js';
class PaintScene extends Scene {
  /**
   * @param {boolean} predictMode - true for the Predict Screen which has a reveal button
   * @param {Tandem} tandem
   */
  constructor(predictMode, tandem) {
    assert && assert(tandem);
    super(predictMode, tandem);

    // @public {Property.<PaintChoice>} - What two paints (left and right) are currently used.
    this.paintChoiceProperty = new Property(PaintChoice.BLUE_YELLOW, {
      phetioValueType: ReferenceIO(PaintChoice.PaintChoiceIO),
      tandem: tandem.createTandem('paintChoiceProperty')
    });
    const initialCount = predictMode ? 5 : 0;

    // @public (read-only) - the models for each splotch
    this.leftSplotch = new Splotch(initialCount, initialCount, this.leftVisibleProperty, this.leftControlsVisibleProperty, tandem.createTandem('leftSplotch'));
    this.rightSplotch = new Splotch(initialCount, initialCount, this.rightVisibleProperty, this.rightControlsVisibleProperty, tandem.createTandem('rightSplotch'));
    this.initializeRatios(this.leftSplotch, this.rightSplotch);
  }

  /**
   * Returns whether our two (visible) ratios are equivalent (handling division by 0 properly).
   * @public
   *
   * @returns {boolean}
   */
  areVisualRatiosEquivalent() {
    return SceneRatio.areRatiosEquivalent(this.leftSplotch.visibleLeftColorProperty.value, this.leftSplotch.visibleRightColorProperty.value, this.rightSplotch.visibleLeftColorProperty.value, this.rightSplotch.visibleRightColorProperty.value);
  }

  /**
   * Steps forward in time
   * @public
   *
   * @param {number} dt - In seconds
   */
  step(dt) {
    this.leftSplotch.step(dt);
    this.rightSplotch.step(dt);
  }

  /**
   * Reset the model and both child splotches.
   * @public
   * @override
   */
  reset() {
    super.reset();
    this.paintChoiceProperty.reset();
  }
}
proportionPlayground.register('PaintScene', PaintScene);
export default PaintScene;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQcm9wZXJ0eSIsIlJlZmVyZW5jZUlPIiwicHJvcG9ydGlvblBsYXlncm91bmQiLCJTY2VuZSIsIlNjZW5lUmF0aW8iLCJQYWludENob2ljZSIsIlNwbG90Y2giLCJQYWludFNjZW5lIiwiY29uc3RydWN0b3IiLCJwcmVkaWN0TW9kZSIsInRhbmRlbSIsImFzc2VydCIsInBhaW50Q2hvaWNlUHJvcGVydHkiLCJCTFVFX1lFTExPVyIsInBoZXRpb1ZhbHVlVHlwZSIsIlBhaW50Q2hvaWNlSU8iLCJjcmVhdGVUYW5kZW0iLCJpbml0aWFsQ291bnQiLCJsZWZ0U3Bsb3RjaCIsImxlZnRWaXNpYmxlUHJvcGVydHkiLCJsZWZ0Q29udHJvbHNWaXNpYmxlUHJvcGVydHkiLCJyaWdodFNwbG90Y2giLCJyaWdodFZpc2libGVQcm9wZXJ0eSIsInJpZ2h0Q29udHJvbHNWaXNpYmxlUHJvcGVydHkiLCJpbml0aWFsaXplUmF0aW9zIiwiYXJlVmlzdWFsUmF0aW9zRXF1aXZhbGVudCIsImFyZVJhdGlvc0VxdWl2YWxlbnQiLCJ2aXNpYmxlTGVmdENvbG9yUHJvcGVydHkiLCJ2YWx1ZSIsInZpc2libGVSaWdodENvbG9yUHJvcGVydHkiLCJzdGVwIiwiZHQiLCJyZXNldCIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiUGFpbnRTY2VuZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxNi0yMDIyLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBUaGUgbW9kZWwgZm9yIHRoZSBwYWludCBzY2VuZSwgd2hpY2ggY29udGFpbnMgdHdvIHNwbG90Y2hlcy5cclxuICpcclxuICogQGF1dGhvciBTYW0gUmVpZCAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcclxuICovXHJcblxyXG5pbXBvcnQgUHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vLi4vLi4vYXhvbi9qcy9Qcm9wZXJ0eS5qcyc7XHJcbmltcG9ydCBSZWZlcmVuY2VJTyBmcm9tICcuLi8uLi8uLi8uLi8uLi90YW5kZW0vanMvdHlwZXMvUmVmZXJlbmNlSU8uanMnO1xyXG5pbXBvcnQgcHJvcG9ydGlvblBsYXlncm91bmQgZnJvbSAnLi4vLi4vLi4vcHJvcG9ydGlvblBsYXlncm91bmQuanMnO1xyXG5pbXBvcnQgU2NlbmUgZnJvbSAnLi4vU2NlbmUuanMnO1xyXG5pbXBvcnQgU2NlbmVSYXRpbyBmcm9tICcuLi9TY2VuZVJhdGlvLmpzJztcclxuaW1wb3J0IFBhaW50Q2hvaWNlIGZyb20gJy4vUGFpbnRDaG9pY2UuanMnO1xyXG5pbXBvcnQgU3Bsb3RjaCBmcm9tICcuL1NwbG90Y2guanMnO1xyXG5cclxuY2xhc3MgUGFpbnRTY2VuZSBleHRlbmRzIFNjZW5lIHtcclxuICAvKipcclxuICAgKiBAcGFyYW0ge2Jvb2xlYW59IHByZWRpY3RNb2RlIC0gdHJ1ZSBmb3IgdGhlIFByZWRpY3QgU2NyZWVuIHdoaWNoIGhhcyBhIHJldmVhbCBidXR0b25cclxuICAgKiBAcGFyYW0ge1RhbmRlbX0gdGFuZGVtXHJcbiAgICovXHJcbiAgY29uc3RydWN0b3IoIHByZWRpY3RNb2RlLCB0YW5kZW0gKSB7XHJcbiAgICBhc3NlcnQgJiYgYXNzZXJ0KCB0YW5kZW0gKTtcclxuXHJcbiAgICBzdXBlciggcHJlZGljdE1vZGUsIHRhbmRlbSApO1xyXG5cclxuICAgIC8vIEBwdWJsaWMge1Byb3BlcnR5LjxQYWludENob2ljZT59IC0gV2hhdCB0d28gcGFpbnRzIChsZWZ0IGFuZCByaWdodCkgYXJlIGN1cnJlbnRseSB1c2VkLlxyXG4gICAgdGhpcy5wYWludENob2ljZVByb3BlcnR5ID0gbmV3IFByb3BlcnR5KCBQYWludENob2ljZS5CTFVFX1lFTExPVywge1xyXG4gICAgICBwaGV0aW9WYWx1ZVR5cGU6IFJlZmVyZW5jZUlPKCBQYWludENob2ljZS5QYWludENob2ljZUlPICksXHJcbiAgICAgIHRhbmRlbTogdGFuZGVtLmNyZWF0ZVRhbmRlbSggJ3BhaW50Q2hvaWNlUHJvcGVydHknIClcclxuICAgIH0gKTtcclxuXHJcbiAgICBjb25zdCBpbml0aWFsQ291bnQgPSBwcmVkaWN0TW9kZSA/IDUgOiAwO1xyXG5cclxuICAgIC8vIEBwdWJsaWMgKHJlYWQtb25seSkgLSB0aGUgbW9kZWxzIGZvciBlYWNoIHNwbG90Y2hcclxuICAgIHRoaXMubGVmdFNwbG90Y2ggPSBuZXcgU3Bsb3RjaCggaW5pdGlhbENvdW50LCBpbml0aWFsQ291bnQsIHRoaXMubGVmdFZpc2libGVQcm9wZXJ0eSwgdGhpcy5sZWZ0Q29udHJvbHNWaXNpYmxlUHJvcGVydHksIHRhbmRlbS5jcmVhdGVUYW5kZW0oICdsZWZ0U3Bsb3RjaCcgKSApO1xyXG4gICAgdGhpcy5yaWdodFNwbG90Y2ggPSBuZXcgU3Bsb3RjaCggaW5pdGlhbENvdW50LCBpbml0aWFsQ291bnQsIHRoaXMucmlnaHRWaXNpYmxlUHJvcGVydHksIHRoaXMucmlnaHRDb250cm9sc1Zpc2libGVQcm9wZXJ0eSwgdGFuZGVtLmNyZWF0ZVRhbmRlbSggJ3JpZ2h0U3Bsb3RjaCcgKSApO1xyXG5cclxuICAgIHRoaXMuaW5pdGlhbGl6ZVJhdGlvcyggdGhpcy5sZWZ0U3Bsb3RjaCwgdGhpcy5yaWdodFNwbG90Y2ggKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFJldHVybnMgd2hldGhlciBvdXIgdHdvICh2aXNpYmxlKSByYXRpb3MgYXJlIGVxdWl2YWxlbnQgKGhhbmRsaW5nIGRpdmlzaW9uIGJ5IDAgcHJvcGVybHkpLlxyXG4gICAqIEBwdWJsaWNcclxuICAgKlxyXG4gICAqIEByZXR1cm5zIHtib29sZWFufVxyXG4gICAqL1xyXG4gIGFyZVZpc3VhbFJhdGlvc0VxdWl2YWxlbnQoKSB7XHJcbiAgICByZXR1cm4gU2NlbmVSYXRpby5hcmVSYXRpb3NFcXVpdmFsZW50KCB0aGlzLmxlZnRTcGxvdGNoLnZpc2libGVMZWZ0Q29sb3JQcm9wZXJ0eS52YWx1ZSxcclxuICAgICAgdGhpcy5sZWZ0U3Bsb3RjaC52aXNpYmxlUmlnaHRDb2xvclByb3BlcnR5LnZhbHVlLFxyXG4gICAgICB0aGlzLnJpZ2h0U3Bsb3RjaC52aXNpYmxlTGVmdENvbG9yUHJvcGVydHkudmFsdWUsXHJcbiAgICAgIHRoaXMucmlnaHRTcGxvdGNoLnZpc2libGVSaWdodENvbG9yUHJvcGVydHkudmFsdWUgKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFN0ZXBzIGZvcndhcmQgaW4gdGltZVxyXG4gICAqIEBwdWJsaWNcclxuICAgKlxyXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBkdCAtIEluIHNlY29uZHNcclxuICAgKi9cclxuICBzdGVwKCBkdCApIHtcclxuICAgIHRoaXMubGVmdFNwbG90Y2guc3RlcCggZHQgKTtcclxuICAgIHRoaXMucmlnaHRTcGxvdGNoLnN0ZXAoIGR0ICk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBSZXNldCB0aGUgbW9kZWwgYW5kIGJvdGggY2hpbGQgc3Bsb3RjaGVzLlxyXG4gICAqIEBwdWJsaWNcclxuICAgKiBAb3ZlcnJpZGVcclxuICAgKi9cclxuICByZXNldCgpIHtcclxuICAgIHN1cGVyLnJlc2V0KCk7XHJcblxyXG4gICAgdGhpcy5wYWludENob2ljZVByb3BlcnR5LnJlc2V0KCk7XHJcbiAgfVxyXG59XHJcblxyXG5wcm9wb3J0aW9uUGxheWdyb3VuZC5yZWdpc3RlciggJ1BhaW50U2NlbmUnLCBQYWludFNjZW5lICk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBQYWludFNjZW5lOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxRQUFRLE1BQU0sb0NBQW9DO0FBQ3pELE9BQU9DLFdBQVcsTUFBTSwrQ0FBK0M7QUFDdkUsT0FBT0Msb0JBQW9CLE1BQU0sa0NBQWtDO0FBQ25FLE9BQU9DLEtBQUssTUFBTSxhQUFhO0FBQy9CLE9BQU9DLFVBQVUsTUFBTSxrQkFBa0I7QUFDekMsT0FBT0MsV0FBVyxNQUFNLGtCQUFrQjtBQUMxQyxPQUFPQyxPQUFPLE1BQU0sY0FBYztBQUVsQyxNQUFNQyxVQUFVLFNBQVNKLEtBQUssQ0FBQztFQUM3QjtBQUNGO0FBQ0E7QUFDQTtFQUNFSyxXQUFXQSxDQUFFQyxXQUFXLEVBQUVDLE1BQU0sRUFBRztJQUNqQ0MsTUFBTSxJQUFJQSxNQUFNLENBQUVELE1BQU8sQ0FBQztJQUUxQixLQUFLLENBQUVELFdBQVcsRUFBRUMsTUFBTyxDQUFDOztJQUU1QjtJQUNBLElBQUksQ0FBQ0UsbUJBQW1CLEdBQUcsSUFBSVosUUFBUSxDQUFFSyxXQUFXLENBQUNRLFdBQVcsRUFBRTtNQUNoRUMsZUFBZSxFQUFFYixXQUFXLENBQUVJLFdBQVcsQ0FBQ1UsYUFBYyxDQUFDO01BQ3pETCxNQUFNLEVBQUVBLE1BQU0sQ0FBQ00sWUFBWSxDQUFFLHFCQUFzQjtJQUNyRCxDQUFFLENBQUM7SUFFSCxNQUFNQyxZQUFZLEdBQUdSLFdBQVcsR0FBRyxDQUFDLEdBQUcsQ0FBQzs7SUFFeEM7SUFDQSxJQUFJLENBQUNTLFdBQVcsR0FBRyxJQUFJWixPQUFPLENBQUVXLFlBQVksRUFBRUEsWUFBWSxFQUFFLElBQUksQ0FBQ0UsbUJBQW1CLEVBQUUsSUFBSSxDQUFDQywyQkFBMkIsRUFBRVYsTUFBTSxDQUFDTSxZQUFZLENBQUUsYUFBYyxDQUFFLENBQUM7SUFDOUosSUFBSSxDQUFDSyxZQUFZLEdBQUcsSUFBSWYsT0FBTyxDQUFFVyxZQUFZLEVBQUVBLFlBQVksRUFBRSxJQUFJLENBQUNLLG9CQUFvQixFQUFFLElBQUksQ0FBQ0MsNEJBQTRCLEVBQUViLE1BQU0sQ0FBQ00sWUFBWSxDQUFFLGNBQWUsQ0FBRSxDQUFDO0lBRWxLLElBQUksQ0FBQ1EsZ0JBQWdCLENBQUUsSUFBSSxDQUFDTixXQUFXLEVBQUUsSUFBSSxDQUFDRyxZQUFhLENBQUM7RUFDOUQ7O0VBRUE7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0VBQ0VJLHlCQUF5QkEsQ0FBQSxFQUFHO0lBQzFCLE9BQU9yQixVQUFVLENBQUNzQixtQkFBbUIsQ0FBRSxJQUFJLENBQUNSLFdBQVcsQ0FBQ1Msd0JBQXdCLENBQUNDLEtBQUssRUFDcEYsSUFBSSxDQUFDVixXQUFXLENBQUNXLHlCQUF5QixDQUFDRCxLQUFLLEVBQ2hELElBQUksQ0FBQ1AsWUFBWSxDQUFDTSx3QkFBd0IsQ0FBQ0MsS0FBSyxFQUNoRCxJQUFJLENBQUNQLFlBQVksQ0FBQ1EseUJBQXlCLENBQUNELEtBQU0sQ0FBQztFQUN2RDs7RUFFQTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7RUFDRUUsSUFBSUEsQ0FBRUMsRUFBRSxFQUFHO0lBQ1QsSUFBSSxDQUFDYixXQUFXLENBQUNZLElBQUksQ0FBRUMsRUFBRyxDQUFDO0lBQzNCLElBQUksQ0FBQ1YsWUFBWSxDQUFDUyxJQUFJLENBQUVDLEVBQUcsQ0FBQztFQUM5Qjs7RUFFQTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0VBQ0VDLEtBQUtBLENBQUEsRUFBRztJQUNOLEtBQUssQ0FBQ0EsS0FBSyxDQUFDLENBQUM7SUFFYixJQUFJLENBQUNwQixtQkFBbUIsQ0FBQ29CLEtBQUssQ0FBQyxDQUFDO0VBQ2xDO0FBQ0Y7QUFFQTlCLG9CQUFvQixDQUFDK0IsUUFBUSxDQUFFLFlBQVksRUFBRTFCLFVBQVcsQ0FBQztBQUV6RCxlQUFlQSxVQUFVIn0=