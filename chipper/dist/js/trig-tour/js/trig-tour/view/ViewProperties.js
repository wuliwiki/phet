// Copyright 2015-2021, University of Colorado Boulder

/**
 * View property set, passed to control panel.
 *
 * @author Michael Dubson (PhET developer) on 6/5/2015.
 */

import BooleanProperty from '../../../../axon/js/BooleanProperty.js';
import Property from '../../../../axon/js/Property.js';
import trigTour from '../../trigTour.js';

// constants
const VALID_ANGLE_UNITS = ['degrees', 'radians'];
const VALID_GRAPH = ['cos', 'sin', 'tan'];
class ViewProperties {
  constructor() {
    // @public {Property.<string>} which graph is visible, 'cos'|'sin' |'tan'
    this.graphProperty = new Property('cos');

    // @public{Property.<string>} which angle units, 'degrees'|'radians'
    this.angleUnitsProperty = new Property('degrees');

    // @public {Property.<boolean>}
    this.labelsVisibleProperty = new BooleanProperty(false);

    // @public {Property.<boolean>}
    this.gridVisibleProperty = new BooleanProperty(false);

    // @public {Property.<boolean>}
    this.specialAnglesVisibleProperty = new BooleanProperty(false);

    // validate the graph values
    this.graphProperty.link(graph => {
      assert && assert(_.includes(VALID_GRAPH, graph), `this graph is invalid:${graph}`);
    });

    // validate the angle units
    this.angleUnitsProperty.link(angleUnit => {
      assert && assert(_.includes(VALID_ANGLE_UNITS, angleUnit), `this angleUnit is invalid:${angleUnit}`);
    });
  }

  /**
   * @public
   */
  reset() {
    this.graphProperty.reset();
    this.angleUnitsProperty.reset();
    this.labelsVisibleProperty.reset();
    this.gridVisibleProperty.reset();
    this.specialAnglesVisibleProperty.reset();
  }
}
trigTour.register('ViewProperties', ViewProperties);
export default ViewProperties;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJCb29sZWFuUHJvcGVydHkiLCJQcm9wZXJ0eSIsInRyaWdUb3VyIiwiVkFMSURfQU5HTEVfVU5JVFMiLCJWQUxJRF9HUkFQSCIsIlZpZXdQcm9wZXJ0aWVzIiwiY29uc3RydWN0b3IiLCJncmFwaFByb3BlcnR5IiwiYW5nbGVVbml0c1Byb3BlcnR5IiwibGFiZWxzVmlzaWJsZVByb3BlcnR5IiwiZ3JpZFZpc2libGVQcm9wZXJ0eSIsInNwZWNpYWxBbmdsZXNWaXNpYmxlUHJvcGVydHkiLCJsaW5rIiwiZ3JhcGgiLCJhc3NlcnQiLCJfIiwiaW5jbHVkZXMiLCJhbmdsZVVuaXQiLCJyZXNldCIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiVmlld1Byb3BlcnRpZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTUtMjAyMSwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogVmlldyBwcm9wZXJ0eSBzZXQsIHBhc3NlZCB0byBjb250cm9sIHBhbmVsLlxyXG4gKlxyXG4gKiBAYXV0aG9yIE1pY2hhZWwgRHVic29uIChQaEVUIGRldmVsb3Blcikgb24gNi81LzIwMTUuXHJcbiAqL1xyXG5cclxuaW1wb3J0IEJvb2xlYW5Qcm9wZXJ0eSBmcm9tICcuLi8uLi8uLi8uLi9heG9uL2pzL0Jvb2xlYW5Qcm9wZXJ0eS5qcyc7XHJcbmltcG9ydCBQcm9wZXJ0eSBmcm9tICcuLi8uLi8uLi8uLi9heG9uL2pzL1Byb3BlcnR5LmpzJztcclxuaW1wb3J0IHRyaWdUb3VyIGZyb20gJy4uLy4uL3RyaWdUb3VyLmpzJztcclxuXHJcbi8vIGNvbnN0YW50c1xyXG5jb25zdCBWQUxJRF9BTkdMRV9VTklUUyA9IFsgJ2RlZ3JlZXMnLCAncmFkaWFucycgXTtcclxuY29uc3QgVkFMSURfR1JBUEggPSBbICdjb3MnLCAnc2luJywgJ3RhbicgXTtcclxuXHJcbmNsYXNzIFZpZXdQcm9wZXJ0aWVzIHtcclxuICBjb25zdHJ1Y3RvcigpIHtcclxuXHJcbiAgICAvLyBAcHVibGljIHtQcm9wZXJ0eS48c3RyaW5nPn0gd2hpY2ggZ3JhcGggaXMgdmlzaWJsZSwgJ2Nvcyd8J3NpbicgfCd0YW4nXHJcbiAgICB0aGlzLmdyYXBoUHJvcGVydHkgPSBuZXcgUHJvcGVydHkoICdjb3MnICk7XHJcblxyXG4gICAgLy8gQHB1YmxpY3tQcm9wZXJ0eS48c3RyaW5nPn0gd2hpY2ggYW5nbGUgdW5pdHMsICdkZWdyZWVzJ3wncmFkaWFucydcclxuICAgIHRoaXMuYW5nbGVVbml0c1Byb3BlcnR5ID0gbmV3IFByb3BlcnR5KCAnZGVncmVlcycgKTtcclxuXHJcbiAgICAvLyBAcHVibGljIHtQcm9wZXJ0eS48Ym9vbGVhbj59XHJcbiAgICB0aGlzLmxhYmVsc1Zpc2libGVQcm9wZXJ0eSA9IG5ldyBCb29sZWFuUHJvcGVydHkoIGZhbHNlICk7XHJcblxyXG4gICAgLy8gQHB1YmxpYyB7UHJvcGVydHkuPGJvb2xlYW4+fVxyXG4gICAgdGhpcy5ncmlkVmlzaWJsZVByb3BlcnR5ID0gbmV3IEJvb2xlYW5Qcm9wZXJ0eSggZmFsc2UgKTtcclxuXHJcbiAgICAvLyBAcHVibGljIHtQcm9wZXJ0eS48Ym9vbGVhbj59XHJcbiAgICB0aGlzLnNwZWNpYWxBbmdsZXNWaXNpYmxlUHJvcGVydHkgPSBuZXcgQm9vbGVhblByb3BlcnR5KCBmYWxzZSApO1xyXG5cclxuICAgIC8vIHZhbGlkYXRlIHRoZSBncmFwaCB2YWx1ZXNcclxuICAgIHRoaXMuZ3JhcGhQcm9wZXJ0eS5saW5rKCBncmFwaCA9PiB7XHJcbiAgICAgIGFzc2VydCAmJiBhc3NlcnQoIF8uaW5jbHVkZXMoIFZBTElEX0dSQVBILCBncmFwaCApLCBgdGhpcyBncmFwaCBpcyBpbnZhbGlkOiR7Z3JhcGh9YCApO1xyXG4gICAgfSApO1xyXG5cclxuICAgIC8vIHZhbGlkYXRlIHRoZSBhbmdsZSB1bml0c1xyXG4gICAgdGhpcy5hbmdsZVVuaXRzUHJvcGVydHkubGluayggYW5nbGVVbml0ID0+IHtcclxuICAgICAgYXNzZXJ0ICYmIGFzc2VydCggXy5pbmNsdWRlcyggVkFMSURfQU5HTEVfVU5JVFMsIGFuZ2xlVW5pdCApLCBgdGhpcyBhbmdsZVVuaXQgaXMgaW52YWxpZDoke2FuZ2xlVW5pdH1gICk7XHJcbiAgICB9ICk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBAcHVibGljXHJcbiAgICovXHJcbiAgcmVzZXQoKSB7XHJcbiAgICB0aGlzLmdyYXBoUHJvcGVydHkucmVzZXQoKTtcclxuICAgIHRoaXMuYW5nbGVVbml0c1Byb3BlcnR5LnJlc2V0KCk7XHJcbiAgICB0aGlzLmxhYmVsc1Zpc2libGVQcm9wZXJ0eS5yZXNldCgpO1xyXG4gICAgdGhpcy5ncmlkVmlzaWJsZVByb3BlcnR5LnJlc2V0KCk7XHJcbiAgICB0aGlzLnNwZWNpYWxBbmdsZXNWaXNpYmxlUHJvcGVydHkucmVzZXQoKTtcclxuICB9XHJcbn1cclxuXHJcbnRyaWdUb3VyLnJlZ2lzdGVyKCAnVmlld1Byb3BlcnRpZXMnLCBWaWV3UHJvcGVydGllcyApO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgVmlld1Byb3BlcnRpZXM7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLGVBQWUsTUFBTSx3Q0FBd0M7QUFDcEUsT0FBT0MsUUFBUSxNQUFNLGlDQUFpQztBQUN0RCxPQUFPQyxRQUFRLE1BQU0sbUJBQW1COztBQUV4QztBQUNBLE1BQU1DLGlCQUFpQixHQUFHLENBQUUsU0FBUyxFQUFFLFNBQVMsQ0FBRTtBQUNsRCxNQUFNQyxXQUFXLEdBQUcsQ0FBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssQ0FBRTtBQUUzQyxNQUFNQyxjQUFjLENBQUM7RUFDbkJDLFdBQVdBLENBQUEsRUFBRztJQUVaO0lBQ0EsSUFBSSxDQUFDQyxhQUFhLEdBQUcsSUFBSU4sUUFBUSxDQUFFLEtBQU0sQ0FBQzs7SUFFMUM7SUFDQSxJQUFJLENBQUNPLGtCQUFrQixHQUFHLElBQUlQLFFBQVEsQ0FBRSxTQUFVLENBQUM7O0lBRW5EO0lBQ0EsSUFBSSxDQUFDUSxxQkFBcUIsR0FBRyxJQUFJVCxlQUFlLENBQUUsS0FBTSxDQUFDOztJQUV6RDtJQUNBLElBQUksQ0FBQ1UsbUJBQW1CLEdBQUcsSUFBSVYsZUFBZSxDQUFFLEtBQU0sQ0FBQzs7SUFFdkQ7SUFDQSxJQUFJLENBQUNXLDRCQUE0QixHQUFHLElBQUlYLGVBQWUsQ0FBRSxLQUFNLENBQUM7O0lBRWhFO0lBQ0EsSUFBSSxDQUFDTyxhQUFhLENBQUNLLElBQUksQ0FBRUMsS0FBSyxJQUFJO01BQ2hDQyxNQUFNLElBQUlBLE1BQU0sQ0FBRUMsQ0FBQyxDQUFDQyxRQUFRLENBQUVaLFdBQVcsRUFBRVMsS0FBTSxDQUFDLEVBQUcseUJBQXdCQSxLQUFNLEVBQUUsQ0FBQztJQUN4RixDQUFFLENBQUM7O0lBRUg7SUFDQSxJQUFJLENBQUNMLGtCQUFrQixDQUFDSSxJQUFJLENBQUVLLFNBQVMsSUFBSTtNQUN6Q0gsTUFBTSxJQUFJQSxNQUFNLENBQUVDLENBQUMsQ0FBQ0MsUUFBUSxDQUFFYixpQkFBaUIsRUFBRWMsU0FBVSxDQUFDLEVBQUcsNkJBQTRCQSxTQUFVLEVBQUUsQ0FBQztJQUMxRyxDQUFFLENBQUM7RUFDTDs7RUFFQTtBQUNGO0FBQ0E7RUFDRUMsS0FBS0EsQ0FBQSxFQUFHO0lBQ04sSUFBSSxDQUFDWCxhQUFhLENBQUNXLEtBQUssQ0FBQyxDQUFDO0lBQzFCLElBQUksQ0FBQ1Ysa0JBQWtCLENBQUNVLEtBQUssQ0FBQyxDQUFDO0lBQy9CLElBQUksQ0FBQ1QscUJBQXFCLENBQUNTLEtBQUssQ0FBQyxDQUFDO0lBQ2xDLElBQUksQ0FBQ1IsbUJBQW1CLENBQUNRLEtBQUssQ0FBQyxDQUFDO0lBQ2hDLElBQUksQ0FBQ1AsNEJBQTRCLENBQUNPLEtBQUssQ0FBQyxDQUFDO0VBQzNDO0FBQ0Y7QUFFQWhCLFFBQVEsQ0FBQ2lCLFFBQVEsQ0FBRSxnQkFBZ0IsRUFBRWQsY0FBZSxDQUFDO0FBRXJELGVBQWVBLGNBQWMifQ==