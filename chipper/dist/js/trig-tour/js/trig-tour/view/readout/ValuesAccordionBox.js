// Copyright 2020-2022, University of Colorado Boulder

/**
 * AccordionBox container of ReadoutNode.  ReadoutNode contains all viewable values for the simulation.
 *
 * @author Michael Dubson on 6/10/2015.
 */

import PhetFont from '../../../../../scenery-phet/js/PhetFont.js';
import { Text } from '../../../../../scenery/js/imports.js';
import AccordionBox from '../../../../../sun/js/AccordionBox.js';
import trigTour from '../../../trigTour.js';
import TrigTourStrings from '../../../TrigTourStrings.js';
import TrigTourColors from '../TrigTourColors.js';
import ReadoutNode from './ReadoutNode.js';

//constants
const DISPLAY_FONT = new PhetFont(20);
const PANEL_COLOR = TrigTourColors.PANEL_COLOR;
const BUTTON_X_MARGIN = 12;
const TITLE_X_SPACING = 10.5;
const CONTENT_X_MARGIN = 20;
const CLOSE_BUTTON_WIDTH = 16;

//strings
const valuesString = TrigTourStrings.values;
class ValuesAccordionBox extends AccordionBox {
  /**
   * @param {TrigTourModel} model is the main model of the sim
   * @param {ViewProperties} viewProperties
   * @param {number} maxPanelWidth - max width for the panel, determined by layout of the screen view
   */
  constructor(model, viewProperties, maxPanelWidth) {
    // for i18n, restrict the width of the panel content by the max panel with minus the spacing params
    const maxContentWidth = maxPanelWidth - (BUTTON_X_MARGIN + TITLE_X_SPACING + CONTENT_X_MARGIN);
    const readoutNode = new ReadoutNode(model, viewProperties, maxContentWidth);

    // dilation for the close button touch/click areas
    const buttonDilation = 30 - CLOSE_BUTTON_WIDTH / 2;
    super(readoutNode, {
      lineWidth: 1,
      cornerRadius: 10,
      buttonXMargin: BUTTON_X_MARGIN,
      // horizontal space between button and left|right edge of box
      buttonYMargin: 12,
      titleNode: new Text(valuesString, {
        font: DISPLAY_FONT,
        fontWeight: 'bold',
        maxWidth: maxContentWidth
      }),
      titleXSpacing: TITLE_X_SPACING,
      titleAlignX: 'left',
      fill: PANEL_COLOR,
      showTitleWhenExpanded: true,
      contentXMargin: CONTENT_X_MARGIN,
      contentYMargin: 15,
      contentYSpacing: 8,
      expandCollapseButtonOptions: {
        touchAreaXDilation: buttonDilation,
        touchAreaYDilation: buttonDilation,
        mouseAreaXDilation: buttonDilation,
        mouseAreaYDilation: buttonDilation
      }
    });
  }
}
trigTour.register('ValuesAccordionBox', ValuesAccordionBox);
export default ValuesAccordionBox;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQaGV0Rm9udCIsIlRleHQiLCJBY2NvcmRpb25Cb3giLCJ0cmlnVG91ciIsIlRyaWdUb3VyU3RyaW5ncyIsIlRyaWdUb3VyQ29sb3JzIiwiUmVhZG91dE5vZGUiLCJESVNQTEFZX0ZPTlQiLCJQQU5FTF9DT0xPUiIsIkJVVFRPTl9YX01BUkdJTiIsIlRJVExFX1hfU1BBQ0lORyIsIkNPTlRFTlRfWF9NQVJHSU4iLCJDTE9TRV9CVVRUT05fV0lEVEgiLCJ2YWx1ZXNTdHJpbmciLCJ2YWx1ZXMiLCJWYWx1ZXNBY2NvcmRpb25Cb3giLCJjb25zdHJ1Y3RvciIsIm1vZGVsIiwidmlld1Byb3BlcnRpZXMiLCJtYXhQYW5lbFdpZHRoIiwibWF4Q29udGVudFdpZHRoIiwicmVhZG91dE5vZGUiLCJidXR0b25EaWxhdGlvbiIsImxpbmVXaWR0aCIsImNvcm5lclJhZGl1cyIsImJ1dHRvblhNYXJnaW4iLCJidXR0b25ZTWFyZ2luIiwidGl0bGVOb2RlIiwiZm9udCIsImZvbnRXZWlnaHQiLCJtYXhXaWR0aCIsInRpdGxlWFNwYWNpbmciLCJ0aXRsZUFsaWduWCIsImZpbGwiLCJzaG93VGl0bGVXaGVuRXhwYW5kZWQiLCJjb250ZW50WE1hcmdpbiIsImNvbnRlbnRZTWFyZ2luIiwiY29udGVudFlTcGFjaW5nIiwiZXhwYW5kQ29sbGFwc2VCdXR0b25PcHRpb25zIiwidG91Y2hBcmVhWERpbGF0aW9uIiwidG91Y2hBcmVhWURpbGF0aW9uIiwibW91c2VBcmVhWERpbGF0aW9uIiwibW91c2VBcmVhWURpbGF0aW9uIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJWYWx1ZXNBY2NvcmRpb25Cb3guanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjAtMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogQWNjb3JkaW9uQm94IGNvbnRhaW5lciBvZiBSZWFkb3V0Tm9kZS4gIFJlYWRvdXROb2RlIGNvbnRhaW5zIGFsbCB2aWV3YWJsZSB2YWx1ZXMgZm9yIHRoZSBzaW11bGF0aW9uLlxyXG4gKlxyXG4gKiBAYXV0aG9yIE1pY2hhZWwgRHVic29uIG9uIDYvMTAvMjAxNS5cclxuICovXHJcblxyXG5pbXBvcnQgUGhldEZvbnQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vc2NlbmVyeS1waGV0L2pzL1BoZXRGb250LmpzJztcclxuaW1wb3J0IHsgVGV4dCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XHJcbmltcG9ydCBBY2NvcmRpb25Cb3ggZnJvbSAnLi4vLi4vLi4vLi4vLi4vc3VuL2pzL0FjY29yZGlvbkJveC5qcyc7XHJcbmltcG9ydCB0cmlnVG91ciBmcm9tICcuLi8uLi8uLi90cmlnVG91ci5qcyc7XHJcbmltcG9ydCBUcmlnVG91clN0cmluZ3MgZnJvbSAnLi4vLi4vLi4vVHJpZ1RvdXJTdHJpbmdzLmpzJztcclxuaW1wb3J0IFRyaWdUb3VyQ29sb3JzIGZyb20gJy4uL1RyaWdUb3VyQ29sb3JzLmpzJztcclxuaW1wb3J0IFJlYWRvdXROb2RlIGZyb20gJy4vUmVhZG91dE5vZGUuanMnO1xyXG5cclxuLy9jb25zdGFudHNcclxuY29uc3QgRElTUExBWV9GT05UID0gbmV3IFBoZXRGb250KCAyMCApO1xyXG5jb25zdCBQQU5FTF9DT0xPUiA9IFRyaWdUb3VyQ29sb3JzLlBBTkVMX0NPTE9SO1xyXG5jb25zdCBCVVRUT05fWF9NQVJHSU4gPSAxMjtcclxuY29uc3QgVElUTEVfWF9TUEFDSU5HID0gMTAuNTtcclxuY29uc3QgQ09OVEVOVF9YX01BUkdJTiA9IDIwO1xyXG5jb25zdCBDTE9TRV9CVVRUT05fV0lEVEggPSAxNjtcclxuXHJcbi8vc3RyaW5nc1xyXG5jb25zdCB2YWx1ZXNTdHJpbmcgPSBUcmlnVG91clN0cmluZ3MudmFsdWVzO1xyXG5cclxuY2xhc3MgVmFsdWVzQWNjb3JkaW9uQm94IGV4dGVuZHMgQWNjb3JkaW9uQm94IHtcclxuXHJcbiAgLyoqXHJcbiAgICogQHBhcmFtIHtUcmlnVG91ck1vZGVsfSBtb2RlbCBpcyB0aGUgbWFpbiBtb2RlbCBvZiB0aGUgc2ltXHJcbiAgICogQHBhcmFtIHtWaWV3UHJvcGVydGllc30gdmlld1Byb3BlcnRpZXNcclxuICAgKiBAcGFyYW0ge251bWJlcn0gbWF4UGFuZWxXaWR0aCAtIG1heCB3aWR0aCBmb3IgdGhlIHBhbmVsLCBkZXRlcm1pbmVkIGJ5IGxheW91dCBvZiB0aGUgc2NyZWVuIHZpZXdcclxuICAgKi9cclxuICBjb25zdHJ1Y3RvciggbW9kZWwsIHZpZXdQcm9wZXJ0aWVzLCBtYXhQYW5lbFdpZHRoICkge1xyXG5cclxuICAgIC8vIGZvciBpMThuLCByZXN0cmljdCB0aGUgd2lkdGggb2YgdGhlIHBhbmVsIGNvbnRlbnQgYnkgdGhlIG1heCBwYW5lbCB3aXRoIG1pbnVzIHRoZSBzcGFjaW5nIHBhcmFtc1xyXG4gICAgY29uc3QgbWF4Q29udGVudFdpZHRoID0gbWF4UGFuZWxXaWR0aCAtICggQlVUVE9OX1hfTUFSR0lOICsgVElUTEVfWF9TUEFDSU5HICsgQ09OVEVOVF9YX01BUkdJTiApO1xyXG4gICAgY29uc3QgcmVhZG91dE5vZGUgPSBuZXcgUmVhZG91dE5vZGUoIG1vZGVsLCB2aWV3UHJvcGVydGllcywgbWF4Q29udGVudFdpZHRoICk7XHJcblxyXG4gICAgLy8gZGlsYXRpb24gZm9yIHRoZSBjbG9zZSBidXR0b24gdG91Y2gvY2xpY2sgYXJlYXNcclxuICAgIGNvbnN0IGJ1dHRvbkRpbGF0aW9uID0gMzAgLSBDTE9TRV9CVVRUT05fV0lEVEggLyAyO1xyXG5cclxuICAgIHN1cGVyKCByZWFkb3V0Tm9kZSwge1xyXG4gICAgICBsaW5lV2lkdGg6IDEsXHJcbiAgICAgIGNvcm5lclJhZGl1czogMTAsXHJcbiAgICAgIGJ1dHRvblhNYXJnaW46IEJVVFRPTl9YX01BUkdJTiwgLy8gaG9yaXpvbnRhbCBzcGFjZSBiZXR3ZWVuIGJ1dHRvbiBhbmQgbGVmdHxyaWdodCBlZGdlIG9mIGJveFxyXG4gICAgICBidXR0b25ZTWFyZ2luOiAxMixcclxuICAgICAgdGl0bGVOb2RlOiBuZXcgVGV4dCggdmFsdWVzU3RyaW5nLCB7IGZvbnQ6IERJU1BMQVlfRk9OVCwgZm9udFdlaWdodDogJ2JvbGQnLCBtYXhXaWR0aDogbWF4Q29udGVudFdpZHRoIH0gKSxcclxuICAgICAgdGl0bGVYU3BhY2luZzogVElUTEVfWF9TUEFDSU5HLFxyXG4gICAgICB0aXRsZUFsaWduWDogJ2xlZnQnLFxyXG4gICAgICBmaWxsOiBQQU5FTF9DT0xPUixcclxuICAgICAgc2hvd1RpdGxlV2hlbkV4cGFuZGVkOiB0cnVlLFxyXG4gICAgICBjb250ZW50WE1hcmdpbjogQ09OVEVOVF9YX01BUkdJTixcclxuICAgICAgY29udGVudFlNYXJnaW46IDE1LFxyXG4gICAgICBjb250ZW50WVNwYWNpbmc6IDgsXHJcbiAgICAgIGV4cGFuZENvbGxhcHNlQnV0dG9uT3B0aW9uczoge1xyXG4gICAgICAgIHRvdWNoQXJlYVhEaWxhdGlvbjogYnV0dG9uRGlsYXRpb24sXHJcbiAgICAgICAgdG91Y2hBcmVhWURpbGF0aW9uOiBidXR0b25EaWxhdGlvbixcclxuICAgICAgICBtb3VzZUFyZWFYRGlsYXRpb246IGJ1dHRvbkRpbGF0aW9uLFxyXG4gICAgICAgIG1vdXNlQXJlYVlEaWxhdGlvbjogYnV0dG9uRGlsYXRpb25cclxuICAgICAgfVxyXG4gICAgfSApO1xyXG4gIH1cclxufVxyXG5cclxudHJpZ1RvdXIucmVnaXN0ZXIoICdWYWx1ZXNBY2NvcmRpb25Cb3gnLCBWYWx1ZXNBY2NvcmRpb25Cb3ggKTtcclxuZXhwb3J0IGRlZmF1bHQgVmFsdWVzQWNjb3JkaW9uQm94OyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxRQUFRLE1BQU0sNENBQTRDO0FBQ2pFLFNBQVNDLElBQUksUUFBUSxzQ0FBc0M7QUFDM0QsT0FBT0MsWUFBWSxNQUFNLHVDQUF1QztBQUNoRSxPQUFPQyxRQUFRLE1BQU0sc0JBQXNCO0FBQzNDLE9BQU9DLGVBQWUsTUFBTSw2QkFBNkI7QUFDekQsT0FBT0MsY0FBYyxNQUFNLHNCQUFzQjtBQUNqRCxPQUFPQyxXQUFXLE1BQU0sa0JBQWtCOztBQUUxQztBQUNBLE1BQU1DLFlBQVksR0FBRyxJQUFJUCxRQUFRLENBQUUsRUFBRyxDQUFDO0FBQ3ZDLE1BQU1RLFdBQVcsR0FBR0gsY0FBYyxDQUFDRyxXQUFXO0FBQzlDLE1BQU1DLGVBQWUsR0FBRyxFQUFFO0FBQzFCLE1BQU1DLGVBQWUsR0FBRyxJQUFJO0FBQzVCLE1BQU1DLGdCQUFnQixHQUFHLEVBQUU7QUFDM0IsTUFBTUMsa0JBQWtCLEdBQUcsRUFBRTs7QUFFN0I7QUFDQSxNQUFNQyxZQUFZLEdBQUdULGVBQWUsQ0FBQ1UsTUFBTTtBQUUzQyxNQUFNQyxrQkFBa0IsU0FBU2IsWUFBWSxDQUFDO0VBRTVDO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7RUFDRWMsV0FBV0EsQ0FBRUMsS0FBSyxFQUFFQyxjQUFjLEVBQUVDLGFBQWEsRUFBRztJQUVsRDtJQUNBLE1BQU1DLGVBQWUsR0FBR0QsYUFBYSxJQUFLVixlQUFlLEdBQUdDLGVBQWUsR0FBR0MsZ0JBQWdCLENBQUU7SUFDaEcsTUFBTVUsV0FBVyxHQUFHLElBQUlmLFdBQVcsQ0FBRVcsS0FBSyxFQUFFQyxjQUFjLEVBQUVFLGVBQWdCLENBQUM7O0lBRTdFO0lBQ0EsTUFBTUUsY0FBYyxHQUFHLEVBQUUsR0FBR1Ysa0JBQWtCLEdBQUcsQ0FBQztJQUVsRCxLQUFLLENBQUVTLFdBQVcsRUFBRTtNQUNsQkUsU0FBUyxFQUFFLENBQUM7TUFDWkMsWUFBWSxFQUFFLEVBQUU7TUFDaEJDLGFBQWEsRUFBRWhCLGVBQWU7TUFBRTtNQUNoQ2lCLGFBQWEsRUFBRSxFQUFFO01BQ2pCQyxTQUFTLEVBQUUsSUFBSTFCLElBQUksQ0FBRVksWUFBWSxFQUFFO1FBQUVlLElBQUksRUFBRXJCLFlBQVk7UUFBRXNCLFVBQVUsRUFBRSxNQUFNO1FBQUVDLFFBQVEsRUFBRVY7TUFBZ0IsQ0FBRSxDQUFDO01BQzFHVyxhQUFhLEVBQUVyQixlQUFlO01BQzlCc0IsV0FBVyxFQUFFLE1BQU07TUFDbkJDLElBQUksRUFBRXpCLFdBQVc7TUFDakIwQixxQkFBcUIsRUFBRSxJQUFJO01BQzNCQyxjQUFjLEVBQUV4QixnQkFBZ0I7TUFDaEN5QixjQUFjLEVBQUUsRUFBRTtNQUNsQkMsZUFBZSxFQUFFLENBQUM7TUFDbEJDLDJCQUEyQixFQUFFO1FBQzNCQyxrQkFBa0IsRUFBRWpCLGNBQWM7UUFDbENrQixrQkFBa0IsRUFBRWxCLGNBQWM7UUFDbENtQixrQkFBa0IsRUFBRW5CLGNBQWM7UUFDbENvQixrQkFBa0IsRUFBRXBCO01BQ3RCO0lBQ0YsQ0FBRSxDQUFDO0VBQ0w7QUFDRjtBQUVBbkIsUUFBUSxDQUFDd0MsUUFBUSxDQUFFLG9CQUFvQixFQUFFNUIsa0JBQW1CLENBQUM7QUFDN0QsZUFBZUEsa0JBQWtCIn0=