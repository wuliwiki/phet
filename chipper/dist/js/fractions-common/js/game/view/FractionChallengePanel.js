// Copyright 2018-2021, University of Colorado Boulder

/**
 * Bottom panel for fraction challenges that holds the pieces.
 *
 * @author Jonathan Olson <jonathan.olson@colorado.edu>
 */

import Panel from '../../../../sun/js/Panel.js';
import StackNodesBox from '../../building/view/StackNodesBox.js';
import fractionsCommon from '../../fractionsCommon.js';
class FractionChallengePanel extends Panel {
  /**
   * @param {FractionChallenge} challenge
   * @param {function} pressCallback - function( {SceneryEvent}, {Stack} ) - Called when a press is started.
   */
  constructor(challenge, pressCallback) {
    const box = new StackNodesBox([...challenge.shapeStacks, ...challenge.numberStacks, ...challenge.shapeGroupStacks, ...challenge.numberGroupStacks], pressCallback);
    super(box, {
      xMargin: 20
    });

    // @private {StackNodesBox}
    this.box = box;
  }

  /**
   * Sets the model positions of our model objects corresponding to their displayed (view) positions.
   * @public
   *
   * @param {ModelViewTransform2} modelViewTransform
   */
  updateModelPositions(modelViewTransform) {
    this.box.updateModelPositions(modelViewTransform, this);
  }

  /**
   * Releases references.
   * @public
   * @override
   */
  dispose() {
    this.box.dispose();
    super.dispose();
  }
}
fractionsCommon.register('FractionChallengePanel', FractionChallengePanel);
export default FractionChallengePanel;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQYW5lbCIsIlN0YWNrTm9kZXNCb3giLCJmcmFjdGlvbnNDb21tb24iLCJGcmFjdGlvbkNoYWxsZW5nZVBhbmVsIiwiY29uc3RydWN0b3IiLCJjaGFsbGVuZ2UiLCJwcmVzc0NhbGxiYWNrIiwiYm94Iiwic2hhcGVTdGFja3MiLCJudW1iZXJTdGFja3MiLCJzaGFwZUdyb3VwU3RhY2tzIiwibnVtYmVyR3JvdXBTdGFja3MiLCJ4TWFyZ2luIiwidXBkYXRlTW9kZWxQb3NpdGlvbnMiLCJtb2RlbFZpZXdUcmFuc2Zvcm0iLCJkaXNwb3NlIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJGcmFjdGlvbkNoYWxsZW5nZVBhbmVsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE4LTIwMjEsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIEJvdHRvbSBwYW5lbCBmb3IgZnJhY3Rpb24gY2hhbGxlbmdlcyB0aGF0IGhvbGRzIHRoZSBwaWVjZXMuXHJcbiAqXHJcbiAqIEBhdXRob3IgSm9uYXRoYW4gT2xzb24gPGpvbmF0aGFuLm9sc29uQGNvbG9yYWRvLmVkdT5cclxuICovXHJcblxyXG5pbXBvcnQgUGFuZWwgZnJvbSAnLi4vLi4vLi4vLi4vc3VuL2pzL1BhbmVsLmpzJztcclxuaW1wb3J0IFN0YWNrTm9kZXNCb3ggZnJvbSAnLi4vLi4vYnVpbGRpbmcvdmlldy9TdGFja05vZGVzQm94LmpzJztcclxuaW1wb3J0IGZyYWN0aW9uc0NvbW1vbiBmcm9tICcuLi8uLi9mcmFjdGlvbnNDb21tb24uanMnO1xyXG5cclxuY2xhc3MgRnJhY3Rpb25DaGFsbGVuZ2VQYW5lbCBleHRlbmRzIFBhbmVsIHtcclxuICAvKipcclxuICAgKiBAcGFyYW0ge0ZyYWN0aW9uQ2hhbGxlbmdlfSBjaGFsbGVuZ2VcclxuICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSBwcmVzc0NhbGxiYWNrIC0gZnVuY3Rpb24oIHtTY2VuZXJ5RXZlbnR9LCB7U3RhY2t9ICkgLSBDYWxsZWQgd2hlbiBhIHByZXNzIGlzIHN0YXJ0ZWQuXHJcbiAgICovXHJcbiAgY29uc3RydWN0b3IoIGNoYWxsZW5nZSwgcHJlc3NDYWxsYmFjayApIHtcclxuICAgIGNvbnN0IGJveCA9IG5ldyBTdGFja05vZGVzQm94KCBbXHJcbiAgICAgIC4uLmNoYWxsZW5nZS5zaGFwZVN0YWNrcyxcclxuICAgICAgLi4uY2hhbGxlbmdlLm51bWJlclN0YWNrcyxcclxuICAgICAgLi4uY2hhbGxlbmdlLnNoYXBlR3JvdXBTdGFja3MsXHJcbiAgICAgIC4uLmNoYWxsZW5nZS5udW1iZXJHcm91cFN0YWNrc1xyXG4gICAgXSwgcHJlc3NDYWxsYmFjayApO1xyXG5cclxuICAgIHN1cGVyKCBib3gsIHtcclxuICAgICAgeE1hcmdpbjogMjBcclxuICAgIH0gKTtcclxuXHJcbiAgICAvLyBAcHJpdmF0ZSB7U3RhY2tOb2Rlc0JveH1cclxuICAgIHRoaXMuYm94ID0gYm94O1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogU2V0cyB0aGUgbW9kZWwgcG9zaXRpb25zIG9mIG91ciBtb2RlbCBvYmplY3RzIGNvcnJlc3BvbmRpbmcgdG8gdGhlaXIgZGlzcGxheWVkICh2aWV3KSBwb3NpdGlvbnMuXHJcbiAgICogQHB1YmxpY1xyXG4gICAqXHJcbiAgICogQHBhcmFtIHtNb2RlbFZpZXdUcmFuc2Zvcm0yfSBtb2RlbFZpZXdUcmFuc2Zvcm1cclxuICAgKi9cclxuICB1cGRhdGVNb2RlbFBvc2l0aW9ucyggbW9kZWxWaWV3VHJhbnNmb3JtICkge1xyXG4gICAgdGhpcy5ib3gudXBkYXRlTW9kZWxQb3NpdGlvbnMoIG1vZGVsVmlld1RyYW5zZm9ybSwgdGhpcyApO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogUmVsZWFzZXMgcmVmZXJlbmNlcy5cclxuICAgKiBAcHVibGljXHJcbiAgICogQG92ZXJyaWRlXHJcbiAgICovXHJcbiAgZGlzcG9zZSgpIHtcclxuICAgIHRoaXMuYm94LmRpc3Bvc2UoKTtcclxuXHJcbiAgICBzdXBlci5kaXNwb3NlKCk7XHJcbiAgfVxyXG59XHJcblxyXG5mcmFjdGlvbnNDb21tb24ucmVnaXN0ZXIoICdGcmFjdGlvbkNoYWxsZW5nZVBhbmVsJywgRnJhY3Rpb25DaGFsbGVuZ2VQYW5lbCApO1xyXG5leHBvcnQgZGVmYXVsdCBGcmFjdGlvbkNoYWxsZW5nZVBhbmVsO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsS0FBSyxNQUFNLDZCQUE2QjtBQUMvQyxPQUFPQyxhQUFhLE1BQU0sc0NBQXNDO0FBQ2hFLE9BQU9DLGVBQWUsTUFBTSwwQkFBMEI7QUFFdEQsTUFBTUMsc0JBQXNCLFNBQVNILEtBQUssQ0FBQztFQUN6QztBQUNGO0FBQ0E7QUFDQTtFQUNFSSxXQUFXQSxDQUFFQyxTQUFTLEVBQUVDLGFBQWEsRUFBRztJQUN0QyxNQUFNQyxHQUFHLEdBQUcsSUFBSU4sYUFBYSxDQUFFLENBQzdCLEdBQUdJLFNBQVMsQ0FBQ0csV0FBVyxFQUN4QixHQUFHSCxTQUFTLENBQUNJLFlBQVksRUFDekIsR0FBR0osU0FBUyxDQUFDSyxnQkFBZ0IsRUFDN0IsR0FBR0wsU0FBUyxDQUFDTSxpQkFBaUIsQ0FDL0IsRUFBRUwsYUFBYyxDQUFDO0lBRWxCLEtBQUssQ0FBRUMsR0FBRyxFQUFFO01BQ1ZLLE9BQU8sRUFBRTtJQUNYLENBQUUsQ0FBQzs7SUFFSDtJQUNBLElBQUksQ0FBQ0wsR0FBRyxHQUFHQSxHQUFHO0VBQ2hCOztFQUVBO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtFQUNFTSxvQkFBb0JBLENBQUVDLGtCQUFrQixFQUFHO0lBQ3pDLElBQUksQ0FBQ1AsR0FBRyxDQUFDTSxvQkFBb0IsQ0FBRUMsa0JBQWtCLEVBQUUsSUFBSyxDQUFDO0VBQzNEOztFQUVBO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7RUFDRUMsT0FBT0EsQ0FBQSxFQUFHO0lBQ1IsSUFBSSxDQUFDUixHQUFHLENBQUNRLE9BQU8sQ0FBQyxDQUFDO0lBRWxCLEtBQUssQ0FBQ0EsT0FBTyxDQUFDLENBQUM7RUFDakI7QUFDRjtBQUVBYixlQUFlLENBQUNjLFFBQVEsQ0FBRSx3QkFBd0IsRUFBRWIsc0JBQXVCLENBQUM7QUFDNUUsZUFBZUEsc0JBQXNCIn0=