// Copyright 2019-2021, University of Colorado Boulder

/**
 * Top level view for the 'Explore2D' screen.
 *
 * @author BrandonLi
 */

import ModelViewTransform2 from '../../../../phetcommon/js/view/ModelViewTransform2.js';
import collisionLab from '../../collisionLab.js';
import BallSystemNode from '../../common/view/BallSystemNode.js';
import CollisionLabScreenView from '../../common/view/CollisionLabScreenView.js';
import CollisionLabViewProperties from '../../common/view/CollisionLabViewProperties.js';
import Explore2DModel from '../model/Explore2DModel.js';
import Explore2DControlPanel from './Explore2DControlPanel.js';
class Explore2DScreenView extends CollisionLabScreenView {
  /**
   * Creates the CollisionLabControlPanel for the 'Explore 2D' screen. Called in the constructor of the super-class. For
   * this screen, his method will instantiate a sub-type of CollisionLabControlPanel: Explore2DControlPanel.
   *
   * @override
   * @protected
   * @param {CollisionLabViewProperties} viewProperties
   * @param {Explore2DModel} model
   * @param {Object} [options]
   * @returns {Explore2DControlPanel}
   */
  createControlPanel(viewProperties, model, options) {
    assert && assert(viewProperties instanceof CollisionLabViewProperties, `invalid viewProperties: ${viewProperties}`);
    assert && assert(model instanceof Explore2DModel, `invalid model: ${model}`);
    return new Explore2DControlPanel(viewProperties, model.ballSystem.centerOfMassVisibleProperty, model.ballSystem.pathsVisibleProperty, model.playArea.reflectingBorderProperty, model.playArea.elasticityPercentProperty, model.playArea.enabledElasticityRange, model.ballSystem.ballsConstantSizeProperty, options);
  }

  /**
   * Creates the BallSystemNode for the 'Explore 2D' screen. Called in the constructor of the super-class. For this
   * screen, his method will instantiate a sub-type of BallSystemNode: Explore2DBallSystemNode.
   *
   * @override
   * @protected
   * @param {Explore2DModel} model
   * @param {CollisionLabViewProperties} viewProperties
   * @param {ModelViewTransform2} modelViewTransform
   * @returns {Explore2DBallSystemNode}
   */
  createBallSystemNode(model, viewProperties, modelViewTransform) {
    assert && assert(model instanceof Explore2DModel, `invalid model: ${model}`);
    assert && assert(viewProperties instanceof CollisionLabViewProperties, `invalid viewProperties: ${viewProperties}`);
    assert && assert(modelViewTransform instanceof ModelViewTransform2, `invalid modelViewTransform: ${modelViewTransform}`);
    return new BallSystemNode(model.ballSystem, model.playArea, viewProperties.valuesVisibleProperty, viewProperties.velocityVectorVisibleProperty, viewProperties.momentumVectorVisibleProperty, model.isPlayingProperty, modelViewTransform);
  }
}
collisionLab.register('Explore2DScreenView', Explore2DScreenView);
export default Explore2DScreenView;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJNb2RlbFZpZXdUcmFuc2Zvcm0yIiwiY29sbGlzaW9uTGFiIiwiQmFsbFN5c3RlbU5vZGUiLCJDb2xsaXNpb25MYWJTY3JlZW5WaWV3IiwiQ29sbGlzaW9uTGFiVmlld1Byb3BlcnRpZXMiLCJFeHBsb3JlMkRNb2RlbCIsIkV4cGxvcmUyRENvbnRyb2xQYW5lbCIsIkV4cGxvcmUyRFNjcmVlblZpZXciLCJjcmVhdGVDb250cm9sUGFuZWwiLCJ2aWV3UHJvcGVydGllcyIsIm1vZGVsIiwib3B0aW9ucyIsImFzc2VydCIsImJhbGxTeXN0ZW0iLCJjZW50ZXJPZk1hc3NWaXNpYmxlUHJvcGVydHkiLCJwYXRoc1Zpc2libGVQcm9wZXJ0eSIsInBsYXlBcmVhIiwicmVmbGVjdGluZ0JvcmRlclByb3BlcnR5IiwiZWxhc3RpY2l0eVBlcmNlbnRQcm9wZXJ0eSIsImVuYWJsZWRFbGFzdGljaXR5UmFuZ2UiLCJiYWxsc0NvbnN0YW50U2l6ZVByb3BlcnR5IiwiY3JlYXRlQmFsbFN5c3RlbU5vZGUiLCJtb2RlbFZpZXdUcmFuc2Zvcm0iLCJ2YWx1ZXNWaXNpYmxlUHJvcGVydHkiLCJ2ZWxvY2l0eVZlY3RvclZpc2libGVQcm9wZXJ0eSIsIm1vbWVudHVtVmVjdG9yVmlzaWJsZVByb3BlcnR5IiwiaXNQbGF5aW5nUHJvcGVydHkiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIkV4cGxvcmUyRFNjcmVlblZpZXcuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTktMjAyMSwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogVG9wIGxldmVsIHZpZXcgZm9yIHRoZSAnRXhwbG9yZTJEJyBzY3JlZW4uXHJcbiAqXHJcbiAqIEBhdXRob3IgQnJhbmRvbkxpXHJcbiAqL1xyXG5cclxuaW1wb3J0IE1vZGVsVmlld1RyYW5zZm9ybTIgZnJvbSAnLi4vLi4vLi4vLi4vcGhldGNvbW1vbi9qcy92aWV3L01vZGVsVmlld1RyYW5zZm9ybTIuanMnO1xyXG5pbXBvcnQgY29sbGlzaW9uTGFiIGZyb20gJy4uLy4uL2NvbGxpc2lvbkxhYi5qcyc7XHJcbmltcG9ydCBCYWxsU3lzdGVtTm9kZSBmcm9tICcuLi8uLi9jb21tb24vdmlldy9CYWxsU3lzdGVtTm9kZS5qcyc7XHJcbmltcG9ydCBDb2xsaXNpb25MYWJTY3JlZW5WaWV3IGZyb20gJy4uLy4uL2NvbW1vbi92aWV3L0NvbGxpc2lvbkxhYlNjcmVlblZpZXcuanMnO1xyXG5pbXBvcnQgQ29sbGlzaW9uTGFiVmlld1Byb3BlcnRpZXMgZnJvbSAnLi4vLi4vY29tbW9uL3ZpZXcvQ29sbGlzaW9uTGFiVmlld1Byb3BlcnRpZXMuanMnO1xyXG5pbXBvcnQgRXhwbG9yZTJETW9kZWwgZnJvbSAnLi4vbW9kZWwvRXhwbG9yZTJETW9kZWwuanMnO1xyXG5pbXBvcnQgRXhwbG9yZTJEQ29udHJvbFBhbmVsIGZyb20gJy4vRXhwbG9yZTJEQ29udHJvbFBhbmVsLmpzJztcclxuXHJcbmNsYXNzIEV4cGxvcmUyRFNjcmVlblZpZXcgZXh0ZW5kcyBDb2xsaXNpb25MYWJTY3JlZW5WaWV3IHtcclxuXHJcbiAgLyoqXHJcbiAgICogQ3JlYXRlcyB0aGUgQ29sbGlzaW9uTGFiQ29udHJvbFBhbmVsIGZvciB0aGUgJ0V4cGxvcmUgMkQnIHNjcmVlbi4gQ2FsbGVkIGluIHRoZSBjb25zdHJ1Y3RvciBvZiB0aGUgc3VwZXItY2xhc3MuIEZvclxyXG4gICAqIHRoaXMgc2NyZWVuLCBoaXMgbWV0aG9kIHdpbGwgaW5zdGFudGlhdGUgYSBzdWItdHlwZSBvZiBDb2xsaXNpb25MYWJDb250cm9sUGFuZWw6IEV4cGxvcmUyRENvbnRyb2xQYW5lbC5cclxuICAgKlxyXG4gICAqIEBvdmVycmlkZVxyXG4gICAqIEBwcm90ZWN0ZWRcclxuICAgKiBAcGFyYW0ge0NvbGxpc2lvbkxhYlZpZXdQcm9wZXJ0aWVzfSB2aWV3UHJvcGVydGllc1xyXG4gICAqIEBwYXJhbSB7RXhwbG9yZTJETW9kZWx9IG1vZGVsXHJcbiAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxyXG4gICAqIEByZXR1cm5zIHtFeHBsb3JlMkRDb250cm9sUGFuZWx9XHJcbiAgICovXHJcbiAgY3JlYXRlQ29udHJvbFBhbmVsKCB2aWV3UHJvcGVydGllcywgbW9kZWwsIG9wdGlvbnMgKSB7XHJcbiAgICBhc3NlcnQgJiYgYXNzZXJ0KCB2aWV3UHJvcGVydGllcyBpbnN0YW5jZW9mIENvbGxpc2lvbkxhYlZpZXdQcm9wZXJ0aWVzLCBgaW52YWxpZCB2aWV3UHJvcGVydGllczogJHt2aWV3UHJvcGVydGllc31gICk7XHJcbiAgICBhc3NlcnQgJiYgYXNzZXJ0KCBtb2RlbCBpbnN0YW5jZW9mIEV4cGxvcmUyRE1vZGVsLCBgaW52YWxpZCBtb2RlbDogJHttb2RlbH1gICk7XHJcblxyXG4gICAgcmV0dXJuIG5ldyBFeHBsb3JlMkRDb250cm9sUGFuZWwoXHJcbiAgICAgIHZpZXdQcm9wZXJ0aWVzLFxyXG4gICAgICBtb2RlbC5iYWxsU3lzdGVtLmNlbnRlck9mTWFzc1Zpc2libGVQcm9wZXJ0eSxcclxuICAgICAgbW9kZWwuYmFsbFN5c3RlbS5wYXRoc1Zpc2libGVQcm9wZXJ0eSxcclxuICAgICAgbW9kZWwucGxheUFyZWEucmVmbGVjdGluZ0JvcmRlclByb3BlcnR5LFxyXG4gICAgICBtb2RlbC5wbGF5QXJlYS5lbGFzdGljaXR5UGVyY2VudFByb3BlcnR5LFxyXG4gICAgICBtb2RlbC5wbGF5QXJlYS5lbmFibGVkRWxhc3RpY2l0eVJhbmdlLFxyXG4gICAgICBtb2RlbC5iYWxsU3lzdGVtLmJhbGxzQ29uc3RhbnRTaXplUHJvcGVydHksXHJcbiAgICAgIG9wdGlvbnNcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBDcmVhdGVzIHRoZSBCYWxsU3lzdGVtTm9kZSBmb3IgdGhlICdFeHBsb3JlIDJEJyBzY3JlZW4uIENhbGxlZCBpbiB0aGUgY29uc3RydWN0b3Igb2YgdGhlIHN1cGVyLWNsYXNzLiBGb3IgdGhpc1xyXG4gICAqIHNjcmVlbiwgaGlzIG1ldGhvZCB3aWxsIGluc3RhbnRpYXRlIGEgc3ViLXR5cGUgb2YgQmFsbFN5c3RlbU5vZGU6IEV4cGxvcmUyREJhbGxTeXN0ZW1Ob2RlLlxyXG4gICAqXHJcbiAgICogQG92ZXJyaWRlXHJcbiAgICogQHByb3RlY3RlZFxyXG4gICAqIEBwYXJhbSB7RXhwbG9yZTJETW9kZWx9IG1vZGVsXHJcbiAgICogQHBhcmFtIHtDb2xsaXNpb25MYWJWaWV3UHJvcGVydGllc30gdmlld1Byb3BlcnRpZXNcclxuICAgKiBAcGFyYW0ge01vZGVsVmlld1RyYW5zZm9ybTJ9IG1vZGVsVmlld1RyYW5zZm9ybVxyXG4gICAqIEByZXR1cm5zIHtFeHBsb3JlMkRCYWxsU3lzdGVtTm9kZX1cclxuICAgKi9cclxuICBjcmVhdGVCYWxsU3lzdGVtTm9kZSggbW9kZWwsIHZpZXdQcm9wZXJ0aWVzLCBtb2RlbFZpZXdUcmFuc2Zvcm0gKSB7XHJcbiAgICBhc3NlcnQgJiYgYXNzZXJ0KCBtb2RlbCBpbnN0YW5jZW9mIEV4cGxvcmUyRE1vZGVsLCBgaW52YWxpZCBtb2RlbDogJHttb2RlbH1gICk7XHJcbiAgICBhc3NlcnQgJiYgYXNzZXJ0KCB2aWV3UHJvcGVydGllcyBpbnN0YW5jZW9mIENvbGxpc2lvbkxhYlZpZXdQcm9wZXJ0aWVzLCBgaW52YWxpZCB2aWV3UHJvcGVydGllczogJHt2aWV3UHJvcGVydGllc31gICk7XHJcbiAgICBhc3NlcnQgJiYgYXNzZXJ0KCBtb2RlbFZpZXdUcmFuc2Zvcm0gaW5zdGFuY2VvZiBNb2RlbFZpZXdUcmFuc2Zvcm0yLCBgaW52YWxpZCBtb2RlbFZpZXdUcmFuc2Zvcm06ICR7bW9kZWxWaWV3VHJhbnNmb3JtfWAgKTtcclxuXHJcbiAgICByZXR1cm4gbmV3IEJhbGxTeXN0ZW1Ob2RlKCBtb2RlbC5iYWxsU3lzdGVtLFxyXG4gICAgICBtb2RlbC5wbGF5QXJlYSxcclxuICAgICAgdmlld1Byb3BlcnRpZXMudmFsdWVzVmlzaWJsZVByb3BlcnR5LFxyXG4gICAgICB2aWV3UHJvcGVydGllcy52ZWxvY2l0eVZlY3RvclZpc2libGVQcm9wZXJ0eSxcclxuICAgICAgdmlld1Byb3BlcnRpZXMubW9tZW50dW1WZWN0b3JWaXNpYmxlUHJvcGVydHksXHJcbiAgICAgIG1vZGVsLmlzUGxheWluZ1Byb3BlcnR5LFxyXG4gICAgICBtb2RlbFZpZXdUcmFuc2Zvcm0gKTtcclxuICB9XHJcbn1cclxuXHJcbmNvbGxpc2lvbkxhYi5yZWdpc3RlciggJ0V4cGxvcmUyRFNjcmVlblZpZXcnLCBFeHBsb3JlMkRTY3JlZW5WaWV3ICk7XHJcbmV4cG9ydCBkZWZhdWx0IEV4cGxvcmUyRFNjcmVlblZpZXc7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLG1CQUFtQixNQUFNLHVEQUF1RDtBQUN2RixPQUFPQyxZQUFZLE1BQU0sdUJBQXVCO0FBQ2hELE9BQU9DLGNBQWMsTUFBTSxxQ0FBcUM7QUFDaEUsT0FBT0Msc0JBQXNCLE1BQU0sNkNBQTZDO0FBQ2hGLE9BQU9DLDBCQUEwQixNQUFNLGlEQUFpRDtBQUN4RixPQUFPQyxjQUFjLE1BQU0sNEJBQTRCO0FBQ3ZELE9BQU9DLHFCQUFxQixNQUFNLDRCQUE0QjtBQUU5RCxNQUFNQyxtQkFBbUIsU0FBU0osc0JBQXNCLENBQUM7RUFFdkQ7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtFQUNFSyxrQkFBa0JBLENBQUVDLGNBQWMsRUFBRUMsS0FBSyxFQUFFQyxPQUFPLEVBQUc7SUFDbkRDLE1BQU0sSUFBSUEsTUFBTSxDQUFFSCxjQUFjLFlBQVlMLDBCQUEwQixFQUFHLDJCQUEwQkssY0FBZSxFQUFFLENBQUM7SUFDckhHLE1BQU0sSUFBSUEsTUFBTSxDQUFFRixLQUFLLFlBQVlMLGNBQWMsRUFBRyxrQkFBaUJLLEtBQU0sRUFBRSxDQUFDO0lBRTlFLE9BQU8sSUFBSUoscUJBQXFCLENBQzlCRyxjQUFjLEVBQ2RDLEtBQUssQ0FBQ0csVUFBVSxDQUFDQywyQkFBMkIsRUFDNUNKLEtBQUssQ0FBQ0csVUFBVSxDQUFDRSxvQkFBb0IsRUFDckNMLEtBQUssQ0FBQ00sUUFBUSxDQUFDQyx3QkFBd0IsRUFDdkNQLEtBQUssQ0FBQ00sUUFBUSxDQUFDRSx5QkFBeUIsRUFDeENSLEtBQUssQ0FBQ00sUUFBUSxDQUFDRyxzQkFBc0IsRUFDckNULEtBQUssQ0FBQ0csVUFBVSxDQUFDTyx5QkFBeUIsRUFDMUNULE9BQ0YsQ0FBQztFQUNIOztFQUVBO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7RUFDRVUsb0JBQW9CQSxDQUFFWCxLQUFLLEVBQUVELGNBQWMsRUFBRWEsa0JBQWtCLEVBQUc7SUFDaEVWLE1BQU0sSUFBSUEsTUFBTSxDQUFFRixLQUFLLFlBQVlMLGNBQWMsRUFBRyxrQkFBaUJLLEtBQU0sRUFBRSxDQUFDO0lBQzlFRSxNQUFNLElBQUlBLE1BQU0sQ0FBRUgsY0FBYyxZQUFZTCwwQkFBMEIsRUFBRywyQkFBMEJLLGNBQWUsRUFBRSxDQUFDO0lBQ3JIRyxNQUFNLElBQUlBLE1BQU0sQ0FBRVUsa0JBQWtCLFlBQVl0QixtQkFBbUIsRUFBRywrQkFBOEJzQixrQkFBbUIsRUFBRSxDQUFDO0lBRTFILE9BQU8sSUFBSXBCLGNBQWMsQ0FBRVEsS0FBSyxDQUFDRyxVQUFVLEVBQ3pDSCxLQUFLLENBQUNNLFFBQVEsRUFDZFAsY0FBYyxDQUFDYyxxQkFBcUIsRUFDcENkLGNBQWMsQ0FBQ2UsNkJBQTZCLEVBQzVDZixjQUFjLENBQUNnQiw2QkFBNkIsRUFDNUNmLEtBQUssQ0FBQ2dCLGlCQUFpQixFQUN2Qkosa0JBQW1CLENBQUM7RUFDeEI7QUFDRjtBQUVBckIsWUFBWSxDQUFDMEIsUUFBUSxDQUFFLHFCQUFxQixFQUFFcEIsbUJBQW9CLENBQUM7QUFDbkUsZUFBZUEsbUJBQW1CIn0=