// Copyright 2019-2022, University of Colorado Boulder

/**
 * The 'Intro' screen. Conforms to the contract specified in joist/Screen.
 *
 * @author Brandon Li
 */

import Property from '../../../axon/js/Property.js';
import Screen from '../../../joist/js/Screen.js';
import Tandem from '../../../tandem/js/Tandem.js';
import collisionLab from '../collisionLab.js';
import CollisionLabStrings from '../CollisionLabStrings.js';
import CollisionLabColors from '../common/CollisionLabColors.js';
import CollisionLabIconFactory from '../common/view/CollisionLabIconFactory.js';
import IntroModel from './model/IntroModel.js';
import IntroScreenView from './view/IntroScreenView.js';
class IntroScreen extends Screen {
  /**
   * @param {Tandem} tandem
   */
  constructor(tandem) {
    assert && assert(tandem instanceof Tandem, `invalid tandem: ${tandem}`);
    const createModel = () => new IntroModel(tandem.createTandem('model'));
    const createView = model => new IntroScreenView(model, tandem.createTandem('view'));
    super(createModel, createView, {
      name: CollisionLabStrings.screen.introStringProperty,
      backgroundColorProperty: new Property(CollisionLabColors.SCREEN_BACKGROUND),
      homeScreenIcon: CollisionLabIconFactory.createIntroScreenIcon(),
      tandem: tandem
    });
  }
}
collisionLab.register('IntroScreen', IntroScreen);
export default IntroScreen;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQcm9wZXJ0eSIsIlNjcmVlbiIsIlRhbmRlbSIsImNvbGxpc2lvbkxhYiIsIkNvbGxpc2lvbkxhYlN0cmluZ3MiLCJDb2xsaXNpb25MYWJDb2xvcnMiLCJDb2xsaXNpb25MYWJJY29uRmFjdG9yeSIsIkludHJvTW9kZWwiLCJJbnRyb1NjcmVlblZpZXciLCJJbnRyb1NjcmVlbiIsImNvbnN0cnVjdG9yIiwidGFuZGVtIiwiYXNzZXJ0IiwiY3JlYXRlTW9kZWwiLCJjcmVhdGVUYW5kZW0iLCJjcmVhdGVWaWV3IiwibW9kZWwiLCJuYW1lIiwic2NyZWVuIiwiaW50cm9TdHJpbmdQcm9wZXJ0eSIsImJhY2tncm91bmRDb2xvclByb3BlcnR5IiwiU0NSRUVOX0JBQ0tHUk9VTkQiLCJob21lU2NyZWVuSWNvbiIsImNyZWF0ZUludHJvU2NyZWVuSWNvbiIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiSW50cm9TY3JlZW4uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTktMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogVGhlICdJbnRybycgc2NyZWVuLiBDb25mb3JtcyB0byB0aGUgY29udHJhY3Qgc3BlY2lmaWVkIGluIGpvaXN0L1NjcmVlbi5cclxuICpcclxuICogQGF1dGhvciBCcmFuZG9uIExpXHJcbiAqL1xyXG5cclxuaW1wb3J0IFByb3BlcnR5IGZyb20gJy4uLy4uLy4uL2F4b24vanMvUHJvcGVydHkuanMnO1xyXG5pbXBvcnQgU2NyZWVuIGZyb20gJy4uLy4uLy4uL2pvaXN0L2pzL1NjcmVlbi5qcyc7XHJcbmltcG9ydCBUYW5kZW0gZnJvbSAnLi4vLi4vLi4vdGFuZGVtL2pzL1RhbmRlbS5qcyc7XHJcbmltcG9ydCBjb2xsaXNpb25MYWIgZnJvbSAnLi4vY29sbGlzaW9uTGFiLmpzJztcclxuaW1wb3J0IENvbGxpc2lvbkxhYlN0cmluZ3MgZnJvbSAnLi4vQ29sbGlzaW9uTGFiU3RyaW5ncy5qcyc7XHJcbmltcG9ydCBDb2xsaXNpb25MYWJDb2xvcnMgZnJvbSAnLi4vY29tbW9uL0NvbGxpc2lvbkxhYkNvbG9ycy5qcyc7XHJcbmltcG9ydCBDb2xsaXNpb25MYWJJY29uRmFjdG9yeSBmcm9tICcuLi9jb21tb24vdmlldy9Db2xsaXNpb25MYWJJY29uRmFjdG9yeS5qcyc7XHJcbmltcG9ydCBJbnRyb01vZGVsIGZyb20gJy4vbW9kZWwvSW50cm9Nb2RlbC5qcyc7XHJcbmltcG9ydCBJbnRyb1NjcmVlblZpZXcgZnJvbSAnLi92aWV3L0ludHJvU2NyZWVuVmlldy5qcyc7XHJcblxyXG5jbGFzcyBJbnRyb1NjcmVlbiBleHRlbmRzIFNjcmVlbiB7XHJcblxyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSB7VGFuZGVtfSB0YW5kZW1cclxuICAgKi9cclxuICBjb25zdHJ1Y3RvciggdGFuZGVtICkge1xyXG4gICAgYXNzZXJ0ICYmIGFzc2VydCggdGFuZGVtIGluc3RhbmNlb2YgVGFuZGVtLCBgaW52YWxpZCB0YW5kZW06ICR7dGFuZGVtfWAgKTtcclxuXHJcbiAgICBjb25zdCBjcmVhdGVNb2RlbCA9ICgpID0+IG5ldyBJbnRyb01vZGVsKCB0YW5kZW0uY3JlYXRlVGFuZGVtKCAnbW9kZWwnICkgKTtcclxuICAgIGNvbnN0IGNyZWF0ZVZpZXcgPSBtb2RlbCA9PiBuZXcgSW50cm9TY3JlZW5WaWV3KCBtb2RlbCwgdGFuZGVtLmNyZWF0ZVRhbmRlbSggJ3ZpZXcnICkgKTtcclxuXHJcbiAgICBzdXBlciggY3JlYXRlTW9kZWwsIGNyZWF0ZVZpZXcsIHtcclxuICAgICAgbmFtZTogQ29sbGlzaW9uTGFiU3RyaW5ncy5zY3JlZW4uaW50cm9TdHJpbmdQcm9wZXJ0eSxcclxuICAgICAgYmFja2dyb3VuZENvbG9yUHJvcGVydHk6IG5ldyBQcm9wZXJ0eSggQ29sbGlzaW9uTGFiQ29sb3JzLlNDUkVFTl9CQUNLR1JPVU5EICksXHJcbiAgICAgIGhvbWVTY3JlZW5JY29uOiBDb2xsaXNpb25MYWJJY29uRmFjdG9yeS5jcmVhdGVJbnRyb1NjcmVlbkljb24oKSxcclxuICAgICAgdGFuZGVtOiB0YW5kZW1cclxuICAgIH0gKTtcclxuICB9XHJcbn1cclxuXHJcbmNvbGxpc2lvbkxhYi5yZWdpc3RlciggJ0ludHJvU2NyZWVuJywgSW50cm9TY3JlZW4gKTtcclxuZXhwb3J0IGRlZmF1bHQgSW50cm9TY3JlZW47Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLFFBQVEsTUFBTSw4QkFBOEI7QUFDbkQsT0FBT0MsTUFBTSxNQUFNLDZCQUE2QjtBQUNoRCxPQUFPQyxNQUFNLE1BQU0sOEJBQThCO0FBQ2pELE9BQU9DLFlBQVksTUFBTSxvQkFBb0I7QUFDN0MsT0FBT0MsbUJBQW1CLE1BQU0sMkJBQTJCO0FBQzNELE9BQU9DLGtCQUFrQixNQUFNLGlDQUFpQztBQUNoRSxPQUFPQyx1QkFBdUIsTUFBTSwyQ0FBMkM7QUFDL0UsT0FBT0MsVUFBVSxNQUFNLHVCQUF1QjtBQUM5QyxPQUFPQyxlQUFlLE1BQU0sMkJBQTJCO0FBRXZELE1BQU1DLFdBQVcsU0FBU1IsTUFBTSxDQUFDO0VBRS9CO0FBQ0Y7QUFDQTtFQUNFUyxXQUFXQSxDQUFFQyxNQUFNLEVBQUc7SUFDcEJDLE1BQU0sSUFBSUEsTUFBTSxDQUFFRCxNQUFNLFlBQVlULE1BQU0sRUFBRyxtQkFBa0JTLE1BQU8sRUFBRSxDQUFDO0lBRXpFLE1BQU1FLFdBQVcsR0FBR0EsQ0FBQSxLQUFNLElBQUlOLFVBQVUsQ0FBRUksTUFBTSxDQUFDRyxZQUFZLENBQUUsT0FBUSxDQUFFLENBQUM7SUFDMUUsTUFBTUMsVUFBVSxHQUFHQyxLQUFLLElBQUksSUFBSVIsZUFBZSxDQUFFUSxLQUFLLEVBQUVMLE1BQU0sQ0FBQ0csWUFBWSxDQUFFLE1BQU8sQ0FBRSxDQUFDO0lBRXZGLEtBQUssQ0FBRUQsV0FBVyxFQUFFRSxVQUFVLEVBQUU7TUFDOUJFLElBQUksRUFBRWIsbUJBQW1CLENBQUNjLE1BQU0sQ0FBQ0MsbUJBQW1CO01BQ3BEQyx1QkFBdUIsRUFBRSxJQUFJcEIsUUFBUSxDQUFFSyxrQkFBa0IsQ0FBQ2dCLGlCQUFrQixDQUFDO01BQzdFQyxjQUFjLEVBQUVoQix1QkFBdUIsQ0FBQ2lCLHFCQUFxQixDQUFDLENBQUM7TUFDL0RaLE1BQU0sRUFBRUE7SUFDVixDQUFFLENBQUM7RUFDTDtBQUNGO0FBRUFSLFlBQVksQ0FBQ3FCLFFBQVEsQ0FBRSxhQUFhLEVBQUVmLFdBQVksQ0FBQztBQUNuRCxlQUFlQSxXQUFXIn0=