// Copyright 2013-2023, University of Colorado Boulder

/**
 * The large horizontal panel at the bottom of the screen for selecting different representations.
 *
 * @author Sam Reid (PhET Interactive Simulations)
 */

import merge from '../../../../phet-core/js/merge.js';
import { Circle, Node, Rectangle } from '../../../../scenery/js/imports.js';
import RectangularRadioButtonGroup from '../../../../sun/js/buttons/RectangularRadioButtonGroup.js';
import Panel from '../../../../sun/js/Panel.js';
import fractionComparison from '../../fractionComparison.js';

// constants
const ICON_SCALE = 0.75;
class RepresentationPanel extends Panel {
  /**
   * @param {Property.<string>} representationProperty
   * @param {Object} [options]
   */
  constructor(representationProperty, options) {
    options = merge({
      fill: '#efe8e1',
      xMargin: 10,
      yMargin: 7
    }, options);
    const content = new RectangularRadioButtonGroup(representationProperty, [{
      value: 'horizontal-bar',
      createNode: () => new Rectangle(0, 0, 50 * ICON_SCALE, 30 * ICON_SCALE, {
        fill: '#208644',
        lineWidth: 1,
        stroke: 'black'
      })
    }, {
      value: 'vertical-bar',
      createNode: () => new Rectangle(0, 0, 14 * ICON_SCALE, 50 * ICON_SCALE, {
        fill: 'red',
        lineWidth: 1,
        stroke: 'black'
      })
    }, {
      value: 'circle',
      createNode: () => new Circle(22 * ICON_SCALE, {
        fill: '#145991',
        lineWidth: 1,
        stroke: 'black'
      })
    }, {
      value: 'chocolate',
      createNode: () => new Rectangle(0, 0, 50 * ICON_SCALE, 40 * ICON_SCALE, {
        fill: '#563329',
        lineWidth: 1,
        stroke: 'black'
      })
    }, {
      value: 'different-sized-circles',
      createNode: () => new Node({
        children: [new Circle(20 * ICON_SCALE, {
          fill: '#f0d041',
          lineWidth: 1,
          stroke: 'black',
          x: 26,
          y: -26
        }), new Circle(12 * ICON_SCALE, {
          fill: '#f0d041',
          lineWidth: 1,
          stroke: 'black'
        })]
      })
    }], {
      // RectangularRadioButtonGroup options
      orientation: 'horizontal',
      spacing: 12,
      radioButtonOptions: {
        baseColor: 'white',
        cornerRadius: 10
      }
    });
    super(content, options);
  }
}
fractionComparison.register('RepresentationPanel', RepresentationPanel);
export default RepresentationPanel;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtZXJnZSIsIkNpcmNsZSIsIk5vZGUiLCJSZWN0YW5nbGUiLCJSZWN0YW5ndWxhclJhZGlvQnV0dG9uR3JvdXAiLCJQYW5lbCIsImZyYWN0aW9uQ29tcGFyaXNvbiIsIklDT05fU0NBTEUiLCJSZXByZXNlbnRhdGlvblBhbmVsIiwiY29uc3RydWN0b3IiLCJyZXByZXNlbnRhdGlvblByb3BlcnR5Iiwib3B0aW9ucyIsImZpbGwiLCJ4TWFyZ2luIiwieU1hcmdpbiIsImNvbnRlbnQiLCJ2YWx1ZSIsImNyZWF0ZU5vZGUiLCJsaW5lV2lkdGgiLCJzdHJva2UiLCJjaGlsZHJlbiIsIngiLCJ5Iiwib3JpZW50YXRpb24iLCJzcGFjaW5nIiwicmFkaW9CdXR0b25PcHRpb25zIiwiYmFzZUNvbG9yIiwiY29ybmVyUmFkaXVzIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJSZXByZXNlbnRhdGlvblBhbmVsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDEzLTIwMjMsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIFRoZSBsYXJnZSBob3Jpem9udGFsIHBhbmVsIGF0IHRoZSBib3R0b20gb2YgdGhlIHNjcmVlbiBmb3Igc2VsZWN0aW5nIGRpZmZlcmVudCByZXByZXNlbnRhdGlvbnMuXHJcbiAqXHJcbiAqIEBhdXRob3IgU2FtIFJlaWQgKFBoRVQgSW50ZXJhY3RpdmUgU2ltdWxhdGlvbnMpXHJcbiAqL1xyXG5cclxuaW1wb3J0IG1lcmdlIGZyb20gJy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy9tZXJnZS5qcyc7XHJcbmltcG9ydCB7IENpcmNsZSwgTm9kZSwgUmVjdGFuZ2xlIH0gZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IFJlY3Rhbmd1bGFyUmFkaW9CdXR0b25Hcm91cCBmcm9tICcuLi8uLi8uLi8uLi9zdW4vanMvYnV0dG9ucy9SZWN0YW5ndWxhclJhZGlvQnV0dG9uR3JvdXAuanMnO1xyXG5pbXBvcnQgUGFuZWwgZnJvbSAnLi4vLi4vLi4vLi4vc3VuL2pzL1BhbmVsLmpzJztcclxuaW1wb3J0IGZyYWN0aW9uQ29tcGFyaXNvbiBmcm9tICcuLi8uLi9mcmFjdGlvbkNvbXBhcmlzb24uanMnO1xyXG5cclxuLy8gY29uc3RhbnRzXHJcbmNvbnN0IElDT05fU0NBTEUgPSAwLjc1O1xyXG5cclxuY2xhc3MgUmVwcmVzZW50YXRpb25QYW5lbCBleHRlbmRzIFBhbmVsIHtcclxuXHJcbiAgLyoqXHJcbiAgICogQHBhcmFtIHtQcm9wZXJ0eS48c3RyaW5nPn0gcmVwcmVzZW50YXRpb25Qcm9wZXJ0eVxyXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc11cclxuICAgKi9cclxuICBjb25zdHJ1Y3RvciggcmVwcmVzZW50YXRpb25Qcm9wZXJ0eSwgb3B0aW9ucyApIHtcclxuXHJcbiAgICBvcHRpb25zID0gbWVyZ2UoIHtcclxuICAgICAgZmlsbDogJyNlZmU4ZTEnLFxyXG4gICAgICB4TWFyZ2luOiAxMCxcclxuICAgICAgeU1hcmdpbjogN1xyXG4gICAgfSwgb3B0aW9ucyApO1xyXG5cclxuICAgIGNvbnN0IGNvbnRlbnQgPSBuZXcgUmVjdGFuZ3VsYXJSYWRpb0J1dHRvbkdyb3VwKCByZXByZXNlbnRhdGlvblByb3BlcnR5LCBbXHJcbiAgICAgIHtcclxuICAgICAgICB2YWx1ZTogJ2hvcml6b250YWwtYmFyJyxcclxuICAgICAgICBjcmVhdGVOb2RlOiAoKSA9PiBuZXcgUmVjdGFuZ2xlKCAwLCAwLCA1MCAqIElDT05fU0NBTEUsIDMwICogSUNPTl9TQ0FMRSwgeyBmaWxsOiAnIzIwODY0NCcsIGxpbmVXaWR0aDogMSwgc3Ryb2tlOiAnYmxhY2snIH0gKVxyXG4gICAgICB9LFxyXG4gICAgICB7XHJcbiAgICAgICAgdmFsdWU6ICd2ZXJ0aWNhbC1iYXInLFxyXG4gICAgICAgIGNyZWF0ZU5vZGU6ICgpID0+IG5ldyBSZWN0YW5nbGUoIDAsIDAsIDE0ICogSUNPTl9TQ0FMRSwgNTAgKiBJQ09OX1NDQUxFLCB7IGZpbGw6ICdyZWQnLCBsaW5lV2lkdGg6IDEsIHN0cm9rZTogJ2JsYWNrJyB9IClcclxuICAgICAgfSxcclxuICAgICAge1xyXG4gICAgICAgIHZhbHVlOiAnY2lyY2xlJyxcclxuICAgICAgICBjcmVhdGVOb2RlOiAoKSA9PiBuZXcgQ2lyY2xlKCAyMiAqIElDT05fU0NBTEUsIHsgZmlsbDogJyMxNDU5OTEnLCBsaW5lV2lkdGg6IDEsIHN0cm9rZTogJ2JsYWNrJyB9IClcclxuICAgICAgfSxcclxuICAgICAge1xyXG4gICAgICAgIHZhbHVlOiAnY2hvY29sYXRlJyxcclxuICAgICAgICBjcmVhdGVOb2RlOiAoKSA9PiBuZXcgUmVjdGFuZ2xlKCAwLCAwLCA1MCAqIElDT05fU0NBTEUsIDQwICogSUNPTl9TQ0FMRSwgeyBmaWxsOiAnIzU2MzMyOScsIGxpbmVXaWR0aDogMSwgc3Ryb2tlOiAnYmxhY2snIH0gKVxyXG4gICAgICB9LFxyXG4gICAgICB7XHJcbiAgICAgICAgdmFsdWU6ICdkaWZmZXJlbnQtc2l6ZWQtY2lyY2xlcycsXHJcbiAgICAgICAgY3JlYXRlTm9kZTogKCkgPT4gbmV3IE5vZGUoIHtcclxuICAgICAgICAgIGNoaWxkcmVuOiBbXHJcbiAgICAgICAgICAgIG5ldyBDaXJjbGUoIDIwICogSUNPTl9TQ0FMRSwgeyBmaWxsOiAnI2YwZDA0MScsIGxpbmVXaWR0aDogMSwgc3Ryb2tlOiAnYmxhY2snLCB4OiAyNiwgeTogLTI2IH0gKSxcclxuICAgICAgICAgICAgbmV3IENpcmNsZSggMTIgKiBJQ09OX1NDQUxFLCB7IGZpbGw6ICcjZjBkMDQxJywgbGluZVdpZHRoOiAxLCBzdHJva2U6ICdibGFjaycgfSApXHJcbiAgICAgICAgICBdXHJcbiAgICAgICAgfSApXHJcbiAgICAgIH1cclxuICAgIF0sIHtcclxuICAgICAgLy8gUmVjdGFuZ3VsYXJSYWRpb0J1dHRvbkdyb3VwIG9wdGlvbnNcclxuICAgICAgb3JpZW50YXRpb246ICdob3Jpem9udGFsJyxcclxuICAgICAgc3BhY2luZzogMTIsXHJcbiAgICAgIHJhZGlvQnV0dG9uT3B0aW9uczoge1xyXG4gICAgICAgIGJhc2VDb2xvcjogJ3doaXRlJyxcclxuICAgICAgICBjb3JuZXJSYWRpdXM6IDEwXHJcbiAgICAgIH1cclxuICAgIH0gKTtcclxuXHJcbiAgICBzdXBlciggY29udGVudCwgb3B0aW9ucyApO1xyXG4gIH1cclxufVxyXG5cclxuZnJhY3Rpb25Db21wYXJpc29uLnJlZ2lzdGVyKCAnUmVwcmVzZW50YXRpb25QYW5lbCcsIFJlcHJlc2VudGF0aW9uUGFuZWwgKTtcclxuZXhwb3J0IGRlZmF1bHQgUmVwcmVzZW50YXRpb25QYW5lbDsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsS0FBSyxNQUFNLG1DQUFtQztBQUNyRCxTQUFTQyxNQUFNLEVBQUVDLElBQUksRUFBRUMsU0FBUyxRQUFRLG1DQUFtQztBQUMzRSxPQUFPQywyQkFBMkIsTUFBTSwyREFBMkQ7QUFDbkcsT0FBT0MsS0FBSyxNQUFNLDZCQUE2QjtBQUMvQyxPQUFPQyxrQkFBa0IsTUFBTSw2QkFBNkI7O0FBRTVEO0FBQ0EsTUFBTUMsVUFBVSxHQUFHLElBQUk7QUFFdkIsTUFBTUMsbUJBQW1CLFNBQVNILEtBQUssQ0FBQztFQUV0QztBQUNGO0FBQ0E7QUFDQTtFQUNFSSxXQUFXQSxDQUFFQyxzQkFBc0IsRUFBRUMsT0FBTyxFQUFHO0lBRTdDQSxPQUFPLEdBQUdYLEtBQUssQ0FBRTtNQUNmWSxJQUFJLEVBQUUsU0FBUztNQUNmQyxPQUFPLEVBQUUsRUFBRTtNQUNYQyxPQUFPLEVBQUU7SUFDWCxDQUFDLEVBQUVILE9BQVEsQ0FBQztJQUVaLE1BQU1JLE9BQU8sR0FBRyxJQUFJWCwyQkFBMkIsQ0FBRU0sc0JBQXNCLEVBQUUsQ0FDdkU7TUFDRU0sS0FBSyxFQUFFLGdCQUFnQjtNQUN2QkMsVUFBVSxFQUFFQSxDQUFBLEtBQU0sSUFBSWQsU0FBUyxDQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxHQUFHSSxVQUFVLEVBQUUsRUFBRSxHQUFHQSxVQUFVLEVBQUU7UUFBRUssSUFBSSxFQUFFLFNBQVM7UUFBRU0sU0FBUyxFQUFFLENBQUM7UUFBRUMsTUFBTSxFQUFFO01BQVEsQ0FBRTtJQUM5SCxDQUFDLEVBQ0Q7TUFDRUgsS0FBSyxFQUFFLGNBQWM7TUFDckJDLFVBQVUsRUFBRUEsQ0FBQSxLQUFNLElBQUlkLFNBQVMsQ0FBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsR0FBR0ksVUFBVSxFQUFFLEVBQUUsR0FBR0EsVUFBVSxFQUFFO1FBQUVLLElBQUksRUFBRSxLQUFLO1FBQUVNLFNBQVMsRUFBRSxDQUFDO1FBQUVDLE1BQU0sRUFBRTtNQUFRLENBQUU7SUFDMUgsQ0FBQyxFQUNEO01BQ0VILEtBQUssRUFBRSxRQUFRO01BQ2ZDLFVBQVUsRUFBRUEsQ0FBQSxLQUFNLElBQUloQixNQUFNLENBQUUsRUFBRSxHQUFHTSxVQUFVLEVBQUU7UUFBRUssSUFBSSxFQUFFLFNBQVM7UUFBRU0sU0FBUyxFQUFFLENBQUM7UUFBRUMsTUFBTSxFQUFFO01BQVEsQ0FBRTtJQUNwRyxDQUFDLEVBQ0Q7TUFDRUgsS0FBSyxFQUFFLFdBQVc7TUFDbEJDLFVBQVUsRUFBRUEsQ0FBQSxLQUFNLElBQUlkLFNBQVMsQ0FBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsR0FBR0ksVUFBVSxFQUFFLEVBQUUsR0FBR0EsVUFBVSxFQUFFO1FBQUVLLElBQUksRUFBRSxTQUFTO1FBQUVNLFNBQVMsRUFBRSxDQUFDO1FBQUVDLE1BQU0sRUFBRTtNQUFRLENBQUU7SUFDOUgsQ0FBQyxFQUNEO01BQ0VILEtBQUssRUFBRSx5QkFBeUI7TUFDaENDLFVBQVUsRUFBRUEsQ0FBQSxLQUFNLElBQUlmLElBQUksQ0FBRTtRQUMxQmtCLFFBQVEsRUFBRSxDQUNSLElBQUluQixNQUFNLENBQUUsRUFBRSxHQUFHTSxVQUFVLEVBQUU7VUFBRUssSUFBSSxFQUFFLFNBQVM7VUFBRU0sU0FBUyxFQUFFLENBQUM7VUFBRUMsTUFBTSxFQUFFLE9BQU87VUFBRUUsQ0FBQyxFQUFFLEVBQUU7VUFBRUMsQ0FBQyxFQUFFLENBQUM7UUFBRyxDQUFFLENBQUMsRUFDaEcsSUFBSXJCLE1BQU0sQ0FBRSxFQUFFLEdBQUdNLFVBQVUsRUFBRTtVQUFFSyxJQUFJLEVBQUUsU0FBUztVQUFFTSxTQUFTLEVBQUUsQ0FBQztVQUFFQyxNQUFNLEVBQUU7UUFBUSxDQUFFLENBQUM7TUFFckYsQ0FBRTtJQUNKLENBQUMsQ0FDRixFQUFFO01BQ0Q7TUFDQUksV0FBVyxFQUFFLFlBQVk7TUFDekJDLE9BQU8sRUFBRSxFQUFFO01BQ1hDLGtCQUFrQixFQUFFO1FBQ2xCQyxTQUFTLEVBQUUsT0FBTztRQUNsQkMsWUFBWSxFQUFFO01BQ2hCO0lBQ0YsQ0FBRSxDQUFDO0lBRUgsS0FBSyxDQUFFWixPQUFPLEVBQUVKLE9BQVEsQ0FBQztFQUMzQjtBQUNGO0FBRUFMLGtCQUFrQixDQUFDc0IsUUFBUSxDQUFFLHFCQUFxQixFQUFFcEIsbUJBQW9CLENBQUM7QUFDekUsZUFBZUEsbUJBQW1CIn0=