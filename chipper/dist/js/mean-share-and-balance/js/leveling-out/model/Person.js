// Copyright 2022-2023, University of Colorado Boulder

/**
 * The model representing the container for chocolates in the bottom representation.
 * Tracks the position of a person and their plate, as well as how many chocolate bars they have brought
 *
 * @author Marla Schulz (PhET Interactive Simulations)
 *
 */

import BooleanProperty from '../../../../axon/js/BooleanProperty.js';
import NumberProperty from '../../../../axon/js/NumberProperty.js';
import Range from '../../../../dot/js/Range.js';
import optionize from '../../../../phet-core/js/optionize.js';
import meanShareAndBalance from '../../meanShareAndBalance.js';
// REVIEW: Perhaps rename this to TablePlate?  Since it is more about the stack itself?  This relates to the
// questions about how to https://github.com/phetsims/mean-share-and-balance/issues/119
export default class Person {
  // Whether the cup is enabled in view and data calculations

  // The x and y positions for the person in the view. This specifies relative spacing between the people, and
  // another container centers the group.
  // The amount of chocolate bars the person brought
  // the person's index - 0-indexed
  constructor(providedOptions) {
    const options = optionize()({}, providedOptions);
    this.isActiveProperty = new BooleanProperty(options.isActive, {
      // phet-io
      tandem: options.tandem.createTandem('isActiveProperty'),
      // Takes its value from LevelingOutModel.numberOfPeopleProperty, so cannot be independently adjusted
      phetioReadOnly: true
    });
    this.position = options.position;
    this.chocolateNumberProperty = new NumberProperty(options.isActive ? 1 : 0, {
      range: new Range(0, 10),
      // phet-io
      tandem: options.tandem.createTandem('chocolateNumberProperty')
    });
    this.linePlacement = options.linePlacement;

    // When the person becomes inactive, delete their chocolates. When a person becomes active, they arrive with 1 chocolate
    this.isActiveProperty.lazyLink(isActive => this.chocolateNumberProperty.set(isActive ? 1 : 0));
  }
  reset() {
    this.isActiveProperty.reset();
    this.chocolateNumberProperty.reset();

    // linePlacement never changes and hence doesn't need to be reset
    // position never changes
  }
}

meanShareAndBalance.register('Person', Person);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJCb29sZWFuUHJvcGVydHkiLCJOdW1iZXJQcm9wZXJ0eSIsIlJhbmdlIiwib3B0aW9uaXplIiwibWVhblNoYXJlQW5kQmFsYW5jZSIsIlBlcnNvbiIsImNvbnN0cnVjdG9yIiwicHJvdmlkZWRPcHRpb25zIiwib3B0aW9ucyIsImlzQWN0aXZlUHJvcGVydHkiLCJpc0FjdGl2ZSIsInRhbmRlbSIsImNyZWF0ZVRhbmRlbSIsInBoZXRpb1JlYWRPbmx5IiwicG9zaXRpb24iLCJjaG9jb2xhdGVOdW1iZXJQcm9wZXJ0eSIsInJhbmdlIiwibGluZVBsYWNlbWVudCIsImxhenlMaW5rIiwic2V0IiwicmVzZXQiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIlBlcnNvbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMi0yMDIzLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBUaGUgbW9kZWwgcmVwcmVzZW50aW5nIHRoZSBjb250YWluZXIgZm9yIGNob2NvbGF0ZXMgaW4gdGhlIGJvdHRvbSByZXByZXNlbnRhdGlvbi5cclxuICogVHJhY2tzIHRoZSBwb3NpdGlvbiBvZiBhIHBlcnNvbiBhbmQgdGhlaXIgcGxhdGUsIGFzIHdlbGwgYXMgaG93IG1hbnkgY2hvY29sYXRlIGJhcnMgdGhleSBoYXZlIGJyb3VnaHRcclxuICpcclxuICogQGF1dGhvciBNYXJsYSBTY2h1bHogKFBoRVQgSW50ZXJhY3RpdmUgU2ltdWxhdGlvbnMpXHJcbiAqXHJcbiAqL1xyXG5cclxuaW1wb3J0IEJvb2xlYW5Qcm9wZXJ0eSBmcm9tICcuLi8uLi8uLi8uLi9heG9uL2pzL0Jvb2xlYW5Qcm9wZXJ0eS5qcyc7XHJcbmltcG9ydCBOdW1iZXJQcm9wZXJ0eSBmcm9tICcuLi8uLi8uLi8uLi9heG9uL2pzL051bWJlclByb3BlcnR5LmpzJztcclxuaW1wb3J0IFByb3BlcnR5IGZyb20gJy4uLy4uLy4uLy4uL2F4b24vanMvUHJvcGVydHkuanMnO1xyXG5pbXBvcnQgUmFuZ2UgZnJvbSAnLi4vLi4vLi4vLi4vZG90L2pzL1JhbmdlLmpzJztcclxuaW1wb3J0IFZlY3RvcjIgZnJvbSAnLi4vLi4vLi4vLi4vZG90L2pzL1ZlY3RvcjIuanMnO1xyXG5pbXBvcnQgb3B0aW9uaXplIGZyb20gJy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy9vcHRpb25pemUuanMnO1xyXG5pbXBvcnQgUGlja1JlcXVpcmVkIGZyb20gJy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy90eXBlcy9QaWNrUmVxdWlyZWQuanMnO1xyXG5pbXBvcnQgUGhldGlvT2JqZWN0LCB7IFBoZXRpb09iamVjdE9wdGlvbnMgfSBmcm9tICcuLi8uLi8uLi8uLi90YW5kZW0vanMvUGhldGlvT2JqZWN0LmpzJztcclxuaW1wb3J0IG1lYW5TaGFyZUFuZEJhbGFuY2UgZnJvbSAnLi4vLi4vbWVhblNoYXJlQW5kQmFsYW5jZS5qcyc7XHJcblxyXG50eXBlIFNlbGZPcHRpb25zID0ge1xyXG4gIGlzQWN0aXZlOiBib29sZWFuO1xyXG4gIHBvc2l0aW9uOiBWZWN0b3IyO1xyXG4gIGxpbmVQbGFjZW1lbnQ6IG51bWJlcjtcclxufTtcclxuXHJcbnR5cGUgUGVyc29uT3B0aW9ucyA9IFNlbGZPcHRpb25zICYgUGlja1JlcXVpcmVkPFBoZXRpb09iamVjdCwgJ3RhbmRlbSc+O1xyXG5cclxuLy8gUkVWSUVXOiBQZXJoYXBzIHJlbmFtZSB0aGlzIHRvIFRhYmxlUGxhdGU/ICBTaW5jZSBpdCBpcyBtb3JlIGFib3V0IHRoZSBzdGFjayBpdHNlbGY/ICBUaGlzIHJlbGF0ZXMgdG8gdGhlXHJcbi8vIHF1ZXN0aW9ucyBhYm91dCBob3cgdG8gaHR0cHM6Ly9naXRodWIuY29tL3BoZXRzaW1zL21lYW4tc2hhcmUtYW5kLWJhbGFuY2UvaXNzdWVzLzExOVxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQZXJzb24ge1xyXG5cclxuICAvLyBXaGV0aGVyIHRoZSBjdXAgaXMgZW5hYmxlZCBpbiB2aWV3IGFuZCBkYXRhIGNhbGN1bGF0aW9uc1xyXG4gIHB1YmxpYyByZWFkb25seSBpc0FjdGl2ZVByb3BlcnR5OiBQcm9wZXJ0eTxib29sZWFuPjtcclxuXHJcbiAgLy8gVGhlIHggYW5kIHkgcG9zaXRpb25zIGZvciB0aGUgcGVyc29uIGluIHRoZSB2aWV3LiBUaGlzIHNwZWNpZmllcyByZWxhdGl2ZSBzcGFjaW5nIGJldHdlZW4gdGhlIHBlb3BsZSwgYW5kXHJcbiAgLy8gYW5vdGhlciBjb250YWluZXIgY2VudGVycyB0aGUgZ3JvdXAuXHJcbiAgcHVibGljIHJlYWRvbmx5IHBvc2l0aW9uOiBWZWN0b3IyO1xyXG5cclxuICAvLyBUaGUgYW1vdW50IG9mIGNob2NvbGF0ZSBiYXJzIHRoZSBwZXJzb24gYnJvdWdodFxyXG4gIHB1YmxpYyByZWFkb25seSBjaG9jb2xhdGVOdW1iZXJQcm9wZXJ0eTogUHJvcGVydHk8bnVtYmVyPjtcclxuXHJcbiAgLy8gdGhlIHBlcnNvbidzIGluZGV4IC0gMC1pbmRleGVkXHJcbiAgcHVibGljIHJlYWRvbmx5IGxpbmVQbGFjZW1lbnQ6IG51bWJlcjtcclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKCBwcm92aWRlZE9wdGlvbnM/OiBQZXJzb25PcHRpb25zICkge1xyXG5cclxuICAgIGNvbnN0IG9wdGlvbnMgPSBvcHRpb25pemU8UGVyc29uT3B0aW9ucywgU2VsZk9wdGlvbnMsIFBoZXRpb09iamVjdE9wdGlvbnM+KCkoIHt9LCBwcm92aWRlZE9wdGlvbnMgKTtcclxuXHJcbiAgICB0aGlzLmlzQWN0aXZlUHJvcGVydHkgPSBuZXcgQm9vbGVhblByb3BlcnR5KCBvcHRpb25zLmlzQWN0aXZlLCB7XHJcblxyXG4gICAgICAvLyBwaGV0LWlvXHJcbiAgICAgIHRhbmRlbTogb3B0aW9ucy50YW5kZW0uY3JlYXRlVGFuZGVtKCAnaXNBY3RpdmVQcm9wZXJ0eScgKSxcclxuXHJcbiAgICAgIC8vIFRha2VzIGl0cyB2YWx1ZSBmcm9tIExldmVsaW5nT3V0TW9kZWwubnVtYmVyT2ZQZW9wbGVQcm9wZXJ0eSwgc28gY2Fubm90IGJlIGluZGVwZW5kZW50bHkgYWRqdXN0ZWRcclxuICAgICAgcGhldGlvUmVhZE9ubHk6IHRydWVcclxuICAgIH0gKTtcclxuICAgIHRoaXMucG9zaXRpb24gPSBvcHRpb25zLnBvc2l0aW9uO1xyXG5cclxuICAgIHRoaXMuY2hvY29sYXRlTnVtYmVyUHJvcGVydHkgPSBuZXcgTnVtYmVyUHJvcGVydHkoIG9wdGlvbnMuaXNBY3RpdmUgPyAxIDogMCwge1xyXG5cclxuICAgICAgcmFuZ2U6IG5ldyBSYW5nZSggMCwgMTAgKSxcclxuXHJcbiAgICAgIC8vIHBoZXQtaW9cclxuICAgICAgdGFuZGVtOiBvcHRpb25zLnRhbmRlbS5jcmVhdGVUYW5kZW0oICdjaG9jb2xhdGVOdW1iZXJQcm9wZXJ0eScgKVxyXG4gICAgfSApO1xyXG5cclxuICAgIHRoaXMubGluZVBsYWNlbWVudCA9IG9wdGlvbnMubGluZVBsYWNlbWVudDtcclxuXHJcbiAgICAvLyBXaGVuIHRoZSBwZXJzb24gYmVjb21lcyBpbmFjdGl2ZSwgZGVsZXRlIHRoZWlyIGNob2NvbGF0ZXMuIFdoZW4gYSBwZXJzb24gYmVjb21lcyBhY3RpdmUsIHRoZXkgYXJyaXZlIHdpdGggMSBjaG9jb2xhdGVcclxuICAgIHRoaXMuaXNBY3RpdmVQcm9wZXJ0eS5sYXp5TGluayggaXNBY3RpdmUgPT4gdGhpcy5jaG9jb2xhdGVOdW1iZXJQcm9wZXJ0eS5zZXQoIGlzQWN0aXZlID8gMSA6IDAgKSApO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIHJlc2V0KCk6IHZvaWQge1xyXG4gICAgdGhpcy5pc0FjdGl2ZVByb3BlcnR5LnJlc2V0KCk7XHJcbiAgICB0aGlzLmNob2NvbGF0ZU51bWJlclByb3BlcnR5LnJlc2V0KCk7XHJcblxyXG4gICAgLy8gbGluZVBsYWNlbWVudCBuZXZlciBjaGFuZ2VzIGFuZCBoZW5jZSBkb2Vzbid0IG5lZWQgdG8gYmUgcmVzZXRcclxuICAgIC8vIHBvc2l0aW9uIG5ldmVyIGNoYW5nZXNcclxuICB9XHJcbn1cclxuXHJcbm1lYW5TaGFyZUFuZEJhbGFuY2UucmVnaXN0ZXIoICdQZXJzb24nLCBQZXJzb24gKTsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLGVBQWUsTUFBTSx3Q0FBd0M7QUFDcEUsT0FBT0MsY0FBYyxNQUFNLHVDQUF1QztBQUVsRSxPQUFPQyxLQUFLLE1BQU0sNkJBQTZCO0FBRS9DLE9BQU9DLFNBQVMsTUFBTSx1Q0FBdUM7QUFHN0QsT0FBT0MsbUJBQW1CLE1BQU0sOEJBQThCO0FBVTlEO0FBQ0E7QUFDQSxlQUFlLE1BQU1DLE1BQU0sQ0FBQztFQUUxQjs7RUFHQTtFQUNBO0VBR0E7RUFHQTtFQUdPQyxXQUFXQSxDQUFFQyxlQUErQixFQUFHO0lBRXBELE1BQU1DLE9BQU8sR0FBR0wsU0FBUyxDQUFrRCxDQUFDLENBQUUsQ0FBQyxDQUFDLEVBQUVJLGVBQWdCLENBQUM7SUFFbkcsSUFBSSxDQUFDRSxnQkFBZ0IsR0FBRyxJQUFJVCxlQUFlLENBQUVRLE9BQU8sQ0FBQ0UsUUFBUSxFQUFFO01BRTdEO01BQ0FDLE1BQU0sRUFBRUgsT0FBTyxDQUFDRyxNQUFNLENBQUNDLFlBQVksQ0FBRSxrQkFBbUIsQ0FBQztNQUV6RDtNQUNBQyxjQUFjLEVBQUU7SUFDbEIsQ0FBRSxDQUFDO0lBQ0gsSUFBSSxDQUFDQyxRQUFRLEdBQUdOLE9BQU8sQ0FBQ00sUUFBUTtJQUVoQyxJQUFJLENBQUNDLHVCQUF1QixHQUFHLElBQUlkLGNBQWMsQ0FBRU8sT0FBTyxDQUFDRSxRQUFRLEdBQUcsQ0FBQyxHQUFHLENBQUMsRUFBRTtNQUUzRU0sS0FBSyxFQUFFLElBQUlkLEtBQUssQ0FBRSxDQUFDLEVBQUUsRUFBRyxDQUFDO01BRXpCO01BQ0FTLE1BQU0sRUFBRUgsT0FBTyxDQUFDRyxNQUFNLENBQUNDLFlBQVksQ0FBRSx5QkFBMEI7SUFDakUsQ0FBRSxDQUFDO0lBRUgsSUFBSSxDQUFDSyxhQUFhLEdBQUdULE9BQU8sQ0FBQ1MsYUFBYTs7SUFFMUM7SUFDQSxJQUFJLENBQUNSLGdCQUFnQixDQUFDUyxRQUFRLENBQUVSLFFBQVEsSUFBSSxJQUFJLENBQUNLLHVCQUF1QixDQUFDSSxHQUFHLENBQUVULFFBQVEsR0FBRyxDQUFDLEdBQUcsQ0FBRSxDQUFFLENBQUM7RUFDcEc7RUFFT1UsS0FBS0EsQ0FBQSxFQUFTO0lBQ25CLElBQUksQ0FBQ1gsZ0JBQWdCLENBQUNXLEtBQUssQ0FBQyxDQUFDO0lBQzdCLElBQUksQ0FBQ0wsdUJBQXVCLENBQUNLLEtBQUssQ0FBQyxDQUFDOztJQUVwQztJQUNBO0VBQ0Y7QUFDRjs7QUFFQWhCLG1CQUFtQixDQUFDaUIsUUFBUSxDQUFFLFFBQVEsRUFBRWhCLE1BQU8sQ0FBQyJ9