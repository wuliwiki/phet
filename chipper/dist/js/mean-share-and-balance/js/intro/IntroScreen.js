// Copyright 2022, University of Colorado Boulder

/**
 * Instantiates Intro Model and Screen View.
 *
 * @author Marla Schulz (PhET Interactive Simulations)
 * @author Sam Reid (PhET Interactive Simulations)
 */

import optionize from '../../../phet-core/js/optionize.js';
import IntroModel from './model/IntroModel.js';
import IntroScreenView from './view/IntroScreenView.js';
import MeanShareAndBalanceColors from '../common/MeanShareAndBalanceColors.js';
import meanShareAndBalance from '../meanShareAndBalance.js';
import MeanShareAndBalanceStrings from '../MeanShareAndBalanceStrings.js';
import Screen from '../../../joist/js/Screen.js';
import SliderControlsAndBasicActionsKeyboardHelpContent from '../../../scenery-phet/js/keyboard/help/SliderControlsAndBasicActionsKeyboardHelpContent.js';
export default class IntroScreen extends Screen {
  constructor(providedOptions) {
    const options = optionize()({
      name: MeanShareAndBalanceStrings.screen.introStringProperty,
      backgroundColorProperty: MeanShareAndBalanceColors.screenBackgroundColorProperty,
      createKeyboardHelpNode: () => new SliderControlsAndBasicActionsKeyboardHelpContent()
    }, providedOptions);
    super(() => new IntroModel({
      tandem: options.tandem.createTandem('model')
    }), model => new IntroScreenView(model, {
      tandem: options.tandem.createTandem('view')
    }), options);
  }
}
meanShareAndBalance.register('IntroScreen', IntroScreen);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJvcHRpb25pemUiLCJJbnRyb01vZGVsIiwiSW50cm9TY3JlZW5WaWV3IiwiTWVhblNoYXJlQW5kQmFsYW5jZUNvbG9ycyIsIm1lYW5TaGFyZUFuZEJhbGFuY2UiLCJNZWFuU2hhcmVBbmRCYWxhbmNlU3RyaW5ncyIsIlNjcmVlbiIsIlNsaWRlckNvbnRyb2xzQW5kQmFzaWNBY3Rpb25zS2V5Ym9hcmRIZWxwQ29udGVudCIsIkludHJvU2NyZWVuIiwiY29uc3RydWN0b3IiLCJwcm92aWRlZE9wdGlvbnMiLCJvcHRpb25zIiwibmFtZSIsInNjcmVlbiIsImludHJvU3RyaW5nUHJvcGVydHkiLCJiYWNrZ3JvdW5kQ29sb3JQcm9wZXJ0eSIsInNjcmVlbkJhY2tncm91bmRDb2xvclByb3BlcnR5IiwiY3JlYXRlS2V5Ym9hcmRIZWxwTm9kZSIsInRhbmRlbSIsImNyZWF0ZVRhbmRlbSIsIm1vZGVsIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJJbnRyb1NjcmVlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogSW5zdGFudGlhdGVzIEludHJvIE1vZGVsIGFuZCBTY3JlZW4gVmlldy5cclxuICpcclxuICogQGF1dGhvciBNYXJsYSBTY2h1bHogKFBoRVQgSW50ZXJhY3RpdmUgU2ltdWxhdGlvbnMpXHJcbiAqIEBhdXRob3IgU2FtIFJlaWQgKFBoRVQgSW50ZXJhY3RpdmUgU2ltdWxhdGlvbnMpXHJcbiAqL1xyXG5cclxuaW1wb3J0IG9wdGlvbml6ZSwgeyBFbXB0eVNlbGZPcHRpb25zIH0gZnJvbSAnLi4vLi4vLi4vcGhldC1jb3JlL2pzL29wdGlvbml6ZS5qcyc7XHJcbmltcG9ydCBQaWNrUmVxdWlyZWQgZnJvbSAnLi4vLi4vLi4vcGhldC1jb3JlL2pzL3R5cGVzL1BpY2tSZXF1aXJlZC5qcyc7XHJcbmltcG9ydCBJbnRyb01vZGVsIGZyb20gJy4vbW9kZWwvSW50cm9Nb2RlbC5qcyc7XHJcbmltcG9ydCBJbnRyb1NjcmVlblZpZXcgZnJvbSAnLi92aWV3L0ludHJvU2NyZWVuVmlldy5qcyc7XHJcbmltcG9ydCBNZWFuU2hhcmVBbmRCYWxhbmNlQ29sb3JzIGZyb20gJy4uL2NvbW1vbi9NZWFuU2hhcmVBbmRCYWxhbmNlQ29sb3JzLmpzJztcclxuaW1wb3J0IG1lYW5TaGFyZUFuZEJhbGFuY2UgZnJvbSAnLi4vbWVhblNoYXJlQW5kQmFsYW5jZS5qcyc7XHJcbmltcG9ydCBNZWFuU2hhcmVBbmRCYWxhbmNlU3RyaW5ncyBmcm9tICcuLi9NZWFuU2hhcmVBbmRCYWxhbmNlU3RyaW5ncy5qcyc7XHJcbmltcG9ydCBTY3JlZW4sIHsgU2NyZWVuT3B0aW9ucyB9IGZyb20gJy4uLy4uLy4uL2pvaXN0L2pzL1NjcmVlbi5qcyc7XHJcbmltcG9ydCBTbGlkZXJDb250cm9sc0FuZEJhc2ljQWN0aW9uc0tleWJvYXJkSGVscENvbnRlbnQgZnJvbSAnLi4vLi4vLi4vc2NlbmVyeS1waGV0L2pzL2tleWJvYXJkL2hlbHAvU2xpZGVyQ29udHJvbHNBbmRCYXNpY0FjdGlvbnNLZXlib2FyZEhlbHBDb250ZW50LmpzJztcclxuXHJcbnR5cGUgU2VsZk9wdGlvbnMgPSBFbXB0eVNlbGZPcHRpb25zO1xyXG5cclxudHlwZSBJbnRyb1NjcmVlbk9wdGlvbnMgPSBTZWxmT3B0aW9ucyAmIFBpY2tSZXF1aXJlZDxTY3JlZW5PcHRpb25zLCAndGFuZGVtJz47XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBJbnRyb1NjcmVlbiBleHRlbmRzIFNjcmVlbjxJbnRyb01vZGVsLCBJbnRyb1NjcmVlblZpZXc+IHtcclxuICBwdWJsaWMgY29uc3RydWN0b3IoIHByb3ZpZGVkT3B0aW9uczogSW50cm9TY3JlZW5PcHRpb25zICkge1xyXG4gICAgY29uc3Qgb3B0aW9ucyA9IG9wdGlvbml6ZTxJbnRyb1NjcmVlbk9wdGlvbnMsIFNlbGZPcHRpb25zLCBTY3JlZW5PcHRpb25zPigpKCB7XHJcbiAgICAgIG5hbWU6IE1lYW5TaGFyZUFuZEJhbGFuY2VTdHJpbmdzLnNjcmVlbi5pbnRyb1N0cmluZ1Byb3BlcnR5LFxyXG4gICAgICBiYWNrZ3JvdW5kQ29sb3JQcm9wZXJ0eTogTWVhblNoYXJlQW5kQmFsYW5jZUNvbG9ycy5zY3JlZW5CYWNrZ3JvdW5kQ29sb3JQcm9wZXJ0eSxcclxuICAgICAgY3JlYXRlS2V5Ym9hcmRIZWxwTm9kZTogKCkgPT4gbmV3IFNsaWRlckNvbnRyb2xzQW5kQmFzaWNBY3Rpb25zS2V5Ym9hcmRIZWxwQ29udGVudCgpXHJcbiAgICB9LCBwcm92aWRlZE9wdGlvbnMgKTtcclxuICAgIHN1cGVyKFxyXG4gICAgICAoKSA9PiBuZXcgSW50cm9Nb2RlbCggeyB0YW5kZW06IG9wdGlvbnMudGFuZGVtLmNyZWF0ZVRhbmRlbSggJ21vZGVsJyApIH0gKSxcclxuICAgICAgbW9kZWwgPT4gbmV3IEludHJvU2NyZWVuVmlldyggbW9kZWwsIHsgdGFuZGVtOiBvcHRpb25zLnRhbmRlbS5jcmVhdGVUYW5kZW0oICd2aWV3JyApIH0gKSxcclxuICAgICAgb3B0aW9uc1xyXG4gICAgKTtcclxuICB9XHJcbn1cclxuXHJcbm1lYW5TaGFyZUFuZEJhbGFuY2UucmVnaXN0ZXIoICdJbnRyb1NjcmVlbicsIEludHJvU2NyZWVuICk7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsU0FBUyxNQUE0QixvQ0FBb0M7QUFFaEYsT0FBT0MsVUFBVSxNQUFNLHVCQUF1QjtBQUM5QyxPQUFPQyxlQUFlLE1BQU0sMkJBQTJCO0FBQ3ZELE9BQU9DLHlCQUF5QixNQUFNLHdDQUF3QztBQUM5RSxPQUFPQyxtQkFBbUIsTUFBTSwyQkFBMkI7QUFDM0QsT0FBT0MsMEJBQTBCLE1BQU0sa0NBQWtDO0FBQ3pFLE9BQU9DLE1BQU0sTUFBeUIsNkJBQTZCO0FBQ25FLE9BQU9DLGdEQUFnRCxNQUFNLDRGQUE0RjtBQU16SixlQUFlLE1BQU1DLFdBQVcsU0FBU0YsTUFBTSxDQUE4QjtFQUNwRUcsV0FBV0EsQ0FBRUMsZUFBbUMsRUFBRztJQUN4RCxNQUFNQyxPQUFPLEdBQUdYLFNBQVMsQ0FBaUQsQ0FBQyxDQUFFO01BQzNFWSxJQUFJLEVBQUVQLDBCQUEwQixDQUFDUSxNQUFNLENBQUNDLG1CQUFtQjtNQUMzREMsdUJBQXVCLEVBQUVaLHlCQUF5QixDQUFDYSw2QkFBNkI7TUFDaEZDLHNCQUFzQixFQUFFQSxDQUFBLEtBQU0sSUFBSVYsZ0RBQWdELENBQUM7SUFDckYsQ0FBQyxFQUFFRyxlQUFnQixDQUFDO0lBQ3BCLEtBQUssQ0FDSCxNQUFNLElBQUlULFVBQVUsQ0FBRTtNQUFFaUIsTUFBTSxFQUFFUCxPQUFPLENBQUNPLE1BQU0sQ0FBQ0MsWUFBWSxDQUFFLE9BQVE7SUFBRSxDQUFFLENBQUMsRUFDMUVDLEtBQUssSUFBSSxJQUFJbEIsZUFBZSxDQUFFa0IsS0FBSyxFQUFFO01BQUVGLE1BQU0sRUFBRVAsT0FBTyxDQUFDTyxNQUFNLENBQUNDLFlBQVksQ0FBRSxNQUFPO0lBQUUsQ0FBRSxDQUFDLEVBQ3hGUixPQUNGLENBQUM7RUFDSDtBQUNGO0FBRUFQLG1CQUFtQixDQUFDaUIsUUFBUSxDQUFFLGFBQWEsRUFBRWIsV0FBWSxDQUFDIn0=