// Copyright 2021-2022, University of Colorado Boulder
import { Color, ProfileColorProperty } from '../../../scenery/js/imports.js';
import Tandem from '../../../tandem/js/Tandem.js';
import gravityAndOrbits from '../gravityAndOrbits.js';
const GravityAndOrbitsColors = {
  // Color mainly used for foreground things like text
  foregroundProperty: new ProfileColorProperty(gravityAndOrbits, 'foreground', {
    default: 'white',
    projector: 'black'
  }, {
    tandem: Tandem.COLORS.createTandem('foregroundColorProperty')
  }),
  // Color mainly used for background things like panels or text backgrounds
  backgroundProperty: new ProfileColorProperty(gravityAndOrbits, 'background', {
    default: 'black',
    projector: 'white'
  }, {
    tandem: Tandem.COLORS.createTandem('backgroundColorProperty')
  }),
  bodyLabelIndicatorProperty: new ProfileColorProperty(gravityAndOrbits, 'body label indicator', {
    default: new Color(255, 255, 0),
    projector: 'black'
  }, {
    tandem: Tandem.COLORS.createTandem('labelColorProperty')
  }),
  measuringTapeTextBackgroundColorProperty: new ProfileColorProperty(gravityAndOrbits, 'measuring tape text background', {
    default: 'rgba( 0, 0, 0, 0.65 )',
    projector: 'rgba( 255, 255, 255, 0.65 )'
  }, {
    tandem: Tandem.COLORS.createTandem('measuringTapeTextBackgroundColorProperty')
  }),
  gridIconStrokeColorProperty: new ProfileColorProperty(gravityAndOrbits, 'grid icon stroke', {
    default: 'gray',
    projector: 'black'
  }, {
    tandem: Tandem.COLORS.createTandem('gridIconStrokeColorProperty')
  }),
  controlPanelFillProperty: new ProfileColorProperty(gravityAndOrbits, 'control panel fill', {
    default: 'black',
    projector: new Color(222, 234, 255)
  })
};
gravityAndOrbits.register('GravityAndOrbitsColors', GravityAndOrbitsColors);
export default GravityAndOrbitsColors;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJDb2xvciIsIlByb2ZpbGVDb2xvclByb3BlcnR5IiwiVGFuZGVtIiwiZ3Jhdml0eUFuZE9yYml0cyIsIkdyYXZpdHlBbmRPcmJpdHNDb2xvcnMiLCJmb3JlZ3JvdW5kUHJvcGVydHkiLCJkZWZhdWx0IiwicHJvamVjdG9yIiwidGFuZGVtIiwiQ09MT1JTIiwiY3JlYXRlVGFuZGVtIiwiYmFja2dyb3VuZFByb3BlcnR5IiwiYm9keUxhYmVsSW5kaWNhdG9yUHJvcGVydHkiLCJtZWFzdXJpbmdUYXBlVGV4dEJhY2tncm91bmRDb2xvclByb3BlcnR5IiwiZ3JpZEljb25TdHJva2VDb2xvclByb3BlcnR5IiwiY29udHJvbFBhbmVsRmlsbFByb3BlcnR5IiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJHcmF2aXR5QW5kT3JiaXRzQ29sb3JzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjIsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5pbXBvcnQgeyBDb2xvciwgUHJvZmlsZUNvbG9yUHJvcGVydHkgfSBmcm9tICcuLi8uLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgVGFuZGVtIGZyb20gJy4uLy4uLy4uL3RhbmRlbS9qcy9UYW5kZW0uanMnO1xyXG5pbXBvcnQgZ3Jhdml0eUFuZE9yYml0cyBmcm9tICcuLi9ncmF2aXR5QW5kT3JiaXRzLmpzJztcclxuXHJcbmNvbnN0IEdyYXZpdHlBbmRPcmJpdHNDb2xvcnMgPSB7XHJcblxyXG4gIC8vIENvbG9yIG1haW5seSB1c2VkIGZvciBmb3JlZ3JvdW5kIHRoaW5ncyBsaWtlIHRleHRcclxuICBmb3JlZ3JvdW5kUHJvcGVydHk6IG5ldyBQcm9maWxlQ29sb3JQcm9wZXJ0eSggZ3Jhdml0eUFuZE9yYml0cywgJ2ZvcmVncm91bmQnLCB7XHJcbiAgICBkZWZhdWx0OiAnd2hpdGUnLFxyXG4gICAgcHJvamVjdG9yOiAnYmxhY2snXHJcbiAgfSwge1xyXG4gICAgdGFuZGVtOiBUYW5kZW0uQ09MT1JTLmNyZWF0ZVRhbmRlbSggJ2ZvcmVncm91bmRDb2xvclByb3BlcnR5JyApXHJcbiAgfSApLFxyXG5cclxuICAvLyBDb2xvciBtYWlubHkgdXNlZCBmb3IgYmFja2dyb3VuZCB0aGluZ3MgbGlrZSBwYW5lbHMgb3IgdGV4dCBiYWNrZ3JvdW5kc1xyXG4gIGJhY2tncm91bmRQcm9wZXJ0eTogbmV3IFByb2ZpbGVDb2xvclByb3BlcnR5KCBncmF2aXR5QW5kT3JiaXRzLCAnYmFja2dyb3VuZCcsIHtcclxuICAgIGRlZmF1bHQ6ICdibGFjaycsXHJcbiAgICBwcm9qZWN0b3I6ICd3aGl0ZSdcclxuICB9LCB7XHJcbiAgICB0YW5kZW06IFRhbmRlbS5DT0xPUlMuY3JlYXRlVGFuZGVtKCAnYmFja2dyb3VuZENvbG9yUHJvcGVydHknIClcclxuICB9ICksXHJcbiAgYm9keUxhYmVsSW5kaWNhdG9yUHJvcGVydHk6IG5ldyBQcm9maWxlQ29sb3JQcm9wZXJ0eSggZ3Jhdml0eUFuZE9yYml0cywgJ2JvZHkgbGFiZWwgaW5kaWNhdG9yJywge1xyXG4gICAgZGVmYXVsdDogbmV3IENvbG9yKCAyNTUsIDI1NSwgMCApLFxyXG4gICAgcHJvamVjdG9yOiAnYmxhY2snXHJcbiAgfSwge1xyXG4gICAgdGFuZGVtOiBUYW5kZW0uQ09MT1JTLmNyZWF0ZVRhbmRlbSggJ2xhYmVsQ29sb3JQcm9wZXJ0eScgKVxyXG4gIH0gKSxcclxuXHJcbiAgbWVhc3VyaW5nVGFwZVRleHRCYWNrZ3JvdW5kQ29sb3JQcm9wZXJ0eTogbmV3IFByb2ZpbGVDb2xvclByb3BlcnR5KCBncmF2aXR5QW5kT3JiaXRzLCAnbWVhc3VyaW5nIHRhcGUgdGV4dCBiYWNrZ3JvdW5kJywge1xyXG4gICAgZGVmYXVsdDogJ3JnYmEoIDAsIDAsIDAsIDAuNjUgKScsXHJcbiAgICBwcm9qZWN0b3I6ICdyZ2JhKCAyNTUsIDI1NSwgMjU1LCAwLjY1ICknXHJcbiAgfSwge1xyXG4gICAgdGFuZGVtOiBUYW5kZW0uQ09MT1JTLmNyZWF0ZVRhbmRlbSggJ21lYXN1cmluZ1RhcGVUZXh0QmFja2dyb3VuZENvbG9yUHJvcGVydHknIClcclxuICB9ICksXHJcblxyXG4gIGdyaWRJY29uU3Ryb2tlQ29sb3JQcm9wZXJ0eTogbmV3IFByb2ZpbGVDb2xvclByb3BlcnR5KCBncmF2aXR5QW5kT3JiaXRzLCAnZ3JpZCBpY29uIHN0cm9rZScsIHtcclxuICAgIGRlZmF1bHQ6ICdncmF5JyxcclxuICAgIHByb2plY3RvcjogJ2JsYWNrJ1xyXG4gIH0sIHtcclxuICAgIHRhbmRlbTogVGFuZGVtLkNPTE9SUy5jcmVhdGVUYW5kZW0oICdncmlkSWNvblN0cm9rZUNvbG9yUHJvcGVydHknIClcclxuICB9ICksXHJcblxyXG4gIGNvbnRyb2xQYW5lbEZpbGxQcm9wZXJ0eTogbmV3IFByb2ZpbGVDb2xvclByb3BlcnR5KCBncmF2aXR5QW5kT3JiaXRzLCAnY29udHJvbCBwYW5lbCBmaWxsJywge1xyXG4gICAgZGVmYXVsdDogJ2JsYWNrJyxcclxuICAgIHByb2plY3RvcjogbmV3IENvbG9yKCAyMjIsIDIzNCwgMjU1IClcclxuICB9IClcclxufTtcclxuXHJcbmdyYXZpdHlBbmRPcmJpdHMucmVnaXN0ZXIoICdHcmF2aXR5QW5kT3JiaXRzQ29sb3JzJywgR3Jhdml0eUFuZE9yYml0c0NvbG9ycyApO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgR3Jhdml0eUFuZE9yYml0c0NvbG9yczsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsU0FBU0EsS0FBSyxFQUFFQyxvQkFBb0IsUUFBUSxnQ0FBZ0M7QUFDNUUsT0FBT0MsTUFBTSxNQUFNLDhCQUE4QjtBQUNqRCxPQUFPQyxnQkFBZ0IsTUFBTSx3QkFBd0I7QUFFckQsTUFBTUMsc0JBQXNCLEdBQUc7RUFFN0I7RUFDQUMsa0JBQWtCLEVBQUUsSUFBSUosb0JBQW9CLENBQUVFLGdCQUFnQixFQUFFLFlBQVksRUFBRTtJQUM1RUcsT0FBTyxFQUFFLE9BQU87SUFDaEJDLFNBQVMsRUFBRTtFQUNiLENBQUMsRUFBRTtJQUNEQyxNQUFNLEVBQUVOLE1BQU0sQ0FBQ08sTUFBTSxDQUFDQyxZQUFZLENBQUUseUJBQTBCO0VBQ2hFLENBQUUsQ0FBQztFQUVIO0VBQ0FDLGtCQUFrQixFQUFFLElBQUlWLG9CQUFvQixDQUFFRSxnQkFBZ0IsRUFBRSxZQUFZLEVBQUU7SUFDNUVHLE9BQU8sRUFBRSxPQUFPO0lBQ2hCQyxTQUFTLEVBQUU7RUFDYixDQUFDLEVBQUU7SUFDREMsTUFBTSxFQUFFTixNQUFNLENBQUNPLE1BQU0sQ0FBQ0MsWUFBWSxDQUFFLHlCQUEwQjtFQUNoRSxDQUFFLENBQUM7RUFDSEUsMEJBQTBCLEVBQUUsSUFBSVgsb0JBQW9CLENBQUVFLGdCQUFnQixFQUFFLHNCQUFzQixFQUFFO0lBQzlGRyxPQUFPLEVBQUUsSUFBSU4sS0FBSyxDQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsQ0FBRSxDQUFDO0lBQ2pDTyxTQUFTLEVBQUU7RUFDYixDQUFDLEVBQUU7SUFDREMsTUFBTSxFQUFFTixNQUFNLENBQUNPLE1BQU0sQ0FBQ0MsWUFBWSxDQUFFLG9CQUFxQjtFQUMzRCxDQUFFLENBQUM7RUFFSEcsd0NBQXdDLEVBQUUsSUFBSVosb0JBQW9CLENBQUVFLGdCQUFnQixFQUFFLGdDQUFnQyxFQUFFO0lBQ3RIRyxPQUFPLEVBQUUsdUJBQXVCO0lBQ2hDQyxTQUFTLEVBQUU7RUFDYixDQUFDLEVBQUU7SUFDREMsTUFBTSxFQUFFTixNQUFNLENBQUNPLE1BQU0sQ0FBQ0MsWUFBWSxDQUFFLDBDQUEyQztFQUNqRixDQUFFLENBQUM7RUFFSEksMkJBQTJCLEVBQUUsSUFBSWIsb0JBQW9CLENBQUVFLGdCQUFnQixFQUFFLGtCQUFrQixFQUFFO0lBQzNGRyxPQUFPLEVBQUUsTUFBTTtJQUNmQyxTQUFTLEVBQUU7RUFDYixDQUFDLEVBQUU7SUFDREMsTUFBTSxFQUFFTixNQUFNLENBQUNPLE1BQU0sQ0FBQ0MsWUFBWSxDQUFFLDZCQUE4QjtFQUNwRSxDQUFFLENBQUM7RUFFSEssd0JBQXdCLEVBQUUsSUFBSWQsb0JBQW9CLENBQUVFLGdCQUFnQixFQUFFLG9CQUFvQixFQUFFO0lBQzFGRyxPQUFPLEVBQUUsT0FBTztJQUNoQkMsU0FBUyxFQUFFLElBQUlQLEtBQUssQ0FBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUk7RUFDdEMsQ0FBRTtBQUNKLENBQUM7QUFFREcsZ0JBQWdCLENBQUNhLFFBQVEsQ0FBRSx3QkFBd0IsRUFBRVosc0JBQXVCLENBQUM7QUFFN0UsZUFBZUEsc0JBQXNCIn0=