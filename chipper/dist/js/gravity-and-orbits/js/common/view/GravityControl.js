// Copyright 2015-2023, University of Colorado Boulder

/**
 * Container for gravity on/off buttons.
 *
 * @author Aaron Davis (PhET Interactive Simulations)
 */

import merge from '../../../../phet-core/js/merge.js';
import PhetFont from '../../../../scenery-phet/js/PhetFont.js';
import { HBox, Node, Text } from '../../../../scenery/js/imports.js';
import AquaRadioButton from '../../../../sun/js/AquaRadioButton.js';
import gravityAndOrbits from '../../gravityAndOrbits.js';
import GravityAndOrbitsStrings from '../../GravityAndOrbitsStrings.js';
import GravityAndOrbitsColors from '../GravityAndOrbitsColors.js';
import Tandem from '../../../../tandem/js/Tandem.js';
import optionize from '../../../../phet-core/js/optionize.js';

// constants
const FONT = new PhetFont(14);
const TEXT_OPTIONS = {
  font: FONT,
  fill: GravityAndOrbitsColors.foregroundProperty,
  maxWidth: 50
};
const RADIO_OPTIONS = {
  radius: 7
};
class GravityControl extends Node {
  /**
   * @param gravityEnabledProperty
   * @param [providedOptions] - This object contains options for main node of gravity menu.
   */
  constructor(gravityEnabledProperty, providedOptions) {
    super(providedOptions);
    const options = optionize()({
      tandem: Tandem.OPTIONAL
    }, providedOptions);
    const gravityTextNode = new Text(GravityAndOrbitsStrings.gravityStringProperty, TEXT_OPTIONS);
    const onTextNode = new Text(GravityAndOrbitsStrings.onStringProperty, TEXT_OPTIONS);
    const offTextNode = new Text(GravityAndOrbitsStrings.offStringProperty, TEXT_OPTIONS);
    this.addLinkedElement(gravityEnabledProperty, {
      tandem: options.tandem.createTandem('gravityEnabledProperty')
    });
    this.addChild(new HBox({
      spacing: 10,
      bottom: 2,
      children: [gravityTextNode, new AquaRadioButton(gravityEnabledProperty, true, onTextNode, merge({
        tandem: options.tandem.createTandem('gravityOnRadioButton')
      }, RADIO_OPTIONS)), new AquaRadioButton(gravityEnabledProperty, false, offTextNode, merge({
        tandem: options.tandem.createTandem('gravityOffRadioButton')
      }, RADIO_OPTIONS))]
    }));
  }
}
gravityAndOrbits.register('GravityControl', GravityControl);
export default GravityControl;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtZXJnZSIsIlBoZXRGb250IiwiSEJveCIsIk5vZGUiLCJUZXh0IiwiQXF1YVJhZGlvQnV0dG9uIiwiZ3Jhdml0eUFuZE9yYml0cyIsIkdyYXZpdHlBbmRPcmJpdHNTdHJpbmdzIiwiR3Jhdml0eUFuZE9yYml0c0NvbG9ycyIsIlRhbmRlbSIsIm9wdGlvbml6ZSIsIkZPTlQiLCJURVhUX09QVElPTlMiLCJmb250IiwiZmlsbCIsImZvcmVncm91bmRQcm9wZXJ0eSIsIm1heFdpZHRoIiwiUkFESU9fT1BUSU9OUyIsInJhZGl1cyIsIkdyYXZpdHlDb250cm9sIiwiY29uc3RydWN0b3IiLCJncmF2aXR5RW5hYmxlZFByb3BlcnR5IiwicHJvdmlkZWRPcHRpb25zIiwib3B0aW9ucyIsInRhbmRlbSIsIk9QVElPTkFMIiwiZ3Jhdml0eVRleHROb2RlIiwiZ3Jhdml0eVN0cmluZ1Byb3BlcnR5Iiwib25UZXh0Tm9kZSIsIm9uU3RyaW5nUHJvcGVydHkiLCJvZmZUZXh0Tm9kZSIsIm9mZlN0cmluZ1Byb3BlcnR5IiwiYWRkTGlua2VkRWxlbWVudCIsImNyZWF0ZVRhbmRlbSIsImFkZENoaWxkIiwic3BhY2luZyIsImJvdHRvbSIsImNoaWxkcmVuIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJHcmF2aXR5Q29udHJvbC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxNS0yMDIzLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBDb250YWluZXIgZm9yIGdyYXZpdHkgb24vb2ZmIGJ1dHRvbnMuXHJcbiAqXHJcbiAqIEBhdXRob3IgQWFyb24gRGF2aXMgKFBoRVQgSW50ZXJhY3RpdmUgU2ltdWxhdGlvbnMpXHJcbiAqL1xyXG5cclxuaW1wb3J0IG1lcmdlIGZyb20gJy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy9tZXJnZS5qcyc7XHJcbmltcG9ydCBQaGV0Rm9udCBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5LXBoZXQvanMvUGhldEZvbnQuanMnO1xyXG5pbXBvcnQgeyBIQm94LCBOb2RlLCBUZXh0IH0gZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IEFxdWFSYWRpb0J1dHRvbiBmcm9tICcuLi8uLi8uLi8uLi9zdW4vanMvQXF1YVJhZGlvQnV0dG9uLmpzJztcclxuaW1wb3J0IGdyYXZpdHlBbmRPcmJpdHMgZnJvbSAnLi4vLi4vZ3Jhdml0eUFuZE9yYml0cy5qcyc7XHJcbmltcG9ydCBHcmF2aXR5QW5kT3JiaXRzU3RyaW5ncyBmcm9tICcuLi8uLi9HcmF2aXR5QW5kT3JiaXRzU3RyaW5ncy5qcyc7XHJcbmltcG9ydCBHcmF2aXR5QW5kT3JiaXRzQ29sb3JzIGZyb20gJy4uL0dyYXZpdHlBbmRPcmJpdHNDb2xvcnMuanMnO1xyXG5pbXBvcnQgUHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vLi4vYXhvbi9qcy9Qcm9wZXJ0eS5qcyc7XHJcbmltcG9ydCBUYW5kZW0gZnJvbSAnLi4vLi4vLi4vLi4vdGFuZGVtL2pzL1RhbmRlbS5qcyc7XHJcbmltcG9ydCB7IFBoZXRpb09iamVjdE9wdGlvbnMgfSBmcm9tICcuLi8uLi8uLi8uLi90YW5kZW0vanMvUGhldGlvT2JqZWN0LmpzJztcclxuaW1wb3J0IG9wdGlvbml6ZSwgeyBFbXB0eVNlbGZPcHRpb25zIH0gZnJvbSAnLi4vLi4vLi4vLi4vcGhldC1jb3JlL2pzL29wdGlvbml6ZS5qcyc7XHJcblxyXG4vLyBjb25zdGFudHNcclxuY29uc3QgRk9OVCA9IG5ldyBQaGV0Rm9udCggMTQgKTtcclxuY29uc3QgVEVYVF9PUFRJT05TID0geyBmb250OiBGT05ULCBmaWxsOiBHcmF2aXR5QW5kT3JiaXRzQ29sb3JzLmZvcmVncm91bmRQcm9wZXJ0eSwgbWF4V2lkdGg6IDUwIH07XHJcbmNvbnN0IFJBRElPX09QVElPTlMgPSB7IHJhZGl1czogNyB9O1xyXG5cclxudHlwZSBHcmF2aXR5Q29udHJvbE9wdGlvbnMgPSBQaGV0aW9PYmplY3RPcHRpb25zO1xyXG5cclxuY2xhc3MgR3Jhdml0eUNvbnRyb2wgZXh0ZW5kcyBOb2RlIHtcclxuXHJcbiAgLyoqXHJcbiAgICogQHBhcmFtIGdyYXZpdHlFbmFibGVkUHJvcGVydHlcclxuICAgKiBAcGFyYW0gW3Byb3ZpZGVkT3B0aW9uc10gLSBUaGlzIG9iamVjdCBjb250YWlucyBvcHRpb25zIGZvciBtYWluIG5vZGUgb2YgZ3Jhdml0eSBtZW51LlxyXG4gICAqL1xyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvciggZ3Jhdml0eUVuYWJsZWRQcm9wZXJ0eTogUHJvcGVydHk8Ym9vbGVhbj4sIHByb3ZpZGVkT3B0aW9ucz86IEdyYXZpdHlDb250cm9sT3B0aW9ucyApIHtcclxuICAgIHN1cGVyKCBwcm92aWRlZE9wdGlvbnMgKTtcclxuXHJcbiAgICBjb25zdCBvcHRpb25zID0gb3B0aW9uaXplPEdyYXZpdHlDb250cm9sT3B0aW9ucywgRW1wdHlTZWxmT3B0aW9ucywgUGhldGlvT2JqZWN0T3B0aW9ucz4oKSgge1xyXG4gICAgICB0YW5kZW06IFRhbmRlbS5PUFRJT05BTFxyXG4gICAgfSwgcHJvdmlkZWRPcHRpb25zICk7XHJcblxyXG4gICAgY29uc3QgZ3Jhdml0eVRleHROb2RlID0gbmV3IFRleHQoIEdyYXZpdHlBbmRPcmJpdHNTdHJpbmdzLmdyYXZpdHlTdHJpbmdQcm9wZXJ0eSwgVEVYVF9PUFRJT05TICk7XHJcbiAgICBjb25zdCBvblRleHROb2RlID0gbmV3IFRleHQoIEdyYXZpdHlBbmRPcmJpdHNTdHJpbmdzLm9uU3RyaW5nUHJvcGVydHksIFRFWFRfT1BUSU9OUyApO1xyXG4gICAgY29uc3Qgb2ZmVGV4dE5vZGUgPSBuZXcgVGV4dCggR3Jhdml0eUFuZE9yYml0c1N0cmluZ3Mub2ZmU3RyaW5nUHJvcGVydHksIFRFWFRfT1BUSU9OUyApO1xyXG5cclxuICAgIHRoaXMuYWRkTGlua2VkRWxlbWVudCggZ3Jhdml0eUVuYWJsZWRQcm9wZXJ0eSwge1xyXG4gICAgICB0YW5kZW06IG9wdGlvbnMudGFuZGVtLmNyZWF0ZVRhbmRlbSggJ2dyYXZpdHlFbmFibGVkUHJvcGVydHknIClcclxuICAgIH0gKTtcclxuXHJcbiAgICB0aGlzLmFkZENoaWxkKCBuZXcgSEJveCgge1xyXG4gICAgICBzcGFjaW5nOiAxMCwgYm90dG9tOiAyLCBjaGlsZHJlbjogW1xyXG4gICAgICAgIGdyYXZpdHlUZXh0Tm9kZSxcclxuICAgICAgICBuZXcgQXF1YVJhZGlvQnV0dG9uKCBncmF2aXR5RW5hYmxlZFByb3BlcnR5LCB0cnVlLCBvblRleHROb2RlLCBtZXJnZSggeyB0YW5kZW06IG9wdGlvbnMudGFuZGVtLmNyZWF0ZVRhbmRlbSggJ2dyYXZpdHlPblJhZGlvQnV0dG9uJyApIH0sIFJBRElPX09QVElPTlMgKSApLFxyXG4gICAgICAgIG5ldyBBcXVhUmFkaW9CdXR0b24oIGdyYXZpdHlFbmFibGVkUHJvcGVydHksIGZhbHNlLCBvZmZUZXh0Tm9kZSwgbWVyZ2UoIHsgdGFuZGVtOiBvcHRpb25zLnRhbmRlbS5jcmVhdGVUYW5kZW0oICdncmF2aXR5T2ZmUmFkaW9CdXR0b24nICkgfSwgUkFESU9fT1BUSU9OUyApIClcclxuICAgICAgXVxyXG4gICAgfSApICk7XHJcbiAgfVxyXG59XHJcblxyXG5ncmF2aXR5QW5kT3JiaXRzLnJlZ2lzdGVyKCAnR3Jhdml0eUNvbnRyb2wnLCBHcmF2aXR5Q29udHJvbCApO1xyXG5leHBvcnQgZGVmYXVsdCBHcmF2aXR5Q29udHJvbDsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsS0FBSyxNQUFNLG1DQUFtQztBQUNyRCxPQUFPQyxRQUFRLE1BQU0seUNBQXlDO0FBQzlELFNBQVNDLElBQUksRUFBRUMsSUFBSSxFQUFFQyxJQUFJLFFBQVEsbUNBQW1DO0FBQ3BFLE9BQU9DLGVBQWUsTUFBTSx1Q0FBdUM7QUFDbkUsT0FBT0MsZ0JBQWdCLE1BQU0sMkJBQTJCO0FBQ3hELE9BQU9DLHVCQUF1QixNQUFNLGtDQUFrQztBQUN0RSxPQUFPQyxzQkFBc0IsTUFBTSw4QkFBOEI7QUFFakUsT0FBT0MsTUFBTSxNQUFNLGlDQUFpQztBQUVwRCxPQUFPQyxTQUFTLE1BQTRCLHVDQUF1Qzs7QUFFbkY7QUFDQSxNQUFNQyxJQUFJLEdBQUcsSUFBSVYsUUFBUSxDQUFFLEVBQUcsQ0FBQztBQUMvQixNQUFNVyxZQUFZLEdBQUc7RUFBRUMsSUFBSSxFQUFFRixJQUFJO0VBQUVHLElBQUksRUFBRU4sc0JBQXNCLENBQUNPLGtCQUFrQjtFQUFFQyxRQUFRLEVBQUU7QUFBRyxDQUFDO0FBQ2xHLE1BQU1DLGFBQWEsR0FBRztFQUFFQyxNQUFNLEVBQUU7QUFBRSxDQUFDO0FBSW5DLE1BQU1DLGNBQWMsU0FBU2hCLElBQUksQ0FBQztFQUVoQztBQUNGO0FBQ0E7QUFDQTtFQUNTaUIsV0FBV0EsQ0FBRUMsc0JBQXlDLEVBQUVDLGVBQXVDLEVBQUc7SUFDdkcsS0FBSyxDQUFFQSxlQUFnQixDQUFDO0lBRXhCLE1BQU1DLE9BQU8sR0FBR2IsU0FBUyxDQUErRCxDQUFDLENBQUU7TUFDekZjLE1BQU0sRUFBRWYsTUFBTSxDQUFDZ0I7SUFDakIsQ0FBQyxFQUFFSCxlQUFnQixDQUFDO0lBRXBCLE1BQU1JLGVBQWUsR0FBRyxJQUFJdEIsSUFBSSxDQUFFRyx1QkFBdUIsQ0FBQ29CLHFCQUFxQixFQUFFZixZQUFhLENBQUM7SUFDL0YsTUFBTWdCLFVBQVUsR0FBRyxJQUFJeEIsSUFBSSxDQUFFRyx1QkFBdUIsQ0FBQ3NCLGdCQUFnQixFQUFFakIsWUFBYSxDQUFDO0lBQ3JGLE1BQU1rQixXQUFXLEdBQUcsSUFBSTFCLElBQUksQ0FBRUcsdUJBQXVCLENBQUN3QixpQkFBaUIsRUFBRW5CLFlBQWEsQ0FBQztJQUV2RixJQUFJLENBQUNvQixnQkFBZ0IsQ0FBRVgsc0JBQXNCLEVBQUU7TUFDN0NHLE1BQU0sRUFBRUQsT0FBTyxDQUFDQyxNQUFNLENBQUNTLFlBQVksQ0FBRSx3QkFBeUI7SUFDaEUsQ0FBRSxDQUFDO0lBRUgsSUFBSSxDQUFDQyxRQUFRLENBQUUsSUFBSWhDLElBQUksQ0FBRTtNQUN2QmlDLE9BQU8sRUFBRSxFQUFFO01BQUVDLE1BQU0sRUFBRSxDQUFDO01BQUVDLFFBQVEsRUFBRSxDQUNoQ1gsZUFBZSxFQUNmLElBQUlyQixlQUFlLENBQUVnQixzQkFBc0IsRUFBRSxJQUFJLEVBQUVPLFVBQVUsRUFBRTVCLEtBQUssQ0FBRTtRQUFFd0IsTUFBTSxFQUFFRCxPQUFPLENBQUNDLE1BQU0sQ0FBQ1MsWUFBWSxDQUFFLHNCQUF1QjtNQUFFLENBQUMsRUFBRWhCLGFBQWMsQ0FBRSxDQUFDLEVBQzFKLElBQUlaLGVBQWUsQ0FBRWdCLHNCQUFzQixFQUFFLEtBQUssRUFBRVMsV0FBVyxFQUFFOUIsS0FBSyxDQUFFO1FBQUV3QixNQUFNLEVBQUVELE9BQU8sQ0FBQ0MsTUFBTSxDQUFDUyxZQUFZLENBQUUsdUJBQXdCO01BQUUsQ0FBQyxFQUFFaEIsYUFBYyxDQUFFLENBQUM7SUFFakssQ0FBRSxDQUFFLENBQUM7RUFDUDtBQUNGO0FBRUFYLGdCQUFnQixDQUFDZ0MsUUFBUSxDQUFFLGdCQUFnQixFQUFFbkIsY0FBZSxDQUFDO0FBQzdELGVBQWVBLGNBQWMifQ==