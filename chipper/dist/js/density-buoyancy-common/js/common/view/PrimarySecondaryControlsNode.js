// Copyright 2019-2022, University of Colorado Boulder

/**
 * Shows mass/volume controls for a primary and secondary mass.
 *
 * @author Jonathan Olson <jonathan.olson@colorado.edu>
 */

import DerivedProperty from '../../../../axon/js/DerivedProperty.js';
import { combineOptions } from '../../../../phet-core/js/optionize.js';
import { Node } from '../../../../scenery/js/imports.js';
import densityBuoyancyCommon from '../../densityBuoyancyCommon.js';
import BlockControlNode from './BlockControlNode.js';
import DensityBuoyancyCommonColors from './DensityBuoyancyCommonColors.js';
import PrimarySecondaryPanelsNode from './PrimarySecondaryPanelsNode.js';
export default class PrimarySecondaryControlsNode extends PrimarySecondaryPanelsNode {
  /**
   * @param primaryMass
   * @param secondaryMass
   * @param popupLayer
   * @param options - Applied to each BlockControlNode
   */
  constructor(primaryMass, secondaryMass, popupLayer, options) {
    const tandem = options.tandem;
    const omittedOptions = _.omit(options, ['tandem']);
    const primaryControlNode = new BlockControlNode(primaryMass, popupLayer, combineOptions({
      labelNode: PrimarySecondaryPanelsNode.getPrimaryLabelNode(),
      color: DensityBuoyancyCommonColors.labelAProperty,
      tandem: tandem.createTandem('blockAControlPanel')
    }, omittedOptions));
    const secondaryControlNode = new BlockControlNode(secondaryMass, popupLayer, combineOptions({
      labelNode: PrimarySecondaryPanelsNode.getSecondaryLabelNode(),
      color: DensityBuoyancyCommonColors.labelBProperty,
      tandem: tandem.createTandem('blockBControlPanel')
    }, omittedOptions));
    super(new Node({
      children: [primaryControlNode],
      visibleProperty: DerivedProperty.and([primaryMass.visibleProperty, primaryControlNode.visibleProperty])
    }), new Node({
      children: [secondaryControlNode],
      visibleProperty: DerivedProperty.and([secondaryMass.visibleProperty, secondaryControlNode.visibleProperty])
    }));
  }
}
densityBuoyancyCommon.register('PrimarySecondaryControlsNode', PrimarySecondaryControlsNode);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJEZXJpdmVkUHJvcGVydHkiLCJjb21iaW5lT3B0aW9ucyIsIk5vZGUiLCJkZW5zaXR5QnVveWFuY3lDb21tb24iLCJCbG9ja0NvbnRyb2xOb2RlIiwiRGVuc2l0eUJ1b3lhbmN5Q29tbW9uQ29sb3JzIiwiUHJpbWFyeVNlY29uZGFyeVBhbmVsc05vZGUiLCJQcmltYXJ5U2Vjb25kYXJ5Q29udHJvbHNOb2RlIiwiY29uc3RydWN0b3IiLCJwcmltYXJ5TWFzcyIsInNlY29uZGFyeU1hc3MiLCJwb3B1cExheWVyIiwib3B0aW9ucyIsInRhbmRlbSIsIm9taXR0ZWRPcHRpb25zIiwiXyIsIm9taXQiLCJwcmltYXJ5Q29udHJvbE5vZGUiLCJsYWJlbE5vZGUiLCJnZXRQcmltYXJ5TGFiZWxOb2RlIiwiY29sb3IiLCJsYWJlbEFQcm9wZXJ0eSIsImNyZWF0ZVRhbmRlbSIsInNlY29uZGFyeUNvbnRyb2xOb2RlIiwiZ2V0U2Vjb25kYXJ5TGFiZWxOb2RlIiwibGFiZWxCUHJvcGVydHkiLCJjaGlsZHJlbiIsInZpc2libGVQcm9wZXJ0eSIsImFuZCIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiUHJpbWFyeVNlY29uZGFyeUNvbnRyb2xzTm9kZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxOS0yMDIyLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBTaG93cyBtYXNzL3ZvbHVtZSBjb250cm9scyBmb3IgYSBwcmltYXJ5IGFuZCBzZWNvbmRhcnkgbWFzcy5cclxuICpcclxuICogQGF1dGhvciBKb25hdGhhbiBPbHNvbiA8am9uYXRoYW4ub2xzb25AY29sb3JhZG8uZWR1PlxyXG4gKi9cclxuXHJcbmltcG9ydCBEZXJpdmVkUHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vLi4vYXhvbi9qcy9EZXJpdmVkUHJvcGVydHkuanMnO1xyXG5pbXBvcnQgeyBjb21iaW5lT3B0aW9ucyB9IGZyb20gJy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy9vcHRpb25pemUuanMnO1xyXG5pbXBvcnQgeyBOb2RlIH0gZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IFRhbmRlbSBmcm9tICcuLi8uLi8uLi8uLi90YW5kZW0vanMvVGFuZGVtLmpzJztcclxuaW1wb3J0IGRlbnNpdHlCdW95YW5jeUNvbW1vbiBmcm9tICcuLi8uLi9kZW5zaXR5QnVveWFuY3lDb21tb24uanMnO1xyXG5pbXBvcnQgQ3Vib2lkIGZyb20gJy4uL21vZGVsL0N1Ym9pZC5qcyc7XHJcbmltcG9ydCBCbG9ja0NvbnRyb2xOb2RlLCB7IEJsb2NrQ29udHJvbE5vZGVPcHRpb25zIH0gZnJvbSAnLi9CbG9ja0NvbnRyb2xOb2RlLmpzJztcclxuaW1wb3J0IERlbnNpdHlCdW95YW5jeUNvbW1vbkNvbG9ycyBmcm9tICcuL0RlbnNpdHlCdW95YW5jeUNvbW1vbkNvbG9ycy5qcyc7XHJcbmltcG9ydCBQcmltYXJ5U2Vjb25kYXJ5UGFuZWxzTm9kZSBmcm9tICcuL1ByaW1hcnlTZWNvbmRhcnlQYW5lbHNOb2RlLmpzJztcclxuXHJcbmV4cG9ydCB0eXBlIFByaW1hcnlTZWNvbmRhcnlDb250cm9sc05vZGVPcHRpb25zID0gQmxvY2tDb250cm9sTm9kZU9wdGlvbnMgJiB7IHRhbmRlbTogVGFuZGVtIH07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQcmltYXJ5U2Vjb25kYXJ5Q29udHJvbHNOb2RlIGV4dGVuZHMgUHJpbWFyeVNlY29uZGFyeVBhbmVsc05vZGUge1xyXG5cclxuICAvKipcclxuICAgKiBAcGFyYW0gcHJpbWFyeU1hc3NcclxuICAgKiBAcGFyYW0gc2Vjb25kYXJ5TWFzc1xyXG4gICAqIEBwYXJhbSBwb3B1cExheWVyXHJcbiAgICogQHBhcmFtIG9wdGlvbnMgLSBBcHBsaWVkIHRvIGVhY2ggQmxvY2tDb250cm9sTm9kZVxyXG4gICAqL1xyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvciggcHJpbWFyeU1hc3M6IEN1Ym9pZCwgc2Vjb25kYXJ5TWFzczogQ3Vib2lkLCBwb3B1cExheWVyOiBOb2RlLCBvcHRpb25zOiBQcmltYXJ5U2Vjb25kYXJ5Q29udHJvbHNOb2RlT3B0aW9ucyApIHtcclxuXHJcbiAgICBjb25zdCB0YW5kZW0gPSBvcHRpb25zLnRhbmRlbTtcclxuICAgIGNvbnN0IG9taXR0ZWRPcHRpb25zID0gXy5vbWl0KCBvcHRpb25zLCBbICd0YW5kZW0nIF0gKTtcclxuXHJcbiAgICBjb25zdCBwcmltYXJ5Q29udHJvbE5vZGUgPSBuZXcgQmxvY2tDb250cm9sTm9kZSggcHJpbWFyeU1hc3MsIHBvcHVwTGF5ZXIsIGNvbWJpbmVPcHRpb25zPEJsb2NrQ29udHJvbE5vZGVPcHRpb25zPigge1xyXG4gICAgICBsYWJlbE5vZGU6IFByaW1hcnlTZWNvbmRhcnlQYW5lbHNOb2RlLmdldFByaW1hcnlMYWJlbE5vZGUoKSxcclxuICAgICAgY29sb3I6IERlbnNpdHlCdW95YW5jeUNvbW1vbkNvbG9ycy5sYWJlbEFQcm9wZXJ0eSxcclxuICAgICAgdGFuZGVtOiB0YW5kZW0uY3JlYXRlVGFuZGVtKCAnYmxvY2tBQ29udHJvbFBhbmVsJyApXHJcbiAgICB9LCBvbWl0dGVkT3B0aW9ucyApICk7XHJcblxyXG4gICAgY29uc3Qgc2Vjb25kYXJ5Q29udHJvbE5vZGUgPSBuZXcgQmxvY2tDb250cm9sTm9kZSggc2Vjb25kYXJ5TWFzcywgcG9wdXBMYXllciwgY29tYmluZU9wdGlvbnM8QmxvY2tDb250cm9sTm9kZU9wdGlvbnM+KCB7XHJcbiAgICAgIGxhYmVsTm9kZTogUHJpbWFyeVNlY29uZGFyeVBhbmVsc05vZGUuZ2V0U2Vjb25kYXJ5TGFiZWxOb2RlKCksXHJcbiAgICAgIGNvbG9yOiBEZW5zaXR5QnVveWFuY3lDb21tb25Db2xvcnMubGFiZWxCUHJvcGVydHksXHJcbiAgICAgIHRhbmRlbTogdGFuZGVtLmNyZWF0ZVRhbmRlbSggJ2Jsb2NrQkNvbnRyb2xQYW5lbCcgKVxyXG4gICAgfSwgb21pdHRlZE9wdGlvbnMgKSApO1xyXG5cclxuICAgIHN1cGVyKFxyXG4gICAgICBuZXcgTm9kZSgge1xyXG4gICAgICAgIGNoaWxkcmVuOiBbIHByaW1hcnlDb250cm9sTm9kZSBdLFxyXG4gICAgICAgIHZpc2libGVQcm9wZXJ0eTogRGVyaXZlZFByb3BlcnR5LmFuZCggWyBwcmltYXJ5TWFzcy52aXNpYmxlUHJvcGVydHksIHByaW1hcnlDb250cm9sTm9kZS52aXNpYmxlUHJvcGVydHkgXSApXHJcbiAgICAgIH0gKSxcclxuICAgICAgbmV3IE5vZGUoIHtcclxuICAgICAgICBjaGlsZHJlbjogWyBzZWNvbmRhcnlDb250cm9sTm9kZSBdLFxyXG4gICAgICAgIHZpc2libGVQcm9wZXJ0eTogRGVyaXZlZFByb3BlcnR5LmFuZCggWyBzZWNvbmRhcnlNYXNzLnZpc2libGVQcm9wZXJ0eSwgc2Vjb25kYXJ5Q29udHJvbE5vZGUudmlzaWJsZVByb3BlcnR5IF0gKVxyXG4gICAgICB9IClcclxuICAgICk7XHJcbiAgfVxyXG59XHJcblxyXG5kZW5zaXR5QnVveWFuY3lDb21tb24ucmVnaXN0ZXIoICdQcmltYXJ5U2Vjb25kYXJ5Q29udHJvbHNOb2RlJywgUHJpbWFyeVNlY29uZGFyeUNvbnRyb2xzTm9kZSApO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsZUFBZSxNQUFNLHdDQUF3QztBQUNwRSxTQUFTQyxjQUFjLFFBQVEsdUNBQXVDO0FBQ3RFLFNBQVNDLElBQUksUUFBUSxtQ0FBbUM7QUFFeEQsT0FBT0MscUJBQXFCLE1BQU0sZ0NBQWdDO0FBRWxFLE9BQU9DLGdCQUFnQixNQUFtQyx1QkFBdUI7QUFDakYsT0FBT0MsMkJBQTJCLE1BQU0sa0NBQWtDO0FBQzFFLE9BQU9DLDBCQUEwQixNQUFNLGlDQUFpQztBQUl4RSxlQUFlLE1BQU1DLDRCQUE0QixTQUFTRCwwQkFBMEIsQ0FBQztFQUVuRjtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7RUFDU0UsV0FBV0EsQ0FBRUMsV0FBbUIsRUFBRUMsYUFBcUIsRUFBRUMsVUFBZ0IsRUFBRUMsT0FBNEMsRUFBRztJQUUvSCxNQUFNQyxNQUFNLEdBQUdELE9BQU8sQ0FBQ0MsTUFBTTtJQUM3QixNQUFNQyxjQUFjLEdBQUdDLENBQUMsQ0FBQ0MsSUFBSSxDQUFFSixPQUFPLEVBQUUsQ0FBRSxRQUFRLENBQUcsQ0FBQztJQUV0RCxNQUFNSyxrQkFBa0IsR0FBRyxJQUFJYixnQkFBZ0IsQ0FBRUssV0FBVyxFQUFFRSxVQUFVLEVBQUVWLGNBQWMsQ0FBMkI7TUFDakhpQixTQUFTLEVBQUVaLDBCQUEwQixDQUFDYSxtQkFBbUIsQ0FBQyxDQUFDO01BQzNEQyxLQUFLLEVBQUVmLDJCQUEyQixDQUFDZ0IsY0FBYztNQUNqRFIsTUFBTSxFQUFFQSxNQUFNLENBQUNTLFlBQVksQ0FBRSxvQkFBcUI7SUFDcEQsQ0FBQyxFQUFFUixjQUFlLENBQUUsQ0FBQztJQUVyQixNQUFNUyxvQkFBb0IsR0FBRyxJQUFJbkIsZ0JBQWdCLENBQUVNLGFBQWEsRUFBRUMsVUFBVSxFQUFFVixjQUFjLENBQTJCO01BQ3JIaUIsU0FBUyxFQUFFWiwwQkFBMEIsQ0FBQ2tCLHFCQUFxQixDQUFDLENBQUM7TUFDN0RKLEtBQUssRUFBRWYsMkJBQTJCLENBQUNvQixjQUFjO01BQ2pEWixNQUFNLEVBQUVBLE1BQU0sQ0FBQ1MsWUFBWSxDQUFFLG9CQUFxQjtJQUNwRCxDQUFDLEVBQUVSLGNBQWUsQ0FBRSxDQUFDO0lBRXJCLEtBQUssQ0FDSCxJQUFJWixJQUFJLENBQUU7TUFDUndCLFFBQVEsRUFBRSxDQUFFVCxrQkFBa0IsQ0FBRTtNQUNoQ1UsZUFBZSxFQUFFM0IsZUFBZSxDQUFDNEIsR0FBRyxDQUFFLENBQUVuQixXQUFXLENBQUNrQixlQUFlLEVBQUVWLGtCQUFrQixDQUFDVSxlQUFlLENBQUc7SUFDNUcsQ0FBRSxDQUFDLEVBQ0gsSUFBSXpCLElBQUksQ0FBRTtNQUNSd0IsUUFBUSxFQUFFLENBQUVILG9CQUFvQixDQUFFO01BQ2xDSSxlQUFlLEVBQUUzQixlQUFlLENBQUM0QixHQUFHLENBQUUsQ0FBRWxCLGFBQWEsQ0FBQ2lCLGVBQWUsRUFBRUosb0JBQW9CLENBQUNJLGVBQWUsQ0FBRztJQUNoSCxDQUFFLENBQ0osQ0FBQztFQUNIO0FBQ0Y7QUFFQXhCLHFCQUFxQixDQUFDMEIsUUFBUSxDQUFFLDhCQUE4QixFQUFFdEIsNEJBQTZCLENBQUMifQ==