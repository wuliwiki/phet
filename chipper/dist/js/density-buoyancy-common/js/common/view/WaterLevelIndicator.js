// Copyright 2019-2023, University of Colorado Boulder

/**
 * Shows the water level numerically next to the top-left of the pool's water. Lives for the lifetime of the sim.
 *
 * @author Jonathan Olson <jonathan.olson@colorado.edu>
 */

import { Shape } from '../../../../kite/js/imports.js';
import PatternStringProperty from '../../../../axon/js/PatternStringProperty.js';
import PhetFont from '../../../../scenery-phet/js/PhetFont.js';
import { ManualConstraint, Node, Path, RichText } from '../../../../scenery/js/imports.js';
import Panel from '../../../../sun/js/Panel.js';
import densityBuoyancyCommon from '../../densityBuoyancyCommon.js';
import DensityBuoyancyCommonConstants from '../DensityBuoyancyCommonConstants.js';
import DensityBuoyancyCommonColors from './DensityBuoyancyCommonColors.js';
export default class WaterLevelIndicator extends Node {
  constructor(volumeProperty) {
    super();
    const highlightShape = new Shape().moveTo(0, 0).lineTo(-20, -10).lineTo(-20, 10).close();
    const highlightPath = new Path(highlightShape, {
      fill: DensityBuoyancyCommonColors.waterIndicatorHighlightProperty
    });
    this.addChild(highlightPath);

    // This instance lives for the lifetime of the simulation, so we don't need to remove this listener
    const readoutText = new RichText(new PatternStringProperty(DensityBuoyancyCommonConstants.VOLUME_PATTERN_STRING_PROPERTY, {
      value: volumeProperty
    }, {
      maps: {
        value: volume => 1000 * volume
      },
      decimalPlaces: 2
    }), {
      font: new PhetFont({
        size: 18
      }),
      maxWidth: 200
    });
    const readoutPanel = new Panel(readoutText, {
      // Not using the typical margins for UI panels in this sim
      cornerRadius: DensityBuoyancyCommonConstants.CORNER_RADIUS
    });
    this.addChild(readoutPanel);
    ManualConstraint.create(this, [readoutPanel, highlightPath], (readoutWrapper, highlightWrapper) => {
      readoutWrapper.rightCenter = highlightWrapper.leftCenter;
    });
  }
}
densityBuoyancyCommon.register('WaterLevelIndicator', WaterLevelIndicator);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTaGFwZSIsIlBhdHRlcm5TdHJpbmdQcm9wZXJ0eSIsIlBoZXRGb250IiwiTWFudWFsQ29uc3RyYWludCIsIk5vZGUiLCJQYXRoIiwiUmljaFRleHQiLCJQYW5lbCIsImRlbnNpdHlCdW95YW5jeUNvbW1vbiIsIkRlbnNpdHlCdW95YW5jeUNvbW1vbkNvbnN0YW50cyIsIkRlbnNpdHlCdW95YW5jeUNvbW1vbkNvbG9ycyIsIldhdGVyTGV2ZWxJbmRpY2F0b3IiLCJjb25zdHJ1Y3RvciIsInZvbHVtZVByb3BlcnR5IiwiaGlnaGxpZ2h0U2hhcGUiLCJtb3ZlVG8iLCJsaW5lVG8iLCJjbG9zZSIsImhpZ2hsaWdodFBhdGgiLCJmaWxsIiwid2F0ZXJJbmRpY2F0b3JIaWdobGlnaHRQcm9wZXJ0eSIsImFkZENoaWxkIiwicmVhZG91dFRleHQiLCJWT0xVTUVfUEFUVEVSTl9TVFJJTkdfUFJPUEVSVFkiLCJ2YWx1ZSIsIm1hcHMiLCJ2b2x1bWUiLCJkZWNpbWFsUGxhY2VzIiwiZm9udCIsInNpemUiLCJtYXhXaWR0aCIsInJlYWRvdXRQYW5lbCIsImNvcm5lclJhZGl1cyIsIkNPUk5FUl9SQURJVVMiLCJjcmVhdGUiLCJyZWFkb3V0V3JhcHBlciIsImhpZ2hsaWdodFdyYXBwZXIiLCJyaWdodENlbnRlciIsImxlZnRDZW50ZXIiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIldhdGVyTGV2ZWxJbmRpY2F0b3IudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTktMjAyMywgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogU2hvd3MgdGhlIHdhdGVyIGxldmVsIG51bWVyaWNhbGx5IG5leHQgdG8gdGhlIHRvcC1sZWZ0IG9mIHRoZSBwb29sJ3Mgd2F0ZXIuIExpdmVzIGZvciB0aGUgbGlmZXRpbWUgb2YgdGhlIHNpbS5cclxuICpcclxuICogQGF1dGhvciBKb25hdGhhbiBPbHNvbiA8am9uYXRoYW4ub2xzb25AY29sb3JhZG8uZWR1PlxyXG4gKi9cclxuXHJcbmltcG9ydCBUUmVhZE9ubHlQcm9wZXJ0eSBmcm9tICcuLi8uLi8uLi8uLi9heG9uL2pzL1RSZWFkT25seVByb3BlcnR5LmpzJztcclxuaW1wb3J0IHsgU2hhcGUgfSBmcm9tICcuLi8uLi8uLi8uLi9raXRlL2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgUGF0dGVyblN0cmluZ1Byb3BlcnR5IGZyb20gJy4uLy4uLy4uLy4uL2F4b24vanMvUGF0dGVyblN0cmluZ1Byb3BlcnR5LmpzJztcclxuaW1wb3J0IFBoZXRGb250IGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnktcGhldC9qcy9QaGV0Rm9udC5qcyc7XHJcbmltcG9ydCB7IE1hbnVhbENvbnN0cmFpbnQsIE5vZGUsIFBhdGgsIFJpY2hUZXh0IH0gZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IFBhbmVsIGZyb20gJy4uLy4uLy4uLy4uL3N1bi9qcy9QYW5lbC5qcyc7XHJcbmltcG9ydCBkZW5zaXR5QnVveWFuY3lDb21tb24gZnJvbSAnLi4vLi4vZGVuc2l0eUJ1b3lhbmN5Q29tbW9uLmpzJztcclxuaW1wb3J0IERlbnNpdHlCdW95YW5jeUNvbW1vbkNvbnN0YW50cyBmcm9tICcuLi9EZW5zaXR5QnVveWFuY3lDb21tb25Db25zdGFudHMuanMnO1xyXG5pbXBvcnQgRGVuc2l0eUJ1b3lhbmN5Q29tbW9uQ29sb3JzIGZyb20gJy4vRGVuc2l0eUJ1b3lhbmN5Q29tbW9uQ29sb3JzLmpzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFdhdGVyTGV2ZWxJbmRpY2F0b3IgZXh0ZW5kcyBOb2RlIHtcclxuICBwdWJsaWMgY29uc3RydWN0b3IoIHZvbHVtZVByb3BlcnR5OiBUUmVhZE9ubHlQcm9wZXJ0eTxudW1iZXI+ICkge1xyXG4gICAgc3VwZXIoKTtcclxuXHJcbiAgICBjb25zdCBoaWdobGlnaHRTaGFwZSA9IG5ldyBTaGFwZSgpLm1vdmVUbyggMCwgMCApLmxpbmVUbyggLTIwLCAtMTAgKS5saW5lVG8oIC0yMCwgMTAgKS5jbG9zZSgpO1xyXG4gICAgY29uc3QgaGlnaGxpZ2h0UGF0aCA9IG5ldyBQYXRoKCBoaWdobGlnaHRTaGFwZSwge1xyXG4gICAgICBmaWxsOiBEZW5zaXR5QnVveWFuY3lDb21tb25Db2xvcnMud2F0ZXJJbmRpY2F0b3JIaWdobGlnaHRQcm9wZXJ0eVxyXG4gICAgfSApO1xyXG4gICAgdGhpcy5hZGRDaGlsZCggaGlnaGxpZ2h0UGF0aCApO1xyXG5cclxuICAgIC8vIFRoaXMgaW5zdGFuY2UgbGl2ZXMgZm9yIHRoZSBsaWZldGltZSBvZiB0aGUgc2ltdWxhdGlvbiwgc28gd2UgZG9uJ3QgbmVlZCB0byByZW1vdmUgdGhpcyBsaXN0ZW5lclxyXG4gICAgY29uc3QgcmVhZG91dFRleHQgPSBuZXcgUmljaFRleHQoIG5ldyBQYXR0ZXJuU3RyaW5nUHJvcGVydHkoIERlbnNpdHlCdW95YW5jeUNvbW1vbkNvbnN0YW50cy5WT0xVTUVfUEFUVEVSTl9TVFJJTkdfUFJPUEVSVFksIHtcclxuICAgICAgdmFsdWU6IHZvbHVtZVByb3BlcnR5XHJcbiAgICB9LCB7XHJcbiAgICAgIG1hcHM6IHtcclxuICAgICAgICB2YWx1ZTogKCB2b2x1bWU6IG51bWJlciApID0+IDEwMDAgKiB2b2x1bWVcclxuICAgICAgfSxcclxuICAgICAgZGVjaW1hbFBsYWNlczogMlxyXG4gICAgfSApLCB7XHJcbiAgICAgIGZvbnQ6IG5ldyBQaGV0Rm9udCggeyBzaXplOiAxOCB9ICksXHJcbiAgICAgIG1heFdpZHRoOiAyMDBcclxuICAgIH0gKTtcclxuXHJcbiAgICBjb25zdCByZWFkb3V0UGFuZWwgPSBuZXcgUGFuZWwoIHJlYWRvdXRUZXh0LCB7XHJcbiAgICAgIC8vIE5vdCB1c2luZyB0aGUgdHlwaWNhbCBtYXJnaW5zIGZvciBVSSBwYW5lbHMgaW4gdGhpcyBzaW1cclxuICAgICAgY29ybmVyUmFkaXVzOiBEZW5zaXR5QnVveWFuY3lDb21tb25Db25zdGFudHMuQ09STkVSX1JBRElVU1xyXG4gICAgfSApO1xyXG4gICAgdGhpcy5hZGRDaGlsZCggcmVhZG91dFBhbmVsICk7XHJcblxyXG4gICAgTWFudWFsQ29uc3RyYWludC5jcmVhdGUoIHRoaXMsIFsgcmVhZG91dFBhbmVsLCBoaWdobGlnaHRQYXRoIF0sICggcmVhZG91dFdyYXBwZXIsIGhpZ2hsaWdodFdyYXBwZXIgKSA9PiB7XHJcbiAgICAgIHJlYWRvdXRXcmFwcGVyLnJpZ2h0Q2VudGVyID0gaGlnaGxpZ2h0V3JhcHBlci5sZWZ0Q2VudGVyO1xyXG4gICAgfSApO1xyXG4gIH1cclxufVxyXG5cclxuZGVuc2l0eUJ1b3lhbmN5Q29tbW9uLnJlZ2lzdGVyKCAnV2F0ZXJMZXZlbEluZGljYXRvcicsIFdhdGVyTGV2ZWxJbmRpY2F0b3IgKTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUdBLFNBQVNBLEtBQUssUUFBUSxnQ0FBZ0M7QUFDdEQsT0FBT0MscUJBQXFCLE1BQU0sOENBQThDO0FBQ2hGLE9BQU9DLFFBQVEsTUFBTSx5Q0FBeUM7QUFDOUQsU0FBU0MsZ0JBQWdCLEVBQUVDLElBQUksRUFBRUMsSUFBSSxFQUFFQyxRQUFRLFFBQVEsbUNBQW1DO0FBQzFGLE9BQU9DLEtBQUssTUFBTSw2QkFBNkI7QUFDL0MsT0FBT0MscUJBQXFCLE1BQU0sZ0NBQWdDO0FBQ2xFLE9BQU9DLDhCQUE4QixNQUFNLHNDQUFzQztBQUNqRixPQUFPQywyQkFBMkIsTUFBTSxrQ0FBa0M7QUFFMUUsZUFBZSxNQUFNQyxtQkFBbUIsU0FBU1AsSUFBSSxDQUFDO0VBQzdDUSxXQUFXQSxDQUFFQyxjQUF5QyxFQUFHO0lBQzlELEtBQUssQ0FBQyxDQUFDO0lBRVAsTUFBTUMsY0FBYyxHQUFHLElBQUlkLEtBQUssQ0FBQyxDQUFDLENBQUNlLE1BQU0sQ0FBRSxDQUFDLEVBQUUsQ0FBRSxDQUFDLENBQUNDLE1BQU0sQ0FBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUcsQ0FBQyxDQUFDQSxNQUFNLENBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRyxDQUFDLENBQUNDLEtBQUssQ0FBQyxDQUFDO0lBQzlGLE1BQU1DLGFBQWEsR0FBRyxJQUFJYixJQUFJLENBQUVTLGNBQWMsRUFBRTtNQUM5Q0ssSUFBSSxFQUFFVCwyQkFBMkIsQ0FBQ1U7SUFDcEMsQ0FBRSxDQUFDO0lBQ0gsSUFBSSxDQUFDQyxRQUFRLENBQUVILGFBQWMsQ0FBQzs7SUFFOUI7SUFDQSxNQUFNSSxXQUFXLEdBQUcsSUFBSWhCLFFBQVEsQ0FBRSxJQUFJTCxxQkFBcUIsQ0FBRVEsOEJBQThCLENBQUNjLDhCQUE4QixFQUFFO01BQzFIQyxLQUFLLEVBQUVYO0lBQ1QsQ0FBQyxFQUFFO01BQ0RZLElBQUksRUFBRTtRQUNKRCxLQUFLLEVBQUlFLE1BQWMsSUFBTSxJQUFJLEdBQUdBO01BQ3RDLENBQUM7TUFDREMsYUFBYSxFQUFFO0lBQ2pCLENBQUUsQ0FBQyxFQUFFO01BQ0hDLElBQUksRUFBRSxJQUFJMUIsUUFBUSxDQUFFO1FBQUUyQixJQUFJLEVBQUU7TUFBRyxDQUFFLENBQUM7TUFDbENDLFFBQVEsRUFBRTtJQUNaLENBQUUsQ0FBQztJQUVILE1BQU1DLFlBQVksR0FBRyxJQUFJeEIsS0FBSyxDQUFFZSxXQUFXLEVBQUU7TUFDM0M7TUFDQVUsWUFBWSxFQUFFdkIsOEJBQThCLENBQUN3QjtJQUMvQyxDQUFFLENBQUM7SUFDSCxJQUFJLENBQUNaLFFBQVEsQ0FBRVUsWUFBYSxDQUFDO0lBRTdCNUIsZ0JBQWdCLENBQUMrQixNQUFNLENBQUUsSUFBSSxFQUFFLENBQUVILFlBQVksRUFBRWIsYUFBYSxDQUFFLEVBQUUsQ0FBRWlCLGNBQWMsRUFBRUMsZ0JBQWdCLEtBQU07TUFDdEdELGNBQWMsQ0FBQ0UsV0FBVyxHQUFHRCxnQkFBZ0IsQ0FBQ0UsVUFBVTtJQUMxRCxDQUFFLENBQUM7RUFDTDtBQUNGO0FBRUE5QixxQkFBcUIsQ0FBQytCLFFBQVEsQ0FBRSxxQkFBcUIsRUFBRTVCLG1CQUFvQixDQUFDIn0=