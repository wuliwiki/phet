// Copyright 2021-2022, University of Colorado Boulder

/**
 * QUnit tests for ResponsePacket
 *
 * @author Michael Kauzmann (PhET Interactive Simulations)
 */

import ResponsePacket from './ResponsePacket.js';
QUnit.module('ResponsePacket');
QUnit.test('ResponsePacket.copy()', async assert => {
  let x = new ResponsePacket({
    nameResponse: 'nameResponse',
    objectResponse: 'objectResponse',
    contextResponse: 'contextResponse'
  });
  const testIt = message => {
    assert.ok(x.nameResponse === 'nameResponse', `nameResponse: ${message}`);
    assert.ok(x.objectResponse === 'objectResponse', `objectResponse: ${message}`);
    assert.ok(x.contextResponse === 'contextResponse', `contextResponse: ${message}`);
    assert.ok(x.hintResponse === null, `hintResponse: ${message}`);
    assert.ok(x.ignoreProperties === new ResponsePacket().ignoreProperties, `ignoreProperties: ${message}`);
  };
  testIt('fromConstructor');
  x = x.copy();
  testIt('fromCopy');
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZXNwb25zZVBhY2tldCIsIlFVbml0IiwibW9kdWxlIiwidGVzdCIsImFzc2VydCIsIngiLCJuYW1lUmVzcG9uc2UiLCJvYmplY3RSZXNwb25zZSIsImNvbnRleHRSZXNwb25zZSIsInRlc3RJdCIsIm1lc3NhZ2UiLCJvayIsImhpbnRSZXNwb25zZSIsImlnbm9yZVByb3BlcnRpZXMiLCJjb3B5Il0sInNvdXJjZXMiOlsiUmVzcG9uc2VQYWNrZXRUZXN0cy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDIyLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBRVW5pdCB0ZXN0cyBmb3IgUmVzcG9uc2VQYWNrZXRcclxuICpcclxuICogQGF1dGhvciBNaWNoYWVsIEthdXptYW5uIChQaEVUIEludGVyYWN0aXZlIFNpbXVsYXRpb25zKVxyXG4gKi9cclxuXHJcbmltcG9ydCBSZXNwb25zZVBhY2tldCBmcm9tICcuL1Jlc3BvbnNlUGFja2V0LmpzJztcclxuXHJcblFVbml0Lm1vZHVsZSggJ1Jlc3BvbnNlUGFja2V0JyApO1xyXG5cclxuUVVuaXQudGVzdCggJ1Jlc3BvbnNlUGFja2V0LmNvcHkoKScsIGFzeW5jIGFzc2VydCA9PiB7XHJcblxyXG4gIGxldCB4ID0gbmV3IFJlc3BvbnNlUGFja2V0KCB7XHJcbiAgICBuYW1lUmVzcG9uc2U6ICduYW1lUmVzcG9uc2UnLFxyXG4gICAgb2JqZWN0UmVzcG9uc2U6ICdvYmplY3RSZXNwb25zZScsXHJcbiAgICBjb250ZXh0UmVzcG9uc2U6ICdjb250ZXh0UmVzcG9uc2UnXHJcbiAgfSApO1xyXG5cclxuICBjb25zdCB0ZXN0SXQgPSAoIG1lc3NhZ2U6IHN0cmluZyApID0+IHtcclxuXHJcbiAgICBhc3NlcnQub2soIHgubmFtZVJlc3BvbnNlID09PSAnbmFtZVJlc3BvbnNlJywgYG5hbWVSZXNwb25zZTogJHttZXNzYWdlfWAgKTtcclxuICAgIGFzc2VydC5vayggeC5vYmplY3RSZXNwb25zZSA9PT0gJ29iamVjdFJlc3BvbnNlJywgYG9iamVjdFJlc3BvbnNlOiAke21lc3NhZ2V9YCApO1xyXG4gICAgYXNzZXJ0Lm9rKCB4LmNvbnRleHRSZXNwb25zZSA9PT0gJ2NvbnRleHRSZXNwb25zZScsIGBjb250ZXh0UmVzcG9uc2U6ICR7bWVzc2FnZX1gICk7XHJcbiAgICBhc3NlcnQub2soIHguaGludFJlc3BvbnNlID09PSBudWxsLCBgaGludFJlc3BvbnNlOiAke21lc3NhZ2V9YCApO1xyXG4gICAgYXNzZXJ0Lm9rKCB4Lmlnbm9yZVByb3BlcnRpZXMgPT09IG5ldyBSZXNwb25zZVBhY2tldCgpLmlnbm9yZVByb3BlcnRpZXMsIGBpZ25vcmVQcm9wZXJ0aWVzOiAke21lc3NhZ2V9YCApO1xyXG4gIH07XHJcblxyXG4gIHRlc3RJdCggJ2Zyb21Db25zdHJ1Y3RvcicgKTtcclxuXHJcbiAgeCA9IHguY29weSgpO1xyXG5cclxuICB0ZXN0SXQoICdmcm9tQ29weScgKTtcclxufSApO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsY0FBYyxNQUFNLHFCQUFxQjtBQUVoREMsS0FBSyxDQUFDQyxNQUFNLENBQUUsZ0JBQWlCLENBQUM7QUFFaENELEtBQUssQ0FBQ0UsSUFBSSxDQUFFLHVCQUF1QixFQUFFLE1BQU1DLE1BQU0sSUFBSTtFQUVuRCxJQUFJQyxDQUFDLEdBQUcsSUFBSUwsY0FBYyxDQUFFO0lBQzFCTSxZQUFZLEVBQUUsY0FBYztJQUM1QkMsY0FBYyxFQUFFLGdCQUFnQjtJQUNoQ0MsZUFBZSxFQUFFO0VBQ25CLENBQUUsQ0FBQztFQUVILE1BQU1DLE1BQU0sR0FBS0MsT0FBZSxJQUFNO0lBRXBDTixNQUFNLENBQUNPLEVBQUUsQ0FBRU4sQ0FBQyxDQUFDQyxZQUFZLEtBQUssY0FBYyxFQUFHLGlCQUFnQkksT0FBUSxFQUFFLENBQUM7SUFDMUVOLE1BQU0sQ0FBQ08sRUFBRSxDQUFFTixDQUFDLENBQUNFLGNBQWMsS0FBSyxnQkFBZ0IsRUFBRyxtQkFBa0JHLE9BQVEsRUFBRSxDQUFDO0lBQ2hGTixNQUFNLENBQUNPLEVBQUUsQ0FBRU4sQ0FBQyxDQUFDRyxlQUFlLEtBQUssaUJBQWlCLEVBQUcsb0JBQW1CRSxPQUFRLEVBQUUsQ0FBQztJQUNuRk4sTUFBTSxDQUFDTyxFQUFFLENBQUVOLENBQUMsQ0FBQ08sWUFBWSxLQUFLLElBQUksRUFBRyxpQkFBZ0JGLE9BQVEsRUFBRSxDQUFDO0lBQ2hFTixNQUFNLENBQUNPLEVBQUUsQ0FBRU4sQ0FBQyxDQUFDUSxnQkFBZ0IsS0FBSyxJQUFJYixjQUFjLENBQUMsQ0FBQyxDQUFDYSxnQkFBZ0IsRUFBRyxxQkFBb0JILE9BQVEsRUFBRSxDQUFDO0VBQzNHLENBQUM7RUFFREQsTUFBTSxDQUFFLGlCQUFrQixDQUFDO0VBRTNCSixDQUFDLEdBQUdBLENBQUMsQ0FBQ1MsSUFBSSxDQUFDLENBQUM7RUFFWkwsTUFBTSxDQUFFLFVBQVcsQ0FBQztBQUN0QixDQUFFLENBQUMifQ==