// Copyright 2021-2022, University of Colorado Boulder

/**
 * Auto-generated from modulify, DO NOT manually modify.
 */
/* eslint-disable */
import getStringModule from '../../chipper/js/getStringModule.js';
import leastSquaresRegression from './leastSquaresRegression.js';
const LeastSquaresRegressionStrings = getStringModule('LEAST_SQUARES_REGRESSION');
leastSquaresRegression.register('LeastSquaresRegressionStrings', LeastSquaresRegressionStrings);
export default LeastSquaresRegressionStrings;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,