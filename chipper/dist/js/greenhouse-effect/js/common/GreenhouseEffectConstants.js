// Copyright 2020-2023, University of Colorado Boulder

/**
 * Constants used throughout this simulation.
 *
 * @author John Blanco
 */

import Dimension2 from '../../../dot/js/Dimension2.js';
import Vector2 from '../../../dot/js/Vector2.js';
import PhetFont from '../../../scenery-phet/js/PhetFont.js';
import greenhouseEffect from '../greenhouseEffect.js';
const GreenhouseEffectConstants = {
  // margins
  SCREEN_VIEW_X_MARGIN: 15,
  SCREEN_VIEW_Y_MARGIN: 10,
  // spacing between observation window and UI components to its right
  OBSERVATION_WINDOW_RIGHT_SPACING: 12,
  // font for titles used throughout the sim in panels and sections
  TITLE_FONT: new PhetFont({
    size: 16,
    weight: 'bold'
  }),
  // font used to label components throughout the sim
  LABEL_FONT: new PhetFont({
    size: 14
  }),
  // font used to label supplementary content
  CONTENT_FONT: new PhetFont({
    size: 12
  }),
  // The 2D span of the sunlight, width and depth, modeled in the first three screens.  Units are meters.  Think of this
  // like a sidewalk that extends from one side of the model to the other.
  SUNLIGHT_SPAN: new Dimension2(85000, 1),
  // wavelengths of light used, in meters
  VISIBLE_WAVELENGTH: 500E-9,
  INFRARED_WAVELENGTH: 10E-6,
  STEFAN_BOLTZMANN_CONSTANT: 5.670374419E-8,
  // This is the SI version, look it up for exact units.

  SPEED_OF_LIGHT: 9000,
  // in meters/s, obviously far slower than real light, chosen to look good

  // useful normalized vectors
  STRAIGHT_DOWN_NORMALIZED_VECTOR: new Vector2(0, -1),
  STRAIGHT_UP_NORMALIZED_VECTOR: new Vector2(0, 1),
  // miscellaneous shared constants
  MAX_DT: 0.1,
  // in seconds
  VERTICAL_SLIDER_THUMB_SIZE: new Dimension2(26, 13),
  HORIZONTAL_SLIDER_THUMB_SIZE: new Dimension2(13, 26)
};
greenhouseEffect.register('GreenhouseEffectConstants', GreenhouseEffectConstants);
export default GreenhouseEffectConstants;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJEaW1lbnNpb24yIiwiVmVjdG9yMiIsIlBoZXRGb250IiwiZ3JlZW5ob3VzZUVmZmVjdCIsIkdyZWVuaG91c2VFZmZlY3RDb25zdGFudHMiLCJTQ1JFRU5fVklFV19YX01BUkdJTiIsIlNDUkVFTl9WSUVXX1lfTUFSR0lOIiwiT0JTRVJWQVRJT05fV0lORE9XX1JJR0hUX1NQQUNJTkciLCJUSVRMRV9GT05UIiwic2l6ZSIsIndlaWdodCIsIkxBQkVMX0ZPTlQiLCJDT05URU5UX0ZPTlQiLCJTVU5MSUdIVF9TUEFOIiwiVklTSUJMRV9XQVZFTEVOR1RIIiwiSU5GUkFSRURfV0FWRUxFTkdUSCIsIlNURUZBTl9CT0xUWk1BTk5fQ09OU1RBTlQiLCJTUEVFRF9PRl9MSUdIVCIsIlNUUkFJR0hUX0RPV05fTk9STUFMSVpFRF9WRUNUT1IiLCJTVFJBSUdIVF9VUF9OT1JNQUxJWkVEX1ZFQ1RPUiIsIk1BWF9EVCIsIlZFUlRJQ0FMX1NMSURFUl9USFVNQl9TSVpFIiwiSE9SSVpPTlRBTF9TTElERVJfVEhVTUJfU0laRSIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiR3JlZW5ob3VzZUVmZmVjdENvbnN0YW50cy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMC0yMDIzLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBDb25zdGFudHMgdXNlZCB0aHJvdWdob3V0IHRoaXMgc2ltdWxhdGlvbi5cclxuICpcclxuICogQGF1dGhvciBKb2huIEJsYW5jb1xyXG4gKi9cclxuXHJcbmltcG9ydCBEaW1lbnNpb24yIGZyb20gJy4uLy4uLy4uL2RvdC9qcy9EaW1lbnNpb24yLmpzJztcclxuaW1wb3J0IFZlY3RvcjIgZnJvbSAnLi4vLi4vLi4vZG90L2pzL1ZlY3RvcjIuanMnO1xyXG5pbXBvcnQgUGhldEZvbnQgZnJvbSAnLi4vLi4vLi4vc2NlbmVyeS1waGV0L2pzL1BoZXRGb250LmpzJztcclxuaW1wb3J0IGdyZWVuaG91c2VFZmZlY3QgZnJvbSAnLi4vZ3JlZW5ob3VzZUVmZmVjdC5qcyc7XHJcblxyXG5jb25zdCBHcmVlbmhvdXNlRWZmZWN0Q29uc3RhbnRzID0ge1xyXG5cclxuICAvLyBtYXJnaW5zXHJcbiAgU0NSRUVOX1ZJRVdfWF9NQVJHSU46IDE1LFxyXG4gIFNDUkVFTl9WSUVXX1lfTUFSR0lOOiAxMCxcclxuXHJcbiAgLy8gc3BhY2luZyBiZXR3ZWVuIG9ic2VydmF0aW9uIHdpbmRvdyBhbmQgVUkgY29tcG9uZW50cyB0byBpdHMgcmlnaHRcclxuICBPQlNFUlZBVElPTl9XSU5ET1dfUklHSFRfU1BBQ0lORzogMTIsXHJcblxyXG4gIC8vIGZvbnQgZm9yIHRpdGxlcyB1c2VkIHRocm91Z2hvdXQgdGhlIHNpbSBpbiBwYW5lbHMgYW5kIHNlY3Rpb25zXHJcbiAgVElUTEVfRk9OVDogbmV3IFBoZXRGb250KCB7IHNpemU6IDE2LCB3ZWlnaHQ6ICdib2xkJyB9ICksXHJcblxyXG4gIC8vIGZvbnQgdXNlZCB0byBsYWJlbCBjb21wb25lbnRzIHRocm91Z2hvdXQgdGhlIHNpbVxyXG4gIExBQkVMX0ZPTlQ6IG5ldyBQaGV0Rm9udCggeyBzaXplOiAxNCB9ICksXHJcblxyXG4gIC8vIGZvbnQgdXNlZCB0byBsYWJlbCBzdXBwbGVtZW50YXJ5IGNvbnRlbnRcclxuICBDT05URU5UX0ZPTlQ6IG5ldyBQaGV0Rm9udCggeyBzaXplOiAxMiB9ICksXHJcblxyXG4gIC8vIFRoZSAyRCBzcGFuIG9mIHRoZSBzdW5saWdodCwgd2lkdGggYW5kIGRlcHRoLCBtb2RlbGVkIGluIHRoZSBmaXJzdCB0aHJlZSBzY3JlZW5zLiAgVW5pdHMgYXJlIG1ldGVycy4gIFRoaW5rIG9mIHRoaXNcclxuICAvLyBsaWtlIGEgc2lkZXdhbGsgdGhhdCBleHRlbmRzIGZyb20gb25lIHNpZGUgb2YgdGhlIG1vZGVsIHRvIHRoZSBvdGhlci5cclxuICBTVU5MSUdIVF9TUEFOOiBuZXcgRGltZW5zaW9uMiggODUwMDAsIDEgKSxcclxuXHJcbiAgLy8gd2F2ZWxlbmd0aHMgb2YgbGlnaHQgdXNlZCwgaW4gbWV0ZXJzXHJcbiAgVklTSUJMRV9XQVZFTEVOR1RIOiA1MDBFLTksXHJcbiAgSU5GUkFSRURfV0FWRUxFTkdUSDogMTBFLTYsXHJcblxyXG4gIFNURUZBTl9CT0xUWk1BTk5fQ09OU1RBTlQ6IDUuNjcwMzc0NDE5RS04LCAvLyBUaGlzIGlzIHRoZSBTSSB2ZXJzaW9uLCBsb29rIGl0IHVwIGZvciBleGFjdCB1bml0cy5cclxuXHJcbiAgU1BFRURfT0ZfTElHSFQ6IDkwMDAsIC8vIGluIG1ldGVycy9zLCBvYnZpb3VzbHkgZmFyIHNsb3dlciB0aGFuIHJlYWwgbGlnaHQsIGNob3NlbiB0byBsb29rIGdvb2RcclxuXHJcbiAgLy8gdXNlZnVsIG5vcm1hbGl6ZWQgdmVjdG9yc1xyXG4gIFNUUkFJR0hUX0RPV05fTk9STUFMSVpFRF9WRUNUT1I6IG5ldyBWZWN0b3IyKCAwLCAtMSApLFxyXG4gIFNUUkFJR0hUX1VQX05PUk1BTElaRURfVkVDVE9SOiBuZXcgVmVjdG9yMiggMCwgMSApLFxyXG5cclxuICAvLyBtaXNjZWxsYW5lb3VzIHNoYXJlZCBjb25zdGFudHNcclxuICBNQVhfRFQ6IDAuMSwgLy8gaW4gc2Vjb25kc1xyXG4gIFZFUlRJQ0FMX1NMSURFUl9USFVNQl9TSVpFOiBuZXcgRGltZW5zaW9uMiggMjYsIDEzICksXHJcbiAgSE9SSVpPTlRBTF9TTElERVJfVEhVTUJfU0laRTogbmV3IERpbWVuc2lvbjIoIDEzLCAyNiApXHJcbn07XHJcblxyXG5ncmVlbmhvdXNlRWZmZWN0LnJlZ2lzdGVyKCAnR3JlZW5ob3VzZUVmZmVjdENvbnN0YW50cycsIEdyZWVuaG91c2VFZmZlY3RDb25zdGFudHMgKTtcclxuZXhwb3J0IGRlZmF1bHQgR3JlZW5ob3VzZUVmZmVjdENvbnN0YW50czsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsVUFBVSxNQUFNLCtCQUErQjtBQUN0RCxPQUFPQyxPQUFPLE1BQU0sNEJBQTRCO0FBQ2hELE9BQU9DLFFBQVEsTUFBTSxzQ0FBc0M7QUFDM0QsT0FBT0MsZ0JBQWdCLE1BQU0sd0JBQXdCO0FBRXJELE1BQU1DLHlCQUF5QixHQUFHO0VBRWhDO0VBQ0FDLG9CQUFvQixFQUFFLEVBQUU7RUFDeEJDLG9CQUFvQixFQUFFLEVBQUU7RUFFeEI7RUFDQUMsZ0NBQWdDLEVBQUUsRUFBRTtFQUVwQztFQUNBQyxVQUFVLEVBQUUsSUFBSU4sUUFBUSxDQUFFO0lBQUVPLElBQUksRUFBRSxFQUFFO0lBQUVDLE1BQU0sRUFBRTtFQUFPLENBQUUsQ0FBQztFQUV4RDtFQUNBQyxVQUFVLEVBQUUsSUFBSVQsUUFBUSxDQUFFO0lBQUVPLElBQUksRUFBRTtFQUFHLENBQUUsQ0FBQztFQUV4QztFQUNBRyxZQUFZLEVBQUUsSUFBSVYsUUFBUSxDQUFFO0lBQUVPLElBQUksRUFBRTtFQUFHLENBQUUsQ0FBQztFQUUxQztFQUNBO0VBQ0FJLGFBQWEsRUFBRSxJQUFJYixVQUFVLENBQUUsS0FBSyxFQUFFLENBQUUsQ0FBQztFQUV6QztFQUNBYyxrQkFBa0IsRUFBRSxNQUFNO0VBQzFCQyxtQkFBbUIsRUFBRSxLQUFLO0VBRTFCQyx5QkFBeUIsRUFBRSxjQUFjO0VBQUU7O0VBRTNDQyxjQUFjLEVBQUUsSUFBSTtFQUFFOztFQUV0QjtFQUNBQywrQkFBK0IsRUFBRSxJQUFJakIsT0FBTyxDQUFFLENBQUMsRUFBRSxDQUFDLENBQUUsQ0FBQztFQUNyRGtCLDZCQUE2QixFQUFFLElBQUlsQixPQUFPLENBQUUsQ0FBQyxFQUFFLENBQUUsQ0FBQztFQUVsRDtFQUNBbUIsTUFBTSxFQUFFLEdBQUc7RUFBRTtFQUNiQywwQkFBMEIsRUFBRSxJQUFJckIsVUFBVSxDQUFFLEVBQUUsRUFBRSxFQUFHLENBQUM7RUFDcERzQiw0QkFBNEIsRUFBRSxJQUFJdEIsVUFBVSxDQUFFLEVBQUUsRUFBRSxFQUFHO0FBQ3ZELENBQUM7QUFFREcsZ0JBQWdCLENBQUNvQixRQUFRLENBQUUsMkJBQTJCLEVBQUVuQix5QkFBMEIsQ0FBQztBQUNuRixlQUFlQSx5QkFBeUIifQ==