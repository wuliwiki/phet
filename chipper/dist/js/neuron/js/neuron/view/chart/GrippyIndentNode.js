// Copyright 2014-2022, University of Colorado Boulder
/**
 /**
 * This node is meant to portray a small round indentation on a surface.  This is a modern user interface paradigm that
 * is intended to convey the concept of "gripability" (sp?), i.e. something that the user can click on and subsequently
 * grab.  This is meant to look somewhat 3D, much like etched borders do.
 *
 * @author John Blanco
 * @author Sharfudeen Ashraf (for Ghent University)
 */

import { Circle, Color, Node } from '../../../../../scenery/js/imports.js';
import neuron from '../../../neuron.js';

// constants
const STROKE_LINE_WIDTH = 0.5;
class GrippyIndentNode extends Node {
  /**
   * @param {number} diameter
   * @param {Color} baseColor
   */
  constructor(diameter, baseColor) {
    super();
    const baseDarkerColor = baseColor.darkerColor(0.9);
    const translucentDarkerColor = new Color(baseDarkerColor.getRed(), baseDarkerColor.getGreen(), baseDarkerColor.getBlue(), baseColor.getAlpha());
    const baseLighterColor = baseColor.brighterColor(0.9);
    const translucentBrighterColor = new Color(baseLighterColor.getRed(), baseLighterColor.getGreen(), baseLighterColor.getBlue(), baseColor.getAlpha());
    const radius = diameter / 2 - STROKE_LINE_WIDTH;
    this.addChild(new Circle(radius, {
      fill: translucentDarkerColor,
      stroke: translucentBrighterColor,
      lineWidth: STROKE_LINE_WIDTH
    }));
  }
}
neuron.register('GrippyIndentNode', GrippyIndentNode);
export default GrippyIndentNode;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJDaXJjbGUiLCJDb2xvciIsIk5vZGUiLCJuZXVyb24iLCJTVFJPS0VfTElORV9XSURUSCIsIkdyaXBweUluZGVudE5vZGUiLCJjb25zdHJ1Y3RvciIsImRpYW1ldGVyIiwiYmFzZUNvbG9yIiwiYmFzZURhcmtlckNvbG9yIiwiZGFya2VyQ29sb3IiLCJ0cmFuc2x1Y2VudERhcmtlckNvbG9yIiwiZ2V0UmVkIiwiZ2V0R3JlZW4iLCJnZXRCbHVlIiwiZ2V0QWxwaGEiLCJiYXNlTGlnaHRlckNvbG9yIiwiYnJpZ2h0ZXJDb2xvciIsInRyYW5zbHVjZW50QnJpZ2h0ZXJDb2xvciIsInJhZGl1cyIsImFkZENoaWxkIiwiZmlsbCIsInN0cm9rZSIsImxpbmVXaWR0aCIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiR3JpcHB5SW5kZW50Tm9kZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxNC0yMDIyLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuLyoqXHJcbiAvKipcclxuICogVGhpcyBub2RlIGlzIG1lYW50IHRvIHBvcnRyYXkgYSBzbWFsbCByb3VuZCBpbmRlbnRhdGlvbiBvbiBhIHN1cmZhY2UuICBUaGlzIGlzIGEgbW9kZXJuIHVzZXIgaW50ZXJmYWNlIHBhcmFkaWdtIHRoYXRcclxuICogaXMgaW50ZW5kZWQgdG8gY29udmV5IHRoZSBjb25jZXB0IG9mIFwiZ3JpcGFiaWxpdHlcIiAoc3A/KSwgaS5lLiBzb21ldGhpbmcgdGhhdCB0aGUgdXNlciBjYW4gY2xpY2sgb24gYW5kIHN1YnNlcXVlbnRseVxyXG4gKiBncmFiLiAgVGhpcyBpcyBtZWFudCB0byBsb29rIHNvbWV3aGF0IDNELCBtdWNoIGxpa2UgZXRjaGVkIGJvcmRlcnMgZG8uXHJcbiAqXHJcbiAqIEBhdXRob3IgSm9obiBCbGFuY29cclxuICogQGF1dGhvciBTaGFyZnVkZWVuIEFzaHJhZiAoZm9yIEdoZW50IFVuaXZlcnNpdHkpXHJcbiAqL1xyXG5cclxuaW1wb3J0IHsgQ2lyY2xlLCBDb2xvciwgTm9kZSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XHJcbmltcG9ydCBuZXVyb24gZnJvbSAnLi4vLi4vLi4vbmV1cm9uLmpzJztcclxuXHJcbi8vIGNvbnN0YW50c1xyXG5jb25zdCBTVFJPS0VfTElORV9XSURUSCA9IDAuNTtcclxuXHJcbmNsYXNzIEdyaXBweUluZGVudE5vZGUgZXh0ZW5kcyBOb2RlIHtcclxuXHJcbiAgLyoqXHJcbiAgICogQHBhcmFtIHtudW1iZXJ9IGRpYW1ldGVyXHJcbiAgICogQHBhcmFtIHtDb2xvcn0gYmFzZUNvbG9yXHJcbiAgICovXHJcbiAgY29uc3RydWN0b3IoIGRpYW1ldGVyLCBiYXNlQ29sb3IgKSB7XHJcblxyXG4gICAgc3VwZXIoKTtcclxuICAgIGNvbnN0IGJhc2VEYXJrZXJDb2xvciA9IGJhc2VDb2xvci5kYXJrZXJDb2xvciggMC45ICk7XHJcbiAgICBjb25zdCB0cmFuc2x1Y2VudERhcmtlckNvbG9yID0gbmV3IENvbG9yKCBiYXNlRGFya2VyQ29sb3IuZ2V0UmVkKCksIGJhc2VEYXJrZXJDb2xvci5nZXRHcmVlbigpLFxyXG4gICAgICBiYXNlRGFya2VyQ29sb3IuZ2V0Qmx1ZSgpLCBiYXNlQ29sb3IuZ2V0QWxwaGEoKSApO1xyXG4gICAgY29uc3QgYmFzZUxpZ2h0ZXJDb2xvciA9IGJhc2VDb2xvci5icmlnaHRlckNvbG9yKCAwLjkgKTtcclxuICAgIGNvbnN0IHRyYW5zbHVjZW50QnJpZ2h0ZXJDb2xvciA9IG5ldyBDb2xvciggYmFzZUxpZ2h0ZXJDb2xvci5nZXRSZWQoKSwgYmFzZUxpZ2h0ZXJDb2xvci5nZXRHcmVlbigpLFxyXG4gICAgICBiYXNlTGlnaHRlckNvbG9yLmdldEJsdWUoKSwgYmFzZUNvbG9yLmdldEFscGhhKCkgKTtcclxuICAgIGNvbnN0IHJhZGl1cyA9IGRpYW1ldGVyIC8gMiAtIFNUUk9LRV9MSU5FX1dJRFRIO1xyXG5cclxuICAgIHRoaXMuYWRkQ2hpbGQoIG5ldyBDaXJjbGUoIHJhZGl1cywge1xyXG4gICAgICBmaWxsOiB0cmFuc2x1Y2VudERhcmtlckNvbG9yLFxyXG4gICAgICBzdHJva2U6IHRyYW5zbHVjZW50QnJpZ2h0ZXJDb2xvcixcclxuICAgICAgbGluZVdpZHRoOiBTVFJPS0VfTElORV9XSURUSFxyXG4gICAgfSApICk7XHJcbiAgfVxyXG59XHJcblxyXG5uZXVyb24ucmVnaXN0ZXIoICdHcmlwcHlJbmRlbnROb2RlJywgR3JpcHB5SW5kZW50Tm9kZSApO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgR3JpcHB5SW5kZW50Tm9kZTsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFNBQVNBLE1BQU0sRUFBRUMsS0FBSyxFQUFFQyxJQUFJLFFBQVEsc0NBQXNDO0FBQzFFLE9BQU9DLE1BQU0sTUFBTSxvQkFBb0I7O0FBRXZDO0FBQ0EsTUFBTUMsaUJBQWlCLEdBQUcsR0FBRztBQUU3QixNQUFNQyxnQkFBZ0IsU0FBU0gsSUFBSSxDQUFDO0VBRWxDO0FBQ0Y7QUFDQTtBQUNBO0VBQ0VJLFdBQVdBLENBQUVDLFFBQVEsRUFBRUMsU0FBUyxFQUFHO0lBRWpDLEtBQUssQ0FBQyxDQUFDO0lBQ1AsTUFBTUMsZUFBZSxHQUFHRCxTQUFTLENBQUNFLFdBQVcsQ0FBRSxHQUFJLENBQUM7SUFDcEQsTUFBTUMsc0JBQXNCLEdBQUcsSUFBSVYsS0FBSyxDQUFFUSxlQUFlLENBQUNHLE1BQU0sQ0FBQyxDQUFDLEVBQUVILGVBQWUsQ0FBQ0ksUUFBUSxDQUFDLENBQUMsRUFDNUZKLGVBQWUsQ0FBQ0ssT0FBTyxDQUFDLENBQUMsRUFBRU4sU0FBUyxDQUFDTyxRQUFRLENBQUMsQ0FBRSxDQUFDO0lBQ25ELE1BQU1DLGdCQUFnQixHQUFHUixTQUFTLENBQUNTLGFBQWEsQ0FBRSxHQUFJLENBQUM7SUFDdkQsTUFBTUMsd0JBQXdCLEdBQUcsSUFBSWpCLEtBQUssQ0FBRWUsZ0JBQWdCLENBQUNKLE1BQU0sQ0FBQyxDQUFDLEVBQUVJLGdCQUFnQixDQUFDSCxRQUFRLENBQUMsQ0FBQyxFQUNoR0csZ0JBQWdCLENBQUNGLE9BQU8sQ0FBQyxDQUFDLEVBQUVOLFNBQVMsQ0FBQ08sUUFBUSxDQUFDLENBQUUsQ0FBQztJQUNwRCxNQUFNSSxNQUFNLEdBQUdaLFFBQVEsR0FBRyxDQUFDLEdBQUdILGlCQUFpQjtJQUUvQyxJQUFJLENBQUNnQixRQUFRLENBQUUsSUFBSXBCLE1BQU0sQ0FBRW1CLE1BQU0sRUFBRTtNQUNqQ0UsSUFBSSxFQUFFVixzQkFBc0I7TUFDNUJXLE1BQU0sRUFBRUosd0JBQXdCO01BQ2hDSyxTQUFTLEVBQUVuQjtJQUNiLENBQUUsQ0FBRSxDQUFDO0VBQ1A7QUFDRjtBQUVBRCxNQUFNLENBQUNxQixRQUFRLENBQUUsa0JBQWtCLEVBQUVuQixnQkFBaUIsQ0FBQztBQUV2RCxlQUFlQSxnQkFBZ0IifQ==