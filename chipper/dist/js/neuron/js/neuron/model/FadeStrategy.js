// Copyright 2014-2020, University of Colorado Boulder

/**
 * Abstract base class for fade strategies that can be used to fade model elements in and out.
 *
 * @author John Blanco
 * @Sharfudeen Ashraf (for Ghent University)
 */

import neuron from '../../neuron.js';
class FadeStrategy {
  constructor() {}

  /**
   * Fade the associated model element according to the specified amount of time and the nature of the strategy.
   * @protected
   */
  updateOpacity(fadableModelElement, dt) {
    throw new Error('updateOpacity should be implemented in descendant classes.');
  }

  /**
   * Get an indication of whether or not the model element that is associated with this strategy should continue to
   * exist.  This is generally used to figure out when to remove a model element that has faded away.
   * @public
   */
  shouldContinueExisting(fadableModelElement) {
    return true;
  }
}
neuron.register('FadeStrategy', FadeStrategy);
export default FadeStrategy;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJuZXVyb24iLCJGYWRlU3RyYXRlZ3kiLCJjb25zdHJ1Y3RvciIsInVwZGF0ZU9wYWNpdHkiLCJmYWRhYmxlTW9kZWxFbGVtZW50IiwiZHQiLCJFcnJvciIsInNob3VsZENvbnRpbnVlRXhpc3RpbmciLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIkZhZGVTdHJhdGVneS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxNC0yMDIwLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBBYnN0cmFjdCBiYXNlIGNsYXNzIGZvciBmYWRlIHN0cmF0ZWdpZXMgdGhhdCBjYW4gYmUgdXNlZCB0byBmYWRlIG1vZGVsIGVsZW1lbnRzIGluIGFuZCBvdXQuXHJcbiAqXHJcbiAqIEBhdXRob3IgSm9obiBCbGFuY29cclxuICogQFNoYXJmdWRlZW4gQXNocmFmIChmb3IgR2hlbnQgVW5pdmVyc2l0eSlcclxuICovXHJcblxyXG5pbXBvcnQgbmV1cm9uIGZyb20gJy4uLy4uL25ldXJvbi5qcyc7XHJcblxyXG5jbGFzcyBGYWRlU3RyYXRlZ3kge1xyXG5cclxuICBjb25zdHJ1Y3RvcigpIHt9XHJcblxyXG4gIC8qKlxyXG4gICAqIEZhZGUgdGhlIGFzc29jaWF0ZWQgbW9kZWwgZWxlbWVudCBhY2NvcmRpbmcgdG8gdGhlIHNwZWNpZmllZCBhbW91bnQgb2YgdGltZSBhbmQgdGhlIG5hdHVyZSBvZiB0aGUgc3RyYXRlZ3kuXHJcbiAgICogQHByb3RlY3RlZFxyXG4gICAqL1xyXG4gIHVwZGF0ZU9wYWNpdHkoIGZhZGFibGVNb2RlbEVsZW1lbnQsIGR0ICkge1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKCAndXBkYXRlT3BhY2l0eSBzaG91bGQgYmUgaW1wbGVtZW50ZWQgaW4gZGVzY2VuZGFudCBjbGFzc2VzLicgKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEdldCBhbiBpbmRpY2F0aW9uIG9mIHdoZXRoZXIgb3Igbm90IHRoZSBtb2RlbCBlbGVtZW50IHRoYXQgaXMgYXNzb2NpYXRlZCB3aXRoIHRoaXMgc3RyYXRlZ3kgc2hvdWxkIGNvbnRpbnVlIHRvXHJcbiAgICogZXhpc3QuICBUaGlzIGlzIGdlbmVyYWxseSB1c2VkIHRvIGZpZ3VyZSBvdXQgd2hlbiB0byByZW1vdmUgYSBtb2RlbCBlbGVtZW50IHRoYXQgaGFzIGZhZGVkIGF3YXkuXHJcbiAgICogQHB1YmxpY1xyXG4gICAqL1xyXG4gIHNob3VsZENvbnRpbnVlRXhpc3RpbmcoIGZhZGFibGVNb2RlbEVsZW1lbnQgKSB7XHJcbiAgICByZXR1cm4gdHJ1ZTtcclxuICB9XHJcbn1cclxuXHJcbm5ldXJvbi5yZWdpc3RlciggJ0ZhZGVTdHJhdGVneScsIEZhZGVTdHJhdGVneSApO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgRmFkZVN0cmF0ZWd5OyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLE1BQU0sTUFBTSxpQkFBaUI7QUFFcEMsTUFBTUMsWUFBWSxDQUFDO0VBRWpCQyxXQUFXQSxDQUFBLEVBQUcsQ0FBQzs7RUFFZjtBQUNGO0FBQ0E7QUFDQTtFQUNFQyxhQUFhQSxDQUFFQyxtQkFBbUIsRUFBRUMsRUFBRSxFQUFHO0lBQ3ZDLE1BQU0sSUFBSUMsS0FBSyxDQUFFLDREQUE2RCxDQUFDO0VBQ2pGOztFQUVBO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7RUFDRUMsc0JBQXNCQSxDQUFFSCxtQkFBbUIsRUFBRztJQUM1QyxPQUFPLElBQUk7RUFDYjtBQUNGO0FBRUFKLE1BQU0sQ0FBQ1EsUUFBUSxDQUFFLGNBQWMsRUFBRVAsWUFBYSxDQUFDO0FBRS9DLGVBQWVBLFlBQVkifQ==