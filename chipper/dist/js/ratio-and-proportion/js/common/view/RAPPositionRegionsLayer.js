// Copyright 2021-2022, University of Colorado Boulder

/**
 * Graphic to display the qualitative positional regions used for describing the position of the hands in each ratio half.
 *
 * @author Michael Kauzmann (PhET Interactive Simulations)
 */

import ratioAndProportion from '../../ratioAndProportion.js';
import { Line, Node, Text } from '../../../../scenery/js/imports.js';
import HandPositionsDescriber from './describers/HandPositionsDescriber.js';
import PhetFont from '../../../../scenery-phet/js/PhetFont.js';
class RAPPositionRegionsLayer extends Node {
  constructor(options) {
    super(options);

    // Temp values to start, updated on layout()
    this.totalWidth = 1000;
    this.totalHeight = 1000;
    this.labelsHeight = 1000;

    // Values are normalized, we are working from highest to lowest, so start with "1" so the top region has space.
    this.regionValues = [1].concat(HandPositionsDescriber.POSITION_REGIONS_DATA.map(data => data.lowerBound));
  }
  layout(width, height) {
    this.totalHeight = height;
    this.totalWidth = width;
    this.update();
  }
  update() {
    this.children = [];
    for (let i = 0; i < this.regionValues.length; i++) {
      const regionValue = this.regionValues[i];
      const nextRegionValue = this.regionValues[i + 1];
      const height = this.totalHeight - regionValue * this.totalHeight;
      this.addChild(new Line(0, height, this.totalWidth, height, {
        stroke: 'red'
      }));
      if (nextRegionValue !== undefined) {
        const centerOfRange = (this.totalHeight - nextRegionValue * this.totalHeight - height) / 2;
        const text = new Text(HandPositionsDescriber.POSITION_REGIONS_DATA[i].region, {
          centerY: height + centerOfRange,
          centerX: this.totalWidth / 2,
          stroke: 'black',
          font: new PhetFont(17)
        });
        this.labelsHeight = text.height;
        this.addChild(text);
      }
    }
  }
}
ratioAndProportion.register('RAPPositionRegionsLayer', RAPPositionRegionsLayer);
export default RAPPositionRegionsLayer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyYXRpb0FuZFByb3BvcnRpb24iLCJMaW5lIiwiTm9kZSIsIlRleHQiLCJIYW5kUG9zaXRpb25zRGVzY3JpYmVyIiwiUGhldEZvbnQiLCJSQVBQb3NpdGlvblJlZ2lvbnNMYXllciIsImNvbnN0cnVjdG9yIiwib3B0aW9ucyIsInRvdGFsV2lkdGgiLCJ0b3RhbEhlaWdodCIsImxhYmVsc0hlaWdodCIsInJlZ2lvblZhbHVlcyIsImNvbmNhdCIsIlBPU0lUSU9OX1JFR0lPTlNfREFUQSIsIm1hcCIsImRhdGEiLCJsb3dlckJvdW5kIiwibGF5b3V0Iiwid2lkdGgiLCJoZWlnaHQiLCJ1cGRhdGUiLCJjaGlsZHJlbiIsImkiLCJsZW5ndGgiLCJyZWdpb25WYWx1ZSIsIm5leHRSZWdpb25WYWx1ZSIsImFkZENoaWxkIiwic3Ryb2tlIiwidW5kZWZpbmVkIiwiY2VudGVyT2ZSYW5nZSIsInRleHQiLCJyZWdpb24iLCJjZW50ZXJZIiwiY2VudGVyWCIsImZvbnQiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIlJBUFBvc2l0aW9uUmVnaW9uc0xheWVyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjIsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIEdyYXBoaWMgdG8gZGlzcGxheSB0aGUgcXVhbGl0YXRpdmUgcG9zaXRpb25hbCByZWdpb25zIHVzZWQgZm9yIGRlc2NyaWJpbmcgdGhlIHBvc2l0aW9uIG9mIHRoZSBoYW5kcyBpbiBlYWNoIHJhdGlvIGhhbGYuXHJcbiAqXHJcbiAqIEBhdXRob3IgTWljaGFlbCBLYXV6bWFubiAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcclxuICovXHJcblxyXG5pbXBvcnQgcmF0aW9BbmRQcm9wb3J0aW9uIGZyb20gJy4uLy4uL3JhdGlvQW5kUHJvcG9ydGlvbi5qcyc7XHJcbmltcG9ydCB7IExpbmUsIE5vZGUsIE5vZGVPcHRpb25zLCBUZXh0IH0gZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IEhhbmRQb3NpdGlvbnNEZXNjcmliZXIgZnJvbSAnLi9kZXNjcmliZXJzL0hhbmRQb3NpdGlvbnNEZXNjcmliZXIuanMnO1xyXG5pbXBvcnQgUGhldEZvbnQgZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS1waGV0L2pzL1BoZXRGb250LmpzJztcclxuXHJcbmNsYXNzIFJBUFBvc2l0aW9uUmVnaW9uc0xheWVyIGV4dGVuZHMgTm9kZSB7XHJcblxyXG4gIHByaXZhdGUgdG90YWxXaWR0aDogbnVtYmVyO1xyXG4gIHByaXZhdGUgdG90YWxIZWlnaHQ6IG51bWJlcjtcclxuICBwdWJsaWMgbGFiZWxzSGVpZ2h0OiBudW1iZXI7XHJcbiAgcHJpdmF0ZSByZWdpb25WYWx1ZXM6IG51bWJlcltdO1xyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoIG9wdGlvbnM/OiBOb2RlT3B0aW9ucyApIHtcclxuXHJcbiAgICBzdXBlciggb3B0aW9ucyApO1xyXG5cclxuICAgIC8vIFRlbXAgdmFsdWVzIHRvIHN0YXJ0LCB1cGRhdGVkIG9uIGxheW91dCgpXHJcbiAgICB0aGlzLnRvdGFsV2lkdGggPSAxMDAwO1xyXG4gICAgdGhpcy50b3RhbEhlaWdodCA9IDEwMDA7XHJcbiAgICB0aGlzLmxhYmVsc0hlaWdodCA9IDEwMDA7XHJcblxyXG4gICAgLy8gVmFsdWVzIGFyZSBub3JtYWxpemVkLCB3ZSBhcmUgd29ya2luZyBmcm9tIGhpZ2hlc3QgdG8gbG93ZXN0LCBzbyBzdGFydCB3aXRoIFwiMVwiIHNvIHRoZSB0b3AgcmVnaW9uIGhhcyBzcGFjZS5cclxuICAgIHRoaXMucmVnaW9uVmFsdWVzID0gWyAxIF0uY29uY2F0KCBIYW5kUG9zaXRpb25zRGVzY3JpYmVyLlBPU0lUSU9OX1JFR0lPTlNfREFUQS5tYXAoIGRhdGEgPT4gZGF0YS5sb3dlckJvdW5kICkgKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBsYXlvdXQoIHdpZHRoOiBudW1iZXIsIGhlaWdodDogbnVtYmVyICk6IHZvaWQge1xyXG5cclxuICAgIHRoaXMudG90YWxIZWlnaHQgPSBoZWlnaHQ7XHJcbiAgICB0aGlzLnRvdGFsV2lkdGggPSB3aWR0aDtcclxuICAgIHRoaXMudXBkYXRlKCk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIHVwZGF0ZSgpOiB2b2lkIHtcclxuICAgIHRoaXMuY2hpbGRyZW4gPSBbXTtcclxuXHJcbiAgICBmb3IgKCBsZXQgaSA9IDA7IGkgPCB0aGlzLnJlZ2lvblZhbHVlcy5sZW5ndGg7IGkrKyApIHtcclxuICAgICAgY29uc3QgcmVnaW9uVmFsdWUgPSB0aGlzLnJlZ2lvblZhbHVlc1sgaSBdO1xyXG4gICAgICBjb25zdCBuZXh0UmVnaW9uVmFsdWU6IG51bWJlciA9IHRoaXMucmVnaW9uVmFsdWVzWyBpICsgMSBdO1xyXG4gICAgICBjb25zdCBoZWlnaHQgPSB0aGlzLnRvdGFsSGVpZ2h0IC0gKCByZWdpb25WYWx1ZSAqIHRoaXMudG90YWxIZWlnaHQgKTtcclxuICAgICAgdGhpcy5hZGRDaGlsZCggbmV3IExpbmUoIDAsIGhlaWdodCwgdGhpcy50b3RhbFdpZHRoLCBoZWlnaHQsIHsgc3Ryb2tlOiAncmVkJyB9ICkgKTtcclxuICAgICAgaWYgKCBuZXh0UmVnaW9uVmFsdWUgIT09IHVuZGVmaW5lZCApIHtcclxuICAgICAgICBjb25zdCBjZW50ZXJPZlJhbmdlID0gKCAoIHRoaXMudG90YWxIZWlnaHQgLSAoIG5leHRSZWdpb25WYWx1ZSAqIHRoaXMudG90YWxIZWlnaHQgKSApIC0gaGVpZ2h0ICkgLyAyO1xyXG4gICAgICAgIGNvbnN0IHRleHQgPSBuZXcgVGV4dCggSGFuZFBvc2l0aW9uc0Rlc2NyaWJlci5QT1NJVElPTl9SRUdJT05TX0RBVEFbIGkgXS5yZWdpb24sIHtcclxuICAgICAgICAgIGNlbnRlclk6IGhlaWdodCArIGNlbnRlck9mUmFuZ2UsXHJcbiAgICAgICAgICBjZW50ZXJYOiB0aGlzLnRvdGFsV2lkdGggLyAyLFxyXG4gICAgICAgICAgc3Ryb2tlOiAnYmxhY2snLFxyXG4gICAgICAgICAgZm9udDogbmV3IFBoZXRGb250KCAxNyApXHJcbiAgICAgICAgfSApO1xyXG4gICAgICAgIHRoaXMubGFiZWxzSGVpZ2h0ID0gdGV4dC5oZWlnaHQ7XHJcbiAgICAgICAgdGhpcy5hZGRDaGlsZCggdGV4dCApO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5yYXRpb0FuZFByb3BvcnRpb24ucmVnaXN0ZXIoICdSQVBQb3NpdGlvblJlZ2lvbnNMYXllcicsIFJBUFBvc2l0aW9uUmVnaW9uc0xheWVyICk7XHJcbmV4cG9ydCBkZWZhdWx0IFJBUFBvc2l0aW9uUmVnaW9uc0xheWVyOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxrQkFBa0IsTUFBTSw2QkFBNkI7QUFDNUQsU0FBU0MsSUFBSSxFQUFFQyxJQUFJLEVBQWVDLElBQUksUUFBUSxtQ0FBbUM7QUFDakYsT0FBT0Msc0JBQXNCLE1BQU0sd0NBQXdDO0FBQzNFLE9BQU9DLFFBQVEsTUFBTSx5Q0FBeUM7QUFFOUQsTUFBTUMsdUJBQXVCLFNBQVNKLElBQUksQ0FBQztFQU9sQ0ssV0FBV0EsQ0FBRUMsT0FBcUIsRUFBRztJQUUxQyxLQUFLLENBQUVBLE9BQVEsQ0FBQzs7SUFFaEI7SUFDQSxJQUFJLENBQUNDLFVBQVUsR0FBRyxJQUFJO0lBQ3RCLElBQUksQ0FBQ0MsV0FBVyxHQUFHLElBQUk7SUFDdkIsSUFBSSxDQUFDQyxZQUFZLEdBQUcsSUFBSTs7SUFFeEI7SUFDQSxJQUFJLENBQUNDLFlBQVksR0FBRyxDQUFFLENBQUMsQ0FBRSxDQUFDQyxNQUFNLENBQUVULHNCQUFzQixDQUFDVSxxQkFBcUIsQ0FBQ0MsR0FBRyxDQUFFQyxJQUFJLElBQUlBLElBQUksQ0FBQ0MsVUFBVyxDQUFFLENBQUM7RUFDakg7RUFFT0MsTUFBTUEsQ0FBRUMsS0FBYSxFQUFFQyxNQUFjLEVBQVM7SUFFbkQsSUFBSSxDQUFDVixXQUFXLEdBQUdVLE1BQU07SUFDekIsSUFBSSxDQUFDWCxVQUFVLEdBQUdVLEtBQUs7SUFDdkIsSUFBSSxDQUFDRSxNQUFNLENBQUMsQ0FBQztFQUNmO0VBRVFBLE1BQU1BLENBQUEsRUFBUztJQUNyQixJQUFJLENBQUNDLFFBQVEsR0FBRyxFQUFFO0lBRWxCLEtBQU0sSUFBSUMsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHLElBQUksQ0FBQ1gsWUFBWSxDQUFDWSxNQUFNLEVBQUVELENBQUMsRUFBRSxFQUFHO01BQ25ELE1BQU1FLFdBQVcsR0FBRyxJQUFJLENBQUNiLFlBQVksQ0FBRVcsQ0FBQyxDQUFFO01BQzFDLE1BQU1HLGVBQXVCLEdBQUcsSUFBSSxDQUFDZCxZQUFZLENBQUVXLENBQUMsR0FBRyxDQUFDLENBQUU7TUFDMUQsTUFBTUgsTUFBTSxHQUFHLElBQUksQ0FBQ1YsV0FBVyxHQUFLZSxXQUFXLEdBQUcsSUFBSSxDQUFDZixXQUFhO01BQ3BFLElBQUksQ0FBQ2lCLFFBQVEsQ0FBRSxJQUFJMUIsSUFBSSxDQUFFLENBQUMsRUFBRW1CLE1BQU0sRUFBRSxJQUFJLENBQUNYLFVBQVUsRUFBRVcsTUFBTSxFQUFFO1FBQUVRLE1BQU0sRUFBRTtNQUFNLENBQUUsQ0FBRSxDQUFDO01BQ2xGLElBQUtGLGVBQWUsS0FBS0csU0FBUyxFQUFHO1FBQ25DLE1BQU1DLGFBQWEsR0FBRyxDQUFJLElBQUksQ0FBQ3BCLFdBQVcsR0FBS2dCLGVBQWUsR0FBRyxJQUFJLENBQUNoQixXQUFhLEdBQUtVLE1BQU0sSUFBSyxDQUFDO1FBQ3BHLE1BQU1XLElBQUksR0FBRyxJQUFJNUIsSUFBSSxDQUFFQyxzQkFBc0IsQ0FBQ1UscUJBQXFCLENBQUVTLENBQUMsQ0FBRSxDQUFDUyxNQUFNLEVBQUU7VUFDL0VDLE9BQU8sRUFBRWIsTUFBTSxHQUFHVSxhQUFhO1VBQy9CSSxPQUFPLEVBQUUsSUFBSSxDQUFDekIsVUFBVSxHQUFHLENBQUM7VUFDNUJtQixNQUFNLEVBQUUsT0FBTztVQUNmTyxJQUFJLEVBQUUsSUFBSTlCLFFBQVEsQ0FBRSxFQUFHO1FBQ3pCLENBQUUsQ0FBQztRQUNILElBQUksQ0FBQ00sWUFBWSxHQUFHb0IsSUFBSSxDQUFDWCxNQUFNO1FBQy9CLElBQUksQ0FBQ08sUUFBUSxDQUFFSSxJQUFLLENBQUM7TUFDdkI7SUFDRjtFQUNGO0FBQ0Y7QUFFQS9CLGtCQUFrQixDQUFDb0MsUUFBUSxDQUFFLHlCQUF5QixFQUFFOUIsdUJBQXdCLENBQUM7QUFDakYsZUFBZUEsdUJBQXVCIn0=