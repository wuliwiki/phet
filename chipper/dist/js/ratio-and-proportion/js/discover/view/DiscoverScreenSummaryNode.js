// Copyright 2020-2022, University of Colorado Boulder

/**
 * Node that holds the PDOM content for the screen summary in Ratio and Proportion. It also creates content for the voicing
 * overview buttons as appropriate.
 *
 * @author Michael Kauzmann (PhET Interactive Simulations)
 */

import StringUtils from '../../../../phetcommon/js/util/StringUtils.js';
import { Node } from '../../../../scenery/js/imports.js';
import ratioAndProportion from '../../ratioAndProportion.js';
import RatioAndProportionStrings from '../../RatioAndProportionStrings.js';
import BackgroundColorHandler from '../../common/view/BackgroundColorHandler.js';
import Multilink from '../../../../axon/js/Multilink.js';
class DiscoverScreenSummaryNode extends Node {
  constructor(ratioFitnessProperty, ratioTupleProperty, targetRatioProperty, tickMarkViewProperty, ratioDescriber, inProportionProperty, handPositionsDescriber, ratioToChallengeInfoMap) {
    const stateOfSimNode = new Node({
      tagName: 'p'
    });
    const leftHandBullet = new Node({
      tagName: 'li'
    });
    const rightHandBullet = new Node({
      tagName: 'li'
    });
    const descriptionBullets = new Node({
      tagName: 'ul',
      children: [leftHandBullet, rightHandBullet]
    });
    super({
      children: [new Node({
        tagName: 'p',
        innerContent: RatioAndProportionStrings.a11y.discover.screenSummary.paragraph1StringProperty
      }), new Node({
        tagName: 'p',
        innerContent: RatioAndProportionStrings.a11y.discover.screenSummary.paragraph2StringProperty
      }), new Node({
        tagName: 'p',
        innerContent: RatioAndProportionStrings.a11y.discover.screenSummary.paragraph3StringProperty
      }), stateOfSimNode, descriptionBullets, new Node({
        tagName: 'p',
        innerContent: RatioAndProportionStrings.a11y.discover.screenSummary.interactionHintStringProperty
      })]
    });
    this.handPositionsDescriber = handPositionsDescriber;
    this.ratioDescriber = ratioDescriber;
    this.targetRatioProperty = targetRatioProperty;
    this.tickMarkViewProperty = tickMarkViewProperty;
    this.ratioTupleProperty = ratioTupleProperty;
    this.ratioFitnessProperty = ratioFitnessProperty;
    this.inProportionProperty = inProportionProperty;
    this.ratioToChallengeInfoMap = ratioToChallengeInfoMap;

    // This derivedProperty is already dependent on all other dependencies for getStateOfSimString
    Multilink.multilink([targetRatioProperty, tickMarkViewProperty, ratioTupleProperty, ratioFitnessProperty, inProportionProperty], (targetRatio, tickMarkView) => {
      stateOfSimNode.innerContent = this.getStateOfSim();
      leftHandBullet.innerContent = this.getLeftHandState();
      rightHandBullet.innerContent = this.getRightHandState();
    });
  }
  getStateOfSim() {
    // TODO: PatternStringProperty when time, https://github.com/phetsims/ratio-and-proportion/issues/499
    return StringUtils.fillIn(RatioAndProportionStrings.a11y.screenSummaryQualitativeStateOfSimStringProperty, {
      color: BackgroundColorHandler.getCurrentColorRegion(this.ratioFitnessProperty.value, this.inProportionProperty.value),
      ratioFitness: this.ratioDescriber.getRatioFitness(false),
      currentChallenge: this.ratioToChallengeInfoMap.get(this.targetRatioProperty.value).lowercaseStringProperty,
      distance: this.handPositionsDescriber.getDistanceRegion(true)
    });
  }
  getLeftHandState() {
    // TODO: PatternStringProperty when time, https://github.com/phetsims/ratio-and-proportion/issues/499
    return StringUtils.fillIn(RatioAndProportionStrings.a11y.leftHandBulletStringProperty, {
      position: this.handPositionsDescriber.getHandPositionDescription(this.ratioTupleProperty.value.antecedent, this.tickMarkViewProperty.value)
    });
  }
  getRightHandState() {
    // TODO: PatternStringProperty when time, https://github.com/phetsims/ratio-and-proportion/issues/499
    return StringUtils.fillIn(RatioAndProportionStrings.a11y.rightHandBulletStringProperty, {
      position: this.handPositionsDescriber.getHandPositionDescription(this.ratioTupleProperty.value.consequent, this.tickMarkViewProperty.value)
    });
  }
  getDetailsButtonState() {
    // TODO: PatternStringProperty when time, https://github.com/phetsims/ratio-and-proportion/issues/499
    return StringUtils.fillIn(RatioAndProportionStrings.a11y.detailsButtonPatternStringProperty, {
      stateOfSim: this.getStateOfSim(),
      leftHand: this.getLeftHandState(),
      rightHand: this.getRightHandState()
    });
  }
}
ratioAndProportion.register('DiscoverScreenSummaryNode', DiscoverScreenSummaryNode);
export default DiscoverScreenSummaryNode;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,