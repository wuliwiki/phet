/* eslint-disable */
import asyncLoader from '../../../phet-core/js/asyncLoader.js';
import base64SoundToByteArray from '../../../tambo/js/base64SoundToByteArray.js';
import WrappedAudioBuffer from '../../../tambo/js/WrappedAudioBuffer.js';
import phetAudioContext from '../../../tambo/js/phetAudioContext.js';
const soundURI = 'data:audio/mpeg;base64,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';
const soundByteArray = base64SoundToByteArray(phetAudioContext, soundURI);
const unlock = asyncLoader.createLock(soundURI);
const wrappedAudioBuffer = new WrappedAudioBuffer();

// safe way to unlock
let unlocked = false;
const safeUnlock = () => {
  if (!unlocked) {
    unlock();
    unlocked = true;
  }
};
const onDecodeSuccess = decodedAudio => {
  if (wrappedAudioBuffer.audioBufferProperty.value === null) {
    wrappedAudioBuffer.audioBufferProperty.set(decodedAudio);
    safeUnlock();
  }
};
const onDecodeError = decodeError => {
  console.warn('decode of audio data failed, using stubbed sound, error: ' + decodeError);
  wrappedAudioBuffer.audioBufferProperty.set(phetAudioContext.createBuffer(1, 1, phetAudioContext.sampleRate));
  safeUnlock();
};
const decodePromise = phetAudioContext.decodeAudioData(soundByteArray.buffer, onDecodeSuccess, onDecodeError);
if (decodePromise) {
  decodePromise.then(decodedAudio => {
    if (wrappedAudioBuffer.audioBufferProperty.value === null) {
      wrappedAudioBuffer.audioBufferProperty.set(decodedAudio);
      safeUnlock();
    }
  }).catch(e => {
    console.warn('promise rejection caught for audio decode, error = ' + e);
    safeUnlock();
  });
}
export default wrappedAudioBuffer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhc3luY0xvYWRlciIsImJhc2U2NFNvdW5kVG9CeXRlQXJyYXkiLCJXcmFwcGVkQXVkaW9CdWZmZXIiLCJwaGV0QXVkaW9Db250ZXh0Iiwic291bmRVUkkiLCJzb3VuZEJ5dGVBcnJheSIsInVubG9jayIsImNyZWF0ZUxvY2siLCJ3cmFwcGVkQXVkaW9CdWZmZXIiLCJ1bmxvY2tlZCIsInNhZmVVbmxvY2siLCJvbkRlY29kZVN1Y2Nlc3MiLCJkZWNvZGVkQXVkaW8iLCJhdWRpb0J1ZmZlclByb3BlcnR5IiwidmFsdWUiLCJzZXQiLCJvbkRlY29kZUVycm9yIiwiZGVjb2RlRXJyb3IiLCJjb25zb2xlIiwid2FybiIsImNyZWF0ZUJ1ZmZlciIsInNhbXBsZVJhdGUiLCJkZWNvZGVQcm9taXNlIiwiZGVjb2RlQXVkaW9EYXRhIiwiYnVmZmVyIiwidGhlbiIsImNhdGNoIiwiZSJdLCJzb3VyY2VzIjpbInN0YWNjYXRvR19tcDMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgKi9cclxuaW1wb3J0IGFzeW5jTG9hZGVyIGZyb20gJy4uLy4uLy4uL3BoZXQtY29yZS9qcy9hc3luY0xvYWRlci5qcyc7XHJcbmltcG9ydCBiYXNlNjRTb3VuZFRvQnl0ZUFycmF5IGZyb20gJy4uLy4uLy4uL3RhbWJvL2pzL2Jhc2U2NFNvdW5kVG9CeXRlQXJyYXkuanMnO1xyXG5pbXBvcnQgV3JhcHBlZEF1ZGlvQnVmZmVyIGZyb20gJy4uLy4uLy4uL3RhbWJvL2pzL1dyYXBwZWRBdWRpb0J1ZmZlci5qcyc7XHJcbmltcG9ydCBwaGV0QXVkaW9Db250ZXh0IGZyb20gJy4uLy4uLy4uL3RhbWJvL2pzL3BoZXRBdWRpb0NvbnRleHQuanMnO1xyXG5cclxuY29uc3Qgc291bmRVUkkgPSAnZGF0YTphdWRpby9tcGVnO2Jhc2U2NCwvL3VReEFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBV0dsdVp3QUFBQThBQUFBSEFBQUdUZ0EzTnpjM056YzNOemMzTnpjM04yUmtaR1JrWkdSa1pHUmtaR1Jra0pDUWtKQ1FrSkNRa0pDUWtKQzN0N2UzdDdlM3Q3ZTN0N2UzdDdmVDA5UFQwOVBUMDlQVDA5UFQwK25wNmVucDZlbnA2ZW5wNmVucC8vLy8vLy8vLy8vLy8vLy8vLzhBQUFBNlRFRk5SVE11T1RseUFuRUFBQUFBQUFBQUFCUXdKQVg5UWdBQU1BQUFCazRKRFhYOEFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBLy90Z3hBQUFCdVE5TUhUMGdBS0pvK3YzTTRBQUFBWXdBWkhremVjNDlZdVo1ajRBSXdNWjVuNFBRUWhRUVZlQ0FJRW1Ma2FOdFFWaXRzQ0FnTkJBTUxENndmbEhDRDhvYy8vL0RBQUFDSUpEa1pGaXFudCt3MUFBTUNOQm9EVW02bUlRVFl0TmdCWVpPQUQrbVBLZTVvWUkrNWQxR2htQ3ZBd0VVQXMybGhhS3IydVBzeXdoRzRyVVR3Wk9kM0tzdGEzSTRJY2VEcGZsSXFXdTQ5ekdjbGRtTHV1NkVvazlXVHgrcGJ5cE9ibGNtb0xGTm5QVzRNM1Z4azBYaWN2dDBtTnZVbncrdG5QYXRWcWIvM0dKWnZHbnQ4M25uWWpIS1RQNmZWMnpjL0hXVzhmLy8vLy8vKy9oWXFidCtSVUFBQWdCYUFMQktpZEpqSWltTzhaUEphS2xBQ2RGLy90UXhBc0FETGp0V3oyWkFER1ZsU2ZkemJWaXFnVWRRMWtPUmJPQmFVb2pwQTVBVGtYaThRNE12aHlwRmlYT2gyZWtLRklzYkpSbGpKOHdObnJORGJXYW16NWtsMG5TVWxWcUx4dTJrYStsLytxWFVVYnFkVkl2S2RKSXliRHFqdEtYOEdrQWdCTnVjR1Z4S21zekV0WVl0YnhHbmhZSGxsWlFZMURaMjhSRjg0UkdEQ3c0L2tjUWplQm53Z013VjJKbXo4WVRuTWJJbFR1MmtpeWd1MnBiT0NpTmM2Qk5TQzl6YnFIY2JhaEFoYklwVEkyNWtiTGF0SHFMM1dYajlicEhzdldyUGU3L3lLb2hBQTBsSFAvN1VNUUNnQXRBYzBOTjVhdHhaZzBtSGQ0MC9td0RCeUNVdFNLQWdGRVlEeGhZVEJRYU5CSUFmVGNTSjY5d0FRNG0rdzhkSmlzQWN4cjhaNmJpR1NqeERTRy9nRVFpU3ZET3lNQnlKR1RnT3hIYXhJdHJXejRXNFpRZUxQa2F0R0dwWjc5dWovOWUvUXNBSlNTUk1CbGNLcE1BRFQxQURBVmh6a2tWQklDeUlGREpRWEhidWNPTUJoQUF2TTZSZ2hMbkVBTVVBV0cyUWhVYkJ6eldkSWFja0FBQ0VibFdXWFJkRkdjendwa3RwMUtZaXFVSHJPZVl0Vi9aMi9vLzlmNlBxb29BQUFBQ0VTeG9BQXVyTVhELyswREVCZ0lLbUVzbnJmZERZUjRKWmlYTUNaNEFRQmdVa01VckJPVFNzQndJZ1VIREVBQnpJcDR6MGdLUm9iVkpJRm1EZ0tHd2cvbUJ3QUtieU1MaFQ5eWxCNHg4TE0yVUw1dGJFZ0xNQWdkYS84WDE3UnY5ZWUvWjkzNUFCMys1d1FCSzgrb3FBREFqak1NQ1FhQXBaS05nUVJIRGh1blJQdnFTalF5dmY3NlpEaVVrbmJYdlNMSmFoTVMrTXdjM0RVcCszci9sRnphR0swcmpWUkcwdjNmWll2cHFZUWo5MjJSdUFCQzJJeXc0Z3pLK2x2LzdJTVFJQUFja056MU00TVZ3NElha1RZNXNET3J1YWNTdUF6WTFLYVFRMkdwVC9NSnc0Rm1MNGdCMFdmdG8ycTR2a2FWZDlwRC8zLzlmMVZvSVZ1SUV3SGNEVjNjUlBNUFBNNmdQeFlJWU1DaEl3T2lKeElXQm9GZ0psWmtZWkU4TExNazhyWC9xTmE5TjJ2N3V2Ly8wZlovK3dYdHFBQkFKSjIyMWJZRm1yVWYvK3hERUJZQUYzQ3Nwck9Ia29KbURaSEEySkU1TXdxVDZOZ0NNdjBJWkgwRVhwR0tFZExyZmhNMjVPK25xMlhxbzZyVU4vMS8rcjlZQUFBQ3QvblJJY0RnaVdDMHpZV05vYUtuVXJ5T1crbzZWL081WCsrdFoyZS94TEV2LzVDcmJiQUFBQmdvSUdmLzdFTVFFQThFOENzeUJDQ0E0QUFBMGdBQUFCQVl0VEVGTlJUTXVPVGt1TlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWJztcclxuY29uc3Qgc291bmRCeXRlQXJyYXkgPSBiYXNlNjRTb3VuZFRvQnl0ZUFycmF5KCBwaGV0QXVkaW9Db250ZXh0LCBzb3VuZFVSSSApO1xyXG5jb25zdCB1bmxvY2sgPSBhc3luY0xvYWRlci5jcmVhdGVMb2NrKCBzb3VuZFVSSSApO1xyXG5jb25zdCB3cmFwcGVkQXVkaW9CdWZmZXIgPSBuZXcgV3JhcHBlZEF1ZGlvQnVmZmVyKCk7XHJcblxyXG4vLyBzYWZlIHdheSB0byB1bmxvY2tcclxubGV0IHVubG9ja2VkID0gZmFsc2U7XHJcbmNvbnN0IHNhZmVVbmxvY2sgPSAoKSA9PiB7XHJcbiAgaWYgKCAhdW5sb2NrZWQgKSB7XHJcbiAgICB1bmxvY2soKTtcclxuICAgIHVubG9ja2VkID0gdHJ1ZTtcclxuICB9XHJcbn07XHJcblxyXG5jb25zdCBvbkRlY29kZVN1Y2Nlc3MgPSBkZWNvZGVkQXVkaW8gPT4ge1xyXG4gIGlmICggd3JhcHBlZEF1ZGlvQnVmZmVyLmF1ZGlvQnVmZmVyUHJvcGVydHkudmFsdWUgPT09IG51bGwgKSB7XHJcbiAgICB3cmFwcGVkQXVkaW9CdWZmZXIuYXVkaW9CdWZmZXJQcm9wZXJ0eS5zZXQoIGRlY29kZWRBdWRpbyApO1xyXG4gICAgc2FmZVVubG9jaygpO1xyXG4gIH1cclxufTtcclxuY29uc3Qgb25EZWNvZGVFcnJvciA9IGRlY29kZUVycm9yID0+IHtcclxuICBjb25zb2xlLndhcm4oICdkZWNvZGUgb2YgYXVkaW8gZGF0YSBmYWlsZWQsIHVzaW5nIHN0dWJiZWQgc291bmQsIGVycm9yOiAnICsgZGVjb2RlRXJyb3IgKTtcclxuICB3cmFwcGVkQXVkaW9CdWZmZXIuYXVkaW9CdWZmZXJQcm9wZXJ0eS5zZXQoIHBoZXRBdWRpb0NvbnRleHQuY3JlYXRlQnVmZmVyKCAxLCAxLCBwaGV0QXVkaW9Db250ZXh0LnNhbXBsZVJhdGUgKSApO1xyXG4gIHNhZmVVbmxvY2soKTtcclxufTtcclxuY29uc3QgZGVjb2RlUHJvbWlzZSA9IHBoZXRBdWRpb0NvbnRleHQuZGVjb2RlQXVkaW9EYXRhKCBzb3VuZEJ5dGVBcnJheS5idWZmZXIsIG9uRGVjb2RlU3VjY2Vzcywgb25EZWNvZGVFcnJvciApO1xyXG5pZiAoIGRlY29kZVByb21pc2UgKSB7XHJcbiAgZGVjb2RlUHJvbWlzZVxyXG4gICAgLnRoZW4oIGRlY29kZWRBdWRpbyA9PiB7XHJcbiAgICAgIGlmICggd3JhcHBlZEF1ZGlvQnVmZmVyLmF1ZGlvQnVmZmVyUHJvcGVydHkudmFsdWUgPT09IG51bGwgKSB7XHJcbiAgICAgICAgd3JhcHBlZEF1ZGlvQnVmZmVyLmF1ZGlvQnVmZmVyUHJvcGVydHkuc2V0KCBkZWNvZGVkQXVkaW8gKTtcclxuICAgICAgICBzYWZlVW5sb2NrKCk7XHJcbiAgICAgIH1cclxuICAgIH0gKVxyXG4gICAgLmNhdGNoKCBlID0+IHtcclxuICAgICAgY29uc29sZS53YXJuKCAncHJvbWlzZSByZWplY3Rpb24gY2F1Z2h0IGZvciBhdWRpbyBkZWNvZGUsIGVycm9yID0gJyArIGUgKTtcclxuICAgICAgc2FmZVVubG9jaygpO1xyXG4gICAgfSApO1xyXG59XHJcbmV4cG9ydCBkZWZhdWx0IHdyYXBwZWRBdWRpb0J1ZmZlcjsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsT0FBT0EsV0FBVyxNQUFNLHNDQUFzQztBQUM5RCxPQUFPQyxzQkFBc0IsTUFBTSw2Q0FBNkM7QUFDaEYsT0FBT0Msa0JBQWtCLE1BQU0seUNBQXlDO0FBQ3hFLE9BQU9DLGdCQUFnQixNQUFNLHVDQUF1QztBQUVwRSxNQUFNQyxRQUFRLEdBQUcsaW9FQUFpb0U7QUFDbHBFLE1BQU1DLGNBQWMsR0FBR0osc0JBQXNCLENBQUVFLGdCQUFnQixFQUFFQyxRQUFTLENBQUM7QUFDM0UsTUFBTUUsTUFBTSxHQUFHTixXQUFXLENBQUNPLFVBQVUsQ0FBRUgsUUFBUyxDQUFDO0FBQ2pELE1BQU1JLGtCQUFrQixHQUFHLElBQUlOLGtCQUFrQixDQUFDLENBQUM7O0FBRW5EO0FBQ0EsSUFBSU8sUUFBUSxHQUFHLEtBQUs7QUFDcEIsTUFBTUMsVUFBVSxHQUFHQSxDQUFBLEtBQU07RUFDdkIsSUFBSyxDQUFDRCxRQUFRLEVBQUc7SUFDZkgsTUFBTSxDQUFDLENBQUM7SUFDUkcsUUFBUSxHQUFHLElBQUk7RUFDakI7QUFDRixDQUFDO0FBRUQsTUFBTUUsZUFBZSxHQUFHQyxZQUFZLElBQUk7RUFDdEMsSUFBS0osa0JBQWtCLENBQUNLLG1CQUFtQixDQUFDQyxLQUFLLEtBQUssSUFBSSxFQUFHO0lBQzNETixrQkFBa0IsQ0FBQ0ssbUJBQW1CLENBQUNFLEdBQUcsQ0FBRUgsWUFBYSxDQUFDO0lBQzFERixVQUFVLENBQUMsQ0FBQztFQUNkO0FBQ0YsQ0FBQztBQUNELE1BQU1NLGFBQWEsR0FBR0MsV0FBVyxJQUFJO0VBQ25DQyxPQUFPLENBQUNDLElBQUksQ0FBRSwyREFBMkQsR0FBR0YsV0FBWSxDQUFDO0VBQ3pGVCxrQkFBa0IsQ0FBQ0ssbUJBQW1CLENBQUNFLEdBQUcsQ0FBRVosZ0JBQWdCLENBQUNpQixZQUFZLENBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRWpCLGdCQUFnQixDQUFDa0IsVUFBVyxDQUFFLENBQUM7RUFDaEhYLFVBQVUsQ0FBQyxDQUFDO0FBQ2QsQ0FBQztBQUNELE1BQU1ZLGFBQWEsR0FBR25CLGdCQUFnQixDQUFDb0IsZUFBZSxDQUFFbEIsY0FBYyxDQUFDbUIsTUFBTSxFQUFFYixlQUFlLEVBQUVLLGFBQWMsQ0FBQztBQUMvRyxJQUFLTSxhQUFhLEVBQUc7RUFDbkJBLGFBQWEsQ0FDVkcsSUFBSSxDQUFFYixZQUFZLElBQUk7SUFDckIsSUFBS0osa0JBQWtCLENBQUNLLG1CQUFtQixDQUFDQyxLQUFLLEtBQUssSUFBSSxFQUFHO01BQzNETixrQkFBa0IsQ0FBQ0ssbUJBQW1CLENBQUNFLEdBQUcsQ0FBRUgsWUFBYSxDQUFDO01BQzFERixVQUFVLENBQUMsQ0FBQztJQUNkO0VBQ0YsQ0FBRSxDQUFDLENBQ0ZnQixLQUFLLENBQUVDLENBQUMsSUFBSTtJQUNYVCxPQUFPLENBQUNDLElBQUksQ0FBRSxxREFBcUQsR0FBR1EsQ0FBRSxDQUFDO0lBQ3pFakIsVUFBVSxDQUFDLENBQUM7RUFDZCxDQUFFLENBQUM7QUFDUDtBQUNBLGVBQWVGLGtCQUFrQiJ9