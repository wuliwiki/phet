/* eslint-disable */
import asyncLoader from '../../../phet-core/js/asyncLoader.js';
import base64SoundToByteArray from '../../../tambo/js/base64SoundToByteArray.js';
import WrappedAudioBuffer from '../../../tambo/js/WrappedAudioBuffer.js';
import phetAudioContext from '../../../tambo/js/phetAudioContext.js';
const soundURI = 'data:audio/mpeg;base64,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';
const soundByteArray = base64SoundToByteArray(phetAudioContext, soundURI);
const unlock = asyncLoader.createLock(soundURI);
const wrappedAudioBuffer = new WrappedAudioBuffer();

// safe way to unlock
let unlocked = false;
const safeUnlock = () => {
  if (!unlocked) {
    unlock();
    unlocked = true;
  }
};
const onDecodeSuccess = decodedAudio => {
  if (wrappedAudioBuffer.audioBufferProperty.value === null) {
    wrappedAudioBuffer.audioBufferProperty.set(decodedAudio);
    safeUnlock();
  }
};
const onDecodeError = decodeError => {
  console.warn('decode of audio data failed, using stubbed sound, error: ' + decodeError);
  wrappedAudioBuffer.audioBufferProperty.set(phetAudioContext.createBuffer(1, 1, phetAudioContext.sampleRate));
  safeUnlock();
};
const decodePromise = phetAudioContext.decodeAudioData(soundByteArray.buffer, onDecodeSuccess, onDecodeError);
if (decodePromise) {
  decodePromise.then(decodedAudio => {
    if (wrappedAudioBuffer.audioBufferProperty.value === null) {
      wrappedAudioBuffer.audioBufferProperty.set(decodedAudio);
      safeUnlock();
    }
  }).catch(e => {
    console.warn('promise rejection caught for audio decode, error = ' + e);
    safeUnlock();
  });
}
export default wrappedAudioBuffer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhc3luY0xvYWRlciIsImJhc2U2NFNvdW5kVG9CeXRlQXJyYXkiLCJXcmFwcGVkQXVkaW9CdWZmZXIiLCJwaGV0QXVkaW9Db250ZXh0Iiwic291bmRVUkkiLCJzb3VuZEJ5dGVBcnJheSIsInVubG9jayIsImNyZWF0ZUxvY2siLCJ3cmFwcGVkQXVkaW9CdWZmZXIiLCJ1bmxvY2tlZCIsInNhZmVVbmxvY2siLCJvbkRlY29kZVN1Y2Nlc3MiLCJkZWNvZGVkQXVkaW8iLCJhdWRpb0J1ZmZlclByb3BlcnR5IiwidmFsdWUiLCJzZXQiLCJvbkRlY29kZUVycm9yIiwiZGVjb2RlRXJyb3IiLCJjb25zb2xlIiwid2FybiIsImNyZWF0ZUJ1ZmZlciIsInNhbXBsZVJhdGUiLCJkZWNvZGVQcm9taXNlIiwiZGVjb2RlQXVkaW9EYXRhIiwiYnVmZmVyIiwidGhlbiIsImNhdGNoIiwiZSJdLCJzb3VyY2VzIjpbInN0YWNjYXRvRV9tcDMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgKi9cclxuaW1wb3J0IGFzeW5jTG9hZGVyIGZyb20gJy4uLy4uLy4uL3BoZXQtY29yZS9qcy9hc3luY0xvYWRlci5qcyc7XHJcbmltcG9ydCBiYXNlNjRTb3VuZFRvQnl0ZUFycmF5IGZyb20gJy4uLy4uLy4uL3RhbWJvL2pzL2Jhc2U2NFNvdW5kVG9CeXRlQXJyYXkuanMnO1xyXG5pbXBvcnQgV3JhcHBlZEF1ZGlvQnVmZmVyIGZyb20gJy4uLy4uLy4uL3RhbWJvL2pzL1dyYXBwZWRBdWRpb0J1ZmZlci5qcyc7XHJcbmltcG9ydCBwaGV0QXVkaW9Db250ZXh0IGZyb20gJy4uLy4uLy4uL3RhbWJvL2pzL3BoZXRBdWRpb0NvbnRleHQuanMnO1xyXG5cclxuY29uc3Qgc291bmRVUkkgPSAnZGF0YTphdWRpby9tcGVnO2Jhc2U2NCwvL3VReEFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBV0dsdVp3QUFBQThBQUFBSEFBQUdOQUE0T0RnNE9EZzRPRGc0T0RnNE9HQmdZR0JnWUdCZ1lHQmdZR0JnaUlpSWlJaUlpSWlJaUlpSWlJaXdzTEN3c0xDd3NMQ3dzTEN3c0xETXpNek16TXpNek16TXpNek16T25wNmVucDZlbnA2ZW5wNmVucC8vLy8vLy8vLy8vLy8vLy8vLzhBQUFBNlRFRk5SVE11T1RseUFuRUFBQUFBQUFBQUFCUXdKQVg5UWdBQU1BQUFCalNXd2I0bkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBLy90Z3hBQUFCbXhCT0hTVWdCSjBJeTJyTVBBQ0JBZHQ0RmFOdWlBRUFRRWtSUUtDVEpveWR0UUV5ZVNCaTBhTklWayt3WU9kVHZoai9EL3FEQmMvRUFZL09mNFkvRTd5YWxJZ0ZYMGtrZGsxdGtBRDZwRmkzVEVaUGhNMWU1bVVjUWhoaGlLRjZwSFVTYmk3SmsvMXdYQVhZTEFPQWtvU2dkZEFMY1lPeEtEQkdib3ZoQ0hBRStGTTRHU1p5MnlPVENhYUZ0RDh0aWlKbkFPSmFuUE5YVndkYWpuM1EvRlNmUnhwdGdrWlc3ZDg5Z2NMd0dDSTVMMEZUSlZqVnRLYjgyc3FjNjQ3aEg4VE1lQ3BIcVJiRHJqUlkxS3RVUEZjNnhmTi9TSi8vNFVlQUN6Y2xVb0NJQlNuSEpBRVNwcC9oVWhadWRyTXlDNFgyWU5EU2owVnBhVlZGcndlLy90QXhBK0FDekRoYVYyRUFERmdrV2xaelNUK29Ed0tZYXdVQ3kwNGVpcWpBV2g2MGlaYXlhMU5GbVowWmxvMmxVYzE0NW1adGlqVy9odkpYVTI5bU45ditLMi80Sk81TnBpTEJXR2p2b0JBMzlZR01oSWo2MWd3ZUpEdG8wSWcrNUN0eDNQU2JzRExwTXFOSm9NbnVDQy9jaHRTS013dGFlNnpjV2ZZMWt3bUJhMVZPNlIzOXBBN0RyRVYwbE5WMm9TV3VxUTUrOTFTOHQvWmNLRlcxdlVlNmYzL2Y5OWRCYUVzd1BKTnNJQ29KR0JnU1NuLyswREVCd0lLc0U4MGJtWHVVVXFMSm1YZHZSNk1PY1l3R0pjSUNFSStUeHpBb3dXTVFoY3lkZlRDd2JZQStaaFNpaGh4UWZJdlF2Q1l2ellZNDhZZGF1MzY1Q0F0OU1sRVkyODRVVDF1S25aWGt2L1o5dU5uZjAvN3VVQUp3eEFOV3dWTUl3Q0NvQ21KUjJISVN3bUt3RUR3RGlFRERYSmJqQXdOV3VJakc0Q0JHQm93c2VNUTdRVk1yWEZoa1FBWnJ3aVF4bllBQ292em93Zzdnbm92SmtJMWZwMDhhNzczWC85ejAvLzFLZ0FBQUFZbTQvLzdRTVFEQUFtNFJ6ZXQ5Mkl4SW9mbTZhNWtWbWt3Wit0U0V1YVk3M0hPcE9tRklDSmlqZzhmdlZtQ2h6aHBTR0Z5Z0tJb2pMZ1F4aVNiQ2xZVkVrVjMreHpURlY3cU5qSVFwTGVxMERYZlQvZTcvdVRYLzZxVjhrN3ZyQUNBdFN5TktBK2hkTUVVQkdic256V2dZUkFxS2lQNW80dUdBQURLbEloa1JGSkovRVZvdExQUExLa2tvWGVyTU9vOTJLYmxPak5DWllYRlBWSUpOdFQvWjcxZGxmMWVuUlVBQUhwSEF5WURhVnh4VUFNSXB6ekMvL3NneEFnQUNEQTFNMHh2SVBEWmhlYXBsbUVHUUhHTEZoQURIRGxaZHFCbmhCRzRzVFdyaWlZc2pJbmxnMWpqeTVWV1V1VzRWdHR1cjB4aW5mNjNUM1cvMmYvditSQWhYdVNScEtBQkpkaTZXQnhmc3NkWUxpaDRERVJnYkZ2Vm56bHNZR2hDOXppMlZOY0lkNk5mbHZTdjlQVitoV1FadnkzMCs1SUFJSXBUV2YvN0lNUUNnQVhRSlRtalllQnd0QU9qc0p3TUhtTnBRQUhPRUlEeUNUc0lrQTZveTIyRStTMzJicHdnVVJQak4rbnRiNXI3Zjd2WEkrcUsvNlBZZ0FBQUFDZHdoZ0RHMk5HTUNoNWZHSU84eUdGSlVBb0srZURxdnp3TlBXZFBDVTdudi9MZnlYL3A0aVBlNnE2cUFCQUtqUXNnUGlVbUlTeFk2Y1hVQndIUC8vLy8reERFQ3dQRHRCeWxCSmtnSUFBQU5JQUFBQVQvL3hhYUZSVHFaVXhCVFVVekxqazVMalZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlE9PSc7XHJcbmNvbnN0IHNvdW5kQnl0ZUFycmF5ID0gYmFzZTY0U291bmRUb0J5dGVBcnJheSggcGhldEF1ZGlvQ29udGV4dCwgc291bmRVUkkgKTtcclxuY29uc3QgdW5sb2NrID0gYXN5bmNMb2FkZXIuY3JlYXRlTG9jayggc291bmRVUkkgKTtcclxuY29uc3Qgd3JhcHBlZEF1ZGlvQnVmZmVyID0gbmV3IFdyYXBwZWRBdWRpb0J1ZmZlcigpO1xyXG5cclxuLy8gc2FmZSB3YXkgdG8gdW5sb2NrXHJcbmxldCB1bmxvY2tlZCA9IGZhbHNlO1xyXG5jb25zdCBzYWZlVW5sb2NrID0gKCkgPT4ge1xyXG4gIGlmICggIXVubG9ja2VkICkge1xyXG4gICAgdW5sb2NrKCk7XHJcbiAgICB1bmxvY2tlZCA9IHRydWU7XHJcbiAgfVxyXG59O1xyXG5cclxuY29uc3Qgb25EZWNvZGVTdWNjZXNzID0gZGVjb2RlZEF1ZGlvID0+IHtcclxuICBpZiAoIHdyYXBwZWRBdWRpb0J1ZmZlci5hdWRpb0J1ZmZlclByb3BlcnR5LnZhbHVlID09PSBudWxsICkge1xyXG4gICAgd3JhcHBlZEF1ZGlvQnVmZmVyLmF1ZGlvQnVmZmVyUHJvcGVydHkuc2V0KCBkZWNvZGVkQXVkaW8gKTtcclxuICAgIHNhZmVVbmxvY2soKTtcclxuICB9XHJcbn07XHJcbmNvbnN0IG9uRGVjb2RlRXJyb3IgPSBkZWNvZGVFcnJvciA9PiB7XHJcbiAgY29uc29sZS53YXJuKCAnZGVjb2RlIG9mIGF1ZGlvIGRhdGEgZmFpbGVkLCB1c2luZyBzdHViYmVkIHNvdW5kLCBlcnJvcjogJyArIGRlY29kZUVycm9yICk7XHJcbiAgd3JhcHBlZEF1ZGlvQnVmZmVyLmF1ZGlvQnVmZmVyUHJvcGVydHkuc2V0KCBwaGV0QXVkaW9Db250ZXh0LmNyZWF0ZUJ1ZmZlciggMSwgMSwgcGhldEF1ZGlvQ29udGV4dC5zYW1wbGVSYXRlICkgKTtcclxuICBzYWZlVW5sb2NrKCk7XHJcbn07XHJcbmNvbnN0IGRlY29kZVByb21pc2UgPSBwaGV0QXVkaW9Db250ZXh0LmRlY29kZUF1ZGlvRGF0YSggc291bmRCeXRlQXJyYXkuYnVmZmVyLCBvbkRlY29kZVN1Y2Nlc3MsIG9uRGVjb2RlRXJyb3IgKTtcclxuaWYgKCBkZWNvZGVQcm9taXNlICkge1xyXG4gIGRlY29kZVByb21pc2VcclxuICAgIC50aGVuKCBkZWNvZGVkQXVkaW8gPT4ge1xyXG4gICAgICBpZiAoIHdyYXBwZWRBdWRpb0J1ZmZlci5hdWRpb0J1ZmZlclByb3BlcnR5LnZhbHVlID09PSBudWxsICkge1xyXG4gICAgICAgIHdyYXBwZWRBdWRpb0J1ZmZlci5hdWRpb0J1ZmZlclByb3BlcnR5LnNldCggZGVjb2RlZEF1ZGlvICk7XHJcbiAgICAgICAgc2FmZVVubG9jaygpO1xyXG4gICAgICB9XHJcbiAgICB9IClcclxuICAgIC5jYXRjaCggZSA9PiB7XHJcbiAgICAgIGNvbnNvbGUud2FybiggJ3Byb21pc2UgcmVqZWN0aW9uIGNhdWdodCBmb3IgYXVkaW8gZGVjb2RlLCBlcnJvciA9ICcgKyBlICk7XHJcbiAgICAgIHNhZmVVbmxvY2soKTtcclxuICAgIH0gKTtcclxufVxyXG5leHBvcnQgZGVmYXVsdCB3cmFwcGVkQXVkaW9CdWZmZXI7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLE9BQU9BLFdBQVcsTUFBTSxzQ0FBc0M7QUFDOUQsT0FBT0Msc0JBQXNCLE1BQU0sNkNBQTZDO0FBQ2hGLE9BQU9DLGtCQUFrQixNQUFNLHlDQUF5QztBQUN4RSxPQUFPQyxnQkFBZ0IsTUFBTSx1Q0FBdUM7QUFFcEUsTUFBTUMsUUFBUSxHQUFHLGltRUFBaW1FO0FBQ2xuRSxNQUFNQyxjQUFjLEdBQUdKLHNCQUFzQixDQUFFRSxnQkFBZ0IsRUFBRUMsUUFBUyxDQUFDO0FBQzNFLE1BQU1FLE1BQU0sR0FBR04sV0FBVyxDQUFDTyxVQUFVLENBQUVILFFBQVMsQ0FBQztBQUNqRCxNQUFNSSxrQkFBa0IsR0FBRyxJQUFJTixrQkFBa0IsQ0FBQyxDQUFDOztBQUVuRDtBQUNBLElBQUlPLFFBQVEsR0FBRyxLQUFLO0FBQ3BCLE1BQU1DLFVBQVUsR0FBR0EsQ0FBQSxLQUFNO0VBQ3ZCLElBQUssQ0FBQ0QsUUFBUSxFQUFHO0lBQ2ZILE1BQU0sQ0FBQyxDQUFDO0lBQ1JHLFFBQVEsR0FBRyxJQUFJO0VBQ2pCO0FBQ0YsQ0FBQztBQUVELE1BQU1FLGVBQWUsR0FBR0MsWUFBWSxJQUFJO0VBQ3RDLElBQUtKLGtCQUFrQixDQUFDSyxtQkFBbUIsQ0FBQ0MsS0FBSyxLQUFLLElBQUksRUFBRztJQUMzRE4sa0JBQWtCLENBQUNLLG1CQUFtQixDQUFDRSxHQUFHLENBQUVILFlBQWEsQ0FBQztJQUMxREYsVUFBVSxDQUFDLENBQUM7RUFDZDtBQUNGLENBQUM7QUFDRCxNQUFNTSxhQUFhLEdBQUdDLFdBQVcsSUFBSTtFQUNuQ0MsT0FBTyxDQUFDQyxJQUFJLENBQUUsMkRBQTJELEdBQUdGLFdBQVksQ0FBQztFQUN6RlQsa0JBQWtCLENBQUNLLG1CQUFtQixDQUFDRSxHQUFHLENBQUVaLGdCQUFnQixDQUFDaUIsWUFBWSxDQUFFLENBQUMsRUFBRSxDQUFDLEVBQUVqQixnQkFBZ0IsQ0FBQ2tCLFVBQVcsQ0FBRSxDQUFDO0VBQ2hIWCxVQUFVLENBQUMsQ0FBQztBQUNkLENBQUM7QUFDRCxNQUFNWSxhQUFhLEdBQUduQixnQkFBZ0IsQ0FBQ29CLGVBQWUsQ0FBRWxCLGNBQWMsQ0FBQ21CLE1BQU0sRUFBRWIsZUFBZSxFQUFFSyxhQUFjLENBQUM7QUFDL0csSUFBS00sYUFBYSxFQUFHO0VBQ25CQSxhQUFhLENBQ1ZHLElBQUksQ0FBRWIsWUFBWSxJQUFJO0lBQ3JCLElBQUtKLGtCQUFrQixDQUFDSyxtQkFBbUIsQ0FBQ0MsS0FBSyxLQUFLLElBQUksRUFBRztNQUMzRE4sa0JBQWtCLENBQUNLLG1CQUFtQixDQUFDRSxHQUFHLENBQUVILFlBQWEsQ0FBQztNQUMxREYsVUFBVSxDQUFDLENBQUM7SUFDZDtFQUNGLENBQUUsQ0FBQyxDQUNGZ0IsS0FBSyxDQUFFQyxDQUFDLElBQUk7SUFDWFQsT0FBTyxDQUFDQyxJQUFJLENBQUUscURBQXFELEdBQUdRLENBQUUsQ0FBQztJQUN6RWpCLFVBQVUsQ0FBQyxDQUFDO0VBQ2QsQ0FBRSxDQUFDO0FBQ1A7QUFDQSxlQUFlRixrQkFBa0IifQ==