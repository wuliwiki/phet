/* eslint-disable */
import asyncLoader from '../../../phet-core/js/asyncLoader.js';
import base64SoundToByteArray from '../../../tambo/js/base64SoundToByteArray.js';
import WrappedAudioBuffer from '../../../tambo/js/WrappedAudioBuffer.js';
import phetAudioContext from '../../../tambo/js/phetAudioContext.js';
const soundURI = 'data:audio/mpeg;base64,//swxAAABbgjAHTBABFGkrA3MPKDBQc3AAOO7RIPGSWWyoAGA94kCQeavA4WBBY4H1OSXeGMP7f5//yhz4Ph/+IAQZDSzObznu+wvAAAAAAl8xD6B1E+cstiSF1vnIKPBCOR2es8iWE8apIkflILmSd05u6XvseacOhONO40O//5LydpdkhUzb1///dHOr5387ugHKoAAJAU1AAB//syxAOCCDx/W12mgDELj+opvCx+wCjyYQqVaiaz9MoSSd5WRY/LSV3Pen0grgiSw4F3GBNZLOYmjrMe2SKPpG23X9FR+bBqdLPyTzwtJSJMxSSMACys44MBDsoNICXENJ6XJlFPrVUFJpayWqz93FJdzSJr8yG83HRIeQnCxr6F/8o053Dv5raancY+u1/w1DpWAABLsAAOfIHGmP/7MsQFAkgEVT8s90AxDgjlGe5kZkoRHaJND4oiEg6GNRY+IR57RUXeg15qLcfRRmVsJWJS6XlPbgxvuV38m5huTnYyq/3UqyUPyIQzMhwE8GAmGDUPicSxzBuIxkRXMhZsxAKRIsgyBmdysoaKAU14iURYaGZBaqC4ZAUs5MqHvl1Tq1S6enD5q1lcX/99AABpRiBIA+1UwKMwMUb/+zLEBwII/D8tTXdgMPsGZN2/bAQ4B+MZRAqFmmCARRkRiYRGh4oGAqRxpZ0vayMgzzWWFJB5UKDtfCArPMpo1mOnv/6jkv/9vVs+mp4saUQSIAD8xKNGDSGKZxaTRyJ6Y4PGZ8RjIohNAimfAKpMJ7mgG7e6WCllSLMGz1AV9TtG//d//o5DhnpdNV9iAZG2ESAeKyFRhsMZ4Y5Z//swxAeABpgrKuz3QDDEhKb1vDxWTBKB5MWEjj9LQOADgKVGLDT1L2Drledt41JKnV/UpH/+yU7PyqwACklLLNI2Apww0Rlh1o8JGdlBl7Y0ncfKOUoEFZ3BmtRZavN07vn/1SfE2HtXEP4pDJJIwMkihKhfGZdmn6R3GQyMgkdDQkEycEDjIymmOxMkFxEGGZmyB3F2tm52T4uH//syxBgCC1UlAm7spVEfJKHpox1Sk9BXjWjRpdSk7qByi340DfPyERpnGgxf1L5WEA42hhMX6G//GDm///48cf7cbTXCjS4zVQQzKZUkztR5cfqNPfzkaoZRF58oLvGqcakTpf5V8UHjUib+pFSWo8+NwlKCTzSLf/7jreWEr//5Qm3///Hyym205fxpGQSwIp4Jh1UjOqHu5GVysv/7MsQKgMP0AxWgBEAwIQLd0AAMDs/6Pv//j/8sV/9AA/3AAUMFBxFMQU1FMy45OS41VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVX/+zLEOoPAAAGkAAAAIAAANIAAAARVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV';
const soundByteArray = base64SoundToByteArray(phetAudioContext, soundURI);
const unlock = asyncLoader.createLock(soundURI);
const wrappedAudioBuffer = new WrappedAudioBuffer();

// safe way to unlock
let unlocked = false;
const safeUnlock = () => {
  if (!unlocked) {
    unlock();
    unlocked = true;
  }
};
const onDecodeSuccess = decodedAudio => {
  if (wrappedAudioBuffer.audioBufferProperty.value === null) {
    wrappedAudioBuffer.audioBufferProperty.set(decodedAudio);
    safeUnlock();
  }
};
const onDecodeError = decodeError => {
  console.warn('decode of audio data failed, using stubbed sound, error: ' + decodeError);
  wrappedAudioBuffer.audioBufferProperty.set(phetAudioContext.createBuffer(1, 1, phetAudioContext.sampleRate));
  safeUnlock();
};
const decodePromise = phetAudioContext.decodeAudioData(soundByteArray.buffer, onDecodeSuccess, onDecodeError);
if (decodePromise) {
  decodePromise.then(decodedAudio => {
    if (wrappedAudioBuffer.audioBufferProperty.value === null) {
      wrappedAudioBuffer.audioBufferProperty.set(decodedAudio);
      safeUnlock();
    }
  }).catch(e => {
    console.warn('promise rejection caught for audio decode, error = ' + e);
    safeUnlock();
  });
}
export default wrappedAudioBuffer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhc3luY0xvYWRlciIsImJhc2U2NFNvdW5kVG9CeXRlQXJyYXkiLCJXcmFwcGVkQXVkaW9CdWZmZXIiLCJwaGV0QXVkaW9Db250ZXh0Iiwic291bmRVUkkiLCJzb3VuZEJ5dGVBcnJheSIsInVubG9jayIsImNyZWF0ZUxvY2siLCJ3cmFwcGVkQXVkaW9CdWZmZXIiLCJ1bmxvY2tlZCIsInNhZmVVbmxvY2siLCJvbkRlY29kZVN1Y2Nlc3MiLCJkZWNvZGVkQXVkaW8iLCJhdWRpb0J1ZmZlclByb3BlcnR5IiwidmFsdWUiLCJzZXQiLCJvbkRlY29kZUVycm9yIiwiZGVjb2RlRXJyb3IiLCJjb25zb2xlIiwid2FybiIsImNyZWF0ZUJ1ZmZlciIsInNhbXBsZVJhdGUiLCJkZWNvZGVQcm9taXNlIiwiZGVjb2RlQXVkaW9EYXRhIiwiYnVmZmVyIiwidGhlbiIsImNhdGNoIiwiZSJdLCJzb3VyY2VzIjpbInN0YWNjYXRvQ19tcDMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgKi9cclxuaW1wb3J0IGFzeW5jTG9hZGVyIGZyb20gJy4uLy4uLy4uL3BoZXQtY29yZS9qcy9hc3luY0xvYWRlci5qcyc7XHJcbmltcG9ydCBiYXNlNjRTb3VuZFRvQnl0ZUFycmF5IGZyb20gJy4uLy4uLy4uL3RhbWJvL2pzL2Jhc2U2NFNvdW5kVG9CeXRlQXJyYXkuanMnO1xyXG5pbXBvcnQgV3JhcHBlZEF1ZGlvQnVmZmVyIGZyb20gJy4uLy4uLy4uL3RhbWJvL2pzL1dyYXBwZWRBdWRpb0J1ZmZlci5qcyc7XHJcbmltcG9ydCBwaGV0QXVkaW9Db250ZXh0IGZyb20gJy4uLy4uLy4uL3RhbWJvL2pzL3BoZXRBdWRpb0NvbnRleHQuanMnO1xyXG5cclxuY29uc3Qgc291bmRVUkkgPSAnZGF0YTphdWRpby9tcGVnO2Jhc2U2NCwvL3N3eEFBQUJiZ2pBSFRCQUJGR2tyQTNNUEtEQlFjM0FBT083UklQR1NXV3lvQUdBOTRrQ1FlYXZBNFdCQlk0SDFPU1hlR01QN2Y1Ly95aHo0UGgvK0lBUVpEU3pPYnpudSt3dkFBQUFBQWw4eEQ2QjFFK2NzdGlTRjF2bklLUEJDT1IyZXM4aVdFOGFwSWtmbElMbVNkMDV1Nlh2c2VhY09oT05PNDBPLy81THlkcGRraFV6YjEvLy9kSE9yNTM4N3VnSEtvQUFKQVUxQUFCLy9zeXhBT0NDRHgvVzEybWdERUxqK29wdkN4K3dDanlZUXFWYWlhejlNb1NTZDVXUlkvTFNWM1BlbjBncmdpU3c0RjNHQk5aTE9ZbWpyTWUyU0tQcEcyM1g5RlIrYkJxZExQeVR6d3RKU0pNeFNTTUFDeXM0NE1CRHNvTklDWEVOSjZYSmxGUHJWVUZKcGF5V3F6OTNGSmR6U0pyOHlHODNIUkllUW5DeHI2Ri84bzA1M0R2NXJhYW5jWSt1MS93MURwV0FBQkxzQUFPZklIR21QLzdNc1FGQWtnRVZUOHM5MEF4RGdqbEdlNWtaa29SSGFKTkQ0b2lFZzZHTlJZK0lSNTdSVVhlZzE1cUxjZlJSbVZzSldKUzZYbFBiZ3h2dVYzOG01aHVUbll5cS8zVXF5VVB5SVF6TWh3RThHQW1HRFVQaWNTeHpCdUl4a1JYTWhac3hBS1JJc2d5Qm1keXNvYUtBVTE0aVVSWWFHWkJhcUM0WkFVczVNcUh2bDFUcTFTNmVuRDVxMWxjWC85OUFBQnBSaUJJQSsxVXdLTXdNVWIvK3pMRUJ3SUkvRDh0VFhkZ01Qc0daTjIvYkFRNEIrTVpSQXFGbW1DQVJSa1JpWVJHaDRvR0FxUnhwWjB2YXlNZ3p6V1dGSkI1VUtEdGZDQXJQTXBvMW1PbnYvNmprdi85dlZzK21wNHNhVVFTSUFEOHhLTkdEU0dLWnhhVFJ5SjZZNFBHWjhSaklvaE5BaW1mQUtwTUo3bWdHN2U2V0NsbFNMTUd6MUFWOVR0Ry8vZC8vbzVEaG5wZE5WOWlBWkcyRVNBZUt5RlJoc01aNFk1Wi8vc3d4QWVBQnBnckt1ejNRRERFaEtiMXZEeFdUQktCNU1XRWpqOUxRT0FEZ0tWR0xEVDFMMkRybGVkdDQxSktuVi9VcEgvK3lVN1B5cXdBQ2tsTExOSTJBcHd3MFJsaDFvOEpHZGxCbDdZMG5jZktPVW9FRlozQm10Ulphdk4wN3ZuLzFTZkUySHRYRVA0cERKSkl3TWtpaEtoZkdaZG1uNlIzR1F5TWdrZERRa0V5Y0VEakl5bW1PeE1rRnhFR0dabXlCM0YydG01MlQ0dUgvL3N5eEJnQ0MxVWxBbTdzcFZFZkpLSHBveDFTazlCWGpXalJwZFNrN3FCeWkzNDBEZlB5RVJwbkdneGYxTDVXRUE0MmhoTVg2Ry8vR0RtLy8vNDhjZjdjYlRYQ2pTNHpWUVF6S1pVa3p0UjVjZnFOUGZ6a2FvWlJGNThvTHZHcWNha1RwZjVWOFVIalVpYitwRlNXbzgrTndsS0NUelNMZi83anJlV0VyLy81UW0zLy8vSHl5bTIwNWZ4cEdRU3dJcDRKaDFVak9xSHU1R1Z5c3YvN01zUUtnTVAwQXhXZ0JFQXdJUUxkMEFBTURzLzZQdi8vai84c1YvOUFBLzNBQVVNRkJ4Rk1RVTFGTXk0NU9TNDFWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWWC8rekxFT29QQUFBR2tBQUFBSUFBQU5JQUFBQVJWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWJztcclxuY29uc3Qgc291bmRCeXRlQXJyYXkgPSBiYXNlNjRTb3VuZFRvQnl0ZUFycmF5KCBwaGV0QXVkaW9Db250ZXh0LCBzb3VuZFVSSSApO1xyXG5jb25zdCB1bmxvY2sgPSBhc3luY0xvYWRlci5jcmVhdGVMb2NrKCBzb3VuZFVSSSApO1xyXG5jb25zdCB3cmFwcGVkQXVkaW9CdWZmZXIgPSBuZXcgV3JhcHBlZEF1ZGlvQnVmZmVyKCk7XHJcblxyXG4vLyBzYWZlIHdheSB0byB1bmxvY2tcclxubGV0IHVubG9ja2VkID0gZmFsc2U7XHJcbmNvbnN0IHNhZmVVbmxvY2sgPSAoKSA9PiB7XHJcbiAgaWYgKCAhdW5sb2NrZWQgKSB7XHJcbiAgICB1bmxvY2soKTtcclxuICAgIHVubG9ja2VkID0gdHJ1ZTtcclxuICB9XHJcbn07XHJcblxyXG5jb25zdCBvbkRlY29kZVN1Y2Nlc3MgPSBkZWNvZGVkQXVkaW8gPT4ge1xyXG4gIGlmICggd3JhcHBlZEF1ZGlvQnVmZmVyLmF1ZGlvQnVmZmVyUHJvcGVydHkudmFsdWUgPT09IG51bGwgKSB7XHJcbiAgICB3cmFwcGVkQXVkaW9CdWZmZXIuYXVkaW9CdWZmZXJQcm9wZXJ0eS5zZXQoIGRlY29kZWRBdWRpbyApO1xyXG4gICAgc2FmZVVubG9jaygpO1xyXG4gIH1cclxufTtcclxuY29uc3Qgb25EZWNvZGVFcnJvciA9IGRlY29kZUVycm9yID0+IHtcclxuICBjb25zb2xlLndhcm4oICdkZWNvZGUgb2YgYXVkaW8gZGF0YSBmYWlsZWQsIHVzaW5nIHN0dWJiZWQgc291bmQsIGVycm9yOiAnICsgZGVjb2RlRXJyb3IgKTtcclxuICB3cmFwcGVkQXVkaW9CdWZmZXIuYXVkaW9CdWZmZXJQcm9wZXJ0eS5zZXQoIHBoZXRBdWRpb0NvbnRleHQuY3JlYXRlQnVmZmVyKCAxLCAxLCBwaGV0QXVkaW9Db250ZXh0LnNhbXBsZVJhdGUgKSApO1xyXG4gIHNhZmVVbmxvY2soKTtcclxufTtcclxuY29uc3QgZGVjb2RlUHJvbWlzZSA9IHBoZXRBdWRpb0NvbnRleHQuZGVjb2RlQXVkaW9EYXRhKCBzb3VuZEJ5dGVBcnJheS5idWZmZXIsIG9uRGVjb2RlU3VjY2Vzcywgb25EZWNvZGVFcnJvciApO1xyXG5pZiAoIGRlY29kZVByb21pc2UgKSB7XHJcbiAgZGVjb2RlUHJvbWlzZVxyXG4gICAgLnRoZW4oIGRlY29kZWRBdWRpbyA9PiB7XHJcbiAgICAgIGlmICggd3JhcHBlZEF1ZGlvQnVmZmVyLmF1ZGlvQnVmZmVyUHJvcGVydHkudmFsdWUgPT09IG51bGwgKSB7XHJcbiAgICAgICAgd3JhcHBlZEF1ZGlvQnVmZmVyLmF1ZGlvQnVmZmVyUHJvcGVydHkuc2V0KCBkZWNvZGVkQXVkaW8gKTtcclxuICAgICAgICBzYWZlVW5sb2NrKCk7XHJcbiAgICAgIH1cclxuICAgIH0gKVxyXG4gICAgLmNhdGNoKCBlID0+IHtcclxuICAgICAgY29uc29sZS53YXJuKCAncHJvbWlzZSByZWplY3Rpb24gY2F1Z2h0IGZvciBhdWRpbyBkZWNvZGUsIGVycm9yID0gJyArIGUgKTtcclxuICAgICAgc2FmZVVubG9jaygpO1xyXG4gICAgfSApO1xyXG59XHJcbmV4cG9ydCBkZWZhdWx0IHdyYXBwZWRBdWRpb0J1ZmZlcjsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsT0FBT0EsV0FBVyxNQUFNLHNDQUFzQztBQUM5RCxPQUFPQyxzQkFBc0IsTUFBTSw2Q0FBNkM7QUFDaEYsT0FBT0Msa0JBQWtCLE1BQU0seUNBQXlDO0FBQ3hFLE9BQU9DLGdCQUFnQixNQUFNLHVDQUF1QztBQUVwRSxNQUFNQyxRQUFRLEdBQUcsaXFEQUFpcUQ7QUFDbHJELE1BQU1DLGNBQWMsR0FBR0osc0JBQXNCLENBQUVFLGdCQUFnQixFQUFFQyxRQUFTLENBQUM7QUFDM0UsTUFBTUUsTUFBTSxHQUFHTixXQUFXLENBQUNPLFVBQVUsQ0FBRUgsUUFBUyxDQUFDO0FBQ2pELE1BQU1JLGtCQUFrQixHQUFHLElBQUlOLGtCQUFrQixDQUFDLENBQUM7O0FBRW5EO0FBQ0EsSUFBSU8sUUFBUSxHQUFHLEtBQUs7QUFDcEIsTUFBTUMsVUFBVSxHQUFHQSxDQUFBLEtBQU07RUFDdkIsSUFBSyxDQUFDRCxRQUFRLEVBQUc7SUFDZkgsTUFBTSxDQUFDLENBQUM7SUFDUkcsUUFBUSxHQUFHLElBQUk7RUFDakI7QUFDRixDQUFDO0FBRUQsTUFBTUUsZUFBZSxHQUFHQyxZQUFZLElBQUk7RUFDdEMsSUFBS0osa0JBQWtCLENBQUNLLG1CQUFtQixDQUFDQyxLQUFLLEtBQUssSUFBSSxFQUFHO0lBQzNETixrQkFBa0IsQ0FBQ0ssbUJBQW1CLENBQUNFLEdBQUcsQ0FBRUgsWUFBYSxDQUFDO0lBQzFERixVQUFVLENBQUMsQ0FBQztFQUNkO0FBQ0YsQ0FBQztBQUNELE1BQU1NLGFBQWEsR0FBR0MsV0FBVyxJQUFJO0VBQ25DQyxPQUFPLENBQUNDLElBQUksQ0FBRSwyREFBMkQsR0FBR0YsV0FBWSxDQUFDO0VBQ3pGVCxrQkFBa0IsQ0FBQ0ssbUJBQW1CLENBQUNFLEdBQUcsQ0FBRVosZ0JBQWdCLENBQUNpQixZQUFZLENBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRWpCLGdCQUFnQixDQUFDa0IsVUFBVyxDQUFFLENBQUM7RUFDaEhYLFVBQVUsQ0FBQyxDQUFDO0FBQ2QsQ0FBQztBQUNELE1BQU1ZLGFBQWEsR0FBR25CLGdCQUFnQixDQUFDb0IsZUFBZSxDQUFFbEIsY0FBYyxDQUFDbUIsTUFBTSxFQUFFYixlQUFlLEVBQUVLLGFBQWMsQ0FBQztBQUMvRyxJQUFLTSxhQUFhLEVBQUc7RUFDbkJBLGFBQWEsQ0FDVkcsSUFBSSxDQUFFYixZQUFZLElBQUk7SUFDckIsSUFBS0osa0JBQWtCLENBQUNLLG1CQUFtQixDQUFDQyxLQUFLLEtBQUssSUFBSSxFQUFHO01BQzNETixrQkFBa0IsQ0FBQ0ssbUJBQW1CLENBQUNFLEdBQUcsQ0FBRUgsWUFBYSxDQUFDO01BQzFERixVQUFVLENBQUMsQ0FBQztJQUNkO0VBQ0YsQ0FBRSxDQUFDLENBQ0ZnQixLQUFLLENBQUVDLENBQUMsSUFBSTtJQUNYVCxPQUFPLENBQUNDLElBQUksQ0FBRSxxREFBcUQsR0FBR1EsQ0FBRSxDQUFDO0lBQ3pFakIsVUFBVSxDQUFDLENBQUM7RUFDZCxDQUFFLENBQUM7QUFDUDtBQUNBLGVBQWVGLGtCQUFrQiJ9