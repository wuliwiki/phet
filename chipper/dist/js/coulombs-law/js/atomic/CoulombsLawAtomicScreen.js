// Copyright 2017-2022, University of Colorado Boulder

/**
 * @author Jesse Greenberg
 * @author Michael Barlow
 */

import Screen from '../../../joist/js/Screen.js';
import ScreenIcon from '../../../joist/js/ScreenIcon.js';
import { Image } from '../../../scenery/js/imports.js';
import atomicScaleScreenIcon_png from '../../images/atomicScaleScreenIcon_png.js';
import atomicScaleScreenIconNavbar_png from '../../images/atomicScaleScreenIconNavbar_png.js';
import CoulombsLawColors from '../common/CoulombsLawColors.js';
import CoulombsLawKeyboardHelpContent from '../common/view/CoulombsLawKeyboardHelpContent.js';
import coulombsLaw from '../coulombsLaw.js';
import CoulombsLawStrings from '../CoulombsLawStrings.js';
import CoulombsLawAtomicModel from './model/CoulombsLawAtomicModel.js';
import CoulombsLawAtomicView from './view/CoulombsLawAtomicView.js';
class CoulombsLawAtomicScreen extends Screen {
  /**
   * @param {Tandem} tandem
   */
  constructor(tandem) {
    const options = {
      backgroundColorProperty: CoulombsLawColors.backgroundProperty,
      name: CoulombsLawStrings.screen.atomicScaleStringProperty,
      homeScreenIcon: new ScreenIcon(new Image(atomicScaleScreenIcon_png, {
        tandem: tandem.createTandem('icon')
      }), {
        maxIconWidthProportion: 1,
        maxIconHeightProportion: 1
      }),
      navigationBarIcon: new ScreenIcon(new Image(atomicScaleScreenIconNavbar_png, {
        tandem: tandem.createTandem('navbarIcon')
      }), {
        maxIconWidthProportion: 1,
        maxIconHeightProportion: 1
      }),
      tandem: tandem,
      createKeyboardHelpNode: () => new CoulombsLawKeyboardHelpContent()
    };
    const atomicScreenTandem = tandem.createTandem('coulombsLawAtomicScreen');
    super(() => new CoulombsLawAtomicModel(atomicScreenTandem.createTandem('model')), model => new CoulombsLawAtomicView(model, atomicScreenTandem.createTandem('view')), options);
  }
}
coulombsLaw.register('CoulombsLawAtomicScreen', CoulombsLawAtomicScreen);
export default CoulombsLawAtomicScreen;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTY3JlZW4iLCJTY3JlZW5JY29uIiwiSW1hZ2UiLCJhdG9taWNTY2FsZVNjcmVlbkljb25fcG5nIiwiYXRvbWljU2NhbGVTY3JlZW5JY29uTmF2YmFyX3BuZyIsIkNvdWxvbWJzTGF3Q29sb3JzIiwiQ291bG9tYnNMYXdLZXlib2FyZEhlbHBDb250ZW50IiwiY291bG9tYnNMYXciLCJDb3Vsb21ic0xhd1N0cmluZ3MiLCJDb3Vsb21ic0xhd0F0b21pY01vZGVsIiwiQ291bG9tYnNMYXdBdG9taWNWaWV3IiwiQ291bG9tYnNMYXdBdG9taWNTY3JlZW4iLCJjb25zdHJ1Y3RvciIsInRhbmRlbSIsIm9wdGlvbnMiLCJiYWNrZ3JvdW5kQ29sb3JQcm9wZXJ0eSIsImJhY2tncm91bmRQcm9wZXJ0eSIsIm5hbWUiLCJzY3JlZW4iLCJhdG9taWNTY2FsZVN0cmluZ1Byb3BlcnR5IiwiaG9tZVNjcmVlbkljb24iLCJjcmVhdGVUYW5kZW0iLCJtYXhJY29uV2lkdGhQcm9wb3J0aW9uIiwibWF4SWNvbkhlaWdodFByb3BvcnRpb24iLCJuYXZpZ2F0aW9uQmFySWNvbiIsImNyZWF0ZUtleWJvYXJkSGVscE5vZGUiLCJhdG9taWNTY3JlZW5UYW5kZW0iLCJtb2RlbCIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiQ291bG9tYnNMYXdBdG9taWNTY3JlZW4uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTctMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogQGF1dGhvciBKZXNzZSBHcmVlbmJlcmdcclxuICogQGF1dGhvciBNaWNoYWVsIEJhcmxvd1xyXG4gKi9cclxuXHJcbmltcG9ydCBTY3JlZW4gZnJvbSAnLi4vLi4vLi4vam9pc3QvanMvU2NyZWVuLmpzJztcclxuaW1wb3J0IFNjcmVlbkljb24gZnJvbSAnLi4vLi4vLi4vam9pc3QvanMvU2NyZWVuSWNvbi5qcyc7XHJcbmltcG9ydCB7IEltYWdlIH0gZnJvbSAnLi4vLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IGF0b21pY1NjYWxlU2NyZWVuSWNvbl9wbmcgZnJvbSAnLi4vLi4vaW1hZ2VzL2F0b21pY1NjYWxlU2NyZWVuSWNvbl9wbmcuanMnO1xyXG5pbXBvcnQgYXRvbWljU2NhbGVTY3JlZW5JY29uTmF2YmFyX3BuZyBmcm9tICcuLi8uLi9pbWFnZXMvYXRvbWljU2NhbGVTY3JlZW5JY29uTmF2YmFyX3BuZy5qcyc7XHJcbmltcG9ydCBDb3Vsb21ic0xhd0NvbG9ycyBmcm9tICcuLi9jb21tb24vQ291bG9tYnNMYXdDb2xvcnMuanMnO1xyXG5pbXBvcnQgQ291bG9tYnNMYXdLZXlib2FyZEhlbHBDb250ZW50IGZyb20gJy4uL2NvbW1vbi92aWV3L0NvdWxvbWJzTGF3S2V5Ym9hcmRIZWxwQ29udGVudC5qcyc7XHJcbmltcG9ydCBjb3Vsb21ic0xhdyBmcm9tICcuLi9jb3Vsb21ic0xhdy5qcyc7XHJcbmltcG9ydCBDb3Vsb21ic0xhd1N0cmluZ3MgZnJvbSAnLi4vQ291bG9tYnNMYXdTdHJpbmdzLmpzJztcclxuaW1wb3J0IENvdWxvbWJzTGF3QXRvbWljTW9kZWwgZnJvbSAnLi9tb2RlbC9Db3Vsb21ic0xhd0F0b21pY01vZGVsLmpzJztcclxuaW1wb3J0IENvdWxvbWJzTGF3QXRvbWljVmlldyBmcm9tICcuL3ZpZXcvQ291bG9tYnNMYXdBdG9taWNWaWV3LmpzJztcclxuXHJcbmNsYXNzIENvdWxvbWJzTGF3QXRvbWljU2NyZWVuIGV4dGVuZHMgU2NyZWVuIHtcclxuXHJcbiAgLyoqXHJcbiAgICogQHBhcmFtIHtUYW5kZW19IHRhbmRlbVxyXG4gICAqL1xyXG4gIGNvbnN0cnVjdG9yKCB0YW5kZW0gKSB7XHJcblxyXG4gICAgY29uc3Qgb3B0aW9ucyA9IHtcclxuICAgICAgYmFja2dyb3VuZENvbG9yUHJvcGVydHk6IENvdWxvbWJzTGF3Q29sb3JzLmJhY2tncm91bmRQcm9wZXJ0eSxcclxuICAgICAgbmFtZTogQ291bG9tYnNMYXdTdHJpbmdzLnNjcmVlbi5hdG9taWNTY2FsZVN0cmluZ1Byb3BlcnR5LFxyXG4gICAgICBob21lU2NyZWVuSWNvbjogbmV3IFNjcmVlbkljb24oIG5ldyBJbWFnZSggYXRvbWljU2NhbGVTY3JlZW5JY29uX3BuZywgeyB0YW5kZW06IHRhbmRlbS5jcmVhdGVUYW5kZW0oICdpY29uJyApIH0gKSwge1xyXG4gICAgICAgIG1heEljb25XaWR0aFByb3BvcnRpb246IDEsXHJcbiAgICAgICAgbWF4SWNvbkhlaWdodFByb3BvcnRpb246IDFcclxuICAgICAgfSApLFxyXG4gICAgICBuYXZpZ2F0aW9uQmFySWNvbjogbmV3IFNjcmVlbkljb24oIG5ldyBJbWFnZSggYXRvbWljU2NhbGVTY3JlZW5JY29uTmF2YmFyX3BuZywgeyB0YW5kZW06IHRhbmRlbS5jcmVhdGVUYW5kZW0oICduYXZiYXJJY29uJyApIH0gKSwge1xyXG4gICAgICAgIG1heEljb25XaWR0aFByb3BvcnRpb246IDEsXHJcbiAgICAgICAgbWF4SWNvbkhlaWdodFByb3BvcnRpb246IDFcclxuICAgICAgfSApLFxyXG4gICAgICB0YW5kZW06IHRhbmRlbSxcclxuICAgICAgY3JlYXRlS2V5Ym9hcmRIZWxwTm9kZTogKCkgPT4gbmV3IENvdWxvbWJzTGF3S2V5Ym9hcmRIZWxwQ29udGVudCgpXHJcbiAgICB9O1xyXG5cclxuICAgIGNvbnN0IGF0b21pY1NjcmVlblRhbmRlbSA9IHRhbmRlbS5jcmVhdGVUYW5kZW0oICdjb3Vsb21ic0xhd0F0b21pY1NjcmVlbicgKTtcclxuXHJcbiAgICBzdXBlcihcclxuICAgICAgKCkgPT4gbmV3IENvdWxvbWJzTGF3QXRvbWljTW9kZWwoIGF0b21pY1NjcmVlblRhbmRlbS5jcmVhdGVUYW5kZW0oICdtb2RlbCcgKSApLFxyXG4gICAgICBtb2RlbCA9PiBuZXcgQ291bG9tYnNMYXdBdG9taWNWaWV3KCBtb2RlbCwgYXRvbWljU2NyZWVuVGFuZGVtLmNyZWF0ZVRhbmRlbSggJ3ZpZXcnICkgKSxcclxuICAgICAgb3B0aW9uc1xyXG4gICAgKTtcclxuICB9XHJcbn1cclxuXHJcbmNvdWxvbWJzTGF3LnJlZ2lzdGVyKCAnQ291bG9tYnNMYXdBdG9taWNTY3JlZW4nLCBDb3Vsb21ic0xhd0F0b21pY1NjcmVlbiApO1xyXG5leHBvcnQgZGVmYXVsdCBDb3Vsb21ic0xhd0F0b21pY1NjcmVlbjsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLE1BQU0sTUFBTSw2QkFBNkI7QUFDaEQsT0FBT0MsVUFBVSxNQUFNLGlDQUFpQztBQUN4RCxTQUFTQyxLQUFLLFFBQVEsZ0NBQWdDO0FBQ3RELE9BQU9DLHlCQUF5QixNQUFNLDJDQUEyQztBQUNqRixPQUFPQywrQkFBK0IsTUFBTSxpREFBaUQ7QUFDN0YsT0FBT0MsaUJBQWlCLE1BQU0sZ0NBQWdDO0FBQzlELE9BQU9DLDhCQUE4QixNQUFNLGtEQUFrRDtBQUM3RixPQUFPQyxXQUFXLE1BQU0sbUJBQW1CO0FBQzNDLE9BQU9DLGtCQUFrQixNQUFNLDBCQUEwQjtBQUN6RCxPQUFPQyxzQkFBc0IsTUFBTSxtQ0FBbUM7QUFDdEUsT0FBT0MscUJBQXFCLE1BQU0saUNBQWlDO0FBRW5FLE1BQU1DLHVCQUF1QixTQUFTWCxNQUFNLENBQUM7RUFFM0M7QUFDRjtBQUNBO0VBQ0VZLFdBQVdBLENBQUVDLE1BQU0sRUFBRztJQUVwQixNQUFNQyxPQUFPLEdBQUc7TUFDZEMsdUJBQXVCLEVBQUVWLGlCQUFpQixDQUFDVyxrQkFBa0I7TUFDN0RDLElBQUksRUFBRVQsa0JBQWtCLENBQUNVLE1BQU0sQ0FBQ0MseUJBQXlCO01BQ3pEQyxjQUFjLEVBQUUsSUFBSW5CLFVBQVUsQ0FBRSxJQUFJQyxLQUFLLENBQUVDLHlCQUF5QixFQUFFO1FBQUVVLE1BQU0sRUFBRUEsTUFBTSxDQUFDUSxZQUFZLENBQUUsTUFBTztNQUFFLENBQUUsQ0FBQyxFQUFFO1FBQ2pIQyxzQkFBc0IsRUFBRSxDQUFDO1FBQ3pCQyx1QkFBdUIsRUFBRTtNQUMzQixDQUFFLENBQUM7TUFDSEMsaUJBQWlCLEVBQUUsSUFBSXZCLFVBQVUsQ0FBRSxJQUFJQyxLQUFLLENBQUVFLCtCQUErQixFQUFFO1FBQUVTLE1BQU0sRUFBRUEsTUFBTSxDQUFDUSxZQUFZLENBQUUsWUFBYTtNQUFFLENBQUUsQ0FBQyxFQUFFO1FBQ2hJQyxzQkFBc0IsRUFBRSxDQUFDO1FBQ3pCQyx1QkFBdUIsRUFBRTtNQUMzQixDQUFFLENBQUM7TUFDSFYsTUFBTSxFQUFFQSxNQUFNO01BQ2RZLHNCQUFzQixFQUFFQSxDQUFBLEtBQU0sSUFBSW5CLDhCQUE4QixDQUFDO0lBQ25FLENBQUM7SUFFRCxNQUFNb0Isa0JBQWtCLEdBQUdiLE1BQU0sQ0FBQ1EsWUFBWSxDQUFFLHlCQUEwQixDQUFDO0lBRTNFLEtBQUssQ0FDSCxNQUFNLElBQUlaLHNCQUFzQixDQUFFaUIsa0JBQWtCLENBQUNMLFlBQVksQ0FBRSxPQUFRLENBQUUsQ0FBQyxFQUM5RU0sS0FBSyxJQUFJLElBQUlqQixxQkFBcUIsQ0FBRWlCLEtBQUssRUFBRUQsa0JBQWtCLENBQUNMLFlBQVksQ0FBRSxNQUFPLENBQUUsQ0FBQyxFQUN0RlAsT0FDRixDQUFDO0VBQ0g7QUFDRjtBQUVBUCxXQUFXLENBQUNxQixRQUFRLENBQUUseUJBQXlCLEVBQUVqQix1QkFBd0IsQ0FBQztBQUMxRSxlQUFlQSx1QkFBdUIifQ==