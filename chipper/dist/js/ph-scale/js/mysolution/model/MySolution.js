// Copyright 2020-2022, University of Colorado Boulder

/**
 * MySolution is the model of the solution in the My Solution screen.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import NumberProperty from '../../../../axon/js/NumberProperty.js';
import Property from '../../../../axon/js/Property.js';
import Range from '../../../../dot/js/Range.js';
import optionize from '../../../../phet-core/js/optionize.js';
import PhetioObject from '../../../../tandem/js/PhetioObject.js';
import SolutionDerivedProperties from '../../common/model/SolutionDerivedProperties.js';
import Water from '../../common/model/Water.js';
import PHScaleConstants from '../../common/PHScaleConstants.js';
import phScale from '../../phScale.js';
export default class MySolution extends PhetioObject {
  // pH of the solution in the beaker
  // total volume of the solution in the beaker

  constructor(providedOptions) {
    const options = optionize()({
      // SelfOptions
      pH: 7,
      volume: 0.5,
      maxVolume: 1.2,
      // PhetioObjectOptions
      phetioState: false
    }, providedOptions);
    super(options);
    this.pHProperty = new NumberProperty(options.pH, {
      range: PHScaleConstants.PH_RANGE,
      tandem: options.tandem.createTandem('pHProperty'),
      phetioDocumentation: 'pH of the solution',
      phetioHighFrequency: true
    });
    this.totalVolumeProperty = new NumberProperty(options.volume, {
      units: 'L',
      tandem: options.tandem.createTandem('totalVolumeProperty'),
      range: new Range(0.01, options.maxVolume),
      // must be > 0 !!
      phetioDocumentation: 'total volume of the solution',
      phetioHighFrequency: true
    });

    // Do not instrument for PhET-iO.
    this.colorProperty = new Property(Water.color);
    this.derivedProperties = new SolutionDerivedProperties(this.pHProperty, this.totalVolumeProperty, {
      // Properties created by SolutionDerivedProperties should appear as if they are children of MySolution.
      tandem: options.tandem
    });
  }
  reset() {
    this.pHProperty.reset();
    this.totalVolumeProperty.reset();
    // this.derivedProperties does not need to be reset because all of its Properties are derived.
  }
}

phScale.register('MySolution', MySolution);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJOdW1iZXJQcm9wZXJ0eSIsIlByb3BlcnR5IiwiUmFuZ2UiLCJvcHRpb25pemUiLCJQaGV0aW9PYmplY3QiLCJTb2x1dGlvbkRlcml2ZWRQcm9wZXJ0aWVzIiwiV2F0ZXIiLCJQSFNjYWxlQ29uc3RhbnRzIiwicGhTY2FsZSIsIk15U29sdXRpb24iLCJjb25zdHJ1Y3RvciIsInByb3ZpZGVkT3B0aW9ucyIsIm9wdGlvbnMiLCJwSCIsInZvbHVtZSIsIm1heFZvbHVtZSIsInBoZXRpb1N0YXRlIiwicEhQcm9wZXJ0eSIsInJhbmdlIiwiUEhfUkFOR0UiLCJ0YW5kZW0iLCJjcmVhdGVUYW5kZW0iLCJwaGV0aW9Eb2N1bWVudGF0aW9uIiwicGhldGlvSGlnaEZyZXF1ZW5jeSIsInRvdGFsVm9sdW1lUHJvcGVydHkiLCJ1bml0cyIsImNvbG9yUHJvcGVydHkiLCJjb2xvciIsImRlcml2ZWRQcm9wZXJ0aWVzIiwicmVzZXQiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIk15U29sdXRpb24udHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjAtMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogTXlTb2x1dGlvbiBpcyB0aGUgbW9kZWwgb2YgdGhlIHNvbHV0aW9uIGluIHRoZSBNeSBTb2x1dGlvbiBzY3JlZW4uXHJcbiAqXHJcbiAqIEBhdXRob3IgQ2hyaXMgTWFsbGV5IChQaXhlbFpvb20sIEluYy4pXHJcbiAqL1xyXG5cclxuaW1wb3J0IE51bWJlclByb3BlcnR5IGZyb20gJy4uLy4uLy4uLy4uL2F4b24vanMvTnVtYmVyUHJvcGVydHkuanMnO1xyXG5pbXBvcnQgUHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vLi4vYXhvbi9qcy9Qcm9wZXJ0eS5qcyc7XHJcbmltcG9ydCBSYW5nZSBmcm9tICcuLi8uLi8uLi8uLi9kb3QvanMvUmFuZ2UuanMnO1xyXG5pbXBvcnQgb3B0aW9uaXplIGZyb20gJy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy9vcHRpb25pemUuanMnO1xyXG5pbXBvcnQgUGlja1JlcXVpcmVkIGZyb20gJy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy90eXBlcy9QaWNrUmVxdWlyZWQuanMnO1xyXG5pbXBvcnQgeyBDb2xvciB9IGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XHJcbmltcG9ydCBQaGV0aW9PYmplY3QsIHsgUGhldGlvT2JqZWN0T3B0aW9ucyB9IGZyb20gJy4uLy4uLy4uLy4uL3RhbmRlbS9qcy9QaGV0aW9PYmplY3QuanMnO1xyXG5pbXBvcnQgU29sdXRpb25EZXJpdmVkUHJvcGVydGllcyBmcm9tICcuLi8uLi9jb21tb24vbW9kZWwvU29sdXRpb25EZXJpdmVkUHJvcGVydGllcy5qcyc7XHJcbmltcG9ydCBXYXRlciBmcm9tICcuLi8uLi9jb21tb24vbW9kZWwvV2F0ZXIuanMnO1xyXG5pbXBvcnQgUEhTY2FsZUNvbnN0YW50cyBmcm9tICcuLi8uLi9jb21tb24vUEhTY2FsZUNvbnN0YW50cy5qcyc7XHJcbmltcG9ydCBwaFNjYWxlIGZyb20gJy4uLy4uL3BoU2NhbGUuanMnO1xyXG5cclxudHlwZSBTZWxmT3B0aW9ucyA9IHtcclxuICBwSD86IG51bWJlcjtcclxuICB2b2x1bWU/OiBudW1iZXI7IC8vIENcclxuICBtYXhWb2x1bWU/OiBudW1iZXI7IC8vIExcclxufTtcclxuXHJcbnR5cGUgTXlTb2x1dGlvbk9wdGlvbnMgPSBTZWxmT3B0aW9ucyAmIFBpY2tSZXF1aXJlZDxQaGV0aW9PYmplY3RPcHRpb25zLCAndGFuZGVtJz47XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNeVNvbHV0aW9uIGV4dGVuZHMgUGhldGlvT2JqZWN0IHtcclxuXHJcbiAgcHVibGljIHJlYWRvbmx5IHBIUHJvcGVydHk6IE51bWJlclByb3BlcnR5OyAvLyBwSCBvZiB0aGUgc29sdXRpb24gaW4gdGhlIGJlYWtlclxyXG4gIHB1YmxpYyByZWFkb25seSB0b3RhbFZvbHVtZVByb3BlcnR5OiBOdW1iZXJQcm9wZXJ0eTsgLy8gdG90YWwgdm9sdW1lIG9mIHRoZSBzb2x1dGlvbiBpbiB0aGUgYmVha2VyXHJcbiAgcHVibGljIHJlYWRvbmx5IGNvbG9yUHJvcGVydHk6IFByb3BlcnR5PENvbG9yPjtcclxuICBwdWJsaWMgcmVhZG9ubHkgZGVyaXZlZFByb3BlcnRpZXM6IFNvbHV0aW9uRGVyaXZlZFByb3BlcnRpZXM7XHJcblxyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvciggcHJvdmlkZWRPcHRpb25zOiBNeVNvbHV0aW9uT3B0aW9ucyApIHtcclxuXHJcbiAgICBjb25zdCBvcHRpb25zID0gb3B0aW9uaXplPE15U29sdXRpb25PcHRpb25zLCBTZWxmT3B0aW9ucywgUGhldGlvT2JqZWN0T3B0aW9ucz4oKSgge1xyXG5cclxuICAgICAgLy8gU2VsZk9wdGlvbnNcclxuICAgICAgcEg6IDcsXHJcbiAgICAgIHZvbHVtZTogMC41LFxyXG4gICAgICBtYXhWb2x1bWU6IDEuMixcclxuXHJcbiAgICAgIC8vIFBoZXRpb09iamVjdE9wdGlvbnNcclxuICAgICAgcGhldGlvU3RhdGU6IGZhbHNlXHJcbiAgICB9LCBwcm92aWRlZE9wdGlvbnMgKTtcclxuXHJcbiAgICBzdXBlciggb3B0aW9ucyApO1xyXG5cclxuICAgIHRoaXMucEhQcm9wZXJ0eSA9IG5ldyBOdW1iZXJQcm9wZXJ0eSggb3B0aW9ucy5wSCwge1xyXG4gICAgICByYW5nZTogUEhTY2FsZUNvbnN0YW50cy5QSF9SQU5HRSxcclxuICAgICAgdGFuZGVtOiBvcHRpb25zLnRhbmRlbS5jcmVhdGVUYW5kZW0oICdwSFByb3BlcnR5JyApLFxyXG4gICAgICBwaGV0aW9Eb2N1bWVudGF0aW9uOiAncEggb2YgdGhlIHNvbHV0aW9uJyxcclxuICAgICAgcGhldGlvSGlnaEZyZXF1ZW5jeTogdHJ1ZVxyXG4gICAgfSApO1xyXG5cclxuICAgIHRoaXMudG90YWxWb2x1bWVQcm9wZXJ0eSA9IG5ldyBOdW1iZXJQcm9wZXJ0eSggb3B0aW9ucy52b2x1bWUsIHtcclxuICAgICAgdW5pdHM6ICdMJyxcclxuICAgICAgdGFuZGVtOiBvcHRpb25zLnRhbmRlbS5jcmVhdGVUYW5kZW0oICd0b3RhbFZvbHVtZVByb3BlcnR5JyApLFxyXG4gICAgICByYW5nZTogbmV3IFJhbmdlKCAwLjAxLCBvcHRpb25zLm1heFZvbHVtZSApLCAvLyBtdXN0IGJlID4gMCAhIVxyXG4gICAgICBwaGV0aW9Eb2N1bWVudGF0aW9uOiAndG90YWwgdm9sdW1lIG9mIHRoZSBzb2x1dGlvbicsXHJcbiAgICAgIHBoZXRpb0hpZ2hGcmVxdWVuY3k6IHRydWVcclxuICAgIH0gKTtcclxuXHJcbiAgICAvLyBEbyBub3QgaW5zdHJ1bWVudCBmb3IgUGhFVC1pTy5cclxuICAgIHRoaXMuY29sb3JQcm9wZXJ0eSA9IG5ldyBQcm9wZXJ0eSggV2F0ZXIuY29sb3IgKTtcclxuXHJcbiAgICB0aGlzLmRlcml2ZWRQcm9wZXJ0aWVzID0gbmV3IFNvbHV0aW9uRGVyaXZlZFByb3BlcnRpZXMoIHRoaXMucEhQcm9wZXJ0eSwgdGhpcy50b3RhbFZvbHVtZVByb3BlcnR5LCB7XHJcblxyXG4gICAgICAvLyBQcm9wZXJ0aWVzIGNyZWF0ZWQgYnkgU29sdXRpb25EZXJpdmVkUHJvcGVydGllcyBzaG91bGQgYXBwZWFyIGFzIGlmIHRoZXkgYXJlIGNoaWxkcmVuIG9mIE15U29sdXRpb24uXHJcbiAgICAgIHRhbmRlbTogb3B0aW9ucy50YW5kZW1cclxuICAgIH0gKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyByZXNldCgpOiB2b2lkIHtcclxuICAgIHRoaXMucEhQcm9wZXJ0eS5yZXNldCgpO1xyXG4gICAgdGhpcy50b3RhbFZvbHVtZVByb3BlcnR5LnJlc2V0KCk7XHJcbiAgICAvLyB0aGlzLmRlcml2ZWRQcm9wZXJ0aWVzIGRvZXMgbm90IG5lZWQgdG8gYmUgcmVzZXQgYmVjYXVzZSBhbGwgb2YgaXRzIFByb3BlcnRpZXMgYXJlIGRlcml2ZWQuXHJcbiAgfVxyXG59XHJcblxyXG5w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