// Copyright 2022, University of Colorado Boulder

/**
 * PHSpinnerNode is the spinner used to change the pH value, on the pH meter in the 'My Solution' screen.
 */

import Property from '../../../../axon/js/Property.js';
import PhetFont from '../../../../scenery-phet/js/PhetFont.js';
import NumberSpinner from '../../../../sun/js/NumberSpinner.js';
import PHScaleConstants from '../../common/PHScaleConstants.js';
import optionize from '../../../../phet-core/js/optionize.js';
import Utils from '../../../../dot/js/Utils.js';
export class PHSpinnerNode extends NumberSpinner {
  constructor(pHProperty, providedOptions) {
    const pHDelta = 1 / Math.pow(10, PHScaleConstants.PH_METER_DECIMAL_PLACES);

    // When using the spinner to change pH, constrain pHProperty to be exactly the value displayed by the spinner.
    // See https://github.com/phetsims/ph-scale/issues/143
    const incrementFunction = value => {
      value = Utils.toFixedNumber(value, PHScaleConstants.PH_METER_DECIMAL_PLACES);
      return Utils.toFixedNumber(value + pHDelta, PHScaleConstants.PH_METER_DECIMAL_PLACES);
    };
    const decrementFunction = value => {
      value = Utils.toFixedNumber(value, PHScaleConstants.PH_METER_DECIMAL_PLACES);
      return Utils.toFixedNumber(value - pHDelta, PHScaleConstants.PH_METER_DECIMAL_PLACES);
    };
    const options = optionize()({
      // NumberSpinnerOptions
      incrementFunction: incrementFunction,
      decrementFunction: decrementFunction,
      numberDisplayOptions: {
        decimalPlaces: PHScaleConstants.PH_METER_DECIMAL_PLACES,
        xMargin: 10,
        yMargin: 4,
        cornerRadius: 8,
        backgroundStroke: 'darkGray',
        textOptions: {
          font: new PhetFont(28),
          stringPropertyOptions: {
            phetioHighFrequency: true
          }
        }
      },
      arrowsScale: 1.5,
      xSpacing: 6,
      ySpacing: 4,
      touchAreaXDilation: 15,
      touchAreaYDilation: 2
    }, providedOptions);
    super(pHProperty, new Property(PHScaleConstants.PH_RANGE), options);
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQcm9wZXJ0eSIsIlBoZXRGb250IiwiTnVtYmVyU3Bpbm5lciIsIlBIU2NhbGVDb25zdGFudHMiLCJvcHRpb25pemUiLCJVdGlscyIsIlBIU3Bpbm5lck5vZGUiLCJjb25zdHJ1Y3RvciIsInBIUHJvcGVydHkiLCJwcm92aWRlZE9wdGlvbnMiLCJwSERlbHRhIiwiTWF0aCIsInBvdyIsIlBIX01FVEVSX0RFQ0lNQUxfUExBQ0VTIiwiaW5jcmVtZW50RnVuY3Rpb24iLCJ2YWx1ZSIsInRvRml4ZWROdW1iZXIiLCJkZWNyZW1lbnRGdW5jdGlvbiIsIm9wdGlvbnMiLCJudW1iZXJEaXNwbGF5T3B0aW9ucyIsImRlY2ltYWxQbGFjZXMiLCJ4TWFyZ2luIiwieU1hcmdpbiIsImNvcm5lclJhZGl1cyIsImJhY2tncm91bmRTdHJva2UiLCJ0ZXh0T3B0aW9ucyIsImZvbnQiLCJzdHJpbmdQcm9wZXJ0eU9wdGlvbnMiLCJwaGV0aW9IaWdoRnJlcXVlbmN5IiwiYXJyb3dzU2NhbGUiLCJ4U3BhY2luZyIsInlTcGFjaW5nIiwidG91Y2hBcmVhWERpbGF0aW9uIiwidG91Y2hBcmVhWURpbGF0aW9uIiwiUEhfUkFOR0UiXSwic291cmNlcyI6WyJQSFNwaW5uZXJOb2RlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIyLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBQSFNwaW5uZXJOb2RlIGlzIHRoZSBzcGlubmVyIHVzZWQgdG8gY2hhbmdlIHRoZSBwSCB2YWx1ZSwgb24gdGhlIHBIIG1ldGVyIGluIHRoZSAnTXkgU29sdXRpb24nIHNjcmVlbi5cclxuICovXHJcblxyXG5pbXBvcnQgUHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vLi4vYXhvbi9qcy9Qcm9wZXJ0eS5qcyc7XHJcbmltcG9ydCBQaGV0Rm9udCBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5LXBoZXQvanMvUGhldEZvbnQuanMnO1xyXG5pbXBvcnQgTnVtYmVyU3Bpbm5lciwgeyBOdW1iZXJTcGlubmVyT3B0aW9ucyB9IGZyb20gJy4uLy4uLy4uLy4uL3N1bi9qcy9OdW1iZXJTcGlubmVyLmpzJztcclxuaW1wb3J0IFBIU2NhbGVDb25zdGFudHMgZnJvbSAnLi4vLi4vY29tbW9uL1BIU2NhbGVDb25zdGFudHMuanMnO1xyXG5pbXBvcnQgb3B0aW9uaXplLCB7IEVtcHR5U2VsZk9wdGlvbnMgfSBmcm9tICcuLi8uLi8uLi8uLi9waGV0LWNvcmUvanMvb3B0aW9uaXplLmpzJztcclxuaW1wb3J0IFV0aWxzIGZyb20gJy4uLy4uLy4uLy4uL2RvdC9qcy9VdGlscy5qcyc7XHJcbmltcG9ydCBQaWNrUmVxdWlyZWQgZnJvbSAnLi4vLi4vLi4vLi4vcGhldC1jb3JlL2pzL3R5cGVzL1BpY2tSZXF1aXJlZC5qcyc7XHJcblxyXG50eXBlIFNlbGZPcHRpb25zID0gRW1wdHlTZWxmT3B0aW9ucztcclxuXHJcbnR5cGUgUEhTcGlubmVyTm9kZU9wdGlvbnMgPSBTZWxmT3B0aW9ucyAmIFBpY2tSZXF1aXJlZDxOdW1iZXJTcGlubmVyT3B0aW9ucywgJ3RhbmRlbSc+O1xyXG5cclxuZXhwb3J0IGNsYXNzIFBIU3Bpbm5lck5vZGUgZXh0ZW5kcyBOdW1iZXJTcGlubmVyIHtcclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKCBwSFByb3BlcnR5OiBQcm9wZXJ0eTxudW1iZXI+LCBwcm92aWRlZE9wdGlvbnM6IFBIU3Bpbm5lck5vZGVPcHRpb25zICkge1xyXG5cclxuICAgIGNvbnN0IHBIRGVsdGEgPSAxIC8gTWF0aC5wb3coIDEwLCBQSFNjYWxlQ29uc3RhbnRzLlBIX01FVEVSX0RFQ0lNQUxfUExBQ0VTICk7XHJcblxyXG4gICAgLy8gV2hlbiB1c2luZyB0aGUgc3Bpbm5lciB0byBjaGFuZ2UgcEgsIGNvbnN0cmFpbiBwSFByb3BlcnR5IHRvIGJlIGV4YWN0bHkgdGhlIHZhbHVlIGRpc3BsYXllZCBieSB0aGUgc3Bpbm5lci5cclxuICAgIC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vcGhldHNpbXMvcGgtc2NhbGUvaXNzdWVzLzE0M1xyXG4gICAgY29uc3QgaW5jcmVtZW50RnVuY3Rpb24gPSAoIHZhbHVlOiBudW1iZXIgKSA9PiB7XHJcbiAgICAgIHZhbHVlID0gVXRpbHMudG9GaXhlZE51bWJlciggdmFsdWUsIFBIU2NhbGVDb25zdGFudHMuUEhfTUVURVJfREVDSU1BTF9QTEFDRVMgKTtcclxuICAgICAgcmV0dXJuIFV0aWxzLnRvRml4ZWROdW1iZXIoIHZhbHVlICsgcEhEZWx0YSwgUEhTY2FsZUNvbnN0YW50cy5QSF9NRVRFUl9ERUNJTUFMX1BMQUNFUyApO1xyXG4gICAgfTtcclxuXHJcbiAgICBjb25zdCBkZWNyZW1lbnRGdW5jdGlvbiA9ICggdmFsdWU6IG51bWJlciApID0+IHtcclxuICAgICAgdmFsdWUgPSBVdGlscy50b0ZpeGVkTnVtYmVyKCB2YWx1ZSwgUEhTY2FsZUNvbnN0YW50cy5QSF9NRVRFUl9ERUNJTUFMX1BMQUNFUyApO1xyXG4gICAgICByZXR1cm4gVXRpbHMudG9GaXhlZE51bWJlciggdmFsdWUgLSBwSERlbHRhLCBQSFNjYWxlQ29uc3RhbnRzLlBIX01FVEVSX0RFQ0lNQUxfUExBQ0VTICk7XHJcbiAgICB9O1xyXG5cclxuICAgIGNvbnN0IG9wdGlvbnMgPSBvcHRpb25pemU8UEhTcGlubmVyTm9kZU9wdGlvbnMsIFNlbGZPcHRpb25zLCBOdW1iZXJTcGlubmVyT3B0aW9ucz4oKSgge1xyXG5cclxuICAgICAgLy8gTnVtYmVyU3Bpbm5lck9wdGlvbnNcclxuICAgICAgaW5jcmVtZW50RnVuY3Rpb246IGluY3JlbWVudEZ1bmN0aW9uLFxyXG4gICAgICBkZWNyZW1lbnRGdW5jdGlvbjogZGVjcmVtZW50RnVuY3Rpb24sXHJcbiAgICAgIG51bWJlckRpc3BsYXlPcHRpb25zOiB7XHJcbiAgICAgICAgZGVjaW1hbFBsYWNlczogUEhTY2FsZUNvbnN0YW50cy5QSF9NRVRFUl9ERUNJTUFMX1BMQUNFUyxcclxuICAgICAgICB4TWFyZ2luOiAxMCxcclxuICAgICAgICB5TWFyZ2luOiA0LFxyXG4gICAgICAgIGNvcm5lclJhZGl1czogOCxcclxuICAgICAgICBiYWNrZ3JvdW5kU3Ryb2tlOiAnZGFya0dyYXknLFxyXG4gICAgICAgIHRleHRPcHRpb25zOiB7XHJcbiAgICAgICAgICBmb250OiBuZXcgUGhldEZvbnQoIDI4ICksXHJcbiAgICAgICAgICBzdHJpbmdQcm9wZXJ0eU9wdGlvbnM6IHsgcGhldGlvSGlnaEZyZXF1ZW5jeTogdHJ1ZSB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9LFxyXG4gICAgICBhcnJvd3NTY2FsZTogMS41LFxyXG4gICAgICB4U3BhY2luZzogNixcclxuICAgICAgeVNwYWNpbmc6IDQsXHJcbiAgICAgIHRvdWNoQXJlYVhEaWxhdGlvbjogMTUsXHJcbiAgICAgIHRvdWNoQXJlYVlEaWxhdGlvbjogMlxyXG4gICAgfSwgcHJvdmlkZWRPcHRpb25zICk7XHJcblxyXG4gICAgc3VwZXIoIHBIUHJvcGVydHksIG5ldyBQcm9wZXJ0eSggUEhTY2FsZUNvbnN0YW50cy5QSF9SQU5HRSApLCBvcHRpb25zICk7XHJcbiAgfVxyXG59Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsUUFBUSxNQUFNLGlDQUFpQztBQUN0RCxPQUFPQyxRQUFRLE1BQU0seUNBQXlDO0FBQzlELE9BQU9DLGFBQWEsTUFBZ0MscUNBQXFDO0FBQ3pGLE9BQU9DLGdCQUFnQixNQUFNLGtDQUFrQztBQUMvRCxPQUFPQyxTQUFTLE1BQTRCLHVDQUF1QztBQUNuRixPQUFPQyxLQUFLLE1BQU0sNkJBQTZCO0FBTy9DLE9BQU8sTUFBTUMsYUFBYSxTQUFTSixhQUFhLENBQUM7RUFFeENLLFdBQVdBLENBQUVDLFVBQTRCLEVBQUVDLGVBQXFDLEVBQUc7SUFFeEYsTUFBTUMsT0FBTyxHQUFHLENBQUMsR0FBR0MsSUFBSSxDQUFDQyxHQUFHLENBQUUsRUFBRSxFQUFFVCxnQkFBZ0IsQ0FBQ1UsdUJBQXdCLENBQUM7O0lBRTVFO0lBQ0E7SUFDQSxNQUFNQyxpQkFBaUIsR0FBS0MsS0FBYSxJQUFNO01BQzdDQSxLQUFLLEdBQUdWLEtBQUssQ0FBQ1csYUFBYSxDQUFFRCxLQUFLLEVBQUVaLGdCQUFnQixDQUFDVSx1QkFBd0IsQ0FBQztNQUM5RSxPQUFPUixLQUFLLENBQUNXLGFBQWEsQ0FBRUQsS0FBSyxHQUFHTCxPQUFPLEVBQUVQLGdCQUFnQixDQUFDVSx1QkFBd0IsQ0FBQztJQUN6RixDQUFDO0lBRUQsTUFBTUksaUJBQWlCLEdBQUtGLEtBQWEsSUFBTTtNQUM3Q0EsS0FBSyxHQUFHVixLQUFLLENBQUNXLGFBQWEsQ0FBRUQsS0FBSyxFQUFFWixnQkFBZ0IsQ0FBQ1UsdUJBQXdCLENBQUM7TUFDOUUsT0FBT1IsS0FBSyxDQUFDVyxhQUFhLENBQUVELEtBQUssR0FBR0wsT0FBTyxFQUFFUCxnQkFBZ0IsQ0FBQ1UsdUJBQXdCLENBQUM7SUFDekYsQ0FBQztJQUVELE1BQU1LLE9BQU8sR0FBR2QsU0FBUyxDQUEwRCxDQUFDLENBQUU7TUFFcEY7TUFDQVUsaUJBQWlCLEVBQUVBLGlCQUFpQjtNQUNwQ0csaUJBQWlCLEVBQUVBLGlCQUFpQjtNQUNwQ0Usb0JBQW9CLEVBQUU7UUFDcEJDLGFBQWEsRUFBRWpCLGdCQUFnQixDQUFDVSx1QkFBdUI7UUFDdkRRLE9BQU8sRUFBRSxFQUFFO1FBQ1hDLE9BQU8sRUFBRSxDQUFDO1FBQ1ZDLFlBQVksRUFBRSxDQUFDO1FBQ2ZDLGdCQUFnQixFQUFFLFVBQVU7UUFDNUJDLFdBQVcsRUFBRTtVQUNYQyxJQUFJLEVBQUUsSUFBSXpCLFFBQVEsQ0FBRSxFQUFHLENBQUM7VUFDeEIwQixxQkFBcUIsRUFBRTtZQUFFQyxtQkFBbUIsRUFBRTtVQUFLO1FBQ3JEO01BQ0YsQ0FBQztNQUNEQyxXQUFXLEVBQUUsR0FBRztNQUNoQkMsUUFBUSxFQUFFLENBQUM7TUFDWEMsUUFBUSxFQUFFLENBQUM7TUFDWEMsa0JBQWtCLEVBQUUsRUFBRTtNQUN0QkMsa0JBQWtCLEVBQUU7SUFDdEIsQ0FBQyxFQUFFeEIsZUFBZ0IsQ0FBQztJQUVwQixLQUFLLENBQUVELFVBQVUsRUFBRSxJQUFJUixRQUFRLENBQUVHLGdCQUFnQixDQUFDK0IsUUFBUyxDQUFDLEVBQUVoQixPQUFRLENBQUM7RUFDekU7QUFDRiJ9