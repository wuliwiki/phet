// Copyright 2013-2023, University of Colorado Boulder

/**
 * The 'My Solution' screen.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import Property from '../../../axon/js/Property.js';
import Screen from '../../../joist/js/Screen.js';
import ScreenIcon from '../../../joist/js/ScreenIcon.js';
import optionize from '../../../phet-core/js/optionize.js';
import ModelViewTransform2 from '../../../phetcommon/js/view/ModelViewTransform2.js';
import { Image } from '../../../scenery/js/imports.js';
import mySolutionHomeScreenIcon_png from '../../images/mySolutionHomeScreenIcon_png.js';
import mySolutionNavbarIcon_png from '../../images/mySolutionNavbarIcon_png.js';
import PHScaleColors from '../common/PHScaleColors.js';
import phScale from '../phScale.js';
import PhScaleStrings from '../PhScaleStrings.js';
import MySolutionModel from './model/MySolutionModel.js';
import MySolutionScreenView from './view/MySolutionScreenView.js';
import MySolutionKeyboardHelpContent from './view/MySolutionKeyboardHelpContent.js';
export default class MySolutionScreen extends Screen {
  constructor(providedOptions) {
    const options = optionize()({
      // ScreenOptions
      name: PhScaleStrings.screen.mySolutionStringProperty,
      backgroundColorProperty: new Property(PHScaleColors.SCREEN_BACKGROUND),
      homeScreenIcon: new ScreenIcon(new Image(mySolutionHomeScreenIcon_png), {
        maxIconWidthProportion: 1,
        maxIconHeightProportion: 1
      }),
      navigationBarIcon: new ScreenIcon(new Image(mySolutionNavbarIcon_png), {
        maxIconWidthProportion: 1,
        maxIconHeightProportion: 1
      }),
      //TODO https://github.com/phetsims/ph-scale/issues/249 restore when work on alternative input resume
      createKeyboardHelpNode: () => new MySolutionKeyboardHelpContent()
    }, providedOptions);
    super(() => new MySolutionModel({
      tandem: options.tandem.createTandem('model')
    }), model => new MySolutionScreenView(model, ModelViewTransform2.createIdentity(), {
      tandem: options.tandem.createTandem('view')
    }), options);
  }
  dispose() {
    assert && assert(false, 'dispose is not supported, exists for the lifetime of the sim');
    super.dispose();
  }
}
phScale.register('MySolutionScreen', MySolutionScreen);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQcm9wZXJ0eSIsIlNjcmVlbiIsIlNjcmVlbkljb24iLCJvcHRpb25pemUiLCJNb2RlbFZpZXdUcmFuc2Zvcm0yIiwiSW1hZ2UiLCJteVNvbHV0aW9uSG9tZVNjcmVlbkljb25fcG5nIiwibXlTb2x1dGlvbk5hdmJhckljb25fcG5nIiwiUEhTY2FsZUNvbG9ycyIsInBoU2NhbGUiLCJQaFNjYWxlU3RyaW5ncyIsIk15U29sdXRpb25Nb2RlbCIsIk15U29sdXRpb25TY3JlZW5WaWV3IiwiTXlTb2x1dGlvbktleWJvYXJkSGVscENvbnRlbnQiLCJNeVNvbHV0aW9uU2NyZWVuIiwiY29uc3RydWN0b3IiLCJwcm92aWRlZE9wdGlvbnMiLCJvcHRpb25zIiwibmFtZSIsInNjcmVlbiIsIm15U29sdXRpb25TdHJpbmdQcm9wZXJ0eSIsImJhY2tncm91bmRDb2xvclByb3BlcnR5IiwiU0NSRUVOX0JBQ0tHUk9VTkQiLCJob21lU2NyZWVuSWNvbiIsIm1heEljb25XaWR0aFByb3BvcnRpb24iLCJtYXhJY29uSGVpZ2h0UHJvcG9ydGlvbiIsIm5hdmlnYXRpb25CYXJJY29uIiwiY3JlYXRlS2V5Ym9hcmRIZWxwTm9kZSIsInRhbmRlbSIsImNyZWF0ZVRhbmRlbSIsIm1vZGVsIiwiY3JlYXRlSWRlbnRpdHkiLCJkaXNwb3NlIiwiYXNzZXJ0IiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJNeVNvbHV0aW9uU2NyZWVuLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDEzLTIwMjMsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIFRoZSAnTXkgU29sdXRpb24nIHNjcmVlbi5cclxuICpcclxuICogQGF1dGhvciBDaHJpcyBNYWxsZXkgKFBpeGVsWm9vbSwgSW5jLilcclxuICovXHJcblxyXG5pbXBvcnQgUHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vYXhvbi9qcy9Qcm9wZXJ0eS5qcyc7XHJcbmltcG9ydCBTY3JlZW4sIHsgU2NyZWVuT3B0aW9ucyB9IGZyb20gJy4uLy4uLy4uL2pvaXN0L2pzL1NjcmVlbi5qcyc7XHJcbmltcG9ydCBTY3JlZW5JY29uIGZyb20gJy4uLy4uLy4uL2pvaXN0L2pzL1NjcmVlbkljb24uanMnO1xyXG5pbXBvcnQgb3B0aW9uaXplLCB7IEVtcHR5U2VsZk9wdGlvbnMgfSBmcm9tICcuLi8uLi8uLi9waGV0LWNvcmUvanMvb3B0aW9uaXplLmpzJztcclxuaW1wb3J0IFBpY2tSZXF1aXJlZCBmcm9tICcuLi8uLi8uLi9waGV0LWNvcmUvanMvdHlwZXMvUGlja1JlcXVpcmVkLmpzJztcclxuaW1wb3J0IE1vZGVsVmlld1RyYW5zZm9ybTIgZnJvbSAnLi4vLi4vLi4vcGhldGNvbW1vbi9qcy92aWV3L01vZGVsVmlld1RyYW5zZm9ybTIuanMnO1xyXG5pbXBvcnQgeyBJbWFnZSB9IGZyb20gJy4uLy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XHJcbmltcG9ydCBteVNvbHV0aW9uSG9tZVNjcmVlbkljb25fcG5nIGZyb20gJy4uLy4uL2ltYWdlcy9teVNvbHV0aW9uSG9tZVNjcmVlbkljb25fcG5nLmpzJztcclxuaW1wb3J0IG15U29sdXRpb25OYXZiYXJJY29uX3BuZyBmcm9tICcuLi8uLi9pbWFnZXMvbXlTb2x1dGlvbk5hdmJhckljb25fcG5nLmpzJztcclxuaW1wb3J0IFBIU2NhbGVDb2xvcnMgZnJvbSAnLi4vY29tbW9uL1BIU2NhbGVDb2xvcnMuanMnO1xyXG5pbXBvcnQgcGhTY2FsZSBmcm9tICcuLi9waFNjYWxlLmpzJztcclxuaW1wb3J0IFBoU2NhbGVTdHJpbmdzIGZyb20gJy4uL1BoU2NhbGVTdHJpbmdzLmpzJztcclxuaW1wb3J0IE15U29sdXRpb25Nb2RlbCBmcm9tICcuL21vZGVsL015U29sdXRpb25Nb2RlbC5qcyc7XHJcbmltcG9ydCBNeVNvbHV0aW9uU2NyZWVuVmlldyBmcm9tICcuL3ZpZXcvTXlTb2x1dGlvblNjcmVlblZpZXcuanMnO1xyXG5pbXBvcnQgTXlTb2x1dGlvbktleWJvYXJkSGVscENvbnRlbnQgZnJvbSAnLi92aWV3L015U29sdXRpb25LZXlib2FyZEhlbHBDb250ZW50LmpzJztcclxuXHJcbnR5cGUgU2VsZk9wdGlvbnMgPSBFbXB0eVNlbGZPcHRpb25zO1xyXG5cclxudHlwZSBNeVNvbHV0aW9uU2NyZWVuT3B0aW9ucyA9IFNlbGZPcHRpb25zICYgUGlja1JlcXVpcmVkPFNjcmVlbk9wdGlvbnMsICd0YW5kZW0nPjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE15U29sdXRpb25TY3JlZW4gZXh0ZW5kcyBTY3JlZW48TXlTb2x1dGlvbk1vZGVsLCBNeVNvbHV0aW9uU2NyZWVuVmlldz4ge1xyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoIHByb3ZpZGVkT3B0aW9uczogTXlTb2x1dGlvblNjcmVlbk9wdGlvbnMgKSB7XHJcblxyXG4gICAgY29uc3Qgb3B0aW9ucyA9IG9wdGlvbml6ZTxNeVNvbHV0aW9uU2NyZWVuT3B0aW9ucywgU2VsZk9wdGlvbnMsIFNjcmVlbk9wdGlvbnM+KCkoIHtcclxuXHJcbiAgICAgIC8vIFNjcmVlbk9wdGlvbnNcclxuICAgICAgbmFtZTogUGhTY2FsZVN0cmluZ3Muc2NyZWVuLm15U29sdXRpb25TdHJpbmdQcm9wZXJ0eSxcclxuICAgICAgYmFja2dyb3VuZENvbG9yUHJvcGVydHk6IG5ldyBQcm9wZXJ0eSggUEhTY2FsZUNvbG9ycy5TQ1JFRU5fQkFDS0dST1VORCApLFxyXG4gICAgICBob21lU2NyZWVuSWNvbjogbmV3IFNjcmVlbkljb24oIG5ldyBJbWFnZSggbXlTb2x1dGlvbkhvbWVTY3JlZW5JY29uX3BuZyApLCB7XHJcbiAgICAgICAgbWF4SWNvbldpZHRoUHJvcG9ydGlvbjogMSxcclxuICAgICAgICBtYXhJY29uSGVpZ2h0UHJvcG9ydGlvbjogMVxyXG4gICAgICB9ICksXHJcbiAgICAgIG5hdmlnYXRpb25CYXJJY29uOiBuZXcgU2NyZWVuSWNvbiggbmV3IEltYWdlKCBteVNvbHV0aW9uTmF2YmFySWNvbl9wbmcgKSwge1xyXG4gICAgICAgIG1heEljb25XaWR0aFByb3BvcnRpb246IDEsXHJcbiAgICAgICAgbWF4SWNvbkhlaWdodFByb3BvcnRpb246IDFcclxuICAgICAgfSApLFxyXG4gICAgICAvL1RPRE8gaHR0cHM6Ly9naXRodWIuY29tL3BoZXRzaW1zL3BoLXNjYWxlL2lzc3Vlcy8yNDkgcmVzdG9yZSB3aGVuIHdvcmsgb24gYWx0ZXJuYXRpdmUgaW5wdXQgcmVzdW1lXHJcbiAgICAgIGNyZWF0ZUtleWJvYXJkSGVscE5vZGU6ICgpID0+IG5ldyBNeVNvbHV0aW9uS2V5Ym9hcmRIZWxwQ29udGVudCgpXHJcbiAgICB9LCBwcm92aWRlZE9wdGlvbnMgKTtcclxuXHJcbiAgICBzdXBlcihcclxuICAgICAgKCkgPT4gbmV3IE15U29sdXRpb25Nb2RlbCgge1xyXG4gICAgICAgIHRhbmRlbTogb3B0aW9ucy50YW5kZW0uY3JlYXRlVGFuZGVtKCAnbW9kZWwnIClcclxuICAgICAgfSApLFxyXG4gICAgICBtb2RlbCA9PiBuZXcgTXlTb2x1dGlvblNjcmVlblZpZXcoIG1vZGVsLCBNb2RlbFZpZXdUcmFuc2Zvcm0yLmNyZWF0ZUlkZW50aXR5KCksIHtcclxuICAgICAgICB0YW5kZW06IG9wdGlvbnMudGFuZGVtLmNyZWF0ZVRhbmRlbSggJ3ZpZXcnIClcclxuICAgICAgfSApLFxyXG4gICAgICBvcHRpb25zXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIG92ZXJyaWRlIGRpc3Bvc2UoKTogdm9pZCB7XHJcbiAgICBhc3NlcnQgJiYgYXNzZXJ0KCBmYWxzZSwgJ2Rpc3Bvc2UgaXMgbm90IHN1cHBvcnRlZCwgZXhpc3RzIGZvciB0aGUgbGlmZXRpbWUgb2YgdGhlIHNpbScgKTtcclxuICAgIHN1cGVyLmRpc3Bvc2UoKTtcclxuICB9XHJcbn1cclxuXHJcbnBoU2NhbGUucmVnaXN0ZXIoICdNeVNvbHV0aW9uU2NyZWVuJywgTXlTb2x1dGlvblNjcmVlbiApOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxRQUFRLE1BQU0sOEJBQThCO0FBQ25ELE9BQU9DLE1BQU0sTUFBeUIsNkJBQTZCO0FBQ25FLE9BQU9DLFVBQVUsTUFBTSxpQ0FBaUM7QUFDeEQsT0FBT0MsU0FBUyxNQUE0QixvQ0FBb0M7QUFFaEYsT0FBT0MsbUJBQW1CLE1BQU0sb0RBQW9EO0FBQ3BGLFNBQVNDLEtBQUssUUFBUSxnQ0FBZ0M7QUFDdEQsT0FBT0MsNEJBQTRCLE1BQU0sOENBQThDO0FBQ3ZGLE9BQU9DLHdCQUF3QixNQUFNLDBDQUEwQztBQUMvRSxPQUFPQyxhQUFhLE1BQU0sNEJBQTRCO0FBQ3RELE9BQU9DLE9BQU8sTUFBTSxlQUFlO0FBQ25DLE9BQU9DLGNBQWMsTUFBTSxzQkFBc0I7QUFDakQsT0FBT0MsZUFBZSxNQUFNLDRCQUE0QjtBQUN4RCxPQUFPQyxvQkFBb0IsTUFBTSxnQ0FBZ0M7QUFDakUsT0FBT0MsNkJBQTZCLE1BQU0seUNBQXlDO0FBTW5GLGVBQWUsTUFBTUMsZ0JBQWdCLFNBQVNiLE1BQU0sQ0FBd0M7RUFFbkZjLFdBQVdBLENBQUVDLGVBQXdDLEVBQUc7SUFFN0QsTUFBTUMsT0FBTyxHQUFHZCxTQUFTLENBQXNELENBQUMsQ0FBRTtNQUVoRjtNQUNBZSxJQUFJLEVBQUVSLGNBQWMsQ0FBQ1MsTUFBTSxDQUFDQyx3QkFBd0I7TUFDcERDLHVCQUF1QixFQUFFLElBQUlyQixRQUFRLENBQUVRLGFBQWEsQ0FBQ2MsaUJBQWtCLENBQUM7TUFDeEVDLGNBQWMsRUFBRSxJQUFJckIsVUFBVSxDQUFFLElBQUlHLEtBQUssQ0FBRUMsNEJBQTZCLENBQUMsRUFBRTtRQUN6RWtCLHNCQUFzQixFQUFFLENBQUM7UUFDekJDLHVCQUF1QixFQUFFO01BQzNCLENBQUUsQ0FBQztNQUNIQyxpQkFBaUIsRUFBRSxJQUFJeEIsVUFBVSxDQUFFLElBQUlHLEtBQUssQ0FBRUUsd0JBQXlCLENBQUMsRUFBRTtRQUN4RWlCLHNCQUFzQixFQUFFLENBQUM7UUFDekJDLHVCQUF1QixFQUFFO01BQzNCLENBQUUsQ0FBQztNQUNIO01BQ0FFLHNCQUFzQixFQUFFQSxDQUFBLEtBQU0sSUFBSWQsNkJBQTZCLENBQUM7SUFDbEUsQ0FBQyxFQUFFRyxlQUFnQixDQUFDO0lBRXBCLEtBQUssQ0FDSCxNQUFNLElBQUlMLGVBQWUsQ0FBRTtNQUN6QmlCLE1BQU0sRUFBRVgsT0FBTyxDQUFDVyxNQUFNLENBQUNDLFlBQVksQ0FBRSxPQUFRO0lBQy9DLENBQUUsQ0FBQyxFQUNIQyxLQUFLLElBQUksSUFBSWxCLG9CQUFvQixDQUFFa0IsS0FBSyxFQUFFMUIsbUJBQW1CLENBQUMyQixjQUFjLENBQUMsQ0FBQyxFQUFFO01BQzlFSCxNQUFNLEVBQUVYLE9BQU8sQ0FBQ1csTUFBTSxDQUFDQyxZQUFZLENBQUUsTUFBTztJQUM5QyxDQUFFLENBQUMsRUFDSFosT0FDRixDQUFDO0VBQ0g7RUFFZ0JlLE9BQU9BLENBQUEsRUFBUztJQUM5QkMsTUFBTSxJQUFJQSxNQUFNLENBQUUsS0FBSyxFQUFFLDhEQUErRCxDQUFDO0lBQ3pGLEtBQUssQ0FBQ0QsT0FBTyxDQUFDLENBQUM7RUFDakI7QUFDRjtBQUVBdkIsT0FBTyxDQUFDeUIsUUFBUSxDQUFFLGtCQUFrQixFQUFFcEIsZ0JBQWlCLENBQUMifQ==