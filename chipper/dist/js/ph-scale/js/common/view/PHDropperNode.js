// Copyright 2013-2023, University of Colorado Boulder

/**
 * Dropper that contains a solute in solution form.
 * Origin is at the center of the hole where solution comes out of the dropper (bottom center).
 * Optionally displays the pH value on the dropper.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import optionize from '../../../../phet-core/js/optionize.js';
import EyeDropperNode from '../../../../scenery-phet/js/EyeDropperNode.js';
import phScale from '../../phScale.js';
export default class PHDropperNode extends EyeDropperNode {
  constructor(dropper, modelViewTransform, providedOptions) {
    const options = optionize()({
      // EyeDropperNodeOptions
      isDispensingProperty: dropper.isDispensingProperty,
      buttonOptions: {
        enabledProperty: dropper.enabledProperty
      },
      cursor: null,
      phetioInputEnabledPropertyInstrumented: true
    }, providedOptions);
    super(options);

    // position
    this.translation = modelViewTransform.modelToViewPosition(dropper.position);

    // change fluid color when the solute changes
    dropper.soluteProperty.link(solute => {
      this.setFluidColor(solute.stockColor);
    });
  }
}
phScale.register('PHDropperNode', PHDropperNode);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJvcHRpb25pemUiLCJFeWVEcm9wcGVyTm9kZSIsInBoU2NhbGUiLCJQSERyb3BwZXJOb2RlIiwiY29uc3RydWN0b3IiLCJkcm9wcGVyIiwibW9kZWxWaWV3VHJhbnNmb3JtIiwicHJvdmlkZWRPcHRpb25zIiwib3B0aW9ucyIsImlzRGlzcGVuc2luZ1Byb3BlcnR5IiwiYnV0dG9uT3B0aW9ucyIsImVuYWJsZWRQcm9wZXJ0eSIsImN1cnNvciIsInBoZXRpb0lucHV0RW5hYmxlZFByb3BlcnR5SW5zdHJ1bWVudGVkIiwidHJhbnNsYXRpb24iLCJtb2RlbFRvVmlld1Bvc2l0aW9uIiwicG9zaXRpb24iLCJzb2x1dGVQcm9wZXJ0eSIsImxpbmsiLCJzb2x1dGUiLCJzZXRGbHVpZENvbG9yIiwic3RvY2tDb2xvciIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiUEhEcm9wcGVyTm9kZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxMy0yMDIzLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBEcm9wcGVyIHRoYXQgY29udGFpbnMgYSBzb2x1dGUgaW4gc29sdXRpb24gZm9ybS5cclxuICogT3JpZ2luIGlzIGF0IHRoZSBjZW50ZXIgb2YgdGhlIGhvbGUgd2hlcmUgc29sdXRpb24gY29tZXMgb3V0IG9mIHRoZSBkcm9wcGVyIChib3R0b20gY2VudGVyKS5cclxuICogT3B0aW9uYWxseSBkaXNwbGF5cyB0aGUgcEggdmFsdWUgb24gdGhlIGRyb3BwZXIuXHJcbiAqXHJcbiAqIEBhdXRob3IgQ2hyaXMgTWFsbGV5IChQaXhlbFpvb20sIEluYy4pXHJcbiAqL1xyXG5cclxuaW1wb3J0IG9wdGlvbml6ZSwgeyBFbXB0eVNlbGZPcHRpb25zIH0gZnJvbSAnLi4vLi4vLi4vLi4vcGhldC1jb3JlL2pzL29wdGlvbml6ZS5qcyc7XHJcbmltcG9ydCBQaWNrUmVxdWlyZWQgZnJvbSAnLi4vLi4vLi4vLi4vcGhldC1jb3JlL2pzL3R5cGVzL1BpY2tSZXF1aXJlZC5qcyc7XHJcbmltcG9ydCBNb2RlbFZpZXdUcmFuc2Zvcm0yIGZyb20gJy4uLy4uLy4uLy4uL3BoZXRjb21tb24vanMvdmlldy9Nb2RlbFZpZXdUcmFuc2Zvcm0yLmpzJztcclxuaW1wb3J0IEV5ZURyb3BwZXJOb2RlLCB7IEV5ZURyb3BwZXJOb2RlT3B0aW9ucyB9IGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnktcGhldC9qcy9FeWVEcm9wcGVyTm9kZS5qcyc7XHJcbmltcG9ydCBwaFNjYWxlIGZyb20gJy4uLy4uL3BoU2NhbGUuanMnO1xyXG5pbXBvcnQgRHJvcHBlciBmcm9tICcuLi9tb2RlbC9Ecm9wcGVyLmpzJztcclxuXHJcbnR5cGUgU2VsZk9wdGlvbnMgPSBFbXB0eVNlbGZPcHRpb25zO1xyXG5cclxudHlwZSBQSERyb3BwZXJOb2RlT3B0aW9ucyA9IFNlbGZPcHRpb25zICYgUGlja1JlcXVpcmVkPEV5ZURyb3BwZXJOb2RlT3B0aW9ucywgJ3RhbmRlbScgfCAndmlzaWJsZVByb3BlcnR5Jz47XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQSERyb3BwZXJOb2RlIGV4dGVuZHMgRXllRHJvcHBlck5vZGUge1xyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoIGRyb3BwZXI6IERyb3BwZXIsIG1vZGVsVmlld1RyYW5zZm9ybTogTW9kZWxWaWV3VHJhbnNmb3JtMiwgcHJvdmlkZWRPcHRpb25zOiBQSERyb3BwZXJOb2RlT3B0aW9ucyApIHtcclxuXHJcbiAgICBjb25zdCBvcHRpb25zID0gb3B0aW9uaXplPFBIRHJvcHBlck5vZGVPcHRpb25zLCBTZWxmT3B0aW9ucywgRXllRHJvcHBlck5vZGVPcHRpb25zPigpKCB7XHJcblxyXG4gICAgICAvLyBFeWVEcm9wcGVyTm9kZU9wdGlvbnNcclxuICAgICAgaXNEaXNwZW5zaW5nUHJvcGVydHk6IGRyb3BwZXIuaXNEaXNwZW5zaW5nUHJvcGVydHksXHJcbiAgICAgIGJ1dHRvbk9wdGlvbnM6IHtcclxuICAgICAgICBlbmFibGVkUHJvcGVydHk6IGRyb3BwZXIuZW5hYmxlZFByb3BlcnR5XHJcbiAgICAgIH0sXHJcbiAgICAgIGN1cnNvcjogbnVsbCxcclxuICAgICAgcGhldGlvSW5wdXRFbmFibGVkUHJvcGVydHlJbnN0cnVtZW50ZWQ6IHRydWVcclxuICAgIH0sIHByb3ZpZGVkT3B0aW9ucyApO1xyXG5cclxuICAgIHN1cGVyKCBvcHRpb25zICk7XHJcblxyXG4gICAgLy8gcG9zaXRpb25cclxuICAgIHRoaXMudHJhbnNsYXRpb24gPSBtb2RlbFZpZXdUcmFuc2Zvcm0ubW9kZWxUb1ZpZXdQb3NpdGlvbiggZHJvcHBlci5wb3NpdGlvbiApO1xyXG5cclxuICAgIC8vIGNoYW5nZSBmbHVpZCBjb2xvciB3aGVuIHRoZSBzb2x1dGUgY2hhbmdlc1xyXG4gICAgZHJvcHBlci5zb2x1dGVQcm9wZXJ0eS5saW5rKCBzb2x1dGUgPT4ge1xyXG4gICAgICB0aGlzLnNldEZsdWlkQ29sb3IoIHNvbHV0ZS5zdG9ja0NvbG9yICk7XHJcbiAgICB9ICk7XHJcbiAgfVxyXG59XHJcblxyXG5waFNjYWxlLnJlZ2lzdGVyKCAnUEhEcm9wcGVyTm9kZScsIFBIRHJvcHBlck5vZGUgKTsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLFNBQVMsTUFBNEIsdUNBQXVDO0FBR25GLE9BQU9DLGNBQWMsTUFBaUMsK0NBQStDO0FBQ3JHLE9BQU9DLE9BQU8sTUFBTSxrQkFBa0I7QUFPdEMsZUFBZSxNQUFNQyxhQUFhLFNBQVNGLGNBQWMsQ0FBQztFQUVqREcsV0FBV0EsQ0FBRUMsT0FBZ0IsRUFBRUMsa0JBQXVDLEVBQUVDLGVBQXFDLEVBQUc7SUFFckgsTUFBTUMsT0FBTyxHQUFHUixTQUFTLENBQTJELENBQUMsQ0FBRTtNQUVyRjtNQUNBUyxvQkFBb0IsRUFBRUosT0FBTyxDQUFDSSxvQkFBb0I7TUFDbERDLGFBQWEsRUFBRTtRQUNiQyxlQUFlLEVBQUVOLE9BQU8sQ0FBQ007TUFDM0IsQ0FBQztNQUNEQyxNQUFNLEVBQUUsSUFBSTtNQUNaQyxzQ0FBc0MsRUFBRTtJQUMxQyxDQUFDLEVBQUVOLGVBQWdCLENBQUM7SUFFcEIsS0FBSyxDQUFFQyxPQUFRLENBQUM7O0lBRWhCO0lBQ0EsSUFBSSxDQUFDTSxXQUFXLEdBQUdSLGtCQUFrQixDQUFDUyxtQkFBbUIsQ0FBRVYsT0FBTyxDQUFDVyxRQUFTLENBQUM7O0lBRTdFO0lBQ0FYLE9BQU8sQ0FBQ1ksY0FBYyxDQUFDQyxJQUFJLENBQUVDLE1BQU0sSUFBSTtNQUNyQyxJQUFJLENBQUNDLGFBQWEsQ0FBRUQsTUFBTSxDQUFDRSxVQUFXLENBQUM7SUFDekMsQ0FBRSxDQUFDO0VBQ0w7QUFDRjtBQUVBbkIsT0FBTyxDQUFDb0IsUUFBUSxDQUFFLGVBQWUsRUFBRW5CLGFBQWMsQ0FBQyJ9