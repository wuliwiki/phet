// Copyright 2022-2023, University of Colorado Boulder

/**
 * MicroPHAccordionBox is the pH accordion box (aka meter) for the 'Micro' screen.
 * It is display-only; the pH is not editable.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import PHAccordionBox from '../../common/view/PHAccordionBox.js';
import phScale from '../../phScale.js';
import PHScaleConstants from '../../common/PHScaleConstants.js';
import NumberDisplay from '../../../../scenery-phet/js/NumberDisplay.js';
import PhetFont from '../../../../scenery-phet/js/PhetFont.js';
export default class MicroPHAccordionBox extends PHAccordionBox {
  /**
   * @param pHProperty - pH of the solution
   * @param probeYOffset - distance from top of meter to tip of probe, in view coordinate frame
   * @param [providedOptions]
   */
  constructor(pHProperty, probeYOffset, providedOptions) {
    const contentNode = new NumberDisplay(pHProperty, PHScaleConstants.PH_RANGE, {
      decimalPlaces: PHScaleConstants.PH_METER_DECIMAL_PLACES,
      cornerRadius: PHAccordionBox.CORNER_RADIUS,
      textOptions: {
        font: new PhetFont(28),
        stringPropertyOptions: {
          phetioHighFrequency: true
        }
      },
      backgroundFill: 'white',
      backgroundStroke: 'darkGray',
      xMargin: 8,
      yMargin: 5,
      tandem: providedOptions.tandem.createTandem('numberDisplay')
    });
    super(contentNode, probeYOffset, providedOptions);
    this.addLinkedElement(pHProperty, {
      tandem: providedOptions.tandem.createTandem('pHProperty')
    });
  }
}
phScale.register('MicroPHAccordionBox', MicroPHAccordionBox);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQSEFjY29yZGlvbkJveCIsInBoU2NhbGUiLCJQSFNjYWxlQ29uc3RhbnRzIiwiTnVtYmVyRGlzcGxheSIsIlBoZXRGb250IiwiTWljcm9QSEFjY29yZGlvbkJveCIsImNvbnN0cnVjdG9yIiwicEhQcm9wZXJ0eSIsInByb2JlWU9mZnNldCIsInByb3ZpZGVkT3B0aW9ucyIsImNvbnRlbnROb2RlIiwiUEhfUkFOR0UiLCJkZWNpbWFsUGxhY2VzIiwiUEhfTUVURVJfREVDSU1BTF9QTEFDRVMiLCJjb3JuZXJSYWRpdXMiLCJDT1JORVJfUkFESVVTIiwidGV4dE9wdGlvbnMiLCJmb250Iiwic3RyaW5nUHJvcGVydHlPcHRpb25zIiwicGhldGlvSGlnaEZyZXF1ZW5jeSIsImJhY2tncm91bmRGaWxsIiwiYmFja2dyb3VuZFN0cm9rZSIsInhNYXJnaW4iLCJ5TWFyZ2luIiwidGFuZGVtIiwiY3JlYXRlVGFuZGVtIiwiYWRkTGlua2VkRWxlbWVudCIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiTWljcm9QSEFjY29yZGlvbkJveC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMi0yMDIzLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBNaWNyb1BIQWNjb3JkaW9uQm94IGlzIHRoZSBwSCBhY2NvcmRpb24gYm94IChha2EgbWV0ZXIpIGZvciB0aGUgJ01pY3JvJyBzY3JlZW4uXHJcbiAqIEl0IGlzIGRpc3BsYXktb25seTsgdGhlIHBIIGlzIG5vdCBlZGl0YWJsZS5cclxuICpcclxuICogQGF1dGhvciBDaHJpcyBNYWxsZXkgKFBpeGVsWm9vbSwgSW5jLilcclxuICovXHJcblxyXG5pbXBvcnQgUEhBY2NvcmRpb25Cb3gsIHsgUEhBY2NvcmRpb25Cb3hPcHRpb25zIH0gZnJvbSAnLi4vLi4vY29tbW9uL3ZpZXcvUEhBY2NvcmRpb25Cb3guanMnO1xyXG5pbXBvcnQgcGhTY2FsZSBmcm9tICcuLi8uLi9waFNjYWxlLmpzJztcclxuaW1wb3J0IHsgUEhWYWx1ZSB9IGZyb20gJy4uLy4uL2NvbW1vbi9tb2RlbC9QSE1vZGVsLmpzJztcclxuaW1wb3J0IHsgRW1wdHlTZWxmT3B0aW9ucyB9IGZyb20gJy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy9vcHRpb25pemUuanMnO1xyXG5pbXBvcnQgUGlja1JlcXVpcmVkIGZyb20gJy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy90eXBlcy9QaWNrUmVxdWlyZWQuanMnO1xyXG5pbXBvcnQgUEhTY2FsZUNvbnN0YW50cyBmcm9tICcuLi8uLi9jb21tb24vUEhTY2FsZUNvbnN0YW50cy5qcyc7XHJcbmltcG9ydCBOdW1iZXJEaXNwbGF5IGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnktcGhldC9qcy9OdW1iZXJEaXNwbGF5LmpzJztcclxuaW1wb3J0IFBoZXRGb250IGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnktcGhldC9qcy9QaGV0Rm9udC5qcyc7XHJcbmltcG9ydCBMaW5rYWJsZVJlYWRPbmx5UHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vLi4vYXhvbi9qcy9MaW5rYWJsZVJlYWRPbmx5UHJvcGVydHkuanMnO1xyXG5cclxudHlwZSBTZWxmT3B0aW9ucyA9IEVtcHR5U2VsZk9wdGlvbnM7XHJcblxyXG50eXBlIE1pY3JvUEhBY2NvcmRpb25Cb3hPcHRpb25zID0gU2VsZk9wdGlvbnMgJiBQaWNrUmVxdWlyZWQ8UEhBY2NvcmRpb25Cb3hPcHRpb25zLCAndGFuZGVtJz47XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNaWNyb1BIQWNjb3JkaW9uQm94IGV4dGVuZHMgUEhBY2NvcmRpb25Cb3gge1xyXG5cclxuICAvKipcclxuICAgKiBAcGFyYW0gcEhQcm9wZXJ0eSAtIHBIIG9mIHRoZSBzb2x1dGlvblxyXG4gICAqIEBwYXJhbSBwcm9iZVlPZmZzZXQgLSBkaXN0YW5jZSBmcm9tIHRvcCBvZiBtZXRlciB0byB0aXAgb2YgcHJvYmUsIGluIHZpZXcgY29vcmRpbmF0ZSBmcmFtZVxyXG4gICAqIEBwYXJhbSBbcHJvdmlkZWRPcHRpb25zXVxyXG4gICAqL1xyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvciggcEhQcm9wZXJ0eTogTGlua2FibGVSZWFkT25seVByb3BlcnR5PFBIVmFsdWU+LFxyXG4gICAgICAgICAgICAgICAgICAgICAgcHJvYmVZT2Zmc2V0OiBudW1iZXIsXHJcbiAgICAgICAgICAgICAgICAgICAgICBwcm92aWRlZE9wdGlvbnM6IE1pY3JvUEhBY2NvcmRpb25Cb3hPcHRpb25zICkge1xyXG5cclxuICAgIGNvbnN0IGNvbnRlbnROb2RlID0gbmV3IE51bWJlckRpc3BsYXkoIHBIUHJvcGVydHksIFBIU2NhbGVDb25zdGFudHMuUEhfUkFOR0UsIHtcclxuICAgICAgZGVjaW1hbFBsYWNlczogUEhTY2FsZUNvbnN0YW50cy5QSF9NRVRFUl9ERUNJTUFMX1BMQUNFUyxcclxuICAgICAgY29ybmVyUmFkaXVzOiBQSEFjY29yZGlvbkJveC5DT1JORVJfUkFESVVTLFxyXG4gICAgICB0ZXh0T3B0aW9uczoge1xyXG4gICAgICAgIGZvbnQ6IG5ldyBQaGV0Rm9udCggMjggKSxcclxuICAgICAgICBzdHJpbmdQcm9wZXJ0eU9wdGlvbnM6IHsgcGhldGlvSGlnaEZyZXF1ZW5jeTogdHJ1ZSB9XHJcbiAgICAgIH0sXHJcbiAgICAgIGJhY2tncm91bmRGaWxsOiAnd2hpdGUnLFxyXG4gICAgICBiYWNrZ3JvdW5kU3Ryb2tlOiAnZGFya0dyYXknLFxyXG4gICAgICB4TWFyZ2luOiA4LFxyXG4gICAgICB5TWFyZ2luOiA1LFxyXG4gICAgICB0YW5kZW06IHByb3ZpZGVkT3B0aW9ucy50YW5kZW0uY3JlYXRlVGFuZGVtKCAnbnVtYmVyRGlzcGxheScgKVxyXG4gICAgfSApO1xyXG5cclxuICAgIHN1cGVyKCBjb250ZW50Tm9kZSwgcHJvYmVZT2Zmc2V0LCBwcm92aWRlZE9wdGlvbnMgKTtcclxuXHJcbiAgICB0aGlzLmFkZExpbmtlZEVsZW1lbnQoIHBIUHJvcGVydHksIHtcclxuICAgICAgdGFuZGVtOiBwcm92aWRlZE9wdGlvbnMudGFuZGVtLmNyZWF0ZVRhbmRlbSggJ3BIUHJvcGVydHknIClcclxuICAgIH0gKTtcclxuICB9XHJcbn1cclxuXHJcbnBoU2NhbGUucmVnaXN0ZXIoICdNaWNyb1BIQWNjb3JkaW9uQm94JywgTWljcm9QSEFjY29yZGlvbkJveCApOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLGNBQWMsTUFBaUMscUNBQXFDO0FBQzNGLE9BQU9DLE9BQU8sTUFBTSxrQkFBa0I7QUFJdEMsT0FBT0MsZ0JBQWdCLE1BQU0sa0NBQWtDO0FBQy9ELE9BQU9DLGFBQWEsTUFBTSw4Q0FBOEM7QUFDeEUsT0FBT0MsUUFBUSxNQUFNLHlDQUF5QztBQU85RCxlQUFlLE1BQU1DLG1CQUFtQixTQUFTTCxjQUFjLENBQUM7RUFFOUQ7QUFDRjtBQUNBO0FBQ0E7QUFDQTtFQUNTTSxXQUFXQSxDQUFFQyxVQUE2QyxFQUM3Q0MsWUFBb0IsRUFDcEJDLGVBQTJDLEVBQUc7SUFFaEUsTUFBTUMsV0FBVyxHQUFHLElBQUlQLGFBQWEsQ0FBRUksVUFBVSxFQUFFTCxnQkFBZ0IsQ0FBQ1MsUUFBUSxFQUFFO01BQzVFQyxhQUFhLEVBQUVWLGdCQUFnQixDQUFDVyx1QkFBdUI7TUFDdkRDLFlBQVksRUFBRWQsY0FBYyxDQUFDZSxhQUFhO01BQzFDQyxXQUFXLEVBQUU7UUFDWEMsSUFBSSxFQUFFLElBQUliLFFBQVEsQ0FBRSxFQUFHLENBQUM7UUFDeEJjLHFCQUFxQixFQUFFO1VBQUVDLG1CQUFtQixFQUFFO1FBQUs7TUFDckQsQ0FBQztNQUNEQyxjQUFjLEVBQUUsT0FBTztNQUN2QkMsZ0JBQWdCLEVBQUUsVUFBVTtNQUM1QkMsT0FBTyxFQUFFLENBQUM7TUFDVkMsT0FBTyxFQUFFLENBQUM7TUFDVkMsTUFBTSxFQUFFZixlQUFlLENBQUNlLE1BQU0sQ0FBQ0MsWUFBWSxDQUFFLGVBQWdCO0lBQy9ELENBQUUsQ0FBQztJQUVILEtBQUssQ0FBRWYsV0FBVyxFQUFFRixZQUFZLEVBQUVDLGVBQWdCLENBQUM7SUFFbkQsSUFBSSxDQUFDaUIsZ0JBQWdCLENBQUVuQixVQUFVLEVBQUU7TUFDakNpQixNQUFNLEVBQUVmLGVBQWUsQ0FBQ2UsTUFBTSxDQUFDQyxZQUFZLENBQUUsWUFBYTtJQUM1RCxDQUFFLENBQUM7RUFDTDtBQUNGO0FBRUF4QixPQUFPLENBQUMwQixRQUFRLENBQUUscUJBQXFCLEVBQUV0QixtQkFBb0IsQ0FBQyJ9