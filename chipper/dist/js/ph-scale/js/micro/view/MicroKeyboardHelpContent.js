// Copyright 2022-2023, University of Colorado Boulder

/**
 * MicroKeyboardHelpContent is the keyboard-help content for the 'Micro' screen.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import TwoColumnKeyboardHelpContent from '../../../../scenery-phet/js/keyboard/help/TwoColumnKeyboardHelpContent.js';
import phScale from '../../phScale.js';
import PhScaleStrings from '../../PhScaleStrings.js';
import ComboBoxKeyboardHelpSection from '../../../../scenery-phet/js/keyboard/help/ComboBoxKeyboardHelpSection.js';
import BasicActionsKeyboardHelpSection from '../../../../scenery-phet/js/keyboard/help/BasicActionsKeyboardHelpSection.js';
import FaucetControlsKeyboardHelpContent from '../../common/view/FaucetControlsKeyboardHelpContent.js';
export default class MicroKeyboardHelpContent extends TwoColumnKeyboardHelpContent {
  constructor() {
    // Sections in the left column. They need to be disposed.
    const leftSections = [
    // Faucet Controls
    new FaucetControlsKeyboardHelpContent()];

    // Sections in the right column. They need to be disposed.
    const rightSections = [
    // Choose a Solute
    new ComboBoxKeyboardHelpSection({
      headingString: PhScaleStrings.keyboardHelpDialog.chooseASoluteStringProperty,
      thingAsLowerCaseSingular: PhScaleStrings.keyboardHelpDialog.soluteStringProperty,
      thingAsLowerCasePlural: PhScaleStrings.keyboardHelpDialog.solutesStringProperty
    }),
    // Basic Actions
    new BasicActionsKeyboardHelpSection({
      withCheckboxContent: true
    })];
    super(leftSections, rightSections);
    this.disposeMicroKeyboardHelpContent = () => {
      leftSections.forEach(section => section.dispose());
      rightSections.forEach(section => section.dispose());
    };
  }
  dispose() {
    this.disposeMicroKeyboardHelpContent();
    super.dispose();
  }
}
phScale.register('MicroKeyboardHelpContent', MicroKeyboardHelpContent);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJUd29Db2x1bW5LZXlib2FyZEhlbHBDb250ZW50IiwicGhTY2FsZSIsIlBoU2NhbGVTdHJpbmdzIiwiQ29tYm9Cb3hLZXlib2FyZEhlbHBTZWN0aW9uIiwiQmFzaWNBY3Rpb25zS2V5Ym9hcmRIZWxwU2VjdGlvbiIsIkZhdWNldENvbnRyb2xzS2V5Ym9hcmRIZWxwQ29udGVudCIsIk1pY3JvS2V5Ym9hcmRIZWxwQ29udGVudCIsImNvbnN0cnVjdG9yIiwibGVmdFNlY3Rpb25zIiwicmlnaHRTZWN0aW9ucyIsImhlYWRpbmdTdHJpbmciLCJrZXlib2FyZEhlbHBEaWFsb2ciLCJjaG9vc2VBU29sdXRlU3RyaW5nUHJvcGVydHkiLCJ0aGluZ0FzTG93ZXJDYXNlU2luZ3VsYXIiLCJzb2x1dGVTdHJpbmdQcm9wZXJ0eSIsInRoaW5nQXNMb3dlckNhc2VQbHVyYWwiLCJzb2x1dGVzU3RyaW5nUHJvcGVydHkiLCJ3aXRoQ2hlY2tib3hDb250ZW50IiwiZGlzcG9zZU1pY3JvS2V5Ym9hcmRIZWxwQ29udGVudCIsImZvckVhY2giLCJzZWN0aW9uIiwiZGlzcG9zZSIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiTWljcm9LZXlib2FyZEhlbHBDb250ZW50LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIyLTIwMjMsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIE1pY3JvS2V5Ym9hcmRIZWxwQ29udGVudCBpcyB0aGUga2V5Ym9hcmQtaGVscCBjb250ZW50IGZvciB0aGUgJ01pY3JvJyBzY3JlZW4uXHJcbiAqXHJcbiAqIEBhdXRob3IgQ2hyaXMgTWFsbGV5IChQaXhlbFpvb20sIEluYy4pXHJcbiAqL1xyXG5cclxuaW1wb3J0IFR3b0NvbHVtbktleWJvYXJkSGVscENvbnRlbnQgZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS1waGV0L2pzL2tleWJvYXJkL2hlbHAvVHdvQ29sdW1uS2V5Ym9hcmRIZWxwQ29udGVudC5qcyc7XHJcbmltcG9ydCBwaFNjYWxlIGZyb20gJy4uLy4uL3BoU2NhbGUuanMnO1xyXG5pbXBvcnQgUGhTY2FsZVN0cmluZ3MgZnJvbSAnLi4vLi4vUGhTY2FsZVN0cmluZ3MuanMnO1xyXG5pbXBvcnQgQ29tYm9Cb3hLZXlib2FyZEhlbHBTZWN0aW9uIGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnktcGhldC9qcy9rZXlib2FyZC9oZWxwL0NvbWJvQm94S2V5Ym9hcmRIZWxwU2VjdGlvbi5qcyc7XHJcbmltcG9ydCBCYXNpY0FjdGlvbnNLZXlib2FyZEhlbHBTZWN0aW9uIGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnktcGhldC9qcy9rZXlib2FyZC9oZWxwL0Jhc2ljQWN0aW9uc0tleWJvYXJkSGVscFNlY3Rpb24uanMnO1xyXG5pbXBvcnQgRmF1Y2V0Q29udHJvbHNLZXlib2FyZEhlbHBDb250ZW50IGZyb20gJy4uLy4uL2NvbW1vbi92aWV3L0ZhdWNldENvbnRyb2xzS2V5Ym9hcmRIZWxwQ29udGVudC5qcyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNaWNyb0tleWJvYXJkSGVscENvbnRlbnQgZXh0ZW5kcyBUd29Db2x1bW5LZXlib2FyZEhlbHBDb250ZW50IHtcclxuXHJcbiAgcHJpdmF0ZSByZWFkb25seSBkaXNwb3NlTWljcm9LZXlib2FyZEhlbHBDb250ZW50OiAoKSA9PiB2b2lkO1xyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoKSB7XHJcblxyXG4gICAgLy8gU2VjdGlvbnMgaW4gdGhlIGxlZnQgY29sdW1uLiBUaGV5IG5lZWQgdG8gYmUgZGlzcG9zZWQuXHJcbiAgICBjb25zdCBsZWZ0U2VjdGlvbnMgPSBbXHJcblxyXG4gICAgICAvLyBGYXVjZXQgQ29udHJvbHNcclxuICAgICAgbmV3IEZhdWNldENvbnRyb2xzS2V5Ym9hcmRIZWxwQ29udGVudCgpXHJcbiAgICBdO1xyXG5cclxuICAgIC8vIFNlY3Rpb25zIGluIHRoZSByaWdodCBjb2x1bW4uIFRoZXkgbmVlZCB0byBiZSBkaXNwb3NlZC5cclxuICAgIGNvbnN0IHJpZ2h0U2VjdGlvbnMgPSBbXHJcblxyXG4gICAgICAvLyBDaG9vc2UgYSBTb2x1dGVcclxuICAgICAgbmV3IENvbWJvQm94S2V5Ym9hcmRIZWxwU2VjdGlvbigge1xyXG4gICAgICAgIGhlYWRpbmdTdHJpbmc6IFBoU2NhbGVTdHJpbmdzLmtleWJvYXJkSGVscERpYWxvZy5jaG9vc2VBU29sdXRlU3RyaW5nUHJvcGVydHksXHJcbiAgICAgICAgdGhpbmdBc0xvd2VyQ2FzZVNpbmd1bGFyOiBQaFNjYWxlU3RyaW5ncy5rZXlib2FyZEhlbHBEaWFsb2cuc29sdXRlU3RyaW5nUHJvcGVydHksXHJcbiAgICAgICAgdGhpbmdBc0xvd2VyQ2FzZVBsdXJhbDogUGhTY2FsZVN0cmluZ3Mua2V5Ym9hcmRIZWxwRGlhbG9nLnNvbHV0ZXNTdHJpbmdQcm9wZXJ0eVxyXG4gICAgICB9ICksXHJcblxyXG4gICAgICAvLyBCYXNpYyBBY3Rpb25zXHJcbiAgICAgIG5ldyBCYXNpY0FjdGlvbnNLZXlib2FyZEhlbHBTZWN0aW9uKCB7XHJcbiAgICAgICAgd2l0aENoZWNrYm94Q29udGVudDogdHJ1ZVxyXG4gICAgICB9IClcclxuICAgIF07XHJcblxyXG4gICAgc3VwZXIoIGxlZnRTZWN0aW9ucywgcmlnaHRTZWN0aW9ucyApO1xyXG5cclxuICAgIHRoaXMuZGlzcG9zZU1pY3JvS2V5Ym9hcmRIZWxwQ29udGVudCA9ICgpID0+IHtcclxuICAgICAgbGVmdFNlY3Rpb25zLmZvckVhY2goIHNlY3Rpb24gPT4gc2VjdGlvbi5kaXNwb3NlKCkgKTtcclxuICAgICAgcmlnaHRTZWN0aW9ucy5mb3JFYWNoKCBzZWN0aW9uID0+IHNlY3Rpb24uZGlzcG9zZSgpICk7XHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgcHVibGljIG92ZXJyaWRlIGRpc3Bvc2UoKTogdm9pZCB7XHJcbiAgICB0aGlzLmRpc3Bvc2VNaWNyb0tleWJvYXJkSGVscENvbnRlbnQoKTtcclxuICAgIHN1cGVyLmRpc3Bvc2UoKTtcclxuICB9XHJcbn1cclxuXHJcbnBoU2NhbGUucmVnaXN0ZXIoICdNaWNyb0tleWJvYXJkSGVscENvbnRlbnQnLCBNaWNyb0tleWJvYXJkSGVscENvbnRlbnQgKTsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsNEJBQTRCLE1BQU0sMkVBQTJFO0FBQ3BILE9BQU9DLE9BQU8sTUFBTSxrQkFBa0I7QUFDdEMsT0FBT0MsY0FBYyxNQUFNLHlCQUF5QjtBQUNwRCxPQUFPQywyQkFBMkIsTUFBTSwwRUFBMEU7QUFDbEgsT0FBT0MsK0JBQStCLE1BQU0sOEVBQThFO0FBQzFILE9BQU9DLGlDQUFpQyxNQUFNLHdEQUF3RDtBQUV0RyxlQUFlLE1BQU1DLHdCQUF3QixTQUFTTiw0QkFBNEIsQ0FBQztFQUkxRU8sV0FBV0EsQ0FBQSxFQUFHO0lBRW5CO0lBQ0EsTUFBTUMsWUFBWSxHQUFHO0lBRW5CO0lBQ0EsSUFBSUgsaUNBQWlDLENBQUMsQ0FBQyxDQUN4Qzs7SUFFRDtJQUNBLE1BQU1JLGFBQWEsR0FBRztJQUVwQjtJQUNBLElBQUlOLDJCQUEyQixDQUFFO01BQy9CTyxhQUFhLEVBQUVSLGNBQWMsQ0FBQ1Msa0JBQWtCLENBQUNDLDJCQUEyQjtNQUM1RUMsd0JBQXdCLEVBQUVYLGNBQWMsQ0FBQ1Msa0JBQWtCLENBQUNHLG9CQUFvQjtNQUNoRkMsc0JBQXNCLEVBQUViLGNBQWMsQ0FBQ1Msa0JBQWtCLENBQUNLO0lBQzVELENBQUUsQ0FBQztJQUVIO0lBQ0EsSUFBSVosK0JBQStCLENBQUU7TUFDbkNhLG1CQUFtQixFQUFFO0lBQ3ZCLENBQUUsQ0FBQyxDQUNKO0lBRUQsS0FBSyxDQUFFVCxZQUFZLEVBQUVDLGFBQWMsQ0FBQztJQUVwQyxJQUFJLENBQUNTLCtCQUErQixHQUFHLE1BQU07TUFDM0NWLFlBQVksQ0FBQ1csT0FBTyxDQUFFQyxPQUFPLElBQUlBLE9BQU8sQ0FBQ0MsT0FBTyxDQUFDLENBQUUsQ0FBQztNQUNwRFosYUFBYSxDQUFDVSxPQUFPLENBQUVDLE9BQU8sSUFBSUEsT0FBTyxDQUFDQyxPQUFPLENBQUMsQ0FBRSxDQUFDO0lBQ3ZELENBQUM7RUFDSDtFQUVnQkEsT0FBT0EsQ0FBQSxFQUFTO0lBQzlCLElBQUksQ0FBQ0gsK0JBQStCLENBQUMsQ0FBQztJQUN0QyxLQUFLLENBQUNHLE9BQU8sQ0FBQyxDQUFDO0VBQ2pCO0FBQ0Y7QUFFQXBCLE9BQU8sQ0FBQ3FCLFFBQVEsQ0FBRSwwQkFBMEIsRUFBRWhCLHdCQUF5QixDQUFDIn0=