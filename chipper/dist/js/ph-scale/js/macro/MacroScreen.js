// Copyright 2013-2023, University of Colorado Boulder

/**
 * The 'Macro' screen.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import Property from '../../../axon/js/Property.js';
import Screen from '../../../joist/js/Screen.js';
import ScreenIcon from '../../../joist/js/ScreenIcon.js';
import optionize from '../../../phet-core/js/optionize.js';
import ModelViewTransform2 from '../../../phetcommon/js/view/ModelViewTransform2.js';
import { Image } from '../../../scenery/js/imports.js';
import macroHomeScreenIcon_png from '../../images/macroHomeScreenIcon_png.js';
import macroNavbarIcon_png from '../../images/macroNavbarIcon_png.js';
import PHScaleColors from '../common/PHScaleColors.js';
import phScale from '../phScale.js';
import PhScaleStrings from '../PhScaleStrings.js';
import MacroModel from './model/MacroModel.js';
import MacroScreenView from './view/MacroScreenView.js';
import MacroKeyboardHelpContent from './view/MacroKeyboardHelpContent.js';
export default class MacroScreen extends Screen {
  constructor(providedOptions) {
    const options = optionize()({
      // ScreenOptions
      name: PhScaleStrings.screen.macroStringProperty,
      backgroundColorProperty: new Property(PHScaleColors.SCREEN_BACKGROUND),
      homeScreenIcon: new ScreenIcon(new Image(macroHomeScreenIcon_png), {
        maxIconWidthProportion: 1,
        maxIconHeightProportion: 1
      }),
      navigationBarIcon: new ScreenIcon(new Image(macroNavbarIcon_png), {
        maxIconWidthProportion: 1,
        maxIconHeightProportion: 1
      }),
      //TODO https://github.com/phetsims/ph-scale/issues/249 restore when work on alternative input resume
      createKeyboardHelpNode: () => new MacroKeyboardHelpContent()
    }, providedOptions);
    super(() => new MacroModel({
      tandem: options.tandem.createTandem('model')
    }), model => new MacroScreenView(model, ModelViewTransform2.createIdentity(), {
      tandem: options.tandem.createTandem('view')
    }), options);
  }
}
phScale.register('MacroScreen', MacroScreen);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQcm9wZXJ0eSIsIlNjcmVlbiIsIlNjcmVlbkljb24iLCJvcHRpb25pemUiLCJNb2RlbFZpZXdUcmFuc2Zvcm0yIiwiSW1hZ2UiLCJtYWNyb0hvbWVTY3JlZW5JY29uX3BuZyIsIm1hY3JvTmF2YmFySWNvbl9wbmciLCJQSFNjYWxlQ29sb3JzIiwicGhTY2FsZSIsIlBoU2NhbGVTdHJpbmdzIiwiTWFjcm9Nb2RlbCIsIk1hY3JvU2NyZWVuVmlldyIsIk1hY3JvS2V5Ym9hcmRIZWxwQ29udGVudCIsIk1hY3JvU2NyZWVuIiwiY29uc3RydWN0b3IiLCJwcm92aWRlZE9wdGlvbnMiLCJvcHRpb25zIiwibmFtZSIsInNjcmVlbiIsIm1hY3JvU3RyaW5nUHJvcGVydHkiLCJiYWNrZ3JvdW5kQ29sb3JQcm9wZXJ0eSIsIlNDUkVFTl9CQUNLR1JPVU5EIiwiaG9tZVNjcmVlbkljb24iLCJtYXhJY29uV2lkdGhQcm9wb3J0aW9uIiwibWF4SWNvbkhlaWdodFByb3BvcnRpb24iLCJuYXZpZ2F0aW9uQmFySWNvbiIsImNyZWF0ZUtleWJvYXJkSGVscE5vZGUiLCJ0YW5kZW0iLCJjcmVhdGVUYW5kZW0iLCJtb2RlbCIsImNyZWF0ZUlkZW50aXR5IiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJNYWNyb1NjcmVlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxMy0yMDIzLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBUaGUgJ01hY3JvJyBzY3JlZW4uXHJcbiAqXHJcbiAqIEBhdXRob3IgQ2hyaXMgTWFsbGV5IChQaXhlbFpvb20sIEluYy4pXHJcbiAqL1xyXG5cclxuaW1wb3J0IFByb3BlcnR5IGZyb20gJy4uLy4uLy4uL2F4b24vanMvUHJvcGVydHkuanMnO1xyXG5pbXBvcnQgU2NyZWVuLCB7IFNjcmVlbk9wdGlvbnMgfSBmcm9tICcuLi8uLi8uLi9qb2lzdC9qcy9TY3JlZW4uanMnO1xyXG5pbXBvcnQgU2NyZWVuSWNvbiBmcm9tICcuLi8uLi8uLi9qb2lzdC9qcy9TY3JlZW5JY29uLmpzJztcclxuaW1wb3J0IG9wdGlvbml6ZSwgeyBFbXB0eVNlbGZPcHRpb25zIH0gZnJvbSAnLi4vLi4vLi4vcGhldC1jb3JlL2pzL29wdGlvbml6ZS5qcyc7XHJcbmltcG9ydCBQaWNrUmVxdWlyZWQgZnJvbSAnLi4vLi4vLi4vcGhldC1jb3JlL2pzL3R5cGVzL1BpY2tSZXF1aXJlZC5qcyc7XHJcbmltcG9ydCBNb2RlbFZpZXdUcmFuc2Zvcm0yIGZyb20gJy4uLy4uLy4uL3BoZXRjb21tb24vanMvdmlldy9Nb2RlbFZpZXdUcmFuc2Zvcm0yLmpzJztcclxuaW1wb3J0IHsgSW1hZ2UgfSBmcm9tICcuLi8uLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgbWFjcm9Ib21lU2NyZWVuSWNvbl9wbmcgZnJvbSAnLi4vLi4vaW1hZ2VzL21hY3JvSG9tZVNjcmVlbkljb25fcG5nLmpzJztcclxuaW1wb3J0IG1hY3JvTmF2YmFySWNvbl9wbmcgZnJvbSAnLi4vLi4vaW1hZ2VzL21hY3JvTmF2YmFySWNvbl9wbmcuanMnO1xyXG5pbXBvcnQgUEhTY2FsZUNvbG9ycyBmcm9tICcuLi9jb21tb24vUEhTY2FsZUNvbG9ycy5qcyc7XHJcbmltcG9ydCBwaFNjYWxlIGZyb20gJy4uL3BoU2NhbGUuanMnO1xyXG5pbXBvcnQgUGhTY2FsZVN0cmluZ3MgZnJvbSAnLi4vUGhTY2FsZVN0cmluZ3MuanMnO1xyXG5pbXBvcnQgTWFjcm9Nb2RlbCBmcm9tICcuL21vZGVsL01hY3JvTW9kZWwuanMnO1xyXG5pbXBvcnQgTWFjcm9TY3JlZW5WaWV3IGZyb20gJy4vdmlldy9NYWNyb1NjcmVlblZpZXcuanMnO1xyXG5pbXBvcnQgTWFjcm9LZXlib2FyZEhlbHBDb250ZW50IGZyb20gJy4vdmlldy9NYWNyb0tleWJvYXJkSGVscENvbnRlbnQuanMnO1xyXG5cclxudHlwZSBTZWxmT3B0aW9ucyA9IEVtcHR5U2VsZk9wdGlvbnM7XHJcblxyXG50eXBlIE1hY3JvU2NyZWVuT3B0aW9ucyA9IFNlbGZPcHRpb25zICYgUGlja1JlcXVpcmVkPFNjcmVlbk9wdGlvbnMsICd0YW5kZW0nPjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1hY3JvU2NyZWVuIGV4dGVuZHMgU2NyZWVuPE1hY3JvTW9kZWwsIE1hY3JvU2NyZWVuVmlldz4ge1xyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoIHByb3ZpZGVkT3B0aW9uczogTWFjcm9TY3JlZW5PcHRpb25zICkge1xyXG5cclxuICAgIGNvbnN0IG9wdGlvbnMgPSBvcHRpb25pemU8TWFjcm9TY3JlZW5PcHRpb25zLCBTZWxmT3B0aW9ucywgU2NyZWVuT3B0aW9ucz4oKSgge1xyXG5cclxuICAgICAgLy8gU2NyZWVuT3B0aW9uc1xyXG4gICAgICBuYW1lOiBQaFNjYWxlU3RyaW5ncy5zY3JlZW4ubWFjcm9TdHJpbmdQcm9wZXJ0eSxcclxuICAgICAgYmFja2dyb3VuZENvbG9yUHJvcGVydHk6IG5ldyBQcm9wZXJ0eSggUEhTY2FsZUNvbG9ycy5TQ1JFRU5fQkFDS0dST1VORCApLFxyXG4gICAgICBob21lU2NyZWVuSWNvbjogbmV3IFNjcmVlbkljb24oIG5ldyBJbWFnZSggbWFjcm9Ib21lU2NyZWVuSWNvbl9wbmcgKSwge1xyXG4gICAgICAgIG1heEljb25XaWR0aFByb3BvcnRpb246IDEsXHJcbiAgICAgICAgbWF4SWNvbkhlaWdodFByb3BvcnRpb246IDFcclxuICAgICAgfSApLFxyXG4gICAgICBuYXZpZ2F0aW9uQmFySWNvbjogbmV3IFNjcmVlbkljb24oIG5ldyBJbWFnZSggbWFjcm9OYXZiYXJJY29uX3BuZyApLCB7XHJcbiAgICAgICAgbWF4SWNvbldpZHRoUHJvcG9ydGlvbjogMSxcclxuICAgICAgICBtYXhJY29uSGVpZ2h0UHJvcG9ydGlvbjogMVxyXG4gICAgICB9ICksXHJcbiAgICAgIC8vVE9ETyBodHRwczovL2dpdGh1Yi5jb20vcGhldHNpbXMvcGgtc2NhbGUvaXNzdWVzLzI0OSByZXN0b3JlIHdoZW4gd29yayBvbiBhbHRlcm5hdGl2ZSBpbnB1dCByZXN1bWVcclxuICAgICAgY3JlYXRlS2V5Ym9hcmRIZWxwTm9kZTogKCkgPT4gbmV3IE1hY3JvS2V5Ym9hcmRIZWxwQ29udGVudCgpXHJcbiAgICB9LCBwcm92aWRlZE9wdGlvbnMgKTtcclxuXHJcbiAgICBzdXBlcihcclxuICAgICAgKCkgPT4gbmV3IE1hY3JvTW9kZWwoIHtcclxuICAgICAgICB0YW5kZW06IG9wdGlvbnMudGFuZGVtLmNyZWF0ZVRhbmRlbSggJ21vZGVsJyApXHJcbiAgICAgIH0gKSxcclxuICAgICAgbW9kZWwgPT4gbmV3IE1hY3JvU2NyZWVuVmlldyggbW9kZWwsIE1vZGVsVmlld1RyYW5zZm9ybTIuY3JlYXRlSWRlbnRpdHkoKSwge1xyXG4gICAgICAgIHRhbmRlbTogb3B0aW9ucy50YW5kZW0uY3JlYXRlVGFuZGVtKCAndmlldycgKVxyXG4gICAgICB9ICksXHJcbiAgICAgIG9wdGlvbnNcclxuICAgICk7XHJcbiAgfVxyXG59XHJcblxyXG5waFNjYWxlLnJlZ2lzdGVyKCAnTWFjcm9TY3JlZW4nLCBNYWNyb1NjcmVlbiApOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxRQUFRLE1BQU0sOEJBQThCO0FBQ25ELE9BQU9DLE1BQU0sTUFBeUIsNkJBQTZCO0FBQ25FLE9BQU9DLFVBQVUsTUFBTSxpQ0FBaUM7QUFDeEQsT0FBT0MsU0FBUyxNQUE0QixvQ0FBb0M7QUFFaEYsT0FBT0MsbUJBQW1CLE1BQU0sb0RBQW9EO0FBQ3BGLFNBQVNDLEtBQUssUUFBUSxnQ0FBZ0M7QUFDdEQsT0FBT0MsdUJBQXVCLE1BQU0seUNBQXlDO0FBQzdFLE9BQU9DLG1CQUFtQixNQUFNLHFDQUFxQztBQUNyRSxPQUFPQyxhQUFhLE1BQU0sNEJBQTRCO0FBQ3RELE9BQU9DLE9BQU8sTUFBTSxlQUFlO0FBQ25DLE9BQU9DLGNBQWMsTUFBTSxzQkFBc0I7QUFDakQsT0FBT0MsVUFBVSxNQUFNLHVCQUF1QjtBQUM5QyxPQUFPQyxlQUFlLE1BQU0sMkJBQTJCO0FBQ3ZELE9BQU9DLHdCQUF3QixNQUFNLG9DQUFvQztBQU16RSxlQUFlLE1BQU1DLFdBQVcsU0FBU2IsTUFBTSxDQUE4QjtFQUVwRWMsV0FBV0EsQ0FBRUMsZUFBbUMsRUFBRztJQUV4RCxNQUFNQyxPQUFPLEdBQUdkLFNBQVMsQ0FBaUQsQ0FBQyxDQUFFO01BRTNFO01BQ0FlLElBQUksRUFBRVIsY0FBYyxDQUFDUyxNQUFNLENBQUNDLG1CQUFtQjtNQUMvQ0MsdUJBQXVCLEVBQUUsSUFBSXJCLFFBQVEsQ0FBRVEsYUFBYSxDQUFDYyxpQkFBa0IsQ0FBQztNQUN4RUMsY0FBYyxFQUFFLElBQUlyQixVQUFVLENBQUUsSUFBSUcsS0FBSyxDQUFFQyx1QkFBd0IsQ0FBQyxFQUFFO1FBQ3BFa0Isc0JBQXNCLEVBQUUsQ0FBQztRQUN6QkMsdUJBQXVCLEVBQUU7TUFDM0IsQ0FBRSxDQUFDO01BQ0hDLGlCQUFpQixFQUFFLElBQUl4QixVQUFVLENBQUUsSUFBSUcsS0FBSyxDQUFFRSxtQkFBb0IsQ0FBQyxFQUFFO1FBQ25FaUIsc0JBQXNCLEVBQUUsQ0FBQztRQUN6QkMsdUJBQXVCLEVBQUU7TUFDM0IsQ0FBRSxDQUFDO01BQ0g7TUFDQUUsc0JBQXNCLEVBQUVBLENBQUEsS0FBTSxJQUFJZCx3QkFBd0IsQ0FBQztJQUM3RCxDQUFDLEVBQUVHLGVBQWdCLENBQUM7SUFFcEIsS0FBSyxDQUNILE1BQU0sSUFBSUwsVUFBVSxDQUFFO01BQ3BCaUIsTUFBTSxFQUFFWCxPQUFPLENBQUNXLE1BQU0sQ0FBQ0MsWUFBWSxDQUFFLE9BQVE7SUFDL0MsQ0FBRSxDQUFDLEVBQ0hDLEtBQUssSUFBSSxJQUFJbEIsZUFBZSxDQUFFa0IsS0FBSyxFQUFFMUIsbUJBQW1CLENBQUMyQixjQUFjLENBQUMsQ0FBQyxFQUFFO01BQ3pFSCxNQUFNLEVBQUVYLE9BQU8sQ0FBQ1csTUFBTSxDQUFDQyxZQUFZLENBQUUsTUFBTztJQUM5QyxDQUFFLENBQUMsRUFDSFosT0FDRixDQUFDO0VBQ0g7QUFDRjtBQUVBUixPQUFPLENBQUN1QixRQUFRLENBQUUsYUFBYSxFQUFFbEIsV0FBWSxDQUFDIn0=