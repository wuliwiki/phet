// Copyright 2022, University of Colorado Boulder

/**
 * A demo for the different features and components for a preferences dialog.
 *
 * @author Marla Schulz (PhET Interactive Simulations)
 *
 */

import BooleanProperty from '../../../axon/js/BooleanProperty.js';
import { HBox, RichText, Text } from '../../../scenery/js/imports.js';
import PreferencesControl from '../preferences/PreferencesControl.js';
import ToggleSwitch from '../../../sun/js/ToggleSwitch.js';
import PreferencesDialogConstants from '../preferences/PreferencesDialogConstants.js';
import PreferencesPanelContentNode from '../preferences/PreferencesPanelContentNode.js';
import NumberControl from '../../../scenery-phet/js/NumberControl.js';
import NumberProperty from '../../../axon/js/NumberProperty.js';
import Range from '../../../dot/js/Range.js';
import joist from '../joist.js';
export default class PreferencesDialogDemoSection extends PreferencesPanelContentNode {
  constructor() {
    const sampleTitle = new PreferencesControl({
      labelNode: new Text('A Great Title', PreferencesDialogConstants.CONTROL_LABEL_OPTIONS)
    });
    const sampleDescription = new PreferencesControl({
      descriptionNode: new RichText('A description can be written here that gives the user useful information', PreferencesDialogConstants.CONTROL_DESCRIPTION_OPTIONS)
    });
    const sampleToggleControl = new PreferencesControl({
      labelNode: new Text('Toggle', PreferencesDialogConstants.CONTROL_LABEL_OPTIONS),
      descriptionNode: new RichText('This toggle can be clicked to turn on or off', PreferencesDialogConstants.CONTROL_DESCRIPTION_OPTIONS),
      controlNode: new ToggleSwitch(new BooleanProperty(true), false, true, PreferencesDialogConstants.TOGGLE_SWITCH_OPTIONS)
    });
    const sampleNumberControl = new PreferencesControl({
      labelNode: new Text('Number Control', PreferencesDialogConstants.CONTROL_LABEL_OPTIONS),
      descriptionNode: new RichText('This number control will allow you to change the value of a preference', PreferencesDialogConstants.CONTROL_DESCRIPTION_OPTIONS),
      controlNode: new NumberControl('integers:', new NumberProperty(0), new Range(0, 5), {
        layoutFunction: (titleNode, numberDisplay, slider, leftArrowButton, rightArrowButton) => {
          assert && assert(leftArrowButton && rightArrowButton);
          return new HBox({
            spacing: 8,
            resize: false,
            // prevent sliders from causing a resize when thumb is at min or max
            children: [numberDisplay, leftArrowButton, slider, rightArrowButton]
          });
        }
      })
    });
    super({
      content: [sampleTitle, sampleDescription, sampleToggleControl, sampleNumberControl]
    });
  }
}
joist.register('PreferencesDialogDemoSection', PreferencesDialogDemoSection);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJCb29sZWFuUHJvcGVydHkiLCJIQm94IiwiUmljaFRleHQiLCJUZXh0IiwiUHJlZmVyZW5jZXNDb250cm9sIiwiVG9nZ2xlU3dpdGNoIiwiUHJlZmVyZW5jZXNEaWFsb2dDb25zdGFudHMiLCJQcmVmZXJlbmNlc1BhbmVsQ29udGVudE5vZGUiLCJOdW1iZXJDb250cm9sIiwiTnVtYmVyUHJvcGVydHkiLCJSYW5nZSIsImpvaXN0IiwiUHJlZmVyZW5jZXNEaWFsb2dEZW1vU2VjdGlvbiIsImNvbnN0cnVjdG9yIiwic2FtcGxlVGl0bGUiLCJsYWJlbE5vZGUiLCJDT05UUk9MX0xBQkVMX09QVElPTlMiLCJzYW1wbGVEZXNjcmlwdGlvbiIsImRlc2NyaXB0aW9uTm9kZSIsIkNPTlRST0xfREVTQ1JJUFRJT05fT1BUSU9OUyIsInNhbXBsZVRvZ2dsZUNvbnRyb2wiLCJjb250cm9sTm9kZSIsIlRPR0dMRV9TV0lUQ0hfT1BUSU9OUyIsInNhbXBsZU51bWJlckNvbnRyb2wiLCJsYXlvdXRGdW5jdGlvbiIsInRpdGxlTm9kZSIsIm51bWJlckRpc3BsYXkiLCJzbGlkZXIiLCJsZWZ0QXJyb3dCdXR0b24iLCJyaWdodEFycm93QnV0dG9uIiwiYXNzZXJ0Iiwic3BhY2luZyIsInJlc2l6ZSIsImNoaWxkcmVuIiwiY29udGVudCIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiUHJlZmVyZW5jZXNEaWFsb2dEZW1vU2VjdGlvbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogQSBkZW1vIGZvciB0aGUgZGlmZmVyZW50IGZlYXR1cmVzIGFuZCBjb21wb25lbnRzIGZvciBhIHByZWZlcmVuY2VzIGRpYWxvZy5cclxuICpcclxuICogQGF1dGhvciBNYXJsYSBTY2h1bHogKFBoRVQgSW50ZXJhY3RpdmUgU2ltdWxhdGlvbnMpXHJcbiAqXHJcbiAqL1xyXG5cclxuaW1wb3J0IEJvb2xlYW5Qcm9wZXJ0eSBmcm9tICcuLi8uLi8uLi9heG9uL2pzL0Jvb2xlYW5Qcm9wZXJ0eS5qcyc7XHJcbmltcG9ydCB7IEhCb3gsIFJpY2hUZXh0LCBUZXh0IH0gZnJvbSAnLi4vLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IFByZWZlcmVuY2VzQ29udHJvbCBmcm9tICcuLi9wcmVmZXJlbmNlcy9QcmVmZXJlbmNlc0NvbnRyb2wuanMnO1xyXG5pbXBvcnQgVG9nZ2xlU3dpdGNoIGZyb20gJy4uLy4uLy4uL3N1bi9qcy9Ub2dnbGVTd2l0Y2guanMnO1xyXG5pbXBvcnQgUHJlZmVyZW5jZXNEaWFsb2dDb25zdGFudHMgZnJvbSAnLi4vcHJlZmVyZW5jZXMvUHJlZmVyZW5jZXNEaWFsb2dDb25zdGFudHMuanMnO1xyXG5pbXBvcnQgUHJlZmVyZW5jZXNQYW5lbENvbnRlbnROb2RlIGZyb20gJy4uL3ByZWZlcmVuY2VzL1ByZWZlcmVuY2VzUGFuZWxDb250ZW50Tm9kZS5qcyc7XHJcbmltcG9ydCBOdW1iZXJDb250cm9sIGZyb20gJy4uLy4uLy4uL3NjZW5lcnktcGhldC9qcy9OdW1iZXJDb250cm9sLmpzJztcclxuaW1wb3J0IE51bWJlclByb3BlcnR5IGZyb20gJy4uLy4uLy4uL2F4b24vanMvTnVtYmVyUHJvcGVydHkuanMnO1xyXG5pbXBvcnQgUmFuZ2UgZnJvbSAnLi4vLi4vLi4vZG90L2pzL1JhbmdlLmpzJztcclxuaW1wb3J0IGpvaXN0IGZyb20gJy4uL2pvaXN0LmpzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFByZWZlcmVuY2VzRGlhbG9nRGVtb1NlY3Rpb24gZXh0ZW5kcyBQcmVmZXJlbmNlc1BhbmVsQ29udGVudE5vZGUge1xyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoKSB7XHJcblxyXG4gICAgY29uc3Qgc2FtcGxlVGl0bGUgPSBuZXcgUHJlZmVyZW5jZXNDb250cm9sKCB7XHJcbiAgICAgIGxhYmVsTm9kZTogbmV3IFRleHQoICdBIEdyZWF0IFRpdGxlJyxcclxuICAgICAgICBQcmVmZXJlbmNlc0RpYWxvZ0NvbnN0YW50cy5DT05UUk9MX0xBQkVMX09QVElPTlMgKVxyXG4gICAgfSApO1xyXG5cclxuICAgIGNvbnN0IHNhbXBsZURlc2NyaXB0aW9uID0gbmV3IFByZWZlcmVuY2VzQ29udHJvbCgge1xyXG4gICAgICBkZXNjcmlwdGlvbk5vZGU6IG5ldyBSaWNoVGV4dCggJ0EgZGVzY3JpcHRpb24gY2FuIGJlIHdyaXR0ZW4gaGVyZSB0aGF0IGdpdmVzIHRoZSB1c2VyIHVzZWZ1bCBpbmZvcm1hdGlvbicsXHJcbiAgICAgICAgUHJlZmVyZW5jZXNEaWFsb2dDb25zdGFudHMuQ09OVFJPTF9ERVNDUklQVElPTl9PUFRJT05TIClcclxuICAgIH0gKTtcclxuXHJcbiAgICBjb25zdCBzYW1wbGVUb2dnbGVDb250cm9sID0gbmV3IFByZWZlcmVuY2VzQ29udHJvbCgge1xyXG4gICAgICBsYWJlbE5vZGU6IG5ldyBUZXh0KCAnVG9nZ2xlJywgUHJlZmVyZW5jZXNEaWFsb2dDb25zdGFudHMuQ09OVFJPTF9MQUJFTF9PUFRJT05TICksXHJcbiAgICAgIGRlc2NyaXB0aW9uTm9kZTogbmV3IFJpY2hUZXh0KCAnVGhpcyB0b2dnbGUgY2FuIGJlIGNsaWNrZWQgdG8gdHVybiBvbiBvciBvZmYnLCBQcmVmZXJlbmNlc0RpYWxvZ0NvbnN0YW50cy5DT05UUk9MX0RFU0NSSVBUSU9OX09QVElPTlMgKSxcclxuICAgICAgY29udHJvbE5vZGU6IG5ldyBUb2dnbGVTd2l0Y2goIG5ldyBCb29sZWFuUHJvcGVydHkoIHRydWUgKSwgZmFsc2UsIHRydWUsIFByZWZlcmVuY2VzRGlhbG9nQ29uc3RhbnRzLlRPR0dMRV9TV0lUQ0hfT1BUSU9OUyApXHJcbiAgICB9ICk7XHJcblxyXG4gICAgY29uc3Qgc2FtcGxlTnVtYmVyQ29udHJvbCA9IG5ldyBQcmVmZXJlbmNlc0NvbnRyb2woIHtcclxuICAgICAgbGFiZWxOb2RlOiBuZXcgVGV4dCggJ051bWJlciBDb250cm9sJywgUHJlZmVyZW5jZXNEaWFsb2dDb25zdGFudHMuQ09OVFJPTF9MQUJFTF9PUFRJT05TICksXHJcbiAgICAgIGRlc2NyaXB0aW9uTm9kZTogbmV3IFJpY2hUZXh0KCAnVGhpcyBudW1iZXIgY29udHJvbCB3aWxsIGFsbG93IHlvdSB0byBjaGFuZ2UgdGhlIHZhbHVlIG9mIGEgcHJlZmVyZW5jZScsIFByZWZlcmVuY2VzRGlhbG9nQ29uc3RhbnRzLkNPTlRST0xfREVTQ1JJUFRJT05fT1BUSU9OUyApLFxyXG4gICAgICBjb250cm9sTm9kZTogbmV3IE51bWJlckNvbnRyb2woICdpbnRlZ2VyczonLCBuZXcgTnVtYmVyUHJvcGVydHkoIDAgKSwgbmV3IFJhbmdlKCAwLCA1ICksXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgbGF5b3V0RnVuY3Rpb246ICggdGl0bGVOb2RlLCBudW1iZXJEaXNwbGF5LCBzbGlkZXIsIGxlZnRBcnJvd0J1dHRvbiwgcmlnaHRBcnJvd0J1dHRvbiApID0+IHtcclxuICAgICAgICAgICAgYXNzZXJ0ICYmIGFzc2VydCggbGVmdEFycm93QnV0dG9uICYmIHJpZ2h0QXJyb3dCdXR0b24gKTtcclxuICAgICAgICAgICAgcmV0dXJuIG5ldyBIQm94KCB7XHJcbiAgICAgICAgICAgICAgc3BhY2luZzogOCxcclxuICAgICAgICAgICAgICByZXNpemU6IGZhbHNlLCAvLyBwcmV2ZW50IHNsaWRlcnMgZnJvbSBjYXVzaW5nIGEgcmVzaXplIHdoZW4gdGh1bWIgaXMgYXQgbWluIG9yIG1heFxyXG4gICAgICAgICAgICAgIGNoaWxkcmVuOiBbIG51bWJlckRpc3BsYXksIGxlZnRBcnJvd0J1dHRvbiEsIHNsaWRlciwgcmlnaHRBcnJvd0J1dHRvbiEgXVxyXG4gICAgICAgICAgICB9ICk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSApXHJcbiAgICB9ICk7XHJcblxyXG4gICAgc3VwZXIoIHsgY29udGVudDogWyBzYW1wbGVUaXRsZSwgc2FtcGxlRGVzY3JpcHRpb24sIHNhbXBsZVRvZ2dsZUNvbnRyb2wsIHNhbXBsZU51bWJlckNvbnRyb2wgXSB9ICk7XHJcbiAgfVxyXG59XHJcblxyXG5qb2lzdC5yZWdpc3RlciggJ1ByZWZlcmVuY2VzRGlhbG9nRGVtb1NlY3Rpb24nLCBQcmVmZXJlbmNlc0RpYWxvZ0RlbW9TZWN0aW9uICk7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsZUFBZSxNQUFNLHFDQUFxQztBQUNqRSxTQUFTQyxJQUFJLEVBQUVDLFFBQVEsRUFBRUMsSUFBSSxRQUFRLGdDQUFnQztBQUNyRSxPQUFPQyxrQkFBa0IsTUFBTSxzQ0FBc0M7QUFDckUsT0FBT0MsWUFBWSxNQUFNLGlDQUFpQztBQUMxRCxPQUFPQywwQkFBMEIsTUFBTSw4Q0FBOEM7QUFDckYsT0FBT0MsMkJBQTJCLE1BQU0sK0NBQStDO0FBQ3ZGLE9BQU9DLGFBQWEsTUFBTSwyQ0FBMkM7QUFDckUsT0FBT0MsY0FBYyxNQUFNLG9DQUFvQztBQUMvRCxPQUFPQyxLQUFLLE1BQU0sMEJBQTBCO0FBQzVDLE9BQU9DLEtBQUssTUFBTSxhQUFhO0FBRS9CLGVBQWUsTUFBTUMsNEJBQTRCLFNBQVNMLDJCQUEyQixDQUFDO0VBRTdFTSxXQUFXQSxDQUFBLEVBQUc7SUFFbkIsTUFBTUMsV0FBVyxHQUFHLElBQUlWLGtCQUFrQixDQUFFO01BQzFDVyxTQUFTLEVBQUUsSUFBSVosSUFBSSxDQUFFLGVBQWUsRUFDbENHLDBCQUEwQixDQUFDVSxxQkFBc0I7SUFDckQsQ0FBRSxDQUFDO0lBRUgsTUFBTUMsaUJBQWlCLEdBQUcsSUFBSWIsa0JBQWtCLENBQUU7TUFDaERjLGVBQWUsRUFBRSxJQUFJaEIsUUFBUSxDQUFFLDBFQUEwRSxFQUN2R0ksMEJBQTBCLENBQUNhLDJCQUE0QjtJQUMzRCxDQUFFLENBQUM7SUFFSCxNQUFNQyxtQkFBbUIsR0FBRyxJQUFJaEIsa0JBQWtCLENBQUU7TUFDbERXLFNBQVMsRUFBRSxJQUFJWixJQUFJLENBQUUsUUFBUSxFQUFFRywwQkFBMEIsQ0FBQ1UscUJBQXNCLENBQUM7TUFDakZFLGVBQWUsRUFBRSxJQUFJaEIsUUFBUSxDQUFFLDhDQUE4QyxFQUFFSSwwQkFBMEIsQ0FBQ2EsMkJBQTRCLENBQUM7TUFDdklFLFdBQVcsRUFBRSxJQUFJaEIsWUFBWSxDQUFFLElBQUlMLGVBQWUsQ0FBRSxJQUFLLENBQUMsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFTSwwQkFBMEIsQ0FBQ2dCLHFCQUFzQjtJQUM1SCxDQUFFLENBQUM7SUFFSCxNQUFNQyxtQkFBbUIsR0FBRyxJQUFJbkIsa0JBQWtCLENBQUU7TUFDbERXLFNBQVMsRUFBRSxJQUFJWixJQUFJLENBQUUsZ0JBQWdCLEVBQUVHLDBCQUEwQixDQUFDVSxxQkFBc0IsQ0FBQztNQUN6RkUsZUFBZSxFQUFFLElBQUloQixRQUFRLENBQUUsd0VBQXdFLEVBQUVJLDBCQUEwQixDQUFDYSwyQkFBNEIsQ0FBQztNQUNqS0UsV0FBVyxFQUFFLElBQUliLGFBQWEsQ0FBRSxXQUFXLEVBQUUsSUFBSUMsY0FBYyxDQUFFLENBQUUsQ0FBQyxFQUFFLElBQUlDLEtBQUssQ0FBRSxDQUFDLEVBQUUsQ0FBRSxDQUFDLEVBQ3JGO1FBQ0VjLGNBQWMsRUFBRUEsQ0FBRUMsU0FBUyxFQUFFQyxhQUFhLEVBQUVDLE1BQU0sRUFBRUMsZUFBZSxFQUFFQyxnQkFBZ0IsS0FBTTtVQUN6RkMsTUFBTSxJQUFJQSxNQUFNLENBQUVGLGVBQWUsSUFBSUMsZ0JBQWlCLENBQUM7VUFDdkQsT0FBTyxJQUFJNUIsSUFBSSxDQUFFO1lBQ2Y4QixPQUFPLEVBQUUsQ0FBQztZQUNWQyxNQUFNLEVBQUUsS0FBSztZQUFFO1lBQ2ZDLFFBQVEsRUFBRSxDQUFFUCxhQUFhLEVBQUVFLGVBQWUsRUFBR0QsTUFBTSxFQUFFRSxnQkFBZ0I7VUFDdkUsQ0FBRSxDQUFDO1FBQ0w7TUFDRixDQUFFO0lBQ04sQ0FBRSxDQUFDO0lBRUgsS0FBSyxDQUFFO01BQUVLLE9BQU8sRUFBRSxDQUFFcEIsV0FBVyxFQUFFRyxpQkFBaUIsRUFBRUcsbUJBQW1CLEVBQUVHLG1CQUFtQjtJQUFHLENBQUUsQ0FBQztFQUNwRztBQUNGO0FBRUFaLEtBQUssQ0FBQ3dCLFFBQVEsQ0FBRSw4QkFBOEIsRUFBRXZCLDRCQUE2QixDQUFDIn0=