// Copyright 2022, University of Colorado Boulder

/**
 * A toggle switch for "Projector Mode". Changes the color scheme for better contrast on projectors. The sim must have
 * a projector mode color profile. This toggle switch appears in the PreferencesDialog in the Visual panel.
 *
 * @author Jesse Greenberg (PhET Interactive Simulations)
 */

import { SceneryConstants, VoicingText } from '../../../scenery/js/imports.js';
import joist from '../joist.js';
import PreferencesDialog from './PreferencesDialog.js';
import PreferencesControl from './PreferencesControl.js';
import JoistStrings from '../JoistStrings.js';
import optionize from '../../../phet-core/js/optionize.js';
import ToggleSwitch from '../../../sun/js/ToggleSwitch.js';
import PreferencesDialogConstants from './PreferencesDialogConstants.js';
import PatternStringProperty from '../../../axon/js/PatternStringProperty.js';
class ProjectorModeToggleSwitch extends PreferencesControl {
  constructor(colorProfileProperty, providedOptions) {
    assert && assert(phet.chipper.colorProfiles[0] !== SceneryConstants.PROJECTOR_COLOR_PROFILE && phet.chipper.colorProfiles.includes(SceneryConstants.PROJECTOR_COLOR_PROFILE) && phet.chipper.colorProfiles.length === 2 && phet.chipper.colorProfiles[0] !== phet.chipper.colorProfiles[1], 'ProjectorModeToggleSwitch requires sims that support the projector color profile and one other color profile');
    const projectorModeLabel = new VoicingText(JoistStrings.projectorModeStringProperty, PreferencesDialog.PANEL_SECTION_LABEL_OPTIONS);
    const projectorModeDescription = new VoicingText(JoistStrings.preferences.tabs.visual.projectorModeDescriptionStringProperty, PreferencesDialog.PANEL_SECTION_CONTENT_OPTIONS);

    // Identify the non-projector color profile that this checkbox sets.
    const otherColorProfile = phet.chipper.colorProfiles.find(colorProfile => colorProfile !== SceneryConstants.PROJECTOR_COLOR_PROFILE);
    const projectorModeSwitch = new ToggleSwitch(colorProfileProperty, otherColorProfile, SceneryConstants.PROJECTOR_COLOR_PROFILE, PreferencesDialogConstants.TOGGLE_SWITCH_OPTIONS);
    const projectorModePatternStringProperty = new PatternStringProperty(JoistStrings.a11y.preferences.tabs.labelledDescriptionPatternStringProperty, {
      label: JoistStrings.projectorModeStringProperty,
      description: JoistStrings.preferences.tabs.visual.projectorModeDescriptionStringProperty
    });
    projectorModeDescription.readingBlockNameResponse = projectorModePatternStringProperty;
    const options = optionize()({
      labelNode: projectorModeLabel,
      descriptionNode: projectorModeDescription,
      controlNode: projectorModeSwitch
    }, providedOptions);
    super(options);
    this.disposeProjectorModeToggleSwitch = () => {
      projectorModeLabel.dispose();
      projectorModeDescription.dispose();
      projectorModeSwitch.dispose();
      projectorModePatternStringProperty.dispose();
    };
  }
  dispose() {
    this.disposeProjectorModeToggleSwitch();
    super.dispose();
  }
}
joist.register('ProjectorModeToggleSwitch', ProjectorModeToggleSwitch);
export default ProjectorModeToggleSwitch;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,