// Copyright 2019-2022, University of Colorado Boulder

/**
 * QUnit tests for TemporalCounter
 *
 * @author Michael Kauzmann (PhET Interactive Simulations)
 * @author Chris Klusendorf (PhET Interactive Simulations)
 * @author Sam Reid (PhET Interactive Simulations)
 */

import TemporalCounter from './TemporalCounter.js';
QUnit.test('TemporalCounter basics', async assert => {
  const testTemporalCounter = (binSize, timeEvents, expectedCount, message) => {
    const counter = new TemporalCounter(binSize);
    timeEvents.forEach(time => counter.onEvent(time));
    assert.ok(counter.counts === expectedCount, message);
  };
  testTemporalCounter(1000, [12, 14, 20], 1, 'three events in one bin size');
  testTemporalCounter(1000, [10012, 10014, 10020], 1, 'three events in one bin size, larger than the bin');
  testTemporalCounter(1000, [12, 1014, 10020], 3, 'three events, 3 counts');
  testTemporalCounter(1000, [0, 999, 1000, 1001, 5000, 5001], 3, 'edge cases, 3 counts expected');
  testTemporalCounter(1, [12, 14, 20, 39, 40, 41, 50], 7, 'seven events');
  testTemporalCounter(1000000, [1, 11, 111, 1111, 11111, 111111], 1, 'six events in one big bin size');
  testTemporalCounter(5000, [11, 11, 11, 11, 11, 11, 11, 4000], 1, 'repetition');
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJUZW1wb3JhbENvdW50ZXIiLCJRVW5pdCIsInRlc3QiLCJhc3NlcnQiLCJ0ZXN0VGVtcG9yYWxDb3VudGVyIiwiYmluU2l6ZSIsInRpbWVFdmVudHMiLCJleHBlY3RlZENvdW50IiwibWVzc2FnZSIsImNvdW50ZXIiLCJmb3JFYWNoIiwidGltZSIsIm9uRXZlbnQiLCJvayIsImNvdW50cyJdLCJzb3VyY2VzIjpbIlRlbXBvcmFsQ291bnRlclRlc3RzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE5LTIwMjIsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIFFVbml0IHRlc3RzIGZvciBUZW1wb3JhbENvdW50ZXJcclxuICpcclxuICogQGF1dGhvciBNaWNoYWVsIEthdXptYW5uIChQaEVUIEludGVyYWN0aXZlIFNpbXVsYXRpb25zKVxyXG4gKiBAYXV0aG9yIENocmlzIEtsdXNlbmRvcmYgKFBoRVQgSW50ZXJhY3RpdmUgU2ltdWxhdGlvbnMpXHJcbiAqIEBhdXRob3IgU2FtIFJlaWQgKFBoRVQgSW50ZXJhY3RpdmUgU2ltdWxhdGlvbnMpXHJcbiAqL1xyXG5cclxuaW1wb3J0IFRlbXBvcmFsQ291bnRlciBmcm9tICcuL1RlbXBvcmFsQ291bnRlci5qcyc7XHJcblxyXG5RVW5pdC50ZXN0KCAnVGVtcG9yYWxDb3VudGVyIGJhc2ljcycsIGFzeW5jIGFzc2VydCA9PiB7XHJcblxyXG4gIGNvbnN0IHRlc3RUZW1wb3JhbENvdW50ZXIgPSAoIGJpblNpemU6IG51bWJlciwgdGltZUV2ZW50czogbnVtYmVyW10sIGV4cGVjdGVkQ291bnQ6IG51bWJlciwgbWVzc2FnZTogc3RyaW5nICkgPT4ge1xyXG4gICAgY29uc3QgY291bnRlciA9IG5ldyBUZW1wb3JhbENvdW50ZXIoIGJpblNpemUgKTtcclxuICAgIHRpbWVFdmVudHMuZm9yRWFjaCggdGltZSA9PiBjb3VudGVyLm9uRXZlbnQoIHRpbWUgKSApO1xyXG4gICAgYXNzZXJ0Lm9rKCBjb3VudGVyLmNvdW50cyA9PT0gZXhwZWN0ZWRDb3VudCwgbWVzc2FnZSApO1xyXG4gIH07XHJcblxyXG4gIHRlc3RUZW1wb3JhbENvdW50ZXIoIDEwMDAsIFsgMTIsIDE0LCAyMCBdLCAxLFxyXG4gICAgJ3RocmVlIGV2ZW50cyBpbiBvbmUgYmluIHNpemUnICk7XHJcbiAgdGVzdFRlbXBvcmFsQ291bnRlciggMTAwMCwgWyAxMDAxMiwgMTAwMTQsIDEwMDIwIF0sIDEsXHJcbiAgICAndGhyZWUgZXZlbnRzIGluIG9uZSBiaW4gc2l6ZSwgbGFyZ2VyIHRoYW4gdGhlIGJpbicgKTtcclxuICB0ZXN0VGVtcG9yYWxDb3VudGVyKCAxMDAwLCBbIDEyLCAxMDE0LCAxMDAyMCBdLCAzLFxyXG4gICAgJ3RocmVlIGV2ZW50cywgMyBjb3VudHMnICk7XHJcbiAgdGVzdFRlbXBvcmFsQ291bnRlciggMTAwMCwgWyAwLCA5OTksIDEwMDAsIDEwMDEsIDUwMDAsIDUwMDEgXSwgMyxcclxuICAgICdlZGdlIGNhc2VzLCAzIGNvdW50cyBleHBlY3RlZCcgKTtcclxuICB0ZXN0VGVtcG9yYWxDb3VudGVyKCAxLCBbIDEyLCAxNCwgMjAsIDM5LCA0MCwgNDEsIDUwIF0sIDcsXHJcbiAgICAnc2V2ZW4gZXZlbnRzJyApO1xyXG4gIHRlc3RUZW1wb3JhbENvdW50ZXIoIDEwMDAwMDAsIFsgMSwgMTEsIDExMSwgMTExMSwgMTExMTEsIDExMTExMSBdLCAxLFxyXG4gICAgJ3NpeCBldmVudHMgaW4gb25lIGJpZyBiaW4gc2l6ZScgKTtcclxuICB0ZXN0VGVtcG9yYWxDb3VudGVyKCA1MDAwLCBbIDExLCAxMSwgMTEsIDExLCAxMSwgMTEsIDExLCA0MDAwIF0sIDEsXHJcbiAgICAncmVwZXRpdGlvbicgKTtcclxufSApOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsZUFBZSxNQUFNLHNCQUFzQjtBQUVsREMsS0FBSyxDQUFDQyxJQUFJLENBQUUsd0JBQXdCLEVBQUUsTUFBTUMsTUFBTSxJQUFJO0VBRXBELE1BQU1DLG1CQUFtQixHQUFHQSxDQUFFQyxPQUFlLEVBQUVDLFVBQW9CLEVBQUVDLGFBQXFCLEVBQUVDLE9BQWUsS0FBTTtJQUMvRyxNQUFNQyxPQUFPLEdBQUcsSUFBSVQsZUFBZSxDQUFFSyxPQUFRLENBQUM7SUFDOUNDLFVBQVUsQ0FBQ0ksT0FBTyxDQUFFQyxJQUFJLElBQUlGLE9BQU8sQ0FBQ0csT0FBTyxDQUFFRCxJQUFLLENBQUUsQ0FBQztJQUNyRFIsTUFBTSxDQUFDVSxFQUFFLENBQUVKLE9BQU8sQ0FBQ0ssTUFBTSxLQUFLUCxhQUFhLEVBQUVDLE9BQVEsQ0FBQztFQUN4RCxDQUFDO0VBRURKLG1CQUFtQixDQUFFLElBQUksRUFBRSxDQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFFLEVBQUUsQ0FBQyxFQUMxQyw4QkFBK0IsQ0FBQztFQUNsQ0EsbUJBQW1CLENBQUUsSUFBSSxFQUFFLENBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLENBQUUsRUFBRSxDQUFDLEVBQ25ELG1EQUFvRCxDQUFDO0VBQ3ZEQSxtQkFBbUIsQ0FBRSxJQUFJLEVBQUUsQ0FBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLEtBQUssQ0FBRSxFQUFFLENBQUMsRUFDL0Msd0JBQXlCLENBQUM7RUFDNUJBLG1CQUFtQixDQUFFLElBQUksRUFBRSxDQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFFLEVBQUUsQ0FBQyxFQUM5RCwrQkFBZ0MsQ0FBQztFQUNuQ0EsbUJBQW1CLENBQUUsQ0FBQyxFQUFFLENBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFFLEVBQUUsQ0FBQyxFQUN2RCxjQUFlLENBQUM7RUFDbEJBLG1CQUFtQixDQUFFLE9BQU8sRUFBRSxDQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsTUFBTSxDQUFFLEVBQUUsQ0FBQyxFQUNsRSxnQ0FBaUMsQ0FBQztFQUNwQ0EsbUJBQW1CLENBQUUsSUFBSSxFQUFFLENBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLElBQUksQ0FBRSxFQUFFLENBQUMsRUFDaEUsWUFBYSxDQUFDO0FBQ2xCLENBQUUsQ0FBQyJ9