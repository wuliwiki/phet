// Copyright 2013-2022, University of Colorado Boulder

/**
 * Highlight node for navigation bar screen buttons, phet button, etc.
 *
 * @author Sam Reid (PhET Interactive Simulations)
 * @author Chris Malley (PixelZoom, Inc.)
 */

import optionize from '../../phet-core/js/optionize.js';
import { Color, HBox, LinearGradient, Rectangle } from '../../scenery/js/imports.js';
import joist from './joist.js';
class HighlightNode extends HBox {
  /**
   * @param width - can be mutated with the `spacing` property.
   * @param height
   * @param [providedOptions]
   */
  constructor(width, height, providedOptions) {
    const options = optionize()({
      fill: 'white',
      highlightWidth: 1,
      pickable: false
    }, providedOptions);
    assert && assert(options.spacing === undefined, 'HighlightNode sets spacing');
    options.spacing = width;
    const innerColor = options.fill;
    const outerColor = Color.toColor(innerColor).withAlpha(0); // transparent

    const barOptions = {
      fill: new LinearGradient(0, 0, 0, height).addColorStop(0, outerColor).addColorStop(0.5, innerColor).addColorStop(1, outerColor)
    };
    const leftBar = new Rectangle(0, 0, options.highlightWidth, height, barOptions);
    const rightBar = new Rectangle(0, 0, options.highlightWidth, height, barOptions);
    assert && assert(!options.children, 'HighlightNode sets children');
    options.children = [leftBar, rightBar];
    super(options);
  }
}
joist.register('HighlightNode', HighlightNode);
export default HighlightNode;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJvcHRpb25pemUiLCJDb2xvciIsIkhCb3giLCJMaW5lYXJHcmFkaWVudCIsIlJlY3RhbmdsZSIsImpvaXN0IiwiSGlnaGxpZ2h0Tm9kZSIsImNvbnN0cnVjdG9yIiwid2lkdGgiLCJoZWlnaHQiLCJwcm92aWRlZE9wdGlvbnMiLCJvcHRpb25zIiwiZmlsbCIsImhpZ2hsaWdodFdpZHRoIiwicGlja2FibGUiLCJhc3NlcnQiLCJzcGFjaW5nIiwidW5kZWZpbmVkIiwiaW5uZXJDb2xvciIsIm91dGVyQ29sb3IiLCJ0b0NvbG9yIiwid2l0aEFscGhhIiwiYmFyT3B0aW9ucyIsImFkZENvbG9yU3RvcCIsImxlZnRCYXIiLCJyaWdodEJhciIsImNoaWxkcmVuIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJIaWdobGlnaHROb2RlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDEzLTIwMjIsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIEhpZ2hsaWdodCBub2RlIGZvciBuYXZpZ2F0aW9uIGJhciBzY3JlZW4gYnV0dG9ucywgcGhldCBidXR0b24sIGV0Yy5cclxuICpcclxuICogQGF1dGhvciBTYW0gUmVpZCAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcclxuICogQGF1dGhvciBDaHJpcyBNYWxsZXkgKFBpeGVsWm9vbSwgSW5jLilcclxuICovXHJcblxyXG5pbXBvcnQgb3B0aW9uaXplIGZyb20gJy4uLy4uL3BoZXQtY29yZS9qcy9vcHRpb25pemUuanMnO1xyXG5pbXBvcnQgeyBDb2xvciwgSEJveCwgSEJveE9wdGlvbnMsIFRDb2xvciwgTGluZWFyR3JhZGllbnQsIFJlY3RhbmdsZSB9IGZyb20gJy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XHJcbmltcG9ydCBqb2lzdCBmcm9tICcuL2pvaXN0LmpzJztcclxuXHJcbnR5cGUgU2VsZk9wdGlvbnMgPSB7XHJcbiAgaGlnaGxpZ2h0V2lkdGg/OiBudW1iZXI7XHJcbiAgZmlsbD86IFRDb2xvcjtcclxufTtcclxudHlwZSBIaWdobGlnaHROb2RlT3B0aW9ucyA9IFNlbGZPcHRpb25zICYgSEJveE9wdGlvbnM7XHJcblxyXG5jbGFzcyBIaWdobGlnaHROb2RlIGV4dGVuZHMgSEJveCB7XHJcblxyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSB3aWR0aCAtIGNhbiBiZSBtdXRhdGVkIHdpdGggdGhlIGBzcGFjaW5nYCBwcm9wZXJ0eS5cclxuICAgKiBAcGFyYW0gaGVpZ2h0XHJcbiAgICogQHBhcmFtIFtwcm92aWRlZE9wdGlvbnNdXHJcbiAgICovXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKCB3aWR0aDogbnVtYmVyLCBoZWlnaHQ6IG51bWJlciwgcHJvdmlkZWRPcHRpb25zPzogSGlnaGxpZ2h0Tm9kZU9wdGlvbnMgKSB7XHJcblxyXG4gICAgY29uc3Qgb3B0aW9ucyA9IG9wdGlvbml6ZTxIaWdobGlnaHROb2RlT3B0aW9ucywgU2VsZk9wdGlvbnMsIEhCb3hPcHRpb25zPigpKCB7XHJcbiAgICAgIGZpbGw6ICd3aGl0ZScsXHJcbiAgICAgIGhpZ2hsaWdodFdpZHRoOiAxLFxyXG4gICAgICBwaWNrYWJsZTogZmFsc2VcclxuICAgIH0sIHByb3ZpZGVkT3B0aW9ucyApO1xyXG5cclxuICAgIGFzc2VydCAmJiBhc3NlcnQoIG9wdGlvbnMuc3BhY2luZyA9PT0gdW5kZWZpbmVkLCAnSGlnaGxpZ2h0Tm9kZSBzZXRzIHNwYWNpbmcnICk7XHJcbiAgICBvcHRpb25zLnNwYWNpbmcgPSB3aWR0aDtcclxuXHJcbiAgICBjb25zdCBpbm5lckNvbG9yID0gb3B0aW9ucy5maWxsO1xyXG4gICAgY29uc3Qgb3V0ZXJDb2xvciA9IENvbG9yLnRvQ29sb3IoIGlubmVyQ29sb3IgKS53aXRoQWxwaGEoIDAgKTsgLy8gdHJhbnNwYXJlbnRcclxuXHJcbiAgICBjb25zdCBiYXJPcHRpb25zID0ge1xyXG4gICAgICBmaWxsOiBuZXcgTGluZWFyR3JhZGllbnQoIDAsIDAsIDAsIGhlaWdodCApXHJcbiAgICAgICAgLmFkZENvbG9yU3RvcCggMCwgb3V0ZXJDb2xvciApXHJcbiAgICAgICAgLmFkZENvbG9yU3RvcCggMC41LCBpbm5lckNvbG9yIClcclxuICAgICAgICAuYWRkQ29sb3JTdG9wKCAxLCBvdXRlckNvbG9yIClcclxuICAgIH07XHJcbiAgICBjb25zdCBsZWZ0QmFyID0gbmV3IFJlY3RhbmdsZSggMCwgMCwgb3B0aW9ucy5oaWdobGlnaHRXaWR0aCwgaGVpZ2h0LCBiYXJPcHRpb25zICk7XHJcbiAgICBjb25zdCByaWdodEJhciA9IG5ldyBSZWN0YW5nbGUoIDAsIDAsIG9wdGlvbnMuaGlnaGxpZ2h0V2lkdGgsIGhlaWdodCwgYmFyT3B0aW9ucyApO1xyXG5cclxuICAgIGFzc2VydCAmJiBhc3NlcnQoICFvcHRpb25zLmNoaWxkcmVuLCAnSGlnaGxpZ2h0Tm9kZSBzZXRzIGNoaWxkcmVuJyApO1xyXG4gICAgb3B0aW9ucy5jaGlsZHJlbiA9IFsgbGVmdEJhciwgcmlnaHRCYXIgXTtcclxuXHJcbiAgICBzdXBlciggb3B0aW9ucyApO1xyXG4gIH1cclxufVxyXG5cclxuam9pc3QucmVnaXN0ZXIoICdIaWdobGlnaHROb2RlJywgSGlnaGxpZ2h0Tm9kZSApO1xyXG5leHBvcnQgZGVmYXVsdCBIaWdobGlnaHROb2RlOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLFNBQVMsTUFBTSxpQ0FBaUM7QUFDdkQsU0FBU0MsS0FBSyxFQUFFQyxJQUFJLEVBQXVCQyxjQUFjLEVBQUVDLFNBQVMsUUFBUSw2QkFBNkI7QUFDekcsT0FBT0MsS0FBSyxNQUFNLFlBQVk7QUFROUIsTUFBTUMsYUFBYSxTQUFTSixJQUFJLENBQUM7RUFFL0I7QUFDRjtBQUNBO0FBQ0E7QUFDQTtFQUNTSyxXQUFXQSxDQUFFQyxLQUFhLEVBQUVDLE1BQWMsRUFBRUMsZUFBc0MsRUFBRztJQUUxRixNQUFNQyxPQUFPLEdBQUdYLFNBQVMsQ0FBaUQsQ0FBQyxDQUFFO01BQzNFWSxJQUFJLEVBQUUsT0FBTztNQUNiQyxjQUFjLEVBQUUsQ0FBQztNQUNqQkMsUUFBUSxFQUFFO0lBQ1osQ0FBQyxFQUFFSixlQUFnQixDQUFDO0lBRXBCSyxNQUFNLElBQUlBLE1BQU0sQ0FBRUosT0FBTyxDQUFDSyxPQUFPLEtBQUtDLFNBQVMsRUFBRSw0QkFBNkIsQ0FBQztJQUMvRU4sT0FBTyxDQUFDSyxPQUFPLEdBQUdSLEtBQUs7SUFFdkIsTUFBTVUsVUFBVSxHQUFHUCxPQUFPLENBQUNDLElBQUk7SUFDL0IsTUFBTU8sVUFBVSxHQUFHbEIsS0FBSyxDQUFDbUIsT0FBTyxDQUFFRixVQUFXLENBQUMsQ0FBQ0csU0FBUyxDQUFFLENBQUUsQ0FBQyxDQUFDLENBQUM7O0lBRS9ELE1BQU1DLFVBQVUsR0FBRztNQUNqQlYsSUFBSSxFQUFFLElBQUlULGNBQWMsQ0FBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRU0sTUFBTyxDQUFDLENBQ3hDYyxZQUFZLENBQUUsQ0FBQyxFQUFFSixVQUFXLENBQUMsQ0FDN0JJLFlBQVksQ0FBRSxHQUFHLEVBQUVMLFVBQVcsQ0FBQyxDQUMvQkssWUFBWSxDQUFFLENBQUMsRUFBRUosVUFBVztJQUNqQyxDQUFDO0lBQ0QsTUFBTUssT0FBTyxHQUFHLElBQUlwQixTQUFTLENBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRU8sT0FBTyxDQUFDRSxjQUFjLEVBQUVKLE1BQU0sRUFBRWEsVUFBVyxDQUFDO0lBQ2pGLE1BQU1HLFFBQVEsR0FBRyxJQUFJckIsU0FBUyxDQUFFLENBQUMsRUFBRSxDQUFDLEVBQUVPLE9BQU8sQ0FBQ0UsY0FBYyxFQUFFSixNQUFNLEVBQUVhLFVBQVcsQ0FBQztJQUVsRlAsTUFBTSxJQUFJQSxNQUFNLENBQUUsQ0FBQ0osT0FBTyxDQUFDZSxRQUFRLEVBQUUsNkJBQThCLENBQUM7SUFDcEVmLE9BQU8sQ0FBQ2UsUUFBUSxHQUFHLENBQUVGLE9BQU8sRUFBRUMsUUFBUSxDQUFFO0lBRXhDLEtBQUssQ0FBRWQsT0FBUSxDQUFDO0VBQ2xCO0FBQ0Y7QUFFQU4sS0FBSyxDQUFDc0IsUUFBUSxDQUFFLGVBQWUsRUFBRXJCLGFBQWMsQ0FBQztBQUNoRCxlQUFlQSxhQUFhIn0=