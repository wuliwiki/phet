// Copyright 2018-2021, University of Colorado Boulder

/**
 * Tests for screen summary descriptions for balloons-and-static-electricity. These descriptions are invisible, but
 * available for screen reader users.
 *
 * @author Jesse Greenberg (PhET Interactive Simulations)
 */

import Tandem from '../../../../../tandem/js/Tandem.js';
import BASEConstants from '../../BASEConstants.js';
import BASEModel from '../../model/BASEModel.js';
import SweaterNode from '../SweaterNode.js';
QUnit.module('SweaterDescriberTests', {
  beforeEach: () => {
    window.baseModel.reset();
  }
});
QUnit.test('SweaterDescriber tests', assert => {
  const model = new BASEModel(768, 504, Tandem.ROOT_TEST.createTandem('model'));
  const sweaterNode = new SweaterNode(model, Tandem.ROOT_TEST.createTandem('sweaterNode'));

  // on load
  let actualDescription = sweaterNode.descriptionContent;
  let expectedDescription = 'At left edge of Play Area. Has zero net charge, no more positive charges than negative charges.';
  assert.equal(actualDescription, expectedDescription);

  // all charges shown, several positive charges
  model.sweater.chargeProperty.set(30);
  actualDescription = sweaterNode.descriptionContent;
  expectedDescription = 'At left edge of Play Area. Has positive net charge, several more positive charges than negative charges.';
  assert.equal(actualDescription, expectedDescription);

  // all charges shown, no more negative charges
  model.sweater.chargeProperty.set(BASEConstants.MAX_BALLOON_CHARGE);
  actualDescription = sweaterNode.descriptionContent;
  expectedDescription = 'At left edge of Play Area. Has positive net charge, no more negative charges, only positive charges.';
  assert.equal(actualDescription, expectedDescription);

  // no charges shown
  model.showChargesProperty.set('none');
  actualDescription = sweaterNode.descriptionContent;
  expectedDescription = 'At left edge of Play Area.';
  assert.equal(actualDescription, expectedDescription);

  // neutral sweater, showing charge differences
  model.reset();
  model.showChargesProperty.set('diff');
  actualDescription = sweaterNode.descriptionContent;
  expectedDescription = 'At left edge of Play Area. Has zero net charge, showing no charges.';
  assert.equal(actualDescription, expectedDescription);

  // several more positive charges than negative charges, showing charge differences
  model.sweater.chargeProperty.set(30);
  actualDescription = sweaterNode.descriptionContent;
  expectedDescription = 'At left edge of Play Area. Has positive net charge, showing several positive charges.';
  assert.equal(actualDescription, expectedDescription);

  // all negative charges removed, showing charge differences
  model.sweater.chargeProperty.set(BASEConstants.MAX_BALLOON_CHARGE);
  actualDescription = sweaterNode.descriptionContent;
  expectedDescription = 'At left edge of Play Area. Has positive net charge, showing all positive charges.';
  assert.equal(actualDescription, expectedDescription);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJUYW5kZW0iLCJCQVNFQ29uc3RhbnRzIiwiQkFTRU1vZGVsIiwiU3dlYXRlck5vZGUiLCJRVW5pdCIsIm1vZHVsZSIsImJlZm9yZUVhY2giLCJ3aW5kb3ciLCJiYXNlTW9kZWwiLCJyZXNldCIsInRlc3QiLCJhc3NlcnQiLCJtb2RlbCIsIlJPT1RfVEVTVCIsImNyZWF0ZVRhbmRlbSIsInN3ZWF0ZXJOb2RlIiwiYWN0dWFsRGVzY3JpcHRpb24iLCJkZXNjcmlwdGlvbkNvbnRlbnQiLCJleHBlY3RlZERlc2NyaXB0aW9uIiwiZXF1YWwiLCJzd2VhdGVyIiwiY2hhcmdlUHJvcGVydHkiLCJzZXQiLCJNQVhfQkFMTE9PTl9DSEFSR0UiLCJzaG93Q2hhcmdlc1Byb3BlcnR5Il0sInNvdXJjZXMiOlsiU3dlYXRlckRlc2NyaWJlclRlc3RzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE4LTIwMjEsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIFRlc3RzIGZvciBzY3JlZW4gc3VtbWFyeSBkZXNjcmlwdGlvbnMgZm9yIGJhbGxvb25zLWFuZC1zdGF0aWMtZWxlY3RyaWNpdHkuIFRoZXNlIGRlc2NyaXB0aW9ucyBhcmUgaW52aXNpYmxlLCBidXRcclxuICogYXZhaWxhYmxlIGZvciBzY3JlZW4gcmVhZGVyIHVzZXJzLlxyXG4gKlxyXG4gKiBAYXV0aG9yIEplc3NlIEdyZWVuYmVyZyAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcclxuICovXHJcblxyXG5pbXBvcnQgVGFuZGVtIGZyb20gJy4uLy4uLy4uLy4uLy4uL3RhbmRlbS9qcy9UYW5kZW0uanMnO1xyXG5pbXBvcnQgQkFTRUNvbnN0YW50cyBmcm9tICcuLi8uLi9CQVNFQ29uc3RhbnRzLmpzJztcclxuaW1wb3J0IEJBU0VNb2RlbCBmcm9tICcuLi8uLi9tb2RlbC9CQVNFTW9kZWwuanMnO1xyXG5pbXBvcnQgU3dlYXRlck5vZGUgZnJvbSAnLi4vU3dlYXRlck5vZGUuanMnO1xyXG5cclxuUVVuaXQubW9kdWxlKCAnU3dlYXRlckRlc2NyaWJlclRlc3RzJywge1xyXG4gIGJlZm9yZUVhY2g6ICgpID0+IHtcclxuICAgIHdpbmRvdy5iYXNlTW9kZWwucmVzZXQoKTtcclxuICB9XHJcbn0gKTtcclxuXHJcblFVbml0LnRlc3QoICdTd2VhdGVyRGVzY3JpYmVyIHRlc3RzJywgYXNzZXJ0ID0+IHtcclxuXHJcbiAgY29uc3QgbW9kZWwgPSBuZXcgQkFTRU1vZGVsKCA3NjgsIDUwNCwgVGFuZGVtLlJPT1RfVEVTVC5jcmVhdGVUYW5kZW0oICdtb2RlbCcgKSApO1xyXG4gIGNvbnN0IHN3ZWF0ZXJOb2RlID0gbmV3IFN3ZWF0ZXJOb2RlKCBtb2RlbCwgVGFuZGVtLlJPT1RfVEVTVC5jcmVhdGVUYW5kZW0oICdzd2VhdGVyTm9kZScgKSApO1xyXG5cclxuICAvLyBvbiBsb2FkXHJcbiAgbGV0IGFjdHVhbERlc2NyaXB0aW9uID0gc3dlYXRlck5vZGUuZGVzY3JpcHRpb25Db250ZW50O1xyXG4gIGxldCBleHBlY3RlZERlc2NyaXB0aW9uID0gJ0F0IGxlZnQgZWRnZSBvZiBQbGF5IEFyZWEuIEhhcyB6ZXJvIG5ldCBjaGFyZ2UsIG5vIG1vcmUgcG9zaXRpdmUgY2hhcmdlcyB0aGFuIG5lZ2F0aXZlIGNoYXJnZXMuJztcclxuICBhc3NlcnQuZXF1YWwoIGFjdHVhbERlc2NyaXB0aW9uLCBleHBlY3RlZERlc2NyaXB0aW9uICk7XHJcblxyXG4gIC8vIGFsbCBjaGFyZ2VzIHNob3duLCBzZXZlcmFsIHBvc2l0aXZlIGNoYXJnZXNcclxuICBtb2RlbC5zd2VhdGVyLmNoYXJnZVByb3BlcnR5LnNldCggMzAgKTtcclxuICBhY3R1YWxEZXNjcmlwdGlvbiA9IHN3ZWF0ZXJOb2RlLmRlc2NyaXB0aW9uQ29udGVudDtcclxuICBleHBlY3RlZERlc2NyaXB0aW9uID0gJ0F0IGxlZnQgZWRnZSBvZiBQbGF5IEFyZWEuIEhhcyBwb3NpdGl2ZSBuZXQgY2hhcmdlLCBzZXZlcmFsIG1vcmUgcG9zaXRpdmUgY2hhcmdlcyB0aGFuIG5lZ2F0aXZlIGNoYXJnZXMuJztcclxuICBhc3NlcnQuZXF1YWwoIGFjdHVhbERlc2NyaXB0aW9uLCBleHBlY3RlZERlc2NyaXB0aW9uICk7XHJcblxyXG4gIC8vIGFsbCBjaGFyZ2VzIHNob3duLCBubyBtb3JlIG5lZ2F0aXZlIGNoYXJnZXNcclxuICBtb2RlbC5zd2VhdGVyLmNoYXJnZVByb3BlcnR5LnNldCggQkFTRUNvbnN0YW50cy5NQVhfQkFMTE9PTl9DSEFSR0UgKTtcclxuICBhY3R1YWxEZXNjcmlwdGlvbiA9IHN3ZWF0ZXJOb2RlLmRlc2NyaXB0aW9uQ29udGVudDtcclxuICBleHBlY3RlZERlc2NyaXB0aW9uID0gJ0F0IGxlZnQgZWRnZSBvZiBQbGF5IEFyZWEuIEhhcyBwb3NpdGl2ZSBuZXQgY2hhcmdlLCBubyBtb3JlIG5lZ2F0aXZlIGNoYXJnZXMsIG9ubHkgcG9zaXRpdmUgY2hhcmdlcy4nO1xyXG4gIGFzc2VydC5lcXVhbCggYWN0dWFsRGVzY3JpcHRpb24sIGV4cGVjdGVkRGVzY3JpcHRpb24gKTtcclxuXHJcbiAgLy8gbm8gY2hhcmdlcyBzaG93blxyXG4gIG1vZGVsLnNob3dDaGFyZ2VzUHJvcGVydHkuc2V0KCAnbm9uZScgKTtcclxuICBhY3R1YWxEZXNjcmlwdGlvbiA9IHN3ZWF0ZXJOb2RlLmRlc2NyaXB0aW9uQ29udGVudDtcclxuICBleHBlY3RlZERlc2NyaXB0aW9uID0gJ0F0IGxlZnQgZWRnZSBvZiBQbGF5IEFyZWEuJztcclxuICBhc3NlcnQuZXF1YWwoIGFjdHVhbERlc2NyaXB0aW9uLCBleHBlY3RlZERlc2NyaXB0aW9uICk7XHJcblxyXG4gIC8vIG5ldXRyYWwgc3dlYXRlciwgc2hvd2luZyBjaGFyZ2UgZGlmZmVyZW5jZXNcclxuICBtb2RlbC5yZXNldCgpO1xyXG4gIG1vZGVsLnNob3dDaGFyZ2VzUHJvcGVydHkuc2V0KCAnZGlmZicgKTtcclxuICBhY3R1YWxEZXNjcmlwdGlvbiA9IHN3ZWF0ZXJOb2RlLmRlc2NyaXB0aW9uQ29udGVudDtcclxuICBleHBlY3RlZERlc2NyaXB0aW9uID0gJ0F0IGxlZnQgZWRnZSBvZiBQbGF5IEFyZWEuIEhhcyB6ZXJvIG5ldCBjaGFyZ2UsIHNob3dpbmcgbm8gY2hhcmdlcy4nO1xyXG4gIGFzc2VydC5lcXVhbCggYWN0dWFsRGVzY3JpcHRpb24sIGV4cGVjdGVkRGVzY3JpcHRpb24gKTtcclxuXHJcbiAgLy8gc2V2ZXJhbCBtb3JlIHBvc2l0aXZlIGNoYXJnZXMgdGhhbiBuZWdhdGl2ZSBjaGFyZ2VzLCBzaG93aW5nIGNoYXJnZSBkaWZmZXJlbmNlc1xyXG4gIG1vZGVsLnN3ZWF0ZXIuY2hhcmdlUHJvcGVydHkuc2V0KCAzMCApO1xyXG4gIGFjdHVhbERlc2NyaXB0aW9uID0gc3dlYXRlck5vZGUuZGVzY3JpcHRpb25Db250ZW50O1xyXG4gIGV4cGVjdGVkRGVzY3JpcHRpb24gPSAnQXQgbGVmdCBlZGdlIG9mIFBsYXkgQXJlYS4gSGFzIHBvc2l0aXZlIG5ldCBjaGFyZ2UsIHNob3dpbmcgc2V2ZXJhbCBwb3NpdGl2ZSBjaGFyZ2VzLic7XHJcbiAgYXNzZXJ0LmVxdWFsKCBhY3R1YWxEZXNjcmlwdGlvbiwgZXhwZWN0ZWREZXNjcmlwdGlvbiApO1xyXG5cclxuICAvLyBhbGwgbmVnYXRpdmUgY2hhcmdlcyByZW1vdmVkLCBzaG93aW5nIGNoYXJnZSBkaWZmZXJlbmNlc1xyXG4gIG1vZGVsLnN3ZWF0ZXIuY2hhcmdlUHJvcGVydHkuc2V0KCBCQVNFQ29uc3RhbnRzLk1BWF9CQUxMT09OX0NIQVJHRSApO1xyXG4gIGFjdHVhbERlc2NyaXB0aW9uID0gc3dlYXRlck5vZGUuZGVzY3JpcHRpb25Db250ZW50O1xyXG4gIGV4cGVjdGVkRGVzY3JpcHRpb24gPSAnQXQgbGVmdCBlZGdlIG9mIFBsYXkgQXJlYS4gSGFzIHBvc2l0aXZlIG5ldCBjaGFyZ2UsIHNob3dpbmcgYWxsIHBvc2l0aXZlIGNoYXJnZXMuJztcclxuICBhc3NlcnQuZXF1YWwoIGFjdHVhbERlc2Ny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