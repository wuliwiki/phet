// Copyright 2018-2021, University of Colorado Boulder

/**
 * Unit tests for balloons-and-static-electricity.
 *
 * @author Jesse Greenberg (PhET Interactive Simulations)
 */

import qunitStart from '../../chipper/js/sim-tests/qunitStart.js';
import '../../scenery/js/util/Trail.js'; // Why is Trail not added to scenery namespace for these tests??
import './balloons-and-static-electricity/view/BASESummaryNodeTests.js';
import './balloons-and-static-electricity/view/describers/BalloonDescriberTests.js';
import './balloons-and-static-electricity/view/describers/SweaterDescriberTests.js';
import './balloons-and-static-electricity/view/describers/WallDescriberTests.js';
const iframe = document.createElement('iframe');
iframe.id = 'testFrame';

/**
 * @param {DOMEvent} event
 * @param {function} resolve - resolve function for the Promise this is passed to
 */
const loadListener = (event, resolve) => {
  if (!event) {
    return;
  }
  const data = JSON.parse(event.data);
  if (data.type === 'load') {
    window.removeEventListener('message', loadListener);
    window.baseModel = iframe.contentWindow.phet.joist.sim.screens[0].model;
    window.baseView = iframe.contentWindow.phet.joist.sim.screens[0].view;

    // no animation or input for tests, all Properties are controlled directly through access to the model
    iframe.contentWindow.phet.joist.sim.activeProperty.set(false);
    resolve();
  }
};
iframe.src = '../balloons-and-static-electricity/balloons-and-static-electricity_en.html?brand=phet&ea&postMessageOnLoad';
qunitStart();

// load the sim to test on the begin event, returning a Promise so that we wait to begin any tests until we
// receive the 'load' message from the sim, indicating that model and view are fully constructed and usable in tests
QUnit.begin(() => {
  return new Promise((resolve, reject) => {
    window.addEventListener('message', event => {
      loadListener(event, resolve);
    });
    document.body.appendChild(iframe); // triggers loading of the sim
  });
});

QUnit.done(() => {
  delete window.baseModel;
  delete window.baseView;
  document.body.removeChild(document.getElementById(iframe.id));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJxdW5pdFN0YXJ0IiwiaWZyYW1lIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiaWQiLCJsb2FkTGlzdGVuZXIiLCJldmVudCIsInJlc29sdmUiLCJkYXRhIiwiSlNPTiIsInBhcnNlIiwidHlwZSIsIndpbmRvdyIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJiYXNlTW9kZWwiLCJjb250ZW50V2luZG93IiwicGhldCIsImpvaXN0Iiwic2ltIiwic2NyZWVucyIsIm1vZGVsIiwiYmFzZVZpZXciLCJ2aWV3IiwiYWN0aXZlUHJvcGVydHkiLCJzZXQiLCJzcmMiLCJRVW5pdCIsImJlZ2luIiwiUHJvbWlzZSIsInJlamVjdCIsImFkZEV2ZW50TGlzdGVuZXIiLCJib2R5IiwiYXBwZW5kQ2hpbGQiLCJkb25lIiwicmVtb3ZlQ2hpbGQiLCJnZXRFbGVtZW50QnlJZCJdLCJzb3VyY2VzIjpbImJhbGxvb25zLWFuZC1zdGF0aWMtZWxlY3RyaWNpdHktdGVzdHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTgtMjAyMSwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogVW5pdCB0ZXN0cyBmb3IgYmFsbG9vbnMtYW5kLXN0YXRpYy1lbGVjdHJpY2l0eS5cclxuICpcclxuICogQGF1dGhvciBKZXNzZSBHcmVlbmJlcmcgKFBoRVQgSW50ZXJhY3RpdmUgU2ltdWxhdGlvbnMpXHJcbiAqL1xyXG5cclxuaW1wb3J0IHF1bml0U3RhcnQgZnJvbSAnLi4vLi4vY2hpcHBlci9qcy9zaW0tdGVzdHMvcXVuaXRTdGFydC5qcyc7XHJcbmltcG9ydCAnLi4vLi4vc2NlbmVyeS9qcy91dGlsL1RyYWlsLmpzJzsgLy8gV2h5IGlzIFRyYWlsIG5vdCBhZGRlZCB0byBzY2VuZXJ5IG5hbWVzcGFjZSBmb3IgdGhlc2UgdGVzdHM/P1xyXG5pbXBvcnQgJy4vYmFsbG9vbnMtYW5kLXN0YXRpYy1lbGVjdHJpY2l0eS92aWV3L0JBU0VTdW1tYXJ5Tm9kZVRlc3RzLmpzJztcclxuaW1wb3J0ICcuL2JhbGxvb25zLWFuZC1zdGF0aWMtZWxlY3RyaWNpdHkvdmlldy9kZXNjcmliZXJzL0JhbGxvb25EZXNjcmliZXJUZXN0cy5qcyc7XHJcbmltcG9ydCAnLi9iYWxsb29ucy1hbmQtc3RhdGljLWVsZWN0cmljaXR5L3ZpZXcvZGVzY3JpYmVycy9Td2VhdGVyRGVzY3JpYmVyVGVzdHMuanMnO1xyXG5pbXBvcnQgJy4vYmFsbG9vbnMtYW5kLXN0YXRpYy1lbGVjdHJpY2l0eS92aWV3L2Rlc2NyaWJlcnMvV2FsbERlc2NyaWJlclRlc3RzLmpzJztcclxuXHJcbmNvbnN0IGlmcmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoICdpZnJhbWUnICk7XHJcbmlmcmFtZS5pZCA9ICd0ZXN0RnJhbWUnO1xyXG5cclxuLyoqXHJcbiAqIEBwYXJhbSB7RE9NRXZlbnR9IGV2ZW50XHJcbiAqIEBwYXJhbSB7ZnVuY3Rpb259IHJlc29sdmUgLSByZXNvbHZlIGZ1bmN0aW9uIGZvciB0aGUgUHJvbWlzZSB0aGlzIGlzIHBhc3NlZCB0b1xyXG4gKi9cclxuY29uc3QgbG9hZExpc3RlbmVyID0gKCBldmVudCwgcmVzb2x2ZSApID0+IHtcclxuICBpZiAoICFldmVudCApIHtcclxuICAgIHJldHVybjtcclxuICB9XHJcbiAgY29uc3QgZGF0YSA9IEpTT04ucGFyc2UoIGV2ZW50LmRhdGEgKTtcclxuXHJcbiAgaWYgKCBkYXRhLnR5cGUgPT09ICdsb2FkJyApIHtcclxuICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCAnbWVzc2FnZScsIGxvYWRMaXN0ZW5lciApO1xyXG4gICAgd2luZG93LmJhc2VNb2RlbCA9IGlmcmFtZS5jb250ZW50V2luZG93LnBoZXQuam9pc3Quc2ltLnNjcmVlbnNbIDAgXS5tb2RlbDtcclxuICAgIHdpbmRvdy5iYXNlVmlldyA9IGlmcmFtZS5jb250ZW50V2luZG93LnBoZXQuam9pc3Quc2ltLnNjcmVlbnNbIDAgXS52aWV3O1xyXG5cclxuICAgIC8vIG5vIGFuaW1hdGlvbiBvciBpbnB1dCBmb3IgdGVzdHMsIGFsbCBQcm9wZXJ0aWVzIGFyZSBjb250cm9sbGVkIGRpcmVjdGx5IHRocm91Z2ggYWNjZXNzIHRvIHRoZSBtb2RlbFxyXG4gICAgaWZyYW1lLmNvbnRlbnRXaW5kb3cucGhldC5qb2lzdC5zaW0uYWN0aXZlUHJvcGVydHkuc2V0KCBmYWxzZSApO1xyXG5cclxuICAgIHJlc29sdmUoKTtcclxuICB9XHJcbn07XHJcblxyXG5pZnJhbWUuc3JjID0gJy4uL2JhbGxvb25zLWFuZC1zdGF0aWMtZWxlY3RyaWNpdHkvYmFsbG9vbnMtYW5kLXN0YXRpYy1lbGVjdHJpY2l0eV9lbi5odG1sP2JyYW5kPXBoZXQmZWEmcG9zdE1lc3NhZ2VPbkxvYWQnO1xyXG5cclxucXVuaXRTdGFydCgpO1xyXG5cclxuLy8gbG9hZCB0aGUgc2ltIHRvIHRlc3Qgb24gdGhlIGJlZ2luIGV2ZW50LCByZXR1cm5pbmcgYSBQcm9taXNlIHNvIHRoYXQgd2Ugd2FpdCB0byBiZWdpbiBhbnkgdGVzdHMgdW50aWwgd2VcclxuLy8gcmVjZWl2ZSB0aGUgJ2xvYWQnIG1lc3NhZ2UgZnJvbSB0aGUgc2ltLCBpbmRpY2F0aW5nIHRoYXQgbW9kZWwgYW5kIHZpZXcgYXJlIGZ1bGx5IGNvbnN0cnVjdGVkIGFuZCB1c2FibGUgaW4gdGVzdHNcclxuUVVuaXQuYmVnaW4oICgpID0+IHtcclxuICByZXR1cm4gbmV3IFByb21pc2UoICggcmVzb2x2ZSwgcmVqZWN0ICkgPT4ge1xyXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoICdtZXNzYWdlJywgZXZlbnQgPT4ge1xyXG4gICAgICBsb2FkTGlzdGVuZXIoIGV2ZW50LCByZXNvbHZlICk7XHJcbiAgICB9ICk7XHJcblxyXG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCggaWZyYW1lICk7IC8vIHRyaWdnZXJzIGxvYWRpbmcgb2YgdGhlIHNpbVxyXG4gIH0gKTtcclxufSApO1xyXG5cclxuUVVuaXQuZG9uZSggKCkgPT4ge1xyXG4gIGRlbGV0ZSB3aW5kb3cuYmFzZU1vZGVsO1xyXG4gIGRlbGV0ZSB3aW5kb3cuYmFzZVZpZXc7XHJcblxyXG4gIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQoIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCBpZnJhbWUuaWQgKSApO1xyXG59ICk7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLFVBQVUsTUFBTSwwQ0FBMEM7QUFDakUsT0FBTyxnQ0FBZ0MsQ0FBQyxDQUFDO0FBQ3pDLE9BQU8sZ0VBQWdFO0FBQ3ZFLE9BQU8sNEVBQTRFO0FBQ25GLE9BQU8sNEVBQTRFO0FBQ25GLE9BQU8seUVBQXlFO0FBRWhGLE1BQU1DLE1BQU0sR0FBR0MsUUFBUSxDQUFDQyxhQUFhLENBQUUsUUFBUyxDQUFDO0FBQ2pERixNQUFNLENBQUNHLEVBQUUsR0FBRyxXQUFXOztBQUV2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU1DLFlBQVksR0FBR0EsQ0FBRUMsS0FBSyxFQUFFQyxPQUFPLEtBQU07RUFDekMsSUFBSyxDQUFDRCxLQUFLLEVBQUc7SUFDWjtFQUNGO0VBQ0EsTUFBTUUsSUFBSSxHQUFHQyxJQUFJLENBQUNDLEtBQUssQ0FBRUosS0FBSyxDQUFDRSxJQUFLLENBQUM7RUFFckMsSUFBS0EsSUFBSSxDQUFDRyxJQUFJLEtBQUssTUFBTSxFQUFHO0lBQzFCQyxNQUFNLENBQUNDLG1CQUFtQixDQUFFLFNBQVMsRUFBRVIsWUFBYSxDQUFDO0lBQ3JETyxNQUFNLENBQUNFLFNBQVMsR0FBR2IsTUFBTSxDQUFDYyxhQUFhLENBQUNDLElBQUksQ0FBQ0MsS0FBSyxDQUFDQyxHQUFHLENBQUNDLE9BQU8sQ0FBRSxDQUFDLENBQUUsQ0FBQ0MsS0FBSztJQUN6RVIsTUFBTSxDQUFDUyxRQUFRLEdBQUdwQixNQUFNLENBQUNjLGFBQWEsQ0FBQ0MsSUFBSSxDQUFDQyxLQUFLLENBQUNDLEdBQUcsQ0FBQ0MsT0FBTyxDQUFFLENBQUMsQ0FBRSxDQUFDRyxJQUFJOztJQUV2RTtJQUNBckIsTUFBTSxDQUFDYyxhQUFhLENBQUNDLElBQUksQ0FBQ0MsS0FBSyxDQUFDQyxHQUFHLENBQUNLLGNBQWMsQ0FBQ0MsR0FBRyxDQUFFLEtBQU0sQ0FBQztJQUUvRGpCLE9BQU8sQ0FBQyxDQUFDO0VBQ1g7QUFDRixDQUFDO0FBRUROLE1BQU0sQ0FBQ3dCLEdBQUcsR0FBRyw0R0FBNEc7QUFFekh6QixVQUFVLENBQUMsQ0FBQzs7QUFFWjtBQUNBO0FBQ0EwQixLQUFLLENBQUNDLEtBQUssQ0FBRSxNQUFNO0VBQ2pCLE9BQU8sSUFBSUMsT0FBTyxDQUFFLENBQUVyQixPQUFPLEVBQUVzQixNQUFNLEtBQU07SUFDekNqQixNQUFNLENBQUNrQixnQkFBZ0IsQ0FBRSxTQUFTLEVBQUV4QixLQUFLLElBQUk7TUFDM0NELFlBQVksQ0FBRUMsS0FBSyxFQUFFQyxPQUFRLENBQUM7SUFDaEMsQ0FBRSxDQUFDO0lBRUhMLFFBQVEsQ0FBQzZCLElBQUksQ0FBQ0MsV0FBVyxDQUFFL0IsTUFBTyxDQUFDLENBQUMsQ0FBQztFQUN2QyxDQUFFLENBQUM7QUFDTCxDQUFFLENBQUM7O0FBRUh5QixLQUFLLENBQUNPLElBQUksQ0FBRSxNQUFNO0VBQ2hCLE9BQU9yQixNQUFNLENBQUNFLFNBQVM7RUFDdkIsT0FBT0YsTUFBTSxDQUFDUyxRQUFRO0VBRXRCbkIsUUFBUSxDQUFDNkIsSUFBSSxDQUFDRyxXQUFXLENBQUVoQyxRQUFRLENBQUNpQyxjQUFjLENBQUVsQyxNQUFNLENBQUNHLEVBQUcsQ0FBRSxDQUFDO0FBQ25FLENBQUUsQ0FBQyJ9