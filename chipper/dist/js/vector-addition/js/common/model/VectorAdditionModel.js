// Copyright 2019-2023, University of Colorado Boulder

/**
 * Root class (to be subclassed) for the top-level model of every screen.
 *
 * @author Martin Veillette
 */

import EnumerationProperty from '../../../../axon/js/EnumerationProperty.js';
import Tandem from '../../../../tandem/js/Tandem.js';
import vectorAddition from '../../vectorAddition.js';
import ComponentVectorStyles from './ComponentVectorStyles.js';
export default class VectorAdditionModel {
  /**
   * @param {Tandem} tandem
   */
  constructor(tandem) {
    assert && assert(tandem instanceof Tandem, `invalid tandem: ${tandem}`);

    // @public the representation (style) used to display component vectors
    this.componentStyleProperty = new EnumerationProperty(ComponentVectorStyles.INVISIBLE);
  }

  /**
   * Resets the model.
   * @public
   */
  reset() {
    this.componentStyleProperty.reset();
  }

  /**
   * @public
   */
  dispose() {
    assert && assert(false, 'VectorAdditionModel is not intended to be disposed');
  }
}
vectorAddition.register('VectorAdditionModel', VectorAdditionModel);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJFbnVtZXJhdGlvblByb3BlcnR5IiwiVGFuZGVtIiwidmVjdG9yQWRkaXRpb24iLCJDb21wb25lbnRWZWN0b3JTdHlsZXMiLCJWZWN0b3JBZGRpdGlvbk1vZGVsIiwiY29uc3RydWN0b3IiLCJ0YW5kZW0iLCJhc3NlcnQiLCJjb21wb25lbnRTdHlsZVByb3BlcnR5IiwiSU5WSVNJQkxFIiwicmVzZXQiLCJkaXNwb3NlIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJWZWN0b3JBZGRpdGlvbk1vZGVsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE5LTIwMjMsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIFJvb3QgY2xhc3MgKHRvIGJlIHN1YmNsYXNzZWQpIGZvciB0aGUgdG9wLWxldmVsIG1vZGVsIG9mIGV2ZXJ5IHNjcmVlbi5cclxuICpcclxuICogQGF1dGhvciBNYXJ0aW4gVmVpbGxldHRlXHJcbiAqL1xyXG5cclxuaW1wb3J0IEVudW1lcmF0aW9uUHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vLi4vYXhvbi9qcy9FbnVtZXJhdGlvblByb3BlcnR5LmpzJztcclxuaW1wb3J0IFRhbmRlbSBmcm9tICcuLi8uLi8uLi8uLi90YW5kZW0vanMvVGFuZGVtLmpzJztcclxuaW1wb3J0IHZlY3RvckFkZGl0aW9uIGZyb20gJy4uLy4uL3ZlY3RvckFkZGl0aW9uLmpzJztcclxuaW1wb3J0IENvbXBvbmVudFZlY3RvclN0eWxlcyBmcm9tICcuL0NvbXBvbmVudFZlY3RvclN0eWxlcy5qcyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBWZWN0b3JBZGRpdGlvbk1vZGVsIHtcclxuXHJcbiAgLyoqXHJcbiAgICogQHBhcmFtIHtUYW5kZW19IHRhbmRlbVxyXG4gICAqL1xyXG4gIGNvbnN0cnVjdG9yKCB0YW5kZW0gKSB7XHJcblxyXG4gICAgYXNzZXJ0ICYmIGFzc2VydCggdGFuZGVtIGluc3RhbmNlb2YgVGFuZGVtLCBgaW52YWxpZCB0YW5kZW06ICR7dGFuZGVtfWAgKTtcclxuXHJcbiAgICAvLyBAcHVibGljIHRoZSByZXByZXNlbnRhdGlvbiAoc3R5bGUpIHVzZWQgdG8gZGlzcGxheSBjb21wb25lbnQgdmVjdG9yc1xyXG4gICAgdGhpcy5jb21wb25lbnRTdHlsZVByb3BlcnR5ID0gbmV3IEVudW1lcmF0aW9uUHJvcGVydHkoIENvbXBvbmVudFZlY3RvclN0eWxlcy5JTlZJU0lCTEUgKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFJlc2V0cyB0aGUgbW9kZWwuXHJcbiAgICogQHB1YmxpY1xyXG4gICAqL1xyXG4gIHJlc2V0KCkge1xyXG4gICAgdGhpcy5jb21wb25lbnRTdHlsZVByb3BlcnR5LnJlc2V0KCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBAcHVibGljXHJcbiAgICovXHJcbiAgZGlzcG9zZSgpIHtcclxuICAgIGFzc2VydCAmJiBhc3NlcnQoIGZhbHNlLCAnVmVjdG9yQWRkaXRpb25Nb2RlbCBpcyBub3QgaW50ZW5kZWQgdG8gYmUgZGlzcG9zZWQnICk7XHJcbiAgfVxyXG59XHJcblxyXG52ZWN0b3JBZGRpdGlvbi5yZWdpc3RlciggJ1ZlY3RvckFkZGl0aW9uTW9kZWwnLCBWZWN0b3JBZGRpdGlvbk1vZGVsICk7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLG1CQUFtQixNQUFNLDRDQUE0QztBQUM1RSxPQUFPQyxNQUFNLE1BQU0saUNBQWlDO0FBQ3BELE9BQU9DLGNBQWMsTUFBTSx5QkFBeUI7QUFDcEQsT0FBT0MscUJBQXFCLE1BQU0sNEJBQTRCO0FBRTlELGVBQWUsTUFBTUMsbUJBQW1CLENBQUM7RUFFdkM7QUFDRjtBQUNBO0VBQ0VDLFdBQVdBLENBQUVDLE1BQU0sRUFBRztJQUVwQkMsTUFBTSxJQUFJQSxNQUFNLENBQUVELE1BQU0sWUFBWUwsTUFBTSxFQUFHLG1CQUFrQkssTUFBTyxFQUFFLENBQUM7O0lBRXpFO0lBQ0EsSUFBSSxDQUFDRSxzQkFBc0IsR0FBRyxJQUFJUixtQkFBbUIsQ0FBRUcscUJBQXFCLENBQUNNLFNBQVUsQ0FBQztFQUMxRjs7RUFFQTtBQUNGO0FBQ0E7QUFDQTtFQUNFQyxLQUFLQSxDQUFBLEVBQUc7SUFDTixJQUFJLENBQUNGLHNCQUFzQixDQUFDRSxLQUFLLENBQUMsQ0FBQztFQUNyQzs7RUFFQTtBQUNGO0FBQ0E7RUFDRUMsT0FBT0EsQ0FBQSxFQUFHO0lBQ1JKLE1BQU0sSUFBSUEsTUFBTSxDQUFFLEtBQUssRUFBRSxvREFBcUQsQ0FBQztFQUNqRjtBQUNGO0FBRUFMLGNBQWMsQ0FBQ1UsUUFBUSxDQUFFLHFCQUFxQixFQUFFUixtQkFBb0IsQ0FBQyJ9