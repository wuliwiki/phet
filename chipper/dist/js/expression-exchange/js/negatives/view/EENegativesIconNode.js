// Copyright 2016-2022, University of Colorado Boulder

/**
 * icon node for 'Negatives' screen
 *
 * @author John Blanco
 */

import Screen from '../../../../joist/js/Screen.js';
import MathSymbolFont from '../../../../scenery-phet/js/MathSymbolFont.js';
import MathSymbols from '../../../../scenery-phet/js/MathSymbols.js';
import PhetFont from '../../../../scenery-phet/js/PhetFont.js';
import { HBox, Rectangle, RichText, Text } from '../../../../scenery/js/imports.js';
import EESharedConstants from '../../common/EESharedConstants.js';
import expressionExchange from '../../expressionExchange.js';

// constants
const ICON_SIZE = Screen.MINIMUM_HOME_SCREEN_ICON_SIZE;
const BACKGROUND_COLOR = EESharedConstants.NON_GAME_SCREENS_BACKGROUND_COLOR;
const FONT_SIZE = 100;
const MATH_FONT = new MathSymbolFont(FONT_SIZE);
const TEXT_FONT = new PhetFont(FONT_SIZE);
class EENegativesIconNode extends Rectangle {
  /**
   */
  constructor() {
    // create the background
    super(0, 0, ICON_SIZE.width, ICON_SIZE.height, {
      fill: BACKGROUND_COLOR
    });

    // create and add the equation node
    const equationNode = new HBox({
      children: [new Text('3', {
        font: TEXT_FONT
      }), new RichText('x<sup>2</sup>', {
        font: MATH_FONT,
        supScale: 0.5
      }), new Text(` ${MathSymbols.MINUS} `, {
        font: TEXT_FONT
      }), new RichText('x<sup>2</sup>', {
        font: MATH_FONT,
        supScale: 0.5
      })],
      align: 'bottom'
    });
    equationNode.centerX = ICON_SIZE.width / 2;
    equationNode.centerY = ICON_SIZE.height * 0.45;
    this.addChild(equationNode);
  }
}
expressionExchange.register('EENegativesIconNode', EENegativesIconNode);
export default EENegativesIconNode;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTY3JlZW4iLCJNYXRoU3ltYm9sRm9udCIsIk1hdGhTeW1ib2xzIiwiUGhldEZvbnQiLCJIQm94IiwiUmVjdGFuZ2xlIiwiUmljaFRleHQiLCJUZXh0IiwiRUVTaGFyZWRDb25zdGFudHMiLCJleHByZXNzaW9uRXhjaGFuZ2UiLCJJQ09OX1NJWkUiLCJNSU5JTVVNX0hPTUVfU0NSRUVOX0lDT05fU0laRSIsIkJBQ0tHUk9VTkRfQ09MT1IiLCJOT05fR0FNRV9TQ1JFRU5TX0JBQ0tHUk9VTkRfQ09MT1IiLCJGT05UX1NJWkUiLCJNQVRIX0ZPTlQiLCJURVhUX0ZPTlQiLCJFRU5lZ2F0aXZlc0ljb25Ob2RlIiwiY29uc3RydWN0b3IiLCJ3aWR0aCIsImhlaWdodCIsImZpbGwiLCJlcXVhdGlvbk5vZGUiLCJjaGlsZHJlbiIsImZvbnQiLCJzdXBTY2FsZSIsIk1JTlVTIiwiYWxpZ24iLCJjZW50ZXJYIiwiY2VudGVyWSIsImFkZENoaWxkIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJFRU5lZ2F0aXZlc0ljb25Ob2RlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE2LTIwMjIsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIGljb24gbm9kZSBmb3IgJ05lZ2F0aXZlcycgc2NyZWVuXHJcbiAqXHJcbiAqIEBhdXRob3IgSm9obiBCbGFuY29cclxuICovXHJcblxyXG5pbXBvcnQgU2NyZWVuIGZyb20gJy4uLy4uLy4uLy4uL2pvaXN0L2pzL1NjcmVlbi5qcyc7XHJcbmltcG9ydCBNYXRoU3ltYm9sRm9udCBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5LXBoZXQvanMvTWF0aFN5bWJvbEZvbnQuanMnO1xyXG5pbXBvcnQgTWF0aFN5bWJvbHMgZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS1waGV0L2pzL01hdGhTeW1ib2xzLmpzJztcclxuaW1wb3J0IFBoZXRGb250IGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnktcGhldC9qcy9QaGV0Rm9udC5qcyc7XHJcbmltcG9ydCB7IEhCb3gsIFJlY3RhbmdsZSwgUmljaFRleHQsIFRleHQgfSBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgRUVTaGFyZWRDb25zdGFudHMgZnJvbSAnLi4vLi4vY29tbW9uL0VFU2hhcmVkQ29uc3RhbnRzLmpzJztcclxuaW1wb3J0IGV4cHJlc3Npb25FeGNoYW5nZSBmcm9tICcuLi8uLi9leHByZXNzaW9uRXhjaGFuZ2UuanMnO1xyXG5cclxuLy8gY29uc3RhbnRzXHJcbmNvbnN0IElDT05fU0laRSA9IFNjcmVlbi5NSU5JTVVNX0hPTUVfU0NSRUVOX0lDT05fU0laRTtcclxuY29uc3QgQkFDS0dST1VORF9DT0xPUiA9IEVFU2hhcmVkQ29uc3RhbnRzLk5PTl9HQU1FX1NDUkVFTlNfQkFDS0dST1VORF9DT0xPUjtcclxuY29uc3QgRk9OVF9TSVpFID0gMTAwO1xyXG5jb25zdCBNQVRIX0ZPTlQgPSBuZXcgTWF0aFN5bWJvbEZvbnQoIEZPTlRfU0laRSApO1xyXG5jb25zdCBURVhUX0ZPTlQgPSBuZXcgUGhldEZvbnQoIEZPTlRfU0laRSApO1xyXG5cclxuY2xhc3MgRUVOZWdhdGl2ZXNJY29uTm9kZSBleHRlbmRzIFJlY3RhbmdsZSB7XHJcblxyXG4gIC8qKlxyXG4gICAqL1xyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG5cclxuICAgIC8vIGNyZWF0ZSB0aGUgYmFja2dyb3VuZFxyXG4gICAgc3VwZXIoIDAsIDAsIElDT05fU0laRS53aWR0aCwgSUNPTl9TSVpFLmhlaWdodCwgeyBmaWxsOiBCQUNLR1JPVU5EX0NPTE9SIH0gKTtcclxuXHJcbiAgICAvLyBjcmVhdGUgYW5kIGFkZCB0aGUgZXF1YXRpb24gbm9kZVxyXG4gICAgY29uc3QgZXF1YXRpb25Ob2RlID0gbmV3IEhCb3goIHtcclxuICAgICAgY2hpbGRyZW46IFtcclxuICAgICAgICBuZXcgVGV4dCggJzMnLCB7IGZvbnQ6IFRFWFRfRk9OVCB9ICksXHJcbiAgICAgICAgbmV3IFJpY2hUZXh0KCAneDxzdXA+Mjwvc3VwPicsIHsgZm9udDogTUFUSF9GT05ULCBzdXBTY2FsZTogMC41IH0gKSxcclxuICAgICAgICBuZXcgVGV4dCggYCAke01hdGhTeW1ib2xzLk1JTlVTfSBgLCB7IGZvbnQ6IFRFWFRfRk9OVCB9ICksXHJcbiAgICAgICAgbmV3IFJpY2hUZXh0KCAneDxzdXA+Mjwvc3VwPicsIHsgZm9udDogTUFUSF9GT05ULCBzdXBTY2FsZTogMC41IH0gKVxyXG4gICAgICBdLFxyXG4gICAgICBhbGlnbjogJ2JvdHRvbSdcclxuICAgIH0gKTtcclxuICAgIGVxdWF0aW9uTm9kZS5jZW50ZXJYID0gSUNPTl9TSVpFLndpZHRoIC8gMjtcclxuICAgIGVxdWF0aW9uTm9kZS5jZW50ZXJZID0gSUNPTl9TSVpFLmhlaWdodCAqIDAuNDU7XHJcbiAgICB0aGlzLmFkZENoaWxkKCBlcXVhdGlvbk5vZGUgKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cHJlc3Npb25FeGNoYW5nZS5yZWdpc3RlciggJ0VFTmVnYXRpdmVzSWNvbk5vZGUnLCBFRU5lZ2F0aXZlc0ljb25Ob2RlICk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBFRU5lZ2F0aXZlc0ljb25Ob2RlOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxNQUFNLE1BQU0sZ0NBQWdDO0FBQ25ELE9BQU9DLGNBQWMsTUFBTSwrQ0FBK0M7QUFDMUUsT0FBT0MsV0FBVyxNQUFNLDRDQUE0QztBQUNwRSxPQUFPQyxRQUFRLE1BQU0seUNBQXlDO0FBQzlELFNBQVNDLElBQUksRUFBRUMsU0FBUyxFQUFFQyxRQUFRLEVBQUVDLElBQUksUUFBUSxtQ0FBbUM7QUFDbkYsT0FBT0MsaUJBQWlCLE1BQU0sbUNBQW1DO0FBQ2pFLE9BQU9DLGtCQUFrQixNQUFNLDZCQUE2Qjs7QUFFNUQ7QUFDQSxNQUFNQyxTQUFTLEdBQUdWLE1BQU0sQ0FBQ1csNkJBQTZCO0FBQ3RELE1BQU1DLGdCQUFnQixHQUFHSixpQkFBaUIsQ0FBQ0ssaUNBQWlDO0FBQzVFLE1BQU1DLFNBQVMsR0FBRyxHQUFHO0FBQ3JCLE1BQU1DLFNBQVMsR0FBRyxJQUFJZCxjQUFjLENBQUVhLFNBQVUsQ0FBQztBQUNqRCxNQUFNRSxTQUFTLEdBQUcsSUFBSWIsUUFBUSxDQUFFVyxTQUFVLENBQUM7QUFFM0MsTUFBTUcsbUJBQW1CLFNBQVNaLFNBQVMsQ0FBQztFQUUxQztBQUNGO0VBQ0VhLFdBQVdBLENBQUEsRUFBRztJQUVaO0lBQ0EsS0FBSyxDQUFFLENBQUMsRUFBRSxDQUFDLEVBQUVSLFNBQVMsQ0FBQ1MsS0FBSyxFQUFFVCxTQUFTLENBQUNVLE1BQU0sRUFBRTtNQUFFQyxJQUFJLEVBQUVUO0lBQWlCLENBQUUsQ0FBQzs7SUFFNUU7SUFDQSxNQUFNVSxZQUFZLEdBQUcsSUFBSWxCLElBQUksQ0FBRTtNQUM3Qm1CLFFBQVEsRUFBRSxDQUNSLElBQUloQixJQUFJLENBQUUsR0FBRyxFQUFFO1FBQUVpQixJQUFJLEVBQUVSO01BQVUsQ0FBRSxDQUFDLEVBQ3BDLElBQUlWLFFBQVEsQ0FBRSxlQUFlLEVBQUU7UUFBRWtCLElBQUksRUFBRVQsU0FBUztRQUFFVSxRQUFRLEVBQUU7TUFBSSxDQUFFLENBQUMsRUFDbkUsSUFBSWxCLElBQUksQ0FBRyxJQUFHTCxXQUFXLENBQUN3QixLQUFNLEdBQUUsRUFBRTtRQUFFRixJQUFJLEVBQUVSO01BQVUsQ0FBRSxDQUFDLEVBQ3pELElBQUlWLFFBQVEsQ0FBRSxlQUFlLEVBQUU7UUFBRWtCLElBQUksRUFBRVQsU0FBUztRQUFFVSxRQUFRLEVBQUU7TUFBSSxDQUFFLENBQUMsQ0FDcEU7TUFDREUsS0FBSyxFQUFFO0lBQ1QsQ0FBRSxDQUFDO0lBQ0hMLFlBQVksQ0FBQ00sT0FBTyxHQUFHbEIsU0FBUyxDQUFDUyxLQUFLLEdBQUcsQ0FBQztJQUMxQ0csWUFBWSxDQUFDTyxPQUFPLEdBQUduQixTQUFTLENBQUNVLE1BQU0sR0FBRyxJQUFJO0lBQzlDLElBQUksQ0FBQ1UsUUFBUSxDQUFFUixZQUFhLENBQUM7RUFDL0I7QUFDRjtBQUVBYixrQkFBa0IsQ0FBQ3NCLFFBQVEsQ0FBRSxxQkFBcUIsRUFBRWQsbUJBQW9CLENBQUM7QUFFekUsZUFBZUEsbUJBQW1CIn0=