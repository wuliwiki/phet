// Copyright 2016-2022, University of Colorado Boulder

/**
 * icon node for 'Explore' screen
 *
 * @author John Blanco
 */

import Screen from '../../../../joist/js/Screen.js';
import MathSymbolFont from '../../../../scenery-phet/js/MathSymbolFont.js';
import MathSymbols from '../../../../scenery-phet/js/MathSymbols.js';
import PhetFont from '../../../../scenery-phet/js/PhetFont.js';
import { Node, Rectangle, Text } from '../../../../scenery/js/imports.js';
import EESharedConstants from '../../common/EESharedConstants.js';
import expressionExchange from '../../expressionExchange.js';

// constants
const ICON_SIZE = Screen.MINIMUM_HOME_SCREEN_ICON_SIZE;
const FONT_SIZE = 84;
const NORMAL_FONT = new PhetFont({
  size: FONT_SIZE
});
const ITALIC_FONT = new MathSymbolFont(FONT_SIZE);
const BACKGROUND_COLOR = EESharedConstants.NON_GAME_SCREENS_BACKGROUND_COLOR;
class EEExploreIconNode extends Rectangle {
  /**
   */
  constructor() {
    // create the background
    super(0, 0, ICON_SIZE.width, ICON_SIZE.height, {
      fill: BACKGROUND_COLOR
    });

    // add the nodes
    const equationNode = new Node();
    equationNode.addChild(new Text('2', {
      font: NORMAL_FONT
    }));
    equationNode.addChild(new Text('(4)', {
      font: ITALIC_FONT,
      left: equationNode.width
    }));
    equationNode.addChild(new Text(MathSymbols.PLUS, {
      font: NORMAL_FONT,
      left: equationNode.width + 25
    }));
    equationNode.addChild(new Text('1', {
      font: NORMAL_FONT,
      left: equationNode.width + 25
    }));
    equationNode.addChild(new Text('(5)', {
      font: ITALIC_FONT,
      left: equationNode.width
    }));

    // position the equation
    equationNode.centerX = ICON_SIZE.width / 2;
    equationNode.centerY = ICON_SIZE.height * 0.45;
    this.addChild(equationNode);
  }
}
expressionExchange.register('EEExploreIconNode', EEExploreIconNode);
export default EEExploreIconNode;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTY3JlZW4iLCJNYXRoU3ltYm9sRm9udCIsIk1hdGhTeW1ib2xzIiwiUGhldEZvbnQiLCJOb2RlIiwiUmVjdGFuZ2xlIiwiVGV4dCIsIkVFU2hhcmVkQ29uc3RhbnRzIiwiZXhwcmVzc2lvbkV4Y2hhbmdlIiwiSUNPTl9TSVpFIiwiTUlOSU1VTV9IT01FX1NDUkVFTl9JQ09OX1NJWkUiLCJGT05UX1NJWkUiLCJOT1JNQUxfRk9OVCIsInNpemUiLCJJVEFMSUNfRk9OVCIsIkJBQ0tHUk9VTkRfQ09MT1IiLCJOT05fR0FNRV9TQ1JFRU5TX0JBQ0tHUk9VTkRfQ09MT1IiLCJFRUV4cGxvcmVJY29uTm9kZSIsImNvbnN0cnVjdG9yIiwid2lkdGgiLCJoZWlnaHQiLCJmaWxsIiwiZXF1YXRpb25Ob2RlIiwiYWRkQ2hpbGQiLCJmb250IiwibGVmdCIsIlBMVVMiLCJjZW50ZXJYIiwiY2VudGVyWSIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiRUVFeHBsb3JlSWNvbk5vZGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTYtMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogaWNvbiBub2RlIGZvciAnRXhwbG9yZScgc2NyZWVuXHJcbiAqXHJcbiAqIEBhdXRob3IgSm9obiBCbGFuY29cclxuICovXHJcblxyXG5pbXBvcnQgU2NyZWVuIGZyb20gJy4uLy4uLy4uLy4uL2pvaXN0L2pzL1NjcmVlbi5qcyc7XHJcbmltcG9ydCBNYXRoU3ltYm9sRm9udCBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5LXBoZXQvanMvTWF0aFN5bWJvbEZvbnQuanMnO1xyXG5pbXBvcnQgTWF0aFN5bWJvbHMgZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS1waGV0L2pzL01hdGhTeW1ib2xzLmpzJztcclxuaW1wb3J0IFBoZXRGb250IGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnktcGhldC9qcy9QaGV0Rm9udC5qcyc7XHJcbmltcG9ydCB7IE5vZGUsIFJlY3RhbmdsZSwgVGV4dCB9IGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XHJcbmltcG9ydCBFRVNoYXJlZENvbnN0YW50cyBmcm9tICcuLi8uLi9jb21tb24vRUVTaGFyZWRDb25zdGFudHMuanMnO1xyXG5pbXBvcnQgZXhwcmVzc2lvbkV4Y2hhbmdlIGZyb20gJy4uLy4uL2V4cHJlc3Npb25FeGNoYW5nZS5qcyc7XHJcblxyXG4vLyBjb25zdGFudHNcclxuY29uc3QgSUNPTl9TSVpFID0gU2NyZWVuLk1JTklNVU1fSE9NRV9TQ1JFRU5fSUNPTl9TSVpFO1xyXG5jb25zdCBGT05UX1NJWkUgPSA4NDtcclxuY29uc3QgTk9STUFMX0ZPTlQgPSBuZXcgUGhldEZvbnQoIHsgc2l6ZTogRk9OVF9TSVpFIH0gKTtcclxuY29uc3QgSVRBTElDX0ZPTlQgPSBuZXcgTWF0aFN5bWJvbEZvbnQoIEZPTlRfU0laRSApO1xyXG5jb25zdCBCQUNLR1JPVU5EX0NPTE9SID0gRUVTaGFyZWRDb25zdGFudHMuTk9OX0dBTUVfU0NSRUVOU19CQUNLR1JPVU5EX0NPTE9SO1xyXG5cclxuY2xhc3MgRUVFeHBsb3JlSWNvbk5vZGUgZXh0ZW5kcyBSZWN0YW5nbGUge1xyXG5cclxuICAvKipcclxuICAgKi9cclxuICBjb25zdHJ1Y3RvcigpIHtcclxuXHJcbiAgICAvLyBjcmVhdGUgdGhlIGJhY2tncm91bmRcclxuICAgIHN1cGVyKCAwLCAwLCBJQ09OX1NJWkUud2lkdGgsIElDT05fU0laRS5oZWlnaHQsIHsgZmlsbDogQkFDS0dST1VORF9DT0xPUiB9ICk7XHJcblxyXG4gICAgLy8gYWRkIHRoZSBub2Rlc1xyXG4gICAgY29uc3QgZXF1YXRpb25Ob2RlID0gbmV3IE5vZGUoKTtcclxuICAgIGVxdWF0aW9uTm9kZS5hZGRDaGlsZCggbmV3IFRleHQoICcyJywgeyBmb250OiBOT1JNQUxfRk9OVCB9ICkgKTtcclxuICAgIGVxdWF0aW9uTm9kZS5hZGRDaGlsZCggbmV3IFRleHQoICcoNCknLCB7IGZvbnQ6IElUQUxJQ19GT05ULCBsZWZ0OiBlcXVhdGlvbk5vZGUud2lkdGggfSApICk7XHJcbiAgICBlcXVhdGlvbk5vZGUuYWRkQ2hpbGQoIG5ldyBUZXh0KCBNYXRoU3ltYm9scy5QTFVTLCB7IGZvbnQ6IE5PUk1BTF9GT05ULCBsZWZ0OiBlcXVhdGlvbk5vZGUud2lkdGggKyAyNSB9ICkgKTtcclxuICAgIGVxdWF0aW9uTm9kZS5hZGRDaGlsZCggbmV3IFRleHQoICcxJywgeyBmb250OiBOT1JNQUxfRk9OVCwgbGVmdDogZXF1YXRpb25Ob2RlLndpZHRoICsgMjUgfSApICk7XHJcbiAgICBlcXVhdGlvbk5vZGUuYWRkQ2hpbGQoIG5ldyBUZXh0KCAnKDUpJywgeyBmb250OiBJVEFMSUNfRk9OVCwgbGVmdDogZXF1YXRpb25Ob2RlLndpZHRoIH0gKSApO1xyXG5cclxuICAgIC8vIHBvc2l0aW9uIHRoZSBlcXVhdGlvblxyXG4gICAgZXF1YXRpb25Ob2RlLmNlbnRlclggPSBJQ09OX1NJWkUud2lkdGggLyAyO1xyXG4gICAgZXF1YXRpb25Ob2RlLmNlbnRlclkgPSBJQ09OX1NJWkUuaGVpZ2h0ICogMC40NTtcclxuXHJcbiAgICB0aGlzLmFkZENoaWxkKCBlcXVhdGlvbk5vZGUgKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cHJlc3Npb25FeGNoYW5nZS5yZWdpc3RlciggJ0VFRXhwbG9yZUljb25Ob2RlJywgRUVFeHBsb3JlSWNvbk5vZGUgKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IEVFRXhwbG9yZUljb25Ob2RlOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxNQUFNLE1BQU0sZ0NBQWdDO0FBQ25ELE9BQU9DLGNBQWMsTUFBTSwrQ0FBK0M7QUFDMUUsT0FBT0MsV0FBVyxNQUFNLDRDQUE0QztBQUNwRSxPQUFPQyxRQUFRLE1BQU0seUNBQXlDO0FBQzlELFNBQVNDLElBQUksRUFBRUMsU0FBUyxFQUFFQyxJQUFJLFFBQVEsbUNBQW1DO0FBQ3pFLE9BQU9DLGlCQUFpQixNQUFNLG1DQUFtQztBQUNqRSxPQUFPQyxrQkFBa0IsTUFBTSw2QkFBNkI7O0FBRTVEO0FBQ0EsTUFBTUMsU0FBUyxHQUFHVCxNQUFNLENBQUNVLDZCQUE2QjtBQUN0RCxNQUFNQyxTQUFTLEdBQUcsRUFBRTtBQUNwQixNQUFNQyxXQUFXLEdBQUcsSUFBSVQsUUFBUSxDQUFFO0VBQUVVLElBQUksRUFBRUY7QUFBVSxDQUFFLENBQUM7QUFDdkQsTUFBTUcsV0FBVyxHQUFHLElBQUliLGNBQWMsQ0FBRVUsU0FBVSxDQUFDO0FBQ25ELE1BQU1JLGdCQUFnQixHQUFHUixpQkFBaUIsQ0FBQ1MsaUNBQWlDO0FBRTVFLE1BQU1DLGlCQUFpQixTQUFTWixTQUFTLENBQUM7RUFFeEM7QUFDRjtFQUNFYSxXQUFXQSxDQUFBLEVBQUc7SUFFWjtJQUNBLEtBQUssQ0FBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFVCxTQUFTLENBQUNVLEtBQUssRUFBRVYsU0FBUyxDQUFDVyxNQUFNLEVBQUU7TUFBRUMsSUFBSSxFQUFFTjtJQUFpQixDQUFFLENBQUM7O0lBRTVFO0lBQ0EsTUFBTU8sWUFBWSxHQUFHLElBQUlsQixJQUFJLENBQUMsQ0FBQztJQUMvQmtCLFlBQVksQ0FBQ0MsUUFBUSxDQUFFLElBQUlqQixJQUFJLENBQUUsR0FBRyxFQUFFO01BQUVrQixJQUFJLEVBQUVaO0lBQVksQ0FBRSxDQUFFLENBQUM7SUFDL0RVLFlBQVksQ0FBQ0MsUUFBUSxDQUFFLElBQUlqQixJQUFJLENBQUUsS0FBSyxFQUFFO01BQUVrQixJQUFJLEVBQUVWLFdBQVc7TUFBRVcsSUFBSSxFQUFFSCxZQUFZLENBQUNIO0lBQU0sQ0FBRSxDQUFFLENBQUM7SUFDM0ZHLFlBQVksQ0FBQ0MsUUFBUSxDQUFFLElBQUlqQixJQUFJLENBQUVKLFdBQVcsQ0FBQ3dCLElBQUksRUFBRTtNQUFFRixJQUFJLEVBQUVaLFdBQVc7TUFBRWEsSUFBSSxFQUFFSCxZQUFZLENBQUNILEtBQUssR0FBRztJQUFHLENBQUUsQ0FBRSxDQUFDO0lBQzNHRyxZQUFZLENBQUNDLFFBQVEsQ0FBRSxJQUFJakIsSUFBSSxDQUFFLEdBQUcsRUFBRTtNQUFFa0IsSUFBSSxFQUFFWixXQUFXO01BQUVhLElBQUksRUFBRUgsWUFBWSxDQUFDSCxLQUFLLEdBQUc7SUFBRyxDQUFFLENBQUUsQ0FBQztJQUM5RkcsWUFBWSxDQUFDQyxRQUFRLENBQUUsSUFBSWpCLElBQUksQ0FBRSxLQUFLLEVBQUU7TUFBRWtCLElBQUksRUFBRVYsV0FBVztNQUFFVyxJQUFJLEVBQUVILFlBQVksQ0FBQ0g7SUFBTSxDQUFFLENBQUUsQ0FBQzs7SUFFM0Y7SUFDQUcsWUFBWSxDQUFDSyxPQUFPLEdBQUdsQixTQUFTLENBQUNVLEtBQUssR0FBRyxDQUFDO0lBQzFDRyxZQUFZLENBQUNNLE9BQU8sR0FBR25CLFNBQVMsQ0FBQ1csTUFBTSxHQUFHLElBQUk7SUFFOUMsSUFBSSxDQUFDRyxRQUFRLENBQUVELFlBQWEsQ0FBQztFQUMvQjtBQUNGO0FBRUFkLGtCQUFrQixDQUFDcUIsUUFBUSxDQUFFLG1CQUFtQixFQUFFWixpQkFBa0IsQ0FBQztBQUVyRSxlQUFlQSxpQkFBaUIifQ==