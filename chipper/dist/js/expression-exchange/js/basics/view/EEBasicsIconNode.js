// Copyright 2016-2022, University of Colorado Boulder

/**
 * icon node for 'Basics' screen
 *
 * @author John Blanco
 */

import Screen from '../../../../joist/js/Screen.js';
import MathSymbols from '../../../../scenery-phet/js/MathSymbols.js';
import PhetFont from '../../../../scenery-phet/js/PhetFont.js';
import { Rectangle, Text } from '../../../../scenery/js/imports.js';
import EESharedConstants from '../../common/EESharedConstants.js';
import CoinTermTypeID from '../../common/enum/CoinTermTypeID.js';
import CoinNodeFactory from '../../common/view/CoinNodeFactory.js';
import expressionExchange from '../../expressionExchange.js';

// constants
const ICON_SIZE = Screen.MINIMUM_HOME_SCREEN_ICON_SIZE;
const BACKGROUND_COLOR = EESharedConstants.NON_GAME_SCREENS_BACKGROUND_COLOR;
const TEXT_FONT = new PhetFont(84);
class EEBasicsIconNode extends Rectangle {
  /**
   */
  constructor() {
    // create the background
    super(0, 0, ICON_SIZE.width, ICON_SIZE.height, {
      fill: BACKGROUND_COLOR
    });

    // add the nodes
    const coin1 = CoinNodeFactory.createImageNode(CoinTermTypeID.X, ICON_SIZE.height * 0.15, true);
    coin1.centerX = ICON_SIZE.width * 0.35;
    coin1.centerY = ICON_SIZE.height / 2;
    this.addChild(coin1);
    this.addChild(new Text('2', {
      font: TEXT_FONT,
      right: coin1.left - 3,
      centerY: coin1.centerY
    }));
    const coin2 = CoinNodeFactory.createImageNode(CoinTermTypeID.Y, ICON_SIZE.height * 0.15, true);
    coin2.centerX = ICON_SIZE.width * 0.75;
    coin2.centerY = ICON_SIZE.height / 2;
    this.addChild(coin2);
    this.addChild(new Text(MathSymbols.PLUS, {
      font: TEXT_FONT,
      centerX: (coin1.centerX + coin2.centerX) / 2,
      centerY: coin1.centerY
    }));
  }
}
expressionExchange.register('EEBasicsIconNode', EEBasicsIconNode);
export default EEBasicsIconNode;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTY3JlZW4iLCJNYXRoU3ltYm9scyIsIlBoZXRGb250IiwiUmVjdGFuZ2xlIiwiVGV4dCIsIkVFU2hhcmVkQ29uc3RhbnRzIiwiQ29pblRlcm1UeXBlSUQiLCJDb2luTm9kZUZhY3RvcnkiLCJleHByZXNzaW9uRXhjaGFuZ2UiLCJJQ09OX1NJWkUiLCJNSU5JTVVNX0hPTUVfU0NSRUVOX0lDT05fU0laRSIsIkJBQ0tHUk9VTkRfQ09MT1IiLCJOT05fR0FNRV9TQ1JFRU5TX0JBQ0tHUk9VTkRfQ09MT1IiLCJURVhUX0ZPTlQiLCJFRUJhc2ljc0ljb25Ob2RlIiwiY29uc3RydWN0b3IiLCJ3aWR0aCIsImhlaWdodCIsImZpbGwiLCJjb2luMSIsImNyZWF0ZUltYWdlTm9kZSIsIlgiLCJjZW50ZXJYIiwiY2VudGVyWSIsImFkZENoaWxkIiwiZm9udCIsInJpZ2h0IiwibGVmdCIsImNvaW4yIiwiWSIsIlBMVVMiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIkVFQmFzaWNzSWNvbk5vZGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTYtMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogaWNvbiBub2RlIGZvciAnQmFzaWNzJyBzY3JlZW5cclxuICpcclxuICogQGF1dGhvciBKb2huIEJsYW5jb1xyXG4gKi9cclxuXHJcbmltcG9ydCBTY3JlZW4gZnJvbSAnLi4vLi4vLi4vLi4vam9pc3QvanMvU2NyZWVuLmpzJztcclxuaW1wb3J0IE1hdGhTeW1ib2xzIGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnktcGhldC9qcy9NYXRoU3ltYm9scy5qcyc7XHJcbmltcG9ydCBQaGV0Rm9udCBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5LXBoZXQvanMvUGhldEZvbnQuanMnO1xyXG5pbXBvcnQgeyBSZWN0YW5nbGUsIFRleHQgfSBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgRUVTaGFyZWRDb25zdGFudHMgZnJvbSAnLi4vLi4vY29tbW9uL0VFU2hhcmVkQ29uc3RhbnRzLmpzJztcclxuaW1wb3J0IENvaW5UZXJtVHlwZUlEIGZyb20gJy4uLy4uL2NvbW1vbi9lbnVtL0NvaW5UZXJtVHlwZUlELmpzJztcclxuaW1wb3J0IENvaW5Ob2RlRmFjdG9yeSBmcm9tICcuLi8uLi9jb21tb24vdmlldy9Db2luTm9kZUZhY3RvcnkuanMnO1xyXG5pbXBvcnQgZXhwcmVzc2lvbkV4Y2hhbmdlIGZyb20gJy4uLy4uL2V4cHJlc3Npb25FeGNoYW5nZS5qcyc7XHJcblxyXG4vLyBjb25zdGFudHNcclxuY29uc3QgSUNPTl9TSVpFID0gU2NyZWVuLk1JTklNVU1fSE9NRV9TQ1JFRU5fSUNPTl9TSVpFO1xyXG5jb25zdCBCQUNLR1JPVU5EX0NPTE9SID0gRUVTaGFyZWRDb25zdGFudHMuTk9OX0dBTUVfU0NSRUVOU19CQUNLR1JPVU5EX0NPTE9SO1xyXG5jb25zdCBURVhUX0ZPTlQgPSBuZXcgUGhldEZvbnQoIDg0ICk7XHJcblxyXG5jbGFzcyBFRUJhc2ljc0ljb25Ob2RlIGV4dGVuZHMgUmVjdGFuZ2xlIHtcclxuXHJcbiAgLyoqXHJcbiAgICovXHJcbiAgY29uc3RydWN0b3IoKSB7XHJcblxyXG4gICAgLy8gY3JlYXRlIHRoZSBiYWNrZ3JvdW5kXHJcbiAgICBzdXBlciggMCwgMCwgSUNPTl9TSVpFLndpZHRoLCBJQ09OX1NJWkUuaGVpZ2h0LCB7IGZpbGw6IEJBQ0tHUk9VTkRfQ09MT1IgfSApO1xyXG5cclxuICAgIC8vIGFkZCB0aGUgbm9kZXNcclxuICAgIGNvbnN0IGNvaW4xID0gQ29pbk5vZGVGYWN0b3J5LmNyZWF0ZUltYWdlTm9kZSggQ29pblRlcm1UeXBlSUQuWCwgSUNPTl9TSVpFLmhlaWdodCAqIDAuMTUsIHRydWUgKTtcclxuICAgIGNvaW4xLmNlbnRlclggPSBJQ09OX1NJWkUud2lkdGggKiAwLjM1O1xyXG4gICAgY29pbjEuY2VudGVyWSA9IElDT05fU0laRS5oZWlnaHQgLyAyO1xyXG4gICAgdGhpcy5hZGRDaGlsZCggY29pbjEgKTtcclxuXHJcbiAgICB0aGlzLmFkZENoaWxkKCBuZXcgVGV4dCggJzInLCB7XHJcbiAgICAgIGZvbnQ6IFRFWFRfRk9OVCxcclxuICAgICAgcmlnaHQ6IGNvaW4xLmxlZnQgLSAzLFxyXG4gICAgICBjZW50ZXJZOiBjb2luMS5jZW50ZXJZXHJcbiAgICB9ICkgKTtcclxuXHJcbiAgICBjb25zdCBjb2luMiA9IENvaW5Ob2RlRmFjdG9yeS5jcmVhdGVJbWFnZU5vZGUoIENvaW5UZXJtVHlwZUlELlksIElDT05fU0laRS5oZWlnaHQgKiAwLjE1LCB0cnVlICk7XHJcbiAgICBjb2luMi5jZW50ZXJYID0gSUNPTl9TSVpFLndpZHRoICogMC43NTtcclxuICAgIGNvaW4yLmNlbnRlclkgPSBJQ09OX1NJWkUuaGVpZ2h0IC8gMjtcclxuICAgIHRoaXMuYWRkQ2hpbGQoIGNvaW4yICk7XHJcblxyXG4gICAgdGhpcy5hZGRDaGlsZCggbmV3IFRleHQoIE1hdGhTeW1ib2xzLlBMVVMsIHtcclxuICAgICAgZm9udDogVEVYVF9GT05ULFxyXG4gICAgICBjZW50ZXJYOiAoIGNvaW4xLmNlbnRlclggKyBjb2luMi5jZW50ZXJYICkgLyAyLFxyXG4gICAgICBjZW50ZXJZOiBjb2luMS5jZW50ZXJZXHJcbiAgICB9ICkgKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cHJlc3Npb25FeGNoYW5nZS5yZWdpc3RlciggJ0VFQmFzaWNzSWNvbk5vZGUnLCBFRUJhc2ljc0ljb25Ob2RlICk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBFRUJhc2ljc0ljb25Ob2RlOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxNQUFNLE1BQU0sZ0NBQWdDO0FBQ25ELE9BQU9DLFdBQVcsTUFBTSw0Q0FBNEM7QUFDcEUsT0FBT0MsUUFBUSxNQUFNLHlDQUF5QztBQUM5RCxTQUFTQyxTQUFTLEVBQUVDLElBQUksUUFBUSxtQ0FBbUM7QUFDbkUsT0FBT0MsaUJBQWlCLE1BQU0sbUNBQW1DO0FBQ2pFLE9BQU9DLGNBQWMsTUFBTSxxQ0FBcUM7QUFDaEUsT0FBT0MsZUFBZSxNQUFNLHNDQUFzQztBQUNsRSxPQUFPQyxrQkFBa0IsTUFBTSw2QkFBNkI7O0FBRTVEO0FBQ0EsTUFBTUMsU0FBUyxHQUFHVCxNQUFNLENBQUNVLDZCQUE2QjtBQUN0RCxNQUFNQyxnQkFBZ0IsR0FBR04saUJBQWlCLENBQUNPLGlDQUFpQztBQUM1RSxNQUFNQyxTQUFTLEdBQUcsSUFBSVgsUUFBUSxDQUFFLEVBQUcsQ0FBQztBQUVwQyxNQUFNWSxnQkFBZ0IsU0FBU1gsU0FBUyxDQUFDO0VBRXZDO0FBQ0Y7RUFDRVksV0FBV0EsQ0FBQSxFQUFHO0lBRVo7SUFDQSxLQUFLLENBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRU4sU0FBUyxDQUFDTyxLQUFLLEVBQUVQLFNBQVMsQ0FBQ1EsTUFBTSxFQUFFO01BQUVDLElBQUksRUFBRVA7SUFBaUIsQ0FBRSxDQUFDOztJQUU1RTtJQUNBLE1BQU1RLEtBQUssR0FBR1osZUFBZSxDQUFDYSxlQUFlLENBQUVkLGNBQWMsQ0FBQ2UsQ0FBQyxFQUFFWixTQUFTLENBQUNRLE1BQU0sR0FBRyxJQUFJLEVBQUUsSUFBSyxDQUFDO0lBQ2hHRSxLQUFLLENBQUNHLE9BQU8sR0FBR2IsU0FBUyxDQUFDTyxLQUFLLEdBQUcsSUFBSTtJQUN0Q0csS0FBSyxDQUFDSSxPQUFPLEdBQUdkLFNBQVMsQ0FBQ1EsTUFBTSxHQUFHLENBQUM7SUFDcEMsSUFBSSxDQUFDTyxRQUFRLENBQUVMLEtBQU0sQ0FBQztJQUV0QixJQUFJLENBQUNLLFFBQVEsQ0FBRSxJQUFJcEIsSUFBSSxDQUFFLEdBQUcsRUFBRTtNQUM1QnFCLElBQUksRUFBRVosU0FBUztNQUNmYSxLQUFLLEVBQUVQLEtBQUssQ0FBQ1EsSUFBSSxHQUFHLENBQUM7TUFDckJKLE9BQU8sRUFBRUosS0FBSyxDQUFDSTtJQUNqQixDQUFFLENBQUUsQ0FBQztJQUVMLE1BQU1LLEtBQUssR0FBR3JCLGVBQWUsQ0FBQ2EsZUFBZSxDQUFFZCxjQUFjLENBQUN1QixDQUFDLEVBQUVwQixTQUFTLENBQUNRLE1BQU0sR0FBRyxJQUFJLEVBQUUsSUFBSyxDQUFDO0lBQ2hHVyxLQUFLLENBQUNOLE9BQU8sR0FBR2IsU0FBUyxDQUFDTyxLQUFLLEdBQUcsSUFBSTtJQUN0Q1ksS0FBSyxDQUFDTCxPQUFPLEdBQUdkLFNBQVMsQ0FBQ1EsTUFBTSxHQUFHLENBQUM7SUFDcEMsSUFBSSxDQUFDTyxRQUFRLENBQUVJLEtBQU0sQ0FBQztJQUV0QixJQUFJLENBQUNKLFFBQVEsQ0FBRSxJQUFJcEIsSUFBSSxDQUFFSCxXQUFXLENBQUM2QixJQUFJLEVBQUU7TUFDekNMLElBQUksRUFBRVosU0FBUztNQUNmUyxPQUFPLEVBQUUsQ0FBRUgsS0FBSyxDQUFDRyxPQUFPLEdBQUdNLEtBQUssQ0FBQ04sT0FBTyxJQUFLLENBQUM7TUFDOUNDLE9BQU8sRUFBRUosS0FBSyxDQUFDSTtJQUNqQixDQUFFLENBQUUsQ0FBQztFQUNQO0FBQ0Y7QUFFQWYsa0JBQWtCLENBQUN1QixRQUFRLENBQUUsa0JBQWtCLEVBQUVqQixnQkFBaUIsQ0FBQztBQUVuRSxlQUFlQSxnQkFBZ0IifQ==