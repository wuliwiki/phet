// Copyright 2016-2021, University of Colorado Boulder

/**
 * a node that allows the user to change the values of the variables that underlie the various coin terms
 */

import merge from '../../../../phet-core/js/merge.js';
import ResetButton from '../../../../scenery-phet/js/buttons/ResetButton.js';
import { VBox } from '../../../../scenery/js/imports.js';
import expressionExchange from '../../expressionExchange.js';
import LeftRightNumberSpinner from './LeftRightNumberSpinner.js';
class VariableValueControl extends VBox {
  /**
   * @param {Object} [options]
   */
  constructor(options) {
    options = merge({
      xTermValueProperty: null,
      yTermValueProperty: null,
      zTermValueProperty: null,
      minValue: 0,
      maxValue: 10
    }, options);

    // convenience vars to make the code below more readable
    const xValueProperty = options.xTermValueProperty;
    const yValueProperty = options.yTermValueProperty;
    const zValueProperty = options.zTermValueProperty;

    //  button that will be used to restore the default values
    const restoreDefaultsButton = new ResetButton({
      baseColor: '#f5f5f5',
      arrowColor: 'black',
      radius: 16,
      touchAreaDilation: 5,
      listener: () => {
        xValueProperty && xValueProperty.reset();
        yValueProperty && yValueProperty.reset();
        zValueProperty && zValueProperty.reset();
      }
    });
    function updateRestoreButtonEnabledState() {
      restoreDefaultsButton.enabled = xValueProperty !== null && xValueProperty.value !== xValueProperty.initialValue || yValueProperty !== null && yValueProperty.value !== yValueProperty.initialValue || zValueProperty !== null && zValueProperty.value !== zValueProperty.initialValue;
    }

    // hook up function for updating the enabled state of the "restore defaults" button
    xValueProperty && xValueProperty.link(updateRestoreButtonEnabledState);
    yValueProperty && yValueProperty.link(updateRestoreButtonEnabledState);
    zValueProperty && zValueProperty.link(updateRestoreButtonEnabledState);

    // create the tweaker controls
    const controls = [];
    const tweakerOptions = {
      minValue: options.minValue,
      maxValue: options.maxValue
    };
    xValueProperty && controls.push(new LeftRightNumberSpinner(xValueProperty, 'x', tweakerOptions));
    yValueProperty && controls.push(new LeftRightNumberSpinner(yValueProperty, 'y', tweakerOptions));
    zValueProperty && controls.push(new LeftRightNumberSpinner(zValueProperty, 'z', tweakerOptions));

    // add in the 'restore defaults' button
    controls.push(restoreDefaultsButton);

    // construct the VBox with the tweakers and the 'restore default values' button
    super({
      children: controls,
      spacing: 20
    });
  }
}
expressionExchange.register('VariableValueControl', VariableValueControl);
export default VariableValueControl;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtZXJnZSIsIlJlc2V0QnV0dG9uIiwiVkJveCIsImV4cHJlc3Npb25FeGNoYW5nZSIsIkxlZnRSaWdodE51bWJlclNwaW5uZXIiLCJWYXJpYWJsZVZhbHVlQ29udHJvbCIsImNvbnN0cnVjdG9yIiwib3B0aW9ucyIsInhUZXJtVmFsdWVQcm9wZXJ0eSIsInlUZXJtVmFsdWVQcm9wZXJ0eSIsInpUZXJtVmFsdWVQcm9wZXJ0eSIsIm1pblZhbHVlIiwibWF4VmFsdWUiLCJ4VmFsdWVQcm9wZXJ0eSIsInlWYWx1ZVByb3BlcnR5IiwielZhbHVlUHJvcGVydHkiLCJyZXN0b3JlRGVmYXVsdHNCdXR0b24iLCJiYXNlQ29sb3IiLCJhcnJvd0NvbG9yIiwicmFkaXVzIiwidG91Y2hBcmVhRGlsYXRpb24iLCJsaXN0ZW5lciIsInJlc2V0IiwidXBkYXRlUmVzdG9yZUJ1dHRvbkVuYWJsZWRTdGF0ZSIsImVuYWJsZWQiLCJ2YWx1ZSIsImluaXRpYWxWYWx1ZSIsImxpbmsiLCJjb250cm9scyIsInR3ZWFrZXJPcHRpb25zIiwicHVzaCIsImNoaWxkcmVuIiwic3BhY2luZyIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiVmFyaWFibGVWYWx1ZUNvbnRyb2wuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTYtMjAyMSwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogYSBub2RlIHRoYXQgYWxsb3dzIHRoZSB1c2VyIHRvIGNoYW5nZSB0aGUgdmFsdWVzIG9mIHRoZSB2YXJpYWJsZXMgdGhhdCB1bmRlcmxpZSB0aGUgdmFyaW91cyBjb2luIHRlcm1zXHJcbiAqL1xyXG5cclxuaW1wb3J0IG1lcmdlIGZyb20gJy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy9tZXJnZS5qcyc7XHJcbmltcG9ydCBSZXNldEJ1dHRvbiBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5LXBoZXQvanMvYnV0dG9ucy9SZXNldEJ1dHRvbi5qcyc7XHJcbmltcG9ydCB7IFZCb3ggfSBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgZXhwcmVzc2lvbkV4Y2hhbmdlIGZyb20gJy4uLy4uL2V4cHJlc3Npb25FeGNoYW5nZS5qcyc7XHJcbmltcG9ydCBMZWZ0UmlnaHROdW1iZXJTcGlubmVyIGZyb20gJy4vTGVmdFJpZ2h0TnVtYmVyU3Bpbm5lci5qcyc7XHJcblxyXG5jbGFzcyBWYXJpYWJsZVZhbHVlQ29udHJvbCBleHRlbmRzIFZCb3gge1xyXG5cclxuICAvKipcclxuICAgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXHJcbiAgICovXHJcbiAgY29uc3RydWN0b3IoIG9wdGlvbnMgKSB7XHJcblxyXG4gICAgb3B0aW9ucyA9IG1lcmdlKCB7XHJcbiAgICAgIHhUZXJtVmFsdWVQcm9wZXJ0eTogbnVsbCxcclxuICAgICAgeVRlcm1WYWx1ZVByb3BlcnR5OiBudWxsLFxyXG4gICAgICB6VGVybVZhbHVlUHJvcGVydHk6IG51bGwsXHJcbiAgICAgIG1pblZhbHVlOiAwLFxyXG4gICAgICBtYXhWYWx1ZTogMTBcclxuICAgIH0sIG9wdGlvbnMgKTtcclxuXHJcbiAgICAvLyBjb252ZW5pZW5jZSB2YXJzIHRvIG1ha2UgdGhlIGNvZGUgYmVsb3cgbW9yZSByZWFkYWJsZVxyXG4gICAgY29uc3QgeFZhbHVlUHJvcGVydHkgPSBvcHRpb25zLnhUZXJtVmFsdWVQcm9wZXJ0eTtcclxuICAgIGNvbnN0IHlWYWx1ZVByb3BlcnR5ID0gb3B0aW9ucy55VGVybVZhbHVlUHJvcGVydHk7XHJcbiAgICBjb25zdCB6VmFsdWVQcm9wZXJ0eSA9IG9wdGlvbnMuelRlcm1WYWx1ZVByb3BlcnR5O1xyXG5cclxuICAgIC8vICBidXR0b24gdGhhdCB3aWxsIGJlIHVzZWQgdG8gcmVzdG9yZSB0aGUgZGVmYXVsdCB2YWx1ZXNcclxuICAgIGNvbnN0IHJlc3RvcmVEZWZhdWx0c0J1dHRvbiA9IG5ldyBSZXNldEJ1dHRvbigge1xyXG4gICAgICBiYXNlQ29sb3I6ICcjZjVmNWY1JyxcclxuICAgICAgYXJyb3dDb2xvcjogJ2JsYWNrJyxcclxuICAgICAgcmFkaXVzOiAxNixcclxuICAgICAgdG91Y2hBcmVhRGlsYXRpb246IDUsXHJcbiAgICAgIGxpc3RlbmVyOiAoKSA9PiB7XHJcbiAgICAgICAgeFZhbHVlUHJvcGVydHkgJiYgeFZhbHVlUHJvcGVydHkucmVzZXQoKTtcclxuICAgICAgICB5VmFsdWVQcm9wZXJ0eSAmJiB5VmFsdWVQcm9wZXJ0eS5yZXNldCgpO1xyXG4gICAgICAgIHpWYWx1ZVByb3BlcnR5ICYmIHpWYWx1ZVByb3BlcnR5LnJlc2V0KCk7XHJcbiAgICAgIH1cclxuICAgIH0gKTtcclxuXHJcbiAgICBmdW5jdGlvbiB1cGRhdGVSZXN0b3JlQnV0dG9uRW5hYmxlZFN0YXRlKCkge1xyXG4gICAgICByZXN0b3JlRGVmYXVsdHNCdXR0b24uZW5hYmxlZCA9XHJcbiAgICAgICAgKCB4VmFsdWVQcm9wZXJ0eSAhPT0gbnVsbCAmJiB4VmFsdWVQcm9wZXJ0eS52YWx1ZSAhPT0geFZhbHVlUHJvcGVydHkuaW5pdGlhbFZhbHVlICkgfHxcclxuICAgICAgICAoIHlWYWx1ZVByb3BlcnR5ICE9PSBudWxsICYmIHlWYWx1ZVByb3BlcnR5LnZhbHVlICE9PSB5VmFsdWVQcm9wZXJ0eS5pbml0aWFsVmFsdWUgKSB8fFxyXG4gICAgICAgICggelZhbHVlUHJvcGVydHkgIT09IG51bGwgJiYgelZhbHVlUHJvcGVydHkudmFsdWUgIT09IHpWYWx1ZVByb3BlcnR5LmluaXRpYWxWYWx1ZSApO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIGhvb2sgdXAgZnVuY3Rpb24gZm9yIHVwZGF0aW5nIHRoZSBlbmFibGVkIHN0YXRlIG9mIHRoZSBcInJlc3RvcmUgZGVmYXVsdHNcIiBidXR0b25cclxuICAgIHhWYWx1ZVByb3BlcnR5ICYmIHhWYWx1ZVByb3BlcnR5LmxpbmsoIHVwZGF0ZVJlc3RvcmVCdXR0b25FbmFibGVkU3RhdGUgKTtcclxuICAgIHlWYWx1ZVByb3BlcnR5ICYmIHlWYWx1ZVByb3BlcnR5LmxpbmsoIHVwZGF0ZVJlc3RvcmVCdXR0b25FbmFibGVkU3RhdGUgKTtcclxuICAgIHpWYWx1ZVByb3BlcnR5ICYmIHpWYWx1ZVByb3BlcnR5LmxpbmsoIHVwZGF0ZVJlc3RvcmVCdXR0b25FbmFibGVkU3RhdGUgKTtcclxuXHJcbiAgICAvLyBjcmVhdGUgdGhlIHR3ZWFrZXIgY29udHJvbHNcclxuICAgIGNvbnN0IGNvbnRyb2xzID0gW107XHJcbiAgICBjb25zdCB0d2Vha2VyT3B0aW9ucyA9IHsgbWluVmFsdWU6IG9wdGlvbnMubWluVmFsdWUsIG1heFZhbHVlOiBvcHRpb25zLm1heFZhbHVlIH07XHJcbiAgICB4VmFsdWVQcm9wZXJ0eSAmJiBjb250cm9scy5wdXNoKCBuZXcgTGVmdFJpZ2h0TnVtYmVyU3Bpbm5lcihcclxuICAgICAgeFZhbHVlUHJvcGVydHksXHJcbiAgICAgICd4JyxcclxuICAgICAgdHdlYWtlck9wdGlvbnNcclxuICAgICkgKTtcclxuICAgIHlWYWx1ZVByb3BlcnR5ICYmIGNvbnRyb2xzLnB1c2goIG5ldyBMZWZ0UmlnaHROdW1iZXJTcGlubmVyKFxyXG4gICAgICB5VmFsdWVQcm9wZXJ0eSxcclxuICAgICAgJ3knLFxyXG4gICAgICB0d2Vha2VyT3B0aW9uc1xyXG4gICAgKSApO1xyXG4gICAgelZhbHVlUHJvcGVydHkgJiYgY29udHJvbHMucHVzaCggbmV3IExlZnRSaWdodE51bWJlclNwaW5uZXIoXHJcbiAgICAgIHpWYWx1ZVByb3BlcnR5LFxyXG4gICAgICAneicsXHJcbiAgICAgIHR3ZWFrZXJPcHRpb25zXHJcbiAgICApICk7XHJcblxyXG4gICAgLy8gYWRkIGluIHRoZSAncmVzdG9yZSBkZWZhdWx0cycgYnV0dG9uXHJcbiAgICBjb250cm9scy5wdXNoKCByZXN0b3JlRGVmYXVsdHNCdXR0b24gKTtcclxuXHJcbiAgICAvLyBjb25zdHJ1Y3QgdGhlIFZCb3ggd2l0aCB0aGUgdHdlYWtlcnMgYW5kIHRoZSAncmVzdG9yZSBkZWZhdWx0IHZhbHVlcycgYnV0dG9uXHJcbiAgICBzdXBlcigge1xyXG4gICAgICBjaGlsZHJlbjogY29udHJvbHMsXHJcbiAgICAgIHNwYWNpbmc6IDIwXHJcbiAgICB9ICk7XHJcbiAgfVxyXG59XHJcblxyXG5leHByZXNzaW9uRXhjaGFuZ2UucmVnaXN0ZXIoICdWYXJpYWJsZVZhbHVlQ29udHJvbCcsIFZhcmlhYmxlVmFsdWVDb250cm9sICk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBWYXJpYWJsZVZhbHVlQ29udHJvbDsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxLQUFLLE1BQU0sbUNBQW1DO0FBQ3JELE9BQU9DLFdBQVcsTUFBTSxvREFBb0Q7QUFDNUUsU0FBU0MsSUFBSSxRQUFRLG1DQUFtQztBQUN4RCxPQUFPQyxrQkFBa0IsTUFBTSw2QkFBNkI7QUFDNUQsT0FBT0Msc0JBQXNCLE1BQU0sNkJBQTZCO0FBRWhFLE1BQU1DLG9CQUFvQixTQUFTSCxJQUFJLENBQUM7RUFFdEM7QUFDRjtBQUNBO0VBQ0VJLFdBQVdBLENBQUVDLE9BQU8sRUFBRztJQUVyQkEsT0FBTyxHQUFHUCxLQUFLLENBQUU7TUFDZlEsa0JBQWtCLEVBQUUsSUFBSTtNQUN4QkMsa0JBQWtCLEVBQUUsSUFBSTtNQUN4QkMsa0JBQWtCLEVBQUUsSUFBSTtNQUN4QkMsUUFBUSxFQUFFLENBQUM7TUFDWEMsUUFBUSxFQUFFO0lBQ1osQ0FBQyxFQUFFTCxPQUFRLENBQUM7O0lBRVo7SUFDQSxNQUFNTSxjQUFjLEdBQUdOLE9BQU8sQ0FBQ0Msa0JBQWtCO0lBQ2pELE1BQU1NLGNBQWMsR0FBR1AsT0FBTyxDQUFDRSxrQkFBa0I7SUFDakQsTUFBTU0sY0FBYyxHQUFHUixPQUFPLENBQUNHLGtCQUFrQjs7SUFFakQ7SUFDQSxNQUFNTSxxQkFBcUIsR0FBRyxJQUFJZixXQUFXLENBQUU7TUFDN0NnQixTQUFTLEVBQUUsU0FBUztNQUNwQkMsVUFBVSxFQUFFLE9BQU87TUFDbkJDLE1BQU0sRUFBRSxFQUFFO01BQ1ZDLGlCQUFpQixFQUFFLENBQUM7TUFDcEJDLFFBQVEsRUFBRUEsQ0FBQSxLQUFNO1FBQ2RSLGNBQWMsSUFBSUEsY0FBYyxDQUFDUyxLQUFLLENBQUMsQ0FBQztRQUN4Q1IsY0FBYyxJQUFJQSxjQUFjLENBQUNRLEtBQUssQ0FBQyxDQUFDO1FBQ3hDUCxjQUFjLElBQUlBLGNBQWMsQ0FBQ08sS0FBSyxDQUFDLENBQUM7TUFDMUM7SUFDRixDQUFFLENBQUM7SUFFSCxTQUFTQywrQkFBK0JBLENBQUEsRUFBRztNQUN6Q1AscUJBQXFCLENBQUNRLE9BQU8sR0FDekJYLGNBQWMsS0FBSyxJQUFJLElBQUlBLGNBQWMsQ0FBQ1ksS0FBSyxLQUFLWixjQUFjLENBQUNhLFlBQVksSUFDL0VaLGNBQWMsS0FBSyxJQUFJLElBQUlBLGNBQWMsQ0FBQ1csS0FBSyxLQUFLWCxjQUFjLENBQUNZLFlBQWMsSUFDakZYLGNBQWMsS0FBSyxJQUFJLElBQUlBLGNBQWMsQ0FBQ1UsS0FBSyxLQUFLVixjQUFjLENBQUNXLFlBQWM7SUFDdkY7O0lBRUE7SUFDQWIsY0FBYyxJQUFJQSxjQUFjLENBQUNjLElBQUksQ0FBRUosK0JBQWdDLENBQUM7SUFDeEVULGNBQWMsSUFBSUEsY0FBYyxDQUFDYSxJQUFJLENBQUVKLCtCQUFnQyxDQUFDO0lBQ3hFUixjQUFjLElBQUlBLGNBQWMsQ0FBQ1ksSUFBSSxDQUFFSiwrQkFBZ0MsQ0FBQzs7SUFFeEU7SUFDQSxNQUFNSyxRQUFRLEdBQUcsRUFBRTtJQUNuQixNQUFNQyxjQUFjLEdBQUc7TUFBRWxCLFFBQVEsRUFBRUosT0FBTyxDQUFDSSxRQUFRO01BQUVDLFFBQVEsRUFBRUwsT0FBTyxDQUFDSztJQUFTLENBQUM7SUFDakZDLGNBQWMsSUFBSWUsUUFBUSxDQUFDRSxJQUFJLENBQUUsSUFBSTFCLHNCQUFzQixDQUN6RFMsY0FBYyxFQUNkLEdBQUcsRUFDSGdCLGNBQ0YsQ0FBRSxDQUFDO0lBQ0hmLGNBQWMsSUFBSWMsUUFBUSxDQUFDRSxJQUFJLENBQUUsSUFBSTFCLHNCQUFzQixDQUN6RFUsY0FBYyxFQUNkLEdBQUcsRUFDSGUsY0FDRixDQUFFLENBQUM7SUFDSGQsY0FBYyxJQUFJYSxRQUFRLENBQUNFLElBQUksQ0FBRSxJQUFJMUIsc0JBQXNCLENBQ3pEVyxjQUFjLEVBQ2QsR0FBRyxFQUNIYyxjQUNGLENBQUUsQ0FBQzs7SUFFSDtJQUNBRCxRQUFRLENBQUNFLElBQUksQ0FBRWQscUJBQXNCLENBQUM7O0lBRXRDO0lBQ0EsS0FBSyxDQUFFO01BQ0xlLFFBQVEsRUFBRUgsUUFBUTtNQUNsQkksT0FBTyxFQUFFO0lBQ1gsQ0FBRSxDQUFDO0VBQ0w7QUFDRjtBQUVBN0Isa0JBQWtCLENBQUM4QixRQUFRLENBQUUsc0JBQXNCLEVBQUU1QixvQkFBcUIsQ0FBQztBQUUzRSxlQUFlQSxvQkFBb0IifQ==