// Copyright 2016-2022, University of Colorado Boulder

/**
 * icon used in the checkbox for showing subtraction in the expressions
 *
 * @author John Blanco
 */

import ArrowNode from '../../../../scenery-phet/js/ArrowNode.js';
import MathSymbolFont from '../../../../scenery-phet/js/MathSymbolFont.js';
import MathSymbols from '../../../../scenery-phet/js/MathSymbols.js';
import { Node, Rectangle, Text } from '../../../../scenery/js/imports.js';
import expressionExchange from '../../expressionExchange.js';

// constants
const MATH_FONT = new MathSymbolFont({
  size: 21,
  weight: 'bold'
});
const RECTANGLE_BACKGROUND_COLOR = 'rgba( 255, 255, 255, 0.6 )';
const RECT_CORNER_RADIUS = 6;
class ShowSubtractionIcon extends Node {
  /**
   */
  constructor() {
    // create the background
    super();

    // add a rectangle with the first portion of the text
    const firstTextWithBackground = new TextWidthBackground(`+ ${MathSymbols.UNARY_MINUS}x`);
    this.addChild(firstTextWithBackground);

    // add the arrow
    const arrow = new ArrowNode(0, 0, 15, 0, {
      left: firstTextWithBackground.right + 5,
      centerY: firstTextWithBackground.height / 2,
      stroke: null,
      fill: 'rgb( 150, 0, 0 )',
      tailWidth: 3,
      headHeight: 7
    });
    this.addChild(arrow);

    // add the 2nd enclosed text portion
    this.addChild(new TextWidthBackground(`${MathSymbols.MINUS} x`, {
      left: arrow.right + 5
    }));
  }
}
class TextWidthBackground extends Rectangle {
  /**
   * inner class for the background box used for the textual portions of the icon
   * @param {string} text
   * @param {Object} [options]
   */
  constructor(text, options) {
    // create the textual node
    const textNode = new Text(text, {
      font: MATH_FONT
    });

    // create the background, which is a rounded rectangle (the width and height multipliers were empirically determined)
    super(0, 0, textNode.width * 1.4, textNode.height * 1.1, {
      fill: RECTANGLE_BACKGROUND_COLOR,
      cornerRadius: RECT_CORNER_RADIUS
    });

    // position and add the text node
    textNode.center = this.center;
    this.addChild(textNode);

    // pass through any options to the parent type
    this.mutate(options);
  }
}
expressionExchange.register('ShowSubtractionIcon', ShowSubtractionIcon);
export default ShowSubtractionIcon;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJBcnJvd05vZGUiLCJNYXRoU3ltYm9sRm9udCIsIk1hdGhTeW1ib2xzIiwiTm9kZSIsIlJlY3RhbmdsZSIsIlRleHQiLCJleHByZXNzaW9uRXhjaGFuZ2UiLCJNQVRIX0ZPTlQiLCJzaXplIiwid2VpZ2h0IiwiUkVDVEFOR0xFX0JBQ0tHUk9VTkRfQ09MT1IiLCJSRUNUX0NPUk5FUl9SQURJVVMiLCJTaG93U3VidHJhY3Rpb25JY29uIiwiY29uc3RydWN0b3IiLCJmaXJzdFRleHRXaXRoQmFja2dyb3VuZCIsIlRleHRXaWR0aEJhY2tncm91bmQiLCJVTkFSWV9NSU5VUyIsImFkZENoaWxkIiwiYXJyb3ciLCJsZWZ0IiwicmlnaHQiLCJjZW50ZXJZIiwiaGVpZ2h0Iiwic3Ryb2tlIiwiZmlsbCIsInRhaWxXaWR0aCIsImhlYWRIZWlnaHQiLCJNSU5VUyIsInRleHQiLCJvcHRpb25zIiwidGV4dE5vZGUiLCJmb250Iiwid2lkdGgiLCJjb3JuZXJSYWRpdXMiLCJjZW50ZXIiLCJtdXRhdGUiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIlNob3dTdWJ0cmFjdGlvbkljb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTYtMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogaWNvbiB1c2VkIGluIHRoZSBjaGVja2JveCBmb3Igc2hvd2luZyBzdWJ0cmFjdGlvbiBpbiB0aGUgZXhwcmVzc2lvbnNcclxuICpcclxuICogQGF1dGhvciBKb2huIEJsYW5jb1xyXG4gKi9cclxuXHJcbmltcG9ydCBBcnJvd05vZGUgZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS1waGV0L2pzL0Fycm93Tm9kZS5qcyc7XHJcbmltcG9ydCBNYXRoU3ltYm9sRm9udCBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5LXBoZXQvanMvTWF0aFN5bWJvbEZvbnQuanMnO1xyXG5pbXBvcnQgTWF0aFN5bWJvbHMgZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS1waGV0L2pzL01hdGhTeW1ib2xzLmpzJztcclxuaW1wb3J0IHsgTm9kZSwgUmVjdGFuZ2xlLCBUZXh0IH0gZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IGV4cHJlc3Npb25FeGNoYW5nZSBmcm9tICcuLi8uLi9leHByZXNzaW9uRXhjaGFuZ2UuanMnO1xyXG5cclxuLy8gY29uc3RhbnRzXHJcbmNvbnN0IE1BVEhfRk9OVCA9IG5ldyBNYXRoU3ltYm9sRm9udCggeyBzaXplOiAyMSwgd2VpZ2h0OiAnYm9sZCcgfSApO1xyXG5jb25zdCBSRUNUQU5HTEVfQkFDS0dST1VORF9DT0xPUiA9ICdyZ2JhKCAyNTUsIDI1NSwgMjU1LCAwLjYgKSc7XHJcbmNvbnN0IFJFQ1RfQ09STkVSX1JBRElVUyA9IDY7XHJcblxyXG5jbGFzcyBTaG93U3VidHJhY3Rpb25JY29uIGV4dGVuZHMgTm9kZSB7XHJcblxyXG4gIC8qKlxyXG4gICAqL1xyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG5cclxuICAgIC8vIGNyZWF0ZSB0aGUgYmFja2dyb3VuZFxyXG4gICAgc3VwZXIoKTtcclxuXHJcbiAgICAvLyBhZGQgYSByZWN0YW5nbGUgd2l0aCB0aGUgZmlyc3QgcG9ydGlvbiBvZiB0aGUgdGV4dFxyXG4gICAgY29uc3QgZmlyc3RUZXh0V2l0aEJhY2tncm91bmQgPSBuZXcgVGV4dFdpZHRoQmFja2dyb3VuZCggYCsgJHtNYXRoU3ltYm9scy5VTkFSWV9NSU5VU314YCApO1xyXG4gICAgdGhpcy5hZGRDaGlsZCggZmlyc3RUZXh0V2l0aEJhY2tncm91bmQgKTtcclxuXHJcbiAgICAvLyBhZGQgdGhlIGFycm93XHJcbiAgICBjb25zdCBhcnJvdyA9IG5ldyBBcnJvd05vZGUoIDAsIDAsIDE1LCAwLCB7XHJcbiAgICAgIGxlZnQ6IGZpcnN0VGV4dFdpdGhCYWNrZ3JvdW5kLnJpZ2h0ICsgNSxcclxuICAgICAgY2VudGVyWTogZmlyc3RUZXh0V2l0aEJhY2tncm91bmQuaGVpZ2h0IC8gMixcclxuICAgICAgc3Ryb2tlOiBudWxsLFxyXG4gICAgICBmaWxsOiAncmdiKCAxNTAsIDAsIDAgKScsXHJcbiAgICAgIHRhaWxXaWR0aDogMyxcclxuICAgICAgaGVhZEhlaWdodDogN1xyXG4gICAgfSApO1xyXG4gICAgdGhpcy5hZGRDaGlsZCggYXJyb3cgKTtcclxuXHJcbiAgICAvLyBhZGQgdGhlIDJuZCBlbmNsb3NlZCB0ZXh0IHBvcnRpb25cclxuICAgIHRoaXMuYWRkQ2hpbGQoIG5ldyBUZXh0V2lkdGhCYWNrZ3JvdW5kKCBgJHtNYXRoU3ltYm9scy5NSU5VU30geGAsIHsgbGVmdDogYXJyb3cucmlnaHQgKyA1IH0gKSApO1xyXG4gIH1cclxufVxyXG5cclxuY2xhc3MgVGV4dFdpZHRoQmFja2dyb3VuZCBleHRlbmRzIFJlY3RhbmdsZSB7XHJcblxyXG4gIC8qKlxyXG4gICAqIGlubmVyIGNsYXNzIGZvciB0aGUgYmFja2dyb3VuZCBib3ggdXNlZCBmb3IgdGhlIHRleHR1YWwgcG9ydGlvbnMgb2YgdGhlIGljb25cclxuICAgKiBAcGFyYW0ge3N0cmluZ30gdGV4dFxyXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc11cclxuICAgKi9cclxuICBjb25zdHJ1Y3RvciggdGV4dCwgb3B0aW9ucyApIHtcclxuXHJcbiAgICAvLyBjcmVhdGUgdGhlIHRleHR1YWwgbm9kZVxyXG4gICAgY29uc3QgdGV4dE5vZGUgPSBuZXcgVGV4dCggdGV4dCwgeyBmb250OiBNQVRIX0ZPTlQgfSApO1xyXG5cclxuICAgIC8vIGNyZWF0ZSB0aGUgYmFja2dyb3VuZCwgd2hpY2ggaXMgYSByb3VuZGVkIHJlY3RhbmdsZSAodGhlIHdpZHRoIGFuZCBoZWlnaHQgbXVsdGlwbGllcnMgd2VyZSBlbXBpcmljYWxseSBkZXRlcm1pbmVkKVxyXG4gICAgc3VwZXIoIDAsIDAsIHRleHROb2RlLndpZHRoICogMS40LCB0ZXh0Tm9kZS5oZWlnaHQgKiAxLjEsIHtcclxuICAgICAgZmlsbDogUkVDVEFOR0xFX0JBQ0tHUk9VTkRfQ09MT1IsXHJcbiAgICAgIGNvcm5lclJhZGl1czogUkVDVF9DT1JORVJfUkFESVVTXHJcbiAgICB9ICk7XHJcblxyXG4gICAgLy8gcG9zaXRpb24gYW5kIGFkZCB0aGUgdGV4dCBub2RlXHJcbiAgICB0ZXh0Tm9kZS5jZW50ZXIgPSB0aGlzLmNlbnRlcjtcclxuICAgIHRoaXMuYWRkQ2hpbGQoIHRleHROb2RlICk7XHJcblxyXG4gICAgLy8gcGFzcyB0aHJvdWdoIGFueSBvcHRpb25zIHRvIHRoZSBwYXJlbnQgdHlwZVxyXG4gICAgdGhpcy5tdXRhdGUoIG9wdGlvbnMgKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cHJlc3Npb25FeGNoYW5nZS5yZWdpc3RlciggJ1Nob3dTdWJ0cmFjdGlvbkljb24nLCBTaG93U3VidHJhY3Rpb25JY29uICk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBTaG93U3VidHJhY3Rpb25JY29uOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxTQUFTLE1BQU0sMENBQTBDO0FBQ2hFLE9BQU9DLGNBQWMsTUFBTSwrQ0FBK0M7QUFDMUUsT0FBT0MsV0FBVyxNQUFNLDRDQUE0QztBQUNwRSxTQUFTQyxJQUFJLEVBQUVDLFNBQVMsRUFBRUMsSUFBSSxRQUFRLG1DQUFtQztBQUN6RSxPQUFPQyxrQkFBa0IsTUFBTSw2QkFBNkI7O0FBRTVEO0FBQ0EsTUFBTUMsU0FBUyxHQUFHLElBQUlOLGNBQWMsQ0FBRTtFQUFFTyxJQUFJLEVBQUUsRUFBRTtFQUFFQyxNQUFNLEVBQUU7QUFBTyxDQUFFLENBQUM7QUFDcEUsTUFBTUMsMEJBQTBCLEdBQUcsNEJBQTRCO0FBQy9ELE1BQU1DLGtCQUFrQixHQUFHLENBQUM7QUFFNUIsTUFBTUMsbUJBQW1CLFNBQVNULElBQUksQ0FBQztFQUVyQztBQUNGO0VBQ0VVLFdBQVdBLENBQUEsRUFBRztJQUVaO0lBQ0EsS0FBSyxDQUFDLENBQUM7O0lBRVA7SUFDQSxNQUFNQyx1QkFBdUIsR0FBRyxJQUFJQyxtQkFBbUIsQ0FBRyxLQUFJYixXQUFXLENBQUNjLFdBQVksR0FBRyxDQUFDO0lBQzFGLElBQUksQ0FBQ0MsUUFBUSxDQUFFSCx1QkFBd0IsQ0FBQzs7SUFFeEM7SUFDQSxNQUFNSSxLQUFLLEdBQUcsSUFBSWxCLFNBQVMsQ0FBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUU7TUFDeENtQixJQUFJLEVBQUVMLHVCQUF1QixDQUFDTSxLQUFLLEdBQUcsQ0FBQztNQUN2Q0MsT0FBTyxFQUFFUCx1QkFBdUIsQ0FBQ1EsTUFBTSxHQUFHLENBQUM7TUFDM0NDLE1BQU0sRUFBRSxJQUFJO01BQ1pDLElBQUksRUFBRSxrQkFBa0I7TUFDeEJDLFNBQVMsRUFBRSxDQUFDO01BQ1pDLFVBQVUsRUFBRTtJQUNkLENBQUUsQ0FBQztJQUNILElBQUksQ0FBQ1QsUUFBUSxDQUFFQyxLQUFNLENBQUM7O0lBRXRCO0lBQ0EsSUFBSSxDQUFDRCxRQUFRLENBQUUsSUFBSUYsbUJBQW1CLENBQUcsR0FBRWIsV0FBVyxDQUFDeUIsS0FBTSxJQUFHLEVBQUU7TUFBRVIsSUFBSSxFQUFFRCxLQUFLLENBQUNFLEtBQUssR0FBRztJQUFFLENBQUUsQ0FBRSxDQUFDO0VBQ2pHO0FBQ0Y7QUFFQSxNQUFNTCxtQkFBbUIsU0FBU1gsU0FBUyxDQUFDO0VBRTFDO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7RUFDRVMsV0FBV0EsQ0FBRWUsSUFBSSxFQUFFQyxPQUFPLEVBQUc7SUFFM0I7SUFDQSxNQUFNQyxRQUFRLEdBQUcsSUFBSXpCLElBQUksQ0FBRXVCLElBQUksRUFBRTtNQUFFRyxJQUFJLEVBQUV4QjtJQUFVLENBQUUsQ0FBQzs7SUFFdEQ7SUFDQSxLQUFLLENBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRXVCLFFBQVEsQ0FBQ0UsS0FBSyxHQUFHLEdBQUcsRUFBRUYsUUFBUSxDQUFDUixNQUFNLEdBQUcsR0FBRyxFQUFFO01BQ3hERSxJQUFJLEVBQUVkLDBCQUEwQjtNQUNoQ3VCLFlBQVksRUFBRXRCO0lBQ2hCLENBQUUsQ0FBQzs7SUFFSDtJQUNBbUIsUUFBUSxDQUFDSSxNQUFNLEdBQUcsSUFBSSxDQUFDQSxNQUFNO0lBQzdCLElBQUksQ0FBQ2pCLFFBQVEsQ0FBRWEsUUFBUyxDQUFDOztJQUV6QjtJQUNBLElBQUksQ0FBQ0ssTUFBTSxDQUFFTixPQUFRLENBQUM7RUFDeEI7QUFDRjtBQUVBdkIsa0JBQWtCLENBQUM4QixRQUFRLENBQUUscUJBQXFCLEVBQUV4QixtQkFBb0IsQ0FBQztBQUV6RSxlQUFlQSxtQkFBbUIifQ==