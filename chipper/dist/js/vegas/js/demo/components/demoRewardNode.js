// Copyright 2022, University of Colorado Boulder

/**
 * Demo for RewardNode
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import { Node } from '../../../../scenery/js/imports.js';
import RewardNode from '../../RewardNode.js';
import stepTimer from '../../../../axon/js/stepTimer.js';
import BooleanProperty from '../../../../axon/js/BooleanProperty.js';
import TimeControlNode from '../../../../scenery-phet/js/TimeControlNode.js';
export default function demoRewardNode(layoutBounds) {
  return new DemoNode(layoutBounds);
}
class DemoNode extends Node {
  constructor(layoutBounds) {
    const rewardNode = new RewardNode();
    const isPlayingProperty = new BooleanProperty(true);
    const timeControls = new TimeControlNode(isPlayingProperty, {
      playPauseStepButtonOptions: {
        stepForwardButtonOptions: {
          listener: () => rewardNode.step(0.1)
        }
      },
      centerX: layoutBounds.centerX,
      bottom: layoutBounds.bottom - 20
    });
    const stepTimerListener = dt => {
      if (isPlayingProperty.value) {
        rewardNode.step(dt);
      }
    };
    stepTimer.addListener(stepTimerListener);
    super({
      children: [rewardNode, timeControls]
    });
    this.disposeDemoNode = () => {
      rewardNode.dispose(); // must be disposed in the demo, see https://github.com/phetsims/vegas/issues/111
      isPlayingProperty.dispose();
      timeControls.dispose();
      if (stepTimer.hasListener(stepTimerListener)) {
        stepTimer.removeListener(stepTimerListener);
      }
    };
  }
  dispose() {
    this.disposeDemoNode();
    super.dispose();
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJOb2RlIiwiUmV3YXJkTm9kZSIsInN0ZXBUaW1lciIsIkJvb2xlYW5Qcm9wZXJ0eSIsIlRpbWVDb250cm9sTm9kZSIsImRlbW9SZXdhcmROb2RlIiwibGF5b3V0Qm91bmRzIiwiRGVtb05vZGUiLCJjb25zdHJ1Y3RvciIsInJld2FyZE5vZGUiLCJpc1BsYXlpbmdQcm9wZXJ0eSIsInRpbWVDb250cm9scyIsInBsYXlQYXVzZVN0ZXBCdXR0b25PcHRpb25zIiwic3RlcEZvcndhcmRCdXR0b25PcHRpb25zIiwibGlzdGVuZXIiLCJzdGVwIiwiY2VudGVyWCIsImJvdHRvbSIsInN0ZXBUaW1lckxpc3RlbmVyIiwiZHQiLCJ2YWx1ZSIsImFkZExpc3RlbmVyIiwiY2hpbGRyZW4iLCJkaXNwb3NlRGVtb05vZGUiLCJkaXNwb3NlIiwiaGFzTGlzdGVuZXIiLCJyZW1vdmVMaXN0ZW5lciJdLCJzb3VyY2VzIjpbImRlbW9SZXdhcmROb2RlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIyLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBEZW1vIGZvciBSZXdhcmROb2RlXHJcbiAqXHJcbiAqIEBhdXRob3IgQ2hyaXMgTWFsbGV5IChQaXhlbFpvb20sIEluYy4pXHJcbiAqL1xyXG5cclxuaW1wb3J0IEJvdW5kczIgZnJvbSAnLi4vLi4vLi4vLi4vZG90L2pzL0JvdW5kczIuanMnO1xyXG5pbXBvcnQgeyBOb2RlIH0gZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IFJld2FyZE5vZGUgZnJvbSAnLi4vLi4vUmV3YXJkTm9kZS5qcyc7XHJcbmltcG9ydCBzdGVwVGltZXIgZnJvbSAnLi4vLi4vLi4vLi4vYXhvbi9qcy9zdGVwVGltZXIuanMnO1xyXG5pbXBvcnQgQm9vbGVhblByb3BlcnR5IGZyb20gJy4uLy4uLy4uLy4uL2F4b24vanMvQm9vbGVhblByb3BlcnR5LmpzJztcclxuaW1wb3J0IFRpbWVDb250cm9sTm9kZSBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5LXBoZXQvanMvVGltZUNvbnRyb2xOb2RlLmpzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGRlbW9SZXdhcmROb2RlKCBsYXlvdXRCb3VuZHM6IEJvdW5kczIgKTogTm9kZSB7XHJcbiAgcmV0dXJuIG5ldyBEZW1vTm9kZSggbGF5b3V0Qm91bmRzICk7XHJcbn1cclxuXHJcbmNsYXNzIERlbW9Ob2RlIGV4dGVuZHMgTm9kZSB7XHJcblxyXG4gIHByaXZhdGUgcmVhZG9ubHkgZGlzcG9zZURlbW9Ob2RlOiAoKSA9PiB2b2lkO1xyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoIGxheW91dEJvdW5kczogQm91bmRzMiApIHtcclxuXHJcbiAgICBjb25zdCByZXdhcmROb2RlID0gbmV3IFJld2FyZE5vZGUoKTtcclxuXHJcbiAgICBjb25zdCBpc1BsYXlpbmdQcm9wZXJ0eSA9IG5ldyBCb29sZWFuUHJvcGVydHkoIHRydWUgKTtcclxuXHJcbiAgICBjb25zdCB0aW1lQ29udHJvbHMgPSBuZXcgVGltZUNvbnRyb2xOb2RlKCBpc1BsYXlpbmdQcm9wZXJ0eSwge1xyXG4gICAgICBwbGF5UGF1c2VTdGVwQnV0dG9uT3B0aW9uczoge1xyXG4gICAgICAgIHN0ZXBGb3J3YXJkQnV0dG9uT3B0aW9uczoge1xyXG4gICAgICAgICAgbGlzdGVuZXI6ICgpID0+IHJld2FyZE5vZGUuc3RlcCggMC4xIClcclxuICAgICAgICB9XHJcbiAgICAgIH0sXHJcbiAgICAgIGNlbnRlclg6IGxheW91dEJvdW5kcy5jZW50ZXJYLFxyXG4gICAgICBib3R0b206IGxheW91dEJvdW5kcy5ib3R0b20gLSAyMFxyXG4gICAgfSApO1xyXG5cclxuICAgIGNvbnN0IHN0ZXBUaW1lckxpc3RlbmVyID0gKCBkdDogbnVtYmVyICkgPT4ge1xyXG4gICAgICBpZiAoIGlzUGxheWluZ1Byb3BlcnR5LnZhbHVlICkge1xyXG4gICAgICAgIHJld2FyZE5vZGUuc3RlcCggZHQgKTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuICAgIHN0ZXBUaW1lci5hZGRMaXN0ZW5lciggc3RlcFRpbWVyTGlzdGVuZXIgKTtcclxuXHJcbiAgICBzdXBlcigge1xyXG4gICAgICBjaGlsZHJlbjogWyByZXdhcmROb2RlLCB0aW1lQ29udHJvbHMgXVxyXG4gICAgfSApO1xyXG5cclxuICAgIHRoaXMuZGlzcG9zZURlbW9Ob2RlID0gKCkgPT4ge1xyXG4gICAgICByZXdhcmROb2RlLmRpc3Bvc2UoKTsgLy8gbXVzdCBiZSBkaXNwb3NlZCBpbiB0aGUgZGVtbywgc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9waGV0c2ltcy92ZWdhcy9pc3N1ZXMvMTExXHJcbiAgICAgIGlzUGxheWluZ1Byb3BlcnR5LmRpc3Bvc2UoKTtcclxuICAgICAgdGltZUNvbnRyb2xzLmRpc3Bvc2UoKTtcclxuICAgICAgaWYgKCBzdGVwVGltZXIuaGFzTGlzdGVuZXIoIHN0ZXBUaW1lckxpc3RlbmVyICkgKSB7XHJcbiAgICAgICAgc3RlcFRpbWVyLnJlbW92ZUxpc3RlbmVyKCBzdGVwVGltZXJMaXN0ZW5lciApO1xyXG4gICAgICB9XHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgcHVibGljIG92ZXJyaWRlIGRpc3Bvc2UoKTogdm9pZCB7XHJcbiAgICB0aGlzLmRpc3Bvc2VEZW1vTm9kZSgpO1xyXG4gICAgc3VwZXIuZGlzcG9zZSgpO1xyXG4gIH1cclxufSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFHQSxTQUFTQSxJQUFJLFFBQVEsbUNBQW1DO0FBQ3hELE9BQU9DLFVBQVUsTUFBTSxxQkFBcUI7QUFDNUMsT0FBT0MsU0FBUyxNQUFNLGtDQUFrQztBQUN4RCxPQUFPQyxlQUFlLE1BQU0sd0NBQXdDO0FBQ3BFLE9BQU9DLGVBQWUsTUFBTSxnREFBZ0Q7QUFFNUUsZUFBZSxTQUFTQyxjQUFjQSxDQUFFQyxZQUFxQixFQUFTO0VBQ3BFLE9BQU8sSUFBSUMsUUFBUSxDQUFFRCxZQUFhLENBQUM7QUFDckM7QUFFQSxNQUFNQyxRQUFRLFNBQVNQLElBQUksQ0FBQztFQUluQlEsV0FBV0EsQ0FBRUYsWUFBcUIsRUFBRztJQUUxQyxNQUFNRyxVQUFVLEdBQUcsSUFBSVIsVUFBVSxDQUFDLENBQUM7SUFFbkMsTUFBTVMsaUJBQWlCLEdBQUcsSUFBSVAsZUFBZSxDQUFFLElBQUssQ0FBQztJQUVyRCxNQUFNUSxZQUFZLEdBQUcsSUFBSVAsZUFBZSxDQUFFTSxpQkFBaUIsRUFBRTtNQUMzREUsMEJBQTBCLEVBQUU7UUFDMUJDLHdCQUF3QixFQUFFO1VBQ3hCQyxRQUFRLEVBQUVBLENBQUEsS0FBTUwsVUFBVSxDQUFDTSxJQUFJLENBQUUsR0FBSTtRQUN2QztNQUNGLENBQUM7TUFDREMsT0FBTyxFQUFFVixZQUFZLENBQUNVLE9BQU87TUFDN0JDLE1BQU0sRUFBRVgsWUFBWSxDQUFDVyxNQUFNLEdBQUc7SUFDaEMsQ0FBRSxDQUFDO0lBRUgsTUFBTUMsaUJBQWlCLEdBQUtDLEVBQVUsSUFBTTtNQUMxQyxJQUFLVCxpQkFBaUIsQ0FBQ1UsS0FBSyxFQUFHO1FBQzdCWCxVQUFVLENBQUNNLElBQUksQ0FBRUksRUFBRyxDQUFDO01BQ3ZCO0lBQ0YsQ0FBQztJQUNEakIsU0FBUyxDQUFDbUIsV0FBVyxDQUFFSCxpQkFBa0IsQ0FBQztJQUUxQyxLQUFLLENBQUU7TUFDTEksUUFBUSxFQUFFLENBQUViLFVBQVUsRUFBRUUsWUFBWTtJQUN0QyxDQUFFLENBQUM7SUFFSCxJQUFJLENBQUNZLGVBQWUsR0FBRyxNQUFNO01BQzNCZCxVQUFVLENBQUNlLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztNQUN0QmQsaUJBQWlCLENBQUNjLE9BQU8sQ0FBQyxDQUFDO01BQzNCYixZQUFZLENBQUNhLE9BQU8sQ0FBQyxDQUFDO01BQ3RCLElBQUt0QixTQUFTLENBQUN1QixXQUFXLENBQUVQLGlCQUFrQixDQUFDLEVBQUc7UUFDaERoQixTQUFTLENBQUN3QixjQUFjLENBQUVSLGlCQUFrQixDQUFDO01BQy9DO0lBQ0YsQ0FBQztFQUNIO0VBRWdCTSxPQUFPQSxDQUFBLEVBQVM7SUFDOUIsSUFBSSxDQUFDRCxlQUFlLENBQUMsQ0FBQztJQUN0QixLQUFLLENBQUNDLE9BQU8sQ0FBQyxDQUFDO0VBQ2pCO0FBQ0YifQ==