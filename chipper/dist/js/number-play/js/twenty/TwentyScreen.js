// Copyright 2019-2023, University of Colorado Boulder

/**
 * The 'Twenty' screen.
 *
 * @author Chris Klusendorf (PhET Interactive Simulations)
 */

import Screen from '../../../joist/js/Screen.js';
import ScreenIcon from '../../../joist/js/ScreenIcon.js';
import NumberSuiteCommonColors from '../../../number-suite-common/js/common/NumberSuiteCommonColors.js';
import { Image } from '../../../scenery/js/imports.js';
import twentyScreenIcon_png from '../../images/twentyScreenIcon_png.js';
import numberPlay from '../numberPlay.js';
import NumberPlayStrings from '../NumberPlayStrings.js';
import TwentyModel from './model/TwentyModel.js';
import TwentyScreenView from './view/TwentyScreenView.js';
class TwentyScreen extends Screen {
  constructor(tandem) {
    const screenOptions = {
      name: NumberPlayStrings.screen.twentyStringProperty,
      backgroundColorProperty: NumberSuiteCommonColors.lightOrangeBackgroundColorProperty,
      homeScreenIcon: new ScreenIcon(new Image(twentyScreenIcon_png), {
        maxIconWidthProportion: 1,
        maxIconHeightProportion: 1
      }),
      tandem: tandem
    };
    super(() => new TwentyModel(tandem.createTandem('model')), model => new TwentyScreenView(model, tandem.createTandem('view')), screenOptions);
  }
}
numberPlay.register('TwentyScreen', TwentyScreen);
export default TwentyScreen;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTY3JlZW4iLCJTY3JlZW5JY29uIiwiTnVtYmVyU3VpdGVDb21tb25Db2xvcnMiLCJJbWFnZSIsInR3ZW50eVNjcmVlbkljb25fcG5nIiwibnVtYmVyUGxheSIsIk51bWJlclBsYXlTdHJpbmdzIiwiVHdlbnR5TW9kZWwiLCJUd2VudHlTY3JlZW5WaWV3IiwiVHdlbnR5U2NyZWVuIiwiY29uc3RydWN0b3IiLCJ0YW5kZW0iLCJzY3JlZW5PcHRpb25zIiwibmFtZSIsInNjcmVlbiIsInR3ZW50eVN0cmluZ1Byb3BlcnR5IiwiYmFja2dyb3VuZENvbG9yUHJvcGVydHkiLCJsaWdodE9yYW5nZUJhY2tncm91bmRDb2xvclByb3BlcnR5IiwiaG9tZVNjcmVlbkljb24iLCJtYXhJY29uV2lkdGhQcm9wb3J0aW9uIiwibWF4SWNvbkhlaWdodFByb3BvcnRpb24iLCJjcmVhdGVUYW5kZW0iLCJtb2RlbCIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiVHdlbnR5U2NyZWVuLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE5LTIwMjMsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIFRoZSAnVHdlbnR5JyBzY3JlZW4uXHJcbiAqXHJcbiAqIEBhdXRob3IgQ2hyaXMgS2x1c2VuZG9yZiAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcclxuICovXHJcblxyXG5pbXBvcnQgU2NyZWVuIGZyb20gJy4uLy4uLy4uL2pvaXN0L2pzL1NjcmVlbi5qcyc7XHJcbmltcG9ydCBTY3JlZW5JY29uIGZyb20gJy4uLy4uLy4uL2pvaXN0L2pzL1NjcmVlbkljb24uanMnO1xyXG5pbXBvcnQgTnVtYmVyU3VpdGVDb21tb25Db2xvcnMgZnJvbSAnLi4vLi4vLi4vbnVtYmVyLXN1aXRlLWNvbW1vbi9qcy9jb21tb24vTnVtYmVyU3VpdGVDb21tb25Db2xvcnMuanMnO1xyXG5pbXBvcnQgeyBJbWFnZSB9IGZyb20gJy4uLy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XHJcbmltcG9ydCBUYW5kZW0gZnJvbSAnLi4vLi4vLi4vdGFuZGVtL2pzL1RhbmRlbS5qcyc7XHJcbmltcG9ydCB0d2VudHlTY3JlZW5JY29uX3BuZyBmcm9tICcuLi8uLi9pbWFnZXMvdHdlbnR5U2NyZWVuSWNvbl9wbmcuanMnO1xyXG5pbXBvcnQgTnVtYmVyUGxheVNjcmVlblZpZXcgZnJvbSAnLi4vY29tbW9uL3ZpZXcvTnVtYmVyUGxheVNjcmVlblZpZXcuanMnO1xyXG5pbXBvcnQgbnVtYmVyUGxheSBmcm9tICcuLi9udW1iZXJQbGF5LmpzJztcclxuaW1wb3J0IE51bWJlclBsYXlTdHJpbmdzIGZyb20gJy4uL051bWJlclBsYXlTdHJpbmdzLmpzJztcclxuaW1wb3J0IFR3ZW50eU1vZGVsIGZyb20gJy4vbW9kZWwvVHdlbnR5TW9kZWwuanMnO1xyXG5pbXBvcnQgVHdlbnR5U2NyZWVuVmlldyBmcm9tICcuL3ZpZXcvVHdlbnR5U2NyZWVuVmlldy5qcyc7XHJcblxyXG5jbGFzcyBUd2VudHlTY3JlZW4gZXh0ZW5kcyBTY3JlZW48VHdlbnR5TW9kZWwsIE51bWJlclBsYXlTY3JlZW5WaWV3PiB7XHJcblxyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvciggdGFuZGVtOiBUYW5kZW0gKSB7XHJcblxyXG4gICAgY29uc3Qgc2NyZWVuT3B0aW9ucyA9IHtcclxuICAgICAgbmFtZTogTnVtYmVyUGxheVN0cmluZ3Muc2NyZWVuLnR3ZW50eVN0cmluZ1Byb3BlcnR5LFxyXG4gICAgICBiYWNrZ3JvdW5kQ29sb3JQcm9wZXJ0eTogTnVtYmVyU3VpdGVDb21tb25Db2xvcnMubGlnaHRPcmFuZ2VCYWNrZ3JvdW5kQ29sb3JQcm9wZXJ0eSxcclxuICAgICAgaG9tZVNjcmVlbkljb246IG5ldyBTY3JlZW5JY29uKCBuZXcgSW1hZ2UoIHR3ZW50eVNjcmVlbkljb25fcG5nICksIHtcclxuICAgICAgICBtYXhJY29uV2lkdGhQcm9wb3J0aW9uOiAxLFxyXG4gICAgICAgIG1heEljb25IZWlnaHRQcm9wb3J0aW9uOiAxXHJcbiAgICAgIH0gKSxcclxuICAgICAgdGFuZGVtOiB0YW5kZW1cclxuICAgIH07XHJcblxyXG4gICAgc3VwZXIoXHJcbiAgICAgICgpID0+IG5ldyBUd2VudHlNb2RlbCggdGFuZGVtLmNyZWF0ZVRhbmRlbSggJ21vZGVsJyApICksXHJcbiAgICAgIG1vZGVsID0+IG5ldyBUd2VudHlTY3JlZW5WaWV3KCBtb2RlbCwgdGFuZGVtLmNyZWF0ZVRhbmRlbSggJ3ZpZXcnICkgKSxcclxuICAgICAgc2NyZWVuT3B0aW9uc1xyXG4gICAgKTtcclxuICB9XHJcbn1cclxuXHJcbm51bWJlclBsYXkucmVnaXN0ZXIoICdUd2VudHlTY3JlZW4nLCBUd2VudHlTY3JlZW4gKTtcclxuZXhwb3J0IGRlZmF1bHQgVHdlbnR5U2NyZWVuOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxNQUFNLE1BQU0sNkJBQTZCO0FBQ2hELE9BQU9DLFVBQVUsTUFBTSxpQ0FBaUM7QUFDeEQsT0FBT0MsdUJBQXVCLE1BQU0sbUVBQW1FO0FBQ3ZHLFNBQVNDLEtBQUssUUFBUSxnQ0FBZ0M7QUFFdEQsT0FBT0Msb0JBQW9CLE1BQU0sc0NBQXNDO0FBRXZFLE9BQU9DLFVBQVUsTUFBTSxrQkFBa0I7QUFDekMsT0FBT0MsaUJBQWlCLE1BQU0seUJBQXlCO0FBQ3ZELE9BQU9DLFdBQVcsTUFBTSx3QkFBd0I7QUFDaEQsT0FBT0MsZ0JBQWdCLE1BQU0sNEJBQTRCO0FBRXpELE1BQU1DLFlBQVksU0FBU1QsTUFBTSxDQUFvQztFQUU1RFUsV0FBV0EsQ0FBRUMsTUFBYyxFQUFHO0lBRW5DLE1BQU1DLGFBQWEsR0FBRztNQUNwQkMsSUFBSSxFQUFFUCxpQkFBaUIsQ0FBQ1EsTUFBTSxDQUFDQyxvQkFBb0I7TUFDbkRDLHVCQUF1QixFQUFFZCx1QkFBdUIsQ0FBQ2Usa0NBQWtDO01BQ25GQyxjQUFjLEVBQUUsSUFBSWpCLFVBQVUsQ0FBRSxJQUFJRSxLQUFLLENBQUVDLG9CQUFxQixDQUFDLEVBQUU7UUFDakVlLHNCQUFzQixFQUFFLENBQUM7UUFDekJDLHVCQUF1QixFQUFFO01BQzNCLENBQUUsQ0FBQztNQUNIVCxNQUFNLEVBQUVBO0lBQ1YsQ0FBQztJQUVELEtBQUssQ0FDSCxNQUFNLElBQUlKLFdBQVcsQ0FBRUksTUFBTSxDQUFDVSxZQUFZLENBQUUsT0FBUSxDQUFFLENBQUMsRUFDdkRDLEtBQUssSUFBSSxJQUFJZCxnQkFBZ0IsQ0FBRWMsS0FBSyxFQUFFWCxNQUFNLENBQUNVLFlBQVksQ0FBRSxNQUFPLENBQUUsQ0FBQyxFQUNyRVQsYUFDRixDQUFDO0VBQ0g7QUFDRjtBQUVBUCxVQUFVLENBQUNrQixRQUFRLENBQUUsY0FBYyxFQUFFZCxZQUFhLENBQUM7QUFDbkQsZUFBZUEsWUFBWSJ9