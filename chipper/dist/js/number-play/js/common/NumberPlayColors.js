// Copyright 2021-2022, University of Colorado Boulder

/**
 * NumberPlayColors defines the colors for this simulation.
 *
 * @author Chris Klusendorf (PhET Interactive Simulations)
 */

import { Color, ProfileColorProperty } from '../../../scenery/js/imports.js';
import numberPlay from '../numberPlay.js';
const NumberPlayColors = {
  // backgrounds for screens, accordion boxes, and more. they are named by color instead of by what they are
  // used for because so many are reused for multiple applications and should remain in sync.
  purpleBackgroundColorProperty: new ProfileColorProperty(numberPlay, 'purpleBackgroundColor', {
    default: new Color(214, 209, 255)
  }),
  orangeBackgroundColorProperty: new ProfileColorProperty(numberPlay, 'orangeBackgroundColor', {
    default: new Color(249, 210, 172)
  }),
  pinkBackgroundColorProperty: new ProfileColorProperty(numberPlay, 'pinkBackgroundColor', {
    default: new Color(252, 220, 255)
  }),
  blueBackgroundColorProperty: new ProfileColorProperty(numberPlay, 'blueBackgroundColor', {
    default: new Color(204, 239, 255)
  }),
  // game screen level colors
  countingGameColorProperty: new ProfileColorProperty(numberPlay, 'countingGameColor', {
    default: new Color(242, 142, 129)
  }),
  countingGameLightColorProperty: new ProfileColorProperty(numberPlay, 'countingGameLightColor', {
    default: new Color(245, 188, 181)
  }),
  subitizeGameColorProperty: new ProfileColorProperty(numberPlay, 'subitizeGameColor', {
    default: new Color(148, 133, 255)
  }),
  subitizeGameLightColorProperty: new ProfileColorProperty(numberPlay, 'subitizeGameLightColor', {
    default: new Color(195, 193, 247)
  })
};
numberPlay.register('NumberPlayColors', NumberPlayColors);
export default NumberPlayColors;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJDb2xvciIsIlByb2ZpbGVDb2xvclByb3BlcnR5IiwibnVtYmVyUGxheSIsIk51bWJlclBsYXlDb2xvcnMiLCJwdXJwbGVCYWNrZ3JvdW5kQ29sb3JQcm9wZXJ0eSIsImRlZmF1bHQiLCJvcmFuZ2VCYWNrZ3JvdW5kQ29sb3JQcm9wZXJ0eSIsInBpbmtCYWNrZ3JvdW5kQ29sb3JQcm9wZXJ0eSIsImJsdWVCYWNrZ3JvdW5kQ29sb3JQcm9wZXJ0eSIsImNvdW50aW5nR2FtZUNvbG9yUHJvcGVydHkiLCJjb3VudGluZ0dhbWVMaWdodENvbG9yUHJvcGVydHkiLCJzdWJpdGl6ZUdhbWVDb2xvclByb3BlcnR5Iiwic3ViaXRpemVHYW1lTGlnaHRDb2xvclByb3BlcnR5IiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJOdW1iZXJQbGF5Q29sb3JzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjIsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIE51bWJlclBsYXlDb2xvcnMgZGVmaW5lcyB0aGUgY29sb3JzIGZvciB0aGlzIHNpbXVsYXRpb24uXHJcbiAqXHJcbiAqIEBhdXRob3IgQ2hyaXMgS2x1c2VuZG9yZiAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcclxuICovXHJcblxyXG5pbXBvcnQgeyBDb2xvciwgUHJvZmlsZUNvbG9yUHJvcGVydHkgfSBmcm9tICcuLi8uLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgbnVtYmVyUGxheSBmcm9tICcuLi9udW1iZXJQbGF5LmpzJztcclxuXHJcbmNvbnN0IE51bWJlclBsYXlDb2xvcnMgPSB7XHJcblxyXG4gIC8vIGJhY2tncm91bmRzIGZvciBzY3JlZW5zLCBhY2NvcmRpb24gYm94ZXMsIGFuZCBtb3JlLiB0aGV5IGFyZSBuYW1lZCBieSBjb2xvciBpbnN0ZWFkIG9mIGJ5IHdoYXQgdGhleSBhcmVcclxuICAvLyB1c2VkIGZvciBiZWNhdXNlIHNvIG1hbnkgYXJlIHJldXNlZCBmb3IgbXVsdGlwbGUgYXBwbGljYXRpb25zIGFuZCBzaG91bGQgcmVtYWluIGluIHN5bmMuXHJcbiAgcHVycGxlQmFja2dyb3VuZENvbG9yUHJvcGVydHk6IG5ldyBQcm9maWxlQ29sb3JQcm9wZXJ0eSggbnVtYmVyUGxheSwgJ3B1cnBsZUJhY2tncm91bmRDb2xvcicsIHtcclxuICAgIGRlZmF1bHQ6IG5ldyBDb2xvciggMjE0LCAyMDksIDI1NSApXHJcbiAgfSApLFxyXG4gIG9yYW5nZUJhY2tncm91bmRDb2xvclByb3BlcnR5OiBuZXcgUHJvZmlsZUNvbG9yUHJvcGVydHkoIG51bWJlclBsYXksICdvcmFuZ2VCYWNrZ3JvdW5kQ29sb3InLCB7XHJcbiAgICBkZWZhdWx0OiBuZXcgQ29sb3IoIDI0OSwgMjEwLCAxNzIgKVxyXG4gIH0gKSxcclxuICBwaW5rQmFja2dyb3VuZENvbG9yUHJvcGVydHk6IG5ldyBQcm9maWxlQ29sb3JQcm9wZXJ0eSggbnVtYmVyUGxheSwgJ3BpbmtCYWNrZ3JvdW5kQ29sb3InLCB7XHJcbiAgICBkZWZhdWx0OiBuZXcgQ29sb3IoIDI1MiwgMjIwLCAyNTUgKVxyXG4gIH0gKSxcclxuICBibHVlQmFja2dyb3VuZENvbG9yUHJvcGVydHk6IG5ldyBQcm9maWxlQ29sb3JQcm9wZXJ0eSggbnVtYmVyUGxheSwgJ2JsdWVCYWNrZ3JvdW5kQ29sb3InLCB7XHJcbiAgICBkZWZhdWx0OiBuZXcgQ29sb3IoIDIwNCwgMjM5LCAyNTUgKVxyXG4gIH0gKSxcclxuXHJcbiAgLy8gZ2FtZSBzY3JlZW4gbGV2ZWwgY29sb3JzXHJcbiAgY291bnRpbmdHYW1lQ29sb3JQcm9wZXJ0eTogbmV3IFByb2ZpbGVDb2xvclByb3BlcnR5KCBudW1iZXJQbGF5LCAnY291bnRpbmdHYW1lQ29sb3InLCB7XHJcbiAgICBkZWZhdWx0OiBuZXcgQ29sb3IoIDI0MiwgMTQyLCAxMjkgKVxyXG4gIH0gKSxcclxuICBjb3VudGluZ0dhbWVMaWdodENvbG9yUHJvcGVydHk6IG5ldyBQcm9maWxlQ29sb3JQcm9wZXJ0eSggbnVtYmVyUGxheSwgJ2NvdW50aW5nR2FtZUxpZ2h0Q29sb3InLCB7XHJcbiAgICBkZWZhdWx0OiBuZXcgQ29sb3IoIDI0NSwgMTg4LCAxODEgKVxyXG4gIH0gKSxcclxuICBzdWJpdGl6ZUdhbWVDb2xvclByb3BlcnR5OiBuZXcgUHJvZmlsZUNvbG9yUHJvcGVydHkoIG51bWJlclBsYXksICdzdWJpdGl6ZUdhbWVDb2xvcicsIHtcclxuICAgIGRlZmF1bHQ6IG5ldyBDb2xvciggMTQ4LCAxMzMsIDI1NSApXHJcbiAgfSApLFxyXG4gIHN1Yml0aXplR2FtZUxpZ2h0Q29sb3JQcm9wZXJ0eTogbmV3IFByb2ZpbGVDb2xvclByb3BlcnR5KCBudW1iZXJQbGF5LCAnc3ViaXRpemVHYW1lTGlnaHRDb2xvcicsIHtcclxuICAgIGRlZmF1bHQ6IG5ldyBDb2xvciggMTk1LCAxOTMsIDI0NyApXHJcbiAgfSApXHJcbn07XHJcblxyXG5udW1iZXJQbGF5LnJlZ2lzdGVyKCAnTnVtYmVyUGxheUNvbG9ycycsIE51bWJlclBsYXlDb2xvcnMgKTtcclxuZXhwb3J0IGRlZmF1bHQgTnVtYmVyUGxheUNvbG9yczsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsU0FBU0EsS0FBSyxFQUFFQyxvQkFBb0IsUUFBUSxnQ0FBZ0M7QUFDNUUsT0FBT0MsVUFBVSxNQUFNLGtCQUFrQjtBQUV6QyxNQUFNQyxnQkFBZ0IsR0FBRztFQUV2QjtFQUNBO0VBQ0FDLDZCQUE2QixFQUFFLElBQUlILG9CQUFvQixDQUFFQyxVQUFVLEVBQUUsdUJBQXVCLEVBQUU7SUFDNUZHLE9BQU8sRUFBRSxJQUFJTCxLQUFLLENBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFJO0VBQ3BDLENBQUUsQ0FBQztFQUNITSw2QkFBNkIsRUFBRSxJQUFJTCxvQkFBb0IsQ0FBRUMsVUFBVSxFQUFFLHVCQUF1QixFQUFFO0lBQzVGRyxPQUFPLEVBQUUsSUFBSUwsS0FBSyxDQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBSTtFQUNwQyxDQUFFLENBQUM7RUFDSE8sMkJBQTJCLEVBQUUsSUFBSU4sb0JBQW9CLENBQUVDLFVBQVUsRUFBRSxxQkFBcUIsRUFBRTtJQUN4RkcsT0FBTyxFQUFFLElBQUlMLEtBQUssQ0FBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUk7RUFDcEMsQ0FBRSxDQUFDO0VBQ0hRLDJCQUEyQixFQUFFLElBQUlQLG9CQUFvQixDQUFFQyxVQUFVLEVBQUUscUJBQXFCLEVBQUU7SUFDeEZHLE9BQU8sRUFBRSxJQUFJTCxLQUFLLENBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFJO0VBQ3BDLENBQUUsQ0FBQztFQUVIO0VBQ0FTLHlCQUF5QixFQUFFLElBQUlSLG9CQUFvQixDQUFFQyxVQUFVLEVBQUUsbUJBQW1CLEVBQUU7SUFDcEZHLE9BQU8sRUFBRSxJQUFJTCxLQUFLLENBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFJO0VBQ3BDLENBQUUsQ0FBQztFQUNIVSw4QkFBOEIsRUFBRSxJQUFJVCxvQkFBb0IsQ0FBRUMsVUFBVSxFQUFFLHdCQUF3QixFQUFFO0lBQzlGRyxPQUFPLEVBQUUsSUFBSUwsS0FBSyxDQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBSTtFQUNwQyxDQUFFLENBQUM7RUFDSFcseUJBQXlCLEVBQUUsSUFBSVYsb0JBQW9CLENBQUVDLFVBQVUsRUFBRSxtQkFBbUIsRUFBRTtJQUNwRkcsT0FBTyxFQUFFLElBQUlMLEtBQUssQ0FBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUk7RUFDcEMsQ0FBRSxDQUFDO0VBQ0hZLDhCQUE4QixFQUFFLElBQUlYLG9CQUFvQixDQUFFQyxVQUFVLEVBQUUsd0JBQXdCLEVBQUU7SUFDOUZHLE9BQU8sRUFBRSxJQUFJTCxLQUFLLENBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFJO0VBQ3BDLENBQUU7QUFDSixDQUFDO0FBRURFLFVBQVUsQ0FBQ1csUUFBUSxDQUFFLGtCQUFrQixFQUFFVixnQkFBaUIsQ0FBQztBQUMzRCxlQUFlQSxnQkFBZ0IifQ==