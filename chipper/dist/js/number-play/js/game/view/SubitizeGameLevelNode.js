// Copyright 2021-2023, University of Colorado Boulder

/**
 * SubitizeGameLevelNode is the class for a 'Subitize' game level view.
 *
 * @author Chris Klusendorf (PhET Interactive Simulations)
 * @author Luisa Vargas
 */

import numberPlay from '../../numberPlay.js';
import NumberPlayGameLevelNode from './NumberPlayGameLevelNode.js';
import SubitizerNode from './SubitizerNode.js';
import NumberPlayGameAnswerButtons from './NumberPlayGameAnswerButtons.js';
import NumberPlayColors from '../../common/NumberPlayColors.js';
class SubitizeGameLevelNode extends NumberPlayGameLevelNode {
  constructor(level, levelProperty, rewardDialog, layoutBounds, visibleBoundsProperty) {
    super(level, levelProperty, layoutBounds, visibleBoundsProperty, {
      statusBarOptions: {
        barFill: NumberPlayColors.subitizeGameColorProperty
      }
    });

    // create and add the answerButtons
    this.answerButtons = new NumberPlayGameAnswerButtons(level, this.pointAwardedNodeVisibleProperty, rewardDialog, () => {
      this.setFrownyFaceVisibility(false);
      level.subitizer.isInputEnabledProperty.value = false;
      level.subitizer.isShapeVisibleProperty.value = true;
    }, () => this.setFrownyFaceVisibility(true), {
      buttonColor: NumberPlayColors.subitizeGameLightColorProperty,
      buttonSpacing: 40,
      dependencyEnabledProperty: level.subitizer.isInputEnabledProperty
    });
    this.answerButtons.centerX = layoutBounds.centerX;
    this.answerButtons.bottom = layoutBounds.maxY - NumberPlayGameLevelNode.ANSWER_BUTTONS_BOTTOM_MARGIN_Y;
    this.addChild(this.answerButtons);

    // create and add the subitizerNode
    const subitizerNode = new SubitizerNode(level.subitizer, level.isChallengeSolvedProperty, () => this.newChallenge());
    subitizerNode.centerX = layoutBounds.centerX;
    subitizerNode.bottom = this.answerButtons.top - NumberPlayGameLevelNode.GAME_AREA_NODE_BOTTOM_MARGIN_Y;
    this.addChild(subitizerNode);
  }
  dispose() {
    assert && assert(false, 'dispose is not supported, exists for the lifetime of the sim');
    super.dispose();
  }
}
numberPlay.register('SubitizeGameLevelNode', SubitizeGameLevelNode);
export default SubitizeGameLevelNode;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJudW1iZXJQbGF5IiwiTnVtYmVyUGxheUdhbWVMZXZlbE5vZGUiLCJTdWJpdGl6ZXJOb2RlIiwiTnVtYmVyUGxheUdhbWVBbnN3ZXJCdXR0b25zIiwiTnVtYmVyUGxheUNvbG9ycyIsIlN1Yml0aXplR2FtZUxldmVsTm9kZSIsImNvbnN0cnVjdG9yIiwibGV2ZWwiLCJsZXZlbFByb3BlcnR5IiwicmV3YXJkRGlhbG9nIiwibGF5b3V0Qm91bmRzIiwidmlzaWJsZUJvdW5kc1Byb3BlcnR5Iiwic3RhdHVzQmFyT3B0aW9ucyIsImJhckZpbGwiLCJzdWJpdGl6ZUdhbWVDb2xvclByb3BlcnR5IiwiYW5zd2VyQnV0dG9ucyIsInBvaW50QXdhcmRlZE5vZGVWaXNpYmxlUHJvcGVydHkiLCJzZXRGcm93bnlGYWNlVmlzaWJpbGl0eSIsInN1Yml0aXplciIsImlzSW5wdXRFbmFibGVkUHJvcGVydHkiLCJ2YWx1ZSIsImlzU2hhcGVWaXNpYmxlUHJvcGVydHkiLCJidXR0b25Db2xvciIsInN1Yml0aXplR2FtZUxpZ2h0Q29sb3JQcm9wZXJ0eSIsImJ1dHRvblNwYWNpbmciLCJkZXBlbmRlbmN5RW5hYmxlZFByb3BlcnR5IiwiY2VudGVyWCIsImJvdHRvbSIsIm1heFkiLCJBTlNXRVJfQlVUVE9OU19CT1RUT01fTUFSR0lOX1kiLCJhZGRDaGlsZCIsInN1Yml0aXplck5vZGUiLCJpc0NoYWxsZW5nZVNvbHZlZFByb3BlcnR5IiwibmV3Q2hhbGxlbmdlIiwidG9wIiwiR0FNRV9BUkVBX05PREVfQk9UVE9NX01BUkdJTl9ZIiwiZGlzcG9zZSIsImFzc2VydCIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiU3ViaXRpemVHYW1lTGV2ZWxOb2RlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjMsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIFN1Yml0aXplR2FtZUxldmVsTm9kZSBpcyB0aGUgY2xhc3MgZm9yIGEgJ1N1Yml0aXplJyBnYW1lIGxldmVsIHZpZXcuXHJcbiAqXHJcbiAqIEBhdXRob3IgQ2hyaXMgS2x1c2VuZG9yZiAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcclxuICogQGF1dGhvciBMdWlzYSBWYXJnYXNcclxuICovXHJcblxyXG5pbXBvcnQgUHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vLi4vYXhvbi9qcy9Qcm9wZXJ0eS5qcyc7XHJcbmltcG9ydCBCb3VuZHMyIGZyb20gJy4uLy4uLy4uLy4uL2RvdC9qcy9Cb3VuZHMyLmpzJztcclxuaW1wb3J0IG51bWJlclBsYXkgZnJvbSAnLi4vLi4vbnVtYmVyUGxheS5qcyc7XHJcbmltcG9ydCBTdWJpdGl6ZUdhbWVMZXZlbCBmcm9tICcuLi9tb2RlbC9TdWJpdGl6ZUdhbWVMZXZlbC5qcyc7XHJcbmltcG9ydCBOdW1iZXJQbGF5R2FtZUxldmVsTm9kZSBmcm9tICcuL051bWJlclBsYXlHYW1lTGV2ZWxOb2RlLmpzJztcclxuaW1wb3J0IFN1Yml0aXplck5vZGUgZnJvbSAnLi9TdWJpdGl6ZXJOb2RlLmpzJztcclxuaW1wb3J0IE51bWJlclBsYXlHYW1lQW5zd2VyQnV0dG9ucyBmcm9tICcuL051bWJlclBsYXlHYW1lQW5zd2VyQnV0dG9ucy5qcyc7XHJcbmltcG9ydCBOdW1iZXJQbGF5Q29sb3JzIGZyb20gJy4uLy4uL2NvbW1vbi9OdW1iZXJQbGF5Q29sb3JzLmpzJztcclxuaW1wb3J0IE51bWJlclBsYXlHYW1lTGV2ZWwgZnJvbSAnLi4vbW9kZWwvTnVtYmVyUGxheUdhbWVMZXZlbC5qcyc7XHJcbmltcG9ydCBUUHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vLi4vYXhvbi9qcy9UUHJvcGVydHkuanMnO1xyXG5pbXBvcnQgTnVtYmVyUGxheUdhbWVSZXdhcmREaWFsb2cgZnJvbSAnLi9OdW1iZXJQbGF5R2FtZVJld2FyZERpYWxvZy5qcyc7XHJcblxyXG5jbGFzcyBTdWJpdGl6ZUdhbWVMZXZlbE5vZGUgZXh0ZW5kcyBOdW1iZXJQbGF5R2FtZUxldmVsTm9kZTxTdWJpdGl6ZUdhbWVMZXZlbD4ge1xyXG5cclxuICBwcm90ZWN0ZWQgcmVhZG9ubHkgYW5zd2VyQnV0dG9uczogTnVtYmVyUGxheUdhbWVBbnN3ZXJCdXR0b25zO1xyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoXHJcbiAgICBsZXZlbDogU3ViaXRpemVHYW1lTGV2ZWwsXHJcbiAgICBsZXZlbFByb3BlcnR5OiBUUHJvcGVydHk8TnVtYmVyUGxheUdhbWVMZXZlbCB8IG51bGw+LFxyXG4gICAgcmV3YXJkRGlhbG9nOiBOdW1iZXJQbGF5R2FtZVJld2FyZERpYWxvZyxcclxuICAgIGxheW91dEJvdW5kczogQm91bmRzMixcclxuICAgIHZpc2libGVCb3VuZHNQcm9wZXJ0eTogUHJvcGVydHk8Qm91bmRzMj4gKSB7XHJcblxyXG4gICAgc3VwZXIoIGxldmVsLCBsZXZlbFByb3BlcnR5LCBsYXlvdXRCb3VuZHMsIHZpc2libGVCb3VuZHNQcm9wZXJ0eSwge1xyXG4gICAgICBzdGF0dXNCYXJPcHRpb25zOiB7XHJcbiAgICAgICAgYmFyRmlsbDogTnVtYmVyUGxheUNvbG9ycy5zdWJpdGl6ZUdhbWVDb2xvclByb3BlcnR5XHJcbiAgICAgIH1cclxuICAgIH0gKTtcclxuXHJcbiAgICAvLyBjcmVhdGUgYW5kIGFkZCB0aGUgYW5zd2VyQnV0dG9uc1xyXG4gICAgdGhpcy5hbnN3ZXJCdXR0b25zID0gbmV3IE51bWJlclBsYXlHYW1lQW5zd2VyQnV0dG9ucyhcclxuICAgICAgbGV2ZWwsXHJcbiAgICAgIHRoaXMucG9pbnRBd2FyZGVkTm9kZVZpc2libGVQcm9wZXJ0eSxcclxuICAgICAgcmV3YXJkRGlhbG9nLCAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5zZXRGcm93bnlGYWNlVmlzaWJpbGl0eSggZmFsc2UgKTtcclxuICAgICAgICBsZXZlbC5zdWJpdGl6ZXIuaXNJbnB1dEVuYWJsZWRQcm9wZXJ0eS52YWx1ZSA9IGZhbHNlO1xyXG4gICAgICAgIGxldmVsLnN1Yml0aXplci5pc1NoYXBlVmlzaWJsZVByb3BlcnR5LnZhbHVlID0gdHJ1ZTtcclxuICAgICAgfSwgKCkgPT4gdGhpcy5zZXRGcm93bnlGYWNlVmlzaWJpbGl0eSggdHJ1ZSApLCB7XHJcbiAgICAgICAgYnV0dG9uQ29sb3I6IE51bWJlclBsYXlDb2xvcnMuc3ViaXRpemVHYW1lTGlnaHRDb2xvclByb3BlcnR5LFxyXG4gICAgICAgIGJ1dHRvblNwYWNpbmc6IDQwLFxyXG4gICAgICAgIGRlcGVuZGVuY3lFbmFibGVkUHJvcGVydHk6IGxldmVsLnN1Yml0aXplci5pc0lucHV0RW5hYmxlZFByb3BlcnR5XHJcbiAgICAgIH0gKTtcclxuICAgIHRoaXMuYW5zd2VyQnV0dG9ucy5jZW50ZXJYID0gbGF5b3V0Qm91bmRzLmNlbnRlclg7XHJcbiAgICB0aGlzLmFuc3dlckJ1dHRvbnMuYm90dG9tID0gbGF5b3V0Qm91bmRzLm1heFkgLSBOdW1iZXJQbGF5R2FtZUxldmVsTm9kZS5BTlNXRVJfQlVUVE9OU19CT1RUT01fTUFSR0lOX1k7XHJcbiAgICB0aGlzLmFkZENoaWxkKCB0aGlzLmFuc3dlckJ1dHRvbnMgKTtcclxuXHJcbiAgICAvLyBjcmVhdGUgYW5kIGFkZCB0aGUgc3ViaXRpemVyTm9kZVxyXG4gICAgY29uc3Qgc3ViaXRpemVyTm9kZSA9IG5ldyBTdWJpdGl6ZXJOb2RlKFxyXG4gICAgICBsZXZlbC5zdWJpdGl6ZXIsXHJcbiAgICAgIGxldmVsLmlzQ2hhbGxlbmdlU29sdmVkUHJvcGVydHksXHJcbiAgICAgICgpID0+IHRoaXMubmV3Q2hhbGxlbmdlKClcclxuICAgICk7XHJcbiAgICBzdWJpdGl6ZXJOb2RlLmNlbnRlclggPSBsYXlvdXRCb3VuZHMuY2VudGVyWDtcclxuICAgIHN1Yml0aXplck5vZGUuYm90dG9tID0gdGhpcy5hbnN3ZXJCdXR0b25zLnRvcCAtIE51bWJlclBsYXlHYW1lTGV2ZWxOb2RlLkdBTUVfQVJFQV9OT0RFX0JPVFRPTV9NQVJHSU5fWTtcclxuICAgIHRoaXMuYWRkQ2hpbGQoIHN1Yml0aXplck5vZGUgKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBvdmVycmlkZSBkaXNwb3NlKCk6IHZvaWQge1xyXG4gICAgYXNzZXJ0ICYmIGFzc2VydCggZmFsc2UsICdkaXNwb3NlIGlzIG5vdCBzdXBwb3J0ZWQsIGV4aXN0cyBmb3IgdGhlIGxpZmV0aW1lIG9mIHRoZSBzaW0nICk7XHJcbiAgICBzdXBlci5kaXNwb3NlKCk7XHJcbiAgfVxyXG59XHJcblxyXG5udW1iZXJQbGF5LnJlZ2lzdGVyKCAnU3ViaXRpemVHYW1lTGV2ZWxOb2RlJywgU3ViaXRpemVHYW1lTGV2ZWxOb2RlICk7XHJcbmV4cG9ydCBkZWZhdWx0IFN1Yml0aXplR2FtZUxldmVsTm9kZTsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFJQSxPQUFPQSxVQUFVLE1BQU0scUJBQXFCO0FBRTVDLE9BQU9DLHVCQUF1QixNQUFNLDhCQUE4QjtBQUNsRSxPQUFPQyxhQUFhLE1BQU0sb0JBQW9CO0FBQzlDLE9BQU9DLDJCQUEyQixNQUFNLGtDQUFrQztBQUMxRSxPQUFPQyxnQkFBZ0IsTUFBTSxrQ0FBa0M7QUFLL0QsTUFBTUMscUJBQXFCLFNBQVNKLHVCQUF1QixDQUFvQjtFQUl0RUssV0FBV0EsQ0FDaEJDLEtBQXdCLEVBQ3hCQyxhQUFvRCxFQUNwREMsWUFBd0MsRUFDeENDLFlBQXFCLEVBQ3JCQyxxQkFBd0MsRUFBRztJQUUzQyxLQUFLLENBQUVKLEtBQUssRUFBRUMsYUFBYSxFQUFFRSxZQUFZLEVBQUVDLHFCQUFxQixFQUFFO01BQ2hFQyxnQkFBZ0IsRUFBRTtRQUNoQkMsT0FBTyxFQUFFVCxnQkFBZ0IsQ0FBQ1U7TUFDNUI7SUFDRixDQUFFLENBQUM7O0lBRUg7SUFDQSxJQUFJLENBQUNDLGFBQWEsR0FBRyxJQUFJWiwyQkFBMkIsQ0FDbERJLEtBQUssRUFDTCxJQUFJLENBQUNTLCtCQUErQixFQUNwQ1AsWUFBWSxFQUFFLE1BQU07TUFDbEIsSUFBSSxDQUFDUSx1QkFBdUIsQ0FBRSxLQUFNLENBQUM7TUFDckNWLEtBQUssQ0FBQ1csU0FBUyxDQUFDQyxzQkFBc0IsQ0FBQ0MsS0FBSyxHQUFHLEtBQUs7TUFDcERiLEtBQUssQ0FBQ1csU0FBUyxDQUFDRyxzQkFBc0IsQ0FBQ0QsS0FBSyxHQUFHLElBQUk7SUFDckQsQ0FBQyxFQUFFLE1BQU0sSUFBSSxDQUFDSCx1QkFBdUIsQ0FBRSxJQUFLLENBQUMsRUFBRTtNQUM3Q0ssV0FBVyxFQUFFbEIsZ0JBQWdCLENBQUNtQiw4QkFBOEI7TUFDNURDLGFBQWEsRUFBRSxFQUFFO01BQ2pCQyx5QkFBeUIsRUFBRWxCLEtBQUssQ0FBQ1csU0FBUyxDQUFDQztJQUM3QyxDQUFFLENBQUM7SUFDTCxJQUFJLENBQUNKLGFBQWEsQ0FBQ1csT0FBTyxHQUFHaEIsWUFBWSxDQUFDZ0IsT0FBTztJQUNqRCxJQUFJLENBQUNYLGFBQWEsQ0FBQ1ksTUFBTSxHQUFHakIsWUFBWSxDQUFDa0IsSUFBSSxHQUFHM0IsdUJBQXVCLENBQUM0Qiw4QkFBOEI7SUFDdEcsSUFBSSxDQUFDQyxRQUFRLENBQUUsSUFBSSxDQUFDZixhQUFjLENBQUM7O0lBRW5DO0lBQ0EsTUFBTWdCLGFBQWEsR0FBRyxJQUFJN0IsYUFBYSxDQUNyQ0ssS0FBSyxDQUFDVyxTQUFTLEVBQ2ZYLEtBQUssQ0FBQ3lCLHlCQUF5QixFQUMvQixNQUFNLElBQUksQ0FBQ0MsWUFBWSxDQUFDLENBQzFCLENBQUM7SUFDREYsYUFBYSxDQUFDTCxPQUFPLEdBQUdoQixZQUFZLENBQUNnQixPQUFPO0lBQzVDSyxhQUFhLENBQUNKLE1BQU0sR0FBRyxJQUFJLENBQUNaLGFBQWEsQ0FBQ21CLEdBQUcsR0FBR2pDLHVCQUF1QixDQUFDa0MsOEJBQThCO0lBQ3RHLElBQUksQ0FBQ0wsUUFBUSxDQUFFQyxhQUFjLENBQUM7RUFDaEM7RUFFZ0JLLE9BQU9BLENBQUEsRUFBUztJQUM5QkMsTUFBTSxJQUFJQSxNQUFNLENBQUUsS0FBSyxFQUFFLDhEQUErRCxDQUFDO0lBQ3pGLEtBQUssQ0FBQ0QsT0FBTyxDQUFDLENBQUM7RUFDakI7QUFDRjtBQUVBcEMsVUFBVSxDQUFDc0MsUUFBUSxDQUFFLHVCQUF1QixFQUFFakMscUJBQXNCLENBQUM7QUFDckUsZUFBZUEscUJBQXFCIn0=