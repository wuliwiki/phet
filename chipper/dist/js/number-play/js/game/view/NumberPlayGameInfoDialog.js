// Copyright 2022-2023, University of Colorado Boulder

/**
 * Dialog that explains the ranges of the numbers to count or subitize for each level and game type.
 * This is intended to be used by teachers to remind them of the range of challenges each level and game type contains.
 *
 * @author Luisa Vargas
 * @author Chris Klusendorf (PhET Interactive Simulations)
 */

import PhetFont from '../../../../scenery-phet/js/PhetFont.js';
import numberPlay from '../../numberPlay.js';
import { Text } from '../../../../scenery/js/imports.js';
import NumberPlayStrings from '../../NumberPlayStrings.js';
import GameInfoDialog from '../../../../vegas/js/GameInfoDialog.js';
import NumberPlayQueryParameters from '../../common/NumberPlayQueryParameters.js';

// constants
const TITLE_FONT = new PhetFont(32);
class NumberPlayGameInfoDialog extends GameInfoDialog {
  constructor(levels) {
    const descriptions = levels.map(level => level.gameType.levelDescriptions[level.levelNumber]);
    const titleNode = new Text(NumberPlayStrings.gamesStringProperty, {
      font: TITLE_FONT
    });
    super(descriptions, {
      title: titleNode,
      gameLevels: NumberPlayQueryParameters.gameLevels,
      ySpacing: 30,
      bottomMargin: 30
    });
  }
  dispose() {
    assert && assert(false, 'dispose is not supported, exists for the lifetime of the sim');
    super.dispose();
  }
}
numberPlay.register('NumberPlayGameInfoDialog', NumberPlayGameInfoDialog);
export default NumberPlayGameInfoDialog;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQaGV0Rm9udCIsIm51bWJlclBsYXkiLCJUZXh0IiwiTnVtYmVyUGxheVN0cmluZ3MiLCJHYW1lSW5mb0RpYWxvZyIsIk51bWJlclBsYXlRdWVyeVBhcmFtZXRlcnMiLCJUSVRMRV9GT05UIiwiTnVtYmVyUGxheUdhbWVJbmZvRGlhbG9nIiwiY29uc3RydWN0b3IiLCJsZXZlbHMiLCJkZXNjcmlwdGlvbnMiLCJtYXAiLCJsZXZlbCIsImdhbWVUeXBlIiwibGV2ZWxEZXNjcmlwdGlvbnMiLCJsZXZlbE51bWJlciIsInRpdGxlTm9kZSIsImdhbWVzU3RyaW5nUHJvcGVydHkiLCJmb250IiwidGl0bGUiLCJnYW1lTGV2ZWxzIiwieVNwYWNpbmciLCJib3R0b21NYXJnaW4iLCJkaXNwb3NlIiwiYXNzZXJ0IiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJOdW1iZXJQbGF5R2FtZUluZm9EaWFsb2cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjItMjAyMywgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogRGlhbG9nIHRoYXQgZXhwbGFpbnMgdGhlIHJhbmdlcyBvZiB0aGUgbnVtYmVycyB0byBjb3VudCBvciBzdWJpdGl6ZSBmb3IgZWFjaCBsZXZlbCBhbmQgZ2FtZSB0eXBlLlxyXG4gKiBUaGlzIGlzIGludGVuZGVkIHRvIGJlIHVzZWQgYnkgdGVhY2hlcnMgdG8gcmVtaW5kIHRoZW0gb2YgdGhlIHJhbmdlIG9mIGNoYWxsZW5nZXMgZWFjaCBsZXZlbCBhbmQgZ2FtZSB0eXBlIGNvbnRhaW5zLlxyXG4gKlxyXG4gKiBAYXV0aG9yIEx1aXNhIFZhcmdhc1xyXG4gKiBAYXV0aG9yIENocmlzIEtsdXNlbmRvcmYgKFBoRVQgSW50ZXJhY3RpdmUgU2ltdWxhdGlvbnMpXHJcbiAqL1xyXG5cclxuaW1wb3J0IFBoZXRGb250IGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnktcGhldC9qcy9QaGV0Rm9udC5qcyc7XHJcbmltcG9ydCBudW1iZXJQbGF5IGZyb20gJy4uLy4uL251bWJlclBsYXkuanMnO1xyXG5pbXBvcnQgeyBUZXh0IH0gZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IE51bWJlclBsYXlTdHJpbmdzIGZyb20gJy4uLy4uL051bWJlclBsYXlTdHJpbmdzLmpzJztcclxuaW1wb3J0IE51bWJlclBsYXlHYW1lTGV2ZWwgZnJvbSAnLi4vbW9kZWwvTnVtYmVyUGxheUdhbWVMZXZlbC5qcyc7XHJcbmltcG9ydCBHYW1lSW5mb0RpYWxvZyBmcm9tICcuLi8uLi8uLi8uLi92ZWdhcy9qcy9HYW1lSW5mb0RpYWxvZy5qcyc7XHJcbmltcG9ydCBOdW1iZXJQbGF5UXVlcnlQYXJhbWV0ZXJzIGZyb20gJy4uLy4uL2NvbW1vbi9OdW1iZXJQbGF5UXVlcnlQYXJhbWV0ZXJzLmpzJztcclxuXHJcbi8vIGNvbnN0YW50c1xyXG5jb25zdCBUSVRMRV9GT05UID0gbmV3IFBoZXRGb250KCAzMiApO1xyXG5cclxuY2xhc3MgTnVtYmVyUGxheUdhbWVJbmZvRGlhbG9nIGV4dGVuZHMgR2FtZUluZm9EaWFsb2cge1xyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoIGxldmVsczogTnVtYmVyUGxheUdhbWVMZXZlbFtdICkge1xyXG5cclxuICAgIGNvbnN0IGRlc2NyaXB0aW9ucyA9IGxldmVscy5tYXAoIGxldmVsID0+IGxldmVsLmdhbWVUeXBlLmxldmVsRGVzY3JpcHRpb25zWyBsZXZlbC5sZXZlbE51bWJlciBdICk7XHJcblxyXG4gICAgY29uc3QgdGl0bGVOb2RlID0gbmV3IFRleHQoIE51bWJlclBsYXlTdHJpbmdzLmdhbWVzU3RyaW5nUHJvcGVydHksIHtcclxuICAgICAgZm9udDogVElUTEVfRk9OVFxyXG4gICAgfSApO1xyXG5cclxuICAgIHN1cGVyKCBkZXNjcmlwdGlvbnMsIHtcclxuICAgICAgdGl0bGU6IHRpdGxlTm9kZSxcclxuICAgICAgZ2FtZUxldmVsczogTnVtYmVyUGxheVF1ZXJ5UGFyYW1ldGVycy5nYW1lTGV2ZWxzLFxyXG4gICAgICB5U3BhY2luZzogMzAsXHJcbiAgICAgIGJvdHRvbU1hcmdpbjogMzBcclxuICAgIH0gKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBvdmVycmlkZSBkaXNwb3NlKCk6IHZvaWQge1xyXG4gICAgYXNzZXJ0ICYmIGFzc2VydCggZmFsc2UsICdkaXNwb3NlIGlzIG5vdCBzdXBwb3J0ZWQsIGV4aXN0cyBmb3IgdGhlIGxpZmV0aW1lIG9mIHRoZSBzaW0nICk7XHJcbiAgICBzdXBlci5kaXNwb3NlKCk7XHJcbiAgfVxyXG59XHJcblxyXG5udW1iZXJQbGF5LnJlZ2lzdGVyKCAnTnVtYmVyUGxheUdhbWVJbmZvRGlhbG9nJywgTnVtYmVyUGxheUdhbWVJbmZvRGlhbG9nICk7XHJcbmV4cG9ydCBkZWZhdWx0IE51bWJlclBsYXlHYW1lSW5mb0RpYWxvZzsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLFFBQVEsTUFBTSx5Q0FBeUM7QUFDOUQsT0FBT0MsVUFBVSxNQUFNLHFCQUFxQjtBQUM1QyxTQUFTQyxJQUFJLFFBQVEsbUNBQW1DO0FBQ3hELE9BQU9DLGlCQUFpQixNQUFNLDRCQUE0QjtBQUUxRCxPQUFPQyxjQUFjLE1BQU0sd0NBQXdDO0FBQ25FLE9BQU9DLHlCQUF5QixNQUFNLDJDQUEyQzs7QUFFakY7QUFDQSxNQUFNQyxVQUFVLEdBQUcsSUFBSU4sUUFBUSxDQUFFLEVBQUcsQ0FBQztBQUVyQyxNQUFNTyx3QkFBd0IsU0FBU0gsY0FBYyxDQUFDO0VBRTdDSSxXQUFXQSxDQUFFQyxNQUE2QixFQUFHO0lBRWxELE1BQU1DLFlBQVksR0FBR0QsTUFBTSxDQUFDRSxHQUFHLENBQUVDLEtBQUssSUFBSUEsS0FBSyxDQUFDQyxRQUFRLENBQUNDLGlCQUFpQixDQUFFRixLQUFLLENBQUNHLFdBQVcsQ0FBRyxDQUFDO0lBRWpHLE1BQU1DLFNBQVMsR0FBRyxJQUFJZCxJQUFJLENBQUVDLGlCQUFpQixDQUFDYyxtQkFBbUIsRUFBRTtNQUNqRUMsSUFBSSxFQUFFWjtJQUNSLENBQUUsQ0FBQztJQUVILEtBQUssQ0FBRUksWUFBWSxFQUFFO01BQ25CUyxLQUFLLEVBQUVILFNBQVM7TUFDaEJJLFVBQVUsRUFBRWYseUJBQXlCLENBQUNlLFVBQVU7TUFDaERDLFFBQVEsRUFBRSxFQUFFO01BQ1pDLFlBQVksRUFBRTtJQUNoQixDQUFFLENBQUM7RUFDTDtFQUVnQkMsT0FBT0EsQ0FBQSxFQUFTO0lBQzlCQyxNQUFNLElBQUlBLE1BQU0sQ0FBRSxLQUFLLEVBQUUsOERBQStELENBQUM7SUFDekYsS0FBSyxDQUFDRCxPQUFPLENBQUMsQ0FBQztFQUNqQjtBQUNGO0FBRUF0QixVQUFVLENBQUN3QixRQUFRLENBQUUsMEJBQTBCLEVBQUVsQix3QkFBeUIsQ0FBQztBQUMzRSxlQUFlQSx3QkFBd0IifQ==