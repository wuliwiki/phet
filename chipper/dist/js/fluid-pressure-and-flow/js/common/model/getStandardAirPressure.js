// Copyright 2014-2021, University of Colorado Boulder

/**
 * Function that gets the standard air pressure as a function of height, see below.
 *
 * @author Sam Reid (PhET Interactive Simulations)
 * @author Aaron Davis (PhET Interactive Simulations)
 */

import Utils from '../../../../dot/js/Utils.js';
import fluidPressureAndFlow from '../../fluidPressureAndFlow.js';
import Constants from '../Constants.js';

/**
 * Calculates the standard air pressure by linearly extrapolating the known values for height = 0m & height = 150m
 * @param {number} height (in meters) at which the air pressure needs to be calculated
 * @returns {number} standard air pressure at the specified height from ground
 */
const getStandardAirPressure = height => Utils.linear(0, 150, Constants.EARTH_AIR_PRESSURE, Constants.EARTH_AIR_PRESSURE_AT_500_FT, height);
fluidPressureAndFlow.register('getStandardAirPressure', getStandardAirPressure);
export default getStandardAirPressure;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJVdGlscyIsImZsdWlkUHJlc3N1cmVBbmRGbG93IiwiQ29uc3RhbnRzIiwiZ2V0U3RhbmRhcmRBaXJQcmVzc3VyZSIsImhlaWdodCIsImxpbmVhciIsIkVBUlRIX0FJUl9QUkVTU1VSRSIsIkVBUlRIX0FJUl9QUkVTU1VSRV9BVF81MDBfRlQiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbImdldFN0YW5kYXJkQWlyUHJlc3N1cmUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTQtMjAyMSwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogRnVuY3Rpb24gdGhhdCBnZXRzIHRoZSBzdGFuZGFyZCBhaXIgcHJlc3N1cmUgYXMgYSBmdW5jdGlvbiBvZiBoZWlnaHQsIHNlZSBiZWxvdy5cclxuICpcclxuICogQGF1dGhvciBTYW0gUmVpZCAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcclxuICogQGF1dGhvciBBYXJvbiBEYXZpcyAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcclxuICovXHJcblxyXG5pbXBvcnQgVXRpbHMgZnJvbSAnLi4vLi4vLi4vLi4vZG90L2pzL1V0aWxzLmpzJztcclxuaW1wb3J0IGZsdWlkUHJlc3N1cmVBbmRGbG93IGZyb20gJy4uLy4uL2ZsdWlkUHJlc3N1cmVBbmRGbG93LmpzJztcclxuaW1wb3J0IENvbnN0YW50cyBmcm9tICcuLi9Db25zdGFudHMuanMnO1xyXG5cclxuLyoqXHJcbiAqIENhbGN1bGF0ZXMgdGhlIHN0YW5kYXJkIGFpciBwcmVzc3VyZSBieSBsaW5lYXJseSBleHRyYXBvbGF0aW5nIHRoZSBrbm93biB2YWx1ZXMgZm9yIGhlaWdodCA9IDBtICYgaGVpZ2h0ID0gMTUwbVxyXG4gKiBAcGFyYW0ge251bWJlcn0gaGVpZ2h0IChpbiBtZXRlcnMpIGF0IHdoaWNoIHRoZSBhaXIgcHJlc3N1cmUgbmVlZHMgdG8gYmUgY2FsY3VsYXRlZFxyXG4gKiBAcmV0dXJucyB7bnVtYmVyfSBzdGFuZGFyZCBhaXIgcHJlc3N1cmUgYXQgdGhlIHNwZWNpZmllZCBoZWlnaHQgZnJvbSBncm91bmRcclxuICovXHJcbmNvbnN0IGdldFN0YW5kYXJkQWlyUHJlc3N1cmUgPSBoZWlnaHQgPT4gVXRpbHMubGluZWFyKCAwLCAxNTAsIENvbnN0YW50cy5FQVJUSF9BSVJfUFJFU1NVUkUsXHJcbiAgQ29uc3RhbnRzLkVBUlRIX0FJUl9QUkVTU1VSRV9BVF81MDBfRlQsIGhlaWdodCApO1xyXG5cclxuZmx1aWRQcmVzc3VyZUFuZEZsb3cucmVnaXN0ZXIoICdnZXRTdGFuZGFyZEFpclByZXNzdXJlJywgZ2V0U3RhbmRhcmRBaXJQcmVzc3VyZSApO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZ2V0U3RhbmRhcmRBaXJQcmVzc3VyZTsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxLQUFLLE1BQU0sNkJBQTZCO0FBQy9DLE9BQU9DLG9CQUFvQixNQUFNLCtCQUErQjtBQUNoRSxPQUFPQyxTQUFTLE1BQU0saUJBQWlCOztBQUV2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTUMsc0JBQXNCLEdBQUdDLE1BQU0sSUFBSUosS0FBSyxDQUFDSyxNQUFNLENBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRUgsU0FBUyxDQUFDSSxrQkFBa0IsRUFDekZKLFNBQVMsQ0FBQ0ssNEJBQTRCLEVBQUVILE1BQU8sQ0FBQztBQUVsREgsb0JBQW9CLENBQUNPLFFBQVEsQ0FBRSx3QkFBd0IsRUFBRUwsc0JBQXVCLENBQUM7QUFFakYsZUFBZUEsc0JBQXNCIn0=