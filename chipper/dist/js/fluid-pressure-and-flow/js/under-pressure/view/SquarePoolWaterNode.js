// Copyright 2013-2021, University of Colorado Boulder

/**
 * View for water in square pool.
 *
 * @author Vasily Shakhov (Mlearner)
 * @author Siddhartha Chinthapally (Actual Concepts)
 */

import { Rectangle } from '../../../../scenery/js/imports.js';
import fluidPressureAndFlow from '../../fluidPressureAndFlow.js';
class SquarePoolWaterNode extends Rectangle {
  /**
   * @param {SquarePoolModel} squarePoolModel of the simulation
   * @param {ModelViewTransform2} modelViewTransform to convert between model and view co-ordinates
   */
  constructor(squarePoolModel, modelViewTransform) {
    super(0, 0, 1, 1, {
      lineWidth: 1
    });
    const poolDimensions = squarePoolModel.poolDimensions;
    const viewWidth = modelViewTransform.modelToViewDeltaX(poolDimensions.x2 - poolDimensions.x1); //width of pool, px
    const maxHeight = Math.abs(modelViewTransform.modelToViewDeltaY(squarePoolModel.maxHeight)); //max height of water in pixels
    const xMin = modelViewTransform.modelToViewX(poolDimensions.x1); //left x point of pool in pixels
    const yMax = modelViewTransform.modelToViewY(poolDimensions.y2); //bottom y point of pool in pixels

    squarePoolModel.underPressureModel.fluidColorModel.colorProperty.linkAttribute(this, 'fill');
    squarePoolModel.volumeProperty.link(() => {
      // height of water in pixels
      const viewHeight = maxHeight * squarePoolModel.volumeProperty.value / squarePoolModel.maxVolume;
      this.setRect(xMin, yMax - viewHeight, viewWidth, viewHeight);
    });
  }
}
fluidPressureAndFlow.register('SquarePoolWaterNode', SquarePoolWaterNode);
export default SquarePoolWaterNode;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWN0YW5nbGUiLCJmbHVpZFByZXNzdXJlQW5kRmxvdyIsIlNxdWFyZVBvb2xXYXRlck5vZGUiLCJjb25zdHJ1Y3RvciIsInNxdWFyZVBvb2xNb2RlbCIsIm1vZGVsVmlld1RyYW5zZm9ybSIsImxpbmVXaWR0aCIsInBvb2xEaW1lbnNpb25zIiwidmlld1dpZHRoIiwibW9kZWxUb1ZpZXdEZWx0YVgiLCJ4MiIsIngxIiwibWF4SGVpZ2h0IiwiTWF0aCIsImFicyIsIm1vZGVsVG9WaWV3RGVsdGFZIiwieE1pbiIsIm1vZGVsVG9WaWV3WCIsInlNYXgiLCJtb2RlbFRvVmlld1kiLCJ5MiIsInVuZGVyUHJlc3N1cmVNb2RlbCIsImZsdWlkQ29sb3JNb2RlbCIsImNvbG9yUHJvcGVydHkiLCJsaW5rQXR0cmlidXRlIiwidm9sdW1lUHJvcGVydHkiLCJsaW5rIiwidmlld0hlaWdodCIsInZhbHVlIiwibWF4Vm9sdW1lIiwic2V0UmVjdCIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiU3F1YXJlUG9vbFdhdGVyTm9kZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxMy0yMDIxLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBWaWV3IGZvciB3YXRlciBpbiBzcXVhcmUgcG9vbC5cclxuICpcclxuICogQGF1dGhvciBWYXNpbHkgU2hha2hvdiAoTWxlYXJuZXIpXHJcbiAqIEBhdXRob3IgU2lkZGhhcnRoYSBDaGludGhhcGFsbHkgKEFjdHVhbCBDb25jZXB0cylcclxuICovXHJcblxyXG5pbXBvcnQgeyBSZWN0YW5nbGUgfSBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgZmx1aWRQcmVzc3VyZUFuZEZsb3cgZnJvbSAnLi4vLi4vZmx1aWRQcmVzc3VyZUFuZEZsb3cuanMnO1xyXG5cclxuY2xhc3MgU3F1YXJlUG9vbFdhdGVyTm9kZSBleHRlbmRzIFJlY3RhbmdsZSB7XHJcblxyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSB7U3F1YXJlUG9vbE1vZGVsfSBzcXVhcmVQb29sTW9kZWwgb2YgdGhlIHNpbXVsYXRpb25cclxuICAgKiBAcGFyYW0ge01vZGVsVmlld1RyYW5zZm9ybTJ9IG1vZGVsVmlld1RyYW5zZm9ybSB0byBjb252ZXJ0IGJldHdlZW4gbW9kZWwgYW5kIHZpZXcgY28tb3JkaW5hdGVzXHJcbiAgICovXHJcbiAgY29uc3RydWN0b3IoIHNxdWFyZVBvb2xNb2RlbCwgbW9kZWxWaWV3VHJhbnNmb3JtICkge1xyXG5cclxuICAgIHN1cGVyKCAwLCAwLCAxLCAxLCB7IGxpbmVXaWR0aDogMSB9ICk7XHJcblxyXG4gICAgY29uc3QgcG9vbERpbWVuc2lvbnMgPSBzcXVhcmVQb29sTW9kZWwucG9vbERpbWVuc2lvbnM7XHJcblxyXG4gICAgY29uc3Qgdmlld1dpZHRoID0gbW9kZWxWaWV3VHJhbnNmb3JtLm1vZGVsVG9WaWV3RGVsdGFYKCBwb29sRGltZW5zaW9ucy54MiAtIHBvb2xEaW1lbnNpb25zLngxICk7Ly93aWR0aCBvZiBwb29sLCBweFxyXG4gICAgY29uc3QgbWF4SGVpZ2h0ID0gTWF0aC5hYnMoIG1vZGVsVmlld1RyYW5zZm9ybS5tb2RlbFRvVmlld0RlbHRhWSggc3F1YXJlUG9vbE1vZGVsLm1heEhlaWdodCApICk7Ly9tYXggaGVpZ2h0IG9mIHdhdGVyIGluIHBpeGVsc1xyXG4gICAgY29uc3QgeE1pbiA9IG1vZGVsVmlld1RyYW5zZm9ybS5tb2RlbFRvVmlld1goIHBvb2xEaW1lbnNpb25zLngxICk7Ly9sZWZ0IHggcG9pbnQgb2YgcG9vbCBpbiBwaXhlbHNcclxuICAgIGNvbnN0IHlNYXggPSBtb2RlbFZpZXdUcmFuc2Zvcm0ubW9kZWxUb1ZpZXdZKCBwb29sRGltZW5zaW9ucy55MiApOy8vYm90dG9tIHkgcG9pbnQgb2YgcG9vbCBpbiBwaXhlbHNcclxuXHJcbiAgICBzcXVhcmVQb29sTW9kZWwudW5kZXJQcmVzc3VyZU1vZGVsLmZsdWlkQ29sb3JNb2RlbC5jb2xvclByb3BlcnR5LmxpbmtBdHRyaWJ1dGUoIHRoaXMsICdmaWxsJyApO1xyXG5cclxuICAgIHNxdWFyZVBvb2xNb2RlbC52b2x1bWVQcm9wZXJ0eS5saW5rKCAoKSA9PiB7XHJcblxyXG4gICAgICAvLyBoZWlnaHQgb2Ygd2F0ZXIgaW4gcGl4ZWxzXHJcbiAgICAgIGNvbnN0IHZpZXdIZWlnaHQgPSBtYXhIZWlnaHQgKiBzcXVhcmVQb29sTW9kZWwudm9sdW1lUHJvcGVydHkudmFsdWUgLyBzcXVhcmVQb29sTW9kZWwubWF4Vm9sdW1lO1xyXG4gICAgICB0aGlzLnNldFJlY3QoIHhNaW4sIHlNYXggLSB2aWV3SGVpZ2h0LCB2aWV3V2lkdGgsIHZpZXdIZWlnaHQgKTtcclxuICAgIH0gKTtcclxuICB9XHJcbn1cclxuXHJcbmZsdWlkUHJlc3N1cmVBbmRGbG93LnJlZ2lzdGVyKCAnU3F1YXJlUG9vbFdhdGVyTm9kZScsIFNxdWFyZVBvb2xXYXRlck5vZGUgKTtcclxuZXhwb3J0IGRlZmF1bHQgU3F1YXJlUG9vbFdhdGVyTm9kZTsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxTQUFTQSxTQUFTLFFBQVEsbUNBQW1DO0FBQzdELE9BQU9DLG9CQUFvQixNQUFNLCtCQUErQjtBQUVoRSxNQUFNQyxtQkFBbUIsU0FBU0YsU0FBUyxDQUFDO0VBRTFDO0FBQ0Y7QUFDQTtBQUNBO0VBQ0VHLFdBQVdBLENBQUVDLGVBQWUsRUFBRUMsa0JBQWtCLEVBQUc7SUFFakQsS0FBSyxDQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtNQUFFQyxTQUFTLEVBQUU7SUFBRSxDQUFFLENBQUM7SUFFckMsTUFBTUMsY0FBYyxHQUFHSCxlQUFlLENBQUNHLGNBQWM7SUFFckQsTUFBTUMsU0FBUyxHQUFHSCxrQkFBa0IsQ0FBQ0ksaUJBQWlCLENBQUVGLGNBQWMsQ0FBQ0csRUFBRSxHQUFHSCxjQUFjLENBQUNJLEVBQUcsQ0FBQyxDQUFDO0lBQ2hHLE1BQU1DLFNBQVMsR0FBR0MsSUFBSSxDQUFDQyxHQUFHLENBQUVULGtCQUFrQixDQUFDVSxpQkFBaUIsQ0FBRVgsZUFBZSxDQUFDUSxTQUFVLENBQUUsQ0FBQyxDQUFDO0lBQ2hHLE1BQU1JLElBQUksR0FBR1gsa0JBQWtCLENBQUNZLFlBQVksQ0FBRVYsY0FBYyxDQUFDSSxFQUFHLENBQUMsQ0FBQztJQUNsRSxNQUFNTyxJQUFJLEdBQUdiLGtCQUFrQixDQUFDYyxZQUFZLENBQUVaLGNBQWMsQ0FBQ2EsRUFBRyxDQUFDLENBQUM7O0lBRWxFaEIsZUFBZSxDQUFDaUIsa0JBQWtCLENBQUNDLGVBQWUsQ0FBQ0MsYUFBYSxDQUFDQyxhQUFhLENBQUUsSUFBSSxFQUFFLE1BQU8sQ0FBQztJQUU5RnBCLGVBQWUsQ0FBQ3FCLGNBQWMsQ0FBQ0MsSUFBSSxDQUFFLE1BQU07TUFFekM7TUFDQSxNQUFNQyxVQUFVLEdBQUdmLFNBQVMsR0FBR1IsZUFBZSxDQUFDcUIsY0FBYyxDQUFDRyxLQUFLLEdBQUd4QixlQUFlLENBQUN5QixTQUFTO01BQy9GLElBQUksQ0FBQ0MsT0FBTyxDQUFFZCxJQUFJLEVBQUVFLElBQUksR0FBR1MsVUFBVSxFQUFFbkIsU0FBUyxFQUFFbUIsVUFBVyxDQUFDO0lBQ2hFLENBQUUsQ0FBQztFQUNMO0FBQ0Y7QUFFQTFCLG9CQUFvQixDQUFDOEIsUUFBUSxDQUFFLHFCQUFxQixFQUFFN0IsbUJBQW9CLENBQUM7QUFDM0UsZUFBZUEsbUJBQW1CIn0=