// Copyright 2014-2020, University of Colorado Boulder

/**
 * Model for the water tower frame and fluid volume
 *
 * @author Siddhartha Chinthapally (Actual Concepts)
 */

import DerivedProperty from '../../../../axon/js/DerivedProperty.js';
import Property from '../../../../axon/js/Property.js';
import Vector2 from '../../../../dot/js/Vector2.js';
import merge from '../../../../phet-core/js/merge.js';
import fluidPressureAndFlow from '../../fluidPressureAndFlow.js';
class WaterTower {
  /**
   * @param {Object} [options]
   */
  constructor(options) {
    options = merge({
      initialFluidLevel: 0.8,
      tankPosition: new Vector2(0, 0) // tank frame bottom left, position in meters
    }, options);
    this.TANK_RADIUS = 5; // meters
    this.TANK_HEIGHT = 10; // meters

    // Offset of the inlet (hole which receives water from the faucet) as measured from tank left
    this.INLET_X_OFFSET = 1.4;

    // Assume the tank is a cylinder and compute the max volume
    this.TANK_VOLUME = Math.PI * this.TANK_RADIUS * this.TANK_RADIUS * this.TANK_HEIGHT;
    this.isHoleOpenProperty = new Property(false); // TODO: Is this unused?
    this.fluidVolumeProperty = new Property(this.TANK_VOLUME * options.initialFluidLevel);
    this.tankPositionProperty = new Property(options.tankPosition); //water tank bottom left

    // Size of the hole in meters
    this.HOLE_SIZE = 1;
    this.fluidLevelProperty = new DerivedProperty([this.fluidVolumeProperty], fluidVolume => {
      return fluidVolume / (Math.PI * this.TANK_RADIUS * this.TANK_RADIUS);
    });

    // TODO: Is this used?
    this.isFullProperty = new DerivedProperty([this.fluidVolumeProperty], fluidVolume => {
      return fluidVolume >= this.TANK_VOLUME;
    });
  }

  /**
   * Restore to initial conditions.
   * @public
   */
  reset() {
    this.isHoleOpenProperty.reset();
    this.fluidVolumeProperty.reset();
    this.tankPositionProperty.reset();
  }

  /**
   * @public
   */
  fill() {
    this.fluidVolumeProperty.value = this.TANK_VOLUME;
  }
}
fluidPressureAndFlow.register('WaterTower', WaterTower);
export default WaterTower;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJEZXJpdmVkUHJvcGVydHkiLCJQcm9wZXJ0eSIsIlZlY3RvcjIiLCJtZXJnZSIsImZsdWlkUHJlc3N1cmVBbmRGbG93IiwiV2F0ZXJUb3dlciIsImNvbnN0cnVjdG9yIiwib3B0aW9ucyIsImluaXRpYWxGbHVpZExldmVsIiwidGFua1Bvc2l0aW9uIiwiVEFOS19SQURJVVMiLCJUQU5LX0hFSUdIVCIsIklOTEVUX1hfT0ZGU0VUIiwiVEFOS19WT0xVTUUiLCJNYXRoIiwiUEkiLCJpc0hvbGVPcGVuUHJvcGVydHkiLCJmbHVpZFZvbHVtZVByb3BlcnR5IiwidGFua1Bvc2l0aW9uUHJvcGVydHkiLCJIT0xFX1NJWkUiLCJmbHVpZExldmVsUHJvcGVydHkiLCJmbHVpZFZvbHVtZSIsImlzRnVsbFByb3BlcnR5IiwicmVzZXQiLCJmaWxsIiwidmFsdWUiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIldhdGVyVG93ZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTQtMjAyMCwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogTW9kZWwgZm9yIHRoZSB3YXRlciB0b3dlciBmcmFtZSBhbmQgZmx1aWQgdm9sdW1lXHJcbiAqXHJcbiAqIEBhdXRob3IgU2lkZGhhcnRoYSBDaGludGhhcGFsbHkgKEFjdHVhbCBDb25jZXB0cylcclxuICovXHJcblxyXG5pbXBvcnQgRGVyaXZlZFByb3BlcnR5IGZyb20gJy4uLy4uLy4uLy4uL2F4b24vanMvRGVyaXZlZFByb3BlcnR5LmpzJztcclxuaW1wb3J0IFByb3BlcnR5IGZyb20gJy4uLy4uLy4uLy4uL2F4b24vanMvUHJvcGVydHkuanMnO1xyXG5pbXBvcnQgVmVjdG9yMiBmcm9tICcuLi8uLi8uLi8uLi9kb3QvanMvVmVjdG9yMi5qcyc7XHJcbmltcG9ydCBtZXJnZSBmcm9tICcuLi8uLi8uLi8uLi9waGV0LWNvcmUvanMvbWVyZ2UuanMnO1xyXG5pbXBvcnQgZmx1aWRQcmVzc3VyZUFuZEZsb3cgZnJvbSAnLi4vLi4vZmx1aWRQcmVzc3VyZUFuZEZsb3cuanMnO1xyXG5cclxuY2xhc3MgV2F0ZXJUb3dlciB7XHJcblxyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc11cclxuICAgKi9cclxuICBjb25zdHJ1Y3Rvciggb3B0aW9ucyApIHtcclxuXHJcbiAgICBvcHRpb25zID0gbWVyZ2UoIHtcclxuICAgICAgaW5pdGlhbEZsdWlkTGV2ZWw6IDAuOCxcclxuICAgICAgdGFua1Bvc2l0aW9uOiBuZXcgVmVjdG9yMiggMCwgMCApIC8vIHRhbmsgZnJhbWUgYm90dG9tIGxlZnQsIHBvc2l0aW9uIGluIG1ldGVyc1xyXG4gICAgfSwgb3B0aW9ucyApO1xyXG5cclxuICAgIHRoaXMuVEFOS19SQURJVVMgPSA1OyAvLyBtZXRlcnNcclxuICAgIHRoaXMuVEFOS19IRUlHSFQgPSAxMDsgLy8gbWV0ZXJzXHJcblxyXG4gICAgLy8gT2Zmc2V0IG9mIHRoZSBpbmxldCAoaG9sZSB3aGljaCByZWNlaXZlcyB3YXRlciBmcm9tIHRoZSBmYXVjZXQpIGFzIG1lYXN1cmVkIGZyb20gdGFuayBsZWZ0XHJcbiAgICB0aGlzLklOTEVUX1hfT0ZGU0VUID0gMS40O1xyXG5cclxuICAgIC8vIEFzc3VtZSB0aGUgdGFuayBpcyBhIGN5bGluZGVyIGFuZCBjb21wdXRlIHRoZSBtYXggdm9sdW1lXHJcbiAgICB0aGlzLlRBTktfVk9MVU1FID0gTWF0aC5QSSAqIHRoaXMuVEFOS19SQURJVVMgKiB0aGlzLlRBTktfUkFESVVTICogdGhpcy5UQU5LX0hFSUdIVDtcclxuXHJcbiAgICB0aGlzLmlzSG9sZU9wZW5Qcm9wZXJ0eSA9IG5ldyBQcm9wZXJ0eSggZmFsc2UgKTsgLy8gVE9ETzogSXMgdGhpcyB1bnVzZWQ/XHJcbiAgICB0aGlzLmZsdWlkVm9sdW1lUHJvcGVydHkgPSBuZXcgUHJvcGVydHkoIHRoaXMuVEFOS19WT0xVTUUgKiBvcHRpb25zLmluaXRpYWxGbHVpZExldmVsICk7XHJcbiAgICB0aGlzLnRhbmtQb3NpdGlvblByb3BlcnR5ID0gbmV3IFByb3BlcnR5KCBvcHRpb25zLnRhbmtQb3NpdGlvbiApOyAvL3dhdGVyIHRhbmsgYm90dG9tIGxlZnRcclxuXHJcbiAgICAvLyBTaXplIG9mIHRoZSBob2xlIGluIG1ldGVyc1xyXG4gICAgdGhpcy5IT0xFX1NJWkUgPSAxO1xyXG4gICAgdGhpcy5mbHVpZExldmVsUHJvcGVydHkgPSBuZXcgRGVyaXZlZFByb3BlcnR5KCBbIHRoaXMuZmx1aWRWb2x1bWVQcm9wZXJ0eSBdLCBmbHVpZFZvbHVtZSA9PiB7XHJcbiAgICAgIHJldHVybiBmbHVpZFZvbHVtZSAvICggTWF0aC5QSSAqIHRoaXMuVEFOS19SQURJVVMgKiB0aGlzLlRBTktfUkFESVVTICk7XHJcbiAgICB9ICk7XHJcblxyXG4gICAgLy8gVE9ETzogSXMgdGhpcyB1c2VkP1xyXG4gICAgdGhpcy5pc0Z1bGxQcm9wZXJ0eSA9IG5ldyBEZXJpdmVkUHJvcGVydHkoIFsgdGhpcy5mbHVpZFZvbHVtZVByb3BlcnR5IF0sIGZsdWlkVm9sdW1lID0+IHtcclxuICAgICAgcmV0dXJuIGZsdWlkVm9sdW1lID49IHRoaXMuVEFOS19WT0xVTUU7XHJcbiAgICB9ICk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBSZXN0b3JlIHRvIGluaXRpYWwgY29uZGl0aW9ucy5cclxuICAgKiBAcHVibGljXHJcbiAgICovXHJcbiAgcmVzZXQoKSB7XHJcbiAgICB0aGlzLmlzSG9sZU9wZW5Qcm9wZXJ0eS5yZXNldCgpO1xyXG4gICAgdGhpcy5mbHVpZFZvbHVtZVByb3BlcnR5LnJlc2V0KCk7XHJcbiAgICB0aGlzLnRhbmtQb3NpdGlvblByb3BlcnR5LnJlc2V0KCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBAcHVibGljXHJcbiAgICovXHJcbiAgZmlsbCgpIHtcclxuICAgIHRoaXMuZmx1aWRWb2x1bWVQcm9wZXJ0eS52YWx1ZSA9IHRoaXMuVEFOS19WT0xVTUU7XHJcbiAgfVxyXG59XHJcblxyXG5mbHVpZFByZXNzdXJlQW5kRmxvdy5yZWdpc3RlciggJ1dhdGVyVG93ZXInLCBXYXRlclRvd2VyICk7XHJcbmV4cG9ydCBkZWZhdWx0IFdhdGVyVG93ZXI7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLGVBQWUsTUFBTSx3Q0FBd0M7QUFDcEUsT0FBT0MsUUFBUSxNQUFNLGlDQUFpQztBQUN0RCxPQUFPQyxPQUFPLE1BQU0sK0JBQStCO0FBQ25ELE9BQU9DLEtBQUssTUFBTSxtQ0FBbUM7QUFDckQsT0FBT0Msb0JBQW9CLE1BQU0sK0JBQStCO0FBRWhFLE1BQU1DLFVBQVUsQ0FBQztFQUVmO0FBQ0Y7QUFDQTtFQUNFQyxXQUFXQSxDQUFFQyxPQUFPLEVBQUc7SUFFckJBLE9BQU8sR0FBR0osS0FBSyxDQUFFO01BQ2ZLLGlCQUFpQixFQUFFLEdBQUc7TUFDdEJDLFlBQVksRUFBRSxJQUFJUCxPQUFPLENBQUUsQ0FBQyxFQUFFLENBQUUsQ0FBQyxDQUFDO0lBQ3BDLENBQUMsRUFBRUssT0FBUSxDQUFDO0lBRVosSUFBSSxDQUFDRyxXQUFXLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDdEIsSUFBSSxDQUFDQyxXQUFXLEdBQUcsRUFBRSxDQUFDLENBQUM7O0lBRXZCO0lBQ0EsSUFBSSxDQUFDQyxjQUFjLEdBQUcsR0FBRzs7SUFFekI7SUFDQSxJQUFJLENBQUNDLFdBQVcsR0FBR0MsSUFBSSxDQUFDQyxFQUFFLEdBQUcsSUFBSSxDQUFDTCxXQUFXLEdBQUcsSUFBSSxDQUFDQSxXQUFXLEdBQUcsSUFBSSxDQUFDQyxXQUFXO0lBRW5GLElBQUksQ0FBQ0ssa0JBQWtCLEdBQUcsSUFBSWYsUUFBUSxDQUFFLEtBQU0sQ0FBQyxDQUFDLENBQUM7SUFDakQsSUFBSSxDQUFDZ0IsbUJBQW1CLEdBQUcsSUFBSWhCLFFBQVEsQ0FBRSxJQUFJLENBQUNZLFdBQVcsR0FBR04sT0FBTyxDQUFDQyxpQkFBa0IsQ0FBQztJQUN2RixJQUFJLENBQUNVLG9CQUFvQixHQUFHLElBQUlqQixRQUFRLENBQUVNLE9BQU8sQ0FBQ0UsWUFBYSxDQUFDLENBQUMsQ0FBQzs7SUFFbEU7SUFDQSxJQUFJLENBQUNVLFNBQVMsR0FBRyxDQUFDO0lBQ2xCLElBQUksQ0FBQ0Msa0JBQWtCLEdBQUcsSUFBSXBCLGVBQWUsQ0FBRSxDQUFFLElBQUksQ0FBQ2lCLG1CQUFtQixDQUFFLEVBQUVJLFdBQVcsSUFBSTtNQUMxRixPQUFPQSxXQUFXLElBQUtQLElBQUksQ0FBQ0MsRUFBRSxHQUFHLElBQUksQ0FBQ0wsV0FBVyxHQUFHLElBQUksQ0FBQ0EsV0FBVyxDQUFFO0lBQ3hFLENBQUUsQ0FBQzs7SUFFSDtJQUNBLElBQUksQ0FBQ1ksY0FBYyxHQUFHLElBQUl0QixlQUFlLENBQUUsQ0FBRSxJQUFJLENBQUNpQixtQkFBbUIsQ0FBRSxFQUFFSSxXQUFXLElBQUk7TUFDdEYsT0FBT0EsV0FBVyxJQUFJLElBQUksQ0FBQ1IsV0FBVztJQUN4QyxDQUFFLENBQUM7RUFDTDs7RUFFQTtBQUNGO0FBQ0E7QUFDQTtFQUNFVSxLQUFLQSxDQUFBLEVBQUc7SUFDTixJQUFJLENBQUNQLGtCQUFrQixDQUFDTyxLQUFLLENBQUMsQ0FBQztJQUMvQixJQUFJLENBQUNOLG1CQUFtQixDQUFDTSxLQUFLLENBQUMsQ0FBQztJQUNoQyxJQUFJLENBQUNMLG9CQUFvQixDQUFDSyxLQUFLLENBQUMsQ0FBQztFQUNuQzs7RUFFQTtBQUNGO0FBQ0E7RUFDRUMsSUFBSUEsQ0FBQSxFQUFHO0lBQ0wsSUFBSSxDQUFDUCxtQkFBbUIsQ0FBQ1EsS0FBSyxHQUFHLElBQUksQ0FBQ1osV0FBVztFQUNuRDtBQUNGO0FBRUFULG9CQUFvQixDQUFDc0IsUUFBUSxDQUFFLFlBQVksRUFBRXJCLFVBQVcsQ0FBQztBQUN6RCxlQUFlQSxVQUFVIn0=