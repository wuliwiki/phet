/* eslint-disable */
import asyncLoader from '../../phet-core/js/asyncLoader.js';
import base64SoundToByteArray from '../../tambo/js/base64SoundToByteArray.js';
import WrappedAudioBuffer from '../../tambo/js/WrappedAudioBuffer.js';
import phetAudioContext from '../../tambo/js/phetAudioContext.js';
const soundURI = 'data:audio/mpeg;base64,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';
const soundByteArray = base64SoundToByteArray(phetAudioContext, soundURI);
const unlock = asyncLoader.createLock(soundURI);
const wrappedAudioBuffer = new WrappedAudioBuffer();

// safe way to unlock
let unlocked = false;
const safeUnlock = () => {
  if (!unlocked) {
    unlock();
    unlocked = true;
  }
};
const onDecodeSuccess = decodedAudio => {
  if (wrappedAudioBuffer.audioBufferProperty.value === null) {
    wrappedAudioBuffer.audioBufferProperty.set(decodedAudio);
    safeUnlock();
  }
};
const onDecodeError = decodeError => {
  console.warn('decode of audio data failed, using stubbed sound, error: ' + decodeError);
  wrappedAudioBuffer.audioBufferProperty.set(phetAudioContext.createBuffer(1, 1, phetAudioContext.sampleRate));
  safeUnlock();
};
const decodePromise = phetAudioContext.decodeAudioData(soundByteArray.buffer, onDecodeSuccess, onDecodeError);
if (decodePromise) {
  decodePromise.then(decodedAudio => {
    if (wrappedAudioBuffer.audioBufferProperty.value === null) {
      wrappedAudioBuffer.audioBufferProperty.set(decodedAudio);
      safeUnlock();
    }
  }).catch(e => {
    console.warn('promise rejection caught for audio decode, error = ' + e);
    safeUnlock();
  });
}
export default wrappedAudioBuffer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhc3luY0xvYWRlciIsImJhc2U2NFNvdW5kVG9CeXRlQXJyYXkiLCJXcmFwcGVkQXVkaW9CdWZmZXIiLCJwaGV0QXVkaW9Db250ZXh0Iiwic291bmRVUkkiLCJzb3VuZEJ5dGVBcnJheSIsInVubG9jayIsImNyZWF0ZUxvY2siLCJ3cmFwcGVkQXVkaW9CdWZmZXIiLCJ1bmxvY2tlZCIsInNhZmVVbmxvY2siLCJvbkRlY29kZVN1Y2Nlc3MiLCJkZWNvZGVkQXVkaW8iLCJhdWRpb0J1ZmZlclByb3BlcnR5IiwidmFsdWUiLCJzZXQiLCJvbkRlY29kZUVycm9yIiwiZGVjb2RlRXJyb3IiLCJjb25zb2xlIiwid2FybiIsImNyZWF0ZUJ1ZmZlciIsInNhbXBsZVJhdGUiLCJkZWNvZGVQcm9taXNlIiwiZGVjb2RlQXVkaW9EYXRhIiwiYnVmZmVyIiwidGhlbiIsImNhdGNoIiwiZSJdLCJzb3VyY2VzIjpbIkNvbGxpc2lvbl9Tb3VuZF9tcDMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgKi9cclxuaW1wb3J0IGFzeW5jTG9hZGVyIGZyb20gJy4uLy4uL3BoZXQtY29yZS9qcy9hc3luY0xvYWRlci5qcyc7XHJcbmltcG9ydCBiYXNlNjRTb3VuZFRvQnl0ZUFycmF5IGZyb20gJy4uLy4uL3RhbWJvL2pzL2Jhc2U2NFNvdW5kVG9CeXRlQXJyYXkuanMnO1xyXG5pbXBvcnQgV3JhcHBlZEF1ZGlvQnVmZmVyIGZyb20gJy4uLy4uL3RhbWJvL2pzL1dyYXBwZWRBdWRpb0J1ZmZlci5qcyc7XHJcbmltcG9ydCBwaGV0QXVkaW9Db250ZXh0IGZyb20gJy4uLy4uL3RhbWJvL2pzL3BoZXRBdWRpb0NvbnRleHQuanMnO1xyXG5cclxuY29uc3Qgc291bmRVUkkgPSAnZGF0YTphdWRpby9tcGVnO2Jhc2U2NCwvL3N3eEFBQVE4UVBBYXc4d0RDNkExOTE3V0JFQUFKdG00QUFFQUNCd1lRQytZUUJKU0ZVUWlzRDFnVGQvLy8vLy8vSEFBQUJBU1hSR2FHWXdiSGk1Qm5TQ1lGQWJaOWtocnhwK2NaemdRRFdHRHc1M0ZRWVdCNXg3L01SanFOWC9Kb3o2TWhoUCtScit6Skt4T1F3d01VTE5aK0F5cmVRUzhEQVNmTVNHWXgwRmg1Sm1JQVE3S1hmLys1MmNYbXV1M1R6R2FveituWTR0Ly85Ly9zeXhCMER5VlR1OGcvd1E4RG5CV0JCL21oSVhuWC9wL24vLzlYLy8rQ0ljRTc5WUlHR2dxL1o4ajVUVWJTQXZGR1YxQXhSeWMzbXE4S2NmR3hvWUpuWEttRlNnMFFCQUs3bkh2M2JlZGUxVUlCaG5WRmYvUi8yLy8vZVYvMTFNUkVqd1ROU2JwNDZMSC9KT2RUUUR6akwvVk9NTmV3M0NDMmpMNUxkUDVDUnMwUGpqempNSTBRbkREZGRDNzM4ZnVINHhVdlVZWkI5elI0NklQLzdNc1FlZ0FuOEx3SVArMkpCUElValhmOW9VaTZnSFVBMlNoOURmM3FkMmNkN09ocy8vaXdRZ0VtMitEQllCTEV4blFQdk5CVERHRFBURG80eWM2R1Q2ZEhPT2o0OFl5M1RHek5uQ0hNRW9Ia3hjNC9UbzJibE5sK0YyUWRQOHJFeHA4dSt1VHA4bjFHWDVyQVA3cnZhbDNEUGIvdG9JUVNRNEJBSklZbFlOdm14SkNjQnNCeEllWUJjTllHRmh2aHhyVmhneVl0aUpBbjY2K24vK3pMRUV3SUtzQzBXYi9kbUVTQUZaQm51N01hdVJ4SE1YNTRxWWNXam5QdHB1SkNZK0ZoQVlxUlRlbmtkc05BRkNiaXRjb3NZdC9RVTUxdjYzNmpYS2ZULy9wQ3JTQUFBVzR3cERTREIvUW5PdnNLVXk0NlpEaHZVb05vS0pReHJ4M2p3a3FUUUpkemdGMFBEekpjWkZvU2Fnd0NlZUFuMHEwSmcrbjMyTTZPdGp0VEcwRTIvVC8zZi9wVUFOWUNBWUhVRWN1bDZhVjRuQnQwUS8vc3d4QWdDQ0x3dkhzNzdvTEVsQmFJTi8yeVVsR0ZCVk9hOGpJNW1FU2pHS1Vjb2M4cVNZK2lxWWt4K2I1aHNaZmoyWUxETWtVaXN2ZVdUdVgzdEFVenpHM1V0emYvLy83L1VBS0FFQVlHbUtzR1dwZ1dwa2NnbU1ZR2NrdW1MTElaQmozNHNtTFRkbkhNUFFhbDZmWjNoaDhHL0NYRWFTUVRKN2lLYnVKbVZDUmpvQXltQTg0UmJ0SHJQLzlmLy8vLy85Q29BQUFBeldXQU4vL3N5eEFPQ0Izd2hLYTMzZ0hFS2hLSE43dXlLZ0dEaFp2dE1hN04yYUgvSWJJejZiYmZNY1l3WnN4MW13cGlieExnd0R3Y0pWa1EzT1ptV3pIR2p1R3ZzNlAvLzRsLzAvOVRqYmFIQmg2cjRtZUtJMlpoWGFoL1hibW00SGpJYWp6NDU5NHFCcGVscHRBYXBoU0p4bmtxWmNtR2xpanB5enVGOHRuTzB3S2oyZWw4OUYvelArMy8yZi82YUFRREVuSHdZRHgwcHRIRmhIc1FxOGYvN01zUUlBZ2VVR3hMdmF3UVJIQlBnRGUwVXFyREtjcG84SlBtVU1DdUoyd2o0RC9pTkpJQnNzc01xSGp4eE54OVRtVitMRE9LZjlYK1JKOU5kV2QvL2NBUUNEZ1p5U1J4ODZaaUgrQW5XYzk4WkJtQmhMbUJZRVlRNVRDUEREb1FjYkdoaVFWTmwvNTVYVXhIbW8yZFpYbFpIbTBNQkxmVXBmN0I5di8vcU5mL1lHZi8vMUg5VkFBQUtGZEdKYmdCakJzQjBjaXh2dVloamFCNy8rekxFQ2dJSDVSY1BydVNpa09RaTRTbmRpQllEOURJa0xXaFB4RUJxRHVpd2JsSG9SK05PclMxWCtRZ2d4a1A0MS8vL3pmLy9tSzMvLzEvLytpQ3pzYXdrU1RBYWwrSWEwaTZmTytBZ1BMcktZdVZFWlRISytyUlBWaEdpd29BSTBuYityM1YvVXJ0Ly8xSVZ2Ly9xQy8vL00vLy9vWVYxS2dBQ0FRSXNlQU5tL2NQb1p1QVViaHhpaEF0RHdJb0hOUWRhRzRoNjBQZGVBcXBwLy9zd3hCR0FCMkIyOVU2WVNvQ1JBS1AwTUlnR1FOVXFwK1VUL1ppZjRaL3FiV1g5TzJKZjlSMTJHL1NSQVRidGtqZ3NqZ0FDelZOTHRQcDNPMjA5VHYxT1JMcUZPbS9LVnZuNXhlWDlhT1hsS2dXa3hrbzRtZ1RBR0hjWkVSWUMwNDkyNlM1VndzZXZiWWRQWkdSSTJJLytuU3ZjciszeVNja0FGdEFnQVZCUVNEd1ZiNnpPRWpYL0gweEJUVVV6TGprNUxqVlZWVlZWVlZWVi8vc3l4Q1VBUk13RkRhRUFZREJLQU4yME1Rd0dWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWUT09JztcclxuY29uc3Qgc291bmRCeXRlQXJyYXkgPSBiYXNlNjRTb3VuZFRvQnl0ZUFycmF5KCBwaGV0QXVkaW9Db250ZXh0LCBzb3VuZFVSSSApO1xyXG5jb25zdCB1bmxvY2sgPSBhc3luY0xvYWRlci5jcmVhdGVMb2NrKCBzb3VuZFVSSSApO1xyXG5jb25zdCB3cmFwcGVkQXVkaW9CdWZmZXIgPSBuZXcgV3JhcHBlZEF1ZGlvQnVmZmVyKCk7XHJcblxyXG4vLyBzYWZlIHdheSB0byB1bmxvY2tcclxubGV0IHVubG9ja2VkID0gZmFsc2U7XHJcbmNvbnN0IHNhZmVVbmxvY2sgPSAoKSA9PiB7XHJcbiAgaWYgKCAhdW5sb2NrZWQgKSB7XHJcbiAgICB1bmxvY2soKTtcclxuICAgIHVubG9ja2VkID0gdHJ1ZTtcclxuICB9XHJcbn07XHJcblxyXG5jb25zdCBvbkRlY29kZVN1Y2Nlc3MgPSBkZWNvZGVkQXVkaW8gPT4ge1xyXG4gIGlmICggd3JhcHBlZEF1ZGlvQnVmZmVyLmF1ZGlvQnVmZmVyUHJvcGVydHkudmFsdWUgPT09IG51bGwgKSB7XHJcbiAgICB3cmFwcGVkQXVkaW9CdWZmZXIuYXVkaW9CdWZmZXJQcm9wZXJ0eS5zZXQoIGRlY29kZWRBdWRpbyApO1xyXG4gICAgc2FmZVVubG9jaygpO1xyXG4gIH1cclxufTtcclxuY29uc3Qgb25EZWNvZGVFcnJvciA9IGRlY29kZUVycm9yID0+IHtcclxuICBjb25zb2xlLndhcm4oICdkZWNvZGUgb2YgYXVkaW8gZGF0YSBmYWlsZWQsIHVzaW5nIHN0dWJiZWQgc291bmQsIGVycm9yOiAnICsgZGVjb2RlRXJyb3IgKTtcclxuICB3cmFwcGVkQXVkaW9CdWZmZXIuYXVkaW9CdWZmZXJQcm9wZXJ0eS5zZXQoIHBoZXRBdWRpb0NvbnRleHQuY3JlYXRlQnVmZmVyKCAxLCAxLCBwaGV0QXVkaW9Db250ZXh0LnNhbXBsZVJhdGUgKSApO1xyXG4gIHNhZmVVbmxvY2soKTtcclxufTtcclxuY29uc3QgZGVjb2RlUHJvbWlzZSA9IHBoZXRBdWRpb0NvbnRleHQuZGVjb2RlQXVkaW9EYXRhKCBzb3VuZEJ5dGVBcnJheS5idWZmZXIsIG9uRGVjb2RlU3VjY2Vzcywgb25EZWNvZGVFcnJvciApO1xyXG5pZiAoIGRlY29kZVByb21pc2UgKSB7XHJcbiAgZGVjb2RlUHJvbWlzZVxyXG4gICAgLnRoZW4oIGRlY29kZWRBdWRpbyA9PiB7XHJcbiAgICAgIGlmICggd3JhcHBlZEF1ZGlvQnVmZmVyLmF1ZGlvQnVmZmVyUHJvcGVydHkudmFsdWUgPT09IG51bGwgKSB7XHJcbiAgICAgICAgd3JhcHBlZEF1ZGlvQnVmZmVyLmF1ZGlvQnVmZmVyUHJvcGVydHkuc2V0KCBkZWNvZGVkQXVkaW8gKTtcclxuICAgICAgICBzYWZlVW5sb2NrKCk7XHJcbiAgICAgIH1cclxuICAgIH0gKVxyXG4gICAgLmNhdGNoKCBlID0+IHtcclxuICAgICAgY29uc29sZS53YXJuKCAncHJvbWlzZSByZWplY3Rpb24gY2F1Z2h0IGZvciBhdWRpbyBkZWNvZGUsIGVycm9yID0gJyArIGUgKTtcclxuICAgICAgc2FmZVVubG9jaygpO1xyXG4gICAgfSApO1xyXG59XHJcbmV4cG9ydCBkZWZhdWx0IHdyYXBwZWRBdWRpb0J1ZmZlcjsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsT0FBT0EsV0FBVyxNQUFNLG1DQUFtQztBQUMzRCxPQUFPQyxzQkFBc0IsTUFBTSwwQ0FBMEM7QUFDN0UsT0FBT0Msa0JBQWtCLE1BQU0sc0NBQXNDO0FBQ3JFLE9BQU9DLGdCQUFnQixNQUFNLG9DQUFvQztBQUVqRSxNQUFNQyxRQUFRLEdBQUcscWtFQUFxa0U7QUFDdGxFLE1BQU1DLGNBQWMsR0FBR0osc0JBQXNCLENBQUVFLGdCQUFnQixFQUFFQyxRQUFTLENBQUM7QUFDM0UsTUFBTUUsTUFBTSxHQUFHTixXQUFXLENBQUNPLFVBQVUsQ0FBRUgsUUFBUyxDQUFDO0FBQ2pELE1BQU1JLGtCQUFrQixHQUFHLElBQUlOLGtCQUFrQixDQUFDLENBQUM7O0FBRW5EO0FBQ0EsSUFBSU8sUUFBUSxHQUFHLEtBQUs7QUFDcEIsTUFBTUMsVUFBVSxHQUFHQSxDQUFBLEtBQU07RUFDdkIsSUFBSyxDQUFDRCxRQUFRLEVBQUc7SUFDZkgsTUFBTSxDQUFDLENBQUM7SUFDUkcsUUFBUSxHQUFHLElBQUk7RUFDakI7QUFDRixDQUFDO0FBRUQsTUFBTUUsZUFBZSxHQUFHQyxZQUFZLElBQUk7RUFDdEMsSUFBS0osa0JBQWtCLENBQUNLLG1CQUFtQixDQUFDQyxLQUFLLEtBQUssSUFBSSxFQUFHO0lBQzNETixrQkFBa0IsQ0FBQ0ssbUJBQW1CLENBQUNFLEdBQUcsQ0FBRUgsWUFBYSxDQUFDO0lBQzFERixVQUFVLENBQUMsQ0FBQztFQUNkO0FBQ0YsQ0FBQztBQUNELE1BQU1NLGFBQWEsR0FBR0MsV0FBVyxJQUFJO0VBQ25DQyxPQUFPLENBQUNDLElBQUksQ0FBRSwyREFBMkQsR0FBR0YsV0FBWSxDQUFDO0VBQ3pGVCxrQkFBa0IsQ0FBQ0ssbUJBQW1CLENBQUNFLEdBQUcsQ0FBRVosZ0JBQWdCLENBQUNpQixZQUFZLENBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRWpCLGdCQUFnQixDQUFDa0IsVUFBVyxDQUFFLENBQUM7RUFDaEhYLFVBQVUsQ0FBQyxDQUFDO0FBQ2QsQ0FBQztBQUNELE1BQU1ZLGFBQWEsR0FBR25CLGdCQUFnQixDQUFDb0IsZUFBZSxDQUFFbEIsY0FBYyxDQUFDbUIsTUFBTSxFQUFFYixlQUFlLEVBQUVLLGFBQWMsQ0FBQztBQUMvRyxJQUFLTSxhQUFhLEVBQUc7RUFDbkJBLGFBQWEsQ0FDVkcsSUFBSSxDQUFFYixZQUFZLElBQUk7SUFDckIsSUFBS0osa0JBQWtCLENBQUNLLG1CQUFtQixDQUFDQyxLQUFLLEtBQUssSUFBSSxFQUFHO01BQzNETixrQkFBa0IsQ0FBQ0ssbUJBQW1CLENBQUNFLEdBQUcsQ0FBRUgsWUFBYSxDQUFDO01BQzFERixVQUFVLENBQUMsQ0FBQztJQUNkO0VBQ0YsQ0FBRSxDQUFDLENBQ0ZnQixLQUFLLENBQUVDLENBQUMsSUFBSTtJQUNYVCxPQUFPLENBQUNDLElBQUksQ0FBRSxxREFBcUQsR0FBR1EsQ0FBRSxDQUFDO0lBQ3pFakIsVUFBVSxDQUFDLENBQUM7RUFDZCxDQUFFLENBQUM7QUFDUDtBQUNBLGVBQWVGLGtCQUFrQiJ9