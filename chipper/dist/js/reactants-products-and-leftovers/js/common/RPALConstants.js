// Copyright 2014-2023, University of Colorado Boulder

/**
 * Constants used throughout this simulation.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import Bounds2 from '../../../dot/js/Bounds2.js';
import Dimension2 from '../../../dot/js/Dimension2.js';
import Range from '../../../dot/js/Range.js';
import PhetFont from '../../../scenery-phet/js/PhetFont.js';
import reactantsProductsAndLeftovers from '../reactantsProductsAndLeftovers.js';
const MOLECULE_NODE_OPTIONS = {
  atomNodeOptions: {
    stroke: 'black',
    lineWidth: 0.5,
    scale: 1
  }
};
const NUMBER_SPINNER_OPTIONS = {
  numberDisplayOptions: {
    align: 'center',
    xMargin: 5,
    yMargin: 3,
    backgroundLineWidth: 0.5,
    textOptions: {
      font: new PhetFont(28)
    }
  },
  touchAreaXDilation: 20,
  touchAreaYDilation: 10
};
const RPALConstants = {
  SCREEN_VIEW_LAYOUT_BOUNDS: new Bounds2(0, 0, 835, 504),
  QUANTITY_RANGE: new Range(0, 8),
  SANDWICH_COEFFICIENT_RANGE: new Range(0, 3),
  RESET_ALL_BUTTON_SCALE: 0.75,
  // box size requested to be configurable per screen
  SANDWICHES_BEFORE_AFTER_BOX_SIZE: new Dimension2(310, 240),
  MOLECULES_BEFORE_AFTER_BOX_SIZE: new Dimension2(310, 240),
  GAME_BEFORE_AFTER_BOX_SIZE: new Dimension2(330, 240),
  // default options
  MOLECULE_NODE_OPTIONS: MOLECULE_NODE_OPTIONS,
  NUMBER_SPINNER_OPTIONS: NUMBER_SPINNER_OPTIONS
};
reactantsProductsAndLeftovers.register('RPALConstants', RPALConstants);
export default RPALConstants;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJCb3VuZHMyIiwiRGltZW5zaW9uMiIsIlJhbmdlIiwiUGhldEZvbnQiLCJyZWFjdGFudHNQcm9kdWN0c0FuZExlZnRvdmVycyIsIk1PTEVDVUxFX05PREVfT1BUSU9OUyIsImF0b21Ob2RlT3B0aW9ucyIsInN0cm9rZSIsImxpbmVXaWR0aCIsInNjYWxlIiwiTlVNQkVSX1NQSU5ORVJfT1BUSU9OUyIsIm51bWJlckRpc3BsYXlPcHRpb25zIiwiYWxpZ24iLCJ4TWFyZ2luIiwieU1hcmdpbiIsImJhY2tncm91bmRMaW5lV2lkdGgiLCJ0ZXh0T3B0aW9ucyIsImZvbnQiLCJ0b3VjaEFyZWFYRGlsYXRpb24iLCJ0b3VjaEFyZWFZRGlsYXRpb24iLCJSUEFMQ29uc3RhbnRzIiwiU0NSRUVOX1ZJRVdfTEFZT1VUX0JPVU5EUyIsIlFVQU5USVRZX1JBTkdFIiwiU0FORFdJQ0hfQ09FRkZJQ0lFTlRfUkFOR0UiLCJSRVNFVF9BTExfQlVUVE9OX1NDQUxFIiwiU0FORFdJQ0hFU19CRUZPUkVfQUZURVJfQk9YX1NJWkUiLCJNT0xFQ1VMRVNfQkVGT1JFX0FGVEVSX0JPWF9TSVpFIiwiR0FNRV9CRUZPUkVfQUZURVJfQk9YX1NJWkUiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIlJQQUxDb25zdGFudHMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTQtMjAyMywgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogQ29uc3RhbnRzIHVzZWQgdGhyb3VnaG91dCB0aGlzIHNpbXVsYXRpb24uXHJcbiAqXHJcbiAqIEBhdXRob3IgQ2hyaXMgTWFsbGV5IChQaXhlbFpvb20sIEluYy4pXHJcbiAqL1xyXG5cclxuaW1wb3J0IEJvdW5kczIgZnJvbSAnLi4vLi4vLi4vZG90L2pzL0JvdW5kczIuanMnO1xyXG5pbXBvcnQgRGltZW5zaW9uMiBmcm9tICcuLi8uLi8uLi9kb3QvanMvRGltZW5zaW9uMi5qcyc7XHJcbmltcG9ydCBSYW5nZSBmcm9tICcuLi8uLi8uLi9kb3QvanMvUmFuZ2UuanMnO1xyXG5pbXBvcnQgeyBNb2xlY3VsZU5vZGVPcHRpb25zIH0gZnJvbSAnLi4vLi4vLi4vbml0cm9nbHljZXJpbi9qcy9ub2Rlcy9Nb2xlY3VsZU5vZGUuanMnO1xyXG5pbXBvcnQgUGhldEZvbnQgZnJvbSAnLi4vLi4vLi4vc2NlbmVyeS1waGV0L2pzL1BoZXRGb250LmpzJztcclxuaW1wb3J0IHsgTnVtYmVyU3Bpbm5lck9wdGlvbnMgfSBmcm9tICcuLi8uLi8uLi9zdW4vanMvTnVtYmVyU3Bpbm5lci5qcyc7XHJcbmltcG9ydCByZWFjdGFudHNQcm9kdWN0c0FuZExlZnRvdmVycyBmcm9tICcuLi9yZWFjdGFudHNQcm9kdWN0c0FuZExlZnRvdmVycy5qcyc7XHJcblxyXG5jb25zdCBNT0xFQ1VMRV9OT0RFX09QVElPTlM6IE1vbGVjdWxlTm9kZU9wdGlvbnMgPSB7XHJcbiAgYXRvbU5vZGVPcHRpb25zOiB7XHJcbiAgICBzdHJva2U6ICdibGFjaycsXHJcbiAgICBsaW5lV2lkdGg6IDAuNSxcclxuICAgIHNjYWxlOiAxXHJcbiAgfVxyXG59O1xyXG5cclxuY29uc3QgTlVNQkVSX1NQSU5ORVJfT1BUSU9OUzogTnVtYmVyU3Bpbm5lck9wdGlvbnMgPSB7XHJcbiAgbnVtYmVyRGlzcGxheU9wdGlvbnM6IHtcclxuICAgIGFsaWduOiAnY2VudGVyJyxcclxuICAgIHhNYXJnaW46IDUsXHJcbiAgICB5TWFyZ2luOiAzLFxyXG4gICAgYmFja2dyb3VuZExpbmVXaWR0aDogMC41LFxyXG4gICAgdGV4dE9wdGlvbnM6IHtcclxuICAgICAgZm9udDogbmV3IFBoZXRGb250KCAyOCApXHJcbiAgICB9XHJcbiAgfSxcclxuICB0b3VjaEFyZWFYRGlsYXRpb246IDIwLFxyXG4gIHRvdWNoQXJlYVlEaWxhdGlvbjogMTBcclxufTtcclxuXHJcblxyXG5jb25zdCBSUEFMQ29uc3RhbnRzID0ge1xyXG5cclxuICBTQ1JFRU5fVklFV19MQVlPVVRfQk9VTkRTOiBuZXcgQm91bmRzMiggMCwgMCwgODM1LCA1MDQgKSxcclxuXHJcbiAgUVVBTlRJVFlfUkFOR0U6IG5ldyBSYW5nZSggMCwgOCApLFxyXG4gIFNBTkRXSUNIX0NPRUZGSUNJRU5UX1JBTkdFOiBuZXcgUmFuZ2UoIDAsIDMgKSxcclxuICBSRVNFVF9BTExfQlVUVE9OX1NDQUxFOiAwLjc1LFxyXG5cclxuICAvLyBib3ggc2l6ZSByZXF1ZXN0ZWQgdG8gYmUgY29uZmlndXJhYmxlIHBlciBzY3JlZW5cclxuICBTQU5EV0lDSEVTX0JFRk9SRV9BRlRFUl9CT1hfU0laRTogbmV3IERpbWVuc2lvbjIoIDMxMCwgMjQwICksXHJcbiAgTU9MRUNVTEVTX0JFRk9SRV9BRlRFUl9CT1hfU0laRTogbmV3IERpbWVuc2lvbjIoIDMxMCwgMjQwICksXHJcbiAgR0FNRV9CRUZPUkVfQUZURVJfQk9YX1NJWkU6IG5ldyBEaW1lbnNpb24yKCAzMzAsIDI0MCApLFxyXG5cclxuICAvLyBkZWZhdWx0IG9wdGlvbnNcclxuICBNT0xFQ1VMRV9OT0RFX09QVElPTlM6IE1PTEVDVUxFX05PREVfT1BUSU9OUyxcclxuICBOVU1CRVJfU1BJTk5FUl9PUFRJT05TOiBOVU1CRVJfU1BJTk5FUl9PUFRJT05TXHJcbn07XHJcblxyXG5yZWFjdGFudHNQcm9kdWN0c0FuZExlZnRvdmVycy5yZWdpc3RlciggJ1JQQUxDb25zdGFudHMnLCBSUEFMQ29uc3RhbnRzICk7XHJcbmV4cG9ydCBkZWZhdWx0IFJQQUxDb25zdGFudHM7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLE9BQU8sTUFBTSw0QkFBNEI7QUFDaEQsT0FBT0MsVUFBVSxNQUFNLCtCQUErQjtBQUN0RCxPQUFPQyxLQUFLLE1BQU0sMEJBQTBCO0FBRTVDLE9BQU9DLFFBQVEsTUFBTSxzQ0FBc0M7QUFFM0QsT0FBT0MsNkJBQTZCLE1BQU0scUNBQXFDO0FBRS9FLE1BQU1DLHFCQUEwQyxHQUFHO0VBQ2pEQyxlQUFlLEVBQUU7SUFDZkMsTUFBTSxFQUFFLE9BQU87SUFDZkMsU0FBUyxFQUFFLEdBQUc7SUFDZEMsS0FBSyxFQUFFO0VBQ1Q7QUFDRixDQUFDO0FBRUQsTUFBTUMsc0JBQTRDLEdBQUc7RUFDbkRDLG9CQUFvQixFQUFFO0lBQ3BCQyxLQUFLLEVBQUUsUUFBUTtJQUNmQyxPQUFPLEVBQUUsQ0FBQztJQUNWQyxPQUFPLEVBQUUsQ0FBQztJQUNWQyxtQkFBbUIsRUFBRSxHQUFHO0lBQ3hCQyxXQUFXLEVBQUU7TUFDWEMsSUFBSSxFQUFFLElBQUlkLFFBQVEsQ0FBRSxFQUFHO0lBQ3pCO0VBQ0YsQ0FBQztFQUNEZSxrQkFBa0IsRUFBRSxFQUFFO0VBQ3RCQyxrQkFBa0IsRUFBRTtBQUN0QixDQUFDO0FBR0QsTUFBTUMsYUFBYSxHQUFHO0VBRXBCQyx5QkFBeUIsRUFBRSxJQUFJckIsT0FBTyxDQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEdBQUksQ0FBQztFQUV4RHNCLGNBQWMsRUFBRSxJQUFJcEIsS0FBSyxDQUFFLENBQUMsRUFBRSxDQUFFLENBQUM7RUFDakNxQiwwQkFBMEIsRUFBRSxJQUFJckIsS0FBSyxDQUFFLENBQUMsRUFBRSxDQUFFLENBQUM7RUFDN0NzQixzQkFBc0IsRUFBRSxJQUFJO0VBRTVCO0VBQ0FDLGdDQUFnQyxFQUFFLElBQUl4QixVQUFVLENBQUUsR0FBRyxFQUFFLEdBQUksQ0FBQztFQUM1RHlCLCtCQUErQixFQUFFLElBQUl6QixVQUFVLENBQUUsR0FBRyxFQUFFLEdBQUksQ0FBQztFQUMzRDBCLDBCQUEwQixFQUFFLElBQUkxQixVQUFVLENBQUUsR0FBRyxFQUFFLEdBQUksQ0FBQztFQUV0RDtFQUNBSSxxQkFBcUIsRUFBRUEscUJBQXFCO0VBQzVDSyxzQkFBc0IsRUFBRUE7QUFDMUIsQ0FBQztBQUVETiw2QkFBNkIsQ0FBQ3dCLFFBQVEsQ0FBRSxlQUFlLEVBQUVSLGFBQWMsQ0FBQztBQUN4RSxlQUFlQSxhQUFhIn0=