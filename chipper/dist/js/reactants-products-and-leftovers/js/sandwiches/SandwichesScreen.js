// Copyright 2014-2023, University of Colorado Boulder

/**
 * 'Sandwiches' screen
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import Property from '../../../axon/js/Property.js';
import Screen from '../../../joist/js/Screen.js';
import ScreenIcon from '../../../joist/js/ScreenIcon.js';
import { Image } from '../../../scenery/js/imports.js';
import sandwichesHomeScreenIcon_png from '../../images/sandwichesHomeScreenIcon_png.js';
import sandwichesNavbarIcon_png from '../../images/sandwichesNavbarIcon_png.js';
import RPALColors from '../common/RPALColors.js';
import reactantsProductsAndLeftovers from '../reactantsProductsAndLeftovers.js';
import ReactantsProductsAndLeftoversStrings from '../ReactantsProductsAndLeftoversStrings.js';
import SandwichesModel from './model/SandwichesModel.js';
import SandwichesScreenView from './view/SandwichesScreenView.js';
export default class SandwichesScreen extends Screen {
  constructor(tandem) {
    const options = {
      name: ReactantsProductsAndLeftoversStrings.screen.sandwichesStringProperty,
      backgroundColorProperty: new Property(RPALColors.SCREEN_BACKGROUND),
      homeScreenIcon: createHomeScreenIcon(),
      navigationBarIcon: createNavigationBarIcon(),
      tandem: tandem
    };
    super(() => new SandwichesModel(tandem.createTandem('model')), model => new SandwichesScreenView(model, tandem.createTandem('view')), options);
  }
}

/**
 * Creates the ScreenIcon for the Home screen.
 */
function createHomeScreenIcon() {
  return new ScreenIcon(new Image(sandwichesHomeScreenIcon_png), {
    maxIconWidthProportion: 1,
    maxIconHeightProportion: 1
  });
}

/**
 * Creates the ScreenIcon for the navigation bar.
 */
function createNavigationBarIcon() {
  return new ScreenIcon(new Image(sandwichesNavbarIcon_png), {
    maxIconWidthProportion: 1,
    maxIconHeightProportion: 1
  });
}
reactantsProductsAndLeftovers.register('SandwichesScreen', SandwichesScreen);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQcm9wZXJ0eSIsIlNjcmVlbiIsIlNjcmVlbkljb24iLCJJbWFnZSIsInNhbmR3aWNoZXNIb21lU2NyZWVuSWNvbl9wbmciLCJzYW5kd2ljaGVzTmF2YmFySWNvbl9wbmciLCJSUEFMQ29sb3JzIiwicmVhY3RhbnRzUHJvZHVjdHNBbmRMZWZ0b3ZlcnMiLCJSZWFjdGFudHNQcm9kdWN0c0FuZExlZnRvdmVyc1N0cmluZ3MiLCJTYW5kd2ljaGVzTW9kZWwiLCJTYW5kd2ljaGVzU2NyZWVuVmlldyIsIlNhbmR3aWNoZXNTY3JlZW4iLCJjb25zdHJ1Y3RvciIsInRhbmRlbSIsIm9wdGlvbnMiLCJuYW1lIiwic2NyZWVuIiwic2FuZHdpY2hlc1N0cmluZ1Byb3BlcnR5IiwiYmFja2dyb3VuZENvbG9yUHJvcGVydHkiLCJTQ1JFRU5fQkFDS0dST1VORCIsImhvbWVTY3JlZW5JY29uIiwiY3JlYXRlSG9tZVNjcmVlbkljb24iLCJuYXZpZ2F0aW9uQmFySWNvbiIsImNyZWF0ZU5hdmlnYXRpb25CYXJJY29uIiwiY3JlYXRlVGFuZGVtIiwibW9kZWwiLCJtYXhJY29uV2lkdGhQcm9wb3J0aW9uIiwibWF4SWNvbkhlaWdodFByb3BvcnRpb24iLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIlNhbmR3aWNoZXNTY3JlZW4udHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTQtMjAyMywgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogJ1NhbmR3aWNoZXMnIHNjcmVlblxyXG4gKlxyXG4gKiBAYXV0aG9yIENocmlzIE1hbGxleSAoUGl4ZWxab29tLCBJbmMuKVxyXG4gKi9cclxuXHJcbmltcG9ydCBQcm9wZXJ0eSBmcm9tICcuLi8uLi8uLi9heG9uL2pzL1Byb3BlcnR5LmpzJztcclxuaW1wb3J0IFNjcmVlbiBmcm9tICcuLi8uLi8uLi9qb2lzdC9qcy9TY3JlZW4uanMnO1xyXG5pbXBvcnQgU2NyZWVuSWNvbiBmcm9tICcuLi8uLi8uLi9qb2lzdC9qcy9TY3JlZW5JY29uLmpzJztcclxuaW1wb3J0IHsgSW1hZ2UgfSBmcm9tICcuLi8uLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgVGFuZGVtIGZyb20gJy4uLy4uLy4uL3RhbmRlbS9qcy9UYW5kZW0uanMnO1xyXG5pbXBvcnQgc2FuZHdpY2hlc0hvbWVTY3JlZW5JY29uX3BuZyBmcm9tICcuLi8uLi9pbWFnZXMvc2FuZHdpY2hlc0hvbWVTY3JlZW5JY29uX3BuZy5qcyc7XHJcbmltcG9ydCBzYW5kd2ljaGVzTmF2YmFySWNvbl9wbmcgZnJvbSAnLi4vLi4vaW1hZ2VzL3NhbmR3aWNoZXNOYXZiYXJJY29uX3BuZy5qcyc7XHJcbmltcG9ydCBSUEFMQ29sb3JzIGZyb20gJy4uL2NvbW1vbi9SUEFMQ29sb3JzLmpzJztcclxuaW1wb3J0IHJlYWN0YW50c1Byb2R1Y3RzQW5kTGVmdG92ZXJzIGZyb20gJy4uL3JlYWN0YW50c1Byb2R1Y3RzQW5kTGVmdG92ZXJzLmpzJztcclxuaW1wb3J0IFJlYWN0YW50c1Byb2R1Y3RzQW5kTGVmdG92ZXJzU3RyaW5ncyBmcm9tICcuLi9SZWFjdGFudHNQcm9kdWN0c0FuZExlZnRvdmVyc1N0cmluZ3MuanMnO1xyXG5pbXBvcnQgU2FuZHdpY2hlc01vZGVsIGZyb20gJy4vbW9kZWwvU2FuZHdpY2hlc01vZGVsLmpzJztcclxuaW1wb3J0IFNhbmR3aWNoZXNTY3JlZW5WaWV3IGZyb20gJy4vdmlldy9TYW5kd2ljaGVzU2NyZWVuVmlldy5qcyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTYW5kd2ljaGVzU2NyZWVuIGV4dGVuZHMgU2NyZWVuPFNhbmR3aWNoZXNNb2RlbCwgU2FuZHdpY2hlc1NjcmVlblZpZXc+IHtcclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKCB0YW5kZW06IFRhbmRlbSApIHtcclxuXHJcbiAgICBjb25zdCBvcHRpb25zID0ge1xyXG4gICAgICBuYW1lOiBSZWFjdGFudHNQcm9kdWN0c0FuZExlZnRvdmVyc1N0cmluZ3Muc2NyZWVuLnNhbmR3aWNoZXNTdHJpbmdQcm9wZXJ0eSxcclxuICAgICAgYmFja2dyb3VuZENvbG9yUHJvcGVydHk6IG5ldyBQcm9wZXJ0eSggUlBBTENvbG9ycy5TQ1JFRU5fQkFDS0dST1VORCApLFxyXG4gICAgICBob21lU2NyZWVuSWNvbjogY3JlYXRlSG9tZVNjcmVlbkljb24oKSxcclxuICAgICAgbmF2aWdhdGlvbkJhckljb246IGNyZWF0ZU5hdmlnYXRpb25CYXJJY29uKCksXHJcbiAgICAgIHRhbmRlbTogdGFuZGVtXHJcbiAgICB9O1xyXG5cclxuICAgIHN1cGVyKFxyXG4gICAgICAoKSA9PiBuZXcgU2FuZHdpY2hlc01vZGVsKCB0YW5kZW0uY3JlYXRlVGFuZGVtKCAnbW9kZWwnICkgKSxcclxuICAgICAgbW9kZWwgPT4gbmV3IFNhbmR3aWNoZXNTY3JlZW5WaWV3KCBtb2RlbCwgdGFuZGVtLmNyZWF0ZVRhbmRlbSggJ3ZpZXcnICkgKSxcclxuICAgICAgb3B0aW9uc1xyXG4gICAgKTtcclxuICB9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDcmVhdGVzIHRoZSBTY3JlZW5JY29uIGZvciB0aGUgSG9tZSBzY3JlZW4uXHJcbiAqL1xyXG5mdW5jdGlvbiBjcmVhdGVIb21lU2NyZWVuSWNvbigpOiBTY3JlZW5JY29uIHtcclxuICByZXR1cm4gbmV3IFNjcmVlbkljb24oIG5ldyBJbWFnZSggc2FuZHdpY2hlc0hvbWVTY3JlZW5JY29uX3BuZyApLCB7XHJcbiAgICBtYXhJY29uV2lkdGhQcm9wb3J0aW9uOiAxLFxyXG4gICAgbWF4SWNvbkhlaWdodFByb3BvcnRpb246IDFcclxuICB9ICk7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDcmVhdGVzIHRoZSBTY3JlZW5JY29uIGZvciB0aGUgbmF2aWdhdGlvbiBiYXIuXHJcbiAqL1xyXG5mdW5jdGlvbiBjcmVhdGVOYXZpZ2F0aW9uQmFySWNvbigpOiBTY3JlZW5JY29uIHtcclxuICByZXR1cm4gbmV3IFNjcmVlbkljb24oIG5ldyBJbWFnZSggc2FuZHdpY2hlc05hdmJhckljb25fcG5nICksIHtcclxuICAgIG1heEljb25XaWR0aFByb3BvcnRpb246IDEsXHJcbiAgICBtYXhJY29uSGVpZ2h0UHJvcG9ydGlvbjogMVxyXG4gIH0gKTtcclxufVxyXG5cclxucmVhY3RhbnRzUHJvZHVjdHNBbmRMZWZ0b3ZlcnMucmVnaXN0ZXIoICdTYW5kd2ljaGVzU2NyZWVuJywgU2FuZHdpY2hlc1NjcmVlbiApOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxRQUFRLE1BQU0sOEJBQThCO0FBQ25ELE9BQU9DLE1BQU0sTUFBTSw2QkFBNkI7QUFDaEQsT0FBT0MsVUFBVSxNQUFNLGlDQUFpQztBQUN4RCxTQUFTQyxLQUFLLFFBQVEsZ0NBQWdDO0FBRXRELE9BQU9DLDRCQUE0QixNQUFNLDhDQUE4QztBQUN2RixPQUFPQyx3QkFBd0IsTUFBTSwwQ0FBMEM7QUFDL0UsT0FBT0MsVUFBVSxNQUFNLHlCQUF5QjtBQUNoRCxPQUFPQyw2QkFBNkIsTUFBTSxxQ0FBcUM7QUFDL0UsT0FBT0Msb0NBQW9DLE1BQU0sNENBQTRDO0FBQzdGLE9BQU9DLGVBQWUsTUFBTSw0QkFBNEI7QUFDeEQsT0FBT0Msb0JBQW9CLE1BQU0sZ0NBQWdDO0FBRWpFLGVBQWUsTUFBTUMsZ0JBQWdCLFNBQVNWLE1BQU0sQ0FBd0M7RUFFbkZXLFdBQVdBLENBQUVDLE1BQWMsRUFBRztJQUVuQyxNQUFNQyxPQUFPLEdBQUc7TUFDZEMsSUFBSSxFQUFFUCxvQ0FBb0MsQ0FBQ1EsTUFBTSxDQUFDQyx3QkFBd0I7TUFDMUVDLHVCQUF1QixFQUFFLElBQUlsQixRQUFRLENBQUVNLFVBQVUsQ0FBQ2EsaUJBQWtCLENBQUM7TUFDckVDLGNBQWMsRUFBRUMsb0JBQW9CLENBQUMsQ0FBQztNQUN0Q0MsaUJBQWlCLEVBQUVDLHVCQUF1QixDQUFDLENBQUM7TUFDNUNWLE1BQU0sRUFBRUE7SUFDVixDQUFDO0lBRUQsS0FBSyxDQUNILE1BQU0sSUFBSUosZUFBZSxDQUFFSSxNQUFNLENBQUNXLFlBQVksQ0FBRSxPQUFRLENBQUUsQ0FBQyxFQUMzREMsS0FBSyxJQUFJLElBQUlmLG9CQUFvQixDQUFFZSxLQUFLLEVBQUVaLE1BQU0sQ0FBQ1csWUFBWSxDQUFFLE1BQU8sQ0FBRSxDQUFDLEVBQ3pFVixPQUNGLENBQUM7RUFDSDtBQUNGOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFNBQVNPLG9CQUFvQkEsQ0FBQSxFQUFlO0VBQzFDLE9BQU8sSUFBSW5CLFVBQVUsQ0FBRSxJQUFJQyxLQUFLLENBQUVDLDRCQUE2QixDQUFDLEVBQUU7SUFDaEVzQixzQkFBc0IsRUFBRSxDQUFDO0lBQ3pCQyx1QkFBdUIsRUFBRTtFQUMzQixDQUFFLENBQUM7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxTQUFTSix1QkFBdUJBLENBQUEsRUFBZTtFQUM3QyxPQUFPLElBQUlyQixVQUFVLENBQUUsSUFBSUMsS0FBSyxDQUFFRSx3QkFBeUIsQ0FBQyxFQUFFO0lBQzVEcUIsc0JBQXNCLEVBQUUsQ0FBQztJQUN6QkMsdUJBQXVCLEVBQUU7RUFDM0IsQ0FBRSxDQUFDO0FBQ0w7QUFFQXBCLDZCQUE2QixDQUFDcUIsUUFBUSxDQUFFLGtCQUFrQixFQUFFakIsZ0JBQWlCLENBQUMifQ==