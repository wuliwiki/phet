// Copyright 2014-2022, University of Colorado Boulder

/**
 * Constants used throughout this sim.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import Bounds2 from '../../../dot/js/Bounds2.js';
import Range from '../../../dot/js/Range.js';
import RangeWithValue from '../../../dot/js/RangeWithValue.js';
import PhetFont from '../../../scenery-phet/js/PhetFont.js';
import moleculePolarity from '../moleculePolarity.js';
const MPConstants = {
  // ScreenView
  LAYOUT_BOUNDS: new Bounds2(0, 0, 1100, 700),
  // Model
  ELECTRONEGATIVITY_RANGE: new RangeWithValue(2, 4, 2),
  ELECTRONEGATIVITY_TICK_SPACING: 0.2,
  ATOM_DIAMETER: 100,
  BOND_LENGTH: 150,
  // must be longer than ATOM_DIAMETER
  ANGLE_RANGE: new Range(-Math.PI, Math.PI),
  // see https://github.com/phetsims/molecule-polarity/issues/91

  CONTROL_ICON_X_SPACING: 10,
  // horizontal space between labels and icons
  CONTROL_PANEL_Y_SPACING: 15,
  // vertical space between controls

  // options for titles in control panels
  CONTROL_PANEL_TITLE_OPTIONS: {
    font: new PhetFont({
      size: 20,
      weight: 'bold'
    }),
    maxWidth: 250 // i18n, determined empirically
  },

  // options for text labels on controls
  CONTROL_TEXT_OPTIONS: {
    font: new PhetFont(18),
    maxWidth: 175 // i18n, determined empirically
  },

  AQUA_RADIO_BUTTON_OPTIONS: {
    radius: 9
  },
  // Controls the width of the gradient used to fill the 2D surfaces.
  // Smaller values result in a more noticeable change as the EN sliders are dragged.
  SURFACE_GRADIENT_WIDTH_MULTIPLIER: 5
};
assert && assert(MPConstants.BOND_LENGTH > MPConstants.ATOM_DIAMETER, 'bond length must be > atom diameter');
moleculePolarity.register('MPConstants', MPConstants);
export default MPConstants;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJCb3VuZHMyIiwiUmFuZ2UiLCJSYW5nZVdpdGhWYWx1ZSIsIlBoZXRGb250IiwibW9sZWN1bGVQb2xhcml0eSIsIk1QQ29uc3RhbnRzIiwiTEFZT1VUX0JPVU5EUyIsIkVMRUNUUk9ORUdBVElWSVRZX1JBTkdFIiwiRUxFQ1RST05FR0FUSVZJVFlfVElDS19TUEFDSU5HIiwiQVRPTV9ESUFNRVRFUiIsIkJPTkRfTEVOR1RIIiwiQU5HTEVfUkFOR0UiLCJNYXRoIiwiUEkiLCJDT05UUk9MX0lDT05fWF9TUEFDSU5HIiwiQ09OVFJPTF9QQU5FTF9ZX1NQQUNJTkciLCJDT05UUk9MX1BBTkVMX1RJVExFX09QVElPTlMiLCJmb250Iiwic2l6ZSIsIndlaWdodCIsIm1heFdpZHRoIiwiQ09OVFJPTF9URVhUX09QVElPTlMiLCJBUVVBX1JBRElPX0JVVFRPTl9PUFRJT05TIiwicmFkaXVzIiwiU1VSRkFDRV9HUkFESUVOVF9XSURUSF9NVUxUSVBMSUVSIiwiYXNzZXJ0IiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJNUENvbnN0YW50cy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxNC0yMDIyLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBDb25zdGFudHMgdXNlZCB0aHJvdWdob3V0IHRoaXMgc2ltLlxyXG4gKlxyXG4gKiBAYXV0aG9yIENocmlzIE1hbGxleSAoUGl4ZWxab29tLCBJbmMuKVxyXG4gKi9cclxuXHJcbmltcG9ydCBCb3VuZHMyIGZyb20gJy4uLy4uLy4uL2RvdC9qcy9Cb3VuZHMyLmpzJztcclxuaW1wb3J0IFJhbmdlIGZyb20gJy4uLy4uLy4uL2RvdC9qcy9SYW5nZS5qcyc7XHJcbmltcG9ydCBSYW5nZVdpdGhWYWx1ZSBmcm9tICcuLi8uLi8uLi9kb3QvanMvUmFuZ2VXaXRoVmFsdWUuanMnO1xyXG5pbXBvcnQgUGhldEZvbnQgZnJvbSAnLi4vLi4vLi4vc2NlbmVyeS1waGV0L2pzL1BoZXRGb250LmpzJztcclxuaW1wb3J0IG1vbGVjdWxlUG9sYXJpdHkgZnJvbSAnLi4vbW9sZWN1bGVQb2xhcml0eS5qcyc7XHJcblxyXG5jb25zdCBNUENvbnN0YW50cyA9IHtcclxuXHJcbiAgLy8gU2NyZWVuVmlld1xyXG4gIExBWU9VVF9CT1VORFM6IG5ldyBCb3VuZHMyKCAwLCAwLCAxMTAwLCA3MDAgKSxcclxuXHJcbiAgLy8gTW9kZWxcclxuICBFTEVDVFJPTkVHQVRJVklUWV9SQU5HRTogbmV3IFJhbmdlV2l0aFZhbHVlKCAyLCA0LCAyICksXHJcbiAgRUxFQ1RST05FR0FUSVZJVFlfVElDS19TUEFDSU5HOiAwLjIsXHJcbiAgQVRPTV9ESUFNRVRFUjogMTAwLFxyXG4gIEJPTkRfTEVOR1RIOiAxNTAsIC8vIG11c3QgYmUgbG9uZ2VyIHRoYW4gQVRPTV9ESUFNRVRFUlxyXG4gIEFOR0xFX1JBTkdFOiBuZXcgUmFuZ2UoIC1NYXRoLlBJLCBNYXRoLlBJICksIC8vIHNlZSBodHRwczovL2dpdGh1Yi5jb20vcGhldHNpbXMvbW9sZWN1bGUtcG9sYXJpdHkvaXNzdWVzLzkxXHJcblxyXG4gIENPTlRST0xfSUNPTl9YX1NQQUNJTkc6IDEwLCAgLy8gaG9yaXpvbnRhbCBzcGFjZSBiZXR3ZWVuIGxhYmVscyBhbmQgaWNvbnNcclxuICBDT05UUk9MX1BBTkVMX1lfU1BBQ0lORzogMTUsIC8vIHZlcnRpY2FsIHNwYWNlIGJldHdlZW4gY29udHJvbHNcclxuXHJcbiAgLy8gb3B0aW9ucyBmb3IgdGl0bGVzIGluIGNvbnRyb2wgcGFuZWxzXHJcbiAgQ09OVFJPTF9QQU5FTF9USVRMRV9PUFRJT05TOiB7XHJcbiAgICBmb250OiBuZXcgUGhldEZvbnQoIHsgc2l6ZTogMjAsIHdlaWdodDogJ2JvbGQnIH0gKSxcclxuICAgIG1heFdpZHRoOiAyNTAgLy8gaTE4biwgZGV0ZXJtaW5lZCBlbXBpcmljYWxseVxyXG4gIH0sXHJcblxyXG4gIC8vIG9wdGlvbnMgZm9yIHRleHQgbGFiZWxzIG9uIGNvbnRyb2xzXHJcbiAgQ09OVFJPTF9URVhUX09QVElPTlM6IHtcclxuICAgIGZvbnQ6IG5ldyBQaGV0Rm9udCggMTggKSxcclxuICAgIG1heFdpZHRoOiAxNzUgLy8gaTE4biwgZGV0ZXJtaW5lZCBlbXBpcmljYWxseVxyXG4gIH0sXHJcblxyXG4gIEFRVUFfUkFESU9fQlVUVE9OX09QVElPTlM6IHsgcmFkaXVzOiA5IH0sXHJcblxyXG4gIC8vIENvbnRyb2xzIHRoZSB3aWR0aCBvZiB0aGUgZ3JhZGllbnQgdXNlZCB0byBmaWxsIHRoZSAyRCBzdXJmYWNlcy5cclxuICAvLyBTbWFsbGVyIHZhbHVlcyByZXN1bHQgaW4gYSBtb3JlIG5vdGljZWFibGUgY2hhbmdlIGFzIHRoZSBFTiBzbGlkZXJzIGFyZSBkcmFnZ2VkLlxyXG4gIFNVUkZBQ0VfR1JBRElFTlRfV0lEVEhfTVVMVElQTElFUjogNVxyXG59O1xyXG5cclxuYXNzZXJ0ICYmIGFzc2VydCggTVBDb25zdGFudHMuQk9ORF9MRU5HVEggPiBNUENvbnN0YW50cy5BVE9NX0RJQU1FVEVSLCAnYm9uZCBsZW5ndGggbXVzdCBiZSA+IGF0b20gZGlhbWV0ZXInICk7XHJcblxyXG5tb2xlY3VsZVBvbGFyaXR5LnJlZ2lzdGVyKCAnTVBDb25zdGFudHMnLCBNUENvbnN0YW50cyApO1xyXG5leHBvcnQgZGVmYXVsdCBNUENvbnN0YW50czsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsT0FBTyxNQUFNLDRCQUE0QjtBQUNoRCxPQUFPQyxLQUFLLE1BQU0sMEJBQTBCO0FBQzVDLE9BQU9DLGNBQWMsTUFBTSxtQ0FBbUM7QUFDOUQsT0FBT0MsUUFBUSxNQUFNLHNDQUFzQztBQUMzRCxPQUFPQyxnQkFBZ0IsTUFBTSx3QkFBd0I7QUFFckQsTUFBTUMsV0FBVyxHQUFHO0VBRWxCO0VBQ0FDLGFBQWEsRUFBRSxJQUFJTixPQUFPLENBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsR0FBSSxDQUFDO0VBRTdDO0VBQ0FPLHVCQUF1QixFQUFFLElBQUlMLGNBQWMsQ0FBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUUsQ0FBQztFQUN0RE0sOEJBQThCLEVBQUUsR0FBRztFQUNuQ0MsYUFBYSxFQUFFLEdBQUc7RUFDbEJDLFdBQVcsRUFBRSxHQUFHO0VBQUU7RUFDbEJDLFdBQVcsRUFBRSxJQUFJVixLQUFLLENBQUUsQ0FBQ1csSUFBSSxDQUFDQyxFQUFFLEVBQUVELElBQUksQ0FBQ0MsRUFBRyxDQUFDO0VBQUU7O0VBRTdDQyxzQkFBc0IsRUFBRSxFQUFFO0VBQUc7RUFDN0JDLHVCQUF1QixFQUFFLEVBQUU7RUFBRTs7RUFFN0I7RUFDQUMsMkJBQTJCLEVBQUU7SUFDM0JDLElBQUksRUFBRSxJQUFJZCxRQUFRLENBQUU7TUFBRWUsSUFBSSxFQUFFLEVBQUU7TUFBRUMsTUFBTSxFQUFFO0lBQU8sQ0FBRSxDQUFDO0lBQ2xEQyxRQUFRLEVBQUUsR0FBRyxDQUFDO0VBQ2hCLENBQUM7O0VBRUQ7RUFDQUMsb0JBQW9CLEVBQUU7SUFDcEJKLElBQUksRUFBRSxJQUFJZCxRQUFRLENBQUUsRUFBRyxDQUFDO0lBQ3hCaUIsUUFBUSxFQUFFLEdBQUcsQ0FBQztFQUNoQixDQUFDOztFQUVERSx5QkFBeUIsRUFBRTtJQUFFQyxNQUFNLEVBQUU7RUFBRSxDQUFDO0VBRXhDO0VBQ0E7RUFDQUMsaUNBQWlDLEVBQUU7QUFDckMsQ0FBQztBQUVEQyxNQUFNLElBQUlBLE1BQU0sQ0FBRXBCLFdBQVcsQ0FBQ0ssV0FBVyxHQUFHTCxXQUFXLENBQUNJLGFBQWEsRUFBRSxxQ0FBc0MsQ0FBQztBQUU5R0wsZ0JBQWdCLENBQUNzQixRQUFRLENBQUUsYUFBYSxFQUFFckIsV0FBWSxDQUFDO0FBQ3ZELGVBQWVBLFdBQVcifQ==