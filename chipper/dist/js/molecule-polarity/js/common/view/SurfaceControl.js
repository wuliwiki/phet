// Copyright 2017-2022, University of Colorado Boulder

/**
 * Control panel for the molecule's surface.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import optionize, { combineOptions } from '../../../../phet-core/js/optionize.js';
import { Text, VBox } from '../../../../scenery/js/imports.js';
import moleculePolarity from '../../moleculePolarity.js';
import MoleculePolarityStrings from '../../MoleculePolarityStrings.js';
import MPConstants from '../MPConstants.js';
import SurfaceRadioButtonGroup from './SurfaceRadioButtonGroup.js';
export default class SurfaceControl extends VBox {
  constructor(surfaceTypeProperty, providedOptions) {
    const options = optionize()({
      // VBoxOptions
      align: 'left',
      spacing: MPConstants.CONTROL_PANEL_Y_SPACING
    }, providedOptions);

    // title
    const titleText = new Text(MoleculePolarityStrings.surfaceStringProperty, combineOptions({}, MPConstants.CONTROL_PANEL_TITLE_OPTIONS, {
      tandem: options.tandem.createTandem('titleText')
    }));

    // Radio button group
    const radioButtonGroup = new SurfaceRadioButtonGroup(surfaceTypeProperty, {
      tandem: options.tandem.createTandem('radioButtonGroup')
    });
    options.children = [titleText, radioButtonGroup];
    super(options);
  }
  dispose() {
    assert && assert(false, 'dispose is not supported, exists for the lifetime of the sim');
    super.dispose();
  }
}
moleculePolarity.register('SurfaceControl', SurfaceControl);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJvcHRpb25pemUiLCJjb21iaW5lT3B0aW9ucyIsIlRleHQiLCJWQm94IiwibW9sZWN1bGVQb2xhcml0eSIsIk1vbGVjdWxlUG9sYXJpdHlTdHJpbmdzIiwiTVBDb25zdGFudHMiLCJTdXJmYWNlUmFkaW9CdXR0b25Hcm91cCIsIlN1cmZhY2VDb250cm9sIiwiY29uc3RydWN0b3IiLCJzdXJmYWNlVHlwZVByb3BlcnR5IiwicHJvdmlkZWRPcHRpb25zIiwib3B0aW9ucyIsImFsaWduIiwic3BhY2luZyIsIkNPTlRST0xfUEFORUxfWV9TUEFDSU5HIiwidGl0bGVUZXh0Iiwic3VyZmFjZVN0cmluZ1Byb3BlcnR5IiwiQ09OVFJPTF9QQU5FTF9USVRMRV9PUFRJT05TIiwidGFuZGVtIiwiY3JlYXRlVGFuZGVtIiwicmFkaW9CdXR0b25Hcm91cCIsImNoaWxkcmVuIiwiZGlzcG9zZSIsImFzc2VydCIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiU3VyZmFjZUNvbnRyb2wudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTctMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogQ29udHJvbCBwYW5lbCBmb3IgdGhlIG1vbGVjdWxlJ3Mgc3VyZmFjZS5cclxuICpcclxuICogQGF1dGhvciBDaHJpcyBNYWxsZXkgKFBpeGVsWm9vbSwgSW5jLilcclxuICovXHJcblxyXG5pbXBvcnQgb3B0aW9uaXplLCB7IGNvbWJpbmVPcHRpb25zLCBFbXB0eVNlbGZPcHRpb25zIH0gZnJvbSAnLi4vLi4vLi4vLi4vcGhldC1jb3JlL2pzL29wdGlvbml6ZS5qcyc7XHJcbmltcG9ydCBQaWNrUmVxdWlyZWQgZnJvbSAnLi4vLi4vLi4vLi4vcGhldC1jb3JlL2pzL3R5cGVzL1BpY2tSZXF1aXJlZC5qcyc7XHJcbmltcG9ydCB7IFRleHQsIFRleHRPcHRpb25zLCBWQm94LCBWQm94T3B0aW9ucyB9IGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XHJcbmltcG9ydCBtb2xlY3VsZVBvbGFyaXR5IGZyb20gJy4uLy4uL21vbGVjdWxlUG9sYXJpdHkuanMnO1xyXG5pbXBvcnQgTW9sZWN1bGVQb2xhcml0eVN0cmluZ3MgZnJvbSAnLi4vLi4vTW9sZWN1bGVQb2xhcml0eVN0cmluZ3MuanMnO1xyXG5pbXBvcnQgTVBDb25zdGFudHMgZnJvbSAnLi4vTVBDb25zdGFudHMuanMnO1xyXG5pbXBvcnQgU3VyZmFjZVJhZGlvQnV0dG9uR3JvdXAgZnJvbSAnLi9TdXJmYWNlUmFkaW9CdXR0b25Hcm91cC5qcyc7XHJcbmltcG9ydCB7IFN1cmZhY2VUeXBlIH0gZnJvbSAnLi4vbW9kZWwvU3VyZmFjZVR5cGUuanMnO1xyXG5pbXBvcnQgU3RyaW5nVW5pb25Qcm9wZXJ0eSBmcm9tICcuLi8uLi8uLi8uLi9heG9uL2pzL1N0cmluZ1VuaW9uUHJvcGVydHkuanMnO1xyXG5cclxudHlwZSBTZWxmT3B0aW9ucyA9IEVtcHR5U2VsZk9wdGlvbnM7XHJcblxyXG50eXBlIFN1cmZhY2VDb250cm9sT3B0aW9ucyA9IFNlbGZPcHRpb25zICYgUGlja1JlcXVpcmVkPFZCb3hPcHRpb25zLCAndGFuZGVtJz47XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTdXJmYWNlQ29udHJvbCBleHRlbmRzIFZCb3gge1xyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoIHN1cmZhY2VUeXBlUHJvcGVydHk6IFN0cmluZ1VuaW9uUHJvcGVydHk8U3VyZmFjZVR5cGU+LFxyXG4gICAgICAgICAgICAgICAgICAgICAgcHJvdmlkZWRPcHRpb25zOiBTdXJmYWNlQ29udHJvbE9wdGlvbnMgKSB7XHJcblxyXG4gICAgY29uc3Qgb3B0aW9ucyA9IG9wdGlvbml6ZTxTdXJmYWNlQ29udHJvbE9wdGlvbnMsIFNlbGZPcHRpb25zLCBWQm94T3B0aW9ucz4oKSgge1xyXG5cclxuICAgICAgLy8gVkJveE9wdGlvbnNcclxuICAgICAgYWxpZ246ICdsZWZ0JyxcclxuICAgICAgc3BhY2luZzogTVBDb25zdGFudHMuQ09OVFJPTF9QQU5FTF9ZX1NQQUNJTkdcclxuICAgIH0sIHByb3ZpZGVkT3B0aW9ucyApO1xyXG5cclxuICAgIC8vIHRpdGxlXHJcbiAgICBjb25zdCB0aXRsZVRleHQgPSBuZXcgVGV4dCggTW9sZWN1bGVQb2xhcml0eVN0cmluZ3Muc3VyZmFjZVN0cmluZ1Byb3BlcnR5LCBjb21iaW5lT3B0aW9uczxUZXh0T3B0aW9ucz4oXHJcbiAgICAgIHt9LCBNUENvbnN0YW50cy5DT05UUk9MX1BBTkVMX1RJVExFX09QVElPTlMsIHtcclxuICAgICAgICB0YW5kZW06IG9wdGlvbnMudGFuZGVtLmNyZWF0ZVRhbmRlbSggJ3RpdGxlVGV4dCcgKVxyXG4gICAgICB9ICkgKTtcclxuXHJcbiAgICAvLyBSYWRpbyBidXR0b24gZ3JvdXBcclxuICAgIGNvbnN0IHJhZGlvQnV0dG9uR3JvdXAgPSBuZXcgU3VyZmFjZVJhZGlvQnV0dG9uR3JvdXAoIHN1cmZhY2VUeXBlUHJvcGVydHksIHtcclxuICAgICAgdGFuZGVtOiBvcHRpb25zLnRhbmRlbS5jcmVhdGVUYW5kZW0oICdyYWRpb0J1dHRvbkdyb3VwJyApXHJcbiAgICB9ICk7XHJcblxyXG4gICAgb3B0aW9ucy5jaGlsZHJlbiA9IFsgdGl0bGVUZXh0LCByYWRpb0J1dHRvbkdyb3VwIF07XHJcblxyXG4gICAgc3VwZXIoIG9wdGlvbnMgKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBvdmVycmlkZSBkaXNwb3NlKCk6IHZvaWQge1xyXG4gICAgYXNzZXJ0ICYmIGFzc2VydCggZmFsc2UsICdkaXNwb3NlIGlzIG5vdCBzdXBwb3J0ZWQsIGV4aXN0cyBmb3IgdGhlIGxpZmV0aW1lIG9mIHRoZSBzaW0nICk7XHJcbiAgICBzdXBlci5kaXNwb3NlKCk7XHJcbiAgfVxyXG59XHJcblxyXG5tb2xlY3VsZVBvbGFyaXR5LnJlZ2lzdGVyKCAnU3VyZmFjZUNvbnRyb2wnLCBTdXJmYWNlQ29udHJvbCApOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxTQUFTLElBQUlDLGNBQWMsUUFBMEIsdUNBQXVDO0FBRW5HLFNBQVNDLElBQUksRUFBZUMsSUFBSSxRQUFxQixtQ0FBbUM7QUFDeEYsT0FBT0MsZ0JBQWdCLE1BQU0sMkJBQTJCO0FBQ3hELE9BQU9DLHVCQUF1QixNQUFNLGtDQUFrQztBQUN0RSxPQUFPQyxXQUFXLE1BQU0sbUJBQW1CO0FBQzNDLE9BQU9DLHVCQUF1QixNQUFNLDhCQUE4QjtBQVFsRSxlQUFlLE1BQU1DLGNBQWMsU0FBU0wsSUFBSSxDQUFDO0VBRXhDTSxXQUFXQSxDQUFFQyxtQkFBcUQsRUFDckRDLGVBQXNDLEVBQUc7SUFFM0QsTUFBTUMsT0FBTyxHQUFHWixTQUFTLENBQWtELENBQUMsQ0FBRTtNQUU1RTtNQUNBYSxLQUFLLEVBQUUsTUFBTTtNQUNiQyxPQUFPLEVBQUVSLFdBQVcsQ0FBQ1M7SUFDdkIsQ0FBQyxFQUFFSixlQUFnQixDQUFDOztJQUVwQjtJQUNBLE1BQU1LLFNBQVMsR0FBRyxJQUFJZCxJQUFJLENBQUVHLHVCQUF1QixDQUFDWSxxQkFBcUIsRUFBRWhCLGNBQWMsQ0FDdkYsQ0FBQyxDQUFDLEVBQUVLLFdBQVcsQ0FBQ1ksMkJBQTJCLEVBQUU7TUFDM0NDLE1BQU0sRUFBRVAsT0FBTyxDQUFDTyxNQUFNLENBQUNDLFlBQVksQ0FBRSxXQUFZO0lBQ25ELENBQUUsQ0FBRSxDQUFDOztJQUVQO0lBQ0EsTUFBTUMsZ0JBQWdCLEdBQUcsSUFBSWQsdUJBQXVCLENBQUVHLG1CQUFtQixFQUFFO01BQ3pFUyxNQUFNLEVBQUVQLE9BQU8sQ0FBQ08sTUFBTSxDQUFDQyxZQUFZLENBQUUsa0JBQW1CO0lBQzFELENBQUUsQ0FBQztJQUVIUixPQUFPLENBQUNVLFFBQVEsR0FBRyxDQUFFTixTQUFTLEVBQUVLLGdCQUFnQixDQUFFO0lBRWxELEtBQUssQ0FBRVQsT0FBUSxDQUFDO0VBQ2xCO0VBRWdCVyxPQUFPQSxDQUFBLEVBQVM7SUFDOUJDLE1BQU0sSUFBSUEsTUFBTSxDQUFFLEtBQUssRUFBRSw4REFBK0QsQ0FBQztJQUN6RixLQUFLLENBQUNELE9BQU8sQ0FBQyxDQUFDO0VBQ2pCO0FBQ0Y7QUFFQW5CLGdCQUFnQixDQUFDcUIsUUFBUSxDQUFFLGdCQUFnQixFQUFFakIsY0FBZSxDQUFDIn0=