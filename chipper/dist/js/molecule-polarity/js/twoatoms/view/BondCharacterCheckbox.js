// Copyright 2021-2022, University of Colorado Boulder

/**
 * BondCharacterCheckbox is the checkbox for controlling visibility of the 'Bond Character' display.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import { combineOptions } from '../../../../phet-core/js/optionize.js';
import { Text } from '../../../../scenery/js/imports.js';
import Checkbox from '../../../../sun/js/Checkbox.js';
import MPConstants from '../../common/MPConstants.js';
import moleculePolarity from '../../moleculePolarity.js';
import MoleculePolarityStrings from '../../MoleculePolarityStrings.js';
export default class BondCharacterCheckbox extends Checkbox {
  constructor(bondCharacterVisibleProperty, providedOptions) {
    const options = providedOptions;
    const labelText = new Text(MoleculePolarityStrings.bondCharacterStringProperty, combineOptions({}, MPConstants.CONTROL_TEXT_OPTIONS, {
      tandem: options.tandem.createTandem('labelText')
    }));
    super(bondCharacterVisibleProperty, labelText, options);
  }
  dispose() {
    assert && assert(false, 'dispose is not supported, exists for the lifetime of the sim');
    super.dispose();
  }
}
moleculePolarity.register('BondCharacterCheckbox', BondCharacterCheckbox);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb21iaW5lT3B0aW9ucyIsIlRleHQiLCJDaGVja2JveCIsIk1QQ29uc3RhbnRzIiwibW9sZWN1bGVQb2xhcml0eSIsIk1vbGVjdWxlUG9sYXJpdHlTdHJpbmdzIiwiQm9uZENoYXJhY3RlckNoZWNrYm94IiwiY29uc3RydWN0b3IiLCJib25kQ2hhcmFjdGVyVmlzaWJsZVByb3BlcnR5IiwicHJvdmlkZWRPcHRpb25zIiwib3B0aW9ucyIsImxhYmVsVGV4dCIsImJvbmRDaGFyYWN0ZXJTdHJpbmdQcm9wZXJ0eSIsIkNPTlRST0xfVEVYVF9PUFRJT05TIiwidGFuZGVtIiwiY3JlYXRlVGFuZGVtIiwiZGlzcG9zZSIsImFzc2VydCIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiQm9uZENoYXJhY3RlckNoZWNrYm94LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjIsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIEJvbmRDaGFyYWN0ZXJDaGVja2JveCBpcyB0aGUgY2hlY2tib3ggZm9yIGNvbnRyb2xsaW5nIHZpc2liaWxpdHkgb2YgdGhlICdCb25kIENoYXJhY3RlcicgZGlzcGxheS5cclxuICpcclxuICogQGF1dGhvciBDaHJpcyBNYWxsZXkgKFBpeGVsWm9vbSwgSW5jLilcclxuICovXHJcblxyXG5pbXBvcnQgUHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vLi4vYXhvbi9qcy9Qcm9wZXJ0eS5qcyc7XHJcbmltcG9ydCB7IGNvbWJpbmVPcHRpb25zLCBFbXB0eVNlbGZPcHRpb25zIH0gZnJvbSAnLi4vLi4vLi4vLi4vcGhldC1jb3JlL2pzL29wdGlvbml6ZS5qcyc7XHJcbmltcG9ydCBQaWNrUmVxdWlyZWQgZnJvbSAnLi4vLi4vLi4vLi4vcGhldC1jb3JlL2pzL3R5cGVzL1BpY2tSZXF1aXJlZC5qcyc7XHJcbmltcG9ydCB7IFRleHQsIFRleHRPcHRpb25zIH0gZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IENoZWNrYm94LCB7IENoZWNrYm94T3B0aW9ucyB9IGZyb20gJy4uLy4uLy4uLy4uL3N1bi9qcy9DaGVja2JveC5qcyc7XHJcbmltcG9ydCBNUENvbnN0YW50cyBmcm9tICcuLi8uLi9jb21tb24vTVBDb25zdGFudHMuanMnO1xyXG5pbXBvcnQgbW9sZWN1bGVQb2xhcml0eSBmcm9tICcuLi8uLi9tb2xlY3VsZVBvbGFyaXR5LmpzJztcclxuaW1wb3J0IE1vbGVjdWxlUG9sYXJpdHlTdHJpbmdzIGZyb20gJy4uLy4uL01vbGVjdWxlUG9sYXJpdHlTdHJpbmdzLmpzJztcclxuXHJcbnR5cGUgU2VsZk9wdGlvbnMgPSBFbXB0eVNlbGZPcHRpb25zO1xyXG5cclxudHlwZSBCb25kQ2hhcmFjdGVyQ2hlY2tib3hPcHRpb25zID0gU2VsZk9wdGlvbnMgJiBQaWNrUmVxdWlyZWQ8Q2hlY2tib3hPcHRpb25zLCAndGFuZGVtJz47XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCb25kQ2hhcmFjdGVyQ2hlY2tib3ggZXh0ZW5kcyBDaGVja2JveCB7XHJcblxyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvciggYm9uZENoYXJhY3RlclZpc2libGVQcm9wZXJ0eTogUHJvcGVydHk8Ym9vbGVhbj4sIHByb3ZpZGVkT3B0aW9uczogQm9uZENoYXJhY3RlckNoZWNrYm94T3B0aW9ucyApIHtcclxuXHJcbiAgICBjb25zdCBvcHRpb25zID0gcHJvdmlkZWRPcHRpb25zO1xyXG5cclxuICAgIGNvbnN0IGxhYmVsVGV4dCA9IG5ldyBUZXh0KCBNb2xlY3VsZVBvbGFyaXR5U3RyaW5ncy5ib25kQ2hhcmFjdGVyU3RyaW5nUHJvcGVydHksXHJcbiAgICAgIGNvbWJpbmVPcHRpb25zPFRleHRPcHRpb25zPigge30sIE1QQ29uc3RhbnRzLkNPTlRST0xfVEVYVF9PUFRJT05TLCB7XHJcbiAgICAgICAgdGFuZGVtOiBvcHRpb25zLnRhbmRlbS5jcmVhdGVUYW5kZW0oICdsYWJlbFRleHQnIClcclxuICAgICAgfSApICk7XHJcblxyXG4gICAgc3VwZXIoIGJvbmRDaGFyYWN0ZXJWaXNpYmxlUHJvcGVydHksIGxhYmVsVGV4dCwgb3B0aW9ucyApO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIG92ZXJyaWRlIGRpc3Bvc2UoKTogdm9pZCB7XHJcbiAgICBhc3NlcnQgJiYgYXNzZXJ0KCBmYWxzZSwgJ2Rpc3Bvc2UgaXMgbm90IHN1cHBvcnRlZCwgZXhpc3RzIGZvciB0aGUgbGlmZXRpbWUgb2YgdGhlIHNpbScgKTtcclxuICAgIHN1cGVyLmRpc3Bvc2UoKTtcclxuICB9XHJcbn1cclxuXHJcbm1vbGVjdWxlUG9sYXJpdHkucmVnaXN0ZXIoICdCb25kQ2hhcmFjdGVyQ2hlY2tib3gnLCBCb25kQ2hhcmFjdGVyQ2hlY2tib3ggKTsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBR0EsU0FBU0EsY0FBYyxRQUEwQix1Q0FBdUM7QUFFeEYsU0FBU0MsSUFBSSxRQUFxQixtQ0FBbUM7QUFDckUsT0FBT0MsUUFBUSxNQUEyQixnQ0FBZ0M7QUFDMUUsT0FBT0MsV0FBVyxNQUFNLDZCQUE2QjtBQUNyRCxPQUFPQyxnQkFBZ0IsTUFBTSwyQkFBMkI7QUFDeEQsT0FBT0MsdUJBQXVCLE1BQU0sa0NBQWtDO0FBTXRFLGVBQWUsTUFBTUMscUJBQXFCLFNBQVNKLFFBQVEsQ0FBQztFQUVuREssV0FBV0EsQ0FBRUMsNEJBQStDLEVBQUVDLGVBQTZDLEVBQUc7SUFFbkgsTUFBTUMsT0FBTyxHQUFHRCxlQUFlO0lBRS9CLE1BQU1FLFNBQVMsR0FBRyxJQUFJVixJQUFJLENBQUVJLHVCQUF1QixDQUFDTywyQkFBMkIsRUFDN0VaLGNBQWMsQ0FBZSxDQUFDLENBQUMsRUFBRUcsV0FBVyxDQUFDVSxvQkFBb0IsRUFBRTtNQUNqRUMsTUFBTSxFQUFFSixPQUFPLENBQUNJLE1BQU0sQ0FBQ0MsWUFBWSxDQUFFLFdBQVk7SUFDbkQsQ0FBRSxDQUFFLENBQUM7SUFFUCxLQUFLLENBQUVQLDRCQUE0QixFQUFFRyxTQUFTLEVBQUVELE9BQVEsQ0FBQztFQUMzRDtFQUVnQk0sT0FBT0EsQ0FBQSxFQUFTO0lBQzlCQyxNQUFNLElBQUlBLE1BQU0sQ0FBRSxLQUFLLEVBQUUsOERBQStELENBQUM7SUFDekYsS0FBSyxDQUFDRCxPQUFPLENBQUMsQ0FBQztFQUNqQjtBQUNGO0FBRUFaLGdCQUFnQixDQUFDYyxRQUFRLENBQUUsdUJBQXVCLEVBQUVaLHFCQUFzQixDQUFDIn0=