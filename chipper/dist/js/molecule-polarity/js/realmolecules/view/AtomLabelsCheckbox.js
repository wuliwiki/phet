// Copyright 2021-2023, University of Colorado Boulder

/**
 * AtomLabelsCheckbox is the checkbox for controlling visibility of atom labels.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import optionize, { combineOptions } from '../../../../phet-core/js/optionize.js';
import { Text } from '../../../../scenery/js/imports.js';
import Checkbox from '../../../../sun/js/Checkbox.js';
import MPConstants from '../../common/MPConstants.js';
import moleculePolarity from '../../moleculePolarity.js';
import MoleculePolarityStrings from '../../MoleculePolarityStrings.js';
export default class AtomLabelsCheckbox extends Checkbox {
  constructor(atomLabelsVisibleProperty, providedOptions) {
    const options = optionize()({}, providedOptions);
    const labelText = new Text(MoleculePolarityStrings.atomLabelsStringProperty, combineOptions({}, MPConstants.CONTROL_TEXT_OPTIONS, {
      tandem: options.tandem.createTandem('labelText')
    }));
    super(atomLabelsVisibleProperty, labelText, options);
  }
  dispose() {
    assert && assert(false, 'dispose is not supported, exists for the lifetime of the sim');
    super.dispose();
  }
}
moleculePolarity.register('AtomLabelsCheckbox', AtomLabelsCheckbox);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJvcHRpb25pemUiLCJjb21iaW5lT3B0aW9ucyIsIlRleHQiLCJDaGVja2JveCIsIk1QQ29uc3RhbnRzIiwibW9sZWN1bGVQb2xhcml0eSIsIk1vbGVjdWxlUG9sYXJpdHlTdHJpbmdzIiwiQXRvbUxhYmVsc0NoZWNrYm94IiwiY29uc3RydWN0b3IiLCJhdG9tTGFiZWxzVmlzaWJsZVByb3BlcnR5IiwicHJvdmlkZWRPcHRpb25zIiwib3B0aW9ucyIsImxhYmVsVGV4dCIsImF0b21MYWJlbHNTdHJpbmdQcm9wZXJ0eSIsIkNPTlRST0xfVEVYVF9PUFRJT05TIiwidGFuZGVtIiwiY3JlYXRlVGFuZGVtIiwiZGlzcG9zZSIsImFzc2VydCIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiQXRvbUxhYmVsc0NoZWNrYm94LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjMsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIEF0b21MYWJlbHNDaGVja2JveCBpcyB0aGUgY2hlY2tib3ggZm9yIGNvbnRyb2xsaW5nIHZpc2liaWxpdHkgb2YgYXRvbSBsYWJlbHMuXHJcbiAqXHJcbiAqIEBhdXRob3IgQ2hyaXMgTWFsbGV5IChQaXhlbFpvb20sIEluYy4pXHJcbiAqL1xyXG5cclxuaW1wb3J0IFByb3BlcnR5IGZyb20gJy4uLy4uLy4uLy4uL2F4b24vanMvUHJvcGVydHkuanMnO1xyXG5pbXBvcnQgb3B0aW9uaXplLCB7IGNvbWJpbmVPcHRpb25zLCBFbXB0eVNlbGZPcHRpb25zIH0gZnJvbSAnLi4vLi4vLi4vLi4vcGhldC1jb3JlL2pzL29wdGlvbml6ZS5qcyc7XHJcbmltcG9ydCBQaWNrUmVxdWlyZWQgZnJvbSAnLi4vLi4vLi4vLi4vcGhldC1jb3JlL2pzL3R5cGVzL1BpY2tSZXF1aXJlZC5qcyc7XHJcbmltcG9ydCB7IFRleHQsIFRleHRPcHRpb25zIH0gZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IENoZWNrYm94LCB7IENoZWNrYm94T3B0aW9ucyB9IGZyb20gJy4uLy4uLy4uLy4uL3N1bi9qcy9DaGVja2JveC5qcyc7XHJcbmltcG9ydCBNUENvbnN0YW50cyBmcm9tICcuLi8uLi9jb21tb24vTVBDb25zdGFudHMuanMnO1xyXG5pbXBvcnQgbW9sZWN1bGVQb2xhcml0eSBmcm9tICcuLi8uLi9tb2xlY3VsZVBvbGFyaXR5LmpzJztcclxuaW1wb3J0IE1vbGVjdWxlUG9sYXJpdHlTdHJpbmdzIGZyb20gJy4uLy4uL01vbGVjdWxlUG9sYXJpdHlTdHJpbmdzLmpzJztcclxuXHJcbnR5cGUgU2VsZk9wdGlvbnMgPSBFbXB0eVNlbGZPcHRpb25zO1xyXG5cclxudHlwZSBBdG9tTGFiZWxzQ2hlY2tib3hPcHRpb25zID0gU2VsZk9wdGlvbnMgJiBQaWNrUmVxdWlyZWQ8Q2hlY2tib3hPcHRpb25zLCAndGFuZGVtJz47XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBdG9tTGFiZWxzQ2hlY2tib3ggZXh0ZW5kcyBDaGVja2JveCB7XHJcblxyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvciggYXRvbUxhYmVsc1Zpc2libGVQcm9wZXJ0eTogUHJvcGVydHk8Ym9vbGVhbj4sIHByb3ZpZGVkT3B0aW9uczogQXRvbUxhYmVsc0NoZWNrYm94T3B0aW9ucyApIHtcclxuXHJcbiAgICBjb25zdCBvcHRpb25zID0gb3B0aW9uaXplPEF0b21MYWJlbHNDaGVja2JveE9wdGlvbnMsIFNlbGZPcHRpb25zLCBDaGVja2JveE9wdGlvbnM+KCkoIHt9LCBwcm92aWRlZE9wdGlvbnMgKTtcclxuXHJcbiAgICBjb25zdCBsYWJlbFRleHQgPSBuZXcgVGV4dCggTW9sZWN1bGVQb2xhcml0eVN0cmluZ3MuYXRvbUxhYmVsc1N0cmluZ1Byb3BlcnR5LFxyXG4gICAgICBjb21iaW5lT3B0aW9uczxUZXh0T3B0aW9ucz4oIHt9LCBNUENvbnN0YW50cy5DT05UUk9MX1RFWFRfT1BUSU9OUywge1xyXG4gICAgICAgIHRhbmRlbTogb3B0aW9ucy50YW5kZW0uY3JlYXRlVGFuZGVtKCAnbGFiZWxUZXh0JyApXHJcbiAgICAgIH0gKSApO1xyXG5cclxuICAgIHN1cGVyKCBhdG9tTGFiZWxzVmlzaWJsZVByb3BlcnR5LCBsYWJlbFRleHQsIG9wdGlvbnMgKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBvdmVycmlkZSBkaXNwb3NlKCk6IHZvaWQge1xyXG4gICAgYXNzZXJ0ICYmIGFzc2VydCggZmFsc2UsICdkaXNwb3NlIGlzIG5vdCBzdXBwb3J0ZWQsIGV4aXN0cyBmb3IgdGhlIGxpZmV0aW1lIG9mIHRoZSBzaW0nICk7XHJcbiAgICBzdXBlci5kaXNwb3NlKCk7XHJcbiAgfVxyXG59XHJcblxyXG5tb2xlY3VsZVBvbGFyaXR5LnJlZ2lzdGVyKCAnQXRvbUxhYmVsc0NoZWNrYm94JywgQXRvbUxhYmVsc0NoZWNrYm94ICk7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUdBLE9BQU9BLFNBQVMsSUFBSUMsY0FBYyxRQUEwQix1Q0FBdUM7QUFFbkcsU0FBU0MsSUFBSSxRQUFxQixtQ0FBbUM7QUFDckUsT0FBT0MsUUFBUSxNQUEyQixnQ0FBZ0M7QUFDMUUsT0FBT0MsV0FBVyxNQUFNLDZCQUE2QjtBQUNyRCxPQUFPQyxnQkFBZ0IsTUFBTSwyQkFBMkI7QUFDeEQsT0FBT0MsdUJBQXVCLE1BQU0sa0NBQWtDO0FBTXRFLGVBQWUsTUFBTUMsa0JBQWtCLFNBQVNKLFFBQVEsQ0FBQztFQUVoREssV0FBV0EsQ0FBRUMseUJBQTRDLEVBQUVDLGVBQTBDLEVBQUc7SUFFN0csTUFBTUMsT0FBTyxHQUFHWCxTQUFTLENBQTBELENBQUMsQ0FBRSxDQUFDLENBQUMsRUFBRVUsZUFBZ0IsQ0FBQztJQUUzRyxNQUFNRSxTQUFTLEdBQUcsSUFBSVYsSUFBSSxDQUFFSSx1QkFBdUIsQ0FBQ08sd0JBQXdCLEVBQzFFWixjQUFjLENBQWUsQ0FBQyxDQUFDLEVBQUVHLFdBQVcsQ0FBQ1Usb0JBQW9CLEVBQUU7TUFDakVDLE1BQU0sRUFBRUosT0FBTyxDQUFDSSxNQUFNLENBQUNDLFlBQVksQ0FBRSxXQUFZO0lBQ25ELENBQUUsQ0FBRSxDQUFDO0lBRVAsS0FBSyxDQUFFUCx5QkFBeUIsRUFBRUcsU0FBUyxFQUFFRCxPQUFRLENBQUM7RUFDeEQ7RUFFZ0JNLE9BQU9BLENBQUEsRUFBUztJQUM5QkMsTUFBTSxJQUFJQSxNQUFNLENBQUUsS0FBSyxFQUFFLDhEQUErRCxDQUFDO0lBQ3pGLEtBQUssQ0FBQ0QsT0FBTyxDQUFDLENBQUM7RUFDakI7QUFDRjtBQUVBWixnQkFBZ0IsQ0FBQ2MsUUFBUSxDQUFFLG9CQUFvQixFQUFFWixrQkFBbUIsQ0FBQyJ9