// Copyright 2014-2022, University of Colorado Boulder

/**
 * The 'Real Molecules' screen.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import Property from '../../../axon/js/Property.js';
import Screen from '../../../joist/js/Screen.js';
import ScreenIcon from '../../../joist/js/ScreenIcon.js';
import optionize from '../../../phet-core/js/optionize.js';
import { Image } from '../../../scenery/js/imports.js';
import Tandem from '../../../tandem/js/Tandem.js';
import realMoleculesScreenIcon_png from '../../images/realMoleculesScreenIcon_png.js';
import MPColors from '../common/MPColors.js';
import MPQueryParameters from '../common/MPQueryParameters.js';
import moleculePolarity from '../moleculePolarity.js';
import MoleculePolarityStrings from '../MoleculePolarityStrings.js';
import RealMoleculesModel from './model/RealMoleculesModel.js';
import RealMoleculesScreenView from './view/RealMoleculesScreenView.js';
export default class RealMoleculesScreen extends Screen {
  constructor(provideOptions) {
    const options = optionize()({
      // ScreenOptions
      name: MoleculePolarityStrings.screen.realMoleculesStringProperty,
      backgroundColorProperty: new Property(MPColors.SCREEN_BACKGROUND),
      homeScreenIcon: createScreenIcon()
    }, provideOptions);

    //TODO see https://github.com/phetsims/molecule-polarity/issues/32
    // Until the 'Real Molecules' screen is fully implemented, opt out of PhET-iO instrumentation.
    // In the meantime, support testing via the realMolecules query parameter.
    const parentTandem = MPQueryParameters.realMolecules ? options.tandem : Tandem.OPT_OUT;
    super(() => new RealMoleculesModel({
      tandem: parentTandem.createTandem('model')
    }), model => new RealMoleculesScreenView(model, {
      tandem: parentTandem.createTandem('view')
    }), options);
  }
}

/**
 * Creates the screen icon.
 */
function createScreenIcon() {
  return new ScreenIcon(new Image(realMoleculesScreenIcon_png), {
    maxIconWidthProportion: 1,
    maxIconHeightProportion: 1
  });
}
moleculePolarity.register('RealMoleculesScreen', RealMoleculesScreen);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQcm9wZXJ0eSIsIlNjcmVlbiIsIlNjcmVlbkljb24iLCJvcHRpb25pemUiLCJJbWFnZSIsIlRhbmRlbSIsInJlYWxNb2xlY3VsZXNTY3JlZW5JY29uX3BuZyIsIk1QQ29sb3JzIiwiTVBRdWVyeVBhcmFtZXRlcnMiLCJtb2xlY3VsZVBvbGFyaXR5IiwiTW9sZWN1bGVQb2xhcml0eVN0cmluZ3MiLCJSZWFsTW9sZWN1bGVzTW9kZWwiLCJSZWFsTW9sZWN1bGVzU2NyZWVuVmlldyIsIlJlYWxNb2xlY3VsZXNTY3JlZW4iLCJjb25zdHJ1Y3RvciIsInByb3ZpZGVPcHRpb25zIiwib3B0aW9ucyIsIm5hbWUiLCJzY3JlZW4iLCJyZWFsTW9sZWN1bGVzU3RyaW5nUHJvcGVydHkiLCJiYWNrZ3JvdW5kQ29sb3JQcm9wZXJ0eSIsIlNDUkVFTl9CQUNLR1JPVU5EIiwiaG9tZVNjcmVlbkljb24iLCJjcmVhdGVTY3JlZW5JY29uIiwicGFyZW50VGFuZGVtIiwicmVhbE1vbGVjdWxlcyIsInRhbmRlbSIsIk9QVF9PVVQiLCJjcmVhdGVUYW5kZW0iLCJtb2RlbCIsIm1heEljb25XaWR0aFByb3BvcnRpb24iLCJtYXhJY29uSGVpZ2h0UHJvcG9ydGlvbiIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiUmVhbE1vbGVjdWxlc1NjcmVlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxNC0yMDIyLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBUaGUgJ1JlYWwgTW9sZWN1bGVzJyBzY3JlZW4uXHJcbiAqXHJcbiAqIEBhdXRob3IgQ2hyaXMgTWFsbGV5IChQaXhlbFpvb20sIEluYy4pXHJcbiAqL1xyXG5cclxuaW1wb3J0IFByb3BlcnR5IGZyb20gJy4uLy4uLy4uL2F4b24vanMvUHJvcGVydHkuanMnO1xyXG5pbXBvcnQgU2NyZWVuLCB7IFNjcmVlbk9wdGlvbnMgfSBmcm9tICcuLi8uLi8uLi9qb2lzdC9qcy9TY3JlZW4uanMnO1xyXG5pbXBvcnQgU2NyZWVuSWNvbiBmcm9tICcuLi8uLi8uLi9qb2lzdC9qcy9TY3JlZW5JY29uLmpzJztcclxuaW1wb3J0IG9wdGlvbml6ZSwgeyBFbXB0eVNlbGZPcHRpb25zIH0gZnJvbSAnLi4vLi4vLi4vcGhldC1jb3JlL2pzL29wdGlvbml6ZS5qcyc7XHJcbmltcG9ydCBQaWNrUmVxdWlyZWQgZnJvbSAnLi4vLi4vLi4vcGhldC1jb3JlL2pzL3R5cGVzL1BpY2tSZXF1aXJlZC5qcyc7XHJcbmltcG9ydCB7IEltYWdlIH0gZnJvbSAnLi4vLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IFRhbmRlbSBmcm9tICcuLi8uLi8uLi90YW5kZW0vanMvVGFuZGVtLmpzJztcclxuaW1wb3J0IHJlYWxNb2xlY3VsZXNTY3JlZW5JY29uX3BuZyBmcm9tICcuLi8uLi9pbWFnZXMvcmVhbE1vbGVjdWxlc1NjcmVlbkljb25fcG5nLmpzJztcclxuaW1wb3J0IE1QQ29sb3JzIGZyb20gJy4uL2NvbW1vbi9NUENvbG9ycy5qcyc7XHJcbmltcG9ydCBNUFF1ZXJ5UGFyYW1ldGVycyBmcm9tICcuLi9jb21tb24vTVBRdWVyeVBhcmFtZXRlcnMuanMnO1xyXG5pbXBvcnQgbW9sZWN1bGVQb2xhcml0eSBmcm9tICcuLi9tb2xlY3VsZVBvbGFyaXR5LmpzJztcclxuaW1wb3J0IE1vbGVjdWxlUG9sYXJpdHlTdHJpbmdzIGZyb20gJy4uL01vbGVjdWxlUG9sYXJpdHlTdHJpbmdzLmpzJztcclxuaW1wb3J0IFJlYWxNb2xlY3VsZXNNb2RlbCBmcm9tICcuL21vZGVsL1JlYWxNb2xlY3VsZXNNb2RlbC5qcyc7XHJcbmltcG9ydCBSZWFsTW9sZWN1bGVzU2NyZWVuVmlldyBmcm9tICcuL3ZpZXcvUmVhbE1vbGVjdWxlc1NjcmVlblZpZXcuanMnO1xyXG5cclxudHlwZSBTZWxmT3B0aW9ucyA9IEVtcHR5U2VsZk9wdGlvbnM7XHJcblxyXG50eXBlIFJlYWxNb2xlY3VsZXNTY3JlZW5PcHRpb25zID0gU2VsZk9wdGlvbnMgJiBQaWNrUmVxdWlyZWQ8U2NyZWVuT3B0aW9ucywgJ3RhbmRlbSc+O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUmVhbE1vbGVjdWxlc1NjcmVlbiBleHRlbmRzIFNjcmVlbjxSZWFsTW9sZWN1bGVzTW9kZWwsIFJlYWxNb2xlY3VsZXNTY3JlZW5WaWV3PiB7XHJcblxyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvciggcHJvdmlkZU9wdGlvbnM6IFJlYWxNb2xlY3VsZXNTY3JlZW5PcHRpb25zICkge1xyXG5cclxuICAgIGNvbnN0IG9wdGlvbnMgPSBvcHRpb25pemU8UmVhbE1vbGVjdWxlc1NjcmVlbk9wdGlvbnMsIFNlbGZPcHRpb25zLCBTY3JlZW5PcHRpb25zPigpKCB7XHJcblxyXG4gICAgICAvLyBTY3JlZW5PcHRpb25zXHJcbiAgICAgIG5hbWU6IE1vbGVjdWxlUG9sYXJpdHlTdHJpbmdzLnNjcmVlbi5yZWFsTW9sZWN1bGVzU3RyaW5nUHJvcGVydHksXHJcbiAgICAgIGJhY2tncm91bmRDb2xvclByb3BlcnR5OiBuZXcgUHJvcGVydHkoIE1QQ29sb3JzLlNDUkVFTl9CQUNLR1JPVU5EICksXHJcbiAgICAgIGhvbWVTY3JlZW5JY29uOiBjcmVhdGVTY3JlZW5JY29uKClcclxuICAgIH0sIHByb3ZpZGVPcHRpb25zICk7XHJcblxyXG4gICAgLy9UT0RPIHNlZSBodHRwczovL2dpdGh1Yi5jb20vcGhldHNpbXMvbW9sZWN1bGUtcG9sYXJpdHkvaXNzdWVzLzMyXHJcbiAgICAvLyBVbnRpbCB0aGUgJ1JlYWwgTW9sZWN1bGVzJyBzY3JlZW4gaXMgZnVsbHkgaW1wbGVtZW50ZWQsIG9wdCBvdXQgb2YgUGhFVC1pTyBpbnN0cnVtZW50YXRpb24uXHJcbiAgICAvLyBJbiB0aGUgbWVhbnRpbWUsIHN1cHBvcnQgdGVzdGluZyB2aWEgdGhlIHJlYWxNb2xlY3VsZXMgcXVlcnkgcGFyYW1ldGVyLlxyXG4gICAgY29uc3QgcGFyZW50VGFuZGVtID0gKCBNUFF1ZXJ5UGFyYW1ldGVycy5yZWFsTW9sZWN1bGVzICkgPyBvcHRpb25zLnRhbmRlbSA6IFRhbmRlbS5PUFRfT1VUO1xyXG5cclxuICAgIHN1cGVyKFxyXG4gICAgICAoKSA9PiBuZXcgUmVhbE1vbGVjdWxlc01vZGVsKCB7IHRhbmRlbTogcGFyZW50VGFuZGVtLmNyZWF0ZVRhbmRlbSggJ21vZGVsJyApIH0gKSxcclxuICAgICAgbW9kZWwgPT4gbmV3IFJlYWxNb2xlY3VsZXNTY3JlZW5WaWV3KCBtb2RlbCwgeyB0YW5kZW06IHBhcmVudFRhbmRlbS5jcmVhdGVUYW5kZW0oICd2aWV3JyApIH0gKSxcclxuICAgICAgb3B0aW9uc1xyXG4gICAgKTtcclxuICB9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDcmVhdGVzIHRoZSBzY3JlZW4gaWNvbi5cclxuICovXHJcbmZ1bmN0aW9uIGNyZWF0ZVNjcmVlbkljb24oKTogU2NyZWVuSWNvbiB7XHJcbiAgcmV0dXJuIG5ldyBTY3JlZW5JY29uKCBuZXcgSW1hZ2UoIHJlYWxNb2xlY3VsZXNTY3JlZW5JY29uX3BuZyApLCB7XHJcbiAgICBtYXhJY29uV2lkdGhQcm9wb3J0aW9uOiAxLFxyXG4gICAgbWF4SWNvbkhlaWdodFByb3BvcnRpb246IDFcclxuICB9ICk7XHJcbn1cclxuXHJcbm1vbGVjdWxlUG9sYXJpdHkucmVnaXN0ZXIoICdSZWFsTW9sZWN1bGVzU2NyZWVuJywgUmVhbE1vbGVjdWxlc1NjcmVlbiApOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxRQUFRLE1BQU0sOEJBQThCO0FBQ25ELE9BQU9DLE1BQU0sTUFBeUIsNkJBQTZCO0FBQ25FLE9BQU9DLFVBQVUsTUFBTSxpQ0FBaUM7QUFDeEQsT0FBT0MsU0FBUyxNQUE0QixvQ0FBb0M7QUFFaEYsU0FBU0MsS0FBSyxRQUFRLGdDQUFnQztBQUN0RCxPQUFPQyxNQUFNLE1BQU0sOEJBQThCO0FBQ2pELE9BQU9DLDJCQUEyQixNQUFNLDZDQUE2QztBQUNyRixPQUFPQyxRQUFRLE1BQU0sdUJBQXVCO0FBQzVDLE9BQU9DLGlCQUFpQixNQUFNLGdDQUFnQztBQUM5RCxPQUFPQyxnQkFBZ0IsTUFBTSx3QkFBd0I7QUFDckQsT0FBT0MsdUJBQXVCLE1BQU0sK0JBQStCO0FBQ25FLE9BQU9DLGtCQUFrQixNQUFNLCtCQUErQjtBQUM5RCxPQUFPQyx1QkFBdUIsTUFBTSxtQ0FBbUM7QUFNdkUsZUFBZSxNQUFNQyxtQkFBbUIsU0FBU1osTUFBTSxDQUE4QztFQUU1RmEsV0FBV0EsQ0FBRUMsY0FBMEMsRUFBRztJQUUvRCxNQUFNQyxPQUFPLEdBQUdiLFNBQVMsQ0FBeUQsQ0FBQyxDQUFFO01BRW5GO01BQ0FjLElBQUksRUFBRVAsdUJBQXVCLENBQUNRLE1BQU0sQ0FBQ0MsMkJBQTJCO01BQ2hFQyx1QkFBdUIsRUFBRSxJQUFJcEIsUUFBUSxDQUFFTyxRQUFRLENBQUNjLGlCQUFrQixDQUFDO01BQ25FQyxjQUFjLEVBQUVDLGdCQUFnQixDQUFDO0lBQ25DLENBQUMsRUFBRVIsY0FBZSxDQUFDOztJQUVuQjtJQUNBO0lBQ0E7SUFDQSxNQUFNUyxZQUFZLEdBQUtoQixpQkFBaUIsQ0FBQ2lCLGFBQWEsR0FBS1QsT0FBTyxDQUFDVSxNQUFNLEdBQUdyQixNQUFNLENBQUNzQixPQUFPO0lBRTFGLEtBQUssQ0FDSCxNQUFNLElBQUloQixrQkFBa0IsQ0FBRTtNQUFFZSxNQUFNLEVBQUVGLFlBQVksQ0FBQ0ksWUFBWSxDQUFFLE9BQVE7SUFBRSxDQUFFLENBQUMsRUFDaEZDLEtBQUssSUFBSSxJQUFJakIsdUJBQXVCLENBQUVpQixLQUFLLEVBQUU7TUFBRUgsTUFBTSxFQUFFRixZQUFZLENBQUNJLFlBQVksQ0FBRSxNQUFPO0lBQUUsQ0FBRSxDQUFDLEVBQzlGWixPQUNGLENBQUM7RUFDSDtBQUNGOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFNBQVNPLGdCQUFnQkEsQ0FBQSxFQUFlO0VBQ3RDLE9BQU8sSUFBSXJCLFVBQVUsQ0FBRSxJQUFJRSxLQUFLLENBQUVFLDJCQUE0QixDQUFDLEVBQUU7SUFDL0R3QixzQkFBc0IsRUFBRSxDQUFDO0lBQ3pCQyx1QkFBdUIsRUFBRTtFQUMzQixDQUFFLENBQUM7QUFDTDtBQUVBdEIsZ0JBQWdCLENBQUN1QixRQUFRLENBQUUscUJBQXFCLEVBQUVuQixtQkFBb0IsQ0FBQyJ9