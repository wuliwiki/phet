// Copyright 2014-2022, University of Colorado Boulder

/**
 * A user interface control that is used to turn the columns on or off.
 */

import Dimension2 from '../../../../dot/js/Dimension2.js';
import merge from '../../../../phet-core/js/merge.js';
import { Node, Text } from '../../../../scenery/js/imports.js';
import ABSwitch from '../../../../sun/js/ABSwitch.js';
import Panel from '../../../../sun/js/Panel.js';
import Tandem from '../../../../tandem/js/Tandem.js';
import balancingAct from '../../balancingAct.js';
import BAQueryParameters from '../BAQueryParameters.js';
import ColumnState from '../model/ColumnState.js';
import ColumnControlIcon from './ColumnControlIcon.js';

// constants
const ICON_WIDTH = 60;
class ColumnOnOffController extends Node {
  constructor(columnState, options) {
    options = merge({
      tandem: Tandem.REQUIRED
    }, options);
    super();
    const columnSwitchTandem = options.tandem.createTandem('columnSwitch');
    const columnsOnNode = new ColumnControlIcon(ICON_WIDTH, true, {
      tandem: columnSwitchTandem.createTandem('columnsOnNode')
    });
    const columnsOffNode = new ColumnControlIcon(ICON_WIDTH, false, {
      tandem: columnSwitchTandem.createTandem('columnsOffNode')
    });
    const columnSwitch = new ABSwitch(columnState, ColumnState.DOUBLE_COLUMNS, columnsOnNode, ColumnState.NO_COLUMNS, columnsOffNode, {
      toggleSwitchOptions: {
        size: new Dimension2(32, 16),
        thumbTouchAreaXDilation: 5,
        thumbTouchAreaYDilation: 5
      },
      tandem: columnSwitchTandem
    });

    // TODO: These options were misplaced, should they be deleted?
    // fill: 'rgb( 240, 240, 240 )',
    // cornerRadius: 5
    const panel = new Panel(columnSwitch);
    this.addChild(panel);
    if (BAQueryParameters.stanford) {
      const MARGIN = 10;
      const FONT_SIZE = 18;
      const FILL = 'black';
      const textOptions = {
        fill: FILL,
        fontSize: FONT_SIZE
      };
      this.addChild(new Text('Setup', merge({
        right: panel.left - MARGIN,
        bottom: panel.bottom
      }, textOptions)));
      this.addChild(new Text('Test', merge({
        left: panel.right + MARGIN,
        bottom: panel.bottom
      }, textOptions)));
    }
    this.mutate(options);
  }
}
balancingAct.register('ColumnOnOffController', ColumnOnOffController);
export default ColumnOnOffController;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJEaW1lbnNpb24yIiwibWVyZ2UiLCJOb2RlIiwiVGV4dCIsIkFCU3dpdGNoIiwiUGFuZWwiLCJUYW5kZW0iLCJiYWxhbmNpbmdBY3QiLCJCQVF1ZXJ5UGFyYW1ldGVycyIsIkNvbHVtblN0YXRlIiwiQ29sdW1uQ29udHJvbEljb24iLCJJQ09OX1dJRFRIIiwiQ29sdW1uT25PZmZDb250cm9sbGVyIiwiY29uc3RydWN0b3IiLCJjb2x1bW5TdGF0ZSIsIm9wdGlvbnMiLCJ0YW5kZW0iLCJSRVFVSVJFRCIsImNvbHVtblN3aXRjaFRhbmRlbSIsImNyZWF0ZVRhbmRlbSIsImNvbHVtbnNPbk5vZGUiLCJjb2x1bW5zT2ZmTm9kZSIsImNvbHVtblN3aXRjaCIsIkRPVUJMRV9DT0xVTU5TIiwiTk9fQ09MVU1OUyIsInRvZ2dsZVN3aXRjaE9wdGlvbnMiLCJzaXplIiwidGh1bWJUb3VjaEFyZWFYRGlsYXRpb24iLCJ0aHVtYlRvdWNoQXJlYVlEaWxhdGlvbiIsInBhbmVsIiwiYWRkQ2hpbGQiLCJzdGFuZm9yZCIsIk1BUkdJTiIsIkZPTlRfU0laRSIsIkZJTEwiLCJ0ZXh0T3B0aW9ucyIsImZpbGwiLCJmb250U2l6ZSIsInJpZ2h0IiwibGVmdCIsImJvdHRvbSIsIm11dGF0ZSIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiQ29sdW1uT25PZmZDb250cm9sbGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE0LTIwMjIsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIEEgdXNlciBpbnRlcmZhY2UgY29udHJvbCB0aGF0IGlzIHVzZWQgdG8gdHVybiB0aGUgY29sdW1ucyBvbiBvciBvZmYuXHJcbiAqL1xyXG5cclxuaW1wb3J0IERpbWVuc2lvbjIgZnJvbSAnLi4vLi4vLi4vLi4vZG90L2pzL0RpbWVuc2lvbjIuanMnO1xyXG5pbXBvcnQgbWVyZ2UgZnJvbSAnLi4vLi4vLi4vLi4vcGhldC1jb3JlL2pzL21lcmdlLmpzJztcclxuaW1wb3J0IHsgTm9kZSwgVGV4dCB9IGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XHJcbmltcG9ydCBBQlN3aXRjaCBmcm9tICcuLi8uLi8uLi8uLi9zdW4vanMvQUJTd2l0Y2guanMnO1xyXG5pbXBvcnQgUGFuZWwgZnJvbSAnLi4vLi4vLi4vLi4vc3VuL2pzL1BhbmVsLmpzJztcclxuaW1wb3J0IFRhbmRlbSBmcm9tICcuLi8uLi8uLi8uLi90YW5kZW0vanMvVGFuZGVtLmpzJztcclxuaW1wb3J0IGJhbGFuY2luZ0FjdCBmcm9tICcuLi8uLi9iYWxhbmNpbmdBY3QuanMnO1xyXG5pbXBvcnQgQkFRdWVyeVBhcmFtZXRlcnMgZnJvbSAnLi4vQkFRdWVyeVBhcmFtZXRlcnMuanMnO1xyXG5pbXBvcnQgQ29sdW1uU3RhdGUgZnJvbSAnLi4vbW9kZWwvQ29sdW1uU3RhdGUuanMnO1xyXG5pbXBvcnQgQ29sdW1uQ29udHJvbEljb24gZnJvbSAnLi9Db2x1bW5Db250cm9sSWNvbi5qcyc7XHJcblxyXG4vLyBjb25zdGFudHNcclxuY29uc3QgSUNPTl9XSURUSCA9IDYwO1xyXG5cclxuY2xhc3MgQ29sdW1uT25PZmZDb250cm9sbGVyIGV4dGVuZHMgTm9kZSB7XHJcblxyXG4gIGNvbnN0cnVjdG9yKCBjb2x1bW5TdGF0ZSwgb3B0aW9ucyApIHtcclxuXHJcbiAgICBvcHRpb25zID0gbWVyZ2UoIHtcclxuICAgICAgdGFuZGVtOiBUYW5kZW0uUkVRVUlSRURcclxuICAgIH0sIG9wdGlvbnMgKTtcclxuICAgIHN1cGVyKCk7XHJcblxyXG4gICAgY29uc3QgY29sdW1uU3dpdGNoVGFuZGVtID0gb3B0aW9ucy50YW5kZW0uY3JlYXRlVGFuZGVtKCAnY29sdW1uU3dpdGNoJyApO1xyXG4gICAgY29uc3QgY29sdW1uc09uTm9kZSA9IG5ldyBDb2x1bW5Db250cm9sSWNvbiggSUNPTl9XSURUSCwgdHJ1ZSwge1xyXG4gICAgICB0YW5kZW06IGNvbHVtblN3aXRjaFRhbmRlbS5jcmVhdGVUYW5kZW0oICdjb2x1bW5zT25Ob2RlJyApXHJcbiAgICB9ICk7XHJcbiAgICBjb25zdCBjb2x1bW5zT2ZmTm9kZSA9IG5ldyBDb2x1bW5Db250cm9sSWNvbiggSUNPTl9XSURUSCwgZmFsc2UsIHtcclxuICAgICAgdGFuZGVtOiBjb2x1bW5Td2l0Y2hUYW5kZW0uY3JlYXRlVGFuZGVtKCAnY29sdW1uc09mZk5vZGUnIClcclxuICAgIH0gKTtcclxuICAgIGNvbnN0IGNvbHVtblN3aXRjaCA9IG5ldyBBQlN3aXRjaCggY29sdW1uU3RhdGUsIENvbHVtblN0YXRlLkRPVUJMRV9DT0xVTU5TLCBjb2x1bW5zT25Ob2RlLCBDb2x1bW5TdGF0ZS5OT19DT0xVTU5TLCBjb2x1bW5zT2ZmTm9kZSwge1xyXG4gICAgICB0b2dnbGVTd2l0Y2hPcHRpb25zOiB7XHJcbiAgICAgICAgc2l6ZTogbmV3IERpbWVuc2lvbjIoIDMyLCAxNiApLFxyXG4gICAgICAgIHRodW1iVG91Y2hBcmVhWERpbGF0aW9uOiA1LFxyXG4gICAgICAgIHRodW1iVG91Y2hBcmVhWURpbGF0aW9uOiA1XHJcbiAgICAgIH0sXHJcbiAgICAgIHRhbmRlbTogY29sdW1uU3dpdGNoVGFuZGVtXHJcbiAgICB9ICk7XHJcblxyXG4gICAgLy8gVE9ETzogVGhlc2Ugb3B0aW9ucyB3ZXJlIG1pc3BsYWNlZCwgc2hvdWxkIHRoZXkgYmUgZGVsZXRlZD9cclxuICAgIC8vIGZpbGw6ICdyZ2IoIDI0MCwgMjQwLCAyNDAgKScsXHJcbiAgICAvLyBjb3JuZXJSYWRpdXM6IDVcclxuICAgIGNvbnN0IHBhbmVsID0gbmV3IFBhbmVsKCBjb2x1bW5Td2l0Y2ggKTtcclxuICAgIHRoaXMuYWRkQ2hpbGQoIHBhbmVsICk7XHJcblxyXG4gICAgaWYgKCBCQVF1ZXJ5UGFyYW1ldGVycy5zdGFuZm9yZCApIHtcclxuICAgICAgY29uc3QgTUFSR0lOID0gMTA7XHJcbiAgICAgIGNvbnN0IEZPTlRfU0laRSA9IDE4O1xyXG4gICAgICBjb25zdCBGSUxMID0gJ2JsYWNrJztcclxuICAgICAgY29uc3QgdGV4dE9wdGlvbnMgPSB7XHJcbiAgICAgICAgZmlsbDogRklMTCxcclxuICAgICAgICBmb250U2l6ZTogRk9OVF9TSVpFXHJcbiAgICAgIH07XHJcbiAgICAgIHRoaXMuYWRkQ2hpbGQoIG5ldyBUZXh0KCAnU2V0dXAnLCBtZXJnZSgge1xyXG4gICAgICAgIHJpZ2h0OiBwYW5lbC5sZWZ0IC0gTUFSR0lOLFxyXG4gICAgICAgIGJvdHRvbTogcGFuZWwuYm90dG9tXHJcbiAgICAgIH0sIHRleHRPcHRpb25zICkgKSApO1xyXG4gICAgICB0aGlzLmFkZENoaWxkKCBuZXcgVGV4dCggJ1Rlc3QnLCBtZXJnZSgge1xyXG4gICAgICAgIGxlZnQ6IHBhbmVsLnJpZ2h0ICsgTUFSR0lOLFxyXG4gICAgICAgIGJvdHRvbTogcGFuZWwuYm90dG9tXHJcbiAgICAgIH0sIHRleHRPcHRpb25zICkgKSApO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMubXV0YXRlKCBvcHRpb25zICk7XHJcbiAgfVxyXG59XHJcblxyXG5iYWxhbmNpbmdBY3QucmVnaXN0ZXIoICdDb2x1bW5Pbk9mZkNvbnRyb2xsZXInLCBDb2x1bW5Pbk9mZkNvbnRyb2xsZXIgKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IENvbHVtbk9uT2ZmQ29udHJvbGxlcjsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxVQUFVLE1BQU0sa0NBQWtDO0FBQ3pELE9BQU9DLEtBQUssTUFBTSxtQ0FBbUM7QUFDckQsU0FBU0MsSUFBSSxFQUFFQyxJQUFJLFFBQVEsbUNBQW1DO0FBQzlELE9BQU9DLFFBQVEsTUFBTSxnQ0FBZ0M7QUFDckQsT0FBT0MsS0FBSyxNQUFNLDZCQUE2QjtBQUMvQyxPQUFPQyxNQUFNLE1BQU0saUNBQWlDO0FBQ3BELE9BQU9DLFlBQVksTUFBTSx1QkFBdUI7QUFDaEQsT0FBT0MsaUJBQWlCLE1BQU0seUJBQXlCO0FBQ3ZELE9BQU9DLFdBQVcsTUFBTSx5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