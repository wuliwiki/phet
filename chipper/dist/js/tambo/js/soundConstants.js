// Copyright 2019-2022, University of Colorado Boulder

/**
 * a singleton instance that contains constants shared amongst the sound generation code modules
 *
 * @author John Blanco
 */

import tambo from './tambo.js';

// instance definition
const soundConstants = {
  // A time constant value, in seconds, that is used in Web Audio calls that have an exponential change, such as
  // setTargetAtTime.  The value was empirically determined to work well for fast gain changes, and may be appropriate
  // for other parameter changes.
  DEFAULT_PARAM_CHANGE_TIME_CONSTANT: 0.015,
  // Time, in seconds, for linear gain changes.  This is generally used in calls to linearRampToValueAtTime.  The
  // value was empirically determined to be reasonably fast, but not so fast that it causes audible transients
  // (generally heard as clicks) when turning sounds on and off.
  DEFAULT_LINEAR_GAIN_CHANGE_TIME: 0.1,
  // The twelfth root of 2 is useful when doing math that is creating tones that relate to an even-tempered 12-tone
  // musical scale.
  TWELFTH_ROOT_OF_TWO: Math.pow(2, 1 / 12)
};

// register for phet-io
tambo.register('soundConstants', soundConstants);
export default soundConstants;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJ0YW1ibyIsInNvdW5kQ29uc3RhbnRzIiwiREVGQVVMVF9QQVJBTV9DSEFOR0VfVElNRV9DT05TVEFOVCIsIkRFRkFVTFRfTElORUFSX0dBSU5fQ0hBTkdFX1RJTUUiLCJUV0VMRlRIX1JPT1RfT0ZfVFdPIiwiTWF0aCIsInBvdyIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsic291bmRDb25zdGFudHMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTktMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogYSBzaW5nbGV0b24gaW5zdGFuY2UgdGhhdCBjb250YWlucyBjb25zdGFudHMgc2hhcmVkIGFtb25nc3QgdGhlIHNvdW5kIGdlbmVyYXRpb24gY29kZSBtb2R1bGVzXHJcbiAqXHJcbiAqIEBhdXRob3IgSm9obiBCbGFuY29cclxuICovXHJcblxyXG5pbXBvcnQgdGFtYm8gZnJvbSAnLi90YW1iby5qcyc7XHJcblxyXG4vLyBpbnN0YW5jZSBkZWZpbml0aW9uXHJcbmNvbnN0IHNvdW5kQ29uc3RhbnRzID0ge1xyXG5cclxuICAvLyBBIHRpbWUgY29uc3RhbnQgdmFsdWUsIGluIHNlY29uZHMsIHRoYXQgaXMgdXNlZCBpbiBXZWIgQXVkaW8gY2FsbHMgdGhhdCBoYXZlIGFuIGV4cG9uZW50aWFsIGNoYW5nZSwgc3VjaCBhc1xyXG4gIC8vIHNldFRhcmdldEF0VGltZS4gIFRoZSB2YWx1ZSB3YXMgZW1waXJpY2FsbHkgZGV0ZXJtaW5lZCB0byB3b3JrIHdlbGwgZm9yIGZhc3QgZ2FpbiBjaGFuZ2VzLCBhbmQgbWF5IGJlIGFwcHJvcHJpYXRlXHJcbiAgLy8gZm9yIG90aGVyIHBhcmFtZXRlciBjaGFuZ2VzLlxyXG4gIERFRkFVTFRfUEFSQU1fQ0hBTkdFX1RJTUVfQ09OU1RBTlQ6IDAuMDE1LFxyXG5cclxuICAvLyBUaW1lLCBpbiBzZWNvbmRzLCBmb3IgbGluZWFyIGdhaW4gY2hhbmdlcy4gIFRoaXMgaXMgZ2VuZXJhbGx5IHVzZWQgaW4gY2FsbHMgdG8gbGluZWFyUmFtcFRvVmFsdWVBdFRpbWUuICBUaGVcclxuICAvLyB2YWx1ZSB3YXMgZW1waXJpY2FsbHkgZGV0ZXJtaW5lZCB0byBiZSByZWFzb25hYmx5IGZhc3QsIGJ1dCBub3Qgc28gZmFzdCB0aGF0IGl0IGNhdXNlcyBhdWRpYmxlIHRyYW5zaWVudHNcclxuICAvLyAoZ2VuZXJhbGx5IGhlYXJkIGFzIGNsaWNrcykgd2hlbiB0dXJuaW5nIHNvdW5kcyBvbiBhbmQgb2ZmLlxyXG4gIERFRkFVTFRfTElORUFSX0dBSU5fQ0hBTkdFX1RJTUU6IDAuMSxcclxuXHJcbiAgLy8gVGhlIHR3ZWxmdGggcm9vdCBvZiAyIGlzIHVzZWZ1bCB3aGVuIGRvaW5nIG1hdGggdGhhdCBpcyBjcmVhdGluZyB0b25lcyB0aGF0IHJlbGF0ZSB0byBhbiBldmVuLXRlbXBlcmVkIDEyLXRvbmVcclxuICAvLyBtdXNpY2FsIHNjYWxlLlxyXG4gIFRXRUxGVEhfUk9PVF9PRl9UV086IE1hdGgucG93KCAyLCAxIC8gMTIgKVxyXG59O1xyXG5cclxuLy8gcmVnaXN0ZXIgZm9yIHBoZXQtaW9cclxudGFtYm8ucmVnaXN0ZXIoICdzb3VuZENvbnN0YW50cycsIHNvdW5kQ29uc3RhbnRzICk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBzb3VuZENvbnN0YW50czsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsS0FBSyxNQUFNLFlBQVk7O0FBRTlCO0FBQ0EsTUFBTUMsY0FBYyxHQUFHO0VBRXJCO0VBQ0E7RUFDQTtFQUNBQyxrQ0FBa0MsRUFBRSxLQUFLO0VBRXpDO0VBQ0E7RUFDQTtFQUNBQywrQkFBK0IsRUFBRSxHQUFHO0VBRXBDO0VBQ0E7RUFDQUMsbUJBQW1CLEVBQUVDLElBQUksQ0FBQ0MsR0FBRyxDQUFFLENBQUMsRUFBRSxDQUFDLEdBQUcsRUFBRztBQUMzQyxDQUFDOztBQUVEO0FBQ0FOLEtBQUssQ0FBQ08sUUFBUSxDQUFFLGdCQUFnQixFQUFFTixjQUFlLENBQUM7QUFFbEQsZUFBZUEsY0FBYyJ9