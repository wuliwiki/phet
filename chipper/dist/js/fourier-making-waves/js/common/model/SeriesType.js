// Copyright 2020-2022, University of Colorado Boulder

/**
 * SeriesType indicates the type of the Fourier series. There are 2 types of Fourier series, referred to in the
 * literature as 'sine series' and 'cosine series', depending on whether the waveform is being approximated using
 * sines or cosines.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import Enumeration from '../../../../phet-core/js/Enumeration.js';
import EnumerationValue from '../../../../phet-core/js/EnumerationValue.js';
import fourierMakingWaves from '../../fourierMakingWaves.js';
export default class SeriesType extends EnumerationValue {
  // 'SIN' and 'COS' are used to correspond to 'sin' and 'cos' used for radio-button labels.
  static SIN = new SeriesType();
  static COS = new SeriesType();
  static enumeration = new Enumeration(SeriesType);
}
fourierMakingWaves.register('SeriesType', SeriesType);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJFbnVtZXJhdGlvbiIsIkVudW1lcmF0aW9uVmFsdWUiLCJmb3VyaWVyTWFraW5nV2F2ZXMiLCJTZXJpZXNUeXBlIiwiU0lOIiwiQ09TIiwiZW51bWVyYXRpb24iLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIlNlcmllc1R5cGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjAtMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogU2VyaWVzVHlwZSBpbmRpY2F0ZXMgdGhlIHR5cGUgb2YgdGhlIEZvdXJpZXIgc2VyaWVzLiBUaGVyZSBhcmUgMiB0eXBlcyBvZiBGb3VyaWVyIHNlcmllcywgcmVmZXJyZWQgdG8gaW4gdGhlXHJcbiAqIGxpdGVyYXR1cmUgYXMgJ3NpbmUgc2VyaWVzJyBhbmQgJ2Nvc2luZSBzZXJpZXMnLCBkZXBlbmRpbmcgb24gd2hldGhlciB0aGUgd2F2ZWZvcm0gaXMgYmVpbmcgYXBwcm94aW1hdGVkIHVzaW5nXHJcbiAqIHNpbmVzIG9yIGNvc2luZXMuXHJcbiAqXHJcbiAqIEBhdXRob3IgQ2hyaXMgTWFsbGV5IChQaXhlbFpvb20sIEluYy4pXHJcbiAqL1xyXG5cclxuaW1wb3J0IEVudW1lcmF0aW9uIGZyb20gJy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy9FbnVtZXJhdGlvbi5qcyc7XHJcbmltcG9ydCBFbnVtZXJhdGlvblZhbHVlIGZyb20gJy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy9FbnVtZXJhdGlvblZhbHVlLmpzJztcclxuaW1wb3J0IGZvdXJpZXJNYWtpbmdXYXZlcyBmcm9tICcuLi8uLi9mb3VyaWVyTWFraW5nV2F2ZXMuanMnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VyaWVzVHlwZSBleHRlbmRzIEVudW1lcmF0aW9uVmFsdWUge1xyXG5cclxuICAvLyAnU0lOJyBhbmQgJ0NPUycgYXJlIHVzZWQgdG8gY29ycmVzcG9uZCB0byAnc2luJyBhbmQgJ2NvcycgdXNlZCBmb3IgcmFkaW8tYnV0dG9uIGxhYmVscy5cclxuICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IFNJTiA9IG5ldyBTZXJpZXNUeXBlKCk7XHJcbiAgcHVibGljIHN0YXRpYyByZWFkb25seSBDT1MgPSBuZXcgU2VyaWVzVHlwZSgpO1xyXG5cclxuICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IGVudW1lcmF0aW9uID0gbmV3IEVudW1lcmF0aW9uKCBTZXJpZXNUeXBlICk7XHJcbn1cclxuXHJcbmZvdXJpZXJNYWtpbmdXYXZlcy5yZWdpc3RlciggJ1Nlcmllc1R5cGUnLCBTZXJpZXNUeXBlICk7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxXQUFXLE1BQU0seUNBQXlDO0FBQ2pFLE9BQU9DLGdCQUFnQixNQUFNLDhDQUE4QztBQUMzRSxPQUFPQyxrQkFBa0IsTUFBTSw2QkFBNkI7QUFFNUQsZUFBZSxNQUFNQyxVQUFVLFNBQVNGLGdCQUFnQixDQUFDO0VBRXZEO0VBQ0EsT0FBdUJHLEdBQUcsR0FBRyxJQUFJRCxVQUFVLENBQUMsQ0FBQztFQUM3QyxPQUF1QkUsR0FBRyxHQUFHLElBQUlGLFVBQVUsQ0FBQyxDQUFDO0VBRTdDLE9BQXVCRyxXQUFXLEdBQUcsSUFBSU4sV0FBVyxDQUFFRyxVQUFXLENBQUM7QUFDcEU7QUFFQUQsa0JBQWtCLENBQUNLLFFBQVEsQ0FBRSxZQUFZLEVBQUVKLFVBQVcsQ0FBQyJ9