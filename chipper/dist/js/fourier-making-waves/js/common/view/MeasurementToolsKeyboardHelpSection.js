// Copyright 2021-2023, University of Colorado Boulder

/**
 * MeasurementToolsKeyboardHelpSection provides keyboard help for the measurement tools that are found
 * in the 'Discrete' and 'Wave Packet' screens.
 *
 * Specification is in https://github.com/phetsims/fourier-making-waves/issues/168
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import KeyboardHelpIconFactory from '../../../../scenery-phet/js/keyboard/help/KeyboardHelpIconFactory.js';
import KeyboardHelpSection from '../../../../scenery-phet/js/keyboard/help/KeyboardHelpSection.js';
import KeyboardHelpSectionRow from '../../../../scenery-phet/js/keyboard/help/KeyboardHelpSectionRow.js';
import fourierMakingWaves from '../../fourierMakingWaves.js';
import FourierMakingWavesStrings from '../../FourierMakingWavesStrings.js';
export default class MeasurementToolsKeyboardHelpSection extends KeyboardHelpSection {
  constructor() {
    // Icons, which need to be disposed
    const arrowKeysIcon = KeyboardHelpIconFactory.arrowKeysRowIcon();
    const wasdKeysIcon = KeyboardHelpIconFactory.wasdRowIcon();
    const shiftPlusArrowsIcon = KeyboardHelpIconFactory.shiftPlusIcon(arrowKeysIcon);
    const shiftPlusWASDsIcon = KeyboardHelpIconFactory.shiftPlusIcon(wasdKeysIcon);
    const arrowOrWASDKeysRowIcon = KeyboardHelpIconFactory.arrowOrWasdKeysRowIcon();
    const icons = [arrowKeysIcon, wasdKeysIcon, shiftPlusArrowsIcon, shiftPlusWASDsIcon, arrowOrWASDKeysRowIcon];

    // KeyboardHelpSectionRows, which need to be disposed
    const rows = [
    // arrows or WASD, for moving at normal speed
    KeyboardHelpSectionRow.labelWithIcon(FourierMakingWavesStrings.keyboardHelpDialog.moveToolStringProperty, arrowOrWASDKeysRowIcon),
    // Shift+arrows or Shift+WASD, for moving at slower speed
    KeyboardHelpSectionRow.labelWithIconList(FourierMakingWavesStrings.keyboardHelpDialog.moveToolSlowerStringProperty, [shiftPlusArrowsIcon, shiftPlusWASDsIcon])];
    super(FourierMakingWavesStrings.keyboardHelpDialog.measurementToolsStringProperty, rows);
    this.disposeMeasurementToolsKeyboardHelpSection = () => {
      icons.forEach(icon => icon.dispose());
      rows.forEach(row => row.dispose());
    };
  }

  // @public @override
  dispose() {
    this.disposeMeasurementToolsKeyboardHelpSection();
    super.dispose();
  }
}
fourierMakingWaves.register('MeasurementToolsKeyboardHelpSection', MeasurementToolsKeyboardHelpSection);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJLZXlib2FyZEhlbHBJY29uRmFjdG9yeSIsIktleWJvYXJkSGVscFNlY3Rpb24iLCJLZXlib2FyZEhlbHBTZWN0aW9uUm93IiwiZm91cmllck1ha2luZ1dhdmVzIiwiRm91cmllck1ha2luZ1dhdmVzU3RyaW5ncyIsIk1lYXN1cmVtZW50VG9vbHNLZXlib2FyZEhlbHBTZWN0aW9uIiwiY29uc3RydWN0b3IiLCJhcnJvd0tleXNJY29uIiwiYXJyb3dLZXlzUm93SWNvbiIsIndhc2RLZXlzSWNvbiIsIndhc2RSb3dJY29uIiwic2hpZnRQbHVzQXJyb3dzSWNvbiIsInNoaWZ0UGx1c0ljb24iLCJzaGlmdFBsdXNXQVNEc0ljb24iLCJhcnJvd09yV0FTREtleXNSb3dJY29uIiwiYXJyb3dPcldhc2RLZXlzUm93SWNvbiIsImljb25zIiwicm93cyIsImxhYmVsV2l0aEljb24iLCJrZXlib2FyZEhlbHBEaWFsb2ciLCJtb3ZlVG9vbFN0cmluZ1Byb3BlcnR5IiwibGFiZWxXaXRoSWNvbkxpc3QiLCJtb3ZlVG9vbFNsb3dlclN0cmluZ1Byb3BlcnR5IiwibWVhc3VyZW1lbnRUb29sc1N0cmluZ1Byb3BlcnR5IiwiZGlzcG9zZU1lYXN1cmVtZW50VG9vbHNLZXlib2FyZEhlbHBTZWN0aW9uIiwiZm9yRWFjaCIsImljb24iLCJkaXNwb3NlIiwicm93IiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJNZWFzdXJlbWVudFRvb2xzS2V5Ym9hcmRIZWxwU2VjdGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDIzLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBNZWFzdXJlbWVudFRvb2xzS2V5Ym9hcmRIZWxwU2VjdGlvbiBwcm92aWRlcyBrZXlib2FyZCBoZWxwIGZvciB0aGUgbWVhc3VyZW1lbnQgdG9vbHMgdGhhdCBhcmUgZm91bmRcclxuICogaW4gdGhlICdEaXNjcmV0ZScgYW5kICdXYXZlIFBhY2tldCcgc2NyZWVucy5cclxuICpcclxuICogU3BlY2lmaWNhdGlvbiBpcyBpbiBodHRwczovL2dpdGh1Yi5jb20vcGhldHNpbXMvZm91cmllci1tYWtpbmctd2F2ZXMvaXNzdWVzLzE2OFxyXG4gKlxyXG4gKiBAYXV0aG9yIENocmlzIE1hbGxleSAoUGl4ZWxab29tLCBJbmMuKVxyXG4gKi9cclxuXHJcbmltcG9ydCBLZXlib2FyZEhlbHBJY29uRmFjdG9yeSBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5LXBoZXQvanMva2V5Ym9hcmQvaGVscC9LZXlib2FyZEhlbHBJY29uRmFjdG9yeS5qcyc7XHJcbmltcG9ydCBLZXlib2FyZEhlbHBTZWN0aW9uIGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnktcGhldC9qcy9rZXlib2FyZC9oZWxwL0tleWJvYXJkSGVscFNlY3Rpb24uanMnO1xyXG5pbXBvcnQgS2V5Ym9hcmRIZWxwU2VjdGlvblJvdyBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5LXBoZXQvanMva2V5Ym9hcmQvaGVscC9LZXlib2FyZEhlbHBTZWN0aW9uUm93LmpzJztcclxuaW1wb3J0IGZvdXJpZXJNYWtpbmdXYXZlcyBmcm9tICcuLi8uLi9mb3VyaWVyTWFraW5nV2F2ZXMuanMnO1xyXG5pbXBvcnQgRm91cmllck1ha2luZ1dhdmVzU3RyaW5ncyBmcm9tICcuLi8uLi9Gb3VyaWVyTWFraW5nV2F2ZXNTdHJpbmdzLmpzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1lYXN1cmVtZW50VG9vbHNLZXlib2FyZEhlbHBTZWN0aW9uIGV4dGVuZHMgS2V5Ym9hcmRIZWxwU2VjdGlvbiB7XHJcblxyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG5cclxuICAgIC8vIEljb25zLCB3aGljaCBuZWVkIHRvIGJlIGRpc3Bvc2VkXHJcbiAgICBjb25zdCBhcnJvd0tleXNJY29uID0gS2V5Ym9hcmRIZWxwSWNvbkZhY3RvcnkuYXJyb3dLZXlzUm93SWNvbigpO1xyXG4gICAgY29uc3Qgd2FzZEtleXNJY29uID0gS2V5Ym9hcmRIZWxwSWNvbkZhY3Rvcnkud2FzZFJvd0ljb24oKTtcclxuICAgIGNvbnN0IHNoaWZ0UGx1c0Fycm93c0ljb24gPSBLZXlib2FyZEhlbHBJY29uRmFjdG9yeS5zaGlmdFBsdXNJY29uKCBhcnJvd0tleXNJY29uICk7XHJcbiAgICBjb25zdCBzaGlmdFBsdXNXQVNEc0ljb24gPSBLZXlib2FyZEhlbHBJY29uRmFjdG9yeS5zaGlmdFBsdXNJY29uKCB3YXNkS2V5c0ljb24gKTtcclxuICAgIGNvbnN0IGFycm93T3JXQVNES2V5c1Jvd0ljb24gPSBLZXlib2FyZEhlbHBJY29uRmFjdG9yeS5hcnJvd09yV2FzZEtleXNSb3dJY29uKCk7XHJcbiAgICBjb25zdCBpY29ucyA9IFsgYXJyb3dLZXlzSWNvbiwgd2FzZEtleXNJY29uLCBzaGlmdFBsdXNBcnJvd3NJY29uLCBzaGlmdFBsdXNXQVNEc0ljb24sIGFycm93T3JXQVNES2V5c1Jvd0ljb24gXTtcclxuXHJcbiAgICAvLyBLZXlib2FyZEhlbHBTZWN0aW9uUm93cywgd2hpY2ggbmVlZCB0byBiZSBkaXNwb3NlZFxyXG4gICAgY29uc3Qgcm93cyA9IFtcclxuXHJcbiAgICAgIC8vIGFycm93cyBvciBXQVNELCBmb3IgbW92aW5nIGF0IG5vcm1hbCBzcGVlZFxyXG4gICAgICBLZXlib2FyZEhlbHBTZWN0aW9uUm93LmxhYmVsV2l0aEljb24oXHJcbiAgICAgICAgRm91cmllck1ha2luZ1dhdmVzU3RyaW5ncy5rZXlib2FyZEhlbHBEaWFsb2cubW92ZVRvb2xTdHJpbmdQcm9wZXJ0eSxcclxuICAgICAgICBhcnJvd09yV0FTREtleXNSb3dJY29uICksXHJcblxyXG4gICAgICAvLyBTaGlmdCthcnJvd3Mgb3IgU2hpZnQrV0FTRCwgZm9yIG1vdmluZyBhdCBzbG93ZXIgc3BlZWRcclxuICAgICAgS2V5Ym9hcmRIZWxwU2VjdGlvblJvdy5sYWJlbFdpdGhJY29uTGlzdChcclxuICAgICAgICBGb3VyaWVyTWFraW5nV2F2ZXNTdHJpbmdzLmtleWJvYXJkSGVscERpYWxvZy5tb3ZlVG9vbFNsb3dlclN0cmluZ1Byb3BlcnR5LFxyXG4gICAgICAgIFsgc2hpZnRQbHVzQXJyb3dzSWNvbiwgc2hpZnRQbHVzV0FTRHNJY29uIF0gKVxyXG4gICAgXTtcclxuXHJcbiAgICBzdXBlciggRm91cmllck1ha2luZ1dhdmVzU3RyaW5ncy5rZXlib2FyZEhlbHBEaWFsb2cubWVhc3VyZW1lbnRUb29sc1N0cmluZ1Byb3BlcnR5LCByb3dzICk7XHJcblxyXG4gICAgdGhpcy5kaXNwb3NlTWVhc3VyZW1lbnRUb29sc0tleWJvYXJkSGVscFNlY3Rpb24gPSAoKSA9PiB7XHJcbiAgICAgIGljb25zLmZvckVhY2goIGljb24gPT4gaWNvbi5kaXNwb3NlKCkgKTtcclxuICAgICAgcm93cy5mb3JFYWNoKCByb3cgPT4gcm93LmRpc3Bvc2UoKSApO1xyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIC8vIEBwdWJsaWMgQG92ZXJyaWRlXHJcbiAgZGlzcG9zZSgpIHtcclxuICAgIHRoaXMuZGlzcG9zZU1lYXN1cmVtZW50VG9vbHNLZXlib2FyZEhlbHBTZWN0aW9uKCk7XHJcbiAgICBzdXBlci5kaXNwb3NlKCk7XHJcbiAgfVxyXG59XHJcblxyXG5mb3VyaWVyTWFraW5nV2F2ZXMucmVnaXN0ZXIoICdNZWFzdXJlbWVudFRvb2xzS2V5Ym9hcmRIZWxwU2VjdGlvbicsIE1lYXN1cmVtZW50VG9vbHNLZXlib2FyZEhlbHBTZWN0aW9uICk7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLHVCQUF1QixNQUFNLHNFQUFzRTtBQUMxRyxPQUFPQyxtQkFBbUIsTUFBTSxrRUFBa0U7QUFDbEcsT0FBT0Msc0JBQXNCLE1BQU0scUVBQXFFO0FBQ3hHLE9BQU9DLGtCQUFrQixNQUFNLDZCQUE2QjtBQUM1RCxPQUFPQyx5QkFBeUIsTUFBTSxvQ0FBb0M7QUFFMUUsZUFBZSxNQUFNQyxtQ0FBbUMsU0FBU0osbUJBQW1CLENBQUM7RUFFbkZLLFdBQVdBLENBQUEsRUFBRztJQUVaO0lBQ0EsTUFBTUMsYUFBYSxHQUFHUCx1QkFBdUIsQ0FBQ1EsZ0JBQWdCLENBQUMsQ0FBQztJQUNoRSxNQUFNQyxZQUFZLEdBQUdULHVCQUF1QixDQUFDVSxXQUFXLENBQUMsQ0FBQztJQUMxRCxNQUFNQyxtQkFBbUIsR0FBR1gsdUJBQXVCLENBQUNZLGFBQWEsQ0FBRUwsYUFBYyxDQUFDO0lBQ2xGLE1BQU1NLGtCQUFrQixHQUFHYix1QkFBdUIsQ0FBQ1ksYUFBYSxDQUFFSCxZQUFhLENBQUM7SUFDaEYsTUFBTUssc0JBQXNCLEdBQUdkLHVCQUF1QixDQUFDZSxzQkFBc0IsQ0FBQyxDQUFDO0lBQy9FLE1BQU1DLEtBQUssR0FBRyxDQUFFVCxhQUFhLEVBQUVFLFlBQVksRUFBRUUsbUJBQW1CLEVBQUVFLGtCQUFrQixFQUFFQyxzQkFBc0IsQ0FBRTs7SUFFOUc7SUFDQSxNQUFNRyxJQUFJLEdBQUc7SUFFWDtJQUNBZixzQkFBc0IsQ0FBQ2dCLGFBQWEsQ0FDbENkLHlCQUF5QixDQUFDZSxrQkFBa0IsQ0FBQ0Msc0JBQXNCLEVBQ25FTixzQkFBdUIsQ0FBQztJQUUxQjtJQUNBWixzQkFBc0IsQ0FBQ21CLGlCQUFpQixDQUN0Q2pCLHlCQUF5QixDQUFDZSxrQkFBa0IsQ0FBQ0csNEJBQTRCLEVBQ3pFLENBQUVYLG1CQUFtQixFQUFFRSxrQkFBa0IsQ0FBRyxDQUFDLENBQ2hEO0lBRUQsS0FBSyxDQUFFVCx5QkFBeUIsQ0FBQ2Usa0JBQWtCLENBQUNJLDhCQUE4QixFQUFFTixJQUFLLENBQUM7SUFFMUYsSUFBSSxDQUFDTywwQ0FBMEMsR0FBRyxNQUFNO01BQ3REUixLQUFLLENBQUNTLE9BQU8sQ0FBRUMsSUFBSSxJQUFJQSxJQUFJLENBQUNDLE9BQU8sQ0FBQyxDQUFFLENBQUM7TUFDdkNWLElBQUksQ0FBQ1EsT0FBTyxDQUFFRyxHQUFHLElBQUlBLEdBQUcsQ0FBQ0QsT0FBTyxDQUFDLENBQUUsQ0FBQztJQUN0QyxDQUFDO0VBQ0g7O0VBRUE7RUFDQUEsT0FBT0EsQ0FBQSxFQUFHO0lBQ1IsSUFBSSxDQUFDSCwwQ0FBMEMsQ0FBQyxDQUFDO0lBQ2pELEtBQUssQ0FBQ0csT0FBTyxDQUFDLENBQUM7RUFDakI7QUFDRjtBQUVBeEIsa0JBQWtCLENBQUMwQixRQUFRLENBQUUscUNBQXFDLEVBQUV4QixtQ0FBb0MsQ0FBQyJ9