// Copyright 2020-2023, University of Colorado Boulder

/**
 * WaveGameScreen is the 'Wave Game' screen.
 *
 * @author Chris Malley (PixelZoom, Inc.
 */

import Screen from '../../../joist/js/Screen.js';
import FMWColors from '../common/FMWColors.js';
import FMWIconFactory from '../common/view/FMWIconFactory.js';
import fourierMakingWaves from '../fourierMakingWaves.js';
import FourierMakingWavesStrings from '../FourierMakingWavesStrings.js';
import WaveGameModel from './model/WaveGameModel.js';
import WaveGameKeyboardHelpContent from './view/WaveGameKeyboardHelpContent.js';
import WaveGameScreenView from './view/WaveGameScreenView.js';
export default class WaveGameScreen extends Screen {
  constructor(tandem) {
    const options = {
      name: FourierMakingWavesStrings.screen.waveGameStringProperty,
      backgroundColorProperty: FMWColors.waveGameScreenBackgroundColorProperty,
      homeScreenIcon: FMWIconFactory.createWaveGameHomeScreenIcon(),
      createKeyboardHelpNode: () => new WaveGameKeyboardHelpContent(),
      tandem: tandem
    };
    super(() => new WaveGameModel(options.tandem.createTandem('model')), model => new WaveGameScreenView(model, options.tandem.createTandem('view')), options);
  }
  dispose() {
    assert && assert(false, 'dispose is not supported, exists for the lifetime of the sim');
    super.dispose();
  }
}
fourierMakingWaves.register('WaveGameScreen', WaveGameScreen);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTY3JlZW4iLCJGTVdDb2xvcnMiLCJGTVdJY29uRmFjdG9yeSIsImZvdXJpZXJNYWtpbmdXYXZlcyIsIkZvdXJpZXJNYWtpbmdXYXZlc1N0cmluZ3MiLCJXYXZlR2FtZU1vZGVsIiwiV2F2ZUdhbWVLZXlib2FyZEhlbHBDb250ZW50IiwiV2F2ZUdhbWVTY3JlZW5WaWV3IiwiV2F2ZUdhbWVTY3JlZW4iLCJjb25zdHJ1Y3RvciIsInRhbmRlbSIsIm9wdGlvbnMiLCJuYW1lIiwic2NyZWVuIiwid2F2ZUdhbWVTdHJpbmdQcm9wZXJ0eSIsImJhY2tncm91bmRDb2xvclByb3BlcnR5Iiwid2F2ZUdhbWVTY3JlZW5CYWNrZ3JvdW5kQ29sb3JQcm9wZXJ0eSIsImhvbWVTY3JlZW5JY29uIiwiY3JlYXRlV2F2ZUdhbWVIb21lU2NyZWVuSWNvbiIsImNyZWF0ZUtleWJvYXJkSGVscE5vZGUiLCJjcmVhdGVUYW5kZW0iLCJtb2RlbCIsImRpc3Bvc2UiLCJhc3NlcnQiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIldhdmVHYW1lU2NyZWVuLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIwLTIwMjMsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIFdhdmVHYW1lU2NyZWVuIGlzIHRoZSAnV2F2ZSBHYW1lJyBzY3JlZW4uXHJcbiAqXHJcbiAqIEBhdXRob3IgQ2hyaXMgTWFsbGV5IChQaXhlbFpvb20sIEluYy5cclxuICovXHJcblxyXG5pbXBvcnQgU2NyZWVuIGZyb20gJy4uLy4uLy4uL2pvaXN0L2pzL1NjcmVlbi5qcyc7XHJcbmltcG9ydCBUYW5kZW0gZnJvbSAnLi4vLi4vLi4vdGFuZGVtL2pzL1RhbmRlbS5qcyc7XHJcbmltcG9ydCBGTVdDb2xvcnMgZnJvbSAnLi4vY29tbW9uL0ZNV0NvbG9ycy5qcyc7XHJcbmltcG9ydCBGTVdJY29uRmFjdG9yeSBmcm9tICcuLi9jb21tb24vdmlldy9GTVdJY29uRmFjdG9yeS5qcyc7XHJcbmltcG9ydCBmb3VyaWVyTWFraW5nV2F2ZXMgZnJvbSAnLi4vZm91cmllck1ha2luZ1dhdmVzLmpzJztcclxuaW1wb3J0IEZvdXJpZXJNYWtpbmdXYXZlc1N0cmluZ3MgZnJvbSAnLi4vRm91cmllck1ha2luZ1dhdmVzU3RyaW5ncy5qcyc7XHJcbmltcG9ydCBXYXZlR2FtZU1vZGVsIGZyb20gJy4vbW9kZWwvV2F2ZUdhbWVNb2RlbC5qcyc7XHJcbmltcG9ydCBXYXZlR2FtZUtleWJvYXJkSGVscENvbnRlbnQgZnJvbSAnLi92aWV3L1dhdmVHYW1lS2V5Ym9hcmRIZWxwQ29udGVudC5qcyc7XHJcbmltcG9ydCBXYXZlR2FtZVNjcmVlblZpZXcgZnJvbSAnLi92aWV3L1dhdmVHYW1lU2NyZWVuVmlldy5qcyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBXYXZlR2FtZVNjcmVlbiBleHRlbmRzIFNjcmVlbjxXYXZlR2FtZU1vZGVsLCBXYXZlR2FtZVNjcmVlblZpZXc+IHtcclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKCB0YW5kZW06IFRhbmRlbSApIHtcclxuXHJcbiAgICBjb25zdCBvcHRpb25zID0ge1xyXG4gICAgICBuYW1lOiBGb3VyaWVyTWFraW5nV2F2ZXNTdHJpbmdzLnNjcmVlbi53YXZlR2FtZVN0cmluZ1Byb3BlcnR5LFxyXG4gICAgICBiYWNrZ3JvdW5kQ29sb3JQcm9wZXJ0eTogRk1XQ29sb3JzLndhdmVHYW1lU2NyZWVuQmFja2dyb3VuZENvbG9yUHJvcGVydHksXHJcbiAgICAgIGhvbWVTY3JlZW5JY29uOiBGTVdJY29uRmFjdG9yeS5jcmVhdGVXYXZlR2FtZUhvbWVTY3JlZW5JY29uKCksXHJcbiAgICAgIGNyZWF0ZUtleWJvYXJkSGVscE5vZGU6ICgpID0+IG5ldyBXYXZlR2FtZUtleWJvYXJkSGVscENvbnRlbnQoKSxcclxuICAgICAgdGFuZGVtOiB0YW5kZW1cclxuICAgIH07XHJcblxyXG4gICAgc3VwZXIoXHJcbiAgICAgICgpID0+IG5ldyBXYXZlR2FtZU1vZGVsKCBvcHRpb25zLnRhbmRlbS5jcmVhdGVUYW5kZW0oICdtb2RlbCcgKSApLFxyXG4gICAgICBtb2RlbCA9PiBuZXcgV2F2ZUdhbWVTY3JlZW5WaWV3KCBtb2RlbCwgb3B0aW9ucy50YW5kZW0uY3JlYXRlVGFuZGVtKCAndmlldycgKSApLFxyXG4gICAgICBvcHRpb25zXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIG92ZXJyaWRlIGRpc3Bvc2UoKTogdm9pZCB7XHJcbiAgICBhc3NlcnQgJiYgYXNzZXJ0KCBmYWxzZSwgJ2Rpc3Bvc2UgaXMgbm90IHN1cHBvcnRlZCwgZXhpc3RzIGZvciB0aGUgbGlmZXRpbWUgb2YgdGhlIHNpbScgKTtcclxuICAgIHN1cGVyLmRpc3Bvc2UoKTtcclxuICB9XHJcbn1cclxuXHJcbmZvdXJpZXJNYWtpbmdXYXZlcy5yZWdpc3RlciggJ1dhdmVHYW1lU2NyZWVuJywgV2F2ZUdhbWVTY3JlZW4gKTsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsTUFBTSxNQUFNLDZCQUE2QjtBQUVoRCxPQUFPQyxTQUFTLE1BQU0sd0JBQXdCO0FBQzlDLE9BQU9DLGNBQWMsTUFBTSxrQ0FBa0M7QUFDN0QsT0FBT0Msa0JBQWtCLE1BQU0sMEJBQTBCO0FBQ3pELE9BQU9DLHlCQUF5QixNQUFNLGlDQUFpQztBQUN2RSxPQUFPQyxhQUFhLE1BQU0sMEJBQTBCO0FBQ3BELE9BQU9DLDJCQUEyQixNQUFNLHVDQUF1QztBQUMvRSxPQUFPQyxrQkFBa0IsTUFBTSw4QkFBOEI7QUFFN0QsZUFBZSxNQUFNQyxjQUFjLFNBQVNSLE1BQU0sQ0FBb0M7RUFFN0VTLFdBQVdBLENBQUVDLE1BQWMsRUFBRztJQUVuQyxNQUFNQyxPQUFPLEdBQUc7TUFDZEMsSUFBSSxFQUFFUix5QkFBeUIsQ0FBQ1MsTUFBTSxDQUFDQyxzQkFBc0I7TUFDN0RDLHVCQUF1QixFQUFFZCxTQUFTLENBQUNlLHFDQUFxQztNQUN4RUMsY0FBYyxFQUFFZixjQUFjLENBQUNnQiw0QkFBNEIsQ0FBQyxDQUFDO01BQzdEQyxzQkFBc0IsRUFBRUEsQ0FBQSxLQUFNLElBQUliLDJCQUEyQixDQUFDLENBQUM7TUFDL0RJLE1BQU0sRUFBRUE7SUFDVixDQUFDO0lBRUQsS0FBSyxDQUNILE1BQU0sSUFBSUwsYUFBYSxDQUFFTSxPQUFPLENBQUNELE1BQU0sQ0FBQ1UsWUFBWSxDQUFFLE9BQVEsQ0FBRSxDQUFDLEVBQ2pFQyxLQUFLLElBQUksSUFBSWQsa0JBQWtCLENBQUVjLEtBQUssRUFBRVYsT0FBTyxDQUFDRCxNQUFNLENBQUNVLFlBQVksQ0FBRSxNQUFPLENBQUUsQ0FBQyxFQUMvRVQsT0FDRixDQUFDO0VBQ0g7RUFFZ0JXLE9BQU9BLENBQUEsRUFBUztJQUM5QkMsTUFBTSxJQUFJQSxNQUFNLENBQUUsS0FBSyxFQUFFLDhEQUErRCxDQUFDO0lBQ3pGLEtBQUssQ0FBQ0QsT0FBTyxDQUFDLENBQUM7RUFDakI7QUFDRjtBQUVBbkIsa0JBQWtCLENBQUNxQixRQUFRLENBQUUsZ0JBQWdCLEVBQUVoQixjQUFlLENBQUMifQ==