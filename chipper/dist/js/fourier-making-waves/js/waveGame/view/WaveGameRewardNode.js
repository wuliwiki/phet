// Copyright 2021-2023, University of Colorado Boulder

/**
 * WaveGameRewardNode is the reward that's shown behind the RewardDialog when the user reaches the score
 * that results in a reward. This is a bunch of smiley faces and stars that fall from the top of the screen.
 * See design decisions in https://github.com/phetsims/fourier-making-waves/issues/50.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import merge from '../../../../phet-core/js/merge.js';
import FaceNode from '../../../../scenery-phet/js/FaceNode.js';
import StarNode from '../../../../scenery-phet/js/StarNode.js';
import RewardNode from '../../../../vegas/js/RewardNode.js';
import fourierMakingWaves from '../../fourierMakingWaves.js';

// constants
const NUMBER_OF_NODES = 100;
const NODES = [new FaceNode(40, {
  headStroke: 'black'
}), new StarNode()];
export default class WaveGameRewardNode extends RewardNode {
  /**
   * @param {Object} [options]
   */
  constructor(options) {
    options = merge({}, options);
    assert && assert(!options.children, 'WaveGameRewardNode sets nodes');
    options.nodes = RewardNode.createRandomNodes(NODES, NUMBER_OF_NODES);
    super(options);
  }
}
fourierMakingWaves.register('WaveGameRewardNode', WaveGameRewardNode);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtZXJnZSIsIkZhY2VOb2RlIiwiU3Rhck5vZGUiLCJSZXdhcmROb2RlIiwiZm91cmllck1ha2luZ1dhdmVzIiwiTlVNQkVSX09GX05PREVTIiwiTk9ERVMiLCJoZWFkU3Ryb2tlIiwiV2F2ZUdhbWVSZXdhcmROb2RlIiwiY29uc3RydWN0b3IiLCJvcHRpb25zIiwiYXNzZXJ0IiwiY2hpbGRyZW4iLCJub2RlcyIsImNyZWF0ZVJhbmRvbU5vZGVzIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJXYXZlR2FtZVJld2FyZE5vZGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyMywgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogV2F2ZUdhbWVSZXdhcmROb2RlIGlzIHRoZSByZXdhcmQgdGhhdCdzIHNob3duIGJlaGluZCB0aGUgUmV3YXJkRGlhbG9nIHdoZW4gdGhlIHVzZXIgcmVhY2hlcyB0aGUgc2NvcmVcclxuICogdGhhdCByZXN1bHRzIGluIGEgcmV3YXJkLiBUaGlzIGlzIGEgYnVuY2ggb2Ygc21pbGV5IGZhY2VzIGFuZCBzdGFycyB0aGF0IGZhbGwgZnJvbSB0aGUgdG9wIG9mIHRoZSBzY3JlZW4uXHJcbiAqIFNlZSBkZXNpZ24gZGVjaXNpb25zIGluIGh0dHBzOi8vZ2l0aHViLmNvbS9waGV0c2ltcy9mb3VyaWVyLW1ha2luZy13YXZlcy9pc3N1ZXMvNTAuXHJcbiAqXHJcbiAqIEBhdXRob3IgQ2hyaXMgTWFsbGV5IChQaXhlbFpvb20sIEluYy4pXHJcbiAqL1xyXG5cclxuaW1wb3J0IG1lcmdlIGZyb20gJy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy9tZXJnZS5qcyc7XHJcbmltcG9ydCBGYWNlTm9kZSBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5LXBoZXQvanMvRmFjZU5vZGUuanMnO1xyXG5pbXBvcnQgU3Rhck5vZGUgZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS1waGV0L2pzL1N0YXJOb2RlLmpzJztcclxuaW1wb3J0IFJld2FyZE5vZGUgZnJvbSAnLi4vLi4vLi4vLi4vdmVnYXMvanMvUmV3YXJkTm9kZS5qcyc7XHJcbmltcG9ydCBmb3VyaWVyTWFraW5nV2F2ZXMgZnJvbSAnLi4vLi4vZm91cmllck1ha2luZ1dhdmVzLmpzJztcclxuXHJcbi8vIGNvbnN0YW50c1xyXG5jb25zdCBOVU1CRVJfT0ZfTk9ERVMgPSAxMDA7XHJcblxyXG5jb25zdCBOT0RFUyA9IFtcclxuICBuZXcgRmFjZU5vZGUoIDQwLCB7IGhlYWRTdHJva2U6ICdibGFjaycgfSApLFxyXG4gIG5ldyBTdGFyTm9kZSgpXHJcbl07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBXYXZlR2FtZVJld2FyZE5vZGUgZXh0ZW5kcyBSZXdhcmROb2RlIHtcclxuXHJcbiAgLyoqXHJcbiAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxyXG4gICAqL1xyXG4gIGNvbnN0cnVjdG9yKCBvcHRpb25zICkge1xyXG5cclxuICAgIG9wdGlvbnMgPSBtZXJnZSgge30sIG9wdGlvbnMgKTtcclxuXHJcbiAgICBhc3NlcnQgJiYgYXNzZXJ0KCAhb3B0aW9ucy5jaGlsZHJlbiwgJ1dhdmVHYW1lUmV3YXJkTm9kZSBzZXRzIG5vZGVzJyApO1xyXG4gICAgb3B0aW9ucy5ub2RlcyA9IFJld2FyZE5vZGUuY3JlYXRlUmFuZG9tTm9kZXMoIE5PREVTLCBOVU1CRVJfT0ZfTk9ERVMgKTtcclxuXHJcbiAgICBzdXBlciggb3B0aW9ucyApO1xyXG4gIH1cclxufVxyXG5cclxuZm91cmllck1ha2luZ1dhdmVzLnJlZ2lzdGVyKCAnV2F2ZUdhbWVSZXdhcmROb2RlJywgV2F2ZUdhbWVSZXdhcmROb2RlICk7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxLQUFLLE1BQU0sbUNBQW1DO0FBQ3JELE9BQU9DLFFBQVEsTUFBTSx5Q0FBeUM7QUFDOUQsT0FBT0MsUUFBUSxNQUFNLHlDQUF5QztBQUM5RCxPQUFPQyxVQUFVLE1BQU0sb0NBQW9DO0FBQzNELE9BQU9DLGtCQUFrQixNQUFNLDZCQUE2Qjs7QUFFNUQ7QUFDQSxNQUFNQyxlQUFlLEdBQUcsR0FBRztBQUUzQixNQUFNQyxLQUFLLEdBQUcsQ0FDWixJQUFJTCxRQUFRLENBQUUsRUFBRSxFQUFFO0VBQUVNLFVBQVUsRUFBRTtBQUFRLENBQUUsQ0FBQyxFQUMzQyxJQUFJTCxRQUFRLENBQUMsQ0FBQyxDQUNmO0FBRUQsZUFBZSxNQUFNTSxrQkFBa0IsU0FBU0wsVUFBVSxDQUFDO0VBRXpEO0FBQ0Y7QUFDQTtFQUNFTSxXQUFXQSxDQUFFQyxPQUFPLEVBQUc7SUFFckJBLE9BQU8sR0FBR1YsS0FBSyxDQUFFLENBQUMsQ0FBQyxFQUFFVSxPQUFRLENBQUM7SUFFOUJDLE1BQU0sSUFBSUEsTUFBTSxDQUFFLENBQUNELE9BQU8sQ0FBQ0UsUUFBUSxFQUFFLCtCQUFnQyxDQUFDO0lBQ3RFRixPQUFPLENBQUNHLEtBQUssR0FBR1YsVUFBVSxDQUFDVyxpQkFBaUIsQ0FBRVIsS0FBSyxFQUFFRCxlQUFnQixDQUFDO0lBRXRFLEtBQUssQ0FBRUssT0FBUSxDQUFDO0VBQ2xCO0FBQ0Y7QUFFQU4sa0JBQWtCLENBQUNXLFFBQVEsQ0FBRSxvQkFBb0IsRUFBRVAsa0JBQW1CLENBQUMifQ==