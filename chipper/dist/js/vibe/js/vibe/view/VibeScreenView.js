// Copyright 2013-2022, University of Colorado Boulder

/**
 *
 * @author John Blanco
 */

import ScreenView from '../../../../joist/js/ScreenView.js';
import PhetFont from '../../../../scenery-phet/js/PhetFont.js';
import { Text } from '../../../../scenery/js/imports.js';
import RectangularPushButton from '../../../../sun/js/buttons/RectangularPushButton.js';
import relativePathSound_mp3 from '../../../sounds/relativePathSound_mp3.js';
import Sound from '../../Sound.js';
import vibe from '../../vibe.js';

// constants
const BUTTON_FONT = new PhetFont({
  size: 20
});
const TEST_SOUND = new Sound(relativePathSound_mp3);
class VibeScreenView extends ScreenView {
  /**
   * @param {VibeModel} vibeModel
   */
  constructor(vibeModel) {
    super();

    // blurb with some info
    const blurb = new Text('Demo/Test of the Vibe library, which is for sound generation.', {
      font: new PhetFont(20),
      top: 20,
      left: 20
    });
    this.addChild(blurb);
    const playSoundImmediatelyButton = new RectangularPushButton({
      content: new Text('Play Sound Immediately', {
        font: BUTTON_FONT
      }),
      baseColor: 'rgb( 245, 184, 0 )',
      top: blurb.bottom + 10,
      left: blurb.left,
      listener: function () {
        TEST_SOUND.stop(); // just in case it's already playing
        TEST_SOUND.play();
      }
    });
    this.addChild(playSoundImmediatelyButton);
    const playInAnimationFrameButton = new RectangularPushButton({
      content: new Text('Play in Animation Frame (delayed)', {
        font: BUTTON_FONT
      }),
      baseColor: '#A0D022',
      top: playSoundImmediatelyButton.bottom + 10,
      left: blurb.left,
      listener: function () {
        const start = Date.now();
        let played = false;
        (function animationLoop() {
          const now = Date.now();
          if (now - start > 500 && !played) {
            TEST_SOUND.play();
            played = true;
          } else {
            window.requestAnimationFrame(animationLoop);
          }
        })();
      }
    });
    this.addChild(playInAnimationFrameButton);
  }
}
vibe.register('VibeScreenView', VibeScreenView);
export default VibeScreenView;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTY3JlZW5WaWV3IiwiUGhldEZvbnQiLCJUZXh0IiwiUmVjdGFuZ3VsYXJQdXNoQnV0dG9uIiwicmVsYXRpdmVQYXRoU291bmRfbXAzIiwiU291bmQiLCJ2aWJlIiwiQlVUVE9OX0ZPTlQiLCJzaXplIiwiVEVTVF9TT1VORCIsIlZpYmVTY3JlZW5WaWV3IiwiY29uc3RydWN0b3IiLCJ2aWJlTW9kZWwiLCJibHVyYiIsImZvbnQiLCJ0b3AiLCJsZWZ0IiwiYWRkQ2hpbGQiLCJwbGF5U291bmRJbW1lZGlhdGVseUJ1dHRvbiIsImNvbnRlbnQiLCJiYXNlQ29sb3IiLCJib3R0b20iLCJsaXN0ZW5lciIsInN0b3AiLCJwbGF5IiwicGxheUluQW5pbWF0aW9uRnJhbWVCdXR0b24iLCJzdGFydCIsIkRhdGUiLCJub3ciLCJwbGF5ZWQiLCJhbmltYXRpb25Mb29wIiwid2luZG93IiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJWaWJlU2NyZWVuVmlldy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxMy0yMDIyLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKlxyXG4gKiBAYXV0aG9yIEpvaG4gQmxhbmNvXHJcbiAqL1xyXG5cclxuaW1wb3J0IFNjcmVlblZpZXcgZnJvbSAnLi4vLi4vLi4vLi4vam9pc3QvanMvU2NyZWVuVmlldy5qcyc7XHJcbmltcG9ydCBQaGV0Rm9udCBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5LXBoZXQvanMvUGhldEZvbnQuanMnO1xyXG5pbXBvcnQgeyBUZXh0IH0gZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IFJlY3Rhbmd1bGFyUHVzaEJ1dHRvbiBmcm9tICcuLi8uLi8uLi8uLi9zdW4vanMvYnV0dG9ucy9SZWN0YW5ndWxhclB1c2hCdXR0b24uanMnO1xyXG5pbXBvcnQgcmVsYXRpdmVQYXRoU291bmRfbXAzIGZyb20gJy4uLy4uLy4uL3NvdW5kcy9yZWxhdGl2ZVBhdGhTb3VuZF9tcDMuanMnO1xyXG5pbXBvcnQgU291bmQgZnJvbSAnLi4vLi4vU291bmQuanMnO1xyXG5pbXBvcnQgdmliZSBmcm9tICcuLi8uLi92aWJlLmpzJztcclxuXHJcbi8vIGNvbnN0YW50c1xyXG5jb25zdCBCVVRUT05fRk9OVCA9IG5ldyBQaGV0Rm9udCggeyBzaXplOiAyMCB9ICk7XHJcbmNvbnN0IFRFU1RfU09VTkQgPSBuZXcgU291bmQoIHJlbGF0aXZlUGF0aFNvdW5kX21wMyApO1xyXG5cclxuY2xhc3MgVmliZVNjcmVlblZpZXcgZXh0ZW5kcyBTY3JlZW5WaWV3IHtcclxuXHJcbiAgLyoqXHJcbiAgICogQHBhcmFtIHtWaWJlTW9kZWx9IHZpYmVNb2RlbFxyXG4gICAqL1xyXG4gIGNvbnN0cnVjdG9yKCB2aWJlTW9kZWwgKSB7XHJcblxyXG4gICAgc3VwZXIoKTtcclxuXHJcbiAgICAvLyBibHVyYiB3aXRoIHNvbWUgaW5mb1xyXG4gICAgY29uc3QgYmx1cmIgPSBuZXcgVGV4dCggJ0RlbW8vVGVzdCBvZiB0aGUgVmliZSBsaWJyYXJ5LCB3aGljaCBpcyBmb3Igc291bmQgZ2VuZXJhdGlvbi4nLCB7XHJcbiAgICAgIGZvbnQ6IG5ldyBQaGV0Rm9udCggMjAgKSxcclxuICAgICAgdG9wOiAyMCxcclxuICAgICAgbGVmdDogMjBcclxuICAgIH0gKTtcclxuICAgIHRoaXMuYWRkQ2hpbGQoIGJsdXJiICk7XHJcblxyXG4gICAgY29uc3QgcGxheVNvdW5kSW1tZWRpYXRlbHlCdXR0b24gPSBuZXcgUmVjdGFuZ3VsYXJQdXNoQnV0dG9uKCB7XHJcbiAgICAgIGNvbnRlbnQ6IG5ldyBUZXh0KCAnUGxheSBTb3VuZCBJbW1lZGlhdGVseScsIHsgZm9udDogQlVUVE9OX0ZPTlQgfSApLFxyXG4gICAgICBiYXNlQ29sb3I6ICdyZ2IoIDI0NSwgMTg0LCAwICknLFxyXG4gICAgICB0b3A6IGJsdXJiLmJvdHRvbSArIDEwLFxyXG4gICAgICBsZWZ0OiBibHVyYi5sZWZ0LFxyXG4gICAgICBsaXN0ZW5lcjogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgVEVTVF9TT1VORC5zdG9wKCk7IC8vIGp1c3QgaW4gY2FzZSBpdCdzIGFscmVhZHkgcGxheWluZ1xyXG4gICAgICAgIFRFU1RfU09VTkQucGxheSgpO1xyXG4gICAgICB9XHJcbiAgICB9ICk7XHJcbiAgICB0aGlzLmFkZENoaWxkKCBwbGF5U291bmRJbW1lZGlhdGVseUJ1dHRvbiApO1xyXG5cclxuICAgIGNvbnN0IHBsYXlJbkFuaW1hdGlvbkZyYW1lQnV0dG9uID0gbmV3IFJlY3Rhbmd1bGFyUHVzaEJ1dHRvbigge1xyXG4gICAgICBjb250ZW50OiBuZXcgVGV4dCggJ1BsYXkgaW4gQW5pbWF0aW9uIEZyYW1lIChkZWxheWVkKScsIHsgZm9udDogQlVUVE9OX0ZPTlQgfSApLFxyXG4gICAgICBiYXNlQ29sb3I6ICcjQTBEMDIyJyxcclxuICAgICAgdG9wOiBwbGF5U291bmRJbW1lZGlhdGVseUJ1dHRvbi5ib3R0b20gKyAxMCxcclxuICAgICAgbGVmdDogYmx1cmIubGVmdCxcclxuICAgICAgbGlzdGVuZXI6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIGNvbnN0IHN0YXJ0ID0gRGF0ZS5ub3coKTtcclxuICAgICAgICBsZXQgcGxheWVkID0gZmFsc2U7XHJcbiAgICAgICAgKCBmdW5jdGlvbiBhbmltYXRpb25Mb29wKCkge1xyXG4gICAgICAgICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTtcclxuICAgICAgICAgIGlmICggbm93IC0gc3RhcnQgPiA1MDAgJiYgIXBsYXllZCApIHtcclxuICAgICAgICAgICAgVEVTVF9TT1VORC5wbGF5KCk7XHJcbiAgICAgICAgICAgIHBsYXllZCA9IHRydWU7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSggYW5pbWF0aW9uTG9vcCApO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0gKSgpO1xyXG4gICAgICB9XHJcbiAgICB9ICk7XHJcbiAgICB0aGlzLmFkZENoaWxkKCBwbGF5SW5BbmltYXRpb25GcmFtZUJ1dHRvbiApO1xyXG4gIH1cclxufVxyXG5cclxudmliZS5yZWdpc3RlciggJ1ZpYmVTY3JlZW5WaWV3JywgVmliZVNjcmVlblZpZXcgKTtcclxuZXhwb3J0IGRlZmF1bHQgVmliZVNjcmVlblZpZXc7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxVQUFVLE1BQU0sb0NBQW9DO0FBQzNELE9BQU9DLFFBQVEsTUFBTSx5Q0FBeUM7QUFDOUQsU0FBU0MsSUFBSSxRQUFRLG1DQUFtQztBQUN4RCxPQUFPQyxxQkFBcUIsTUFBTSxxREFBcUQ7QUFDdkYsT0FBT0MscUJBQXFCLE1BQU0sMENBQTBDO0FBQzVFLE9BQU9DLEtBQUssTUFBTSxnQkFBZ0I7QUFDbEMsT0FBT0MsSUFBSSxNQUFNLGVBQWU7O0FBRWhDO0FBQ0EsTUFBTUMsV0FBVyxHQUFHLElBQUlOLFFBQVEsQ0FBRTtFQUFFTyxJQUFJLEVBQUU7QUFBRyxDQUFFLENBQUM7QUFDaEQsTUFBTUMsVUFBVSxHQUFHLElBQUlKLEtBQUssQ0FBRUQscUJBQXNCLENBQUM7QUFFckQsTUFBTU0sY0FBYyxTQUFTVixVQUFVLENBQUM7RUFFdEM7QUFDRjtBQUNBO0VBQ0VXLFdBQVdBLENBQUVDLFNBQVMsRUFBRztJQUV2QixLQUFLLENBQUMsQ0FBQzs7SUFFUDtJQUNBLE1BQU1DLEtBQUssR0FBRyxJQUFJWCxJQUFJLENBQUUsK0RBQStELEVBQUU7TUFDdkZZLElBQUksRUFBRSxJQUFJYixRQUFRLENBQUUsRUFBRyxDQUFDO01BQ3hCYyxHQUFHLEVBQUUsRUFBRTtNQUNQQyxJQUFJLEVBQUU7SUFDUixDQUFFLENBQUM7SUFDSCxJQUFJLENBQUNDLFFBQVEsQ0FBRUosS0FBTSxDQUFDO0lBRXRCLE1BQU1LLDBCQUEwQixHQUFHLElBQUlmLHFCQUFxQixDQUFFO01BQzVEZ0IsT0FBTyxFQUFFLElBQUlqQixJQUFJLENBQUUsd0JBQXdCLEVBQUU7UUFBRVksSUFBSSxFQUFFUDtNQUFZLENBQUUsQ0FBQztNQUNwRWEsU0FBUyxFQUFFLG9CQUFvQjtNQUMvQkwsR0FBRyxFQUFFRixLQUFLLENBQUNRLE1BQU0sR0FBRyxFQUFFO01BQ3RCTCxJQUFJLEVBQUVILEtBQUssQ0FBQ0csSUFBSTtNQUNoQk0sUUFBUSxFQUFFLFNBQUFBLENBQUEsRUFBVztRQUNuQmIsVUFBVSxDQUFDYyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDbkJkLFVBQVUsQ0FBQ2UsSUFBSSxDQUFDLENBQUM7TUFDbkI7SUFDRixDQUFFLENBQUM7SUFDSCxJQUFJLENBQUNQLFFBQVEsQ0FBRUMsMEJBQTJCLENBQUM7SUFFM0MsTUFBTU8sMEJBQTBCLEdBQUcsSUFBSXRCLHFCQUFxQixDQUFFO01BQzVEZ0IsT0FBTyxFQUFFLElBQUlqQixJQUFJLENBQUUsbUNBQW1DLEVBQUU7UUFBRVksSUFBSSxFQUFFUDtNQUFZLENBQUUsQ0FBQztNQUMvRWEsU0FBUyxFQUFFLFNBQVM7TUFDcEJMLEdBQUcsRUFBRUcsMEJBQTBCLENBQUNHLE1BQU0sR0FBRyxFQUFFO01BQzNDTCxJQUFJLEVBQUVILEtBQUssQ0FBQ0csSUFBSTtNQUNoQk0sUUFBUSxFQUFFLFNBQUFBLENBQUEsRUFBVztRQUNuQixNQUFNSSxLQUFLLEdBQUdDLElBQUksQ0FBQ0MsR0FBRyxDQUFDLENBQUM7UUFDeEIsSUFBSUMsTUFBTSxHQUFHLEtBQUs7UUFDbEIsQ0FBRSxTQUFTQyxhQUFhQSxDQUFBLEVBQUc7VUFDekIsTUFBTUYsR0FBRyxHQUFHRCxJQUFJLENBQUNDLEdBQUcsQ0FBQyxDQUFDO1VBQ3RCLElBQUtBLEdBQUcsR0FBR0YsS0FBSyxHQUFHLEdBQUcsSUFBSSxDQUFDRyxNQUFNLEVBQUc7WUFDbENwQixVQUFVLENBQUNlLElBQUksQ0FBQyxDQUFDO1lBQ2pCSyxNQUFNLEdBQUcsSUFBSTtVQUNmLENBQUMsTUFDSTtZQUNIRSxNQUFNLENBQUNDLHFCQUFxQixDQUFFRixhQUFjLENBQUM7VUFDL0M7UUFDRixDQUFDLEVBQUcsQ0FBQztNQUNQO0lBQ0YsQ0FBRSxDQUFDO0lBQ0gsSUFBSSxDQUFDYixRQUFRLENBQUVRLDBCQUEyQixDQUFDO0VBQzdDO0FBQ0Y7QUFFQW5CLElBQUksQ0FBQzJCLFFBQVEsQ0FBRSxnQkFBZ0IsRUFBRXZCLGNBQWUsQ0FBQztBQUNqRCxlQUFlQSxjQUFjIn0=