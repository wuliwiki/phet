// Copyright 2021-2022, University of Colorado Boulder

/**
 * An object that contains a value for each item in an enumeration.
 *
 * @author Jonathan Olson <jonathan.olson@colorado.edu>
 */

import EnumerationMap from './EnumerationMap.js';
import Orientation from './Orientation.js';
import phetCore from './phetCore.js';
class OrientationPair extends EnumerationMap {
  /**
   * @param horizontal - Value for the horizontal orientation
   * @param vertical - Value for the vertical orientation
   */
  constructor(horizontal, vertical) {
    super(Orientation, orientation => orientation === Orientation.HORIZONTAL ? horizontal : vertical);
  }
  get horizontal() {
    return this.get(Orientation.HORIZONTAL);
  }
  set horizontal(value) {
    this.set(Orientation.HORIZONTAL, value);
  }
  get vertical() {
    return this.get(Orientation.VERTICAL);
  }
  set vertical(value) {
    this.set(Orientation.VERTICAL, value);
  }

  /**
   * Creates an orientation pair based on a factory method.
   *
   * @param factory - called once for each orientation to determine
   *                             the value.
   */
  static create(factory) {
    return new OrientationPair(factory(Orientation.HORIZONTAL), factory(Orientation.VERTICAL));
  }
}
phetCore.register('OrientationPair', OrientationPair);
export default OrientationPair;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJFbnVtZXJhdGlvbk1hcCIsIk9yaWVudGF0aW9uIiwicGhldENvcmUiLCJPcmllbnRhdGlvblBhaXIiLCJjb25zdHJ1Y3RvciIsImhvcml6b250YWwiLCJ2ZXJ0aWNhbCIsIm9yaWVudGF0aW9uIiwiSE9SSVpPTlRBTCIsImdldCIsInZhbHVlIiwic2V0IiwiVkVSVElDQUwiLCJjcmVhdGUiLCJmYWN0b3J5IiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJPcmllbnRhdGlvblBhaXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogQW4gb2JqZWN0IHRoYXQgY29udGFpbnMgYSB2YWx1ZSBmb3IgZWFjaCBpdGVtIGluIGFuIGVudW1lcmF0aW9uLlxyXG4gKlxyXG4gKiBAYXV0aG9yIEpvbmF0aGFuIE9sc29uIDxqb25hdGhhbi5vbHNvbkBjb2xvcmFkby5lZHU+XHJcbiAqL1xyXG5cclxuaW1wb3J0IEVudW1lcmF0aW9uTWFwIGZyb20gJy4vRW51bWVyYXRpb25NYXAuanMnO1xyXG5pbXBvcnQgT3JpZW50YXRpb24gZnJvbSAnLi9PcmllbnRhdGlvbi5qcyc7XHJcbmltcG9ydCBwaGV0Q29yZSBmcm9tICcuL3BoZXRDb3JlLmpzJztcclxuXHJcbmNsYXNzIE9yaWVudGF0aW9uUGFpcjxUPiBleHRlbmRzIEVudW1lcmF0aW9uTWFwPE9yaWVudGF0aW9uLCBUPiB7XHJcblxyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSBob3Jpem9udGFsIC0gVmFsdWUgZm9yIHRoZSBob3Jpem9udGFsIG9yaWVudGF0aW9uXHJcbiAgICogQHBhcmFtIHZlcnRpY2FsIC0gVmFsdWUgZm9yIHRoZSB2ZXJ0aWNhbCBvcmllbnRhdGlvblxyXG4gICAqL1xyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvciggaG9yaXpvbnRhbDogVCwgdmVydGljYWw6IFQgKSB7XHJcbiAgICBzdXBlciggT3JpZW50YXRpb24sIG9yaWVudGF0aW9uID0+IG9yaWVudGF0aW9uID09PSBPcmllbnRhdGlvbi5IT1JJWk9OVEFMID8gaG9yaXpvbnRhbCA6IHZlcnRpY2FsICk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0IGhvcml6b250YWwoKTogVCB7XHJcbiAgICByZXR1cm4gdGhpcy5nZXQoIE9yaWVudGF0aW9uLkhPUklaT05UQUwgKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBzZXQgaG9yaXpvbnRhbCggdmFsdWU6IFQgKSB7XHJcbiAgICB0aGlzLnNldCggT3JpZW50YXRpb24uSE9SSVpPTlRBTCwgdmFsdWUgKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXQgdmVydGljYWwoKTogVCB7XHJcbiAgICByZXR1cm4gdGhpcy5nZXQoIE9yaWVudGF0aW9uLlZFUlRJQ0FMICk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc2V0IHZlcnRpY2FsKCB2YWx1ZTogVCApIHtcclxuICAgIHRoaXMuc2V0KCBPcmllbnRhdGlvbi5WRVJUSUNBTCwgdmFsdWUgKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIENyZWF0ZXMgYW4gb3JpZW50YXRpb24gcGFpciBiYXNlZCBvbiBhIGZhY3RvcnkgbWV0aG9kLlxyXG4gICAqXHJcbiAgICogQHBhcmFtIGZhY3RvcnkgLSBjYWxsZWQgb25jZSBmb3IgZWFjaCBvcmllbnRhdGlvbiB0byBkZXRlcm1pbmVcclxuICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhlIHZhbHVlLlxyXG4gICAqL1xyXG4gIHB1YmxpYyBzdGF0aWMgY3JlYXRlPFQ+KCBmYWN0b3J5OiAoIG86IE9yaWVudGF0aW9uICkgPT4gVCApOiBPcmllbnRhdGlvblBhaXI8VD4ge1xyXG4gICAgcmV0dXJuIG5ldyBPcmllbnRhdGlvblBhaXIoIGZhY3RvcnkoIE9yaWVudGF0aW9uLkhPUklaT05UQUwgKSwgZmFjdG9yeSggT3JpZW50YXRpb24uVkVSVElDQUwgKSApO1xyXG4gIH1cclxufVxyXG5cclxucGhldENvcmUucmVnaXN0ZXIoICdPcmllbnRhdGlvblBhaXInLCBPcmllbnRhdGlvblBhaXIgKTtcclxuZXhwb3J0IGRlZmF1bHQgT3JpZW50YXRpb25QYWlyOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxjQUFjLE1BQU0scUJBQXFCO0FBQ2hELE9BQU9DLFdBQVcsTUFBTSxrQkFBa0I7QUFDMUMsT0FBT0MsUUFBUSxNQUFNLGVBQWU7QUFFcEMsTUFBTUMsZUFBZSxTQUFZSCxjQUFjLENBQWlCO0VBRTlEO0FBQ0Y7QUFDQTtBQUNBO0VBQ1NJLFdBQVdBLENBQUVDLFVBQWEsRUFBRUMsUUFBVyxFQUFHO0lBQy9DLEtBQUssQ0FBRUwsV0FBVyxFQUFFTSxXQUFXLElBQUlBLFdBQVcsS0FBS04sV0FBVyxDQUFDTyxVQUFVLEdBQUdILFVBQVUsR0FBR0MsUUFBUyxDQUFDO0VBQ3JHO0VBRUEsSUFBV0QsVUFBVUEsQ0FBQSxFQUFNO0lBQ3pCLE9BQU8sSUFBSSxDQUFDSSxHQUFHLENBQUVSLFdBQVcsQ0FBQ08sVUFBVyxDQUFDO0VBQzNDO0VBRUEsSUFBV0gsVUFBVUEsQ0FBRUssS0FBUSxFQUFHO0lBQ2hDLElBQUksQ0FBQ0MsR0FBRyxDQUFFVixXQUFXLENBQUNPLFVBQVUsRUFBRUUsS0FBTSxDQUFDO0VBQzNDO0VBRUEsSUFBV0osUUFBUUEsQ0FBQSxFQUFNO0lBQ3ZCLE9BQU8sSUFBSSxDQUFDRyxHQUFHLENBQUVSLFdBQVcsQ0FBQ1csUUFBUyxDQUFDO0VBQ3pDO0VBRUEsSUFBV04sUUFBUUEsQ0FBRUksS0FBUSxFQUFHO0lBQzlCLElBQUksQ0FBQ0MsR0FBRyxDQUFFVixXQUFXLENBQUNXLFFBQVEsRUFBRUYsS0FBTSxDQUFDO0VBQ3pDOztFQUVBO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtFQUNFLE9BQWNHLE1BQU1BLENBQUtDLE9BQWdDLEVBQXVCO0lBQzlFLE9BQU8sSUFBSVgsZUFBZSxDQUFFVyxPQUFPLENBQUViLFdBQVcsQ0FBQ08sVUFBVyxDQUFDLEVBQUVNLE9BQU8sQ0FBRWIsV0FBVyxDQUFDVyxRQUFTLENBQUUsQ0FBQztFQUNsRztBQUNGO0FBRUFWLFFBQVEsQ0FBQ2EsUUFBUSxDQUFFLGlCQUFpQixFQUFFWixlQUFnQixDQUFDO0FBQ3ZELGVBQWVBLGVBQWUifQ==