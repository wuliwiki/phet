// Copyright 2021, University of Colorado Boulder

/**
 * NLCheckboxGroup is a convenience class for creating a group of checkboxes.
 *
 * @author John Blanco (PhET Interactive Simulations)
 */

import merge from '../../../../phet-core/js/merge.js';
import { VBox } from '../../../../scenery/js/imports.js';
import numberLineCommon from '../../numberLineCommon.js';
import NLCConstants from '../NLCConstants.js';
class NLCheckboxGroup extends VBox {
  /**
   * @param {Checkbox[]} checkboxes
   * @param {Object} [options]
   */
  constructor(checkboxes, options) {
    assert && assert(options === undefined || options.children === undefined, 'children should not be specified');
    options = merge({
      children: checkboxes,
      spacing: 12,
      align: 'left',
      left: NLCConstants.SCREEN_VIEW_X_MARGIN,
      top: NLCConstants.SCREEN_VIEW_Y_MARGIN
    }, options);
    super(options);
  }

  /**
   * @public
   * @override
   */
  dispose() {
    assert && assert(false, 'NLCheckboxGroup does not support dispose');
  }
}
numberLineCommon.register('NLCheckboxGroup', NLCheckboxGroup);
export default NLCheckboxGroup;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtZXJnZSIsIlZCb3giLCJudW1iZXJMaW5lQ29tbW9uIiwiTkxDQ29uc3RhbnRzIiwiTkxDaGVja2JveEdyb3VwIiwiY29uc3RydWN0b3IiLCJjaGVja2JveGVzIiwib3B0aW9ucyIsImFzc2VydCIsInVuZGVmaW5lZCIsImNoaWxkcmVuIiwic3BhY2luZyIsImFsaWduIiwibGVmdCIsIlNDUkVFTl9WSUVXX1hfTUFSR0lOIiwidG9wIiwiU0NSRUVOX1ZJRVdfWV9NQVJHSU4iLCJkaXNwb3NlIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJOTENoZWNrYm94R3JvdXAuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIE5MQ2hlY2tib3hHcm91cCBpcyBhIGNvbnZlbmllbmNlIGNsYXNzIGZvciBjcmVhdGluZyBhIGdyb3VwIG9mIGNoZWNrYm94ZXMuXHJcbiAqXHJcbiAqIEBhdXRob3IgSm9obiBCbGFuY28gKFBoRVQgSW50ZXJhY3RpdmUgU2ltdWxhdGlvbnMpXHJcbiAqL1xyXG5cclxuaW1wb3J0IG1lcmdlIGZyb20gJy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy9tZXJnZS5qcyc7XHJcbmltcG9ydCB7IFZCb3ggfSBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgbnVtYmVyTGluZUNvbW1vbiBmcm9tICcuLi8uLi9udW1iZXJMaW5lQ29tbW9uLmpzJztcclxuaW1wb3J0IE5MQ0NvbnN0YW50cyBmcm9tICcuLi9OTENDb25zdGFudHMuanMnO1xyXG5cclxuY2xhc3MgTkxDaGVja2JveEdyb3VwIGV4dGVuZHMgVkJveCB7XHJcblxyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSB7Q2hlY2tib3hbXX0gY2hlY2tib3hlc1xyXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc11cclxuICAgKi9cclxuICBjb25zdHJ1Y3RvciggY2hlY2tib3hlcywgb3B0aW9ucyApIHtcclxuXHJcbiAgICBhc3NlcnQgJiYgYXNzZXJ0KCBvcHRpb25zID09PSB1bmRlZmluZWQgfHwgb3B0aW9ucy5jaGlsZHJlbiA9PT0gdW5kZWZpbmVkLCAnY2hpbGRyZW4gc2hvdWxkIG5vdCBiZSBzcGVjaWZpZWQnICk7XHJcblxyXG4gICAgb3B0aW9ucyA9IG1lcmdlKCB7XHJcbiAgICAgIGNoaWxkcmVuOiBjaGVja2JveGVzLFxyXG4gICAgICBzcGFjaW5nOiAxMixcclxuICAgICAgYWxpZ246ICdsZWZ0JyxcclxuICAgICAgbGVmdDogTkxDQ29uc3RhbnRzLlNDUkVFTl9WSUVXX1hfTUFSR0lOLFxyXG4gICAgICB0b3A6IE5MQ0NvbnN0YW50cy5TQ1JFRU5fVklFV19ZX01BUkdJTlxyXG4gICAgfSwgb3B0aW9ucyApO1xyXG5cclxuICAgIHN1cGVyKCBvcHRpb25zICk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBAcHVibGljXHJcbiAgICogQG92ZXJyaWRlXHJcbiAgICovXHJcbiAgZGlzcG9zZSgpIHtcclxuICAgIGFzc2VydCAmJiBhc3NlcnQoIGZhbHNlLCAnTkxDaGVja2JveEdyb3VwIGRvZXMgbm90IHN1cHBvcnQgZGlzcG9zZScgKTtcclxuICB9XHJcbn1cclxuXHJcbm51bWJlckxpbmVDb21tb24ucmVnaXN0ZXIoICdOTENoZWNrYm94R3JvdXAnLCBOTENoZWNrYm94R3JvdXAgKTtcclxuZXhwb3J0IGRlZmF1bHQgTkxDaGVja2JveEdyb3VwOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxLQUFLLE1BQU0sbUNBQW1DO0FBQ3JELFNBQVNDLElBQUksUUFBUSxtQ0FBbUM7QUFDeEQsT0FBT0MsZ0JBQWdCLE1BQU0sMkJBQTJCO0FBQ3hELE9BQU9DLFlBQVksTUFBTSxvQkFBb0I7QUFFN0MsTUFBTUMsZUFBZSxTQUFTSCxJQUFJLENBQUM7RUFFakM7QUFDRjtBQUNBO0FBQ0E7RUFDRUksV0FBV0EsQ0FBRUMsVUFBVSxFQUFFQyxPQUFPLEVBQUc7SUFFakNDLE1BQU0sSUFBSUEsTUFBTSxDQUFFRCxPQUFPLEtBQUtFLFNBQVMsSUFBSUYsT0FBTyxDQUFDRyxRQUFRLEtBQUtELFNBQVMsRUFBRSxrQ0FBbUMsQ0FBQztJQUUvR0YsT0FBTyxHQUFHUCxLQUFLLENBQUU7TUFDZlUsUUFBUSxFQUFFSixVQUFVO01BQ3BCSyxPQUFPLEVBQUUsRUFBRTtNQUNYQyxLQUFLLEVBQUUsTUFBTTtNQUNiQyxJQUFJLEVBQUVWLFlBQVksQ0FBQ1csb0JBQW9CO01BQ3ZDQyxHQUFHLEVBQUVaLFlBQVksQ0FBQ2E7SUFDcEIsQ0FBQyxFQUFFVCxPQUFRLENBQUM7SUFFWixLQUFLLENBQUVBLE9BQVEsQ0FBQztFQUNsQjs7RUFFQTtBQUNGO0FBQ0E7QUFDQTtFQUNFVSxPQUFPQSxDQUFBLEVBQUc7SUFDUlQsTUFBTSxJQUFJQSxNQUFNLENBQUUsS0FBSyxFQUFFLDBDQUEyQyxDQUFDO0VBQ3ZFO0FBQ0Y7QUFFQU4sZ0JBQWdCLENBQUNnQixRQUFRLENBQUUsaUJBQWlCLEVBQUVkLGVBQWdCLENBQUM7QUFDL0QsZUFBZUEsZUFBZSJ9