// Copyright 2017-2022, University of Colorado Boulder

/**
 * Static factory for creating icons in Forces and Motion: Basics.
 *
 * @author John Blanco
 */

import Property from '../../../../axon/js/Property.js';
import Range from '../../../../dot/js/Range.js';
import Tandem from '../../../../tandem/js/Tandem.js';
import GaugeNode from '../../../../scenery-phet/js/GaugeNode.js';
import forcesAndMotionBasics from '../../forcesAndMotionBasics.js';
import ForcesAndMotionBasicsStrings from '../../ForcesAndMotionBasicsStrings.js';
import MotionConstants from '../../motion/MotionConstants.js';
const speedStringProperty = ForcesAndMotionBasicsStrings.speedStringProperty;

/**
 * Static object, not meant to be instantiated.
 */
const ForcesAndMotionBasicsIconFactory = {
  speedometerIcon(tandem) {
    // the 'speed' option requires the text and a speedometer icon
    const speedometerIconValueProperty = new Property(0);
    return new GaugeNode(speedometerIconValueProperty, speedStringProperty, new Range(0, MotionConstants.MAX_SPEED), {
      radius: 67,
      scale: 0.2,
      tandem: Tandem.OPT_OUT
    });
  }
};
forcesAndMotionBasics.register('ForcesAndMotionBasicsIconFactory', ForcesAndMotionBasicsIconFactory);
export default ForcesAndMotionBasicsIconFactory;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQcm9wZXJ0eSIsIlJhbmdlIiwiVGFuZGVtIiwiR2F1Z2VOb2RlIiwiZm9yY2VzQW5kTW90aW9uQmFzaWNzIiwiRm9yY2VzQW5kTW90aW9uQmFzaWNzU3RyaW5ncyIsIk1vdGlvbkNvbnN0YW50cyIsInNwZWVkU3RyaW5nUHJvcGVydHkiLCJGb3JjZXNBbmRNb3Rpb25CYXNpY3NJY29uRmFjdG9yeSIsInNwZWVkb21ldGVySWNvbiIsInRhbmRlbSIsInNwZWVkb21ldGVySWNvblZhbHVlUHJvcGVydHkiLCJNQVhfU1BFRUQiLCJyYWRpdXMiLCJzY2FsZSIsIk9QVF9PVVQiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIkZvcmNlc0FuZE1vdGlvbkJhc2ljc0ljb25GYWN0b3J5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE3LTIwMjIsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIFN0YXRpYyBmYWN0b3J5IGZvciBjcmVhdGluZyBpY29ucyBpbiBGb3JjZXMgYW5kIE1vdGlvbjogQmFzaWNzLlxyXG4gKlxyXG4gKiBAYXV0aG9yIEpvaG4gQmxhbmNvXHJcbiAqL1xyXG5cclxuaW1wb3J0IFByb3BlcnR5IGZyb20gJy4uLy4uLy4uLy4uL2F4b24vanMvUHJvcGVydHkuanMnO1xyXG5pbXBvcnQgUmFuZ2UgZnJvbSAnLi4vLi4vLi4vLi4vZG90L2pzL1JhbmdlLmpzJztcclxuaW1wb3J0IFRhbmRlbSBmcm9tICcuLi8uLi8uLi8uLi90YW5kZW0vanMvVGFuZGVtLmpzJztcclxuaW1wb3J0IEdhdWdlTm9kZSBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5LXBoZXQvanMvR2F1Z2VOb2RlLmpzJztcclxuaW1wb3J0IGZvcmNlc0FuZE1vdGlvbkJhc2ljcyBmcm9tICcuLi8uLi9mb3JjZXNBbmRNb3Rpb25CYXNpY3MuanMnO1xyXG5pbXBvcnQgRm9yY2VzQW5kTW90aW9uQmFzaWNzU3RyaW5ncyBmcm9tICcuLi8uLi9Gb3JjZXNBbmRNb3Rpb25CYXNpY3NTdHJpbmdzLmpzJztcclxuaW1wb3J0IE1vdGlvbkNvbnN0YW50cyBmcm9tICcuLi8uLi9tb3Rpb24vTW90aW9uQ29uc3RhbnRzLmpzJztcclxuXHJcbmNvbnN0IHNwZWVkU3RyaW5nUHJvcGVydHkgPSBGb3JjZXNBbmRNb3Rpb25CYXNpY3NTdHJpbmdzLnNwZWVkU3RyaW5nUHJvcGVydHk7XHJcblxyXG4vKipcclxuICogU3RhdGljIG9iamVjdCwgbm90IG1lYW50IHRvIGJlIGluc3RhbnRpYXRlZC5cclxuICovXHJcbmNvbnN0IEZvcmNlc0FuZE1vdGlvbkJhc2ljc0ljb25GYWN0b3J5ID0ge1xyXG4gIHNwZWVkb21ldGVySWNvbiggdGFuZGVtICkge1xyXG5cclxuICAgIC8vIHRoZSAnc3BlZWQnIG9wdGlvbiByZXF1aXJlcyB0aGUgdGV4dCBhbmQgYSBzcGVlZG9tZXRlciBpY29uXHJcbiAgICBjb25zdCBzcGVlZG9tZXRlckljb25WYWx1ZVByb3BlcnR5ID0gbmV3IFByb3BlcnR5KCAwICk7XHJcbiAgICByZXR1cm4gbmV3IEdhdWdlTm9kZSggc3BlZWRvbWV0ZXJJY29uVmFsdWVQcm9wZXJ0eSwgc3BlZWRTdHJpbmdQcm9wZXJ0eSwgbmV3IFJhbmdlKCAwLCBNb3Rpb25Db25zdGFudHMuTUFYX1NQRUVEICksXHJcbiAgICAgIHsgcmFkaXVzOiA2Nywgc2NhbGU6IDAuMiwgdGFuZGVtOiBUYW5kZW0uT1BUX09VVCB9ICk7XHJcbiAgfVxyXG59O1xyXG5cclxuZm9yY2VzQW5kTW90aW9uQmFzaWNzLnJlZ2lzdGVyKCAnRm9yY2VzQW5kTW90aW9uQmFzaWNzSWNvbkZhY3RvcnknLCBGb3JjZXNBbmRNb3Rpb25CYXNpY3NJY29uRmFjdG9yeSApO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgRm9yY2VzQW5kTW90aW9uQmFzaWNzSWNvbkZhY3Rvcnk7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLFFBQVEsTUFBTSxpQ0FBaUM7QUFDdEQsT0FBT0MsS0FBSyxNQUFNLDZCQUE2QjtBQUMvQyxPQUFPQyxNQUFNLE1BQU0saUNBQWlDO0FBQ3BELE9BQU9DLFNBQVMsTUFBTSwwQ0FBMEM7QUFDaEUsT0FBT0MscUJBQXFCLE1BQU0sZ0NBQWdDO0FBQ2xFLE9BQU9DLDRCQUE0QixNQUFNLHVDQUF1QztBQUNoRixPQUFPQyxlQUFlLE1BQU0saUNBQWlDO0FBRTdELE1BQU1DLG1CQUFtQixHQUFHRiw0QkFBNEIsQ0FBQ0UsbUJBQW1COztBQUU1RTtBQUNBO0FBQ0E7QUFDQSxNQUFNQyxnQ0FBZ0MsR0FBRztFQUN2Q0MsZUFBZUEsQ0FBRUMsTUFBTSxFQUFHO0lBRXhCO0lBQ0EsTUFBTUMsNEJBQTRCLEdBQUcsSUFBSVgsUUFBUSxDQUFFLENBQUUsQ0FBQztJQUN0RCxPQUFPLElBQUlHLFNBQVMsQ0FBRVEsNEJBQTRCLEVBQUVKLG1CQUFtQixFQUFFLElBQUlOLEtBQUssQ0FBRSxDQUFDLEVBQUVLLGVBQWUsQ0FBQ00sU0FBVSxDQUFDLEVBQ2hIO01BQUVDLE1BQU0sRUFBRSxFQUFFO01BQUVDLEtBQUssRUFBRSxHQUFHO01BQUVKLE1BQU0sRUFBRVIsTUFBTSxDQUFDYTtJQUFRLENBQUUsQ0FBQztFQUN4RDtBQUNGLENBQUM7QUFFRFgscUJBQXFCLENBQUNZLFFBQVEsQ0FBRSxrQ0FBa0MsRUFBRVIsZ0NBQWlDLENBQUM7QUFFdEcsZUFBZUEsZ0NBQWdDIn0=