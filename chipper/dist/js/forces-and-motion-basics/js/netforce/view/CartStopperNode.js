// Copyright 2017-2022, University of Colorado Boulder

/**
 * Constructs a shape that looks like trapezoid.  This shape is to be placed in the screen view at a place that
 * makes it look like this is the item that is stopping motion when the game of tug of war is over.
 *
 * @author Jesse Greenberg
 */

import { Shape } from '../../../../kite/js/imports.js';
import merge from '../../../../phet-core/js/merge.js';
import { Path } from '../../../../scenery/js/imports.js';
import forcesAndMotionBasics from '../../forcesAndMotionBasics.js';

// constants
const DIRECTIONS = ['left', 'right'];
class CartStopperNode extends Path {
  /**
   */
  constructor(topWidth, bottomWidth, height, tandem, options) {
    options = merge({
      direction: 'left',
      tandem: tandem,
      fill: 'grey'
    }, options);
    const stopperShape = new Shape().moveTo(0, 0).lineTo(bottomWidth, 0).lineTo(topWidth, -height).lineTo(0, -height);
    super(stopperShape);

    // flip around the y axis
    assert && assert(_.includes(DIRECTIONS, options.direction), 'stopper can only have directon "left" or "right"');
    if (options.direction === 'right') {
      this.scale(-1, 1);
    }

    // mutate after scaling so that positioning is correct
    this.mutate(options);
  }
}
forcesAndMotionBasics.register('CartStopperNode', CartStopperNode);
export default CartStopperNode;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTaGFwZSIsIm1lcmdlIiwiUGF0aCIsImZvcmNlc0FuZE1vdGlvbkJhc2ljcyIsIkRJUkVDVElPTlMiLCJDYXJ0U3RvcHBlck5vZGUiLCJjb25zdHJ1Y3RvciIsInRvcFdpZHRoIiwiYm90dG9tV2lkdGgiLCJoZWlnaHQiLCJ0YW5kZW0iLCJvcHRpb25zIiwiZGlyZWN0aW9uIiwiZmlsbCIsInN0b3BwZXJTaGFwZSIsIm1vdmVUbyIsImxpbmVUbyIsImFzc2VydCIsIl8iLCJpbmNsdWRlcyIsInNjYWxlIiwibXV0YXRlIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJDYXJ0U3RvcHBlck5vZGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTctMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogQ29uc3RydWN0cyBhIHNoYXBlIHRoYXQgbG9va3MgbGlrZSB0cmFwZXpvaWQuICBUaGlzIHNoYXBlIGlzIHRvIGJlIHBsYWNlZCBpbiB0aGUgc2NyZWVuIHZpZXcgYXQgYSBwbGFjZSB0aGF0XHJcbiAqIG1ha2VzIGl0IGxvb2sgbGlrZSB0aGlzIGlzIHRoZSBpdGVtIHRoYXQgaXMgc3RvcHBpbmcgbW90aW9uIHdoZW4gdGhlIGdhbWUgb2YgdHVnIG9mIHdhciBpcyBvdmVyLlxyXG4gKlxyXG4gKiBAYXV0aG9yIEplc3NlIEdyZWVuYmVyZ1xyXG4gKi9cclxuXHJcbmltcG9ydCB7IFNoYXBlIH0gZnJvbSAnLi4vLi4vLi4vLi4va2l0ZS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IG1lcmdlIGZyb20gJy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy9tZXJnZS5qcyc7XHJcbmltcG9ydCB7IFBhdGggfSBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgZm9yY2VzQW5kTW90aW9uQmFzaWNzIGZyb20gJy4uLy4uL2ZvcmNlc0FuZE1vdGlvbkJhc2ljcy5qcyc7XHJcblxyXG4vLyBjb25zdGFudHNcclxuY29uc3QgRElSRUNUSU9OUyA9IFsgJ2xlZnQnLCAncmlnaHQnIF07XHJcblxyXG5jbGFzcyBDYXJ0U3RvcHBlck5vZGUgZXh0ZW5kcyBQYXRoIHtcclxuICAvKipcclxuICAgKi9cclxuICBjb25zdHJ1Y3RvciggdG9wV2lkdGgsIGJvdHRvbVdpZHRoLCBoZWlnaHQsIHRhbmRlbSwgb3B0aW9ucyApIHtcclxuICAgIG9wdGlvbnMgPSBtZXJnZSgge1xyXG4gICAgICBkaXJlY3Rpb246ICdsZWZ0JyxcclxuICAgICAgdGFuZGVtOiB0YW5kZW0sXHJcbiAgICAgIGZpbGw6ICdncmV5J1xyXG4gICAgfSwgb3B0aW9ucyApO1xyXG5cclxuICAgIGNvbnN0IHN0b3BwZXJTaGFwZSA9IG5ldyBTaGFwZSgpLm1vdmVUbyggMCwgMCApLmxpbmVUbyggYm90dG9tV2lkdGgsIDAgKS5saW5lVG8oIHRvcFdpZHRoLCAtaGVpZ2h0ICkubGluZVRvKCAwLCAtaGVpZ2h0ICk7XHJcbiAgICBzdXBlciggc3RvcHBlclNoYXBlICk7XHJcblxyXG4gICAgLy8gZmxpcCBhcm91bmQgdGhlIHkgYXhpc1xyXG4gICAgYXNzZXJ0ICYmIGFzc2VydCggXy5pbmNsdWRlcyggRElSRUNUSU9OUywgb3B0aW9ucy5kaXJlY3Rpb24gKSwgJ3N0b3BwZXIgY2FuIG9ubHkgaGF2ZSBkaXJlY3RvbiBcImxlZnRcIiBvciBcInJpZ2h0XCInICk7XHJcbiAgICBpZiAoIG9wdGlvbnMuZGlyZWN0aW9uID09PSAncmlnaHQnICkge1xyXG4gICAgICB0aGlzLnNjYWxlKCAtMSwgMSApO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIG11dGF0ZSBhZnRlciBzY2FsaW5nIHNvIHRoYXQgcG9zaXRpb25pbmcgaXMgY29ycmVjdFxyXG4gICAgdGhpcy5tdXRhdGUoIG9wdGlvbnMgKTtcclxuICB9XHJcbn1cclxuXHJcbmZvcmNlc0FuZE1vdGlvbkJhc2ljcy5yZWdpc3RlciggJ0NhcnRTdG9wcGVyTm9kZScsIENhcnRTdG9wcGVyTm9kZSApO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgQ2FydFN0b3BwZXJOb2RlOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFNBQVNBLEtBQUssUUFBUSxnQ0FBZ0M7QUFDdEQsT0FBT0MsS0FBSyxNQUFNLG1DQUFtQztBQUNyRCxTQUFTQyxJQUFJLFFBQVEsbUNBQW1DO0FBQ3hELE9BQU9DLHFCQUFxQixNQUFNLGdDQUFnQzs7QUFFbEU7QUFDQSxNQUFNQyxVQUFVLEdBQUcsQ0FBRSxNQUFNLEVBQUUsT0FBTyxDQUFFO0FBRXRDLE1BQU1DLGVBQWUsU0FBU0gsSUFBSSxDQUFDO0VBQ2pDO0FBQ0Y7RUFDRUksV0FBV0EsQ0FBRUMsUUFBUSxFQUFFQyxXQUFXLEVBQUVDLE1BQU0sRUFBRUMsTUFBTSxFQUFFQyxPQUFPLEVBQUc7SUFDNURBLE9BQU8sR0FBR1YsS0FBSyxDQUFFO01BQ2ZXLFNBQVMsRUFBRSxNQUFNO01BQ2pCRixNQUFNLEVBQUVBLE1BQU07TUFDZEcsSUFBSSxFQUFFO0lBQ1IsQ0FBQyxFQUFFRixPQUFRLENBQUM7SUFFWixNQUFNRyxZQUFZLEdBQUcsSUFBSWQsS0FBSyxDQUFDLENBQUMsQ0FBQ2UsTUFBTSxDQUFFLENBQUMsRUFBRSxDQUFFLENBQUMsQ0FBQ0MsTUFBTSxDQUFFUixXQUFXLEVBQUUsQ0FBRSxDQUFDLENBQUNRLE1BQU0sQ0FBRVQsUUFBUSxFQUFFLENBQUNFLE1BQU8sQ0FBQyxDQUFDTyxNQUFNLENBQUUsQ0FBQyxFQUFFLENBQUNQLE1BQU8sQ0FBQztJQUN6SCxLQUFLLENBQUVLLFlBQWEsQ0FBQzs7SUFFckI7SUFDQUcsTUFBTSxJQUFJQSxNQUFNLENBQUVDLENBQUMsQ0FBQ0MsUUFBUSxDQUFFZixVQUFVLEVBQUVPLE9BQU8sQ0FBQ0MsU0FBVSxDQUFDLEVBQUUsa0RBQW1ELENBQUM7SUFDbkgsSUFBS0QsT0FBTyxDQUFDQyxTQUFTLEtBQUssT0FBTyxFQUFHO01BQ25DLElBQUksQ0FBQ1EsS0FBSyxDQUFFLENBQUMsQ0FBQyxFQUFFLENBQUUsQ0FBQztJQUNyQjs7SUFFQTtJQUNBLElBQUksQ0FBQ0MsTUFBTSxDQUFFVixPQUFRLENBQUM7RUFDeEI7QUFDRjtBQUVBUixxQkFBcUIsQ0FBQ21CLFFBQVEsQ0FBRSxpQkFBaUIsRUFBRWpCLGVBQWdCLENBQUM7QUFFcEUsZUFBZUEsZUFBZSJ9