// Copyright 2020-2022, University of Colorado Boulder

/**
 * HoldingBagNode is the view representation of a HoldingBag, which is the place where items with value are placed so
 * that they count towards the total value tracked by the model.
 *
 * @author John Blanco (PhET Interactive Simulations)
 */

import PhetFont from '../../../../scenery-phet/js/PhetFont.js';
import { Color, Image, Node, Rectangle, Text } from '../../../../scenery/js/imports.js';
import assetsBag_png from '../../../images/assetsBag_png.js';
import debtsBag_png from '../../../images/debtsBag_png.js';
import numberLineOperations from '../../numberLineOperations.js';
import HoldingBag from '../model/HoldingBag.js';

// constants
const TAG_RECTANGLE_COMMON_OPTIONS = {
  fill: Color.WHITE,
  stroke: Color.BLACK,
  cornerRadius: 5
};

// value for sizing the tag and positioning the text within, empirically determined to look good with various strings
const TAG_Y_MARGIN = 8;
const TAG_X_MARGIN = 12;
const TAG_ATTACHMENT_POINT_OFFSET = 9;
class HoldingBagNode extends Node {
  /**
   * @param {HoldingBag} holdingBag
   * @param {string} labelText
   */
  constructor(holdingBag, labelText) {
    // Get the image that is associated with this bag's supported values.
    const image = holdingBag.itemAcceptanceTest === HoldingBag.ACCEPT_ONLY_NEGATIVE_VALUES ? debtsBag_png : assetsBag_png;
    const imageNode = new Image(image, {
      minWidth: holdingBag.radius * 2,
      maxWidth: holdingBag.radius * 2,
      centerX: holdingBag.position.x,
      // Because the bag images have a sort of "tied off" area on top, position the bag based on the bottom.
      bottom: holdingBag.position.y + holdingBag.radius
    });

    // label text that will go on the tag
    const labelTextNode = new Text(labelText, {
      font: new PhetFont(20),
      maxWidth: 95
    });

    // The tag is a rectangle with a white background and a textual label on it.  It is intended to like the sort of tag
    // that one would attach to a gift.  Because the artwork has a ribbon that ends where the tags are supposed to be
    // placed, some of the positioning and layout below are fairly "tweaky" and will need to be adjusted if the artwork
    // changes.
    const tag = new Rectangle(0, 0, labelTextNode.width + 2 * TAG_X_MARGIN + TAG_ATTACHMENT_POINT_OFFSET, labelTextNode.height + 2 * TAG_Y_MARGIN, TAG_RECTANGLE_COMMON_OPTIONS);

    // Position the text and the label based on whether the tag's ribbon attaches on the left or right side.
    labelTextNode.centerY = tag.height / 2;
    if (image === debtsBag_png) {
      labelTextNode.left = TAG_X_MARGIN;
      tag.right = imageNode.centerX - 19;
      tag.centerY = imageNode.top + 4;
    } else {
      labelTextNode.right = tag.width - TAG_X_MARGIN;
      tag.left = imageNode.centerX + 20;
      tag.centerY = imageNode.top + 4;
    }
    tag.addChild(labelTextNode);
    super({
      children: [tag, imageNode]
    });
  }
}
numberLineOperations.register('HoldingBagNode', HoldingBagNode);
export default HoldingBagNode;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQaGV0Rm9udCIsIkNvbG9yIiwiSW1hZ2UiLCJOb2RlIiwiUmVjdGFuZ2xlIiwiVGV4dCIsImFzc2V0c0JhZ19wbmciLCJkZWJ0c0JhZ19wbmciLCJudW1iZXJMaW5lT3BlcmF0aW9ucyIsIkhvbGRpbmdCYWciLCJUQUdfUkVDVEFOR0xFX0NPTU1PTl9PUFRJT05TIiwiZmlsbCIsIldISVRFIiwic3Ryb2tlIiwiQkxBQ0siLCJjb3JuZXJSYWRpdXMiLCJUQUdfWV9NQVJHSU4iLCJUQUdfWF9NQVJHSU4iLCJUQUdfQVRUQUNITUVOVF9QT0lOVF9PRkZTRVQiLCJIb2xkaW5nQmFnTm9kZSIsImNvbnN0cnVjdG9yIiwiaG9sZGluZ0JhZyIsImxhYmVsVGV4dCIsImltYWdlIiwiaXRlbUFjY2VwdGFuY2VUZXN0IiwiQUNDRVBUX09OTFlfTkVHQVRJVkVfVkFMVUVTIiwiaW1hZ2VOb2RlIiwibWluV2lkdGgiLCJyYWRpdXMiLCJtYXhXaWR0aCIsImNlbnRlclgiLCJwb3NpdGlvbiIsIngiLCJib3R0b20iLCJ5IiwibGFiZWxUZXh0Tm9kZSIsImZvbnQiLCJ0YWciLCJ3aWR0aCIsImhlaWdodCIsImNlbnRlclkiLCJsZWZ0IiwicmlnaHQiLCJ0b3AiLCJhZGRDaGlsZCIsImNoaWxkcmVuIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJIb2xkaW5nQmFnTm9kZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMC0yMDIyLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBIb2xkaW5nQmFnTm9kZSBpcyB0aGUgdmlldyByZXByZXNlbnRhdGlvbiBvZiBhIEhvbGRpbmdCYWcsIHdoaWNoIGlzIHRoZSBwbGFjZSB3aGVyZSBpdGVtcyB3aXRoIHZhbHVlIGFyZSBwbGFjZWQgc29cclxuICogdGhhdCB0aGV5IGNvdW50IHRvd2FyZHMgdGhlIHRvdGFsIHZhbHVlIHRyYWNrZWQgYnkgdGhlIG1vZGVsLlxyXG4gKlxyXG4gKiBAYXV0aG9yIEpvaG4gQmxhbmNvIChQaEVUIEludGVyYWN0aXZlIFNpbXVsYXRpb25zKVxyXG4gKi9cclxuXHJcbmltcG9ydCBQaGV0Rm9udCBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5LXBoZXQvanMvUGhldEZvbnQuanMnO1xyXG5pbXBvcnQgeyBDb2xvciwgSW1hZ2UsIE5vZGUsIFJlY3RhbmdsZSwgVGV4dCB9IGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XHJcbmltcG9ydCBhc3NldHNCYWdfcG5nIGZyb20gJy4uLy4uLy4uL2ltYWdlcy9hc3NldHNCYWdfcG5nLmpzJztcclxuaW1wb3J0IGRlYnRzQmFnX3BuZyBmcm9tICcuLi8uLi8uLi9pbWFnZXMvZGVidHNCYWdfcG5nLmpzJztcclxuaW1wb3J0IG51bWJlckxpbmVPcGVyYXRpb25zIGZyb20gJy4uLy4uL251bWJlckxpbmVPcGVyYXRpb25zLmpzJztcclxuaW1wb3J0IEhvbGRpbmdCYWcgZnJvbSAnLi4vbW9kZWwvSG9sZGluZ0JhZy5qcyc7XHJcblxyXG4vLyBjb25zdGFudHNcclxuY29uc3QgVEFHX1JFQ1RBTkdMRV9DT01NT05fT1BUSU9OUyA9IHtcclxuICBmaWxsOiBDb2xvci5XSElURSxcclxuICBzdHJva2U6IENvbG9yLkJMQUNLLFxyXG4gIGNvcm5lclJhZGl1czogNVxyXG59O1xyXG5cclxuLy8gdmFsdWUgZm9yIHNpemluZyB0aGUgdGFnIGFuZCBwb3NpdGlvbmluZyB0aGUgdGV4dCB3aXRoaW4sIGVtcGlyaWNhbGx5IGRldGVybWluZWQgdG8gbG9vayBnb29kIHdpdGggdmFyaW91cyBzdHJpbmdzXHJcbmNvbnN0IFRBR19ZX01BUkdJTiA9IDg7XHJcbmNvbnN0IFRBR19YX01BUkdJTiA9IDEyO1xyXG5jb25zdCBUQUdfQVRUQUNITUVOVF9QT0lOVF9PRkZTRVQgPSA5O1xyXG5cclxuY2xhc3MgSG9sZGluZ0JhZ05vZGUgZXh0ZW5kcyBOb2RlIHtcclxuXHJcbiAgLyoqXHJcbiAgICogQHBhcmFtIHtIb2xkaW5nQmFnfSBob2xkaW5nQmFnXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IGxhYmVsVGV4dFxyXG4gICAqL1xyXG4gIGNvbnN0cnVjdG9yKCBob2xkaW5nQmFnLCBsYWJlbFRleHQgKSB7XHJcblxyXG4gICAgLy8gR2V0IHRoZSBpbWFnZSB0aGF0IGlzIGFzc29jaWF0ZWQgd2l0aCB0aGlzIGJhZydzIHN1cHBvcnRlZCB2YWx1ZXMuXHJcbiAgICBjb25zdCBpbWFnZSA9IGhvbGRpbmdCYWcuaXRlbUFjY2VwdGFuY2VUZXN0ID09PSBIb2xkaW5nQmFnLkFDQ0VQVF9PTkxZX05FR0FUSVZFX1ZBTFVFUyA/XHJcbiAgICAgICAgICAgICAgICAgIGRlYnRzQmFnX3BuZyA6XHJcbiAgICAgICAgICAgICAgICAgIGFzc2V0c0JhZ19wbmc7XHJcblxyXG4gICAgY29uc3QgaW1hZ2VOb2RlID0gbmV3IEltYWdlKCBpbWFnZSwge1xyXG4gICAgICBtaW5XaWR0aDogaG9sZGluZ0JhZy5yYWRpdXMgKiAyLFxyXG4gICAgICBtYXhXaWR0aDogaG9sZGluZ0JhZy5yYWRpdXMgKiAyLFxyXG4gICAgICBjZW50ZXJYOiBob2xkaW5nQmFnLnBvc2l0aW9uLngsXHJcblxyXG4gICAgICAvLyBCZWNhdXNlIHRoZSBiYWcgaW1hZ2VzIGhhdmUgYSBzb3J0IG9mIFwidGllZCBvZmZcIiBhcmVhIG9uIHRvcCwgcG9zaXRpb24gdGhlIGJhZyBiYXNlZCBvbiB0aGUgYm90dG9tLlxyXG4gICAgICBib3R0b206IGhvbGRpbmdCYWcucG9zaXRpb24ueSArIGhvbGRpbmdCYWcucmFkaXVzXHJcbiAgICB9ICk7XHJcblxyXG4gICAgLy8gbGFiZWwgdGV4dCB0aGF0IHdpbGwgZ28gb24gdGhlIHRhZ1xyXG4gICAgY29uc3QgbGFiZWxUZXh0Tm9kZSA9IG5ldyBUZXh0KCBsYWJlbFRleHQsIHtcclxuICAgICAgZm9udDogbmV3IFBoZXRGb250KCAyMCApLFxyXG4gICAgICBtYXhXaWR0aDogOTVcclxuICAgIH0gKTtcclxuXHJcbiAgICAvLyBUaGUgdGFnIGlzIGEgcmVjdGFuZ2xlIHdpdGggYSB3aGl0ZSBiYWNrZ3JvdW5kIGFuZCBhIHRleHR1YWwgbGFiZWwgb24gaXQuICBJdCBpcyBpbnRlbmRlZCB0byBsaWtlIHRoZSBzb3J0IG9mIHRhZ1xyXG4gICAgLy8gdGhhdCBvbmUgd291bGQgYXR0YWNoIHRvIGEgZ2lmdC4gIEJlY2F1c2UgdGhlIGFydHdvcmsgaGFzIGEgcmliYm9uIHRoYXQgZW5kcyB3aGVyZSB0aGUgdGFncyBhcmUgc3VwcG9zZWQgdG8gYmVcclxuICAgIC8vIHBsYWNlZCwgc29tZSBvZiB0aGUgcG9zaXRpb25pbmcgYW5kIGxheW91dCBiZWxvdyBhcmUgZmFpcmx5IFwidHdlYWt5XCIgYW5kIHdpbGwgbmVlZCB0byBiZSBhZGp1c3RlZCBpZiB0aGUgYXJ0d29ya1xyXG4gICAgLy8gY2hhbmdlcy5cclxuICAgIGNvbnN0IHRhZyA9IG5ldyBSZWN0YW5nbGUoXHJcbiAgICAgIDAsXHJcbiAgICAgIDAsXHJcbiAgICAgIGxhYmVsVGV4dE5vZGUud2lkdGggKyAyICogVEFHX1hfTUFSR0lOICsgVEFHX0FUVEFDSE1FTlRfUE9JTlRfT0ZGU0VULFxyXG4gICAgICBsYWJlbFRleHROb2RlLmhlaWdodCArIDIgKiBUQUdfWV9NQVJHSU4sXHJcbiAgICAgIFRBR19SRUNUQU5HTEVfQ09NTU9OX09QVElPTlNcclxuICAgICk7XHJcblxyXG4gICAgLy8gUG9zaXRpb24gdGhlIHRleHQgYW5kIHRoZSBsYWJlbCBiYXNlZCBvbiB3aGV0aGVyIHRoZSB0YWcncyByaWJib24gYXR0YWNoZXMgb24gdGhlIGxlZnQgb3IgcmlnaHQgc2lkZS5cclxuICAgIGxhYmVsVGV4dE5vZGUuY2VudGVyWSA9IHRhZy5oZWlnaHQgLyAyO1xyXG4gICAgaWYgKCBpbWFnZSA9PT0gZGVidHNCYWdfcG5nICkge1xyXG4gICAgICBsYWJlbFRleHROb2RlLmxlZnQgPSBUQUdfWF9NQVJHSU47XHJcbiAgICAgIHRhZy5yaWdodCA9IGltYWdlTm9kZS5jZW50ZXJYIC0gMTk7XHJcbiAgICAgIHRhZy5jZW50ZXJZID0gaW1hZ2VOb2RlLnRvcCArIDQ7XHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgbGFiZWxUZXh0Tm9kZS5yaWdodCA9IHRhZy53aWR0aCAtIFRBR19YX01BUkdJTjtcclxuICAgICAgdGFnLmxlZnQgPSBpbWFnZU5vZGUuY2VudGVyWCArIDIwO1xyXG4gICAgICB0YWcuY2VudGVyWSA9IGltYWdlTm9kZS50b3AgKyA0O1xyXG4gICAgfVxyXG5cclxuICAgIHRhZy5hZGRDaGlsZCggbGFiZWxUZXh0Tm9kZSApO1xyXG5cclxuICAgIHN1cGVyKCB7IGNoaWxkcmVuOiBbIHRhZywgaW1hZ2VOb2RlIF0gfSApO1xyXG4gIH1cclxufVxyXG5cclxubnVtYmVyTGluZU9wZXJhdGlvbnMucmVnaXN0ZXIoICdIb2xkaW5nQmFnTm9kZScsIEhvbGRpbmdCYWdOb2RlICk7XHJcbmV4cG9ydCBkZWZhdWx0IEhvbGRpbmdCYWdOb2RlOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLFFBQVEsTUFBTSx5Q0FBeUM7QUFDOUQsU0FBU0MsS0FBSyxFQUFFQyxLQUFLLEVBQUVDLElBQUksRUFBRUMsU0FBUyxFQUFFQyxJQUFJLFFBQVEsbUNBQW1DO0FBQ3ZGLE9BQU9DLGFBQWEsTUFBTSxrQ0FBa0M7QUFDNUQsT0FBT0MsWUFBWSxNQUFNLGlDQUFpQztBQUMxRCxPQUFPQyxvQkFBb0IsTUFBTSwrQkFBK0I7QUFDaEUsT0FBT0MsVUFBVSxNQUFNLHdCQUF3Qjs7QUFFL0M7QUFDQSxNQUFNQyw0QkFBNEIsR0FBRztFQUNuQ0MsSUFBSSxFQUFFVixLQUFLLENBQUNXLEtBQUs7RUFDakJDLE1BQU0sRUFBRVosS0FBSyxDQUFDYSxLQUFLO0VBQ25CQyxZQUFZLEVBQUU7QUFDaEIsQ0FBQzs7QUFFRDtBQUNBLE1BQU1DLFlBQVksR0FBRyxDQUFDO0FBQ3RCLE1BQU1DLFlBQVksR0FBRyxFQUFFO0FBQ3ZCLE1BQU1DLDJCQUEyQixHQUFHLENBQUM7QUFFckMsTUFBTUMsY0FBYyxTQUFTaEIsSUFBSSxDQUFDO0VBRWhDO0FBQ0Y7QUFDQTtBQUNBO0VBQ0VpQixXQUFXQSxDQUFFQyxVQUFVLEVBQUVDLFNBQVMsRUFBRztJQUVuQztJQUNBLE1BQU1DLEtBQUssR0FBR0YsVUFBVSxDQUFDRyxrQkFBa0IsS0FBS2YsVUFBVSxDQUFDZ0IsMkJBQTJCLEdBQ3hFbEIsWUFBWSxHQUNaRCxhQUFhO0lBRTNCLE1BQU1vQixTQUFTLEdBQUcsSUFBSXhCLEtBQUssQ0FBRXFCLEtBQUssRUFBRTtNQUNsQ0ksUUFBUSxFQUFFTixVQUFVLENBQUNPLE1BQU0sR0FBRyxDQUFDO01BQy9CQyxRQUFRLEVBQUVSLFVBQVUsQ0FBQ08sTUFBTSxHQUFHLENBQUM7TUFDL0JFLE9BQU8sRUFBRVQsVUFBVSxDQUFDVSxRQUFRLENBQUNDLENBQUM7TUFFOUI7TUFDQUMsTUFBTSxFQUFFWixVQUFVLENBQUNVLFFBQVEsQ0FBQ0csQ0FBQyxHQUFHYixVQUFVLENBQUNPO0lBQzdDLENBQUUsQ0FBQzs7SUFFSDtJQUNBLE1BQU1PLGFBQWEsR0FBRyxJQUFJOUIsSUFBSSxDQUFFaUIsU0FBUyxFQUFFO01BQ3pDYyxJQUFJLEVBQUUsSUFBSXBDLFFBQVEsQ0FBRSxFQUFHLENBQUM7TUFDeEI2QixRQUFRLEVBQUU7SUFDWixDQUFFLENBQUM7O0lBRUg7SUFDQTtJQUNBO0lBQ0E7SUFDQSxNQUFNUSxHQUFHLEdBQUcsSUFBSWpDLFNBQVMsQ0FDdkIsQ0FBQyxFQUNELENBQUMsRUFDRCtCLGFBQWEsQ0FBQ0csS0FBSyxHQUFHLENBQUMsR0FBR3JCLFlBQVksR0FBR0MsMkJBQTJCLEVBQ3BFaUIsYUFBYSxDQUFDSSxNQUFNLEdBQUcsQ0FBQyxHQUFHdkIsWUFBWSxFQUN2Q04sNEJBQ0YsQ0FBQzs7SUFFRDtJQUNBeUIsYUFBYSxDQUFDSyxPQUFPLEdBQUdILEdBQUcsQ0FBQ0UsTUFBTSxHQUFHLENBQUM7SUFDdEMsSUFBS2hCLEtBQUssS0FBS2hCLFlBQVksRUFBRztNQUM1QjRCLGFBQWEsQ0FBQ00sSUFBSSxHQUFHeEIsWUFBWTtNQUNqQ29CLEdBQUcsQ0FBQ0ssS0FBSyxHQUFHaEIsU0FBUyxDQUFDSSxPQUFPLEdBQUcsRUFBRTtNQUNsQ08sR0FBRyxDQUFDRyxPQUFPLEdBQUdkLFNBQVMsQ0FBQ2lCLEdBQUcsR0FBRyxDQUFDO0lBQ2pDLENBQUMsTUFDSTtNQUNIUixhQUFhLENBQUNPLEtBQUssR0FBR0wsR0FBRyxDQUFDQyxLQUFLLEdBQUdyQixZQUFZO01BQzlDb0IsR0FBRyxDQUFDSSxJQUFJLEdBQUdmLFNBQVMsQ0FBQ0ksT0FBTyxHQUFHLEVBQUU7TUFDakNPLEdBQUcsQ0FBQ0csT0FBTyxHQUFHZCxTQUFTLENBQUNpQixHQUFHLEdBQUcsQ0FBQztJQUNqQztJQUVBTixHQUFHLENBQUNPLFFBQVEsQ0FBRVQsYUFBYyxDQUFDO0lBRTdCLEtBQUssQ0FBRTtNQUFFVSxRQUFRLEVBQUUsQ0FBRVIsR0FBRyxFQUFFWCxTQUFTO0lBQUcsQ0FBRSxDQUFDO0VBQzNDO0FBQ0Y7QUFFQWxCLG9CQUFvQixDQUFDc0MsUUFBUSxDQUFFLGdCQUFnQixFQUFFM0IsY0FBZSxDQUFDO0FBQ2pFLGVBQWVBLGNBQWMifQ==