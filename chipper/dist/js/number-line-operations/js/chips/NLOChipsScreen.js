// Copyright 2020-2022, University of Colorado Boulder

/**
 * @author John Blanco (PhET Interactive Simulations)
 */

import Property from '../../../axon/js/Property.js';
import Screen from '../../../joist/js/Screen.js';
import ScreenIcon from '../../../joist/js/ScreenIcon.js';
import { Image } from '../../../scenery/js/imports.js';
import chipsHomeScreenIcon_png from '../../images/chipsHomeScreenIcon_png.js';
import numberLineOperations from '../numberLineOperations.js';
import NumberLineOperationsStrings from '../NumberLineOperationsStrings.js';
import NLOChipsModel from './model/NLOChipsModel.js';
import NLOChipsScreenView from './view/NLOChipsScreenView.js';
class NLOChipsScreen extends Screen {
  /**
   * @param {Tandem} tandem
   */
  constructor(tandem) {
    const options = {
      name: NumberLineOperationsStrings.screen.chipsStringProperty,
      backgroundColorProperty: new Property('#f8f6fe'),
      homeScreenIcon: new ScreenIcon(new Image(chipsHomeScreenIcon_png), {
        maxIconWidthProportion: 1,
        maxIconHeightProportion: 1
      }),
      tandem: tandem
    };
    super(() => new NLOChipsModel(tandem.createTandem('model')), model => new NLOChipsScreenView(model, tandem.createTandem('view')), options);
  }
}
numberLineOperations.register('NLOChipsScreen', NLOChipsScreen);
export default NLOChipsScreen;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQcm9wZXJ0eSIsIlNjcmVlbiIsIlNjcmVlbkljb24iLCJJbWFnZSIsImNoaXBzSG9tZVNjcmVlbkljb25fcG5nIiwibnVtYmVyTGluZU9wZXJhdGlvbnMiLCJOdW1iZXJMaW5lT3BlcmF0aW9uc1N0cmluZ3MiLCJOTE9DaGlwc01vZGVsIiwiTkxPQ2hpcHNTY3JlZW5WaWV3IiwiTkxPQ2hpcHNTY3JlZW4iLCJjb25zdHJ1Y3RvciIsInRhbmRlbSIsIm9wdGlvbnMiLCJuYW1lIiwic2NyZWVuIiwiY2hpcHNTdHJpbmdQcm9wZXJ0eSIsImJhY2tncm91bmRDb2xvclByb3BlcnR5IiwiaG9tZVNjcmVlbkljb24iLCJtYXhJY29uV2lkdGhQcm9wb3J0aW9uIiwibWF4SWNvbkhlaWdodFByb3BvcnRpb24iLCJjcmVhdGVUYW5kZW0iLCJtb2RlbCIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiTkxPQ2hpcHNTY3JlZW4uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjAtMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogQGF1dGhvciBKb2huIEJsYW5jbyAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcclxuICovXHJcblxyXG5pbXBvcnQgUHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vYXhvbi9qcy9Qcm9wZXJ0eS5qcyc7XHJcbmltcG9ydCBTY3JlZW4gZnJvbSAnLi4vLi4vLi4vam9pc3QvanMvU2NyZWVuLmpzJztcclxuaW1wb3J0IFNjcmVlbkljb24gZnJvbSAnLi4vLi4vLi4vam9pc3QvanMvU2NyZWVuSWNvbi5qcyc7XHJcbmltcG9ydCB7IEltYWdlIH0gZnJvbSAnLi4vLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IGNoaXBzSG9tZVNjcmVlbkljb25fcG5nIGZyb20gJy4uLy4uL2ltYWdlcy9jaGlwc0hvbWVTY3JlZW5JY29uX3BuZy5qcyc7XHJcbmltcG9ydCBudW1iZXJMaW5lT3BlcmF0aW9ucyBmcm9tICcuLi9udW1iZXJMaW5lT3BlcmF0aW9ucy5qcyc7XHJcbmltcG9ydCBOdW1iZXJMaW5lT3BlcmF0aW9uc1N0cmluZ3MgZnJvbSAnLi4vTnVtYmVyTGluZU9wZXJhdGlvbnNTdHJpbmdzLmpzJztcclxuaW1wb3J0IE5MT0NoaXBzTW9kZWwgZnJvbSAnLi9tb2RlbC9OTE9DaGlwc01vZGVsLmpzJztcclxuaW1wb3J0IE5MT0NoaXBzU2NyZWVuVmlldyBmcm9tICcuL3ZpZXcvTkxPQ2hpcHNTY3JlZW5WaWV3LmpzJztcclxuXHJcbmNsYXNzIE5MT0NoaXBzU2NyZWVuIGV4dGVuZHMgU2NyZWVuIHtcclxuXHJcbiAgLyoqXHJcbiAgICogQHBhcmFtIHtUYW5kZW19IHRhbmRlbVxyXG4gICAqL1xyXG4gIGNvbnN0cnVjdG9yKCB0YW5kZW0gKSB7XHJcblxyXG4gICAgY29uc3Qgb3B0aW9ucyA9IHtcclxuICAgICAgbmFtZTogTnVtYmVyTGluZU9wZXJhdGlvbnNTdHJpbmdzLnNjcmVlbi5jaGlwc1N0cmluZ1Byb3BlcnR5LFxyXG4gICAgICBiYWNrZ3JvdW5kQ29sb3JQcm9wZXJ0eTogbmV3IFByb3BlcnR5KCAnI2Y4ZjZmZScgKSxcclxuICAgICAgaG9tZVNjcmVlbkljb246IG5ldyBTY3JlZW5JY29uKCBuZXcgSW1hZ2UoIGNoaXBzSG9tZVNjcmVlbkljb25fcG5nICksIHtcclxuICAgICAgICBtYXhJY29uV2lkdGhQcm9wb3J0aW9uOiAxLFxyXG4gICAgICAgIG1heEljb25IZWlnaHRQcm9wb3J0aW9uOiAxXHJcbiAgICAgIH0gKSxcclxuICAgICAgdGFuZGVtOiB0YW5kZW1cclxuICAgIH07XHJcblxyXG4gICAgc3VwZXIoXHJcbiAgICAgICgpID0+IG5ldyBOTE9DaGlwc01vZGVsKCB0YW5kZW0uY3JlYXRlVGFuZGVtKCAnbW9kZWwnICkgKSxcclxuICAgICAgbW9kZWwgPT4gbmV3IE5MT0NoaXBzU2NyZWVuVmlldyggbW9kZWwsIHRhbmRlbS5jcmVhdGVUYW5kZW0oICd2aWV3JyApICksXHJcbiAgICAgIG9wdGlvbnNcclxuICAgICk7XHJcbiAgfVxyXG59XHJcblxyXG5udW1iZXJMaW5lT3BlcmF0aW9ucy5yZWdpc3RlciggJ05MT0NoaXBzU2NyZWVuJywgTkxPQ2hpcHNTY3JlZW4gKTtcclxuZXhwb3J0IGRlZmF1bHQgTkxPQ2hpcHNTY3JlZW47Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsUUFBUSxNQUFNLDhCQUE4QjtBQUNuRCxPQUFPQyxNQUFNLE1BQU0sNkJBQTZCO0FBQ2hELE9BQU9DLFVBQVUsTUFBTSxpQ0FBaUM7QUFDeEQsU0FBU0MsS0FBSyxRQUFRLGdDQUFnQztBQUN0RCxPQUFPQyx1QkFBdUIsTUFBTSx5Q0FBeUM7QUFDN0UsT0FBT0Msb0JBQW9CLE1BQU0sNEJBQTRCO0FBQzdELE9BQU9DLDJCQUEyQixNQUFNLG1DQUFtQztBQUMzRSxPQUFPQyxhQUFhLE1BQU0sMEJBQTBCO0FBQ3BELE9BQU9DLGtCQUFrQixNQUFNLDhCQUE4QjtBQUU3RCxNQUFNQyxjQUFjLFNBQVNSLE1BQU0sQ0FBQztFQUVsQztBQUNGO0FBQ0E7RUFDRVMsV0FBV0EsQ0FBRUMsTUFBTSxFQUFHO0lBRXBCLE1BQU1DLE9BQU8sR0FBRztNQUNkQyxJQUFJLEVBQUVQLDJCQUEyQixDQUFDUSxNQUFNLENBQUNDLG1CQUFtQjtNQUM1REMsdUJBQXVCLEVBQUUsSUFBSWhCLFFBQVEsQ0FBRSxTQUFVLENBQUM7TUFDbERpQixjQUFjLEVBQUUsSUFBSWYsVUFBVSxDQUFFLElBQUlDLEtBQUssQ0FBRUMsdUJBQXdCLENBQUMsRUFBRTtRQUNwRWMsc0JBQXNCLEVBQUUsQ0FBQztRQUN6QkMsdUJBQXVCLEVBQUU7TUFDM0IsQ0FBRSxDQUFDO01BQ0hSLE1BQU0sRUFBRUE7SUFDVixDQUFDO0lBRUQsS0FBSyxDQUNILE1BQU0sSUFBSUosYUFBYSxDQUFFSSxNQUFNLENBQUNTLFlBQVksQ0FBRSxPQUFRLENBQUUsQ0FBQyxFQUN6REMsS0FBSyxJQUFJLElBQUliLGtCQUFrQixDQUFFYSxLQUFLLEVBQUVWLE1BQU0sQ0FBQ1MsWUFBWSxDQUFFLE1BQU8sQ0FBRSxDQUFDLEVBQ3ZFUixPQUNGLENBQUM7RUFDSDtBQUNGO0FBRUFQLG9CQUFvQixDQUFDaUIsUUFBUSxDQUFFLGdCQUFnQixFQUFFYixjQUFlLENBQUM7QUFDakUsZUFBZUEsY0FBYyJ9