// Copyright 2020-2022, University of Colorado Boulder

/**
 * FillableBagNode is a Scenery Node that looks like a drawing of a bag and that can be filled with different colors.
 *
 * @author John Blanco (PhET Interactive Simulations)
 */

import Vector2 from '../../../../dot/js/Vector2.js';
import { Shape } from '../../../../kite/js/imports.js';
import merge from '../../../../phet-core/js/merge.js';
import { Image, Node, Path } from '../../../../scenery/js/imports.js';
import nlBagForeground_png from '../../../images/nlBagForeground_png.js';
import numberLineOperations from '../../numberLineOperations.js';

// constants
const BAG_OUTLINE_SVG_STRING = 'M367.541,188.392c0,0-7.992-7.075,39.988-42.405\n' + '\tc0,0-10.671,0-10.671-11.777c0-11.776,18.663-23.553,7.991-35.345c-5.487-6.056-11.005-3.377-18.298,0.641\n' + '\tc-5.152-6.143-11.326-12.548-16.348-14.775c-4.862-2.14-18.575-0.859-32.07,1.165c-1.965-3.931-9.841-8.225-37.251-8.225\n' + '\tc-24.122,0-33.06,3.348-35.025,8.239c-14.586-1.048-27.819-0.247-28.969,5.881c-2.664,14.135-15.999,23.554-15.999,23.554\n' + '\tc-7.861,2.605-13.32,9.433-13.32,9.433s10.67,21.209,2.664,40.047c0,0,39.989,4.716,37.325,28.27c0,0-87.984,42.405-146.649,110.722\n' + '\tS-3.072,482.855,2.256,546.456c5.328,63.601,31.997,141.351,101.318,155.485c69.321,14.136,327.959,21.194,423.95-7.074\n' + '\tc0,0,18.661-2.358,29.333-21.195c10.67-18.852,53.322-70.676,53.322-171.979C610.18,400.39,551.515,282.621,367.541,188.392z';
const BAG_OUTLINE_SHAPE = new Shape(BAG_OUTLINE_SVG_STRING);
class FillableBagNode extends Node {
  /**
   * @param {Object} [options]
   * @public
   */
  constructor(options) {
    options = merge({
      fill: 'rgba( 0, 0, 0, 0 )',
      // initially transparent so that it is invisible but has size
      lineWidth: 0
    }, options);
    const bagOutlineNode = new Path(BAG_OUTLINE_SHAPE, {
      fill: options.fill,
      lineWidth: options.lineWidth,
      center: Vector2.ZERO
    });
    const overlayImage = new Image(nlBagForeground_png, {
      opacity: 0.9
    });
    overlayImage.setScaleMagnitude(bagOutlineNode.width / overlayImage.width);
    overlayImage.center = Vector2.ZERO;
    options.children = [bagOutlineNode, overlayImage];
    super(options);

    // @private
    this.outline = bagOutlineNode;
  }

  /**
   * @returns {ColorDef} the color of this piggy bank's fill
   * @public
   */
  getFill() {
    return this.outline.fill;
  }
  get fill() {
    return this.getFill();
  }

  /**
   * @param {ColorDef} fill
   * @public
   */
  setFill(fill) {
    this.outline.fill = fill;
  }
  set fill(fill) {
    this.setFill(fill);
  }
}
numberLineOperations.register('FillableBagNode', FillableBagNode);
export default FillableBagNode;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJWZWN0b3IyIiwiU2hhcGUiLCJtZXJnZSIsIkltYWdlIiwiTm9kZSIsIlBhdGgiLCJubEJhZ0ZvcmVncm91bmRfcG5nIiwibnVtYmVyTGluZU9wZXJhdGlvbnMiLCJCQUdfT1VUTElORV9TVkdfU1RSSU5HIiwiQkFHX09VVExJTkVfU0hBUEUiLCJGaWxsYWJsZUJhZ05vZGUiLCJjb25zdHJ1Y3RvciIsIm9wdGlvbnMiLCJmaWxsIiwibGluZVdpZHRoIiwiYmFnT3V0bGluZU5vZGUiLCJjZW50ZXIiLCJaRVJPIiwib3ZlcmxheUltYWdlIiwib3BhY2l0eSIsInNldFNjYWxlTWFnbml0dWRlIiwid2lkdGgiLCJjaGlsZHJlbiIsIm91dGxpbmUiLCJnZXRGaWxsIiwic2V0RmlsbCIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiRmlsbGFibGVCYWdOb2RlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIwLTIwMjIsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIEZpbGxhYmxlQmFnTm9kZSBpcyBhIFNjZW5lcnkgTm9kZSB0aGF0IGxvb2tzIGxpa2UgYSBkcmF3aW5nIG9mIGEgYmFnIGFuZCB0aGF0IGNhbiBiZSBmaWxsZWQgd2l0aCBkaWZmZXJlbnQgY29sb3JzLlxyXG4gKlxyXG4gKiBAYXV0aG9yIEpvaG4gQmxhbmNvIChQaEVUIEludGVyYWN0aXZlIFNpbXVsYXRpb25zKVxyXG4gKi9cclxuXHJcbmltcG9ydCBWZWN0b3IyIGZyb20gJy4uLy4uLy4uLy4uL2RvdC9qcy9WZWN0b3IyLmpzJztcclxuaW1wb3J0IHsgU2hhcGUgfSBmcm9tICcuLi8uLi8uLi8uLi9raXRlL2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgbWVyZ2UgZnJvbSAnLi4vLi4vLi4vLi4vcGhldC1jb3JlL2pzL21lcmdlLmpzJztcclxuaW1wb3J0IHsgSW1hZ2UsIE5vZGUsIFBhdGggfSBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgbmxCYWdGb3JlZ3JvdW5kX3BuZyBmcm9tICcuLi8uLi8uLi9pbWFnZXMvbmxCYWdGb3JlZ3JvdW5kX3BuZy5qcyc7XHJcbmltcG9ydCBudW1iZXJMaW5lT3BlcmF0aW9ucyBmcm9tICcuLi8uLi9udW1iZXJMaW5lT3BlcmF0aW9ucy5qcyc7XHJcblxyXG4vLyBjb25zdGFudHNcclxuY29uc3QgQkFHX09VVExJTkVfU1ZHX1NUUklORyA9ICdNMzY3LjU0MSwxODguMzkyYzAsMC03Ljk5Mi03LjA3NSwzOS45ODgtNDIuNDA1XFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnXFx0YzAsMC0xMC42NzEsMC0xMC42NzEtMTEuNzc3YzAtMTEuNzc2LDE4LjY2My0yMy41NTMsNy45OTEtMzUuMzQ1Yy01LjQ4Ny02LjA1Ni0xMS4wMDUtMy4zNzctMTguMjk4LDAuNjQxXFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnXFx0Yy01LjE1Mi02LjE0My0xMS4zMjYtMTIuNTQ4LTE2LjM0OC0xNC43NzVjLTQuODYyLTIuMTQtMTguNTc1LTAuODU5LTMyLjA3LDEuMTY1Yy0xLjk2NS0zLjkzMS05Ljg0MS04LjIyNS0zNy4yNTEtOC4yMjVcXG4nICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdcXHRjLTI0LjEyMiwwLTMzLjA2LDMuMzQ4LTM1LjAyNSw4LjIzOWMtMTQuNTg2LTEuMDQ4LTI3LjgxOS0wLjI0Ny0yOC45NjksNS44ODFjLTIuNjY0LDE0LjEzNS0xNS45OTksMjMuNTU0LTE1Ljk5OSwyMy41NTRcXG4nICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdcXHRjLTcuODYxLDIuNjA1LTEzLjMyLDkuNDMzLTEzLjMyLDkuNDMzczEwLjY3LDIxLjIwOSwyLjY2NCw0MC4wNDdjMCwwLDM5Ljk4OSw0LjcxNiwzNy4zMjUsMjguMjdjMCwwLTg3Ljk4NCw0Mi40MDUtMTQ2LjY0OSwxMTAuNzIyXFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnXFx0Uy0zLjA3Miw0ODIuODU1LDIuMjU2LDU0Ni40NTZjNS4zMjgsNjMuNjAxLDMxLjk5NywxNDEuMzUxLDEwMS4zMTgsMTU1LjQ4NWM2OS4zMjEsMTQuMTM2LDMyNy45NTksMjEuMTk0LDQyMy45NS03LjA3NFxcbicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ1xcdGMwLDAsMTguNjYxLTIuMzU4LDI5LjMzMy0yMS4xOTVjMTAuNjctMTguODUyLDUzLjMyMi03MC42NzYsNTMuMzIyLTE3MS45NzlDNjEwLjE4LDQwMC4zOSw1NTEuNTE1LDI4Mi42MjEsMzY3LjU0MSwxODguMzkyeic7XHJcblxyXG5jb25zdCBCQUdfT1VUTElORV9TSEFQRSA9IG5ldyBTaGFwZSggQkFHX09VVExJTkVfU1ZHX1NUUklORyApO1xyXG5cclxuY2xhc3MgRmlsbGFibGVCYWdOb2RlIGV4dGVuZHMgTm9kZSB7XHJcblxyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc11cclxuICAgKiBAcHVibGljXHJcbiAgICovXHJcbiAgY29uc3RydWN0b3IoIG9wdGlvbnMgKSB7XHJcblxyXG4gICAgb3B0aW9ucyA9IG1lcmdlKCB7XHJcbiAgICAgIGZpbGw6ICdyZ2JhKCAwLCAwLCAwLCAwICknLCAvLyBpbml0aWFsbHkgdHJhbnNwYXJlbnQgc28gdGhhdCBpdCBpcyBpbnZpc2libGUgYnV0IGhhcyBzaXplXHJcbiAgICAgIGxpbmVXaWR0aDogMFxyXG4gICAgfSwgb3B0aW9ucyApO1xyXG5cclxuICAgIGNvbnN0IGJhZ091dGxpbmVOb2RlID0gbmV3IFBhdGgoIEJBR19PVVRMSU5FX1NIQVBFLCB7XHJcbiAgICAgIGZpbGw6IG9wdGlvbnMuZmlsbCxcclxuICAgICAgbGluZVdpZHRoOiBvcHRpb25zLmxpbmVXaWR0aCxcclxuICAgICAgY2VudGVyOiBWZWN0b3IyLlpFUk9cclxuICAgIH0gKTtcclxuICAgIGNvbnN0IG92ZXJsYXlJbWFnZSA9IG5ldyBJbWFnZSggbmxCYWdGb3JlZ3JvdW5kX3BuZywgeyBvcGFjaXR5OiAwLjkgfSApO1xyXG4gICAgb3ZlcmxheUltYWdlLnNldFNjYWxlTWFnbml0dWRlKCBiYWdPdXRsaW5lTm9kZS53aWR0aCAvIG92ZXJsYXlJbWFnZS53aWR0aCApO1xyXG4gICAgb3ZlcmxheUltYWdlLmNlbnRlciA9IFZlY3RvcjIuWkVSTztcclxuICAgIG9wdGlvbnMuY2hpbGRyZW4gPSBbIGJhZ091dGxpbmVOb2RlLCBvdmVybGF5SW1hZ2UgXTtcclxuICAgIHN1cGVyKCBvcHRpb25zICk7XHJcblxyXG4gICAgLy8gQHByaXZhdGVcclxuICAgIHRoaXMub3V0bGluZSA9IGJhZ091dGxpbmVOb2RlO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQHJldHVybnMge0NvbG9yRGVmfSB0aGUgY29sb3Igb2YgdGhpcyBwaWdneSBiYW5rJ3MgZmlsbFxyXG4gICAqIEBwdWJsaWNcclxuICAgKi9cclxuICBnZXRGaWxsKCkge1xyXG4gICAgcmV0dXJuIHRoaXMub3V0bGluZS5maWxsO1xyXG4gIH1cclxuXHJcbiAgZ2V0IGZpbGwoKSB7IHJldHVybiB0aGlzLmdldEZpbGwoKTsgfVxyXG5cclxuICAvKipcclxuICAgKiBAcGFyYW0ge0NvbG9yRGVmfSBmaWxsXHJcbiAgICogQHB1YmxpY1xyXG4gICAqL1xyXG4gIHNldEZpbGwoIGZpbGwgKSB7XHJcbiAgICB0aGlzLm91dGxpbmUuZmlsbCA9IGZpbGw7XHJcbiAgfVxyXG5cclxuICBzZXQgZmlsbCggZmlsbCApIHsgdGhpcy5zZXRGaWxsKCBmaWxsICk7IH1cclxufVxyXG5cclxubnVtYmVyTGluZU9wZXJhdGlvbnMucmVnaXN0ZXIoICdGaWxsYWJsZUJhZ05vZGUnLCBGaWxsYWJsZUJhZ05vZGUgKTtcclxuZXhwb3J0IGRlZmF1bHQgRmlsbGFibGVCYWdOb2RlOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxPQUFPLE1BQU0sK0JBQStCO0FBQ25ELFNBQVNDLEtBQUssUUFBUSxnQ0FBZ0M7QUFDdEQsT0FBT0MsS0FBSyxNQUFNLG1DQUFtQztBQUNyRCxTQUFTQyxLQUFLLEVBQUVDLElBQUksRUFBRUMsSUFBSSxRQUFRLG1DQUFtQztBQUNyRSxPQUFPQyxtQkFBbUIsTUFBTSx3Q0FBd0M7QUFDeEUsT0FBT0Msb0JBQW9CLE1BQU0sK0JBQStCOztBQUVoRTtBQUNBLE1BQU1DLHNCQUFzQixHQUFHLGtEQUFrRCxHQUNsRCw0R0FBNEcsR0FDNUcsMEhBQTBILEdBQzFILDJIQUEySCxHQUMzSCxxSUFBcUksR0FDckkseUhBQXlILEdBQ3pILDRIQUE0SDtBQUUzSixNQUFNQyxpQkFBaUIsR0FBRyxJQUFJUixLQUFLLENBQUVPLHNCQUF1QixDQUFDO0FBRTdELE1BQU1FLGVBQWUsU0FBU04sSUFBSSxDQUFDO0VBRWpDO0FBQ0Y7QUFDQTtBQUNBO0VBQ0VPLFdBQVdBLENBQUVDLE9BQU8sRUFBRztJQUVyQkEsT0FBTyxHQUFHVixLQUFLLENBQUU7TUFDZlcsSUFBSSxFQUFFLG9CQUFvQjtNQUFFO01BQzVCQyxTQUFTLEVBQUU7SUFDYixDQUFDLEVBQUVGLE9BQVEsQ0FBQztJQUVaLE1BQU1HLGNBQWMsR0FBRyxJQUFJVixJQUFJLENBQUVJLGlCQUFpQixFQUFFO01BQ2xESSxJQUFJLEVBQUVELE9BQU8sQ0FBQ0MsSUFBSTtNQUNsQkMsU0FBUyxFQUFFRixPQUFPLENBQUNFLFNBQVM7TUFDNUJFLE1BQU0sRUFBRWhCLE9BQU8sQ0FBQ2lCO0lBQ2xCLENBQUUsQ0FBQztJQUNILE1BQU1DLFlBQVksR0FBRyxJQUFJZixLQUFLLENBQUVHLG1CQUFtQixFQUFFO01BQUVhLE9BQU8sRUFBRTtJQUFJLENBQUUsQ0FBQztJQUN2RUQsWUFBWSxDQUFDRSxpQkFBaUIsQ0FBRUwsY0FBYyxDQUFDTSxLQUFLLEdBQUdILFlBQVksQ0FBQ0csS0FBTSxDQUFDO0lBQzNFSCxZQUFZLENBQUNGLE1BQU0sR0FBR2hCLE9BQU8sQ0FBQ2lCLElBQUk7SUFDbENMLE9BQU8sQ0FBQ1UsUUFBUSxHQUFHLENBQUVQLGNBQWMsRUFBRUcsWUFBWSxDQUFFO0lBQ25ELEtBQUssQ0FBRU4sT0FBUSxDQUFDOztJQUVoQjtJQUNBLElBQUksQ0FBQ1csT0FBTyxHQUFHUixjQUFjO0VBQy9COztFQUVBO0FBQ0Y7QUFDQTtBQUNBO0VBQ0VTLE9BQU9BLENBQUEsRUFBRztJQUNSLE9BQU8sSUFBSSxDQUFDRCxPQUFPLENBQUNWLElBQUk7RUFDMUI7RUFFQSxJQUFJQSxJQUFJQSxDQUFBLEVBQUc7SUFBRSxPQUFPLElBQUksQ0FBQ1csT0FBTyxDQUFDLENBQUM7RUFBRTs7RUFFcEM7QUFDRjtBQUNBO0FBQ0E7RUFDRUMsT0FBT0EsQ0FBRVosSUFBSSxFQUFHO0lBQ2QsSUFBSSxDQUFDVSxPQUFPLENBQUNWLElBQUksR0FBR0EsSUFBSTtFQUMxQjtFQUVBLElBQUlBLElBQUlBLENBQUVBLElBQUksRUFBRztJQUFFLElBQUksQ0FBQ1ksT0FBTyxDQUFFWixJQUFLLENBQUM7RUFBRTtBQUMzQztBQUVBTixvQkFBb0IsQ0FBQ21CLFFBQVEsQ0FBRSxpQkFBaUIsRUFBRWhCLGVBQWdCLENBQUM7QUFDbkUsZUFBZUEsZUFBZSJ9