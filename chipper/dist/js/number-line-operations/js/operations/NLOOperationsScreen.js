// Copyright 2020-2022, University of Colorado Boulder

/**
 * @author John Blanco (PhET Interactive Simulations)
 */

import Property from '../../../axon/js/Property.js';
import Screen from '../../../joist/js/Screen.js';
import ScreenIcon from '../../../joist/js/ScreenIcon.js';
import { Image } from '../../../scenery/js/imports.js';
import operationsHomeScreenIcon_png from '../../images/operationsHomeScreenIcon_png.js';
import numberLineOperations from '../numberLineOperations.js';
import NumberLineOperationsStrings from '../NumberLineOperationsStrings.js';
import NLOOperationsModel from './model/NLOOperationsModel.js';
import NLOOperationsScreenView from './view/NLOOperationsScreenView.js';
class NLOOperationsScreen extends Screen {
  /**
   * @param {Tandem} tandem
   */
  constructor(tandem) {
    const options = {
      name: NumberLineOperationsStrings.screen.operationsStringProperty,
      backgroundColorProperty: new Property('#fffef3'),
      homeScreenIcon: new ScreenIcon(new Image(operationsHomeScreenIcon_png), {
        maxIconWidthProportion: 1,
        maxIconHeightProportion: 1
      }),
      tandem: tandem
    };
    super(() => new NLOOperationsModel(tandem.createTandem('model')), model => new NLOOperationsScreenView(model, tandem.createTandem('view')), options);
  }
}
numberLineOperations.register('NLOOperationsScreen', NLOOperationsScreen);
export default NLOOperationsScreen;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQcm9wZXJ0eSIsIlNjcmVlbiIsIlNjcmVlbkljb24iLCJJbWFnZSIsIm9wZXJhdGlvbnNIb21lU2NyZWVuSWNvbl9wbmciLCJudW1iZXJMaW5lT3BlcmF0aW9ucyIsIk51bWJlckxpbmVPcGVyYXRpb25zU3RyaW5ncyIsIk5MT09wZXJhdGlvbnNNb2RlbCIsIk5MT09wZXJhdGlvbnNTY3JlZW5WaWV3IiwiTkxPT3BlcmF0aW9uc1NjcmVlbiIsImNvbnN0cnVjdG9yIiwidGFuZGVtIiwib3B0aW9ucyIsIm5hbWUiLCJzY3JlZW4iLCJvcGVyYXRpb25zU3RyaW5nUHJvcGVydHkiLCJiYWNrZ3JvdW5kQ29sb3JQcm9wZXJ0eSIsImhvbWVTY3JlZW5JY29uIiwibWF4SWNvbldpZHRoUHJvcG9ydGlvbiIsIm1heEljb25IZWlnaHRQcm9wb3J0aW9uIiwiY3JlYXRlVGFuZGVtIiwibW9kZWwiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIk5MT09wZXJhdGlvbnNTY3JlZW4uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjAtMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogQGF1dGhvciBKb2huIEJsYW5jbyAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcclxuICovXHJcblxyXG5pbXBvcnQgUHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vYXhvbi9qcy9Qcm9wZXJ0eS5qcyc7XHJcbmltcG9ydCBTY3JlZW4gZnJvbSAnLi4vLi4vLi4vam9pc3QvanMvU2NyZWVuLmpzJztcclxuaW1wb3J0IFNjcmVlbkljb24gZnJvbSAnLi4vLi4vLi4vam9pc3QvanMvU2NyZWVuSWNvbi5qcyc7XHJcbmltcG9ydCB7IEltYWdlIH0gZnJvbSAnLi4vLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IG9wZXJhdGlvbnNIb21lU2NyZWVuSWNvbl9wbmcgZnJvbSAnLi4vLi4vaW1hZ2VzL29wZXJhdGlvbnNIb21lU2NyZWVuSWNvbl9wbmcuanMnO1xyXG5pbXBvcnQgbnVtYmVyTGluZU9wZXJhdGlvbnMgZnJvbSAnLi4vbnVtYmVyTGluZU9wZXJhdGlvbnMuanMnO1xyXG5pbXBvcnQgTnVtYmVyTGluZU9wZXJhdGlvbnNTdHJpbmdzIGZyb20gJy4uL051bWJlckxpbmVPcGVyYXRpb25zU3RyaW5ncy5qcyc7XHJcbmltcG9ydCBOTE9PcGVyYXRpb25zTW9kZWwgZnJvbSAnLi9tb2RlbC9OTE9PcGVyYXRpb25zTW9kZWwuanMnO1xyXG5pbXBvcnQgTkxPT3BlcmF0aW9uc1NjcmVlblZpZXcgZnJvbSAnLi92aWV3L05MT09wZXJhdGlvbnNTY3JlZW5WaWV3LmpzJztcclxuXHJcbmNsYXNzIE5MT09wZXJhdGlvbnNTY3JlZW4gZXh0ZW5kcyBTY3JlZW4ge1xyXG5cclxuICAvKipcclxuICAgKiBAcGFyYW0ge1RhbmRlbX0gdGFuZGVtXHJcbiAgICovXHJcbiAgY29uc3RydWN0b3IoIHRhbmRlbSApIHtcclxuXHJcbiAgICBjb25zdCBvcHRpb25zID0ge1xyXG4gICAgICBuYW1lOiBOdW1iZXJMaW5lT3BlcmF0aW9uc1N0cmluZ3Muc2NyZWVuLm9wZXJhdGlvbnNTdHJpbmdQcm9wZXJ0eSxcclxuICAgICAgYmFja2dyb3VuZENvbG9yUHJvcGVydHk6IG5ldyBQcm9wZXJ0eSggJyNmZmZlZjMnICksXHJcbiAgICAgIGhvbWVTY3JlZW5JY29uOiBuZXcgU2NyZWVuSWNvbiggbmV3IEltYWdlKCBvcGVyYXRpb25zSG9tZVNjcmVlbkljb25fcG5nICksIHtcclxuICAgICAgICBtYXhJY29uV2lkdGhQcm9wb3J0aW9uOiAxLFxyXG4gICAgICAgIG1heEljb25IZWlnaHRQcm9wb3J0aW9uOiAxXHJcbiAgICAgIH0gKSxcclxuICAgICAgdGFuZGVtOiB0YW5kZW1cclxuICAgIH07XHJcblxyXG4gICAgc3VwZXIoXHJcbiAgICAgICgpID0+IG5ldyBOTE9PcGVyYXRpb25zTW9kZWwoIHRhbmRlbS5jcmVhdGVUYW5kZW0oICdtb2RlbCcgKSApLFxyXG4gICAgICBtb2RlbCA9PiBuZXcgTkxPT3BlcmF0aW9uc1NjcmVlblZpZXcoIG1vZGVsLCB0YW5kZW0uY3JlYXRlVGFuZGVtKCAndmlldycgKSApLFxyXG4gICAgICBvcHRpb25zXHJcbiAgICApO1xyXG4gIH1cclxufVxyXG5cclxubnVtYmVyTGluZU9wZXJhdGlvbnMucmVnaXN0ZXIoICdOTE9PcGVyYXRpb25zU2NyZWVuJywgTkxPT3BlcmF0aW9uc1NjcmVlbiApO1xyXG5leHBvcnQgZGVmYXVsdCBOTE9PcGVyYXRpb25zU2NyZWVuOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBLE9BQU9BLFFBQVEsTUFBTSw4QkFBOEI7QUFDbkQsT0FBT0MsTUFBTSxNQUFNLDZCQUE2QjtBQUNoRCxPQUFPQyxVQUFVLE1BQU0saUNBQWlDO0FBQ3hELFNBQVNDLEtBQUssUUFBUSxnQ0FBZ0M7QUFDdEQsT0FBT0MsNEJBQTRCLE1BQU0sOENBQThDO0FBQ3ZGLE9BQU9DLG9CQUFvQixNQUFNLDRCQUE0QjtBQUM3RCxPQUFPQywyQkFBMkIsTUFBTSxtQ0FBbUM7QUFDM0UsT0FBT0Msa0JBQWtCLE1BQU0sK0JBQStCO0FBQzlELE9BQU9DLHVCQUF1QixNQUFNLG1DQUFtQztBQUV2RSxNQUFNQyxtQkFBbUIsU0FBU1IsTUFBTSxDQUFDO0VBRXZDO0FBQ0Y7QUFDQTtFQUNFUyxXQUFXQSxDQUFFQyxNQUFNLEVBQUc7SUFFcEIsTUFBTUMsT0FBTyxHQUFHO01BQ2RDLElBQUksRUFBRVAsMkJBQTJCLENBQUNRLE1BQU0sQ0FBQ0Msd0JBQXdCO01BQ2pFQyx1QkFBdUIsRUFBRSxJQUFJaEIsUUFBUSxDQUFFLFNBQVUsQ0FBQztNQUNsRGlCLGNBQWMsRUFBRSxJQUFJZixVQUFVLENBQUUsSUFBSUMsS0FBSyxDQUFFQyw0QkFBNkIsQ0FBQyxFQUFFO1FBQ3pFYyxzQkFBc0IsRUFBRSxDQUFDO1FBQ3pCQyx1QkFBdUIsRUFBRTtNQUMzQixDQUFFLENBQUM7TUFDSFIsTUFBTSxFQUFFQTtJQUNWLENBQUM7SUFFRCxLQUFLLENBQ0gsTUFBTSxJQUFJSixrQkFBa0IsQ0FBRUksTUFBTSxDQUFDUyxZQUFZLENBQUUsT0FBUSxDQUFFLENBQUMsRUFDOURDLEtBQUssSUFBSSxJQUFJYix1QkFBdUIsQ0FBRWEsS0FBSyxFQUFFVixNQUFNLENBQUNTLFlBQVksQ0FBRSxNQUFPLENBQUUsQ0FBQyxFQUM1RVIsT0FDRixDQUFDO0VBQ0g7QUFDRjtBQUVBUCxvQkFBb0IsQ0FBQ2lCLFFBQVEsQ0FBRSxxQkFBcUIsRUFBRWIsbUJBQW9CLENBQUM7QUFDM0UsZUFBZUEsbUJBQW1CIn0=