// Copyright 2014-2023, University of Colorado Boulder

/**
 * Main entry point for the sim.
 *
 * @author Jonathan Olson <jonathan.olson@colorado.edu>
 */

import PreferencesModel from '../../joist/js/preferences/PreferencesModel.js';
import Sim from '../../joist/js/Sim.js';
import simLauncher from '../../joist/js/simLauncher.js';
import CanvasWarningNode from '../../scenery-phet/js/CanvasWarningNode.js';
import Tandem from '../../tandem/js/Tandem.js';
import MoleculeShapesGlobals from './common/MoleculeShapesGlobals.js';
import SimulationPreferencesContentNode from './common/view/SimulationPreferencesContentNode.js';
import ModelMoleculesScreen from './model/ModelMoleculesScreen.js';
import MoleculeShapesStrings from './MoleculeShapesStrings.js';
import RealMoleculesScreen from './real/RealMoleculesScreen.js';
const isBasicsVersion = false;
const simOptions = {
  credits: {
    leadDesign: 'Emily B. Moore',
    softwareDevelopment: 'Jonathan Olson',
    team: 'Julia Chamberlain, Kelly Lancaster, Ariel Paul, Kathy Perkins, Amy Rouinfar',
    qualityAssurance: 'Steele Dalton, Jaron Droder, Bryce Griebenow, Clifford Hardin, Brooklyn Lash, Emily Miller, Elise Morgan, Liam Mulhall, Oliver Orejola, Jacob Romero, Nancy Salpepi, Kathryn Woessner, Bryan Yoelin'
  },
  webgl: true,
  preferencesModel: new PreferencesModel({
    visualOptions: {
      supportsProjectorMode: true
    },
    simulationOptions: {
      customPreferences: [{
        createContent: tandem => new SimulationPreferencesContentNode(isBasicsVersion, tandem.createTandem('simPreferences'))
      }]
    }
  }),
  homeScreenWarningNode: MoleculeShapesGlobals.useWebGLProperty.value ? null : new CanvasWarningNode(),
  // phet-io options
  phetioDesigned: true
};

// NOTE: ?webgl=false will trigger Canvas rendering with a reduced poly-count

simLauncher.launch(() => {
  const sim = new Sim(MoleculeShapesStrings['molecule-shapes'].titleStringProperty, [new ModelMoleculesScreen(isBasicsVersion, Tandem.ROOT.createTandem('modelScreen')), new RealMoleculesScreen(isBasicsVersion, Tandem.ROOT.createTandem('realMoleculesScreen'))], simOptions);
  sim.start();
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQcmVmZXJlbmNlc01vZGVsIiwiU2ltIiwic2ltTGF1bmNoZXIiLCJDYW52YXNXYXJuaW5nTm9kZSIsIlRhbmRlbSIsIk1vbGVjdWxlU2hhcGVzR2xvYmFscyIsIlNpbXVsYXRpb25QcmVmZXJlbmNlc0NvbnRlbnROb2RlIiwiTW9kZWxNb2xlY3VsZXNTY3JlZW4iLCJNb2xlY3VsZVNoYXBlc1N0cmluZ3MiLCJSZWFsTW9sZWN1bGVzU2NyZWVuIiwiaXNCYXNpY3NWZXJzaW9uIiwic2ltT3B0aW9ucyIsImNyZWRpdHMiLCJsZWFkRGVzaWduIiwic29mdHdhcmVEZXZlbG9wbWVudCIsInRlYW0iLCJxdWFsaXR5QXNzdXJhbmNlIiwid2ViZ2wiLCJwcmVmZXJlbmNlc01vZGVsIiwidmlzdWFsT3B0aW9ucyIsInN1cHBvcnRzUHJvamVjdG9yTW9kZSIsInNpbXVsYXRpb25PcHRpb25zIiwiY3VzdG9tUHJlZmVyZW5jZXMiLCJjcmVhdGVDb250ZW50IiwidGFuZGVtIiwiY3JlYXRlVGFuZGVtIiwiaG9tZVNjcmVlbldhcm5pbmdOb2RlIiwidXNlV2ViR0xQcm9wZXJ0eSIsInZhbHVlIiwicGhldGlvRGVzaWduZWQiLCJsYXVuY2giLCJzaW0iLCJ0aXRsZVN0cmluZ1Byb3BlcnR5IiwiUk9PVCIsInN0YXJ0Il0sInNvdXJjZXMiOlsibW9sZWN1bGUtc2hhcGVzLW1haW4uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTQtMjAyMywgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogTWFpbiBlbnRyeSBwb2ludCBmb3IgdGhlIHNpbS5cclxuICpcclxuICogQGF1dGhvciBKb25hdGhhbiBPbHNvbiA8am9uYXRoYW4ub2xzb25AY29sb3JhZG8uZWR1PlxyXG4gKi9cclxuXHJcbmltcG9ydCBQcmVmZXJlbmNlc01vZGVsIGZyb20gJy4uLy4uL2pvaXN0L2pzL3ByZWZlcmVuY2VzL1ByZWZlcmVuY2VzTW9kZWwuanMnO1xyXG5pbXBvcnQgU2ltIGZyb20gJy4uLy4uL2pvaXN0L2pzL1NpbS5qcyc7XHJcbmltcG9ydCBzaW1MYXVuY2hlciBmcm9tICcuLi8uLi9qb2lzdC9qcy9zaW1MYXVuY2hlci5qcyc7XHJcbmltcG9ydCBDYW52YXNXYXJuaW5nTm9kZSBmcm9tICcuLi8uLi9zY2VuZXJ5LXBoZXQvanMvQ2FudmFzV2FybmluZ05vZGUuanMnO1xyXG5pbXBvcnQgVGFuZGVtIGZyb20gJy4uLy4uL3RhbmRlbS9qcy9UYW5kZW0uanMnO1xyXG5pbXBvcnQgTW9sZWN1bGVTaGFwZXNHbG9iYWxzIGZyb20gJy4vY29tbW9uL01vbGVjdWxlU2hhcGVzR2xvYmFscy5qcyc7XHJcbmltcG9ydCBTaW11bGF0aW9uUHJlZmVyZW5jZXNDb250ZW50Tm9kZSBmcm9tICcuL2NvbW1vbi92aWV3L1NpbXVsYXRpb25QcmVmZXJlbmNlc0NvbnRlbnROb2RlLmpzJztcclxuaW1wb3J0IE1vZGVsTW9sZWN1bGVzU2NyZWVuIGZyb20gJy4vbW9kZWwvTW9kZWxNb2xlY3VsZXNTY3JlZW4uanMnO1xyXG5pbXBvcnQgTW9sZWN1bGVTaGFwZXNTdHJpbmdzIGZyb20gJy4vTW9sZWN1bGVTaGFwZXNTdHJpbmdzLmpzJztcclxuaW1wb3J0IFJlYWxNb2xlY3VsZXNTY3JlZW4gZnJvbSAnLi9yZWFsL1JlYWxNb2xlY3VsZXNTY3JlZW4uanMnO1xyXG5cclxuY29uc3QgaXNCYXNpY3NWZXJzaW9uID0gZmFsc2U7XHJcblxyXG5jb25zdCBzaW1PcHRpb25zID0ge1xyXG4gIGNyZWRpdHM6IHtcclxuICAgIGxlYWREZXNpZ246ICdFbWlseSBCLiBNb29yZScsXHJcbiAgICBzb2Z0d2FyZURldmVsb3BtZW50OiAnSm9uYXRoYW4gT2xzb24nLFxyXG4gICAgdGVhbTogJ0p1bGlhIENoYW1iZXJsYWluLCBLZWxseSBMYW5jYXN0ZXIsIEFyaWVsIFBhdWwsIEthdGh5IFBlcmtpbnMsIEFteSBSb3VpbmZhcicsXHJcbiAgICBxdWFsaXR5QXNzdXJhbmNlOiAnU3RlZWxlIERhbHRvbiwgSmFyb24gRHJvZGVyLCBCcnljZSBHcmllYmVub3csIENsaWZmb3JkIEhhcmRpbiwgQnJvb2tseW4gTGFzaCwgRW1pbHkgTWlsbGVyLCBFbGlzZSBNb3JnYW4sIExpYW0gTXVsaGFsbCwgT2xpdmVyIE9yZWpvbGEsIEphY29iIFJvbWVybywgTmFuY3kgU2FscGVwaSwgS2F0aHJ5biBXb2Vzc25lciwgQnJ5YW4gWW9lbGluJ1xyXG4gIH0sXHJcbiAgd2ViZ2w6IHRydWUsXHJcbiAgcHJlZmVyZW5jZXNNb2RlbDogbmV3IFByZWZlcmVuY2VzTW9kZWwoIHtcclxuICAgIHZpc3VhbE9wdGlvbnM6IHtcclxuICAgICAgc3VwcG9ydHNQcm9qZWN0b3JNb2RlOiB0cnVlXHJcbiAgICB9LFxyXG4gICAgc2ltdWxhdGlvbk9wdGlvbnM6IHtcclxuICAgICAgY3VzdG9tUHJlZmVyZW5jZXM6IFsge1xyXG4gICAgICAgIGNyZWF0ZUNvbnRlbnQ6IHRhbmRlbSA9PiBuZXcgU2ltdWxhdGlvblByZWZlcmVuY2VzQ29udGVudE5vZGUoIGlzQmFzaWNzVmVyc2lvbiwgdGFuZGVtLmNyZWF0ZVRhbmRlbSggJ3NpbVByZWZlcmVuY2VzJyApIClcclxuICAgICAgfSBdXHJcbiAgICB9XHJcbiAgfSApLFxyXG5cclxuICBob21lU2NyZWVuV2FybmluZ05vZGU6IE1vbGVjdWxlU2hhcGVzR2xvYmFscy51c2VXZWJHTFByb3BlcnR5LnZhbHVlID8gbnVsbCA6IG5ldyBDYW52YXNXYXJuaW5nTm9kZSgpLFxyXG5cclxuICAvLyBwaGV0LWlvIG9wdGlvbnNcclxuICBwaGV0aW9EZXNpZ25lZDogdHJ1ZVxyXG59O1xyXG5cclxuLy8gTk9URTogP3dlYmdsPWZhbHNlIHdpbGwgdHJpZ2dlciBDYW52YXMgcmVuZGVyaW5nIHdpdGggYSByZWR1Y2VkIHBvbHktY291bnRcclxuXHJcbnNpbUxhdW5jaGVyLmxhdW5jaCggKCkgPT4ge1xyXG4gIGNvbnN0IHNpbSA9IG5ldyBTaW0oIE1vbGVjdWxlU2hhcGVzU3RyaW5nc1sgJ21vbGVjdWxlLXNoYXBlcycgXS50aXRsZVN0cmluZ1Byb3BlcnR5LCBbXHJcbiAgICBuZXcgTW9kZWxNb2xlY3VsZXNTY3JlZW4oIGlzQmFzaWNzVmVyc2lvbiwgVGFuZGVtLlJPT1QuY3JlYXRlVGFuZGVtKCAnbW9kZWxTY3JlZW4nICkgKSxcclxuICAgIG5ldyBSZWFsTW9sZWN1bGVzU2NyZWVuKCBpc0Jhc2ljc1ZlcnNpb24sIFRhbmRlbS5ST09ULmNyZWF0ZVRhbmRlbSggJ3JlYWxNb2xlY3VsZXNTY3JlZW4nICkgKVxyXG4gIF0sIHNpbU9wdGlvbnMgKTtcclxuICBzaW0uc3RhcnQoKTtcclxufSApO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsZ0JBQWdCLE1BQU0sZ0RBQWdEO0FBQzdFLE9BQU9DLEdBQUcsTUFBTSx1QkFBdUI7QUFDdkMsT0FBT0MsV0FBVyxNQUFNLCtCQUErQjtBQUN2RCxPQUFPQyxpQkFBaUIsTUFBTSw0Q0FBNEM7QUFDMUUsT0FBT0MsTUFBTSxNQUFNLDJCQUEyQjtBQUM5QyxPQUFPQyxxQkFBcUIsTUFBTSxtQ0FBbUM7QUFDckUsT0FBT0MsZ0NBQWdDLE1BQU0sbURBQW1EO0FBQ2hHLE9BQU9DLG9CQUFvQixNQUFNLGlDQUFpQztBQUNsRSxPQUFPQyxxQkFBcUIsTUFBTSw0QkFBNEI7QUFDOUQsT0FBT0MsbUJBQW1CLE1BQU0sK0JBQStCO0FBRS9ELE1BQU1DLGVBQWUsR0FBRyxLQUFLO0FBRTdCLE1BQU1DLFVBQVUsR0FBRztFQUNqQkMsT0FBTyxFQUFFO0lBQ1BDLFVBQVUsRUFBRSxnQkFBZ0I7SUFDNUJDLG1CQUFtQixFQUFFLGdCQUFnQjtJQUNyQ0MsSUFBSSxFQUFFLDZFQUE2RTtJQUNuRkMsZ0JBQWdCLEVBQUU7RUFDcEIsQ0FBQztFQUNEQyxLQUFLLEVBQUUsSUFBSTtFQUNYQyxnQkFBZ0IsRUFBRSxJQUFJbEIsZ0JBQWdCLENBQUU7SUFDdENtQixhQUFhLEVBQUU7TUFDYkMscUJBQXFCLEVBQUU7SUFDekIsQ0FBQztJQUNEQyxpQkFBaUIsRUFBRTtNQUNqQkMsaUJBQWlCLEVBQUUsQ0FBRTtRQUNuQkMsYUFBYSxFQUFFQyxNQUFNLElBQUksSUFBSWxCLGdDQUFnQyxDQUFFSSxlQUFlLEVBQUVjLE1BQU0sQ0FBQ0MsWUFBWSxDQUFFLGdCQUFpQixDQUFFO01BQzFILENBQUM7SUFDSDtFQUNGLENBQUUsQ0FBQztFQUVIQyxxQkFBcUIsRUFBRXJCLHFCQUFxQixDQUFDc0IsZ0JBQWdCLENBQUNDLEtBQUssR0FBRyxJQUFJLEdBQUcsSUFBSXpCLGlCQUFpQixDQUFDLENBQUM7RUFFcEc7RUFDQTBCLGNBQWMsRUFBRTtBQUNsQixDQUFDOztBQUVEOztBQUVBM0IsV0FBVyxDQUFDNEIsTUFBTSxDQUFFLE1BQU07RUFDeEIsTUFBTUMsR0FBRyxHQUFHLElBQUk5QixHQUFHLENBQUVPLHFCQUFxQixDQUFFLGlCQUFpQixDQUFFLENBQUN3QixtQkFBbUIsRUFBRSxDQUNuRixJQUFJekIsb0JBQW9CLENBQUVHLGVBQWUsRUFBRU4sTUFBTSxDQUFDNkIsSUFBSSxDQUFDUixZQUFZLENBQUUsYUFBYyxDQUFFLENBQUMsRUFDdEYsSUFBSWhCLG1CQUFtQixDQUFFQyxlQUFlLEVBQUVOLE1BQU0sQ0FBQzZCLElBQUksQ0FBQ1IsWUFBWSxDQUFFLHFCQUFzQixDQUFFLENBQUMsQ0FDOUYsRUFBRWQsVUFBVyxDQUFDO0VBQ2ZvQixHQUFHLENBQUNHLEtBQUssQ0FBQyxDQUFDO0FBQ2IsQ0FBRSxDQUFDIn0=