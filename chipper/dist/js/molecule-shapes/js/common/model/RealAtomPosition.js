// Copyright 2014-2020, University of Colorado Boulder

/**
 * The position of an atom in 3 dimensions, used for RealMoleculeShape.
 *
 * @author Jonathan Olson <jonathan.olson@colorado.edu>
 */

import Atom from '../../../../nitroglycerin/js/Atom.js';
import moleculeShapes from '../../moleculeShapes.js';
class RealAtomPosition extends Atom {
  /**
   * @param {Element} element
   * @param {Vector2} position - The initial position for the atom
   * @param {number} [lonePairCount]
   */
  constructor(element, position, lonePairCount) {
    super(element);
    this.position = position; // @public {Vector3}
    this.orientation = position.magnitude > 0 ? position.normalized() : position.copy(); // @public {Vector3}
    this.lonePairCount = lonePairCount || 0; // @public {number} - How many external lone pairs it has.

    // we should be immutable
    if (assert) {
      Object.freeze && Object.freeze(this);
    }
  }
}
moleculeShapes.register('RealAtomPosition', RealAtomPosition);
export default RealAtomPosition;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJBdG9tIiwibW9sZWN1bGVTaGFwZXMiLCJSZWFsQXRvbVBvc2l0aW9uIiwiY29uc3RydWN0b3IiLCJlbGVtZW50IiwicG9zaXRpb24iLCJsb25lUGFpckNvdW50Iiwib3JpZW50YXRpb24iLCJtYWduaXR1ZGUiLCJub3JtYWxpemVkIiwiY29weSIsImFzc2VydCIsIk9iamVjdCIsImZyZWV6ZSIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiUmVhbEF0b21Qb3NpdGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxNC0yMDIwLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBUaGUgcG9zaXRpb24gb2YgYW4gYXRvbSBpbiAzIGRpbWVuc2lvbnMsIHVzZWQgZm9yIFJlYWxNb2xlY3VsZVNoYXBlLlxyXG4gKlxyXG4gKiBAYXV0aG9yIEpvbmF0aGFuIE9sc29uIDxqb25hdGhhbi5vbHNvbkBjb2xvcmFkby5lZHU+XHJcbiAqL1xyXG5cclxuaW1wb3J0IEF0b20gZnJvbSAnLi4vLi4vLi4vLi4vbml0cm9nbHljZXJpbi9qcy9BdG9tLmpzJztcclxuaW1wb3J0IG1vbGVjdWxlU2hhcGVzIGZyb20gJy4uLy4uL21vbGVjdWxlU2hhcGVzLmpzJztcclxuXHJcbmNsYXNzIFJlYWxBdG9tUG9zaXRpb24gZXh0ZW5kcyBBdG9tIHtcclxuICAvKipcclxuICAgKiBAcGFyYW0ge0VsZW1lbnR9IGVsZW1lbnRcclxuICAgKiBAcGFyYW0ge1ZlY3RvcjJ9IHBvc2l0aW9uIC0gVGhlIGluaXRpYWwgcG9zaXRpb24gZm9yIHRoZSBhdG9tXHJcbiAgICogQHBhcmFtIHtudW1iZXJ9IFtsb25lUGFpckNvdW50XVxyXG4gICAqL1xyXG4gIGNvbnN0cnVjdG9yKCBlbGVtZW50LCBwb3NpdGlvbiwgbG9uZVBhaXJDb3VudCApIHtcclxuICAgIHN1cGVyKCBlbGVtZW50ICk7XHJcblxyXG4gICAgdGhpcy5wb3NpdGlvbiA9IHBvc2l0aW9uOyAvLyBAcHVibGljIHtWZWN0b3IzfVxyXG4gICAgdGhpcy5vcmllbnRhdGlvbiA9IHBvc2l0aW9uLm1hZ25pdHVkZSA+IDAgPyBwb3NpdGlvbi5ub3JtYWxpemVkKCkgOiBwb3NpdGlvbi5jb3B5KCk7IC8vIEBwdWJsaWMge1ZlY3RvcjN9XHJcbiAgICB0aGlzLmxvbmVQYWlyQ291bnQgPSBsb25lUGFpckNvdW50IHx8IDA7IC8vIEBwdWJsaWMge251bWJlcn0gLSBIb3cgbWFueSBleHRlcm5hbCBsb25lIHBhaXJzIGl0IGhhcy5cclxuXHJcbiAgICAvLyB3ZSBzaG91bGQgYmUgaW1tdXRhYmxlXHJcbiAgICBpZiAoIGFzc2VydCApIHtcclxuICAgICAgT2JqZWN0LmZyZWV6ZSAmJiBPYmplY3QuZnJlZXplKCB0aGlzICk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5tb2xlY3VsZVNoYXBlcy5yZWdpc3RlciggJ1JlYWxBdG9tUG9zaXRpb24nLCBSZWFsQXRvbVBvc2l0aW9uICk7XHJcbmV4cG9ydCBkZWZhdWx0IFJlYWxBdG9tUG9zaXRpb247XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxJQUFJLE1BQU0sc0NBQXNDO0FBQ3ZELE9BQU9DLGNBQWMsTUFBTSx5QkFBeUI7QUFFcEQsTUFBTUMsZ0JBQWdCLFNBQVNGLElBQUksQ0FBQztFQUNsQztBQUNGO0FBQ0E7QUFDQTtBQUNBO0VBQ0VHLFdBQVdBLENBQUVDLE9BQU8sRUFBRUMsUUFBUSxFQUFFQyxhQUFhLEVBQUc7SUFDOUMsS0FBSyxDQUFFRixPQUFRLENBQUM7SUFFaEIsSUFBSSxDQUFDQyxRQUFRLEdBQUdBLFFBQVEsQ0FBQyxDQUFDO0lBQzFCLElBQUksQ0FBQ0UsV0FBVyxHQUFHRixRQUFRLENBQUNHLFNBQVMsR0FBRyxDQUFDLEdBQUdILFFBQVEsQ0FBQ0ksVUFBVSxDQUFDLENBQUMsR0FBR0osUUFBUSxDQUFDSyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDckYsSUFBSSxDQUFDSixhQUFhLEdBQUdBLGFBQWEsSUFBSSxDQUFDLENBQUMsQ0FBQzs7SUFFekM7SUFDQSxJQUFLSyxNQUFNLEVBQUc7TUFDWkMsTUFBTSxDQUFDQyxNQUFNLElBQUlELE1BQU0sQ0FBQ0MsTUFBTSxDQUFFLElBQUssQ0FBQztJQUN4QztFQUNGO0FBQ0Y7QUFFQVosY0FBYyxDQUFDYSxRQUFRLENBQUUsa0JBQWtCLEVBQUVaLGdCQUFpQixDQUFDO0FBQy9ELGVBQWVBLGdCQUFnQiJ9