// Copyright 2015-2022, University of Colorado Boulder

/**
 * Base class for view-specific Properties. These are the Properties that are common to all screens.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import BooleanProperty from '../../../../axon/js/BooleanProperty.js';
import hookesLaw from '../../hookesLaw.js';
import HookesLawQueryParameters from '../HookesLawQueryParameters.js';
export default class ViewProperties {
  // is the applied force vector visible?

  // is the displacement vector visible?

  // is the equilibrium position visible?

  // are numeric values visible?

  constructor(tandem) {
    this.appliedForceVectorVisibleProperty = new BooleanProperty(HookesLawQueryParameters.checkAll, {
      tandem: tandem.createTandem('appliedForceVectorVisibleProperty')
    });
    this.displacementVectorVisibleProperty = new BooleanProperty(HookesLawQueryParameters.checkAll, {
      tandem: tandem.createTandem('displacementVectorVisibleProperty')
    });
    this.equilibriumPositionVisibleProperty = new BooleanProperty(HookesLawQueryParameters.checkAll, {
      tandem: tandem.createTandem('equilibriumPositionVisibleProperty')
    });
    this.valuesVisibleProperty = new BooleanProperty(HookesLawQueryParameters.checkAll, {
      tandem: tandem.createTandem('valuesVisibleProperty')
    });
  }
  reset() {
    this.appliedForceVectorVisibleProperty.reset();
    this.displacementVectorVisibleProperty.reset();
    this.equilibriumPositionVisibleProperty.reset();
    this.valuesVisibleProperty.reset();
  }
}
hookesLaw.register('ViewProperties', ViewProperties);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJCb29sZWFuUHJvcGVydHkiLCJob29rZXNMYXciLCJIb29rZXNMYXdRdWVyeVBhcmFtZXRlcnMiLCJWaWV3UHJvcGVydGllcyIsImNvbnN0cnVjdG9yIiwidGFuZGVtIiwiYXBwbGllZEZvcmNlVmVjdG9yVmlzaWJsZVByb3BlcnR5IiwiY2hlY2tBbGwiLCJjcmVhdGVUYW5kZW0iLCJkaXNwbGFjZW1lbnRWZWN0b3JWaXNpYmxlUHJvcGVydHkiLCJlcXVpbGlicml1bVBvc2l0aW9uVmlzaWJsZVByb3BlcnR5IiwidmFsdWVzVmlzaWJsZVByb3BlcnR5IiwicmVzZXQiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIlZpZXdQcm9wZXJ0aWVzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE1LTIwMjIsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIEJhc2UgY2xhc3MgZm9yIHZpZXctc3BlY2lmaWMgUHJvcGVydGllcy4gVGhlc2UgYXJlIHRoZSBQcm9wZXJ0aWVzIHRoYXQgYXJlIGNvbW1vbiB0byBhbGwgc2NyZWVucy5cclxuICpcclxuICogQGF1dGhvciBDaHJpcyBNYWxsZXkgKFBpeGVsWm9vbSwgSW5jLilcclxuICovXHJcblxyXG5pbXBvcnQgQm9vbGVhblByb3BlcnR5IGZyb20gJy4uLy4uLy4uLy4uL2F4b24vanMvQm9vbGVhblByb3BlcnR5LmpzJztcclxuaW1wb3J0IFByb3BlcnR5IGZyb20gJy4uLy4uLy4uLy4uL2F4b24vanMvUHJvcGVydHkuanMnO1xyXG5pbXBvcnQgVGFuZGVtIGZyb20gJy4uLy4uLy4uLy4uL3RhbmRlbS9qcy9UYW5kZW0uanMnO1xyXG5pbXBvcnQgaG9va2VzTGF3IGZyb20gJy4uLy4uL2hvb2tlc0xhdy5qcyc7XHJcbmltcG9ydCBIb29rZXNMYXdRdWVyeVBhcmFtZXRlcnMgZnJvbSAnLi4vSG9va2VzTGF3UXVlcnlQYXJhbWV0ZXJzLmpzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFZpZXdQcm9wZXJ0aWVzIHtcclxuXHJcbiAgLy8gaXMgdGhlIGFwcGxpZWQgZm9yY2UgdmVjdG9yIHZpc2libGU/XHJcbiAgcHVibGljIHJlYWRvbmx5IGFwcGxpZWRGb3JjZVZlY3RvclZpc2libGVQcm9wZXJ0eTogUHJvcGVydHk8Ym9vbGVhbj47XHJcblxyXG4gIC8vIGlzIHRoZSBkaXNwbGFjZW1lbnQgdmVjdG9yIHZpc2libGU/XHJcbiAgcHVibGljIHJlYWRvbmx5IGRpc3BsYWNlbWVudFZlY3RvclZpc2libGVQcm9wZXJ0eTogUHJvcGVydHk8Ym9vbGVhbj47XHJcblxyXG4gIC8vIGlzIHRoZSBlcXVpbGlicml1bSBwb3NpdGlvbiB2aXNpYmxlP1xyXG4gIHB1YmxpYyByZWFkb25seSBlcXVpbGlicml1bVBvc2l0aW9uVmlzaWJsZVByb3BlcnR5OiBQcm9wZXJ0eTxib29sZWFuPjtcclxuXHJcbiAgLy8gYXJlIG51bWVyaWMgdmFsdWVzIHZpc2libGU/XHJcbiAgcHVibGljIHJlYWRvbmx5IHZhbHVlc1Zpc2libGVQcm9wZXJ0eTogUHJvcGVydHk8Ym9vbGVhbj47XHJcblxyXG4gIHByb3RlY3RlZCBjb25zdHJ1Y3RvciggdGFuZGVtOiBUYW5kZW0gKSB7XHJcblxyXG4gICAgdGhpcy5hcHBsaWVkRm9yY2VWZWN0b3JWaXNpYmxlUHJvcGVydHkgPSBuZXcgQm9vbGVhblByb3BlcnR5KCBIb29rZXNMYXdRdWVyeVBhcmFtZXRlcnMuY2hlY2tBbGwsIHtcclxuICAgICAgdGFuZGVtOiB0YW5kZW0uY3JlYXRlVGFuZGVtKCAnYXBwbGllZEZvcmNlVmVjdG9yVmlzaWJsZVByb3BlcnR5JyApXHJcbiAgICB9ICk7XHJcblxyXG4gICAgdGhpcy5kaXNwbGFjZW1lbnRWZWN0b3JWaXNpYmxlUHJvcGVydHkgPSBuZXcgQm9vbGVhblByb3BlcnR5KCBIb29rZXNMYXdRdWVyeVBhcmFtZXRlcnMuY2hlY2tBbGwsIHtcclxuICAgICAgdGFuZGVtOiB0YW5kZW0uY3JlYXRlVGFuZGVtKCAnZGlzcGxhY2VtZW50VmVjdG9yVmlzaWJsZVByb3BlcnR5JyApXHJcbiAgICB9ICk7XHJcblxyXG4gICAgdGhpcy5lcXVpbGlicml1bVBvc2l0aW9uVmlzaWJsZVByb3BlcnR5ID0gbmV3IEJvb2xlYW5Qcm9wZXJ0eSggSG9va2VzTGF3UXVlcnlQYXJhbWV0ZXJzLmNoZWNrQWxsLCB7XHJcbiAgICAgIHRhbmRlbTogdGFuZGVtLmNyZWF0ZVRhbmRlbSggJ2VxdWlsaWJyaXVtUG9zaXRpb25WaXNpYmxlUHJvcGVydHknIClcclxuICAgIH0gKTtcclxuXHJcbiAgICB0aGlzLnZhbHVlc1Zpc2libGVQcm9wZXJ0eSA9IG5ldyBCb29sZWFuUHJvcGVydHkoIEhvb2tlc0xhd1F1ZXJ5UGFyYW1ldGVycy5jaGVja0FsbCwge1xyXG4gICAgICB0YW5kZW06IHRhbmRlbS5jcmVhdGVUYW5kZW0oICd2YWx1ZXNWaXNpYmxlUHJvcGVydHknIClcclxuICAgIH0gKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyByZXNldCgpOiB2b2lkIHtcclxuICAgIHRoaXMuYXBwbGllZEZvcmNlVmVjdG9yVmlzaWJsZVByb3BlcnR5LnJlc2V0KCk7XHJcbiAgICB0aGlzLmRpc3BsYWNlbWVudFZlY3RvclZpc2libGVQcm9wZXJ0eS5yZXNldCgpO1xyXG4gICAgdGhpcy5lcXVpbGlicml1bVBvc2l0aW9uVmlzaWJsZVByb3BlcnR5LnJlc2V0KCk7XHJcbiAgICB0aGlzLnZhbHVlc1Zpc2libGVQcm9wZXJ0eS5yZXNldCgpO1xyXG4gIH1cclxufVxyXG5cclxuaG9va2VzTGF3LnJlZ2lzdGVyKCAnVmlld1Byb3BlcnRpZXMnLCBWaWV3UHJvcGVydGllcyApOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxlQUFlLE1BQU0sd0NBQXdDO0FBR3BFLE9BQU9DLFNBQVMsTUFBTSxvQkFBb0I7QUFDMUMsT0FBT0Msd0JBQXdCLE1BQU0sZ0NBQWdDO0FBRXJFLGVBQWUsTUFBTUMsY0FBYyxDQUFDO0VBRWxDOztFQUdBOztFQUdBOztFQUdBOztFQUdVQyxXQUFXQSxDQUFFQyxNQUFjLEVBQUc7SUFFdEMsSUFBSSxDQUFDQyxpQ0FBaUMsR0FBRyxJQUFJTixlQUFlLENBQUVFLHdCQUF3QixDQUFDSyxRQUFRLEVBQUU7TUFDL0ZGLE1BQU0sRUFBRUEsTUFBTSxDQUFDRyxZQUFZLENBQUUsbUNBQW9DO0lBQ25FLENBQUUsQ0FBQztJQUVILElBQUksQ0FBQ0MsaUNBQWlDLEdBQUcsSUFBSVQsZUFBZSxDQUFFRSx3QkFBd0IsQ0FBQ0ssUUFBUSxFQUFFO01BQy9GRixNQUFNLEVBQUVBLE1BQU0sQ0FBQ0csWUFBWSxDQUFFLG1DQUFvQztJQUNuRSxDQUFFLENBQUM7SUFFSCxJQUFJLENBQUNFLGtDQUFrQyxHQUFHLElBQUlWLGVBQWUsQ0FBRUUsd0JBQXdCLENBQUNLLFFBQVEsRUFBRTtNQUNoR0YsTUFBTSxFQUFFQSxNQUFNLENBQUNHLFlBQVksQ0FBRSxvQ0FBcUM7SUFDcEUsQ0FBRSxDQUFDO0lBRUgsSUFBSSxDQUFDRyxxQkFBcUIsR0FBRyxJQUFJWCxlQUFlLENBQUVFLHdCQUF3QixDQUFDSyxRQUFRLEVBQUU7TUFDbkZGLE1BQU0sRUFBRUEsTUFBTSxDQUFDRyxZQUFZLENBQUUsdUJBQXdCO0lBQ3ZELENBQUUsQ0FBQztFQUNMO0VBRU9JLEtBQUtBLENBQUEsRUFBUztJQUNuQixJQUFJLENBQUNOLGlDQUFpQyxDQUFDTSxLQUFLLENBQUMsQ0FBQztJQUM5QyxJQUFJLENBQUNILGlDQUFpQyxDQUFDRyxLQUFLLENBQUMsQ0FBQztJQUM5QyxJQUFJLENBQUNGLGtDQUFrQyxDQUFDRSxLQUFLLENBQUMsQ0FBQztJQUMvQyxJQUFJLENBQUNELHFCQUFxQixDQUFDQyxLQUFLLENBQUMsQ0FBQztFQUNwQztBQUNGO0FBRUFYLFNBQVMsQ0FBQ1ksUUFBUSxDQUFFLGdCQUFnQixFQUFFVixjQUFlLENBQUMifQ==