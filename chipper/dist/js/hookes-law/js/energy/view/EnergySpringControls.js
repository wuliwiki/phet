// Copyright 2015-2022, University of Colorado Boulder

/**
 * Spring controls for the "Energy" screen.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import optionize, { combineOptions } from '../../../../phet-core/js/optionize.js';
import { HBox } from '../../../../scenery/js/imports.js';
import Panel from '../../../../sun/js/Panel.js';
import HookesLawConstants from '../../common/HookesLawConstants.js';
import DisplacementControl from '../../common/view/DisplacementControl.js';
import SpringConstantControl from '../../common/view/SpringConstantControl.js';
import hookesLaw from '../../hookesLaw.js';

// constants
const SPRING_PANEL_OPTIONS = HookesLawConstants.SPRING_PANEL_OPTIONS;
export default class EnergySpringControls extends HBox {
  /**
   * @param spring
   * @param numberOfInteractionsInProgressProperty - number of interactions in progress that affect displacement
   * @param providedOptions
   */
  constructor(spring, numberOfInteractionsInProgressProperty, providedOptions) {
    const options = optionize()({
      // HBoxOptions
      spacing: 10
    }, providedOptions);

    // Tandems for Panels that contain the controls
    const springConstantPanelTandem = options.tandem.createTandem('springConstantPanel');
    const displacementPanelTandem = options.tandem.createTandem('displacementPanel');
    const springConstantMajorTickValues = [];
    for (let value = spring.springConstantRange.min; value <= spring.springConstantRange.max; value += 100) {
      springConstantMajorTickValues.push(value);
    }
    const springConstantControl = new SpringConstantControl(spring.springConstantProperty, spring.springConstantRange, {
      majorTickValues: springConstantMajorTickValues,
      minorTickSpacing: 50,
      tandem: springConstantPanelTandem.createTandem('springConstantControl')
    });
    const displacementControl = new DisplacementControl(spring.displacementProperty, spring.displacementRange, numberOfInteractionsInProgressProperty, {
      tandem: displacementPanelTandem.createTandem('displacementControl')
    });
    options.children = [new Panel(springConstantControl, combineOptions({}, SPRING_PANEL_OPTIONS, {
      tandem: springConstantPanelTandem
    })), new Panel(displacementControl, combineOptions({}, SPRING_PANEL_OPTIONS, {
      tandem: displacementPanelTandem
    }))];
    super(options);
  }
}
hookesLaw.register('EnergySpringControls', EnergySpringControls);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJvcHRpb25pemUiLCJjb21iaW5lT3B0aW9ucyIsIkhCb3giLCJQYW5lbCIsIkhvb2tlc0xhd0NvbnN0YW50cyIsIkRpc3BsYWNlbWVudENvbnRyb2wiLCJTcHJpbmdDb25zdGFudENvbnRyb2wiLCJob29rZXNMYXciLCJTUFJJTkdfUEFORUxfT1BUSU9OUyIsIkVuZXJneVNwcmluZ0NvbnRyb2xzIiwiY29uc3RydWN0b3IiLCJzcHJpbmciLCJudW1iZXJPZkludGVyYWN0aW9uc0luUHJvZ3Jlc3NQcm9wZXJ0eSIsInByb3ZpZGVkT3B0aW9ucyIsIm9wdGlvbnMiLCJzcGFjaW5nIiwic3ByaW5nQ29uc3RhbnRQYW5lbFRhbmRlbSIsInRhbmRlbSIsImNyZWF0ZVRhbmRlbSIsImRpc3BsYWNlbWVudFBhbmVsVGFuZGVtIiwic3ByaW5nQ29uc3RhbnRNYWpvclRpY2tWYWx1ZXMiLCJ2YWx1ZSIsInNwcmluZ0NvbnN0YW50UmFuZ2UiLCJtaW4iLCJtYXgiLCJwdXNoIiwic3ByaW5nQ29uc3RhbnRDb250cm9sIiwic3ByaW5nQ29uc3RhbnRQcm9wZXJ0eSIsIm1ham9yVGlja1ZhbHVlcyIsIm1pbm9yVGlja1NwYWNpbmciLCJkaXNwbGFjZW1lbnRDb250cm9sIiwiZGlzcGxhY2VtZW50UHJvcGVydHkiLCJkaXNwbGFjZW1lbnRSYW5nZSIsImNoaWxkcmVuIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJFbmVyZ3lTcHJpbmdDb250cm9scy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxNS0yMDIyLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBTcHJpbmcgY29udHJvbHMgZm9yIHRoZSBcIkVuZXJneVwiIHNjcmVlbi5cclxuICpcclxuICogQGF1dGhvciBDaHJpcyBNYWxsZXkgKFBpeGVsWm9vbSwgSW5jLilcclxuICovXHJcblxyXG5pbXBvcnQgUHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vLi4vYXhvbi9qcy9Qcm9wZXJ0eS5qcyc7XHJcbmltcG9ydCBvcHRpb25pemUsIHsgY29tYmluZU9wdGlvbnMsIEVtcHR5U2VsZk9wdGlvbnMgfSBmcm9tICcuLi8uLi8uLi8uLi9waGV0LWNvcmUvanMvb3B0aW9uaXplLmpzJztcclxuaW1wb3J0IFBpY2tPcHRpb25hbCBmcm9tICcuLi8uLi8uLi8uLi9waGV0LWNvcmUvanMvdHlwZXMvUGlja09wdGlvbmFsLmpzJztcclxuaW1wb3J0IFBpY2tSZXF1aXJlZCBmcm9tICcuLi8uLi8uLi8uLi9waGV0LWNvcmUvanMvdHlwZXMvUGlja1JlcXVpcmVkLmpzJztcclxuaW1wb3J0IHsgSEJveCwgSEJveE9wdGlvbnMsIE5vZGVUcmFuc2xhdGlvbk9wdGlvbnMgfSBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgUGFuZWwsIHsgUGFuZWxPcHRpb25zIH0gZnJvbSAnLi4vLi4vLi4vLi4vc3VuL2pzL1BhbmVsLmpzJztcclxuaW1wb3J0IEhvb2tlc0xhd0NvbnN0YW50cyBmcm9tICcuLi8uLi9jb21tb24vSG9va2VzTGF3Q29uc3RhbnRzLmpzJztcclxuaW1wb3J0IFNwcmluZyBmcm9tICcuLi8uLi9jb21tb24vbW9kZWwvU3ByaW5nLmpzJztcclxuaW1wb3J0IERpc3BsYWNlbWVudENvbnRyb2wgZnJvbSAnLi4vLi4vY29tbW9uL3ZpZXcvRGlzcGxhY2VtZW50Q29udHJvbC5qcyc7XHJcbmltcG9ydCBTcHJpbmdDb25zdGFudENvbnRyb2wgZnJvbSAnLi4vLi4vY29tbW9uL3ZpZXcvU3ByaW5nQ29uc3RhbnRDb250cm9sLmpzJztcclxuaW1wb3J0IGhvb2tlc0xhdyBmcm9tICcuLi8uLi9ob29rZXNMYXcuanMnO1xyXG5cclxuLy8gY29uc3RhbnRzXHJcbmNvbnN0IFNQUklOR19QQU5FTF9PUFRJT05TID0gSG9va2VzTGF3Q29uc3RhbnRzLlNQUklOR19QQU5FTF9PUFRJT05TO1xyXG5cclxudHlwZSBTZWxmT3B0aW9ucyA9IEVtcHR5U2VsZk9wdGlvbnM7XHJcblxyXG50eXBlIEVuZXJneVNwcmluZ0NvbnRyb2xzT3B0aW9ucyA9IFNlbGZPcHRpb25zICYgTm9kZVRyYW5zbGF0aW9uT3B0aW9ucyAmXHJcbiAgUGlja09wdGlvbmFsPEhCb3hPcHRpb25zLCAnbWF4V2lkdGgnPiAmIFBpY2tSZXF1aXJlZDxIQm94T3B0aW9ucywgJ3RhbmRlbSc+O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRW5lcmd5U3ByaW5nQ29udHJvbHMgZXh0ZW5kcyBIQm94IHtcclxuICAvKipcclxuICAgKiBAcGFyYW0gc3ByaW5nXHJcbiAgICogQHBhcmFtIG51bWJlck9mSW50ZXJhY3Rpb25zSW5Qcm9ncmVzc1Byb3BlcnR5IC0gbnVtYmVyIG9mIGludGVyYWN0aW9ucyBpbiBwcm9ncmVzcyB0aGF0IGFmZmVjdCBkaXNwbGFjZW1lbnRcclxuICAgKiBAcGFyYW0gcHJvdmlkZWRPcHRpb25zXHJcbiAgICovXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKCBzcHJpbmc6IFNwcmluZywgbnVtYmVyT2ZJbnRlcmFjdGlvbnNJblByb2dyZXNzUHJvcGVydHk6IFByb3BlcnR5PG51bWJlcj4sXHJcbiAgICAgICAgICAgICAgICAgICAgICBwcm92aWRlZE9wdGlvbnM6IEVuZXJneVNwcmluZ0NvbnRyb2xzT3B0aW9ucyApIHtcclxuXHJcbiAgICBjb25zdCBvcHRpb25zID0gb3B0aW9uaXplPEVuZXJneVNwcmluZ0NvbnRyb2xzT3B0aW9ucywgU2VsZk9wdGlvbnMsIEhCb3hPcHRpb25zPigpKCB7XHJcblxyXG4gICAgICAvLyBIQm94T3B0aW9uc1xyXG4gICAgICBzcGFjaW5nOiAxMFxyXG4gICAgfSwgcHJvdmlkZWRPcHRpb25zICk7XHJcblxyXG4gICAgLy8gVGFuZGVtcyBmb3IgUGFuZWxzIHRoYXQgY29udGFpbiB0aGUgY29udHJvbHNcclxuICAgIGNvbnN0IHNwcmluZ0NvbnN0YW50UGFuZWxUYW5kZW0gPSBvcHRpb25zLnRhbmRlbS5jcmVhdGVUYW5kZW0oICdzcHJpbmdDb25zdGFudFBhbmVsJyApO1xyXG4gICAgY29uc3QgZGlzcGxhY2VtZW50UGFuZWxUYW5kZW0gPSBvcHRpb25zLnRhbmRlbS5jcmVhdGVUYW5kZW0oICdkaXNwbGFjZW1lbnRQYW5lbCcgKTtcclxuXHJcbiAgICBjb25zdCBzcHJpbmdDb25zdGFudE1ham9yVGlja1ZhbHVlcyA9IFtdO1xyXG4gICAgZm9yICggbGV0IHZhbHVlID0gc3ByaW5nLnNwcmluZ0NvbnN0YW50UmFuZ2UubWluOyB2YWx1ZSA8PSBzcHJpbmcuc3ByaW5nQ29uc3RhbnRSYW5nZS5tYXg7IHZhbHVlICs9IDEwMCApIHtcclxuICAgICAgc3ByaW5nQ29uc3RhbnRNYWpvclRpY2tWYWx1ZXMucHVzaCggdmFsdWUgKTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBzcHJpbmdDb25zdGFudENvbnRyb2wgPSBuZXcgU3ByaW5nQ29uc3RhbnRDb250cm9sKCBzcHJpbmcuc3ByaW5nQ29uc3RhbnRQcm9wZXJ0eSwgc3ByaW5nLnNwcmluZ0NvbnN0YW50UmFuZ2UsIHtcclxuICAgICAgbWFqb3JUaWNrVmFsdWVzOiBzcHJpbmdDb25zdGFudE1ham9yVGlja1ZhbHVlcyxcclxuICAgICAgbWlub3JUaWNrU3BhY2luZzogNTAsXHJcbiAgICAgIHRhbmRlbTogc3ByaW5nQ29uc3RhbnRQYW5lbFRhbmRlbS5jcmVhdGVUYW5kZW0oICdzcHJpbmdDb25zdGFudENvbnRyb2wnIClcclxuICAgIH0gKTtcclxuXHJcbiAgICBjb25zdCBkaXNwbGFjZW1lbnRDb250cm9sID0gbmV3IERpc3BsYWNlbWVudENvbnRyb2woIHNwcmluZy5kaXNwbGFjZW1lbnRQcm9wZXJ0eSwgc3ByaW5nLmRpc3BsYWNlbWVudFJhbmdlLCBudW1iZXJPZkludGVyYWN0aW9uc0luUHJvZ3Jlc3NQcm9wZXJ0eSwge1xyXG4gICAgICB0YW5kZW06IGRpc3BsYWNlbWVudFBhbmVsVGFuZGVtLmNyZWF0ZVRhbmRlbSggJ2Rpc3BsYWNlbWVudENvbnRyb2wnIClcclxuICAgIH0gKTtcclxuXHJcbiAgICBvcHRpb25zLmNoaWxkcmVuID0gW1xyXG4gICAgICBuZXcgUGFuZWwoIHNwcmluZ0NvbnN0YW50Q29udHJvbCxcclxuICAgICAgICBjb21iaW5lT3B0aW9uczxQYW5lbE9wdGlvbnM+KCB7fSwgU1BSSU5HX1BBTkVMX09QVElPTlMsIHsgdGFuZGVtOiBzcHJpbmdDb25zdGFudFBhbmVsVGFuZGVtIH0gKSApLFxyXG4gICAgICBuZXcgUGFuZWwoIGRpc3BsYWNlbWVudENvbnRyb2wsXHJcbiAgICAgICAgY29tYmluZU9wdGlvbnM8UGFuZWxPcHRpb25zPigge30sIFNQUklOR19QQU5FTF9PUFRJT05TLCB7IHRhbmRlbTogZGlzcGxhY2VtZW50UGFuZWxUYW5kZW0gfSApIClcclxuICAgIF07XHJcblxyXG4gICAgc3VwZXIoIG9wdGlvbnMgKTtcclxuICB9XHJcbn1cclxuXHJcbmhvb2tlc0xhdy5yZWdpc3RlciggJ0VuZXJneVNwcmluZ0NvbnRyb2xzJywgRW5lcmd5U3ByaW5nQ29udHJvbHMgKTsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBR0EsT0FBT0EsU0FBUyxJQUFJQyxjQUFjLFFBQTBCLHVDQUF1QztBQUduRyxTQUFTQyxJQUFJLFFBQTZDLG1DQUFtQztBQUM3RixPQUFPQyxLQUFLLE1BQXdCLDZCQUE2QjtBQUNqRSxPQUFPQyxrQkFBa0IsTUFBTSxvQ0FBb0M7QUFFbkUsT0FBT0MsbUJBQW1CLE1BQU0sMENBQTBDO0FBQzFFLE9BQU9DLHFCQUFxQixNQUFNLDRDQUE0QztBQUM5RSxPQUFPQyxTQUFTLE1BQU0sb0JBQW9COztBQUUxQztBQUNBLE1BQU1DLG9CQUFvQixHQUFHSixrQkFBa0IsQ0FBQ0ksb0JBQW9CO0FBT3BFLGVBQWUsTUFBTUMsb0JBQW9CLFNBQVNQLElBQUksQ0FBQztFQUNyRDtBQUNGO0FBQ0E7QUFDQTtBQUNBO0VBQ1NRLFdBQVdBLENBQUVDLE1BQWMsRUFBRUMsc0NBQXdELEVBQ3hFQyxlQUE0QyxFQUFHO0lBRWpFLE1BQU1DLE9BQU8sR0FBR2QsU0FBUyxDQUF3RCxDQUFDLENBQUU7TUFFbEY7TUFDQWUsT0FBTyxFQUFFO0lBQ1gsQ0FBQyxFQUFFRixlQUFnQixDQUFDOztJQUVwQjtJQUNBLE1BQU1HLHlCQUF5QixHQUFHRixPQUFPLENBQUNHLE1BQU0sQ0FBQ0MsWUFBWSxDQUFFLHFCQUFzQixDQUFDO0lBQ3RGLE1BQU1DLHVCQUF1QixHQUFHTCxPQUFPLENBQUNHLE1BQU0sQ0FBQ0MsWUFBWSxDQUFFLG1CQUFvQixDQUFDO0lBRWxGLE1BQU1FLDZCQUE2QixHQUFHLEVBQUU7SUFDeEMsS0FBTSxJQUFJQyxLQUFLLEdBQUdWLE1BQU0sQ0FBQ1csbUJBQW1CLENBQUNDLEdBQUcsRUFBRUYsS0FBSyxJQUFJVixNQUFNLENBQUNXLG1CQUFtQixDQUFDRSxHQUFHLEVBQUVILEtBQUssSUFBSSxHQUFHLEVBQUc7TUFDeEdELDZCQUE2QixDQUFDSyxJQUFJLENBQUVKLEtBQU0sQ0FBQztJQUM3QztJQUVBLE1BQU1LLHFCQUFxQixHQUFHLElBQUlwQixxQkFBcUIsQ0FBRUssTUFBTSxDQUFDZ0Isc0JBQXNCLEVBQUVoQixNQUFNLENBQUNXLG1CQUFtQixFQUFFO01BQ2xITSxlQUFlLEVBQUVSLDZCQUE2QjtNQUM5Q1MsZ0JBQWdCLEVBQUUsRUFBRTtNQUNwQlosTUFBTSxFQUFFRCx5QkFBeUIsQ0FBQ0UsWUFBWSxDQUFFLHVCQUF3QjtJQUMxRSxDQUFFLENBQUM7SUFFSCxNQUFNWSxtQkFBbUIsR0FBRyxJQUFJekIsbUJBQW1CLENBQUVNLE1BQU0sQ0FBQ29CLG9CQUFvQixFQUFFcEIsTUFBTSxDQUFDcUIsaUJBQWlCLEVBQUVwQixzQ0FBc0MsRUFBRTtNQUNsSkssTUFBTSxFQUFFRSx1QkFBdUIsQ0FBQ0QsWUFBWSxDQUFFLHFCQUFzQjtJQUN0RSxDQUFFLENBQUM7SUFFSEosT0FBTyxDQUFDbUIsUUFBUSxHQUFHLENBQ2pCLElBQUk5QixLQUFLLENBQUV1QixxQkFBcUIsRUFDOUJ6QixjQUFjLENBQWdCLENBQUMsQ0FBQyxFQUFFTyxvQkFBb0IsRUFBRTtNQUFFUyxNQUFNLEVBQUVEO0lBQTBCLENBQUUsQ0FBRSxDQUFDLEVBQ25HLElBQUliLEtBQUssQ0FBRTJCLG1CQUFtQixFQUM1QjdCLGNBQWMsQ0FBZ0IsQ0FBQyxDQUFDLEVBQUVPLG9CQUFvQixFQUFFO01BQUVTLE1BQU0sRUFBRUU7SUFBd0IsQ0FBRSxDQUFFLENBQUMsQ0FDbEc7SUFFRCxLQUFLLENBQUVMLE9BQVEsQ0FBQztFQUNsQjtBQUNGO0FBRUFQLFNBQVMsQ0FBQzJCLFFBQVEsQ0FBRSxzQkFBc0IsRUFBRXpCLG9CQUFxQixDQUFDIn0=