// Copyright 2018-2022, University of Colorado Boulder

/**
 * The "Generic" screen, used in "Area Model: Multiplication" and "Area Model: Algebra"
 *
 * @author Jonathan Olson <jonathan.olson@colorado.edu>
 */

import Screen from '../../../joist/js/Screen.js';
import ScreenIcon from '../../../joist/js/ScreenIcon.js';
import { Image } from '../../../scenery/js/imports.js';
import genericScreenIcon_png from '../../mipmaps/genericScreenIcon_png.js';
import areaModelCommon from '../areaModelCommon.js';
import AreaModelCommonStrings from '../AreaModelCommonStrings.js';
import AreaModelCommonColors from '../common/view/AreaModelCommonColors.js';
import GenericAreaModel from '../generic/model/GenericAreaModel.js';
import GenericAreaScreenView from '../generic/view/GenericAreaScreenView.js';
class GenericScreen extends Screen {
  constructor() {
    const options = {
      name: AreaModelCommonStrings.screen.genericStringProperty,
      backgroundColorProperty: AreaModelCommonColors.backgroundProperty,
      homeScreenIcon: new ScreenIcon(new Image(genericScreenIcon_png), {
        maxIconWidthProportion: 1,
        maxIconHeightProportion: 1
      })
    };
    super(() => {
      return new GenericAreaModel({
        allowExponents: false
      });
    }, model => new GenericAreaScreenView(model, 0), options);
  }
}
areaModelCommon.register('GenericScreen', GenericScreen);
export default GenericScreen;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTY3JlZW4iLCJTY3JlZW5JY29uIiwiSW1hZ2UiLCJnZW5lcmljU2NyZWVuSWNvbl9wbmciLCJhcmVhTW9kZWxDb21tb24iLCJBcmVhTW9kZWxDb21tb25TdHJpbmdzIiwiQXJlYU1vZGVsQ29tbW9uQ29sb3JzIiwiR2VuZXJpY0FyZWFNb2RlbCIsIkdlbmVyaWNBcmVhU2NyZWVuVmlldyIsIkdlbmVyaWNTY3JlZW4iLCJjb25zdHJ1Y3RvciIsIm9wdGlvbnMiLCJuYW1lIiwic2NyZWVuIiwiZ2VuZXJpY1N0cmluZ1Byb3BlcnR5IiwiYmFja2dyb3VuZENvbG9yUHJvcGVydHkiLCJiYWNrZ3JvdW5kUHJvcGVydHkiLCJob21lU2NyZWVuSWNvbiIsIm1heEljb25XaWR0aFByb3BvcnRpb24iLCJtYXhJY29uSGVpZ2h0UHJvcG9ydGlvbiIsImFsbG93RXhwb25lbnRzIiwibW9kZWwiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIkdlbmVyaWNTY3JlZW4uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTgtMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogVGhlIFwiR2VuZXJpY1wiIHNjcmVlbiwgdXNlZCBpbiBcIkFyZWEgTW9kZWw6IE11bHRpcGxpY2F0aW9uXCIgYW5kIFwiQXJlYSBNb2RlbDogQWxnZWJyYVwiXHJcbiAqXHJcbiAqIEBhdXRob3IgSm9uYXRoYW4gT2xzb24gPGpvbmF0aGFuLm9sc29uQGNvbG9yYWRvLmVkdT5cclxuICovXHJcblxyXG5pbXBvcnQgU2NyZWVuIGZyb20gJy4uLy4uLy4uL2pvaXN0L2pzL1NjcmVlbi5qcyc7XHJcbmltcG9ydCBTY3JlZW5JY29uIGZyb20gJy4uLy4uLy4uL2pvaXN0L2pzL1NjcmVlbkljb24uanMnO1xyXG5pbXBvcnQgeyBJbWFnZSB9IGZyb20gJy4uLy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XHJcbmltcG9ydCBnZW5lcmljU2NyZWVuSWNvbl9wbmcgZnJvbSAnLi4vLi4vbWlwbWFwcy9nZW5lcmljU2NyZWVuSWNvbl9wbmcuanMnO1xyXG5pbXBvcnQgYXJlYU1vZGVsQ29tbW9uIGZyb20gJy4uL2FyZWFNb2RlbENvbW1vbi5qcyc7XHJcbmltcG9ydCBBcmVhTW9kZWxDb21tb25TdHJpbmdzIGZyb20gJy4uL0FyZWFNb2RlbENvbW1vblN0cmluZ3MuanMnO1xyXG5pbXBvcnQgQXJlYU1vZGVsQ29tbW9uQ29sb3JzIGZyb20gJy4uL2NvbW1vbi92aWV3L0FyZWFNb2RlbENvbW1vbkNvbG9ycy5qcyc7XHJcbmltcG9ydCBHZW5lcmljQXJlYU1vZGVsIGZyb20gJy4uL2dlbmVyaWMvbW9kZWwvR2VuZXJpY0FyZWFNb2RlbC5qcyc7XHJcbmltcG9ydCBHZW5lcmljQXJlYVNjcmVlblZpZXcgZnJvbSAnLi4vZ2VuZXJpYy92aWV3L0dlbmVyaWNBcmVhU2NyZWVuVmlldy5qcyc7XHJcblxyXG5jbGFzcyBHZW5lcmljU2NyZWVuIGV4dGVuZHMgU2NyZWVuIHtcclxuICBjb25zdHJ1Y3RvcigpIHtcclxuXHJcbiAgICBjb25zdCBvcHRpb25zID0ge1xyXG4gICAgICBuYW1lOiBBcmVhTW9kZWxDb21tb25TdHJpbmdzLnNjcmVlbi5nZW5lcmljU3RyaW5nUHJvcGVydHksXHJcbiAgICAgIGJhY2tncm91bmRDb2xvclByb3BlcnR5OiBBcmVhTW9kZWxDb21tb25Db2xvcnMuYmFja2dyb3VuZFByb3BlcnR5LFxyXG4gICAgICBob21lU2NyZWVuSWNvbjogbmV3IFNjcmVlbkljb24oIG5ldyBJbWFnZSggZ2VuZXJpY1NjcmVlbkljb25fcG5nICksIHtcclxuICAgICAgICBtYXhJY29uV2lkdGhQcm9wb3J0aW9uOiAxLFxyXG4gICAgICAgIG1heEljb25IZWlnaHRQcm9wb3J0aW9uOiAxXHJcbiAgICAgIH0gKVxyXG4gICAgfTtcclxuXHJcbiAgICBzdXBlcihcclxuICAgICAgKCkgPT4ge1xyXG4gICAgICAgIHJldHVybiBuZXcgR2VuZXJpY0FyZWFNb2RlbCgge1xyXG4gICAgICAgICAgYWxsb3dFeHBvbmVudHM6IGZhbHNlXHJcbiAgICAgICAgfSApO1xyXG4gICAgICB9LFxyXG4gICAgICBtb2RlbCA9PiBuZXcgR2VuZXJpY0FyZWFTY3JlZW5WaWV3KCBtb2RlbCwgMCApLFxyXG4gICAgICBvcHRpb25zXHJcbiAgICApO1xyXG4gIH1cclxufVxyXG5cclxuYXJlYU1vZGVsQ29tbW9uLnJlZ2lzdGVyKCAnR2VuZXJpY1NjcmVlbicsIEdlbmVyaWNTY3JlZW4gKTtcclxuZXhwb3J0IGRlZmF1bHQgR2VuZXJpY1NjcmVlbjsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsTUFBTSxNQUFNLDZCQUE2QjtBQUNoRCxPQUFPQyxVQUFVLE1BQU0saUNBQWlDO0FBQ3hELFNBQVNDLEtBQUssUUFBUSxnQ0FBZ0M7QUFDdEQsT0FBT0MscUJBQXFCLE1BQU0sd0NBQXdDO0FBQzFFLE9BQU9DLGVBQWUsTUFBTSx1QkFBdUI7QUFDbkQsT0FBT0Msc0JBQXNCLE1BQU0sOEJBQThCO0FBQ2pFLE9BQU9DLHFCQUFxQixNQUFNLHlDQUF5QztBQUMzRSxPQUFPQyxnQkFBZ0IsTUFBTSxzQ0FBc0M7QUFDbkUsT0FBT0MscUJBQXFCLE1BQU0sMENBQTBDO0FBRTVFLE1BQU1DLGFBQWEsU0FBU1QsTUFBTSxDQUFDO0VBQ2pDVSxXQUFXQSxDQUFBLEVBQUc7SUFFWixNQUFNQyxPQUFPLEdBQUc7TUFDZEMsSUFBSSxFQUFFUCxzQkFBc0IsQ0FBQ1EsTUFBTSxDQUFDQyxxQkFBcUI7TUFDekRDLHVCQUF1QixFQUFFVCxxQkFBcUIsQ0FBQ1Usa0JBQWtCO01BQ2pFQyxjQUFjLEVBQUUsSUFBSWhCLFVBQVUsQ0FBRSxJQUFJQyxLQUFLLENBQUVDLHFCQUFzQixDQUFDLEVBQUU7UUFDbEVlLHNCQUFzQixFQUFFLENBQUM7UUFDekJDLHVCQUF1QixFQUFFO01BQzNCLENBQUU7SUFDSixDQUFDO0lBRUQsS0FBSyxDQUNILE1BQU07TUFDSixPQUFPLElBQUlaLGdCQUFnQixDQUFFO1FBQzNCYSxjQUFjLEVBQUU7TUFDbEIsQ0FBRSxDQUFDO0lBQ0wsQ0FBQyxFQUNEQyxLQUFLLElBQUksSUFBSWIscUJBQXFCLENBQUVhLEtBQUssRUFBRSxDQUFFLENBQUMsRUFDOUNWLE9BQ0YsQ0FBQztFQUNIO0FBQ0Y7QUFFQVAsZUFBZSxDQUFDa0IsUUFBUSxDQUFFLGVBQWUsRUFBRWIsYUFBYyxDQUFDO0FBQzFELGVBQWVBLGFBQWEifQ==