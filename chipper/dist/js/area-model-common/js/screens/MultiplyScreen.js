// Copyright 2018-2022, University of Colorado Boulder

/**
 * The "Multiply" screen of "Area Model: Introduction"
 *
 * @author Jonathan Olson <jonathan.olson@colorado.edu>
 */

import Screen from '../../../joist/js/Screen.js';
import ScreenIcon from '../../../joist/js/ScreenIcon.js';
import merge from '../../../phet-core/js/merge.js';
import { Image } from '../../../scenery/js/imports.js';
import multiplyScreenIcon_png from '../../mipmaps/multiplyScreenIcon_png.js';
import multiplyScreenNavbar_png from '../../mipmaps/multiplyScreenNavbar_png.js';
import areaModelCommon from '../areaModelCommon.js';
import AreaModelCommonStrings from '../AreaModelCommonStrings.js';
import PartialProductsChoice from '../common/model/PartialProductsChoice.js';
import AreaModelCommonColors from '../common/view/AreaModelCommonColors.js';
import PartitionLineChoice from '../proportional/model/PartitionLineChoice.js';
import ProportionalAreaModel from '../proportional/model/ProportionalAreaModel.js';
import ProportionalAreaScreenView from '../proportional/view/ProportionalAreaScreenView.js';
class MultiplyScreen extends Screen {
  constructor() {
    const options = {
      name: AreaModelCommonStrings.screen.multiplyStringProperty,
      backgroundColorProperty: AreaModelCommonColors.backgroundProperty,
      homeScreenIcon: new ScreenIcon(new Image(multiplyScreenIcon_png), {
        maxIconWidthProportion: 1,
        maxIconHeightProportion: 1
      }),
      navigationBarIcon: new ScreenIcon(new Image(multiplyScreenNavbar_png), {
        maxIconWidthProportion: 1,
        maxIconHeightProportion: 1
      }),
      // pdom
      descriptionContent: AreaModelCommonStrings.a11y.multiplyDescription
    };
    const commonAreaOptions = {
      minimumSize: 1,
      initialWidth: 1,
      initialHeight: 1,
      snapSize: 1,
      gridSpacing: 1,
      partitionLineChoice: PartitionLineChoice.NONE,
      tilesAvailable: false,
      productsAvailable: false,
      countingAvailable: true
    };
    super(() => {
      return new ProportionalAreaModel([merge({
        maximumSize: 10
      }, commonAreaOptions), merge({
        maximumSize: 12
      }, commonAreaOptions)], {
        initialPartialProductsChoice: PartialProductsChoice.HIDDEN
      });
    }, model => {
      return new ProportionalAreaScreenView(model, {
        showProductsSelection: false,
        showCalculationSelection: false,
        useTileLikeBackground: true,
        useSimplifiedNames: true,
        useLargeArea: true
      });
    }, options);
  }
}
areaModelCommon.register('MultiplyScreen', MultiplyScreen);
export default MultiplyScreen;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTY3JlZW4iLCJTY3JlZW5JY29uIiwibWVyZ2UiLCJJbWFnZSIsIm11bHRpcGx5U2NyZWVuSWNvbl9wbmciLCJtdWx0aXBseVNjcmVlbk5hdmJhcl9wbmciLCJhcmVhTW9kZWxDb21tb24iLCJBcmVhTW9kZWxDb21tb25TdHJpbmdzIiwiUGFydGlhbFByb2R1Y3RzQ2hvaWNlIiwiQXJlYU1vZGVsQ29tbW9uQ29sb3JzIiwiUGFydGl0aW9uTGluZUNob2ljZSIsIlByb3BvcnRpb25hbEFyZWFNb2RlbCIsIlByb3BvcnRpb25hbEFyZWFTY3JlZW5WaWV3IiwiTXVsdGlwbHlTY3JlZW4iLCJjb25zdHJ1Y3RvciIsIm9wdGlvbnMiLCJuYW1lIiwic2NyZWVuIiwibXVsdGlwbHlTdHJpbmdQcm9wZXJ0eSIsImJhY2tncm91bmRDb2xvclByb3BlcnR5IiwiYmFja2dyb3VuZFByb3BlcnR5IiwiaG9tZVNjcmVlbkljb24iLCJtYXhJY29uV2lkdGhQcm9wb3J0aW9uIiwibWF4SWNvbkhlaWdodFByb3BvcnRpb24iLCJuYXZpZ2F0aW9uQmFySWNvbiIsImRlc2NyaXB0aW9uQ29udGVudCIsImExMXkiLCJtdWx0aXBseURlc2NyaXB0aW9uIiwiY29tbW9uQXJlYU9wdGlvbnMiLCJtaW5pbXVtU2l6ZSIsImluaXRpYWxXaWR0aCIsImluaXRpYWxIZWlnaHQiLCJzbmFwU2l6ZSIsImdyaWRTcGFjaW5nIiwicGFydGl0aW9uTGluZUNob2ljZSIsIk5PTkUiLCJ0aWxlc0F2YWlsYWJsZSIsInByb2R1Y3RzQXZhaWxhYmxlIiwiY291bnRpbmdBdmFpbGFibGUiLCJtYXhpbXVtU2l6ZSIsImluaXRpYWxQYXJ0aWFsUHJvZHVjdHNDaG9pY2UiLCJISURERU4iLCJtb2RlbCIsInNob3dQcm9kdWN0c1NlbGVjdGlvbiIsInNob3dDYWxjdWxhdGlvblNlbGVjdGlvbiIsInVzZVRpbGVMaWtlQmFja2dyb3VuZCIsInVzZVNpbXBsaWZpZWROYW1lcyIsInVzZUxhcmdlQXJlYSIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiTXVsdGlwbHlTY3JlZW4uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTgtMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogVGhlIFwiTXVsdGlwbHlcIiBzY3JlZW4gb2YgXCJBcmVhIE1vZGVsOiBJbnRyb2R1Y3Rpb25cIlxyXG4gKlxyXG4gKiBAYXV0aG9yIEpvbmF0aGFuIE9sc29uIDxqb25hdGhhbi5vbHNvbkBjb2xvcmFkby5lZHU+XHJcbiAqL1xyXG5cclxuaW1wb3J0IFNjcmVlbiBmcm9tICcuLi8uLi8uLi9qb2lzdC9qcy9TY3JlZW4uanMnO1xyXG5pbXBvcnQgU2NyZWVuSWNvbiBmcm9tICcuLi8uLi8uLi9qb2lzdC9qcy9TY3JlZW5JY29uLmpzJztcclxuaW1wb3J0IG1lcmdlIGZyb20gJy4uLy4uLy4uL3BoZXQtY29yZS9qcy9tZXJnZS5qcyc7XHJcbmltcG9ydCB7IEltYWdlIH0gZnJvbSAnLi4vLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IG11bHRpcGx5U2NyZWVuSWNvbl9wbmcgZnJvbSAnLi4vLi4vbWlwbWFwcy9tdWx0aXBseVNjcmVlbkljb25fcG5nLmpzJztcclxuaW1wb3J0IG11bHRpcGx5U2NyZWVuTmF2YmFyX3BuZyBmcm9tICcuLi8uLi9taXBtYXBzL211bHRpcGx5U2NyZWVuTmF2YmFyX3BuZy5qcyc7XHJcbmltcG9ydCBhcmVhTW9kZWxDb21tb24gZnJvbSAnLi4vYXJlYU1vZGVsQ29tbW9uLmpzJztcclxuaW1wb3J0IEFyZWFNb2RlbENvbW1vblN0cmluZ3MgZnJvbSAnLi4vQXJlYU1vZGVsQ29tbW9uU3RyaW5ncy5qcyc7XHJcbmltcG9ydCBQYXJ0aWFsUHJvZHVjdHNDaG9pY2UgZnJvbSAnLi4vY29tbW9uL21vZGVsL1BhcnRpYWxQcm9kdWN0c0Nob2ljZS5qcyc7XHJcbmltcG9ydCBBcmVhTW9kZWxDb21tb25Db2xvcnMgZnJvbSAnLi4vY29tbW9uL3ZpZXcvQXJlYU1vZGVsQ29tbW9uQ29sb3JzLmpzJztcclxuaW1wb3J0IFBhcnRpdGlvbkxpbmVDaG9pY2UgZnJvbSAnLi4vcHJvcG9ydGlvbmFsL21vZGVsL1BhcnRpdGlvbkxpbmVDaG9pY2UuanMnO1xyXG5pbXBvcnQgUHJvcG9ydGlvbmFsQXJlYU1vZGVsIGZyb20gJy4uL3Byb3BvcnRpb25hbC9tb2RlbC9Qcm9wb3J0aW9uYWxBcmVhTW9kZWwuanMnO1xyXG5pbXBvcnQgUHJvcG9ydGlvbmFsQXJlYVNjcmVlblZpZXcgZnJvbSAnLi4vcHJvcG9ydGlvbmFsL3ZpZXcvUHJvcG9ydGlvbmFsQXJlYVNjcmVlblZpZXcuanMnO1xyXG5cclxuY2xhc3MgTXVsdGlwbHlTY3JlZW4gZXh0ZW5kcyBTY3JlZW4ge1xyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG5cclxuICAgIGNvbnN0IG9wdGlvbnMgPSB7XHJcbiAgICAgIG5hbWU6IEFyZWFNb2RlbENvbW1vblN0cmluZ3Muc2NyZWVuLm11bHRpcGx5U3RyaW5nUHJvcGVydHksXHJcbiAgICAgIGJhY2tncm91bmRDb2xvclByb3BlcnR5OiBBcmVhTW9kZWxDb21tb25Db2xvcnMuYmFja2dyb3VuZFByb3BlcnR5LFxyXG4gICAgICBob21lU2NyZWVuSWNvbjogbmV3IFNjcmVlbkljb24oIG5ldyBJbWFnZSggbXVsdGlwbHlTY3JlZW5JY29uX3BuZyApLCB7XHJcbiAgICAgICAgbWF4SWNvbldpZHRoUHJvcG9ydGlvbjogMSxcclxuICAgICAgICBtYXhJY29uSGVpZ2h0UHJvcG9ydGlvbjogMVxyXG4gICAgICB9ICksXHJcbiAgICAgIG5hdmlnYXRpb25CYXJJY29uOiBuZXcgU2NyZWVuSWNvbiggbmV3IEltYWdlKCBtdWx0aXBseVNjcmVlbk5hdmJhcl9wbmcgKSwge1xyXG4gICAgICAgIG1heEljb25XaWR0aFByb3BvcnRpb246IDEsXHJcbiAgICAgICAgbWF4SWNvbkhlaWdodFByb3BvcnRpb246IDFcclxuICAgICAgfSApLFxyXG5cclxuICAgICAgLy8gcGRvbVxyXG4gICAgICBkZXNjcmlwdGlvbkNvbnRlbnQ6IEFyZWFNb2RlbENvbW1vblN0cmluZ3MuYTExeS5tdWx0aXBseURlc2NyaXB0aW9uXHJcbiAgICB9O1xyXG5cclxuICAgIGNvbnN0IGNvbW1vbkFyZWFPcHRpb25zID0ge1xyXG4gICAgICBtaW5pbXVtU2l6ZTogMSxcclxuICAgICAgaW5pdGlhbFdpZHRoOiAxLFxyXG4gICAgICBpbml0aWFsSGVpZ2h0OiAxLFxyXG4gICAgICBzbmFwU2l6ZTogMSxcclxuICAgICAgZ3JpZFNwYWNpbmc6IDEsXHJcbiAgICAgIHBhcnRpdGlvbkxpbmVDaG9pY2U6IFBhcnRpdGlvbkxpbmVDaG9pY2UuTk9ORSxcclxuICAgICAgdGlsZXNBdmFpbGFibGU6IGZhbHNlLFxyXG4gICAgICBwcm9kdWN0c0F2YWlsYWJsZTogZmFsc2UsXHJcbiAgICAgIGNvdW50aW5nQXZhaWxhYmxlOiB0cnVlXHJcbiAgICB9O1xyXG5cclxuICAgIHN1cGVyKFxyXG4gICAgICAoKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9wb3J0aW9uYWxBcmVhTW9kZWwoIFtcclxuICAgICAgICAgIG1lcmdlKCB7IG1heGltdW1TaXplOiAxMCB9LCBjb21tb25BcmVhT3B0aW9ucyApLFxyXG4gICAgICAgICAgbWVyZ2UoIHsgbWF4aW11bVNpemU6IDEyIH0sIGNvbW1vbkFyZWFPcHRpb25zIClcclxuICAgICAgICBdLCB7XHJcbiAgICAgICAgICBpbml0aWFsUGFydGlhbFByb2R1Y3RzQ2hvaWNlOiBQYXJ0aWFsUHJvZHVjdHNDaG9pY2UuSElEREVOXHJcbiAgICAgICAgfSApO1xyXG4gICAgICB9LFxyXG4gICAgICBtb2RlbCA9PiB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9wb3J0aW9uYWxBcmVhU2NyZWVuVmlldyggbW9kZWwsIHtcclxuICAgICAgICAgIHNob3dQcm9kdWN0c1NlbGVjdGlvbjogZmFsc2UsXHJcbiAgICAgICAgICBzaG93Q2FsY3VsYXRpb25TZWxlY3Rpb246IGZhbHNlLFxyXG4gICAgICAgICAgdXNlVGlsZUxpa2VCYWNrZ3JvdW5kOiB0cnVlLFxyXG4gICAgICAgICAgdXNlU2ltcGxpZmllZE5hbWVzOiB0cnVlLFxyXG4gICAgICAgICAgdXNlTGFyZ2VBcmVhOiB0cnVlXHJcbiAgICAgICAgfSApO1xyXG4gICAgICB9LFxyXG4gICAgICBvcHRpb25zXHJcbiAgICApO1xyXG4gIH1cclxufVxyXG5cclxuYXJlYU1vZGVsQ29tbW9uLnJlZ2lzdGVyKCAnTXVsdGlwbHlTY3JlZW4nLCBNdWx0aXBseVNjcmVlbiApO1xyXG5leHBvcnQgZGVmYXVsdCBNdWx0aXBseVNjcmVlbjsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsTUFBTSxNQUFNLDZCQUE2QjtBQUNoRCxPQUFPQyxVQUFVLE1BQU0saUNBQWlDO0FBQ3hELE9BQU9DLEtBQUssTUFBTSxnQ0FBZ0M7QUFDbEQsU0FBU0MsS0FBSyxRQUFRLGdDQUFnQztBQUN0RCxPQUFPQyxzQkFBc0IsTUFBTSx5Q0FBeUM7QUFDNUUsT0FBT0Msd0JBQXdCLE1BQU0sMkNBQTJDO0FBQ2hGLE9BQU9DLGVBQWUsTUFBTSx1QkFBdUI7QUFDbkQsT0FBT0Msc0JBQXNCLE1BQU0sOEJBQThCO0FBQ2pFLE9BQU9DLHFCQUFxQixNQUFNLDBDQUEwQztBQUM1RSxPQUFPQyxxQkFBcUIsTUFBTSx5Q0FBeUM7QUFDM0UsT0FBT0MsbUJBQW1CLE1BQU0sOENBQThDO0FBQzlFLE9BQU9DLHFCQUFxQixNQUFNLGdEQUFnRDtBQUNsRixPQUFPQywwQkFBMEIsTUFBTSxvREFBb0Q7QUFFM0YsTUFBTUMsY0FBYyxTQUFTYixNQUFNLENBQUM7RUFDbENjLFdBQVdBLENBQUEsRUFBRztJQUVaLE1BQU1DLE9BQU8sR0FBRztNQUNkQyxJQUFJLEVBQUVULHNCQUFzQixDQUFDVSxNQUFNLENBQUNDLHNCQUFzQjtNQUMxREMsdUJBQXVCLEVBQUVWLHFCQUFxQixDQUFDVyxrQkFBa0I7TUFDakVDLGNBQWMsRUFBRSxJQUFJcEIsVUFBVSxDQUFFLElBQUlFLEtBQUssQ0FBRUMsc0JBQXVCLENBQUMsRUFBRTtRQUNuRWtCLHNCQUFzQixFQUFFLENBQUM7UUFDekJDLHVCQUF1QixFQUFFO01BQzNCLENBQUUsQ0FBQztNQUNIQyxpQkFBaUIsRUFBRSxJQUFJdkIsVUFBVSxDQUFFLElBQUlFLEtBQUssQ0FBRUUsd0JBQXlCLENBQUMsRUFBRTtRQUN4RWlCLHNCQUFzQixFQUFFLENBQUM7UUFDekJDLHVCQUF1QixFQUFFO01BQzNCLENBQUUsQ0FBQztNQUVIO01BQ0FFLGtCQUFrQixFQUFFbEIsc0JBQXNCLENBQUNtQixJQUFJLENBQUNDO0lBQ2xELENBQUM7SUFFRCxNQUFNQyxpQkFBaUIsR0FBRztNQUN4QkMsV0FBVyxFQUFFLENBQUM7TUFDZEMsWUFBWSxFQUFFLENBQUM7TUFDZkMsYUFBYSxFQUFFLENBQUM7TUFDaEJDLFFBQVEsRUFBRSxDQUFDO01BQ1hDLFdBQVcsRUFBRSxDQUFDO01BQ2RDLG1CQUFtQixFQUFFeEIsbUJBQW1CLENBQUN5QixJQUFJO01BQzdDQyxjQUFjLEVBQUUsS0FBSztNQUNyQkMsaUJBQWlCLEVBQUUsS0FBSztNQUN4QkMsaUJBQWlCLEVBQUU7SUFDckIsQ0FBQztJQUVELEtBQUssQ0FDSCxNQUFNO01BQ0osT0FBTyxJQUFJM0IscUJBQXFCLENBQUUsQ0FDaENULEtBQUssQ0FBRTtRQUFFcUMsV0FBVyxFQUFFO01BQUcsQ0FBQyxFQUFFWCxpQkFBa0IsQ0FBQyxFQUMvQzFCLEtBQUssQ0FBRTtRQUFFcUMsV0FBVyxFQUFFO01BQUcsQ0FBQyxFQUFFWCxpQkFBa0IsQ0FBQyxDQUNoRCxFQUFFO1FBQ0RZLDRCQUE0QixFQUFFaEMscUJBQXFCLENBQUNpQztNQUN0RCxDQUFFLENBQUM7SUFDTCxDQUFDLEVBQ0RDLEtBQUssSUFBSTtNQUNQLE9BQU8sSUFBSTlCLDBCQUEwQixDQUFFOEIsS0FBSyxFQUFFO1FBQzVDQyxxQkFBcUIsRUFBRSxLQUFLO1FBQzVCQyx3QkFBd0IsRUFBRSxLQUFLO1FBQy9CQyxxQkFBcUIsRUFBRSxJQUFJO1FBQzNCQyxrQkFBa0IsRUFBRSxJQUFJO1FBQ3hCQyxZQUFZLEVBQUU7TUFDaEIsQ0FBRSxDQUFDO0lBQ0wsQ0FBQyxFQUNEaEMsT0FDRixDQUFDO0VBQ0g7QUFDRjtBQUVBVCxlQUFlLENBQUMwQyxRQUFRLENBQUUsZ0JBQWdCLEVBQUVuQyxjQUFlLENBQUM7QUFDNUQsZUFBZUEsY0FBYyJ9