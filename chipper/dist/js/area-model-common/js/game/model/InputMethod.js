// Copyright 2017-2021, University of Colorado Boulder

/**
 * Enumeration for the different ways an editable value can be input (different keypads)
 *
 * @author Jonathan Olson <jonathan.olson@colorado.edu>
 */

import areaModelCommon from '../../areaModelCommon.js';
const InputMethod = {
  CONSTANT: 'CONSTANT',
  TERM: 'TERM',
  POLYNOMIAL_2: 'POLYNOMIAL_2',
  // with x^2
  POLYNOMIAL_1: 'POLYNOMIAL_1' // without x^2
};

areaModelCommon.register('InputMethod', InputMethod);

/**
 * Whether an entry needs polynomial or term input.
 * @public
 *
 * @param {InputMethod} inputMethod
 * @returns {boolean}
 */
InputMethod.isPolynomial = function (inputMethod) {
  return inputMethod === InputMethod.POLYNOMIAL_1 || inputMethod === InputMethod.POLYNOMIAL_2;
};

// @public {Array.<InputMethod>} - All values the enumeration can take.
InputMethod.VALUES = [InputMethod.CONSTANT, InputMethod.TERM, InputMethod.POLYNOMIAL_2, InputMethod.POLYNOMIAL_1];

// verify that enumeration is immutable, without the runtime penalty in production code
if (assert) {
  Object.freeze(InputMethod);
}
export default InputMethod;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhcmVhTW9kZWxDb21tb24iLCJJbnB1dE1ldGhvZCIsIkNPTlNUQU5UIiwiVEVSTSIsIlBPTFlOT01JQUxfMiIsIlBPTFlOT01JQUxfMSIsInJlZ2lzdGVyIiwiaXNQb2x5bm9taWFsIiwiaW5wdXRNZXRob2QiLCJWQUxVRVMiLCJhc3NlcnQiLCJPYmplY3QiLCJmcmVlemUiXSwic291cmNlcyI6WyJJbnB1dE1ldGhvZC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxNy0yMDIxLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBFbnVtZXJhdGlvbiBmb3IgdGhlIGRpZmZlcmVudCB3YXlzIGFuIGVkaXRhYmxlIHZhbHVlIGNhbiBiZSBpbnB1dCAoZGlmZmVyZW50IGtleXBhZHMpXHJcbiAqXHJcbiAqIEBhdXRob3IgSm9uYXRoYW4gT2xzb24gPGpvbmF0aGFuLm9sc29uQGNvbG9yYWRvLmVkdT5cclxuICovXHJcblxyXG5pbXBvcnQgYXJlYU1vZGVsQ29tbW9uIGZyb20gJy4uLy4uL2FyZWFNb2RlbENvbW1vbi5qcyc7XHJcblxyXG5jb25zdCBJbnB1dE1ldGhvZCA9IHtcclxuICBDT05TVEFOVDogJ0NPTlNUQU5UJyxcclxuICBURVJNOiAnVEVSTScsXHJcbiAgUE9MWU5PTUlBTF8yOiAnUE9MWU5PTUlBTF8yJywgLy8gd2l0aCB4XjJcclxuICBQT0xZTk9NSUFMXzE6ICdQT0xZTk9NSUFMXzEnIC8vIHdpdGhvdXQgeF4yXHJcbn07XHJcblxyXG5hcmVhTW9kZWxDb21tb24ucmVnaXN0ZXIoICdJbnB1dE1ldGhvZCcsIElucHV0TWV0aG9kICk7XHJcblxyXG4vKipcclxuICogV2hldGhlciBhbiBlbnRyeSBuZWVkcyBwb2x5bm9taWFsIG9yIHRlcm0gaW5wdXQuXHJcbiAqIEBwdWJsaWNcclxuICpcclxuICogQHBhcmFtIHtJbnB1dE1ldGhvZH0gaW5wdXRNZXRob2RcclxuICogQHJldHVybnMge2Jvb2xlYW59XHJcbiAqL1xyXG5JbnB1dE1ldGhvZC5pc1BvbHlub21pYWwgPSBmdW5jdGlvbiggaW5wdXRNZXRob2QgKSB7XHJcbiAgcmV0dXJuIGlucHV0TWV0aG9kID09PSBJbnB1dE1ldGhvZC5QT0xZTk9NSUFMXzEgfHwgaW5wdXRNZXRob2QgPT09IElucHV0TWV0aG9kLlBPTFlOT01JQUxfMjtcclxufTtcclxuXHJcbi8vIEBwdWJsaWMge0FycmF5LjxJbnB1dE1ldGhvZD59IC0gQWxsIHZhbHVlcyB0aGUgZW51bWVyYXRpb24gY2FuIHRha2UuXHJcbklucHV0TWV0aG9kLlZBTFVFUyA9IFtcclxuICBJbnB1dE1ldGhvZC5DT05TVEFOVCxcclxuICBJbnB1dE1ldGhvZC5URVJNLFxyXG4gIElucHV0TWV0aG9kLlBPTFlOT01JQUxfMixcclxuICBJbnB1dE1ldGhvZC5QT0xZTk9NSUFMXzFcclxuXTtcclxuXHJcbi8vIHZlcmlmeSB0aGF0IGVudW1lcmF0aW9uIGlzIGltbXV0YWJsZSwgd2l0aG91dCB0aGUgcnVudGltZSBwZW5hbHR5IGluIHByb2R1Y3Rpb24gY29kZVxyXG5pZiAoIGFzc2VydCApIHsgT2JqZWN0LmZyZWV6ZSggSW5wdXRNZXRob2QgKTsgfVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgSW5wdXRNZXRob2Q7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLGVBQWUsTUFBTSwwQkFBMEI7QUFFdEQsTUFBTUMsV0FBVyxHQUFHO0VBQ2xCQyxRQUFRLEVBQUUsVUFBVTtFQUNwQkMsSUFBSSxFQUFFLE1BQU07RUFDWkMsWUFBWSxFQUFFLGNBQWM7RUFBRTtFQUM5QkMsWUFBWSxFQUFFLGNBQWMsQ0FBQztBQUMvQixDQUFDOztBQUVETCxlQUFlLENBQUNNLFFBQVEsQ0FBRSxhQUFhLEVBQUVMLFdBQVksQ0FBQzs7QUFFdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQUEsV0FBVyxDQUFDTSxZQUFZLEdBQUcsVUFBVUMsV0FBVyxFQUFHO0VBQ2pELE9BQU9BLFdBQVcsS0FBS1AsV0FBVyxDQUFDSSxZQUFZLElBQUlHLFdBQVcsS0FBS1AsV0FBVyxDQUFDRyxZQUFZO0FBQzdGLENBQUM7O0FBRUQ7QUFDQUgsV0FBVyxDQUFDUSxNQUFNLEdBQUcsQ0FDbkJSLFdBQVcsQ0FBQ0MsUUFBUSxFQUNwQkQsV0FBVyxDQUFDRSxJQUFJLEVBQ2hCRixXQUFXLENBQUNHLFlBQVksRUFDeEJILFdBQVcsQ0FBQ0ksWUFBWSxDQUN6Qjs7QUFFRDtBQUNBLElBQUtLLE1BQU0sRUFBRztFQUFFQyxNQUFNLENBQUNDLE1BQU0sQ0FBRVgsV0FBWSxDQUFDO0FBQUU7QUFFOUMsZUFBZUEsV0FBVyJ9