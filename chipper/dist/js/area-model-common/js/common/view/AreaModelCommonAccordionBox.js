// Copyright 2018-2021, University of Colorado Boulder

/**
 * Common settings for accordion boxes in area-model sims.
 *
 * NOTE: This type is designed to be persistent, and will not need to release references to avoid memory leaks.
 *
 * @author Jonathan Olson <jonathan.olson@colorado.edu>
 */

import merge from '../../../../phet-core/js/merge.js';
import { Text } from '../../../../scenery/js/imports.js';
import AccordionBox from '../../../../sun/js/AccordionBox.js';
import areaModelCommon from '../../areaModelCommon.js';
import AreaModelCommonConstants from '../AreaModelCommonConstants.js';
import AreaModelCommonColors from './AreaModelCommonColors.js';
class AreaModelCommonAccordionBox extends AccordionBox {
  /**
   * @param {string} titleString
   * @param {Property.<boolean>} expandedProperty
   * @param {Node} content
   * @param {Object} [options]
   */
  constructor(titleString, expandedProperty, content, options) {
    options = merge({
      titleNode: new Text(titleString, {
        font: AreaModelCommonConstants.TITLE_FONT,
        maxWidth: options.maxTitleWidth || 200
      }),
      expandedProperty: expandedProperty,
      contentXMargin: 15,
      contentYMargin: 12,
      resize: true,
      cornerRadius: AreaModelCommonConstants.PANEL_CORNER_RADIUS,
      fill: AreaModelCommonColors.panelBackgroundProperty,
      stroke: AreaModelCommonColors.panelBorderProperty,
      titleAlignX: 'left',
      titleXSpacing: 8,
      buttonXMargin: 10,
      buttonYMargin: 8,
      expandCollapseButtonOptions: {
        sideLength: 20,
        touchAreaXDilation: 5,
        touchAreaYDilation: 5
      }
    }, options);
    super(content, options);
  }
}
areaModelCommon.register('AreaModelCommonAccordionBox', AreaModelCommonAccordionBox);
export default AreaModelCommonAccordionBox;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtZXJnZSIsIlRleHQiLCJBY2NvcmRpb25Cb3giLCJhcmVhTW9kZWxDb21tb24iLCJBcmVhTW9kZWxDb21tb25Db25zdGFudHMiLCJBcmVhTW9kZWxDb21tb25Db2xvcnMiLCJBcmVhTW9kZWxDb21tb25BY2NvcmRpb25Cb3giLCJjb25zdHJ1Y3RvciIsInRpdGxlU3RyaW5nIiwiZXhwYW5kZWRQcm9wZXJ0eSIsImNvbnRlbnQiLCJvcHRpb25zIiwidGl0bGVOb2RlIiwiZm9udCIsIlRJVExFX0ZPTlQiLCJtYXhXaWR0aCIsIm1heFRpdGxlV2lkdGgiLCJjb250ZW50WE1hcmdpbiIsImNvbnRlbnRZTWFyZ2luIiwicmVzaXplIiwiY29ybmVyUmFkaXVzIiwiUEFORUxfQ09STkVSX1JBRElVUyIsImZpbGwiLCJwYW5lbEJhY2tncm91bmRQcm9wZXJ0eSIsInN0cm9rZSIsInBhbmVsQm9yZGVyUHJvcGVydHkiLCJ0aXRsZUFsaWduWCIsInRpdGxlWFNwYWNpbmciLCJidXR0b25YTWFyZ2luIiwiYnV0dG9uWU1hcmdpbiIsImV4cGFuZENvbGxhcHNlQnV0dG9uT3B0aW9ucyIsInNpZGVMZW5ndGgiLCJ0b3VjaEFyZWFYRGlsYXRpb24iLCJ0b3VjaEFyZWFZRGlsYXRpb24iLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIkFyZWFNb2RlbENvbW1vbkFjY29yZGlvbkJveC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxOC0yMDIxLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBDb21tb24gc2V0dGluZ3MgZm9yIGFjY29yZGlvbiBib3hlcyBpbiBhcmVhLW1vZGVsIHNpbXMuXHJcbiAqXHJcbiAqIE5PVEU6IFRoaXMgdHlwZSBpcyBkZXNpZ25lZCB0byBiZSBwZXJzaXN0ZW50LCBhbmQgd2lsbCBub3QgbmVlZCB0byByZWxlYXNlIHJlZmVyZW5jZXMgdG8gYXZvaWQgbWVtb3J5IGxlYWtzLlxyXG4gKlxyXG4gKiBAYXV0aG9yIEpvbmF0aGFuIE9sc29uIDxqb25hdGhhbi5vbHNvbkBjb2xvcmFkby5lZHU+XHJcbiAqL1xyXG5cclxuaW1wb3J0IG1lcmdlIGZyb20gJy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy9tZXJnZS5qcyc7XHJcbmltcG9ydCB7IFRleHQgfSBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgQWNjb3JkaW9uQm94IGZyb20gJy4uLy4uLy4uLy4uL3N1bi9qcy9BY2NvcmRpb25Cb3guanMnO1xyXG5pbXBvcnQgYXJlYU1vZGVsQ29tbW9uIGZyb20gJy4uLy4uL2FyZWFNb2RlbENvbW1vbi5qcyc7XHJcbmltcG9ydCBBcmVhTW9kZWxDb21tb25Db25zdGFudHMgZnJvbSAnLi4vQXJlYU1vZGVsQ29tbW9uQ29uc3RhbnRzLmpzJztcclxuaW1wb3J0IEFyZWFNb2RlbENvbW1vbkNvbG9ycyBmcm9tICcuL0FyZWFNb2RlbENvbW1vbkNvbG9ycy5qcyc7XHJcblxyXG5jbGFzcyBBcmVhTW9kZWxDb21tb25BY2NvcmRpb25Cb3ggZXh0ZW5kcyBBY2NvcmRpb25Cb3gge1xyXG5cclxuICAvKipcclxuICAgKiBAcGFyYW0ge3N0cmluZ30gdGl0bGVTdHJpbmdcclxuICAgKiBAcGFyYW0ge1Byb3BlcnR5Ljxib29sZWFuPn0gZXhwYW5kZWRQcm9wZXJ0eVxyXG4gICAqIEBwYXJhbSB7Tm9kZX0gY29udGVudFxyXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc11cclxuICAgKi9cclxuICBjb25zdHJ1Y3RvciggdGl0bGVTdHJpbmcsIGV4cGFuZGVkUHJvcGVydHksIGNvbnRlbnQsIG9wdGlvbnMgKSB7XHJcbiAgICBvcHRpb25zID0gbWVyZ2UoIHtcclxuICAgICAgdGl0bGVOb2RlOiBuZXcgVGV4dCggdGl0bGVTdHJpbmcsIHtcclxuICAgICAgICBmb250OiBBcmVhTW9kZWxDb21tb25Db25zdGFudHMuVElUTEVfRk9OVCxcclxuICAgICAgICBtYXhXaWR0aDogb3B0aW9ucy5tYXhUaXRsZVdpZHRoIHx8IDIwMFxyXG4gICAgICB9ICksXHJcbiAgICAgIGV4cGFuZGVkUHJvcGVydHk6IGV4cGFuZGVkUHJvcGVydHksXHJcbiAgICAgIGNvbnRlbnRYTWFyZ2luOiAxNSxcclxuICAgICAgY29udGVudFlNYXJnaW46IDEyLFxyXG4gICAgICByZXNpemU6IHRydWUsXHJcbiAgICAgIGNvcm5lclJhZGl1czogQXJlYU1vZGVsQ29tbW9uQ29uc3RhbnRzLlBBTkVMX0NPUk5FUl9SQURJVVMsXHJcbiAgICAgIGZpbGw6IEFyZWFNb2RlbENvbW1vbkNvbG9ycy5wYW5lbEJhY2tncm91bmRQcm9wZXJ0eSxcclxuICAgICAgc3Ryb2tlOiBBcmVhTW9kZWxDb21tb25Db2xvcnMucGFuZWxCb3JkZXJQcm9wZXJ0eSxcclxuICAgICAgdGl0bGVBbGlnblg6ICdsZWZ0JyxcclxuICAgICAgdGl0bGVYU3BhY2luZzogOCxcclxuICAgICAgYnV0dG9uWE1hcmdpbjogMTAsXHJcbiAgICAgIGJ1dHRvbllNYXJnaW46IDgsXHJcbiAgICAgIGV4cGFuZENvbGxhcHNlQnV0dG9uT3B0aW9uczoge1xyXG4gICAgICAgIHNpZGVMZW5ndGg6IDIwLFxyXG4gICAgICAgIHRvdWNoQXJlYVhEaWxhdGlvbjogNSxcclxuICAgICAgICB0b3VjaEFyZWFZRGlsYXRpb246IDVcclxuICAgICAgfVxyXG4gICAgfSwgb3B0aW9ucyApO1xyXG5cclxuICAgIHN1cGVyKCBjb250ZW50LCBvcHRpb25zICk7XHJcbiAgfVxyXG59XHJcblxyXG5hcmVhTW9kZWxDb21tb24ucmVnaXN0ZXIoICdBcmVhTW9kZWxDb21tb25BY2NvcmRpb25Cb3gnLCBBcmVhTW9kZWxDb21tb25BY2NvcmRpb25Cb3ggKTtcclxuZXhwb3J0IGRlZmF1bHQgQXJlYU1vZGVsQ29tbW9uQWNjb3JkaW9uQm94OyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsS0FBSyxNQUFNLG1DQUFtQztBQUNyRCxTQUFTQyxJQUFJLFFBQVEsbUNBQW1DO0FBQ3hELE9BQU9DLFlBQVksTUFBTSxvQ0FBb0M7QUFDN0QsT0FBT0MsZUFBZSxNQUFNLDBCQUEwQjtBQUN0RCxPQUFPQyx3QkFBd0IsTUFBTSxnQ0FBZ0M7QUFDckUsT0FBT0MscUJBQXFCLE1BQU0sNEJBQTRCO0FBRTlELE1BQU1DLDJCQUEyQixTQUFTSixZQUFZLENBQUM7RUFFckQ7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0VBQ0VLLFdBQVdBLENBQUVDLFdBQVcsRUFBRUMsZ0JBQWdCLEVBQUVDLE9BQU8sRUFBRUMsT0FBTyxFQUFHO0lBQzdEQSxPQUFPLEdBQUdYLEtBQUssQ0FBRTtNQUNmWSxTQUFTLEVBQUUsSUFBSVgsSUFBSSxDQUFFTyxXQUFXLEVBQUU7UUFDaENLLElBQUksRUFBRVQsd0JBQXdCLENBQUNVLFVBQVU7UUFDekNDLFFBQVEsRUFBRUosT0FBTyxDQUFDSyxhQUFhLElBQUk7TUFDckMsQ0FBRSxDQUFDO01BQ0hQLGdCQUFnQixFQUFFQSxnQkFBZ0I7TUFDbENRLGNBQWMsRUFBRSxFQUFFO01BQ2xCQyxjQUFjLEVBQUUsRUFBRTtNQUNsQkMsTUFBTSxFQUFFLElBQUk7TUFDWkMsWUFBWSxFQUFFaEIsd0JBQXdCLENBQUNpQixtQkFBbUI7TUFDMURDLElBQUksRUFBRWpCLHFCQUFxQixDQUFDa0IsdUJBQXVCO01BQ25EQyxNQUFNLEVBQUVuQixxQkFBcUIsQ0FBQ29CLG1CQUFtQjtNQUNqREMsV0FBVyxFQUFFLE1BQU07TUFDbkJDLGFBQWEsRUFBRSxDQUFDO01BQ2hCQyxhQUFhLEVBQUUsRUFBRTtNQUNqQkMsYUFBYSxFQUFFLENBQUM7TUFDaEJDLDJCQUEyQixFQUFFO1FBQzNCQyxVQUFVLEVBQUUsRUFBRTtRQUNkQyxrQkFBa0IsRUFBRSxDQUFDO1FBQ3JCQyxrQkFBa0IsRUFBRTtNQUN0QjtJQUNGLENBQUMsRUFBRXRCLE9BQVEsQ0FBQztJQUVaLEtBQUssQ0FBRUQsT0FBTyxFQUFFQyxPQUFRLENBQUM7RUFDM0I7QUFDRjtBQUVBUixlQUFlLENBQUMrQixRQUFRLENBQUUsNkJBQTZCLEVBQUU1QiwyQkFBNEIsQ0FBQztBQUN0RixlQUFlQSwyQkFBMkIifQ==