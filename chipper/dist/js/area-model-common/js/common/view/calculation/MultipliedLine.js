// Copyright 2018-2021, University of Colorado Boulder

/**
 * A calculation line below the 'distributed' line, where each term (in this case, multiplication between the
 * horizontal and vertical 'Term') is multiplied to result in a non-oriented value.
 *
 * @author Jonathan Olson <jonathan.olson@colorado.edu>
 */

import areaModelCommon from '../../../areaModelCommon.js';
import CalculationLine from './CalculationLine.js';
class MultipliedLine extends CalculationLine {
  /**
   * @param {TermList} multipliedTermList
   * @param {Area} area
   * @param {Property.<number|null>} activeIndexProperty
   * @param {boolean} allowExponents - Whether exponents (powers of x) are allowed
   * @param {boolean} isProportional - Whether the area is shown as proportional (instead of generic)
   */
  constructor(multipliedTermList, area, activeIndexProperty, allowExponents, isProportional) {
    super(CalculationLine.MULTIPLIED_LINE_INDEX, area.colorProperties, activeIndexProperty, allowExponents, isProportional);
    this.node = this.sumWithNegativeParens(multipliedTermList.terms);
  }
}
areaModelCommon.register('MultipliedLine', MultipliedLine);
export default MultipliedLine;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhcmVhTW9kZWxDb21tb24iLCJDYWxjdWxhdGlvbkxpbmUiLCJNdWx0aXBsaWVkTGluZSIsImNvbnN0cnVjdG9yIiwibXVsdGlwbGllZFRlcm1MaXN0IiwiYXJlYSIsImFjdGl2ZUluZGV4UHJvcGVydHkiLCJhbGxvd0V4cG9uZW50cyIsImlzUHJvcG9ydGlvbmFsIiwiTVVMVElQTElFRF9MSU5FX0lOREVYIiwiY29sb3JQcm9wZXJ0aWVzIiwibm9kZSIsInN1bVdpdGhOZWdhdGl2ZVBhcmVucyIsInRlcm1zIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJNdWx0aXBsaWVkTGluZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxOC0yMDIxLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBBIGNhbGN1bGF0aW9uIGxpbmUgYmVsb3cgdGhlICdkaXN0cmlidXRlZCcgbGluZSwgd2hlcmUgZWFjaCB0ZXJtIChpbiB0aGlzIGNhc2UsIG11bHRpcGxpY2F0aW9uIGJldHdlZW4gdGhlXHJcbiAqIGhvcml6b250YWwgYW5kIHZlcnRpY2FsICdUZXJtJykgaXMgbXVsdGlwbGllZCB0byByZXN1bHQgaW4gYSBub24tb3JpZW50ZWQgdmFsdWUuXHJcbiAqXHJcbiAqIEBhdXRob3IgSm9uYXRoYW4gT2xzb24gPGpvbmF0aGFuLm9sc29uQGNvbG9yYWRvLmVkdT5cclxuICovXHJcblxyXG5pbXBvcnQgYXJlYU1vZGVsQ29tbW9uIGZyb20gJy4uLy4uLy4uL2FyZWFNb2RlbENvbW1vbi5qcyc7XHJcbmltcG9ydCBDYWxjdWxhdGlvbkxpbmUgZnJvbSAnLi9DYWxjdWxhdGlvbkxpbmUuanMnO1xyXG5cclxuY2xhc3MgTXVsdGlwbGllZExpbmUgZXh0ZW5kcyBDYWxjdWxhdGlvbkxpbmUge1xyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSB7VGVybUxpc3R9IG11bHRpcGxpZWRUZXJtTGlzdFxyXG4gICAqIEBwYXJhbSB7QXJlYX0gYXJlYVxyXG4gICAqIEBwYXJhbSB7UHJvcGVydHkuPG51bWJlcnxudWxsPn0gYWN0aXZlSW5kZXhQcm9wZXJ0eVxyXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gYWxsb3dFeHBvbmVudHMgLSBXaGV0aGVyIGV4cG9uZW50cyAocG93ZXJzIG9mIHgpIGFyZSBhbGxvd2VkXHJcbiAgICogQHBhcmFtIHtib29sZWFufSBpc1Byb3BvcnRpb25hbCAtIFdoZXRoZXIgdGhlIGFyZWEgaXMgc2hvd24gYXMgcHJvcG9ydGlvbmFsIChpbnN0ZWFkIG9mIGdlbmVyaWMpXHJcbiAgICovXHJcbiAgY29uc3RydWN0b3IoIG11bHRpcGxpZWRUZXJtTGlzdCwgYXJlYSwgYWN0aXZlSW5kZXhQcm9wZXJ0eSwgYWxsb3dFeHBvbmVudHMsIGlzUHJvcG9ydGlvbmFsICkge1xyXG4gICAgc3VwZXIoIENhbGN1bGF0aW9uTGluZS5NVUxUSVBMSUVEX0xJTkVfSU5ERVgsIGFyZWEuY29sb3JQcm9wZXJ0aWVzLCBhY3RpdmVJbmRleFByb3BlcnR5LCBhbGxvd0V4cG9uZW50cywgaXNQcm9wb3J0aW9uYWwgKTtcclxuXHJcbiAgICB0aGlzLm5vZGUgPSB0aGlzLnN1bVdpdGhOZWdhdGl2ZVBhcmVucyggbXVsdGlwbGllZFRlcm1MaXN0LnRlcm1zICk7XHJcbiAgfVxyXG59XHJcblxyXG5hcmVhTW9kZWxDb21tb24ucmVnaXN0ZXIoICdNdWx0aXBsaWVkTGluZScsIE11bHRpcGxpZWRMaW5lICk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBNdWx0aXBsaWVkTGluZTsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxlQUFlLE1BQU0sNkJBQTZCO0FBQ3pELE9BQU9DLGVBQWUsTUFBTSxzQkFBc0I7QUFFbEQsTUFBTUMsY0FBYyxTQUFTRCxlQUFlLENBQUM7RUFDM0M7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7RUFDRUUsV0FBV0EsQ0FBRUMsa0JBQWtCLEVBQUVDLElBQUksRUFBRUMsbUJBQW1CLEVBQUVDLGNBQWMsRUFBRUMsY0FBYyxFQUFHO0lBQzNGLEtBQUssQ0FBRVAsZUFBZSxDQUFDUSxxQkFBcUIsRUFBRUosSUFBSSxDQUFDSyxlQUFlLEVBQUVKLG1CQUFtQixFQUFFQyxjQUFjLEVBQUVDLGNBQWUsQ0FBQztJQUV6SCxJQUFJLENBQUNHLElBQUksR0FBRyxJQUFJLENBQUNDLHFCQUFxQixDQUFFUixrQkFBa0IsQ0FBQ1MsS0FBTSxDQUFDO0VBQ3BFO0FBQ0Y7QUFFQWIsZUFBZSxDQUFDYyxRQUFRLENBQUUsZ0JBQWdCLEVBQUVaLGNBQWUsQ0FBQztBQUU1RCxlQUFlQSxjQUFjIn0=