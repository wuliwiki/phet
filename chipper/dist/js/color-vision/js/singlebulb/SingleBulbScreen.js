// Copyright 2014-2022, University of Colorado Boulder

/**
 * The 'Single Bulb' screen. Conforms to the contract specified in joist/Screen.
 *
 * @author Sam Reid (PhET Interactive Simulations)
 */

import Property from '../../../axon/js/Property.js';
import Screen from '../../../joist/js/Screen.js';
import ScreenIcon from '../../../joist/js/ScreenIcon.js';
import colorVision from '../colorVision.js';
import ColorVisionStrings from '../ColorVisionStrings.js';
import ColorVisionConstants from '../common/ColorVisionConstants.js';
import SingleBulbModel from './model/SingleBulbModel.js';
import SingleBulbIconNode from './view/SingleBulbIconNode.js';
import SingleBulbScreenView from './view/SingleBulbScreenView.js';
class SingleBulbScreen extends Screen {
  /**
   * @param {Tandem} tandem
   */
  constructor(tandem) {
    const options = {
      name: ColorVisionStrings.SingleBulbModule.titleStringProperty,
      backgroundColorProperty: new Property('black'),
      homeScreenIcon: new ScreenIcon(new SingleBulbIconNode(ColorVisionConstants.HOME_SCREEN_ICON_OPTIONS), {
        maxIconWidthProportion: 1,
        maxIconHeightProportion: 1
      }),
      navigationBarIcon: new ScreenIcon(new SingleBulbIconNode(ColorVisionConstants.HOME_SCREEN_ICON_OPTIONS), {
        maxIconWidthProportion: 1,
        maxIconHeightProportion: 1
      }),
      showUnselectedHomeScreenIconFrame: true,
      tandem: tandem
    };
    super(() => new SingleBulbModel(tandem.createTandem('model')), model => new SingleBulbScreenView(model, tandem.createTandem('view')), options);
  }
}
colorVision.register('SingleBulbScreen', SingleBulbScreen);
export default SingleBulbScreen;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQcm9wZXJ0eSIsIlNjcmVlbiIsIlNjcmVlbkljb24iLCJjb2xvclZpc2lvbiIsIkNvbG9yVmlzaW9uU3RyaW5ncyIsIkNvbG9yVmlzaW9uQ29uc3RhbnRzIiwiU2luZ2xlQnVsYk1vZGVsIiwiU2luZ2xlQnVsYkljb25Ob2RlIiwiU2luZ2xlQnVsYlNjcmVlblZpZXciLCJTaW5nbGVCdWxiU2NyZWVuIiwiY29uc3RydWN0b3IiLCJ0YW5kZW0iLCJvcHRpb25zIiwibmFtZSIsIlNpbmdsZUJ1bGJNb2R1bGUiLCJ0aXRsZVN0cmluZ1Byb3BlcnR5IiwiYmFja2dyb3VuZENvbG9yUHJvcGVydHkiLCJob21lU2NyZWVuSWNvbiIsIkhPTUVfU0NSRUVOX0lDT05fT1BUSU9OUyIsIm1heEljb25XaWR0aFByb3BvcnRpb24iLCJtYXhJY29uSGVpZ2h0UHJvcG9ydGlvbiIsIm5hdmlnYXRpb25CYXJJY29uIiwic2hvd1Vuc2VsZWN0ZWRIb21lU2NyZWVuSWNvbkZyYW1lIiwiY3JlYXRlVGFuZGVtIiwibW9kZWwiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIlNpbmdsZUJ1bGJTY3JlZW4uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTQtMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogVGhlICdTaW5nbGUgQnVsYicgc2NyZWVuLiBDb25mb3JtcyB0byB0aGUgY29udHJhY3Qgc3BlY2lmaWVkIGluIGpvaXN0L1NjcmVlbi5cclxuICpcclxuICogQGF1dGhvciBTYW0gUmVpZCAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcclxuICovXHJcblxyXG5pbXBvcnQgUHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vYXhvbi9qcy9Qcm9wZXJ0eS5qcyc7XHJcbmltcG9ydCBTY3JlZW4gZnJvbSAnLi4vLi4vLi4vam9pc3QvanMvU2NyZWVuLmpzJztcclxuaW1wb3J0IFNjcmVlbkljb24gZnJvbSAnLi4vLi4vLi4vam9pc3QvanMvU2NyZWVuSWNvbi5qcyc7XHJcbmltcG9ydCBjb2xvclZpc2lvbiBmcm9tICcuLi9jb2xvclZpc2lvbi5qcyc7XHJcbmltcG9ydCBDb2xvclZpc2lvblN0cmluZ3MgZnJvbSAnLi4vQ29sb3JWaXNpb25TdHJpbmdzLmpzJztcclxuaW1wb3J0IENvbG9yVmlzaW9uQ29uc3RhbnRzIGZyb20gJy4uL2NvbW1vbi9Db2xvclZpc2lvbkNvbnN0YW50cy5qcyc7XHJcbmltcG9ydCBTaW5nbGVCdWxiTW9kZWwgZnJvbSAnLi9tb2RlbC9TaW5nbGVCdWxiTW9kZWwuanMnO1xyXG5pbXBvcnQgU2luZ2xlQnVsYkljb25Ob2RlIGZyb20gJy4vdmlldy9TaW5nbGVCdWxiSWNvbk5vZGUuanMnO1xyXG5pbXBvcnQgU2luZ2xlQnVsYlNjcmVlblZpZXcgZnJvbSAnLi92aWV3L1NpbmdsZUJ1bGJTY3JlZW5WaWV3LmpzJztcclxuXHJcbmNsYXNzIFNpbmdsZUJ1bGJTY3JlZW4gZXh0ZW5kcyBTY3JlZW4ge1xyXG5cclxuICAvKipcclxuICAgKiBAcGFyYW0ge1RhbmRlbX0gdGFuZGVtXHJcbiAgICovXHJcbiAgY29uc3RydWN0b3IoIHRhbmRlbSApIHtcclxuXHJcbiAgICBjb25zdCBvcHRpb25zID0ge1xyXG4gICAgICBuYW1lOiBDb2xvclZpc2lvblN0cmluZ3MuU2luZ2xlQnVsYk1vZHVsZS50aXRsZVN0cmluZ1Byb3BlcnR5LFxyXG4gICAgICBiYWNrZ3JvdW5kQ29sb3JQcm9wZXJ0eTogbmV3IFByb3BlcnR5KCAnYmxhY2snICksXHJcbiAgICAgIGhvbWVTY3JlZW5JY29uOiBuZXcgU2NyZWVuSWNvbiggbmV3IFNpbmdsZUJ1bGJJY29uTm9kZSggQ29sb3JWaXNpb25Db25zdGFudHMuSE9NRV9TQ1JFRU5fSUNPTl9PUFRJT05TICksIHtcclxuICAgICAgICBtYXhJY29uV2lkdGhQcm9wb3J0aW9uOiAxLFxyXG4gICAgICAgIG1heEljb25IZWlnaHRQcm9wb3J0aW9uOiAxXHJcbiAgICAgIH0gKSxcclxuICAgICAgbmF2aWdhdGlvbkJhckljb246IG5ldyBTY3JlZW5JY29uKCBuZXcgU2luZ2xlQnVsYkljb25Ob2RlKCBDb2xvclZpc2lvbkNvbnN0YW50cy5IT01FX1NDUkVFTl9JQ09OX09QVElPTlMgKSwge1xyXG4gICAgICAgIG1heEljb25XaWR0aFByb3BvcnRpb246IDEsXHJcbiAgICAgICAgbWF4SWNvbkhlaWdodFByb3BvcnRpb246IDFcclxuICAgICAgfSApLFxyXG4gICAgICBzaG93VW5zZWxlY3RlZEhvbWVTY3JlZW5JY29uRnJhbWU6IHRydWUsXHJcbiAgICAgIHRhbmRlbTogdGFuZGVtXHJcbiAgICB9O1xyXG5cclxuICAgIHN1cGVyKFxyXG4gICAgICAoKSA9PiBuZXcgU2luZ2xlQnVsYk1vZGVsKCB0YW5kZW0uY3JlYXRlVGFuZGVtKCAnbW9kZWwnICkgKSxcclxuICAgICAgbW9kZWwgPT4gbmV3IFNpbmdsZUJ1bGJTY3JlZW5WaWV3KCBtb2RlbCwgdGFuZGVtLmNyZWF0ZVRhbmRlbSggJ3ZpZXcnICkgKSxcclxuICAgICAgb3B0aW9uc1xyXG4gICAgKTtcclxuICB9XHJcbn1cclxuXHJcbmNvbG9yVmlzaW9uLnJlZ2lzdGVyKCAnU2luZ2xlQnVsYlNjcmVlbicsIFNpbmdsZUJ1bGJTY3JlZW4gKTtcclxuZXhwb3J0IGRlZmF1bHQgU2luZ2xlQnVsYlNjcmVlbjsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsUUFBUSxNQUFNLDhCQUE4QjtBQUNuRCxPQUFPQyxNQUFNLE1BQU0sNkJBQTZCO0FBQ2hELE9BQU9DLFVBQVUsTUFBTSxpQ0FBaUM7QUFDeEQsT0FBT0MsV0FBVyxNQUFNLG1CQUFtQjtBQUMzQyxPQUFPQyxrQkFBa0IsTUFBTSwwQkFBMEI7QUFDekQsT0FBT0Msb0JBQW9CLE1BQU0sbUNBQW1DO0FBQ3BFLE9BQU9DLGVBQWUsTUFBTSw0QkFBNEI7QUFDeEQsT0FBT0Msa0JBQWtCLE1BQU0sOEJBQThCO0FBQzdELE9BQU9DLG9CQUFvQixNQUFNLGdDQUFnQztBQUVqRSxNQUFNQyxnQkFBZ0IsU0FBU1IsTUFBTSxDQUFDO0VBRXBDO0FBQ0Y7QUFDQTtFQUNFUyxXQUFXQSxDQUFFQyxNQUFNLEVBQUc7SUFFcEIsTUFBTUMsT0FBTyxHQUFHO01BQ2RDLElBQUksRUFBRVQsa0JBQWtCLENBQUNVLGdCQUFnQixDQUFDQyxtQkFBbUI7TUFDN0RDLHVCQUF1QixFQUFFLElBQUloQixRQUFRLENBQUUsT0FBUSxDQUFDO01BQ2hEaUIsY0FBYyxFQUFFLElBQUlmLFVBQVUsQ0FBRSxJQUFJSyxrQkFBa0IsQ0FBRUYsb0JBQW9CLENBQUNhLHdCQUF5QixDQUFDLEVBQUU7UUFDdkdDLHNCQUFzQixFQUFFLENBQUM7UUFDekJDLHVCQUF1QixFQUFFO01BQzNCLENBQUUsQ0FBQztNQUNIQyxpQkFBaUIsRUFBRSxJQUFJbkIsVUFBVSxDQUFFLElBQUlLLGtCQUFrQixDQUFFRixvQkFBb0IsQ0FBQ2Esd0JBQXlCLENBQUMsRUFBRTtRQUMxR0Msc0JBQXNCLEVBQUUsQ0FBQztRQUN6QkMsdUJBQXVCLEVBQUU7TUFDM0IsQ0FBRSxDQUFDO01BQ0hFLGlDQUFpQyxFQUFFLElBQUk7TUFDdkNYLE1BQU0sRUFBRUE7SUFDVixDQUFDO0lBRUQsS0FBSyxDQUNILE1BQU0sSUFBSUwsZUFBZSxDQUFFSyxNQUFNLENBQUNZLFlBQVksQ0FBRSxPQUFRLENBQUUsQ0FBQyxFQUMzREMsS0FBSyxJQUFJLElBQUloQixvQkFBb0IsQ0FBRWdCLEtBQUssRUFBRWIsTUFBTSxDQUFDWSxZQUFZLENBQUUsTUFBTyxDQUFFLENBQUMsRUFDekVYLE9BQ0YsQ0FBQztFQUNIO0FBQ0Y7QUFFQVQsV0FBVyxDQUFDc0IsUUFBUSxDQUFFLGtCQUFrQixFQUFFaEIsZ0JBQWlCLENBQUM7QUFDNUQsZUFBZUEsZ0JBQWdCIn0=