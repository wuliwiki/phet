// Copyright 2014-2022, University of Colorado Boulder

/**
 * View components shared by both screens. Subclassed by SingleBulbScreenView and RGBScreenView.
 *
 * @author Aaron Davis
 */

import Bounds2 from '../../../../dot/js/Bounds2.js';
import ScreenView from '../../../../joist/js/ScreenView.js';
import ResetAllButton from '../../../../scenery-phet/js/buttons/ResetAllButton.js';
import TimeControlNode from '../../../../scenery-phet/js/TimeControlNode.js';
import colorVision from '../../colorVision.js';
import PerceivedColorNode from './PerceivedColorNode.js';
class ColorVisionScreenView extends ScreenView {
  /**
   * @param {ColorVisionModel} model
   * @param {Tandem} tandem
   */
  constructor(model, tandem) {
    super({
      layoutBounds: new Bounds2(0, 0, 768, 504),
      tandem: tandem
    });

    // 'Thought bubbles' that display perceived color
    const perceivedColorNode = new PerceivedColorNode(model.perceivedColorProperty, model.playingProperty, {
      left: 20,
      top: 5
    });
    this.pdomControlAreaNode.addChild(perceivedColorNode);

    // @protected (read-only) {TimeControlNode} - the play/pause and step buttons
    this.timeControlNode = new TimeControlNode(model.playingProperty, {
      bottom: this.layoutBounds.bottom - 20,
      centerX: this.layoutBounds.centerX - 3,
      playPauseStepButtonOptions: {
        playPauseStepXSpacing: 14,
        stepForwardButtonOptions: {
          listener: () => model.manualStep()
        }
      },
      tandem: tandem.createTandem('timeControlNode')
    });
    this.pdomControlAreaNode.addChild(this.timeControlNode);

    // @protected (read-only) {ResetAllButton} - the Reset All button
    this.resetAllButton = new ResetAllButton({
      listener: () => {
        model.reset();
      },
      bottom: this.layoutBounds.bottom - 5,
      right: this.layoutBounds.right - 30,
      radius: 18,
      tandem: tandem.createTandem('resetAllButton')
    });
    this.pdomControlAreaNode.addChild(this.resetAllButton);
  }
}
colorVision.register('ColorVisionScreenView', ColorVisionScreenView);
export default ColorVisionScreenView;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJCb3VuZHMyIiwiU2NyZWVuVmlldyIsIlJlc2V0QWxsQnV0dG9uIiwiVGltZUNvbnRyb2xOb2RlIiwiY29sb3JWaXNpb24iLCJQZXJjZWl2ZWRDb2xvck5vZGUiLCJDb2xvclZpc2lvblNjcmVlblZpZXciLCJjb25zdHJ1Y3RvciIsIm1vZGVsIiwidGFuZGVtIiwibGF5b3V0Qm91bmRzIiwicGVyY2VpdmVkQ29sb3JOb2RlIiwicGVyY2VpdmVkQ29sb3JQcm9wZXJ0eSIsInBsYXlpbmdQcm9wZXJ0eSIsImxlZnQiLCJ0b3AiLCJwZG9tQ29udHJvbEFyZWFOb2RlIiwiYWRkQ2hpbGQiLCJ0aW1lQ29udHJvbE5vZGUiLCJib3R0b20iLCJjZW50ZXJYIiwicGxheVBhdXNlU3RlcEJ1dHRvbk9wdGlvbnMiLCJwbGF5UGF1c2VTdGVwWFNwYWNpbmciLCJzdGVwRm9yd2FyZEJ1dHRvbk9wdGlvbnMiLCJsaXN0ZW5lciIsIm1hbnVhbFN0ZXAiLCJjcmVhdGVUYW5kZW0iLCJyZXNldEFsbEJ1dHRvbiIsInJlc2V0IiwicmlnaHQiLCJyYWRpdXMiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIkNvbG9yVmlzaW9uU2NyZWVuVmlldy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxNC0yMDIyLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBWaWV3IGNvbXBvbmVudHMgc2hhcmVkIGJ5IGJvdGggc2NyZWVucy4gU3ViY2xhc3NlZCBieSBTaW5nbGVCdWxiU2NyZWVuVmlldyBhbmQgUkdCU2NyZWVuVmlldy5cclxuICpcclxuICogQGF1dGhvciBBYXJvbiBEYXZpc1xyXG4gKi9cclxuXHJcbmltcG9ydCBCb3VuZHMyIGZyb20gJy4uLy4uLy4uLy4uL2RvdC9qcy9Cb3VuZHMyLmpzJztcclxuaW1wb3J0IFNjcmVlblZpZXcgZnJvbSAnLi4vLi4vLi4vLi4vam9pc3QvanMvU2NyZWVuVmlldy5qcyc7XHJcbmltcG9ydCBSZXNldEFsbEJ1dHRvbiBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5LXBoZXQvanMvYnV0dG9ucy9SZXNldEFsbEJ1dHRvbi5qcyc7XHJcbmltcG9ydCBUaW1lQ29udHJvbE5vZGUgZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS1waGV0L2pzL1RpbWVDb250cm9sTm9kZS5qcyc7XHJcbmltcG9ydCBjb2xvclZpc2lvbiBmcm9tICcuLi8uLi9jb2xvclZpc2lvbi5qcyc7XHJcbmltcG9ydCBQZXJjZWl2ZWRDb2xvck5vZGUgZnJvbSAnLi9QZXJjZWl2ZWRDb2xvck5vZGUuanMnO1xyXG5cclxuY2xhc3MgQ29sb3JWaXNpb25TY3JlZW5WaWV3IGV4dGVuZHMgU2NyZWVuVmlldyB7XHJcblxyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSB7Q29sb3JWaXNpb25Nb2RlbH0gbW9kZWxcclxuICAgKiBAcGFyYW0ge1RhbmRlbX0gdGFuZGVtXHJcbiAgICovXHJcbiAgY29uc3RydWN0b3IoIG1vZGVsLCB0YW5kZW0gKSB7XHJcblxyXG4gICAgc3VwZXIoIHtcclxuICAgICAgbGF5b3V0Qm91bmRzOiBuZXcgQm91bmRzMiggMCwgMCwgNzY4LCA1MDQgKSxcclxuICAgICAgdGFuZGVtOiB0YW5kZW1cclxuICAgIH0gKTtcclxuXHJcbiAgICAvLyAnVGhvdWdodCBidWJibGVzJyB0aGF0IGRpc3BsYXkgcGVyY2VpdmVkIGNvbG9yXHJcbiAgICBjb25zdCBwZXJjZWl2ZWRDb2xvck5vZGUgPSBuZXcgUGVyY2VpdmVkQ29sb3JOb2RlKCBtb2RlbC5wZXJjZWl2ZWRDb2xvclByb3BlcnR5LCBtb2RlbC5wbGF5aW5nUHJvcGVydHksIHtcclxuICAgICAgbGVmdDogMjAsXHJcbiAgICAgIHRvcDogNVxyXG4gICAgfSApO1xyXG4gICAgdGhpcy5wZG9tQ29udHJvbEFyZWFOb2RlLmFkZENoaWxkKCBwZXJjZWl2ZWRDb2xvck5vZGUgKTtcclxuXHJcbiAgICAvLyBAcHJvdGVjdGVkIChyZWFkLW9ubHkpIHtUaW1lQ29udHJvbE5vZGV9IC0gdGhlIHBsYXkvcGF1c2UgYW5kIHN0ZXAgYnV0dG9uc1xyXG4gICAgdGhpcy50aW1lQ29udHJvbE5vZGUgPSBuZXcgVGltZUNvbnRyb2xOb2RlKCBtb2RlbC5wbGF5aW5nUHJvcGVydHksIHtcclxuICAgICAgYm90dG9tOiB0aGlzLmxheW91dEJvdW5kcy5ib3R0b20gLSAyMCxcclxuICAgICAgY2VudGVyWDogdGhpcy5sYXlvdXRCb3VuZHMuY2VudGVyWCAtIDMsXHJcbiAgICAgIHBsYXlQYXVzZVN0ZXBCdXR0b25PcHRpb25zOiB7XHJcbiAgICAgICAgcGxheVBhdXNlU3RlcFhTcGFjaW5nOiAxNCxcclxuICAgICAgICBzdGVwRm9yd2FyZEJ1dHRvbk9wdGlvbnM6IHtcclxuICAgICAgICAgIGxpc3RlbmVyOiAoKSA9PiBtb2RlbC5tYW51YWxTdGVwKClcclxuICAgICAgICB9XHJcbiAgICAgIH0sXHJcbiAgICAgIHRhbmRlbTogdGFuZGVtLmNyZWF0ZVRhbmRlbSggJ3RpbWVDb250cm9sTm9kZScgKVxyXG4gICAgfSApO1xyXG4gICAgdGhpcy5wZG9tQ29udHJvbEFyZWFOb2RlLmFkZENoaWxkKCB0aGlzLnRpbWVDb250cm9sTm9kZSApO1xyXG5cclxuICAgIC8vIEBwcm90ZWN0ZWQgKHJlYWQtb25seSkge1Jlc2V0QWxsQnV0dG9ufSAtIHRoZSBSZXNldCBBbGwgYnV0dG9uXHJcbiAgICB0aGlzLnJlc2V0QWxsQnV0dG9uID0gbmV3IFJlc2V0QWxsQnV0dG9uKCB7XHJcbiAgICAgIGxpc3RlbmVyOiAoKSA9PiB7IG1vZGVsLnJlc2V0KCk7IH0sXHJcbiAgICAgIGJvdHRvbTogdGhpcy5sYXlvdXRCb3VuZHMuYm90dG9tIC0gNSxcclxuICAgICAgcmlnaHQ6IHRoaXMubGF5b3V0Qm91bmRzLnJpZ2h0IC0gMzAsXHJcbiAgICAgIHJhZGl1czogMTgsXHJcbiAgICAgIHRhbmRlbTogdGFuZGVtLmNyZWF0ZVRhbmRlbSggJ3Jlc2V0QWxsQnV0dG9uJyApXHJcbiAgICB9ICk7XHJcbiAgICB0aGlzLnBkb21Db250cm9sQXJlYU5vZGUuYWRkQ2hpbGQoIHRoaXMucmVzZXRBbGxCdXR0b24gKTtcclxuICB9XHJcbn1cclxuXHJcbmNvbG9yVmlzaW9uLnJlZ2lzdGVyKCAnQ29sb3JWaXNpb25TY3JlZW5WaWV3JywgQ29sb3JWaXNpb25TY3JlZW5WaWV3ICk7XHJcbmV4cG9ydCBkZWZhdWx0IENvbG9yVmlzaW9uU2NyZWVuVmlldzsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsT0FBTyxNQUFNLCtCQUErQjtBQUNuRCxPQUFPQyxVQUFVLE1BQU0sb0NBQW9DO0FBQzNELE9BQU9DLGNBQWMsTUFBTSx1REFBdUQ7QUFDbEYsT0FBT0MsZUFBZSxNQUFNLGdEQUFnRDtBQUM1RSxPQUFPQyxXQUFXLE1BQU0sc0JBQXNCO0FBQzlDLE9BQU9DLGtCQUFrQixNQUFNLHlCQUF5QjtBQUV4RCxNQUFNQyxxQkFBcUIsU0FBU0wsVUFBVSxDQUFDO0VBRTdDO0FBQ0Y7QUFDQTtBQUNBO0VBQ0VNLFdBQVdBLENBQUVDLEtBQUssRUFBRUMsTUFBTSxFQUFHO0lBRTNCLEtBQUssQ0FBRTtNQUNMQyxZQUFZLEVBQUUsSUFBSVYsT0FBTyxDQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEdBQUksQ0FBQztNQUMzQ1MsTUFBTSxFQUFFQTtJQUNWLENBQUUsQ0FBQzs7SUFFSDtJQUNBLE1BQU1FLGtCQUFrQixHQUFHLElBQUlOLGtCQUFrQixDQUFFRyxLQUFLLENBQUNJLHNCQUFzQixFQUFFSixLQUFLLENBQUNLLGVBQWUsRUFBRTtNQUN0R0MsSUFBSSxFQUFFLEVBQUU7TUFDUkMsR0FBRyxFQUFFO0lBQ1AsQ0FBRSxDQUFDO0lBQ0gsSUFBSSxDQUFDQyxtQkFBbUIsQ0FBQ0MsUUFBUSxDQUFFTixrQkFBbUIsQ0FBQzs7SUFFdkQ7SUFDQSxJQUFJLENBQUNPLGVBQWUsR0FBRyxJQUFJZixlQUFlLENBQUVLLEtBQUssQ0FBQ0ssZUFBZSxFQUFFO01BQ2pFTSxNQUFNLEVBQUUsSUFBSSxDQUFDVCxZQUFZLENBQUNTLE1BQU0sR0FBRyxFQUFFO01BQ3JDQyxPQUFPLEVBQUUsSUFBSSxDQUFDVixZQUFZLENBQUNVLE9BQU8sR0FBRyxDQUFDO01BQ3RDQywwQkFBMEIsRUFBRTtRQUMxQkMscUJBQXFCLEVBQUUsRUFBRTtRQUN6QkMsd0JBQXdCLEVBQUU7VUFDeEJDLFFBQVEsRUFBRUEsQ0FBQSxLQUFNaEIsS0FBSyxDQUFDaUIsVUFBVSxDQUFDO1FBQ25DO01BQ0YsQ0FBQztNQUNEaEIsTUFBTSxFQUFFQSxNQUFNLENBQUNpQixZQUFZLENBQUUsaUJBQWtCO0lBQ2pELENBQUUsQ0FBQztJQUNILElBQUksQ0FBQ1YsbUJBQW1CLENBQUNDLFFBQVEsQ0FBRSxJQUFJLENBQUNDLGVBQWdCLENBQUM7O0lBRXpEO0lBQ0EsSUFBSSxDQUFDUyxjQUFjLEdBQUcsSUFBSXpCLGNBQWMsQ0FBRTtNQUN4Q3NCLFFBQVEsRUFBRUEsQ0FBQSxLQUFNO1FBQUVoQixLQUFLLENBQUNvQixLQUFLLENBQUMsQ0FBQztNQUFFLENBQUM7TUFDbENULE1BQU0sRUFBRSxJQUFJLENBQUNULFlBQVksQ0FBQ1MsTUFBTSxHQUFHLENBQUM7TUFDcENVLEtBQUssRUFBRSxJQUFJLENBQUNuQixZQUFZLENBQUNtQixLQUFLLEdBQUcsRUFBRTtNQUNuQ0MsTUFBTSxFQUFFLEVBQUU7TUFDVnJCLE1BQU0sRUFBRUEsTUFBTSxDQUFDaUIsWUFBWSxDQUFFLGdCQUFpQjtJQUNoRCxDQUFFLENBQUM7SUFDSCxJQUFJLENBQUNWLG1CQUFtQixDQUFDQyxRQUFRLENBQUUsSUFBSSxDQUFDVSxjQUFlLENBQUM7RUFDMUQ7QUFDRjtBQUVBdkIsV0FBVyxDQUFDMkIsUUFBUSxDQUFFLHVCQUF1QixFQUFFekIscUJBQXNCLENBQUM7QUFDdEUsZUFBZUEscUJBQXFCIn0=