// Copyright 2014-2022, University of Colorado Boulder

/**
 * View for RGBSlider objects
 *
 * @author Aaron Davis (PhET Interactive Simulations)
 */

import Dimension2 from '../../../../dot/js/Dimension2.js';
import Range from '../../../../dot/js/Range.js';
import { LinearGradient, Rectangle } from '../../../../scenery/js/imports.js';
import VSlider from '../../../../sun/js/VSlider.js';
import colorVision from '../../colorVision.js';
import ColorVisionConstants from '../../common/ColorVisionConstants.js';
class RGBSlider extends Rectangle {
  /**
   * @param {Property.<number>} intensityProperty the intensity property for this color from the model
   * @param {string} color
   * @param {Tandem} tandem
   */
  constructor(intensityProperty, color, tandem) {
    const slider = new VSlider(intensityProperty, new Range(0, 100), {
      trackSize: new Dimension2(2, 100),
      thumbSize: new Dimension2(28, 14),
      thumbTouchAreaXDilation: 7,
      thumbTouchAreaYDilation: 7,
      tandem: tandem
    });
    const rectWidth = slider.width + 8;
    const rectHeight = slider.height + 22;
    super(0, 0, rectWidth, rectHeight, 5, 5, {
      fill: new LinearGradient(0, 0, 0, rectHeight).addColorStop(0, color).addColorStop(1, 'black'),
      stroke: ColorVisionConstants.SLIDER_BORDER_STROKE
    });
    slider.centerX = this.centerX;
    slider.centerY = this.centerY;
    this.addChild(slider);
  }
}
colorVision.register('RGBSlider', RGBSlider);
export default RGBSlider;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJEaW1lbnNpb24yIiwiUmFuZ2UiLCJMaW5lYXJHcmFkaWVudCIsIlJlY3RhbmdsZSIsIlZTbGlkZXIiLCJjb2xvclZpc2lvbiIsIkNvbG9yVmlzaW9uQ29uc3RhbnRzIiwiUkdCU2xpZGVyIiwiY29uc3RydWN0b3IiLCJpbnRlbnNpdHlQcm9wZXJ0eSIsImNvbG9yIiwidGFuZGVtIiwic2xpZGVyIiwidHJhY2tTaXplIiwidGh1bWJTaXplIiwidGh1bWJUb3VjaEFyZWFYRGlsYXRpb24iLCJ0aHVtYlRvdWNoQXJlYVlEaWxhdGlvbiIsInJlY3RXaWR0aCIsIndpZHRoIiwicmVjdEhlaWdodCIsImhlaWdodCIsImZpbGwiLCJhZGRDb2xvclN0b3AiLCJzdHJva2UiLCJTTElERVJfQk9SREVSX1NUUk9LRSIsImNlbnRlclgiLCJjZW50ZXJZIiwiYWRkQ2hpbGQiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIlJHQlNsaWRlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxNC0yMDIyLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBWaWV3IGZvciBSR0JTbGlkZXIgb2JqZWN0c1xyXG4gKlxyXG4gKiBAYXV0aG9yIEFhcm9uIERhdmlzIChQaEVUIEludGVyYWN0aXZlIFNpbXVsYXRpb25zKVxyXG4gKi9cclxuXHJcbmltcG9ydCBEaW1lbnNpb24yIGZyb20gJy4uLy4uLy4uLy4uL2RvdC9qcy9EaW1lbnNpb24yLmpzJztcclxuaW1wb3J0IFJhbmdlIGZyb20gJy4uLy4uLy4uLy4uL2RvdC9qcy9SYW5nZS5qcyc7XHJcbmltcG9ydCB7IExpbmVhckdyYWRpZW50LCBSZWN0YW5nbGUgfSBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgVlNsaWRlciBmcm9tICcuLi8uLi8uLi8uLi9zdW4vanMvVlNsaWRlci5qcyc7XHJcbmltcG9ydCBjb2xvclZpc2lvbiBmcm9tICcuLi8uLi9jb2xvclZpc2lvbi5qcyc7XHJcbmltcG9ydCBDb2xvclZpc2lvbkNvbnN0YW50cyBmcm9tICcuLi8uLi9jb21tb24vQ29sb3JWaXNpb25Db25zdGFudHMuanMnO1xyXG5cclxuY2xhc3MgUkdCU2xpZGVyIGV4dGVuZHMgUmVjdGFuZ2xlIHtcclxuXHJcbiAgLyoqXHJcbiAgICogQHBhcmFtIHtQcm9wZXJ0eS48bnVtYmVyPn0gaW50ZW5zaXR5UHJvcGVydHkgdGhlIGludGVuc2l0eSBwcm9wZXJ0eSBmb3IgdGhpcyBjb2xvciBmcm9tIHRoZSBtb2RlbFxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBjb2xvclxyXG4gICAqIEBwYXJhbSB7VGFuZGVtfSB0YW5kZW1cclxuICAgKi9cclxuICBjb25zdHJ1Y3RvciggaW50ZW5zaXR5UHJvcGVydHksIGNvbG9yLCB0YW5kZW0gKSB7XHJcblxyXG4gICAgY29uc3Qgc2xpZGVyID0gbmV3IFZTbGlkZXIoIGludGVuc2l0eVByb3BlcnR5LCBuZXcgUmFuZ2UoIDAsIDEwMCApLCB7XHJcbiAgICAgIHRyYWNrU2l6ZTogbmV3IERpbWVuc2lvbjIoIDIsIDEwMCApLFxyXG4gICAgICB0aHVtYlNpemU6IG5ldyBEaW1lbnNpb24yKCAyOCwgMTQgKSxcclxuICAgICAgdGh1bWJUb3VjaEFyZWFYRGlsYXRpb246IDcsXHJcbiAgICAgIHRodW1iVG91Y2hBcmVhWURpbGF0aW9uOiA3LFxyXG4gICAgICB0YW5kZW06IHRhbmRlbVxyXG4gICAgfSApO1xyXG5cclxuICAgIGNvbnN0IHJlY3RXaWR0aCA9IHNsaWRlci53aWR0aCArIDg7XHJcbiAgICBjb25zdCByZWN0SGVpZ2h0ID0gc2xpZGVyLmhlaWdodCArIDIyO1xyXG5cclxuICAgIHN1cGVyKCAwLCAwLCByZWN0V2lkdGgsIHJlY3RIZWlnaHQsIDUsIDUsXHJcbiAgICAgIHtcclxuICAgICAgICBmaWxsOiBuZXcgTGluZWFyR3JhZGllbnQoIDAsIDAsIDAsIHJlY3RIZWlnaHQgKS5hZGRDb2xvclN0b3AoIDAsIGNvbG9yICkuYWRkQ29sb3JTdG9wKCAxLCAnYmxhY2snICksXHJcbiAgICAgICAgc3Ryb2tlOiBDb2xvclZpc2lvbkNvbnN0YW50cy5TTElERVJfQk9SREVSX1NUUk9LRVxyXG4gICAgICB9ICk7XHJcblxyXG4gICAgc2xpZGVyLmNlbnRlclggPSB0aGlzLmNlbnRlclg7XHJcbiAgICBzbGlkZXIuY2VudGVyWSA9IHRoaXMuY2VudGVyWTtcclxuXHJcbiAgICB0aGlzLmFkZENoaWxkKCBzbGlkZXIgKTtcclxuICB9XHJcbn1cclxuXHJcbmNvbG9yVmlzaW9uLnJlZ2lzdGVyKCAnUkdCU2xpZGVyJywgUkdCU2xpZGVyICk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBSR0JTbGlkZXI7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLFVBQVUsTUFBTSxrQ0FBa0M7QUFDekQsT0FBT0MsS0FBSyxNQUFNLDZCQUE2QjtBQUMvQyxTQUFTQyxjQUFjLEVBQUVDLFNBQVMsUUFBUSxtQ0FBbUM7QUFDN0UsT0FBT0MsT0FBTyxNQUFNLCtCQUErQjtBQUNuRCxPQUFPQyxXQUFXLE1BQU0sc0JBQXNCO0FBQzlDLE9BQU9DLG9CQUFvQixNQUFNLHNDQUFzQztBQUV2RSxNQUFNQyxTQUFTLFNBQVNKLFNBQVMsQ0FBQztFQUVoQztBQUNGO0FBQ0E7QUFDQTtBQUNBO0VBQ0VLLFdBQVdBLENBQUVDLGlCQUFpQixFQUFFQyxLQUFLLEVBQUVDLE1BQU0sRUFBRztJQUU5QyxNQUFNQyxNQUFNLEdBQUcsSUFBSVIsT0FBTyxDQUFFSyxpQkFBaUIsRUFBRSxJQUFJUixLQUFLLENBQUUsQ0FBQyxFQUFFLEdBQUksQ0FBQyxFQUFFO01BQ2xFWSxTQUFTLEVBQUUsSUFBSWIsVUFBVSxDQUFFLENBQUMsRUFBRSxHQUFJLENBQUM7TUFDbkNjLFNBQVMsRUFBRSxJQUFJZCxVQUFVLENBQUUsRUFBRSxFQUFFLEVBQUcsQ0FBQztNQUNuQ2UsdUJBQXVCLEVBQUUsQ0FBQztNQUMxQkMsdUJBQXVCLEVBQUUsQ0FBQztNQUMxQkwsTUFBTSxFQUFFQTtJQUNWLENBQUUsQ0FBQztJQUVILE1BQU1NLFNBQVMsR0FBR0wsTUFBTSxDQUFDTSxLQUFLLEdBQUcsQ0FBQztJQUNsQyxNQUFNQyxVQUFVLEdBQUdQLE1BQU0sQ0FBQ1EsTUFBTSxHQUFHLEVBQUU7SUFFckMsS0FBSyxDQUFFLENBQUMsRUFBRSxDQUFDLEVBQUVILFNBQVMsRUFBRUUsVUFBVSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQ3RDO01BQ0VFLElBQUksRUFBRSxJQUFJbkIsY0FBYyxDQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFaUIsVUFBVyxDQUFDLENBQUNHLFlBQVksQ0FBRSxDQUFDLEVBQUVaLEtBQU0sQ0FBQyxDQUFDWSxZQUFZLENBQUUsQ0FBQyxFQUFFLE9BQVEsQ0FBQztNQUNuR0MsTUFBTSxFQUFFakIsb0JBQW9CLENBQUNrQjtJQUMvQixDQUFFLENBQUM7SUFFTFosTUFBTSxDQUFDYSxPQUFPLEdBQUcsSUFBSSxDQUFDQSxPQUFPO0lBQzdCYixNQUFNLENBQUNjLE9BQU8sR0FBRyxJQUFJLENBQUNBLE9BQU87SUFFN0IsSUFBSSxDQUFDQyxRQUFRLENBQUVmLE1BQU8sQ0FBQztFQUN6QjtBQUNGO0FBRUFQLFdBQVcsQ0FBQ3VCLFFBQVEsQ0FBRSxXQUFXLEVBQUVyQixTQUFVLENBQUM7QUFFOUMsZUFBZUEsU0FBUyJ9