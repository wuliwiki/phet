// Copyright 2014-2022, University of Colorado Boulder

/**
 *  Water is a solution of pure water. It contains no solute.
 *
 * @author Andrey Zelenkov (Mlearner)
 * @author Chris Malley (PixelZoom, Inc.)
 */

import acidBaseSolutions from '../../../acidBaseSolutions.js';
import ABSConstants from '../../ABSConstants.js';
import AqueousSolution from './AqueousSolution.js';
import ABSColors from '../../ABSColors.js';
export default class Water extends AqueousSolution {
  constructor(tandem) {
    // particles found in this solution
    const particles = [{
      key: 'H2O',
      color: ABSColors.H2O,
      getConcentration: () => this.getH2OConcentration()
    }, {
      key: 'H3O',
      color: ABSColors.H3O,
      getConcentration: () => this.getH3OConcentration()
    }, {
      key: 'OH',
      color: ABSColors.OH,
      getConcentration: () => this.getOHConcentration()
    }];
    super('water', 0, 0, particles, tandem);
  }
  getSoluteConcentration() {
    return 0;
  }
  getProductConcentration() {
    return 0;
  }

  // [H3O] = sqrt(Kw)
  getH3OConcentration() {
    return Math.sqrt(ABSConstants.WATER_EQUILIBRIUM_CONSTANT); // Kw = [H30] * [OH-]
  }

  // [OH] = [H3O]
  getOHConcentration() {
    return this.getH3OConcentration();
  }

  // [H2O] = W
  getH2OConcentration() {
    return ABSConstants.WATER_CONCENTRATION;
  }

  // Should never be setting the strength of water.
  isValidStrength(strength) {
    return false;
  }
}
acidBaseSolutions.register('Water', Water);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhY2lkQmFzZVNvbHV0aW9ucyIsIkFCU0NvbnN0YW50cyIsIkFxdWVvdXNTb2x1dGlvbiIsIkFCU0NvbG9ycyIsIldhdGVyIiwiY29uc3RydWN0b3IiLCJ0YW5kZW0iLCJwYXJ0aWNsZXMiLCJrZXkiLCJjb2xvciIsIkgyTyIsImdldENvbmNlbnRyYXRpb24iLCJnZXRIMk9Db25jZW50cmF0aW9uIiwiSDNPIiwiZ2V0SDNPQ29uY2VudHJhdGlvbiIsIk9IIiwiZ2V0T0hDb25jZW50cmF0aW9uIiwiZ2V0U29sdXRlQ29uY2VudHJhdGlvbiIsImdldFByb2R1Y3RDb25jZW50cmF0aW9uIiwiTWF0aCIsInNxcnQiLCJXQVRFUl9FUVVJTElCUklVTV9DT05TVEFOVCIsIldBVEVSX0NPTkNFTlRSQVRJT04iLCJpc1ZhbGlkU3RyZW5ndGgiLCJzdHJlbmd0aCIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiV2F0ZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTQtMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogIFdhdGVyIGlzIGEgc29sdXRpb24gb2YgcHVyZSB3YXRlci4gSXQgY29udGFpbnMgbm8gc29sdXRlLlxyXG4gKlxyXG4gKiBAYXV0aG9yIEFuZHJleSBaZWxlbmtvdiAoTWxlYXJuZXIpXHJcbiAqIEBhdXRob3IgQ2hyaXMgTWFsbGV5IChQaXhlbFpvb20sIEluYy4pXHJcbiAqL1xyXG5cclxuaW1wb3J0IGFjaWRCYXNlU29sdXRpb25zIGZyb20gJy4uLy4uLy4uL2FjaWRCYXNlU29sdXRpb25zLmpzJztcclxuaW1wb3J0IEFCU0NvbnN0YW50cyBmcm9tICcuLi8uLi9BQlNDb25zdGFudHMuanMnO1xyXG5pbXBvcnQgQXF1ZW91c1NvbHV0aW9uIGZyb20gJy4vQXF1ZW91c1NvbHV0aW9uLmpzJztcclxuaW1wb3J0IEFCU0NvbG9ycyBmcm9tICcuLi8uLi9BQlNDb2xvcnMuanMnO1xyXG5pbXBvcnQgVGFuZGVtIGZyb20gJy4uLy4uLy4uLy4uLy4uL3RhbmRlbS9qcy9UYW5kZW0uanMnO1xyXG5pbXBvcnQgeyBQYXJ0aWNsZSB9IGZyb20gJy4vUGFydGljbGUuanMnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgV2F0ZXIgZXh0ZW5kcyBBcXVlb3VzU29sdXRpb24ge1xyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoIHRhbmRlbTogVGFuZGVtICkge1xyXG5cclxuICAgIC8vIHBhcnRpY2xlcyBmb3VuZCBpbiB0aGlzIHNvbHV0aW9uXHJcbiAgICBjb25zdCBwYXJ0aWNsZXM6IFBhcnRpY2xlW10gPSBbXHJcbiAgICAgIHsga2V5OiAnSDJPJywgY29sb3I6IEFCU0NvbG9ycy5IMk8sIGdldENvbmNlbnRyYXRpb246ICgpID0+IHRoaXMuZ2V0SDJPQ29uY2VudHJhdGlvbigpIH0sXHJcbiAgICAgIHsga2V5OiAnSDNPJywgY29sb3I6IEFCU0NvbG9ycy5IM08sIGdldENvbmNlbnRyYXRpb246ICgpID0+IHRoaXMuZ2V0SDNPQ29uY2VudHJhdGlvbigpIH0sXHJcbiAgICAgIHsga2V5OiAnT0gnLCBjb2xvcjogQUJTQ29sb3JzLk9ILCBnZXRDb25jZW50cmF0aW9uOiAoKSA9PiB0aGlzLmdldE9IQ29uY2VudHJhdGlvbigpIH1cclxuICAgIF07XHJcblxyXG4gICAgc3VwZXIoICd3YXRlcicsIDAsIDAsIHBhcnRpY2xlcywgdGFuZGVtICk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgb3ZlcnJpZGUgZ2V0U29sdXRlQ29uY2VudHJhdGlvbigpOiBudW1iZXIge1xyXG4gICAgcmV0dXJuIDA7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgb3ZlcnJpZGUgZ2V0UHJvZHVjdENvbmNlbnRyYXRpb24oKTogbnVtYmVyIHtcclxuICAgIHJldHVybiAwO1xyXG4gIH1cclxuXHJcbiAgLy8gW0gzT10gPSBzcXJ0KEt3KVxyXG4gIHB1YmxpYyBvdmVycmlkZSBnZXRIM09Db25jZW50cmF0aW9uKCk6IG51bWJlciB7XHJcbiAgICByZXR1cm4gTWF0aC5zcXJ0KCBBQlNDb25zdGFudHMuV0FURVJfRVFVSUxJQlJJVU1fQ09OU1RBTlQgKTsgLy8gS3cgPSBbSDMwXSAqIFtPSC1dXHJcbiAgfVxyXG5cclxuICAvLyBbT0hdID0gW0gzT11cclxuICBwdWJsaWMgb3ZlcnJpZGUgZ2V0T0hDb25jZW50cmF0aW9uKCk6IG51bWJlciB7XHJcbiAgICByZXR1cm4gdGhpcy5nZXRIM09Db25jZW50cmF0aW9uKCk7XHJcbiAgfVxyXG5cclxuICAvLyBbSDJPXSA9IFdcclxuICBwdWJsaWMgb3ZlcnJpZGUgZ2V0SDJPQ29uY2VudHJhdGlvbigpOiBudW1iZXIge1xyXG4gICAgcmV0dXJuIEFCU0NvbnN0YW50cy5XQVRFUl9DT05DRU5UUkFUSU9OO1xyXG4gIH1cclxuXHJcbiAgLy8gU2hvdWxkIG5ldmVyIGJlIHNldHRpbmcgdGhlIHN0cmVuZ3RoIG9mIHdhdGVyLlxyXG4gIHByb3RlY3RlZCBvdmVycmlkZSBpc1ZhbGlkU3RyZW5ndGgoIHN0cmVuZ3RoOiBudW1iZXIgKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gZmFsc2U7XHJcbiAgfVxyXG59XHJcblxyXG5hY2lkQmFzZVNvbHV0aW9ucy5yZWdpc3RlciggJ1dhdGVyJywgV2F0ZXIgKTsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxpQkFBaUIsTUFBTSwrQkFBK0I7QUFDN0QsT0FBT0MsWUFBWSxNQUFNLHVCQUF1QjtBQUNoRCxPQUFPQyxlQUFlLE1BQU0sc0JBQXNCO0FBQ2xELE9BQU9DLFNBQVMsTUFBTSxvQkFBb0I7QUFJMUMsZUFBZSxNQUFNQyxLQUFLLFNBQVNGLGVBQWUsQ0FBQztFQUUxQ0csV0FBV0EsQ0FBRUMsTUFBYyxFQUFHO0lBRW5DO0lBQ0EsTUFBTUMsU0FBcUIsR0FBRyxDQUM1QjtNQUFFQyxHQUFHLEVBQUUsS0FBSztNQUFFQyxLQUFLLEVBQUVOLFNBQVMsQ0FBQ08sR0FBRztNQUFFQyxnQkFBZ0IsRUFBRUEsQ0FBQSxLQUFNLElBQUksQ0FBQ0MsbUJBQW1CLENBQUM7SUFBRSxDQUFDLEVBQ3hGO01BQUVKLEdBQUcsRUFBRSxLQUFLO01BQUVDLEtBQUssRUFBRU4sU0FBUyxDQUFDVSxHQUFHO01BQUVGLGdCQUFnQixFQUFFQSxDQUFBLEtBQU0sSUFBSSxDQUFDRyxtQkFBbUIsQ0FBQztJQUFFLENBQUMsRUFDeEY7TUFBRU4sR0FBRyxFQUFFLElBQUk7TUFBRUMsS0FBSyxFQUFFTixTQUFTLENBQUNZLEVBQUU7TUFBRUosZ0JBQWdCLEVBQUVBLENBQUEsS0FBTSxJQUFJLENBQUNLLGtCQUFrQixDQUFDO0lBQUUsQ0FBQyxDQUN0RjtJQUVELEtBQUssQ0FBRSxPQUFPLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRVQsU0FBUyxFQUFFRCxNQUFPLENBQUM7RUFDM0M7RUFFZ0JXLHNCQUFzQkEsQ0FBQSxFQUFXO0lBQy9DLE9BQU8sQ0FBQztFQUNWO0VBRWdCQyx1QkFBdUJBLENBQUEsRUFBVztJQUNoRCxPQUFPLENBQUM7RUFDVjs7RUFFQTtFQUNnQkosbUJBQW1CQSxDQUFBLEVBQVc7SUFDNUMsT0FBT0ssSUFBSSxDQUFDQyxJQUFJLENBQUVuQixZQUFZLENBQUNvQiwwQkFBMkIsQ0FBQyxDQUFDLENBQUM7RUFDL0Q7O0VBRUE7RUFDZ0JMLGtCQUFrQkEsQ0FBQSxFQUFXO0lBQzNDLE9BQU8sSUFBSSxDQUFDRixtQkFBbUIsQ0FBQyxDQUFDO0VBQ25DOztFQUVBO0VBQ2dCRixtQkFBbUJBLENBQUEsRUFBVztJQUM1QyxPQUFPWCxZQUFZLENBQUNxQixtQkFBbUI7RUFDekM7O0VBRUE7RUFDbUJDLGVBQWVBLENBQUVDLFFBQWdCLEVBQVk7SUFDOUQsT0FBTyxLQUFLO0VBQ2Q7QUFDRjtBQUVBeEIsaUJBQWlCLENBQUN5QixRQUFRLENBQUUsT0FBTyxFQUFFckIsS0FBTSxDQUFDIn0=