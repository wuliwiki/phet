// Copyright 2016-2022, University of Colorado Boulder

/**
 * View-specific Properties
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import BooleanProperty from '../../../../axon/js/BooleanProperty.js';
import StringUnionProperty from '../../../../axon/js/StringUnionProperty.js';
import acidBaseSolutions from '../../acidBaseSolutions.js';
import { ToolModeValues } from './ToolMode.js';
import { ViewModeValues } from './ViewMode.js';
export default class ABSViewProperties {
  constructor(tandem) {
    this.solventVisibleProperty = new BooleanProperty(false, {
      tandem: tandem.createTandem('solventVisibleProperty')
    });
    this.viewModeProperty = new StringUnionProperty('particles', {
      validValues: ViewModeValues,
      tandem: tandem.createTandem('viewModeProperty')
    });
    this.toolModeProperty = new StringUnionProperty('pHMeter', {
      validValues: ToolModeValues,
      tandem: tandem.createTandem('toolModeProperty')
    });
  }
  dispose() {
    assert && assert(false, 'dispose is not supported, exists for the lifetime of the sim');
  }
  reset() {
    this.solventVisibleProperty.reset();
    this.viewModeProperty.reset();
    this.toolModeProperty.reset();
  }
}
acidBaseSolutions.register('ABSViewProperties', ABSViewProperties);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJCb29sZWFuUHJvcGVydHkiLCJTdHJpbmdVbmlvblByb3BlcnR5IiwiYWNpZEJhc2VTb2x1dGlvbnMiLCJUb29sTW9kZVZhbHVlcyIsIlZpZXdNb2RlVmFsdWVzIiwiQUJTVmlld1Byb3BlcnRpZXMiLCJjb25zdHJ1Y3RvciIsInRhbmRlbSIsInNvbHZlbnRWaXNpYmxlUHJvcGVydHkiLCJjcmVhdGVUYW5kZW0iLCJ2aWV3TW9kZVByb3BlcnR5IiwidmFsaWRWYWx1ZXMiLCJ0b29sTW9kZVByb3BlcnR5IiwiZGlzcG9zZSIsImFzc2VydCIsInJlc2V0IiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJBQlNWaWV3UHJvcGVydGllcy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxNi0yMDIyLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBWaWV3LXNwZWNpZmljIFByb3BlcnRpZXNcclxuICpcclxuICogQGF1dGhvciBDaHJpcyBNYWxsZXkgKFBpeGVsWm9vbSwgSW5jLilcclxuICovXHJcblxyXG5pbXBvcnQgQm9vbGVhblByb3BlcnR5IGZyb20gJy4uLy4uLy4uLy4uL2F4b24vanMvQm9vbGVhblByb3BlcnR5LmpzJztcclxuaW1wb3J0IFByb3BlcnR5IGZyb20gJy4uLy4uLy4uLy4uL2F4b24vanMvUHJvcGVydHkuanMnO1xyXG5pbXBvcnQgU3RyaW5nVW5pb25Qcm9wZXJ0eSBmcm9tICcuLi8uLi8uLi8uLi9heG9uL2pzL1N0cmluZ1VuaW9uUHJvcGVydHkuanMnO1xyXG5pbXBvcnQgVGFuZGVtIGZyb20gJy4uLy4uLy4uLy4uL3RhbmRlbS9qcy9UYW5kZW0uanMnO1xyXG5pbXBvcnQgYWNpZEJhc2VTb2x1dGlvbnMgZnJvbSAnLi4vLi4vYWNpZEJhc2VTb2x1dGlvbnMuanMnO1xyXG5pbXBvcnQgeyBUb29sTW9kZSwgVG9vbE1vZGVWYWx1ZXMgfSBmcm9tICcuL1Rvb2xNb2RlLmpzJztcclxuaW1wb3J0IHsgVmlld01vZGUsIFZpZXdNb2RlVmFsdWVzIH0gZnJvbSAnLi9WaWV3TW9kZS5qcyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBQlNWaWV3UHJvcGVydGllcyB7XHJcblxyXG4gIHB1YmxpYyByZWFkb25seSBzb2x2ZW50VmlzaWJsZVByb3BlcnR5OiBQcm9wZXJ0eTxib29sZWFuPjtcclxuICBwdWJsaWMgcmVhZG9ubHkgdmlld01vZGVQcm9wZXJ0eTogU3RyaW5nVW5pb25Qcm9wZXJ0eTxWaWV3TW9kZT47XHJcbiAgcHVibGljIHJlYWRvbmx5IHRvb2xNb2RlUHJvcGVydHk6IFN0cmluZ1VuaW9uUHJvcGVydHk8VG9vbE1vZGU+O1xyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoIHRhbmRlbTogVGFuZGVtICkge1xyXG5cclxuICAgIHRoaXMuc29sdmVudFZpc2libGVQcm9wZXJ0eSA9IG5ldyBCb29sZWFuUHJvcGVydHkoIGZhbHNlLCB7XHJcbiAgICAgIHRhbmRlbTogdGFuZGVtLmNyZWF0ZVRhbmRlbSggJ3NvbHZlbnRWaXNpYmxlUHJvcGVydHknIClcclxuICAgIH0gKTtcclxuXHJcbiAgICB0aGlzLnZpZXdNb2RlUHJvcGVydHkgPSBuZXcgU3RyaW5nVW5pb25Qcm9wZXJ0eSggJ3BhcnRpY2xlcycsIHtcclxuICAgICAgdmFsaWRWYWx1ZXM6IFZpZXdNb2RlVmFsdWVzLFxyXG4gICAgICB0YW5kZW06IHRhbmRlbS5jcmVhdGVUYW5kZW0oICd2aWV3TW9kZVByb3BlcnR5JyApXHJcbiAgICB9ICk7XHJcblxyXG4gICAgdGhpcy50b29sTW9kZVByb3BlcnR5ID0gbmV3IFN0cmluZ1VuaW9uUHJvcGVydHkoICdwSE1ldGVyJywge1xyXG4gICAgICB2YWxpZFZhbHVlczogVG9vbE1vZGVWYWx1ZXMsXHJcbiAgICAgIHRhbmRlbTogdGFuZGVtLmNyZWF0ZVRhbmRlbSggJ3Rvb2xNb2RlUHJvcGVydHknIClcclxuICAgIH0gKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBkaXNwb3NlKCk6IHZvaWQge1xyXG4gICAgYXNzZXJ0ICYmIGFzc2VydCggZmFsc2UsICdkaXNwb3NlIGlzIG5vdCBzdXBwb3J0ZWQsIGV4aXN0cyBmb3IgdGhlIGxpZmV0aW1lIG9mIHRoZSBzaW0nICk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgcmVzZXQoKTogdm9pZCB7XHJcbiAgICB0aGlzLnNvbHZlbnRWaXNpYmxlUHJvcGVydHkucmVzZXQoKTtcclxuICAgIHRoaXMudmlld01vZGVQcm9wZXJ0eS5yZXNldCgpO1xyXG4gICAgdGhpcy50b29sTW9kZVByb3BlcnR5LnJlc2V0KCk7XHJcbiAgfVxyXG59XHJcblxyXG5hY2lkQmFzZVNvbHV0aW9ucy5yZWdpc3RlciggJ0FCU1ZpZXdQcm9wZXJ0aWVzJywgQUJTVmlld1Byb3BlcnRpZXMgKTsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsZUFBZSxNQUFNLHdDQUF3QztBQUVwRSxPQUFPQyxtQkFBbUIsTUFBTSw0Q0FBNEM7QUFFNUUsT0FBT0MsaUJBQWlCLE1BQU0sNEJBQTRCO0FBQzFELFNBQW1CQyxjQUFjLFFBQVEsZUFBZTtBQUN4RCxTQUFtQkMsY0FBYyxRQUFRLGVBQWU7QUFFeEQsZUFBZSxNQUFNQyxpQkFBaUIsQ0FBQztFQU05QkMsV0FBV0EsQ0FBRUMsTUFBYyxFQUFHO0lBRW5DLElBQUksQ0FBQ0Msc0JBQXNCLEdBQUcsSUFBSVIsZUFBZSxDQUFFLEtBQUssRUFBRTtNQUN4RE8sTUFBTSxFQUFFQSxNQUFNLENBQUNFLFlBQVksQ0FBRSx3QkFBeUI7SUFDeEQsQ0FBRSxDQUFDO0lBRUgsSUFBSSxDQUFDQyxnQkFBZ0IsR0FBRyxJQUFJVCxtQkFBbUIsQ0FBRSxXQUFXLEVBQUU7TUFDNURVLFdBQVcsRUFBRVAsY0FBYztNQUMzQkcsTUFBTSxFQUFFQSxNQUFNLENBQUNFLFlBQVksQ0FBRSxrQkFBbUI7SUFDbEQsQ0FBRSxDQUFDO0lBRUgsSUFBSSxDQUFDRyxnQkFBZ0IsR0FBRyxJQUFJWCxtQkFBbUIsQ0FBRSxTQUFTLEVBQUU7TUFDMURVLFdBQVcsRUFBRVIsY0FBYztNQUMzQkksTUFBTSxFQUFFQSxNQUFNLENBQUNFLFlBQVksQ0FBRSxrQkFBbUI7SUFDbEQsQ0FBRSxDQUFDO0VBQ0w7RUFFT0ksT0FBT0EsQ0FBQSxFQUFTO0lBQ3JCQyxNQUFNLElBQUlBLE1BQU0sQ0FBRSxLQUFLLEVBQUUsOERBQStELENBQUM7RUFDM0Y7RUFFT0MsS0FBS0EsQ0FBQSxFQUFTO0lBQ25CLElBQUksQ0FBQ1Asc0JBQXNCLENBQUNPLEtBQUssQ0FBQyxDQUFDO0lBQ25DLElBQUksQ0FBQ0wsZ0JBQWdCLENBQUNLLEtBQUssQ0FBQyxDQUFDO0lBQzdCLElBQUksQ0FBQ0gsZ0JBQWdCLENBQUNHLEtBQUssQ0FBQyxDQUFDO0VBQy9CO0FBQ0Y7QUFFQWIsaUJBQWlCLENBQUNjLFFBQVEsQ0FBRSxtQkFBbUIsRUFBRVgsaUJBQWtCLENBQUMifQ==