// Copyright 2014-2022, University of Colorado Boulder

/**
 * Constants for simulation 'Acid-Base Solutions'.
 *
 * @author Andrey Zelenkov (Mlearner)
 * @author Chris Malley (PixelZoom, Inc.)
 */

import Dimension2 from '../../../dot/js/Dimension2.js';
import Range from '../../../dot/js/Range.js';
import RangeWithValue from '../../../dot/js/RangeWithValue.js';
import PhetFont from '../../../scenery-phet/js/PhetFont.js';
import acidBaseSolutions from '../acidBaseSolutions.js';
import ABSColors from './ABSColors.js';
const WEAK_STRENGTH_MAX = 1E2;
const CONTROL_FONT = new PhetFont(12);
const STRING_SWITCH_OPTIONS = {
  textOptions: {
    font: CONTROL_FONT,
    maxWidth: 50
  },
  toggleSwitchOptions: {
    size: new Dimension2(40, 20),
    thumbTouchAreaXDilation: 6,
    thumbTouchAreaYDilation: 6
  }
};
const PANEL_OPTIONS = {
  fill: ABSColors.CONTROL_PANEL_BACKGROUND,
  xMargin: 15,
  yMargin: 6,
  align: 'left'
};
const ABSConstants = {
  // Model values
  CONCENTRATION_RANGE: new RangeWithValue(1E-3, 1, 1E-2),
  PH_RANGE: new Range(0, 14),
  WATER_EQUILIBRIUM_CONSTANT: 1E-14,
  WATER_CONCENTRATION: 55.6,
  // water concentration when it's used as a solvent, mol/L
  WEAK_STRENGTH_RANGE: new RangeWithValue(1E-10, WEAK_STRENGTH_MAX, 1E-7),
  STRONG_STRENGTH: WEAK_STRENGTH_MAX + 1,
  // arbitrary, but needs to be greater than weak max

  // Fonts
  TITLE_FONT: new PhetFont({
    size: 14,
    weight: 'bold'
  }),
  SUBTITLE_FONT: new PhetFont(12),
  CONTROL_FONT: CONTROL_FONT,
  // options
  STRING_SWITCH_OPTIONS: STRING_SWITCH_OPTIONS,
  PANEL_OPTIONS: PANEL_OPTIONS
};
acidBaseSolutions.register('ABSConstants', ABSConstants);
export default ABSConstants;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJEaW1lbnNpb24yIiwiUmFuZ2UiLCJSYW5nZVdpdGhWYWx1ZSIsIlBoZXRGb250IiwiYWNpZEJhc2VTb2x1dGlvbnMiLCJBQlNDb2xvcnMiLCJXRUFLX1NUUkVOR1RIX01BWCIsIkNPTlRST0xfRk9OVCIsIlNUUklOR19TV0lUQ0hfT1BUSU9OUyIsInRleHRPcHRpb25zIiwiZm9udCIsIm1heFdpZHRoIiwidG9nZ2xlU3dpdGNoT3B0aW9ucyIsInNpemUiLCJ0aHVtYlRvdWNoQXJlYVhEaWxhdGlvbiIsInRodW1iVG91Y2hBcmVhWURpbGF0aW9uIiwiUEFORUxfT1BUSU9OUyIsImZpbGwiLCJDT05UUk9MX1BBTkVMX0JBQ0tHUk9VTkQiLCJ4TWFyZ2luIiwieU1hcmdpbiIsImFsaWduIiwiQUJTQ29uc3RhbnRzIiwiQ09OQ0VOVFJBVElPTl9SQU5HRSIsIlBIX1JBTkdFIiwiV0FURVJfRVFVSUxJQlJJVU1fQ09OU1RBTlQiLCJXQVRFUl9DT05DRU5UUkFUSU9OIiwiV0VBS19TVFJFTkdUSF9SQU5HRSIsIlNUUk9OR19TVFJFTkdUSCIsIlRJVExFX0ZPTlQiLCJ3ZWlnaHQiLCJTVUJUSVRMRV9GT05UIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJBQlNDb25zdGFudHMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTQtMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogQ29uc3RhbnRzIGZvciBzaW11bGF0aW9uICdBY2lkLUJhc2UgU29sdXRpb25zJy5cclxuICpcclxuICogQGF1dGhvciBBbmRyZXkgWmVsZW5rb3YgKE1sZWFybmVyKVxyXG4gKiBAYXV0aG9yIENocmlzIE1hbGxleSAoUGl4ZWxab29tLCBJbmMuKVxyXG4gKi9cclxuXHJcbmltcG9ydCBEaW1lbnNpb24yIGZyb20gJy4uLy4uLy4uL2RvdC9qcy9EaW1lbnNpb24yLmpzJztcclxuaW1wb3J0IFJhbmdlIGZyb20gJy4uLy4uLy4uL2RvdC9qcy9SYW5nZS5qcyc7XHJcbmltcG9ydCBSYW5nZVdpdGhWYWx1ZSBmcm9tICcuLi8uLi8uLi9kb3QvanMvUmFuZ2VXaXRoVmFsdWUuanMnO1xyXG5pbXBvcnQgUGhldEZvbnQgZnJvbSAnLi4vLi4vLi4vc2NlbmVyeS1waGV0L2pzL1BoZXRGb250LmpzJztcclxuaW1wb3J0IHsgUGFuZWxPcHRpb25zIH0gZnJvbSAnLi4vLi4vLi4vc3VuL2pzL1BhbmVsLmpzJztcclxuaW1wb3J0IGFjaWRCYXNlU29sdXRpb25zIGZyb20gJy4uL2FjaWRCYXNlU29sdXRpb25zLmpzJztcclxuaW1wb3J0IEFCU0NvbG9ycyBmcm9tICcuL0FCU0NvbG9ycy5qcyc7XHJcbmltcG9ydCB7IFN0cmluZ1N3aXRjaE9wdGlvbnMgfSBmcm9tICcuLi9teXNvbHV0aW9uL3ZpZXcvU3RyaW5nU3dpdGNoLmpzJztcclxuaW1wb3J0IFN0cmljdE9taXQgZnJvbSAnLi4vLi4vLi4vcGhldC1jb3JlL2pzL3R5cGVzL1N0cmljdE9taXQuanMnO1xyXG5cclxuY29uc3QgV0VBS19TVFJFTkdUSF9NQVggPSAxRTI7XHJcblxyXG5jb25zdCBDT05UUk9MX0ZPTlQgPSBuZXcgUGhldEZvbnQoIDEyICk7XHJcblxyXG5jb25zdCBTVFJJTkdfU1dJVENIX09QVElPTlM6IFN0cmljdE9taXQ8U3RyaW5nU3dpdGNoT3B0aW9ucywgJ3RhbmRlbSc+ID0ge1xyXG4gIHRleHRPcHRpb25zOiB7XHJcbiAgICBmb250OiBDT05UUk9MX0ZPTlQsXHJcbiAgICBtYXhXaWR0aDogNTBcclxuICB9LFxyXG4gIHRvZ2dsZVN3aXRjaE9wdGlvbnM6IHtcclxuICAgIHNpemU6IG5ldyBEaW1lbnNpb24yKCA0MCwgMjAgKSxcclxuICAgIHRodW1iVG91Y2hBcmVhWERpbGF0aW9uOiA2LFxyXG4gICAgdGh1bWJUb3VjaEFyZWFZRGlsYXRpb246IDZcclxuICB9XHJcbn07XHJcblxyXG5jb25zdCBQQU5FTF9PUFRJT05TOiBQYW5lbE9wdGlvbnMgPSB7XHJcbiAgZmlsbDogQUJTQ29sb3JzLkNPTlRST0xfUEFORUxfQkFDS0dST1VORCxcclxuICB4TWFyZ2luOiAxNSxcclxuICB5TWFyZ2luOiA2LFxyXG4gIGFsaWduOiAnbGVmdCdcclxufTtcclxuXHJcbmNvbnN0IEFCU0NvbnN0YW50cyA9IHtcclxuXHJcbiAgLy8gTW9kZWwgdmFsdWVzXHJcbiAgQ09OQ0VOVFJBVElPTl9SQU5HRTogbmV3IFJhbmdlV2l0aFZhbHVlKCAxRS0zLCAxLCAxRS0yICksXHJcbiAgUEhfUkFOR0U6IG5ldyBSYW5nZSggMCwgMTQgKSxcclxuICBXQVRFUl9FUVVJTElCUklVTV9DT05TVEFOVDogMUUtMTQsXHJcbiAgV0FURVJfQ09OQ0VOVFJBVElPTjogNTUuNiwgLy8gd2F0ZXIgY29uY2VudHJhdGlvbiB3aGVuIGl0J3MgdXNlZCBhcyBhIHNvbHZlbnQsIG1vbC9MXHJcbiAgV0VBS19TVFJFTkdUSF9SQU5HRTogbmV3IFJhbmdlV2l0aFZhbHVlKCAxRS0xMCwgV0VBS19TVFJFTkdUSF9NQVgsIDFFLTcgKSxcclxuICBTVFJPTkdfU1RSRU5HVEg6IFdFQUtfU1RSRU5HVEhfTUFYICsgMSwgLy8gYXJiaXRyYXJ5LCBidXQgbmVlZHMgdG8gYmUgZ3JlYXRlciB0aGFuIHdlYWsgbWF4XHJcblxyXG4gIC8vIEZvbnRzXHJcbiAgVElUTEVfRk9OVDogbmV3IFBoZXRGb250KCB7IHNpemU6IDE0LCB3ZWlnaHQ6ICdib2xkJyB9ICksXHJcbiAgU1VCVElUTEVfRk9OVDogbmV3IFBoZXRGb250KCAxMiApLFxyXG4gIENPTlRST0xfRk9OVDogQ09OVFJPTF9GT05ULFxyXG5cclxuICAvLyBvcHRpb25zXHJcbiAgU1RSSU5HX1NXSVRDSF9PUFRJT05TOiBTVFJJTkdfU1dJVENIX09QVElPTlMsXHJcbiAgUEFORUxfT1BUSU9OUzogUEFORUxfT1BUSU9OU1xyXG59O1xyXG5cclxuYWNpZEJhc2VTb2x1dGlvbnMucmVnaXN0ZXIoICdBQlNDb25zdGFudHMnLCBBQlNDb25zdGFudHMgKTtcclxuZXhwb3J0IGRlZmF1bHQgQUJTQ29uc3RhbnRzOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLFVBQVUsTUFBTSwrQkFBK0I7QUFDdEQsT0FBT0MsS0FBSyxNQUFNLDBCQUEwQjtBQUM1QyxPQUFPQyxjQUFjLE1BQU0sbUNBQW1DO0FBQzlELE9BQU9DLFFBQVEsTUFBTSxzQ0FBc0M7QUFFM0QsT0FBT0MsaUJBQWlCLE1BQU0seUJBQXlCO0FBQ3ZELE9BQU9DLFNBQVMsTUFBTSxnQkFBZ0I7QUFJdEMsTUFBTUMsaUJBQWlCLEdBQUcsR0FBRztBQUU3QixNQUFNQyxZQUFZLEdBQUcsSUFBSUosUUFBUSxDQUFFLEVBQUcsQ0FBQztBQUV2QyxNQUFNSyxxQkFBZ0UsR0FBRztFQUN2RUMsV0FBVyxFQUFFO0lBQ1hDLElBQUksRUFBRUgsWUFBWTtJQUNsQkksUUFBUSxFQUFFO0VBQ1osQ0FBQztFQUNEQyxtQkFBbUIsRUFBRTtJQUNuQkMsSUFBSSxFQUFFLElBQUliLFVBQVUsQ0FBRSxFQUFFLEVBQUUsRUFBRyxDQUFDO0lBQzlCYyx1QkFBdUIsRUFBRSxDQUFDO0lBQzFCQyx1QkFBdUIsRUFBRTtFQUMzQjtBQUNGLENBQUM7QUFFRCxNQUFNQyxhQUEyQixHQUFHO0VBQ2xDQyxJQUFJLEVBQUVaLFNBQVMsQ0FBQ2Esd0JBQXdCO0VBQ3hDQyxPQUFPLEVBQUUsRUFBRTtFQUNYQyxPQUFPLEVBQUUsQ0FBQztFQUNWQyxLQUFLLEVBQUU7QUFDVCxDQUFDO0FBRUQsTUFBTUMsWUFBWSxHQUFHO0VBRW5CO0VBQ0FDLG1CQUFtQixFQUFFLElBQUlyQixjQUFjLENBQUUsSUFBSSxFQUFFLENBQUMsRUFBRSxJQUFLLENBQUM7RUFDeERzQixRQUFRLEVBQUUsSUFBSXZCLEtBQUssQ0FBRSxDQUFDLEVBQUUsRUFBRyxDQUFDO0VBQzVCd0IsMEJBQTBCLEVBQUUsS0FBSztFQUNqQ0MsbUJBQW1CLEVBQUUsSUFBSTtFQUFFO0VBQzNCQyxtQkFBbUIsRUFBRSxJQUFJekIsY0FBYyxDQUFFLEtBQUssRUFBRUksaUJBQWlCLEVBQUUsSUFBSyxDQUFDO0VBQ3pFc0IsZUFBZSxFQUFFdEIsaUJBQWlCLEdBQUcsQ0FBQztFQUFFOztFQUV4QztFQUNBdUIsVUFBVSxFQUFFLElBQUkxQixRQUFRLENBQUU7SUFBRVUsSUFBSSxFQUFFLEVBQUU7SUFBRWlCLE1BQU0sRUFBRTtFQUFPLENBQUUsQ0FBQztFQUN4REMsYUFBYSxFQUFFLElBQUk1QixRQUFRLENBQUUsRUFBRyxDQUFDO0VBQ2pDSSxZQUFZLEVBQUVBLFlBQVk7RUFFMUI7RUFDQUMscUJBQXFCLEVBQUVBLHFCQUFxQjtFQUM1Q1EsYUFBYSxFQUFFQTtBQUNqQixDQUFDO0FBRURaLGlCQUFpQixDQUFDNEIsUUFBUSxDQUFFLGNBQWMsRUFBRVYsWUFBYSxDQUFDO0FBQzFELGVBQWVBLFlBQVkifQ==