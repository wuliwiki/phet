// Copyright 2018-2022, University of Colorado Boulder

/**
 * The Lab screen for Masses and Springs: Basics.
 *
 * @author Denzell Barnett (PhET Interactive Simulations)
 */

import Screen from '../../../joist/js/Screen.js';
import ScreenIcon from '../../../joist/js/ScreenIcon.js';
import MassesAndSpringsColors from '../../../masses-and-springs/js/common/view/MassesAndSpringsColors.js';
import LabModel from '../../../masses-and-springs/js/lab/model/LabModel.js';
import merge from '../../../phet-core/js/merge.js';
import { Image } from '../../../scenery/js/imports.js';
import labScreenIcon_png from '../../images/labScreenIcon_png.js';
import massesAndSpringsBasics from '../massesAndSpringsBasics.js';
import MassesAndSpringsBasicsStrings from '../MassesAndSpringsBasicsStrings.js';
import LabScreenView from './view/LabScreenView.js';
class LabScreen extends Screen {
  /**
   * @param {Tandem} tandem
   * @param {Object} [options]
   *
   */
  constructor(tandem, options) {
    options = merge({
      basicsVersion: true,
      name: MassesAndSpringsBasicsStrings.screen.labStringProperty,
      backgroundColorProperty: MassesAndSpringsColors.backgroundProperty,
      homeScreenIcon: new ScreenIcon(new Image(labScreenIcon_png), {
        maxIconWidthProportion: 1,
        maxIconHeightProportion: 1
      }),
      tandem: tandem
    }, options);
    super(() => new LabModel(tandem.createTandem('model'), true, options), model => new LabScreenView(model, tandem.createTandem('view')), options);
  }
}
massesAndSpringsBasics.register('LabScreen', LabScreen);
export default LabScreen;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTY3JlZW4iLCJTY3JlZW5JY29uIiwiTWFzc2VzQW5kU3ByaW5nc0NvbG9ycyIsIkxhYk1vZGVsIiwibWVyZ2UiLCJJbWFnZSIsImxhYlNjcmVlbkljb25fcG5nIiwibWFzc2VzQW5kU3ByaW5nc0Jhc2ljcyIsIk1hc3Nlc0FuZFNwcmluZ3NCYXNpY3NTdHJpbmdzIiwiTGFiU2NyZWVuVmlldyIsIkxhYlNjcmVlbiIsImNvbnN0cnVjdG9yIiwidGFuZGVtIiwib3B0aW9ucyIsImJhc2ljc1ZlcnNpb24iLCJuYW1lIiwic2NyZWVuIiwibGFiU3RyaW5nUHJvcGVydHkiLCJiYWNrZ3JvdW5kQ29sb3JQcm9wZXJ0eSIsImJhY2tncm91bmRQcm9wZXJ0eSIsImhvbWVTY3JlZW5JY29uIiwibWF4SWNvbldpZHRoUHJvcG9ydGlvbiIsIm1heEljb25IZWlnaHRQcm9wb3J0aW9uIiwiY3JlYXRlVGFuZGVtIiwibW9kZWwiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIkxhYlNjcmVlbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxOC0yMDIyLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBUaGUgTGFiIHNjcmVlbiBmb3IgTWFzc2VzIGFuZCBTcHJpbmdzOiBCYXNpY3MuXHJcbiAqXHJcbiAqIEBhdXRob3IgRGVuemVsbCBCYXJuZXR0IChQaEVUIEludGVyYWN0aXZlIFNpbXVsYXRpb25zKVxyXG4gKi9cclxuXHJcbmltcG9ydCBTY3JlZW4gZnJvbSAnLi4vLi4vLi4vam9pc3QvanMvU2NyZWVuLmpzJztcclxuaW1wb3J0IFNjcmVlbkljb24gZnJvbSAnLi4vLi4vLi4vam9pc3QvanMvU2NyZWVuSWNvbi5qcyc7XHJcbmltcG9ydCBNYXNzZXNBbmRTcHJpbmdzQ29sb3JzIGZyb20gJy4uLy4uLy4uL21hc3Nlcy1hbmQtc3ByaW5ncy9qcy9jb21tb24vdmlldy9NYXNzZXNBbmRTcHJpbmdzQ29sb3JzLmpzJztcclxuaW1wb3J0IExhYk1vZGVsIGZyb20gJy4uLy4uLy4uL21hc3Nlcy1hbmQtc3ByaW5ncy9qcy9sYWIvbW9kZWwvTGFiTW9kZWwuanMnO1xyXG5pbXBvcnQgbWVyZ2UgZnJvbSAnLi4vLi4vLi4vcGhldC1jb3JlL2pzL21lcmdlLmpzJztcclxuaW1wb3J0IHsgSW1hZ2UgfSBmcm9tICcuLi8uLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgbGFiU2NyZWVuSWNvbl9wbmcgZnJvbSAnLi4vLi4vaW1hZ2VzL2xhYlNjcmVlbkljb25fcG5nLmpzJztcclxuaW1wb3J0IG1hc3Nlc0FuZFNwcmluZ3NCYXNpY3MgZnJvbSAnLi4vbWFzc2VzQW5kU3ByaW5nc0Jhc2ljcy5qcyc7XHJcbmltcG9ydCBNYXNzZXNBbmRTcHJpbmdzQmFzaWNzU3RyaW5ncyBmcm9tICcuLi9NYXNzZXNBbmRTcHJpbmdzQmFzaWNzU3RyaW5ncy5qcyc7XHJcbmltcG9ydCBMYWJTY3JlZW5WaWV3IGZyb20gJy4vdmlldy9MYWJTY3JlZW5WaWV3LmpzJztcclxuXHJcblxyXG5jbGFzcyBMYWJTY3JlZW4gZXh0ZW5kcyBTY3JlZW4ge1xyXG5cclxuICAvKipcclxuICAgKiBAcGFyYW0ge1RhbmRlbX0gdGFuZGVtXHJcbiAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxyXG4gICAqXHJcbiAgICovXHJcbiAgY29uc3RydWN0b3IoIHRhbmRlbSwgb3B0aW9ucyApIHtcclxuXHJcbiAgICBvcHRpb25zID0gbWVyZ2UoIHtcclxuICAgICAgYmFzaWNzVmVyc2lvbjogdHJ1ZSxcclxuICAgICAgbmFtZTogTWFzc2VzQW5kU3ByaW5nc0Jhc2ljc1N0cmluZ3Muc2NyZWVuLmxhYlN0cmluZ1Byb3BlcnR5LFxyXG4gICAgICBiYWNrZ3JvdW5kQ29sb3JQcm9wZXJ0eTogTWFzc2VzQW5kU3ByaW5nc0NvbG9ycy5iYWNrZ3JvdW5kUHJvcGVydHksXHJcbiAgICAgIGhvbWVTY3JlZW5JY29uOiBuZXcgU2NyZWVuSWNvbiggbmV3IEltYWdlKCBsYWJTY3JlZW5JY29uX3BuZyApLCB7XHJcbiAgICAgICAgbWF4SWNvbldpZHRoUHJvcG9ydGlvbjogMSxcclxuICAgICAgICBtYXhJY29uSGVpZ2h0UHJvcG9ydGlvbjogMVxyXG4gICAgICB9ICksXHJcbiAgICAgIHRhbmRlbTogdGFuZGVtXHJcbiAgICB9LCBvcHRpb25zICk7XHJcblxyXG4gICAgc3VwZXIoXHJcbiAgICAgICgpID0+IG5ldyBMYWJNb2RlbCggdGFuZGVtLmNyZWF0ZVRhbmRlbSggJ21vZGVsJyApLCB0cnVlLCBvcHRpb25zICksXHJcbiAgICAgIG1vZGVsID0+IG5ldyBMYWJTY3JlZW5WaWV3KCBtb2RlbCwgdGFuZGVtLmNyZWF0ZVRhbmRlbSggJ3ZpZXcnICkgKSxcclxuICAgICAgb3B0aW9uc1xyXG4gICAgKTtcclxuICB9XHJcbn1cclxuXHJcbm1hc3Nlc0FuZFNwcmluZ3NCYXNpY3MucmVnaXN0ZXIoICdMYWJTY3JlZW4nLCBMYWJTY3JlZW4gKTtcclxuZXhwb3J0IGRlZmF1bHQgTGFiU2NyZWVuOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxNQUFNLE1BQU0sNkJBQTZCO0FBQ2hELE9BQU9DLFVBQVUsTUFBTSxpQ0FBaUM7QUFDeEQsT0FBT0Msc0JBQXNCLE1BQU0sc0VBQXNFO0FBQ3pHLE9BQU9DLFFBQVEsTUFBTSxzREFBc0Q7QUFDM0UsT0FBT0MsS0FBSyxNQUFNLGdDQUFnQztBQUNsRCxTQUFTQyxLQUFLLFFBQVEsZ0NBQWdDO0FBQ3RELE9BQU9DLGlCQUFpQixNQUFNLG1DQUFtQztBQUNqRSxPQUFPQyxzQkFBc0IsTUFBTSw4QkFBOEI7QUFDakUsT0FBT0MsNkJBQTZCLE1BQU0scUNBQXFDO0FBQy9FLE9BQU9DLGFBQWEsTUFBTSx5QkFBeUI7QUFHbkQsTUFBTUMsU0FBUyxTQUFTVixNQUFNLENBQUM7RUFFN0I7QUFDRjtBQUNBO0FBQ0E7QUFDQTtFQUNFVyxXQUFXQSxDQUFFQyxNQUFNLEVBQUVDLE9BQU8sRUFBRztJQUU3QkEsT0FBTyxHQUFHVCxLQUFLLENBQUU7TUFDZlUsYUFBYSxFQUFFLElBQUk7TUFDbkJDLElBQUksRUFBRVAsNkJBQTZCLENBQUNRLE1BQU0sQ0FBQ0MsaUJBQWlCO01BQzVEQyx1QkFBdUIsRUFBRWhCLHNCQUFzQixDQUFDaUIsa0JBQWtCO01BQ2xFQyxjQUFjLEVBQUUsSUFBSW5CLFVBQVUsQ0FBRSxJQUFJSSxLQUFLLENBQUVDLGlCQUFrQixDQUFDLEVBQUU7UUFDOURlLHNCQUFzQixFQUFFLENBQUM7UUFDekJDLHVCQUF1QixFQUFFO01BQzNCLENBQUUsQ0FBQztNQUNIVixNQUFNLEVBQUVBO0lBQ1YsQ0FBQyxFQUFFQyxPQUFRLENBQUM7SUFFWixLQUFLLENBQ0gsTUFBTSxJQUFJVixRQUFRLENBQUVTLE1BQU0sQ0FBQ1csWUFBWSxDQUFFLE9BQVEsQ0FBQyxFQUFFLElBQUksRUFBRVYsT0FBUSxDQUFDLEVBQ25FVyxLQUFLLElBQUksSUFBSWYsYUFBYSxDQUFFZSxLQUFLLEVBQUVaLE1BQU0sQ0FBQ1csWUFBWSxDQUFFLE1BQU8sQ0FBRSxDQUFDLEVBQ2xFVixPQUNGLENBQUM7RUFDSDtBQUNGO0FBRUFOLHNCQUFzQixDQUFDa0IsUUFBUSxDQUFFLFdBQVcsRUFBRWYsU0FBVSxDQUFDO0FBQ3pELGVBQWVBLFNBQVMifQ==