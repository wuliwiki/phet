// Copyright 2018-2022, University of Colorado Boulder

/**
 * Displays an ObjectTerm.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import optionize from '../../../../phet-core/js/optionize.js';
import PhetFont from '../../../../scenery-phet/js/PhetFont.js';
import { HBox, Image, Node, Text } from '../../../../scenery/js/imports.js';
import EqualityExplorerConstants from '../EqualityExplorerConstants.js';
import TermNode from './TermNode.js';
import equalityExplorer from '../../equalityExplorer.js';
// constants
const DEFAULT_COEFFICIENT_FONT = new PhetFont(28);
const ICON_SCALE_MULTIPLIER = 0.7; // use this to adjust size of icon relative to coefficient

export default class ObjectTermNode extends TermNode {
  constructor(termCreator, term, providedOptions) {
    const contentNode = ObjectTermNode.createInteractiveTermNode(term.objectVariable.image, {
      maxHeight: term.diameter
    });
    const shadowNode = new Image(term.objectVariable.shadow, {
      maxHeight: term.diameter,
      opacity: EqualityExplorerConstants.SHADOW_OPACITY
    });
    super(termCreator, term, contentNode, shadowNode, providedOptions);
  }

  /**
   * Creates the representation of an ObjectTerm that the user interacts with.
   */
  static createInteractiveTermNode(image, providedOptions) {
    return new InteractiveTermNode(image, providedOptions); //TODO https://github.com/phetsims/equality-explorer/issues/200 dynamic
  }

  /**
   * Creates the representation of an ObjectTerm that is shown in equations.
   */
  static createEquationTermNode(coefficient, icon, providedOptions) {
    return new EquationTermNode(coefficient, icon, providedOptions); //TODO https://github.com/phetsims/equality-explorer/issues/200 dynamic
  }
}

/**
 * The representation of a term that the user interacts with, in this case the object type's icon.
 * No coefficient is shown because every ObjectTerm has an implicit coefficient of 1.
 */
class InteractiveTermNode extends Image {
  constructor(image, providedOptions) {
    const options = optionize()({
      // ImageOptions
      maxHeight: EqualityExplorerConstants.SMALL_TERM_DIAMETER
    }, providedOptions);
    super(image, options);
  }
}
/**
 * The representation of a term that is shown in equations.
 * Since every ObjectTerm has an implicit coefficient of 1, the coefficient is an integer.
 */
class EquationTermNode extends HBox {
  constructor(coefficient, icon, providedOptions) {
    const options = optionize()({
      // EquationTermNodeSelfOptions
      font: DEFAULT_COEFFICIENT_FONT,
      // HBoxOptions
      spacing: 2
    }, providedOptions);
    const coefficientText = new Text(coefficient, {
      font: options.font
    });
    const iconWrapper = new Node({
      children: [icon],
      scale: ICON_SCALE_MULTIPLIER * coefficientText.height / icon.height
    });
    options.children = [coefficientText, iconWrapper];
    super(options);
  }
}
equalityExplorer.register('ObjectTermNode', ObjectTermNode);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,