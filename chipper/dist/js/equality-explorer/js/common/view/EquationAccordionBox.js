// Copyright 2017-2022, University of Colorado Boulder

/**
 * Accordion box that displays the equation or inequality.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import { optionize4 } from '../../../../phet-core/js/optionize.js';
import { Text } from '../../../../scenery/js/imports.js';
import AccordionBox from '../../../../sun/js/AccordionBox.js';
import equalityExplorer from '../../equalityExplorer.js';
import EqualityExplorerStrings from '../../EqualityExplorerStrings.js';
import EqualityExplorerConstants from '../EqualityExplorerConstants.js';
import EquationPanel from './EquationPanel.js';
export default class EquationAccordionBox extends AccordionBox {
  /**
   * @param leftTermCreators - left side of equation
   * @param rightTermCreators - right side of equation
   * @param [providedOptions]
   */
  constructor(leftTermCreators, rightTermCreators, providedOptions) {
    const options = optionize4()({}, EqualityExplorerConstants.ACCORDION_BOX_OPTIONS, {
      // SelfOptions
      fixedWidth: 100,
      fixedHeight: 75,
      // AccordionBoxOptions
      showTitleWhenExpanded: false,
      contentXMargin: 8,
      contentYMargin: 4
    }, providedOptions);
    options.maxWidth = options.fixedWidth;
    options.maxHeight = options.fixedHeight;
    const contentNode = new EquationPanel(leftTermCreators, rightTermCreators, {
      contentWidth: options.fixedWidth - 2 * options.contentXMargin,
      contentHeight: options.fixedHeight - 2 * options.contentYMargin,
      xMargin: 0,
      yMargin: 0,
      tandem: options.tandem.createTandem('contentNode'),
      phetioVisiblePropertyInstrumented: false
    });
    options.titleNode = options.titleNode || new Text(EqualityExplorerStrings.equationOrInequalityStringProperty, {
      font: EqualityExplorerConstants.ACCORDION_BOX_TITLE_FONT,
      maxWidth: 0.85 * contentNode.width,
      tandem: options.tandem.createTandem('titleText')
    });
    super(contentNode, options);
  }
  dispose() {
    assert && assert(false, 'dispose is not supported, exists for the lifetime of the sim');
    super.dispose();
  }
}
equalityExplorer.register('EquationAccordionBox', EquationAccordionBox);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJvcHRpb25pemU0IiwiVGV4dCIsIkFjY29yZGlvbkJveCIsImVxdWFsaXR5RXhwbG9yZXIiLCJFcXVhbGl0eUV4cGxvcmVyU3RyaW5ncyIsIkVxdWFsaXR5RXhwbG9yZXJDb25zdGFudHMiLCJFcXVhdGlvblBhbmVsIiwiRXF1YXRpb25BY2NvcmRpb25Cb3giLCJjb25zdHJ1Y3RvciIsImxlZnRUZXJtQ3JlYXRvcnMiLCJyaWdodFRlcm1DcmVhdG9ycyIsInByb3ZpZGVkT3B0aW9ucyIsIm9wdGlvbnMiLCJBQ0NPUkRJT05fQk9YX09QVElPTlMiLCJmaXhlZFdpZHRoIiwiZml4ZWRIZWlnaHQiLCJzaG93VGl0bGVXaGVuRXhwYW5kZWQiLCJjb250ZW50WE1hcmdpbiIsImNvbnRlbnRZTWFyZ2luIiwibWF4V2lkdGgiLCJtYXhIZWlnaHQiLCJjb250ZW50Tm9kZSIsImNvbnRlbnRXaWR0aCIsImNvbnRlbnRIZWlnaHQiLCJ4TWFyZ2luIiwieU1hcmdpbiIsInRhbmRlbSIsImNyZWF0ZVRhbmRlbSIsInBoZXRpb1Zpc2libGVQcm9wZXJ0eUluc3RydW1lbnRlZCIsInRpdGxlTm9kZSIsImVxdWF0aW9uT3JJbmVxdWFsaXR5U3RyaW5nUHJvcGVydHkiLCJmb250IiwiQUNDT1JESU9OX0JPWF9USVRMRV9GT05UIiwid2lkdGgiLCJkaXNwb3NlIiwiYXNzZXJ0IiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJFcXVhdGlvbkFjY29yZGlvbkJveC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxNy0yMDIyLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBBY2NvcmRpb24gYm94IHRoYXQgZGlzcGxheXMgdGhlIGVxdWF0aW9uIG9yIGluZXF1YWxpdHkuXHJcbiAqXHJcbiAqIEBhdXRob3IgQ2hyaXMgTWFsbGV5IChQaXhlbFpvb20sIEluYy4pXHJcbiAqL1xyXG5cclxuaW1wb3J0IHsgb3B0aW9uaXplNCB9IGZyb20gJy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy9vcHRpb25pemUuanMnO1xyXG5pbXBvcnQgUGlja1JlcXVpcmVkIGZyb20gJy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy90eXBlcy9QaWNrUmVxdWlyZWQuanMnO1xyXG5pbXBvcnQgeyBOb2RlVHJhbnNsYXRpb25PcHRpb25zLCBUZXh0IH0gZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IEFjY29yZGlvbkJveCwgeyBBY2NvcmRpb25Cb3hPcHRpb25zIH0gZnJvbSAnLi4vLi4vLi4vLi4vc3VuL2pzL0FjY29yZGlvbkJveC5qcyc7XHJcbmltcG9ydCBlcXVhbGl0eUV4cGxvcmVyIGZyb20gJy4uLy4uL2VxdWFsaXR5RXhwbG9yZXIuanMnO1xyXG5pbXBvcnQgRXF1YWxpdHlFeHBsb3JlclN0cmluZ3MgZnJvbSAnLi4vLi4vRXF1YWxpdHlFeHBsb3JlclN0cmluZ3MuanMnO1xyXG5pbXBvcnQgRXF1YWxpdHlFeHBsb3JlckNvbnN0YW50cyBmcm9tICcuLi9FcXVhbGl0eUV4cGxvcmVyQ29uc3RhbnRzLmpzJztcclxuaW1wb3J0IFRlcm1DcmVhdG9yIGZyb20gJy4uL21vZGVsL1Rlcm1DcmVhdG9yLmpzJztcclxuaW1wb3J0IEVxdWF0aW9uUGFuZWwgZnJvbSAnLi9FcXVhdGlvblBhbmVsLmpzJztcclxuXHJcbnR5cGUgU2VsZk9wdGlvbnMgPSB7XHJcblxyXG4gIC8vIHRoaXMgYWNjb3JkaW9uIGJveCBpcyBkZXNpZ25lZCB0byBiZSBhIGZpeGVkIHNpemUsIHJlZ2FyZGxlc3Mgb2YgaXRzIGNvbnRlbnRcclxuICBmaXhlZFdpZHRoPzogbnVtYmVyO1xyXG4gIGZpeGVkSGVpZ2h0PzogbnVtYmVyO1xyXG59O1xyXG5cclxudHlwZSBFcXVhdGlvbkFjY29yZGlvbkJveE9wdGlvbnMgPSBTZWxmT3B0aW9ucyAmIE5vZGVUcmFuc2xhdGlvbk9wdGlvbnMgJlxyXG4gIFBpY2tSZXF1aXJlZDxBY2NvcmRpb25Cb3hPcHRpb25zLCAnZXhwYW5kZWRQcm9wZXJ0eScgfCAndGFuZGVtJz47XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFcXVhdGlvbkFjY29yZGlvbkJveCBleHRlbmRzIEFjY29yZGlvbkJveCB7XHJcblxyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSBsZWZ0VGVybUNyZWF0b3JzIC0gbGVmdCBzaWRlIG9mIGVxdWF0aW9uXHJcbiAgICogQHBhcmFtIHJpZ2h0VGVybUNyZWF0b3JzIC0gcmlnaHQgc2lkZSBvZiBlcXVhdGlvblxyXG4gICAqIEBwYXJhbSBbcHJvdmlkZWRPcHRpb25zXVxyXG4gICAqL1xyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvciggbGVmdFRlcm1DcmVhdG9yczogVGVybUNyZWF0b3JbXSwgcmlnaHRUZXJtQ3JlYXRvcnM6IFRlcm1DcmVhdG9yW10sIHByb3ZpZGVkT3B0aW9uczogRXF1YXRpb25BY2NvcmRpb25Cb3hPcHRpb25zICkge1xyXG5cclxuICAgIGNvbnN0IG9wdGlvbnMgPSBvcHRpb25pemU0PEVxdWF0aW9uQWNjb3JkaW9uQm94T3B0aW9ucywgU2VsZk9wdGlvbnMsIEFjY29yZGlvbkJveE9wdGlvbnM+KCkoIHt9LFxyXG4gICAgICBFcXVhbGl0eUV4cGxvcmVyQ29uc3RhbnRzLkFDQ09SRElPTl9CT1hfT1BUSU9OUywge1xyXG5cclxuICAgICAgICAvLyBTZWxmT3B0aW9uc1xyXG4gICAgICAgIGZpeGVkV2lkdGg6IDEwMCxcclxuICAgICAgICBmaXhlZEhlaWdodDogNzUsXHJcblxyXG4gICAgICAgIC8vIEFjY29yZGlvbkJveE9wdGlvbnNcclxuICAgICAgICBzaG93VGl0bGVXaGVuRXhwYW5kZWQ6IGZhbHNlLFxyXG4gICAgICAgIGNvbnRlbnRYTWFyZ2luOiA4LFxyXG4gICAgICAgIGNvbnRlbnRZTWFyZ2luOiA0XHJcbiAgICAgIH0sIHByb3ZpZGVkT3B0aW9ucyApO1xyXG5cclxuICAgIG9wdGlvbnMubWF4V2lkdGggPSBvcHRpb25zLmZpeGVkV2lkdGg7XHJcbiAgICBvcHRpb25zLm1heEhlaWdodCA9IG9wdGlvbnMuZml4ZWRIZWlnaHQ7XHJcblxyXG4gICAgY29uc3QgY29udGVudE5vZGUgPSBuZXcgRXF1YXRpb25QYW5lbCggbGVmdFRlcm1DcmVhdG9ycywgcmlnaHRUZXJtQ3JlYXRvcnMsIHtcclxuICAgICAgY29udGVudFdpZHRoOiBvcHRpb25zLmZpeGVkV2lkdGggLSAoIDIgKiBvcHRpb25zLmNvbnRlbnRYTWFyZ2luICksXHJcbiAgICAgIGNvbnRlbnRIZWlnaHQ6IG9wdGlvbnMuZml4ZWRIZWlnaHQgLSAoIDIgKiBvcHRpb25zLmNvbnRlbnRZTWFyZ2luICksXHJcbiAgICAgIHhNYXJnaW46IDAsXHJcbiAgICAgIHlNYXJnaW46IDAsXHJcbiAgICAgIHRhbmRlbTogb3B0aW9ucy50YW5kZW0uY3JlYXRlVGFuZGVtKCAnY29udGVudE5vZGUnICksXHJcbiAgICAgIHBoZXRpb1Zpc2libGVQcm9wZXJ0eUluc3RydW1lbnRlZDogZmFsc2VcclxuICAgIH0gKTtcclxuXHJcbiAgICBvcHRpb25zLnRpdGxlTm9kZSA9IG9wdGlvbnMudGl0bGVOb2RlIHx8IG5ldyBUZXh0KCBFcXVhbGl0eUV4cGxvcmVyU3RyaW5ncy5lcXVhdGlvbk9ySW5lcXVhbGl0eVN0cmluZ1Byb3BlcnR5LCB7XHJcbiAgICAgIGZvbnQ6IEVxdWFsaXR5RXhwbG9yZXJDb25zdGFudHMuQUNDT1JESU9OX0JPWF9USVRMRV9GT05ULFxyXG4gICAgICBtYXhXaWR0aDogMC44NSAqIGNvbnRlbnROb2RlLndpZHRoLFxyXG4gICAgICB0YW5kZW06IG9wdGlvbnMudGFuZGVtLmNyZWF0ZVRhbmRlbSggJ3RpdGxlVGV4dCcgKVxyXG4gICAgfSApO1xyXG5cclxuICAgIHN1cGVyKCBjb250ZW50Tm9kZSwgb3B0aW9ucyApO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIG92ZXJyaWRlIGRpc3Bvc2UoKTogdm9pZCB7XHJcbiAgICBhc3NlcnQgJiYgYXNzZXJ0KCBmYWxzZSwgJ2Rpc3Bvc2UgaXMgbm90IHN1cHBvcnRlZCwgZXhpc3RzIGZvciB0aGUgbGlmZXRpbWUgb2YgdGhlIHNpbScgKTtcclxuICAgIHN1cGVyLmRpc3Bvc2UoKTtcclxuICB9XHJcbn1cclxuXHJcbmVxdWFsaXR5RXhwbG9yZXIucmVnaXN0ZXIoICdFcXVhdGlvbkFjY29yZGlvbkJveCcsIEVxdWF0aW9uQWNjb3JkaW9uQm94ICk7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFNBQVNBLFVBQVUsUUFBUSx1Q0FBdUM7QUFFbEUsU0FBaUNDLElBQUksUUFBUSxtQ0FBbUM7QUFDaEYsT0FBT0MsWUFBWSxNQUErQixvQ0FBb0M7QUFDdEYsT0FBT0MsZ0JBQWdCLE1BQU0sMkJBQTJCO0FBQ3hELE9BQU9DLHVCQUF1QixNQUFNLGtDQUFrQztBQUN0RSxPQUFPQyx5QkFBeUIsTUFBTSxpQ0FBaUM7QUFFdkUsT0FBT0MsYUFBYSxNQUFNLG9CQUFvQjtBQVk5QyxlQUFlLE1BQU1DLG9CQUFvQixTQUFTTCxZQUFZLENBQUM7RUFFN0Q7QUFDRjtBQUNBO0FBQ0E7QUFDQTtFQUNTTSxXQUFXQSxDQUFFQyxnQkFBK0IsRUFBRUMsaUJBQWdDLEVBQUVDLGVBQTRDLEVBQUc7SUFFcEksTUFBTUMsT0FBTyxHQUFHWixVQUFVLENBQWdFLENBQUMsQ0FBRSxDQUFDLENBQUMsRUFDN0ZLLHlCQUF5QixDQUFDUSxxQkFBcUIsRUFBRTtNQUUvQztNQUNBQyxVQUFVLEVBQUUsR0FBRztNQUNmQyxXQUFXLEVBQUUsRUFBRTtNQUVmO01BQ0FDLHFCQUFxQixFQUFFLEtBQUs7TUFDNUJDLGNBQWMsRUFBRSxDQUFDO01BQ2pCQyxjQUFjLEVBQUU7SUFDbEIsQ0FBQyxFQUFFUCxlQUFnQixDQUFDO0lBRXRCQyxPQUFPLENBQUNPLFFBQVEsR0FBR1AsT0FBTyxDQUFDRSxVQUFVO0lBQ3JDRixPQUFPLENBQUNRLFNBQVMsR0FBR1IsT0FBTyxDQUFDRyxXQUFXO0lBRXZDLE1BQU1NLFdBQVcsR0FBRyxJQUFJZixhQUFhLENBQUVHLGdCQUFnQixFQUFFQyxpQkFBaUIsRUFBRTtNQUMxRVksWUFBWSxFQUFFVixPQUFPLENBQUNFLFVBQVUsR0FBSyxDQUFDLEdBQUdGLE9BQU8sQ0FBQ0ssY0FBZ0I7TUFDakVNLGFBQWEsRUFBRVgsT0FBTyxDQUFDRyxXQUFXLEdBQUssQ0FBQyxHQUFHSCxPQUFPLENBQUNNLGNBQWdCO01BQ25FTSxPQUFPLEVBQUUsQ0FBQztNQUNWQyxPQUFPLEVBQUUsQ0FBQztNQUNWQyxNQUFNLEVBQUVkLE9BQU8sQ0FBQ2MsTUFBTSxDQUFDQyxZQUFZLENBQUUsYUFBYyxDQUFDO01BQ3BEQyxpQ0FBaUMsRUFBRTtJQUNyQyxDQUFFLENBQUM7SUFFSGhCLE9BQU8sQ0FBQ2lCLFNBQVMsR0FBR2pCLE9BQU8sQ0FBQ2lCLFNBQVMsSUFBSSxJQUFJNUIsSUFBSSxDQUFFRyx1QkFBdUIsQ0FBQzBCLGtDQUFrQyxFQUFFO01BQzdHQyxJQUFJLEVBQUUxQix5QkFBeUIsQ0FBQzJCLHdCQUF3QjtNQUN4RGIsUUFBUSxFQUFFLElBQUksR0FBR0UsV0FBVyxDQUFDWSxLQUFLO01BQ2xDUCxNQUFNLEVBQUVkLE9BQU8sQ0FBQ2MsTUFBTSxDQUFDQyxZQUFZLENBQUUsV0FBWTtJQUNuRCxDQUFFLENBQUM7SUFFSCxLQUFLLENBQUVOLFdBQVcsRUFBRVQsT0FBUSxDQUFDO0VBQy9CO0VBRWdCc0IsT0FBT0EsQ0FBQSxFQUFTO0lBQzlCQyxNQUFNLElBQUlBLE1BQU0sQ0FBRSxLQUFLLEVBQUUsOERBQStELENBQUM7SUFDekYsS0FBSyxDQUFDRCxPQUFPLENBQUMsQ0FBQztFQUNqQjtBQUNGO0FBRUEvQixnQkFBZ0IsQ0FBQ2lDLFFBQVEsQ0FBRSxzQkFBc0IsRUFBRTdCLG9CQUFxQixDQUFDIn0=