// Copyright 2017-2022, University of Colorado Boulder

/**
 * The 'Fruits' scene in the 'Basics' screen.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import { Image } from '../../../../scenery/js/imports.js';
import apple_png from '../../../images/apple_png.js';
import appleShadow_png from '../../../images/appleShadow_png.js';
import lemon_png from '../../../images/lemon_png.js';
import lemonShadow_png from '../../../images/lemonShadow_png.js';
import orange_png from '../../../images/orange_png.js';
import orangeShadow_png from '../../../images/orangeShadow_png.js';
import EqualityExplorerConstants from '../../common/EqualityExplorerConstants.js';
import equalityExplorer from '../../equalityExplorer.js';
import BasicsScene from './BasicsScene.js';
import ObjectVariable from '../../common/model/ObjectVariable.js';
export default class FruitsScene extends BasicsScene {
  constructor(tandem) {
    const variablesTandem = tandem.createTandem('variables');
    const variables = [
    // apple
    new ObjectVariable({
      image: apple_png,
      shadow: appleShadow_png,
      value: 4,
      tandem: variablesTandem.createTandem('apple')
    }),
    // lemon
    new ObjectVariable({
      image: lemon_png,
      shadow: lemonShadow_png,
      value: 5,
      tandem: variablesTandem.createTandem('lemon')
    }),
    // orange
    new ObjectVariable({
      image: orange_png,
      shadow: orangeShadow_png,
      value: 2,
      tandem: variablesTandem.createTandem('orange')
    })];
    super(variables, {
      // icon used to represent this scene in the scene control (radio buttons)
      icon: new Image(apple_png, {
        maxHeight: EqualityExplorerConstants.SMALL_TERM_DIAMETER
      }),
      tandem: tandem
    });
  }
}
equalityExplorer.register('FruitsScene', FruitsScene);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJJbWFnZSIsImFwcGxlX3BuZyIsImFwcGxlU2hhZG93X3BuZyIsImxlbW9uX3BuZyIsImxlbW9uU2hhZG93X3BuZyIsIm9yYW5nZV9wbmciLCJvcmFuZ2VTaGFkb3dfcG5nIiwiRXF1YWxpdHlFeHBsb3JlckNvbnN0YW50cyIsImVxdWFsaXR5RXhwbG9yZXIiLCJCYXNpY3NTY2VuZSIsIk9iamVjdFZhcmlhYmxlIiwiRnJ1aXRzU2NlbmUiLCJjb25zdHJ1Y3RvciIsInRhbmRlbSIsInZhcmlhYmxlc1RhbmRlbSIsImNyZWF0ZVRhbmRlbSIsInZhcmlhYmxlcyIsImltYWdlIiwic2hhZG93IiwidmFsdWUiLCJpY29uIiwibWF4SGVpZ2h0IiwiU01BTExfVEVSTV9ESUFNRVRFUiIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiRnJ1aXRzU2NlbmUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTctMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogVGhlICdGcnVpdHMnIHNjZW5lIGluIHRoZSAnQmFzaWNzJyBzY3JlZW4uXHJcbiAqXHJcbiAqIEBhdXRob3IgQ2hyaXMgTWFsbGV5IChQaXhlbFpvb20sIEluYy4pXHJcbiAqL1xyXG5cclxuaW1wb3J0IHsgSW1hZ2UgfSBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgYXBwbGVfcG5nIGZyb20gJy4uLy4uLy4uL2ltYWdlcy9hcHBsZV9wbmcuanMnO1xyXG5pbXBvcnQgYXBwbGVTaGFkb3dfcG5nIGZyb20gJy4uLy4uLy4uL2ltYWdlcy9hcHBsZVNoYWRvd19wbmcuanMnO1xyXG5pbXBvcnQgbGVtb25fcG5nIGZyb20gJy4uLy4uLy4uL2ltYWdlcy9sZW1vbl9wbmcuanMnO1xyXG5pbXBvcnQgbGVtb25TaGFkb3dfcG5nIGZyb20gJy4uLy4uLy4uL2ltYWdlcy9sZW1vblNoYWRvd19wbmcuanMnO1xyXG5pbXBvcnQgb3JhbmdlX3BuZyBmcm9tICcuLi8uLi8uLi9pbWFnZXMvb3JhbmdlX3BuZy5qcyc7XHJcbmltcG9ydCBvcmFuZ2VTaGFkb3dfcG5nIGZyb20gJy4uLy4uLy4uL2ltYWdlcy9vcmFuZ2VTaGFkb3dfcG5nLmpzJztcclxuaW1wb3J0IEVxdWFsaXR5RXhwbG9yZXJDb25zdGFudHMgZnJvbSAnLi4vLi4vY29tbW9uL0VxdWFsaXR5RXhwbG9yZXJDb25zdGFudHMuanMnO1xyXG5pbXBvcnQgZXF1YWxpdHlFeHBsb3JlciBmcm9tICcuLi8uLi9lcXVhbGl0eUV4cGxvcmVyLmpzJztcclxuaW1wb3J0IEJhc2ljc1NjZW5lIGZyb20gJy4vQmFzaWNzU2NlbmUuanMnO1xyXG5pbXBvcnQgT2JqZWN0VmFyaWFibGUgZnJvbSAnLi4vLi4vY29tbW9uL21vZGVsL09iamVjdFZhcmlhYmxlLmpzJztcclxuaW1wb3J0IFRhbmRlbSBmcm9tICcuLi8uLi8uLi8uLi90YW5kZW0vanMvVGFuZGVtLmpzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZydWl0c1NjZW5lIGV4dGVuZHMgQmFzaWNzU2NlbmUge1xyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoIHRhbmRlbTogVGFuZGVtICkge1xyXG5cclxuICAgIGNvbnN0IHZhcmlhYmxlc1RhbmRlbSA9IHRhbmRlbS5jcmVhdGVUYW5kZW0oICd2YXJpYWJsZXMnICk7XHJcblxyXG4gICAgY29uc3QgdmFyaWFibGVzID0gW1xyXG5cclxuICAgICAgLy8gYXBwbGVcclxuICAgICAgbmV3IE9iamVjdFZhcmlhYmxlKCB7XHJcbiAgICAgICAgaW1hZ2U6IGFwcGxlX3BuZyxcclxuICAgICAgICBzaGFkb3c6IGFwcGxlU2hhZG93X3BuZyxcclxuICAgICAgICB2YWx1ZTogNCxcclxuICAgICAgICB0YW5kZW06IHZhcmlhYmxlc1RhbmRlbS5jcmVhdGVUYW5kZW0oICdhcHBsZScgKVxyXG4gICAgICB9ICksXHJcblxyXG4gICAgICAvLyBsZW1vblxyXG4gICAgICBuZXcgT2JqZWN0VmFyaWFibGUoIHtcclxuICAgICAgICBpbWFnZTogbGVtb25fcG5nLFxyXG4gICAgICAgIHNoYWRvdzogbGVtb25TaGFkb3dfcG5nLFxyXG4gICAgICAgIHZhbHVlOiA1LFxyXG4gICAgICAgIHRhbmRlbTogdmFyaWFibGVzVGFuZGVtLmNyZWF0ZVRhbmRlbSggJ2xlbW9uJyApXHJcbiAgICAgIH0gKSxcclxuXHJcbiAgICAgIC8vIG9yYW5nZVxyXG4gICAgICBuZXcgT2JqZWN0VmFyaWFibGUoIHtcclxuICAgICAgICBpbWFnZTogb3JhbmdlX3BuZyxcclxuICAgICAgICBzaGFkb3c6IG9yYW5nZVNoYWRvd19wbmcsXHJcbiAgICAgICAgdmFsdWU6IDIsXHJcbiAgICAgICAgdGFuZGVtOiB2YXJpYWJsZXNUYW5kZW0uY3JlYXRlVGFuZGVtKCAnb3JhbmdlJyApXHJcbiAgICAgIH0gKVxyXG4gICAgXTtcclxuXHJcbiAgICBzdXBlciggdmFyaWFibGVzLCB7XHJcblxyXG4gICAgICAvLyBpY29uIHVzZWQgdG8gcmVwcmVzZW50IHRoaXMgc2NlbmUgaW4gdGhlIHNjZW5lIGNvbnRyb2wgKHJhZGlvIGJ1dHRvbnMpXHJcbiAgICAgIGljb246IG5ldyBJbWFnZSggYXBwbGVfcG5nLCB7XHJcbiAgICAgICAgbWF4SGVpZ2h0OiBFcXVhbGl0eUV4cGxvcmVyQ29uc3RhbnRzLlNNQUxMX1RFUk1fRElBTUVURVJcclxuICAgICAgfSApLFxyXG5cclxuICAgICAgdGFuZGVtOiB0YW5kZW1cclxuICAgIH0gKTtcclxuICB9XHJcbn1cclxuXHJcbmVxdWFsaXR5RXhwbG9yZXIucmVnaXN0ZXIoICdGcnVpdHNTY2VuZScsIEZydWl0c1NjZW5lICk7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFNBQVNBLEtBQUssUUFBUSxtQ0FBbUM7QUFDekQsT0FBT0MsU0FBUyxNQUFNLDhCQUE4QjtBQUNwRCxPQUFPQyxlQUFlLE1BQU0sb0NBQW9DO0FBQ2hFLE9BQU9DLFNBQVMsTUFBTSw4QkFBOEI7QUFDcEQsT0FBT0MsZUFBZSxNQUFNLG9DQUFvQztBQUNoRSxPQUFPQyxVQUFVLE1BQU0sK0JBQStCO0FBQ3RELE9BQU9DLGdCQUFnQixNQUFNLHFDQUFxQztBQUNsRSxPQUFPQyx5QkFBeUIsTUFBTSwyQ0FBMkM7QUFDakYsT0FBT0MsZ0JBQWdCLE1BQU0sMkJBQTJCO0FBQ3hELE9BQU9DLFdBQVcsTUFBTSxrQkFBa0I7QUFDMUMsT0FBT0MsY0FBYyxNQUFNLHNDQUFzQztBQUdqRSxlQUFlLE1BQU1DLFdBQVcsU0FBU0YsV0FBVyxDQUFDO0VBRTVDRyxXQUFXQSxDQUFFQyxNQUFjLEVBQUc7SUFFbkMsTUFBTUMsZUFBZSxHQUFHRCxNQUFNLENBQUNFLFlBQVksQ0FBRSxXQUFZLENBQUM7SUFFMUQsTUFBTUMsU0FBUyxHQUFHO0lBRWhCO0lBQ0EsSUFBSU4sY0FBYyxDQUFFO01BQ2xCTyxLQUFLLEVBQUVoQixTQUFTO01BQ2hCaUIsTUFBTSxFQUFFaEIsZUFBZTtNQUN2QmlCLEtBQUssRUFBRSxDQUFDO01BQ1JOLE1BQU0sRUFBRUMsZUFBZSxDQUFDQyxZQUFZLENBQUUsT0FBUTtJQUNoRCxDQUFFLENBQUM7SUFFSDtJQUNBLElBQUlMLGNBQWMsQ0FBRTtNQUNsQk8sS0FBSyxFQUFFZCxTQUFTO01BQ2hCZSxNQUFNLEVBQUVkLGVBQWU7TUFDdkJlLEtBQUssRUFBRSxDQUFDO01BQ1JOLE1BQU0sRUFBRUMsZUFBZSxDQUFDQyxZQUFZLENBQUUsT0FBUTtJQUNoRCxDQUFFLENBQUM7SUFFSDtJQUNBLElBQUlMLGNBQWMsQ0FBRTtNQUNsQk8sS0FBSyxFQUFFWixVQUFVO01BQ2pCYSxNQUFNLEVBQUVaLGdCQUFnQjtNQUN4QmEsS0FBSyxFQUFFLENBQUM7TUFDUk4sTUFBTSxFQUFFQyxlQUFlLENBQUNDLFlBQVksQ0FBRSxRQUFTO0lBQ2pELENBQUUsQ0FBQyxDQUNKO0lBRUQsS0FBSyxDQUFFQyxTQUFTLEVBQUU7TUFFaEI7TUFDQUksSUFBSSxFQUFFLElBQUlwQixLQUFLLENBQUVDLFNBQVMsRUFBRTtRQUMxQm9CLFNBQVMsRUFBRWQseUJBQXlCLENBQUNlO01BQ3ZDLENBQUUsQ0FBQztNQUVIVCxNQUFNLEVBQUVBO0lBQ1YsQ0FBRSxDQUFDO0VBQ0w7QUFDRjtBQUVBTCxnQkFBZ0IsQ0FBQ2UsUUFBUSxDQUFFLGFBQWEsRUFBRVosV0FBWSxDQUFDIn0=