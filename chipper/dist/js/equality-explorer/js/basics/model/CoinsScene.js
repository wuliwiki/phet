// Copyright 2017-2022, University of Colorado Boulder

/**
 * The 'Coins' scene in the 'Basics' screen.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import { Image } from '../../../../scenery/js/imports.js';
import coin1_png from '../../../images/coin1_png.js';
import coin1Shadow_png from '../../../images/coin1Shadow_png.js';
import coin2_png from '../../../images/coin2_png.js';
import coin2Shadow_png from '../../../images/coin2Shadow_png.js';
import coin3_png from '../../../images/coin3_png.js';
import coin3Shadow_png from '../../../images/coin3Shadow_png.js';
import EqualityExplorerConstants from '../../common/EqualityExplorerConstants.js';
import equalityExplorer from '../../equalityExplorer.js';
import BasicsScene from './BasicsScene.js';
import ObjectVariable from '../../common/model/ObjectVariable.js';
export default class CoinsScene extends BasicsScene {
  constructor(tandem) {
    const variablesTandem = tandem.createTandem('variables');
    const variables = [
    // coin1
    new ObjectVariable({
      image: coin1_png,
      shadow: coin1Shadow_png,
      value: 3,
      tandem: variablesTandem.createTandem('coin1')
    }),
    // coin2
    new ObjectVariable({
      image: coin2_png,
      shadow: coin2Shadow_png,
      value: 2,
      tandem: variablesTandem.createTandem('coin2')
    }),
    // coin3
    new ObjectVariable({
      image: coin3_png,
      shadow: coin3Shadow_png,
      value: 5,
      tandem: variablesTandem.createTandem('coin3')
    })];
    super(variables, {
      // icon used to represent this scene in the scene control (radio buttons)
      icon: new Image(coin3_png, {
        maxHeight: EqualityExplorerConstants.SMALL_TERM_DIAMETER
      }),
      tandem: tandem
    });
  }
}
equalityExplorer.register('CoinsScene', CoinsScene);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJJbWFnZSIsImNvaW4xX3BuZyIsImNvaW4xU2hhZG93X3BuZyIsImNvaW4yX3BuZyIsImNvaW4yU2hhZG93X3BuZyIsImNvaW4zX3BuZyIsImNvaW4zU2hhZG93X3BuZyIsIkVxdWFsaXR5RXhwbG9yZXJDb25zdGFudHMiLCJlcXVhbGl0eUV4cGxvcmVyIiwiQmFzaWNzU2NlbmUiLCJPYmplY3RWYXJpYWJsZSIsIkNvaW5zU2NlbmUiLCJjb25zdHJ1Y3RvciIsInRhbmRlbSIsInZhcmlhYmxlc1RhbmRlbSIsImNyZWF0ZVRhbmRlbSIsInZhcmlhYmxlcyIsImltYWdlIiwic2hhZG93IiwidmFsdWUiLCJpY29uIiwibWF4SGVpZ2h0IiwiU01BTExfVEVSTV9ESUFNRVRFUiIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiQ29pbnNTY2VuZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxNy0yMDIyLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBUaGUgJ0NvaW5zJyBzY2VuZSBpbiB0aGUgJ0Jhc2ljcycgc2NyZWVuLlxyXG4gKlxyXG4gKiBAYXV0aG9yIENocmlzIE1hbGxleSAoUGl4ZWxab29tLCBJbmMuKVxyXG4gKi9cclxuXHJcbmltcG9ydCB7IEltYWdlIH0gZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IGNvaW4xX3BuZyBmcm9tICcuLi8uLi8uLi9pbWFnZXMvY29pbjFfcG5nLmpzJztcclxuaW1wb3J0IGNvaW4xU2hhZG93X3BuZyBmcm9tICcuLi8uLi8uLi9pbWFnZXMvY29pbjFTaGFkb3dfcG5nLmpzJztcclxuaW1wb3J0IGNvaW4yX3BuZyBmcm9tICcuLi8uLi8uLi9pbWFnZXMvY29pbjJfcG5nLmpzJztcclxuaW1wb3J0IGNvaW4yU2hhZG93X3BuZyBmcm9tICcuLi8uLi8uLi9pbWFnZXMvY29pbjJTaGFkb3dfcG5nLmpzJztcclxuaW1wb3J0IGNvaW4zX3BuZyBmcm9tICcuLi8uLi8uLi9pbWFnZXMvY29pbjNfcG5nLmpzJztcclxuaW1wb3J0IGNvaW4zU2hhZG93X3BuZyBmcm9tICcuLi8uLi8uLi9pbWFnZXMvY29pbjNTaGFkb3dfcG5nLmpzJztcclxuaW1wb3J0IEVxdWFsaXR5RXhwbG9yZXJDb25zdGFudHMgZnJvbSAnLi4vLi4vY29tbW9uL0VxdWFsaXR5RXhwbG9yZXJDb25zdGFudHMuanMnO1xyXG5pbXBvcnQgZXF1YWxpdHlFeHBsb3JlciBmcm9tICcuLi8uLi9lcXVhbGl0eUV4cGxvcmVyLmpzJztcclxuaW1wb3J0IEJhc2ljc1NjZW5lIGZyb20gJy4vQmFzaWNzU2NlbmUuanMnO1xyXG5pbXBvcnQgT2JqZWN0VmFyaWFibGUgZnJvbSAnLi4vLi4vY29tbW9uL21vZGVsL09iamVjdFZhcmlhYmxlLmpzJztcclxuaW1wb3J0IFRhbmRlbSBmcm9tICcuLi8uLi8uLi8uLi90YW5kZW0vanMvVGFuZGVtLmpzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENvaW5zU2NlbmUgZXh0ZW5kcyBCYXNpY3NTY2VuZSB7XHJcblxyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvciggdGFuZGVtOiBUYW5kZW0gKSB7XHJcblxyXG4gICAgY29uc3QgdmFyaWFibGVzVGFuZGVtID0gdGFuZGVtLmNyZWF0ZVRhbmRlbSggJ3ZhcmlhYmxlcycgKTtcclxuXHJcbiAgICBjb25zdCB2YXJpYWJsZXMgPSBbXHJcblxyXG4gICAgICAvLyBjb2luMVxyXG4gICAgICBuZXcgT2JqZWN0VmFyaWFibGUoIHtcclxuICAgICAgICBpbWFnZTogY29pbjFfcG5nLFxyXG4gICAgICAgIHNoYWRvdzogY29pbjFTaGFkb3dfcG5nLFxyXG4gICAgICAgIHZhbHVlOiAzLFxyXG4gICAgICAgIHRhbmRlbTogdmFyaWFibGVzVGFuZGVtLmNyZWF0ZVRhbmRlbSggJ2NvaW4xJyApXHJcbiAgICAgIH0gKSxcclxuXHJcbiAgICAgIC8vIGNvaW4yXHJcbiAgICAgIG5ldyBPYmplY3RWYXJpYWJsZSgge1xyXG4gICAgICAgIGltYWdlOiBjb2luMl9wbmcsXHJcbiAgICAgICAgc2hhZG93OiBjb2luMlNoYWRvd19wbmcsXHJcbiAgICAgICAgdmFsdWU6IDIsXHJcbiAgICAgICAgdGFuZGVtOiB2YXJpYWJsZXNUYW5kZW0uY3JlYXRlVGFuZGVtKCAnY29pbjInIClcclxuICAgICAgfSApLFxyXG5cclxuICAgICAgLy8gY29pbjNcclxuICAgICAgbmV3IE9iamVjdFZhcmlhYmxlKCB7XHJcbiAgICAgICAgaW1hZ2U6IGNvaW4zX3BuZyxcclxuICAgICAgICBzaGFkb3c6IGNvaW4zU2hhZG93X3BuZyxcclxuICAgICAgICB2YWx1ZTogNSxcclxuICAgICAgICB0YW5kZW06IHZhcmlhYmxlc1RhbmRlbS5jcmVhdGVUYW5kZW0oICdjb2luMycgKVxyXG4gICAgICB9IClcclxuICAgIF07XHJcblxyXG4gICAgc3VwZXIoIHZhcmlhYmxlcywge1xyXG5cclxuICAgICAgLy8gaWNvbiB1c2VkIHRvIHJlcHJlc2VudCB0aGlzIHNjZW5lIGluIHRoZSBzY2VuZSBjb250cm9sIChyYWRpbyBidXR0b25zKVxyXG4gICAgICBpY29uOiBuZXcgSW1hZ2UoIGNvaW4zX3BuZywge1xyXG4gICAgICAgIG1heEhlaWdodDogRXF1YWxpdHlFeHBsb3JlckNvbnN0YW50cy5TTUFMTF9URVJNX0RJQU1FVEVSXHJcbiAgICAgIH0gKSxcclxuXHJcbiAgICAgIHRhbmRlbTogdGFuZGVtXHJcbiAgICB9ICk7XHJcbiAgfVxyXG59XHJcblxyXG5lcXVhbGl0eUV4cGxvcmVyLnJlZ2lzdGVyKCAnQ29pbnNTY2VuZScsIENvaW5zU2NlbmUgKTsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsU0FBU0EsS0FBSyxRQUFRLG1DQUFtQztBQUN6RCxPQUFPQyxTQUFTLE1BQU0sOEJBQThCO0FBQ3BELE9BQU9DLGVBQWUsTUFBTSxvQ0FBb0M7QUFDaEUsT0FBT0MsU0FBUyxNQUFNLDhCQUE4QjtBQUNwRCxPQUFPQyxlQUFlLE1BQU0sb0NBQW9DO0FBQ2hFLE9BQU9DLFNBQVMsTUFBTSw4QkFBOEI7QUFDcEQsT0FBT0MsZUFBZSxNQUFNLG9DQUFvQztBQUNoRSxPQUFPQyx5QkFBeUIsTUFBTSwyQ0FBMkM7QUFDakYsT0FBT0MsZ0JBQWdCLE1BQU0sMkJBQTJCO0FBQ3hELE9BQU9DLFdBQVcsTUFBTSxrQkFBa0I7QUFDMUMsT0FBT0MsY0FBYyxNQUFNLHNDQUFzQztBQUdqRSxlQUFlLE1BQU1DLFVBQVUsU0FBU0YsV0FBVyxDQUFDO0VBRTNDRyxXQUFXQSxDQUFFQyxNQUFjLEVBQUc7SUFFbkMsTUFBTUMsZUFBZSxHQUFHRCxNQUFNLENBQUNFLFlBQVksQ0FBRSxXQUFZLENBQUM7SUFFMUQsTUFBTUMsU0FBUyxHQUFHO0lBRWhCO0lBQ0EsSUFBSU4sY0FBYyxDQUFFO01BQ2xCTyxLQUFLLEVBQUVoQixTQUFTO01BQ2hCaUIsTUFBTSxFQUFFaEIsZUFBZTtNQUN2QmlCLEtBQUssRUFBRSxDQUFDO01BQ1JOLE1BQU0sRUFBRUMsZUFBZSxDQUFDQyxZQUFZLENBQUUsT0FBUTtJQUNoRCxDQUFFLENBQUM7SUFFSDtJQUNBLElBQUlMLGNBQWMsQ0FBRTtNQUNsQk8sS0FBSyxFQUFFZCxTQUFTO01BQ2hCZSxNQUFNLEVBQUVkLGVBQWU7TUFDdkJlLEtBQUssRUFBRSxDQUFDO01BQ1JOLE1BQU0sRUFBRUMsZUFBZSxDQUFDQyxZQUFZLENBQUUsT0FBUTtJQUNoRCxDQUFFLENBQUM7SUFFSDtJQUNBLElBQUlMLGNBQWMsQ0FBRTtNQUNsQk8sS0FBSyxFQUFFWixTQUFTO01BQ2hCYSxNQUFNLEVBQUVaLGVBQWU7TUFDdkJhLEtBQUssRUFBRSxDQUFDO01BQ1JOLE1BQU0sRUFBRUMsZUFBZSxDQUFDQyxZQUFZLENBQUUsT0FBUTtJQUNoRCxDQUFFLENBQUMsQ0FDSjtJQUVELEtBQUssQ0FBRUMsU0FBUyxFQUFFO01BRWhCO01BQ0FJLElBQUksRUFBRSxJQUFJcEIsS0FBSyxDQUFFSyxTQUFTLEVBQUU7UUFDMUJnQixTQUFTLEVBQUVkLHlCQUF5QixDQUFDZTtNQUN2QyxDQUFFLENBQUM7TUFFSFQsTUFBTSxFQUFFQTtJQUNWLENBQUUsQ0FBQztFQUNMO0FBQ0Y7QUFFQUwsZ0JBQWdCLENBQUNlLFFBQVEsQ0FBRSxZQUFZLEVBQUVaLFVBQVcsQ0FBQyJ9