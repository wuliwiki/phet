// Copyright 2017-2022, University of Colorado Boulder

/**
 * The 'Operations' screen.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import Property from '../../../axon/js/Property.js';
import optionize from '../../../phet-core/js/optionize.js';
import EqualityExplorerScreen from '../common/EqualityExplorerScreen.js';
import equalityExplorer from '../equalityExplorer.js';
import EqualityExplorerStrings from '../EqualityExplorerStrings.js';
import OperationsModel from './model/OperationsModel.js';
import OperationsScreenView from './view/OperationsScreenView.js';
import ScreenIcon from '../../../joist/js/ScreenIcon.js';
import Fraction from '../../../phetcommon/js/model/Fraction.js';
import MathSymbols from '../../../scenery-phet/js/MathSymbols.js';
import PhetFont from '../../../scenery-phet/js/PhetFont.js';
import { HBox, Text } from '../../../scenery/js/imports.js';
import EqualityExplorerColors from '../common/EqualityExplorerColors.js';
import ConstantTermNode from '../common/view/ConstantTermNode.js';
import VariableTermNode from '../common/view/VariableTermNode.js';
export default class OperationsScreen extends EqualityExplorerScreen {
  constructor(providedOptions) {
    const options = optionize()({
      // EqualityExplorerScreenOptions
      name: EqualityExplorerStrings.screen.operationsStringProperty,
      backgroundColorProperty: new Property(EqualityExplorerColors.SOLVING_SCREEN_BACKGROUND),
      homeScreenIcon: createScreenIcon()
    }, providedOptions);
    super(() => new OperationsModel(options.tandem.createTandem('model')), model => new OperationsScreenView(model, options.tandem.createTandem('view')), options);
  }
}

/**
 * Creates the icon for this screen: 3x = 6
 */
function createScreenIcon() {
  const operatorOptions = {
    font: new PhetFont(30)
  };

  // 3x on left side of equation
  const variableTermNode = VariableTermNode.createInteractiveTermNode(Fraction.fromInteger(3), EqualityExplorerStrings.xStringProperty);

  // =
  const equalsText = new Text(MathSymbols.EQUAL_TO, operatorOptions);

  // 6 on right side of equation
  const constantTermNode = ConstantTermNode.createInteractiveTermNode(Fraction.fromInteger(6));
  const iconNode = new HBox({
    spacing: 5,
    children: [variableTermNode, equalsText, constantTermNode]
  });
  return new ScreenIcon(iconNode, {
    maxIconWidthProportion: 0.75,
    fill: EqualityExplorerColors.SOLVING_SCREEN_BACKGROUND
  });
}
equalityExplorer.register('OperationsScreen', OperationsScreen);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQcm9wZXJ0eSIsIm9wdGlvbml6ZSIsIkVxdWFsaXR5RXhwbG9yZXJTY3JlZW4iLCJlcXVhbGl0eUV4cGxvcmVyIiwiRXF1YWxpdHlFeHBsb3JlclN0cmluZ3MiLCJPcGVyYXRpb25zTW9kZWwiLCJPcGVyYXRpb25zU2NyZWVuVmlldyIsIlNjcmVlbkljb24iLCJGcmFjdGlvbiIsIk1hdGhTeW1ib2xzIiwiUGhldEZvbnQiLCJIQm94IiwiVGV4dCIsIkVxdWFsaXR5RXhwbG9yZXJDb2xvcnMiLCJDb25zdGFudFRlcm1Ob2RlIiwiVmFyaWFibGVUZXJtTm9kZSIsIk9wZXJhdGlvbnNTY3JlZW4iLCJjb25zdHJ1Y3RvciIsInByb3ZpZGVkT3B0aW9ucyIsIm9wdGlvbnMiLCJuYW1lIiwic2NyZWVuIiwib3BlcmF0aW9uc1N0cmluZ1Byb3BlcnR5IiwiYmFja2dyb3VuZENvbG9yUHJvcGVydHkiLCJTT0xWSU5HX1NDUkVFTl9CQUNLR1JPVU5EIiwiaG9tZVNjcmVlbkljb24iLCJjcmVhdGVTY3JlZW5JY29uIiwidGFuZGVtIiwiY3JlYXRlVGFuZGVtIiwibW9kZWwiLCJvcGVyYXRvck9wdGlvbnMiLCJmb250IiwidmFyaWFibGVUZXJtTm9kZSIsImNyZWF0ZUludGVyYWN0aXZlVGVybU5vZGUiLCJmcm9tSW50ZWdlciIsInhTdHJpbmdQcm9wZXJ0eSIsImVxdWFsc1RleHQiLCJFUVVBTF9UTyIsImNvbnN0YW50VGVybU5vZGUiLCJpY29uTm9kZSIsInNwYWNpbmciLCJjaGlsZHJlbiIsIm1heEljb25XaWR0aFByb3BvcnRpb24iLCJmaWxsIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJPcGVyYXRpb25zU2NyZWVuLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE3LTIwMjIsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIFRoZSAnT3BlcmF0aW9ucycgc2NyZWVuLlxyXG4gKlxyXG4gKiBAYXV0aG9yIENocmlzIE1hbGxleSAoUGl4ZWxab29tLCBJbmMuKVxyXG4gKi9cclxuXHJcbmltcG9ydCBQcm9wZXJ0eSBmcm9tICcuLi8uLi8uLi9heG9uL2pzL1Byb3BlcnR5LmpzJztcclxuaW1wb3J0IG9wdGlvbml6ZSwgeyBFbXB0eVNlbGZPcHRpb25zIH0gZnJvbSAnLi4vLi4vLi4vcGhldC1jb3JlL2pzL29wdGlvbml6ZS5qcyc7XHJcbmltcG9ydCBQaWNrUmVxdWlyZWQgZnJvbSAnLi4vLi4vLi4vcGhldC1jb3JlL2pzL3R5cGVzL1BpY2tSZXF1aXJlZC5qcyc7XHJcbmltcG9ydCBFcXVhbGl0eUV4cGxvcmVyU2NyZWVuLCB7IEVxdWFsaXR5RXhwbG9yZXJTY3JlZW5PcHRpb25zIH0gZnJvbSAnLi4vY29tbW9uL0VxdWFsaXR5RXhwbG9yZXJTY3JlZW4uanMnO1xyXG5pbXBvcnQgZXF1YWxpdHlFeHBsb3JlciBmcm9tICcuLi9lcXVhbGl0eUV4cGxvcmVyLmpzJztcclxuaW1wb3J0IEVxdWFsaXR5RXhwbG9yZXJTdHJpbmdzIGZyb20gJy4uL0VxdWFsaXR5RXhwbG9yZXJTdHJpbmdzLmpzJztcclxuaW1wb3J0IE9wZXJhdGlvbnNNb2RlbCBmcm9tICcuL21vZGVsL09wZXJhdGlvbnNNb2RlbC5qcyc7XHJcbmltcG9ydCBPcGVyYXRpb25zU2NyZWVuVmlldyBmcm9tICcuL3ZpZXcvT3BlcmF0aW9uc1NjcmVlblZpZXcuanMnO1xyXG5pbXBvcnQgU2NyZWVuSWNvbiBmcm9tICcuLi8uLi8uLi9qb2lzdC9qcy9TY3JlZW5JY29uLmpzJztcclxuaW1wb3J0IEZyYWN0aW9uIGZyb20gJy4uLy4uLy4uL3BoZXRjb21tb24vanMvbW9kZWwvRnJhY3Rpb24uanMnO1xyXG5pbXBvcnQgTWF0aFN5bWJvbHMgZnJvbSAnLi4vLi4vLi4vc2NlbmVyeS1waGV0L2pzL01hdGhTeW1ib2xzLmpzJztcclxuaW1wb3J0IFBoZXRGb250IGZyb20gJy4uLy4uLy4uL3NjZW5lcnktcGhldC9qcy9QaGV0Rm9udC5qcyc7XHJcbmltcG9ydCB7IEhCb3gsIFRleHQgfSBmcm9tICcuLi8uLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xyXG5pbXBvcnQgRXF1YWxpdHlFeHBsb3JlckNvbG9ycyBmcm9tICcuLi9jb21tb24vRXF1YWxpdHlFeHBsb3JlckNvbG9ycy5qcyc7XHJcbmltcG9ydCBDb25zdGFudFRlcm1Ob2RlIGZyb20gJy4uL2NvbW1vbi92aWV3L0NvbnN0YW50VGVybU5vZGUuanMnO1xyXG5pbXBvcnQgVmFyaWFibGVUZXJtTm9kZSBmcm9tICcuLi9jb21tb24vdmlldy9WYXJpYWJsZVRlcm1Ob2RlLmpzJztcclxuXHJcbnR5cGUgU2VsZk9wdGlvbnMgPSBFbXB0eVNlbGZPcHRpb25zO1xyXG5cclxudHlwZSBPcGVyYXRpb25zU2NyZWVuT3B0aW9ucyA9IFNlbGZPcHRpb25zICYgUGlja1JlcXVpcmVkPEVxdWFsaXR5RXhwbG9yZXJTY3JlZW5PcHRpb25zLCAndGFuZGVtJz47XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBPcGVyYXRpb25zU2NyZWVuIGV4dGVuZHMgRXF1YWxpdHlFeHBsb3JlclNjcmVlbjxPcGVyYXRpb25zTW9kZWwsIE9wZXJhdGlvbnNTY3JlZW5WaWV3PiB7XHJcblxyXG4gIHB1YmxpYyBjb25zdHJ1Y3RvciggcHJvdmlkZWRPcHRpb25zOiBPcGVyYXRpb25zU2NyZWVuT3B0aW9ucyApIHtcclxuXHJcbiAgICBjb25zdCBvcHRpb25zID0gb3B0aW9uaXplPE9wZXJhdGlvbnNTY3JlZW5PcHRpb25zLCBTZWxmT3B0aW9ucywgRXF1YWxpdHlFeHBsb3JlclNjcmVlbk9wdGlvbnM+KCkoIHtcclxuXHJcbiAgICAgIC8vIEVxdWFsaXR5RXhwbG9yZXJTY3JlZW5PcHRpb25zXHJcbiAgICAgIG5hbWU6IEVxdWFsaXR5RXhwbG9yZXJTdHJpbmdzLnNjcmVlbi5vcGVyYXRpb25zU3RyaW5nUHJvcGVydHksXHJcbiAgICAgIGJhY2tncm91bmRDb2xvclByb3BlcnR5OiBuZXcgUHJvcGVydHkoIEVxdWFsaXR5RXhwbG9yZXJDb2xvcnMuU09MVklOR19TQ1JFRU5fQkFDS0dST1VORCApLFxyXG4gICAgICBob21lU2NyZWVuSWNvbjogY3JlYXRlU2NyZWVuSWNvbigpXHJcbiAgICB9LCBwcm92aWRlZE9wdGlvbnMgKTtcclxuXHJcbiAgICBzdXBlcihcclxuICAgICAgKCkgPT4gbmV3IE9wZXJhdGlvbnNNb2RlbCggb3B0aW9ucy50YW5kZW0uY3JlYXRlVGFuZGVtKCAnbW9kZWwnICkgKSxcclxuICAgICAgbW9kZWwgPT4gbmV3IE9wZXJhdGlvbnNTY3JlZW5WaWV3KCBtb2RlbCwgb3B0aW9ucy50YW5kZW0uY3JlYXRlVGFuZGVtKCAndmlldycgKSApLFxyXG4gICAgICBvcHRpb25zXHJcbiAgICApO1xyXG4gIH1cclxufVxyXG5cclxuLyoqXHJcbiAqIENyZWF0ZXMgdGhlIGljb24gZm9yIHRoaXMgc2NyZWVuOiAzeCA9IDZcclxuICovXHJcbmZ1bmN0aW9uIGNyZWF0ZVNjcmVlbkljb24oKTogU2NyZWVuSWNvbiB7XHJcblxyXG4gIGNvbnN0IG9wZXJhdG9yT3B0aW9ucyA9IHsgZm9udDogbmV3IFBoZXRGb250KCAzMCApIH07XHJcblxyXG4gIC8vIDN4IG9uIGxlZnQgc2lkZSBvZiBlcXVhdGlvblxyXG4gIGNvbnN0IHZhcmlhYmxlVGVybU5vZGUgPSBWYXJpYWJsZVRlcm1Ob2RlLmNyZWF0ZUludGVyYWN0aXZlVGVybU5vZGUoIEZyYWN0aW9uLmZyb21JbnRlZ2VyKCAzICksXHJcbiAgICBFcXVhbGl0eUV4cGxvcmVyU3RyaW5ncy54U3RyaW5nUHJvcGVydHkgKTtcclxuXHJcbiAgLy8gPVxyXG4gIGNvbnN0IGVxdWFsc1RleHQgPSBuZXcgVGV4dCggTWF0aFN5bWJvbHMuRVFVQUxfVE8sIG9wZXJhdG9yT3B0aW9ucyApO1xyXG5cclxuICAvLyA2IG9uIHJpZ2h0IHNpZGUgb2YgZXF1YXRpb25cclxuICBjb25zdCBjb25zdGFudFRlcm1Ob2RlID0gQ29uc3RhbnRUZXJtTm9kZS5jcmVhdGVJbnRlcmFjdGl2ZVRlcm1Ob2RlKCBGcmFjdGlvbi5mcm9tSW50ZWdlciggNiApICk7XHJcblxyXG4gIGNvbnN0IGljb25Ob2RlID0gbmV3IEhCb3goIHtcclxuICAgIHNwYWNpbmc6IDUsXHJcbiAgICBjaGlsZHJlbjogWyB2YXJpYWJsZVRlcm1Ob2RlLCBlcXVhbHNUZXh0LCBjb25zdGFudFRlcm1Ob2RlIF1cclxuICB9ICk7XHJcblxyXG4gIHJldHVybiBuZXcgU2NyZWVuSWNvbiggaWNvbk5vZGUsIHtcclxuICAgIG1heEljb25XaWR0aFByb3BvcnRpb246IDAuNzUsXHJcbiAgICBmaWxsOiBFcXVhbGl0eUV4cGxvcmVyQ29sb3JzLlNPTFZJTkdfU0NSRUVOX0JBQ0tHUk9VTkRcclxuICB9ICk7XHJcbn1cclxuXHJcbmVxdWFsaXR5RXhwbG9yZXIucmVnaXN0ZXIoICdPcGVyYXRpb25zU2NyZWVuJywgT3BlcmF0aW9uc1NjcmVlbiApOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxRQUFRLE1BQU0sOEJBQThCO0FBQ25ELE9BQU9DLFNBQVMsTUFBNEIsb0NBQW9DO0FBRWhGLE9BQU9DLHNCQUFzQixNQUF5QyxxQ0FBcUM7QUFDM0csT0FBT0MsZ0JBQWdCLE1BQU0sd0JBQXdCO0FBQ3JELE9BQU9DLHVCQUF1QixNQUFNLCtCQUErQjtBQUNuRSxPQUFPQyxlQUFlLE1BQU0sNEJBQTRCO0FBQ3hELE9BQU9DLG9CQUFvQixNQUFNLGdDQUFnQztBQUNqRSxPQUFPQyxVQUFVLE1BQU0saUNBQWlDO0FBQ3hELE9BQU9DLFFBQVEsTUFBTSwwQ0FBMEM7QUFDL0QsT0FBT0MsV0FBVyxNQUFNLHlDQUF5QztBQUNqRSxPQUFPQyxRQUFRLE1BQU0sc0NBQXNDO0FBQzNELFNBQVNDLElBQUksRUFBRUMsSUFBSSxRQUFRLGdDQUFnQztBQUMzRCxPQUFPQyxzQkFBc0IsTUFBTSxxQ0FBcUM7QUFDeEUsT0FBT0MsZ0JBQWdCLE1BQU0sb0NBQW9DO0FBQ2pFLE9BQU9DLGdCQUFnQixNQUFNLG9DQUFvQztBQU1qRSxlQUFlLE1BQU1DLGdCQUFnQixTQUFTZCxzQkFBc0IsQ0FBd0M7RUFFbkdlLFdBQVdBLENBQUVDLGVBQXdDLEVBQUc7SUFFN0QsTUFBTUMsT0FBTyxHQUFHbEIsU0FBUyxDQUFzRSxDQUFDLENBQUU7TUFFaEc7TUFDQW1CLElBQUksRUFBRWhCLHVCQUF1QixDQUFDaUIsTUFBTSxDQUFDQyx3QkFBd0I7TUFDN0RDLHVCQUF1QixFQUFFLElBQUl2QixRQUFRLENBQUVhLHNCQUFzQixDQUFDVyx5QkFBMEIsQ0FBQztNQUN6RkMsY0FBYyxFQUFFQyxnQkFBZ0IsQ0FBQztJQUNuQyxDQUFDLEVBQUVSLGVBQWdCLENBQUM7SUFFcEIsS0FBSyxDQUNILE1BQU0sSUFBSWIsZUFBZSxDQUFFYyxPQUFPLENBQUNRLE1BQU0sQ0FBQ0MsWUFBWSxDQUFFLE9BQVEsQ0FBRSxDQUFDLEVBQ25FQyxLQUFLLElBQUksSUFBSXZCLG9CQUFvQixDQUFFdUIsS0FBSyxFQUFFVixPQUFPLENBQUNRLE1BQU0sQ0FBQ0MsWUFBWSxDQUFFLE1BQU8sQ0FBRSxDQUFDLEVBQ2pGVCxPQUNGLENBQUM7RUFDSDtBQUNGOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFNBQVNPLGdCQUFnQkEsQ0FBQSxFQUFlO0VBRXRDLE1BQU1JLGVBQWUsR0FBRztJQUFFQyxJQUFJLEVBQUUsSUFBSXJCLFFBQVEsQ0FBRSxFQUFHO0VBQUUsQ0FBQzs7RUFFcEQ7RUFDQSxNQUFNc0IsZ0JBQWdCLEdBQUdqQixnQkFBZ0IsQ0FBQ2tCLHlCQUF5QixDQUFFekIsUUFBUSxDQUFDMEIsV0FBVyxDQUFFLENBQUUsQ0FBQyxFQUM1RjlCLHVCQUF1QixDQUFDK0IsZUFBZ0IsQ0FBQzs7RUFFM0M7RUFDQSxNQUFNQyxVQUFVLEdBQUcsSUFBSXhCLElBQUksQ0FBRUgsV0FBVyxDQUFDNEIsUUFBUSxFQUFFUCxlQUFnQixDQUFDOztFQUVwRTtFQUNBLE1BQU1RLGdCQUFnQixHQUFHeEIsZ0JBQWdCLENBQUNtQix5QkFBeUIsQ0FBRXpCLFFBQVEsQ0FBQzBCLFdBQVcsQ0FBRSxDQUFFLENBQUUsQ0FBQztFQUVoRyxNQUFNSyxRQUFRLEdBQUcsSUFBSTVCLElBQUksQ0FBRTtJQUN6QjZCLE9BQU8sRUFBRSxDQUFDO0lBQ1ZDLFFBQVEsRUFBRSxDQUFFVCxnQkFBZ0IsRUFBRUksVUFBVSxFQUFFRSxnQkFBZ0I7RUFDNUQsQ0FBRSxDQUFDO0VBRUgsT0FBTyxJQUFJL0IsVUFBVSxDQUFFZ0MsUUFBUSxFQUFFO0lBQy9CRyxzQkFBc0IsRUFBRSxJQUFJO0lBQzVCQyxJQUFJLEVBQUU5QixzQkFBc0IsQ0FBQ1c7RUFDL0IsQ0FBRSxDQUFDO0FBQ0w7QUFFQXJCLGdCQUFnQixDQUFDeUMsUUFBUSxDQUFFLGtCQUFrQixFQUFFNUIsZ0JBQWlCLENBQUMifQ==