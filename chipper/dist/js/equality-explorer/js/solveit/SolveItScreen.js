// Copyright 2018-2022, University of Colorado Boulder

/**
 * The 'Solve It!' screen.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import Property from '../../../axon/js/Property.js';
import Screen from '../../../joist/js/Screen.js';
import optionize from '../../../phet-core/js/optionize.js';
import equalityExplorer from '../equalityExplorer.js';
import EqualityExplorerStrings from '../EqualityExplorerStrings.js';
import SolveItModel from './model/SolveItModel.js';
import SolveItScreenView from './view/SolveItScreenView.js';
import ScreenIcon from '../../../joist/js/ScreenIcon.js';
import MathSymbols from '../../../scenery-phet/js/MathSymbols.js';
import PhetFont from '../../../scenery-phet/js/PhetFont.js';
import StarNode from '../../../scenery-phet/js/StarNode.js';
import { HBox, Image, Text } from '../../../scenery/js/imports.js';
import phetGirlJugglingStars_png from '../../../vegas/images/phetGirlJugglingStars_png.js';
import EqualityExplorerColors from '../common/EqualityExplorerColors.js';
export default class SolveItScreen extends Screen {
  constructor(providedOptions) {
    const options = optionize()({
      // ScreenOptions
      name: EqualityExplorerStrings.screen.solveItStringProperty,
      backgroundColorProperty: new Property(EqualityExplorerColors.SOLVE_IT_SCREEN_BACKGROUND),
      homeScreenIcon: createHomeScreenIcon(),
      navigationBarIcon: createNavigationBarIcon()
    }, providedOptions);
    super(() => new SolveItModel(options.tandem.createTandem('model')), model => new SolveItScreenView(model, options.tandem.createTandem('view')), options);
  }
  dispose() {
    assert && assert(false, 'dispose is not supported, exists for the lifetime of the sim');
    super.dispose();
  }
}

/**
 * Creates the home-screen icon for this screen: PhET girl juggling stars
 */
function createHomeScreenIcon() {
  const iconNode = new Image(phetGirlJugglingStars_png);
  return new ScreenIcon(iconNode, {
    fill: EqualityExplorerColors.SOLVE_IT_SCREEN_BACKGROUND
  });
}

/**
 * Creates the navigation bar icon for this screen: +1 star
 */
function createNavigationBarIcon() {
  const numberText = new Text(`${MathSymbols.UNARY_PLUS}1`, {
    font: new PhetFont(25)
  });
  const starNode = new StarNode();
  const iconNode = new HBox({
    spacing: 3,
    children: [numberText, starNode]
  });
  return new ScreenIcon(iconNode, {
    maxIconWidthProportion: 0.75,
    fill: EqualityExplorerColors.SOLVE_IT_SCREEN_BACKGROUND
  });
}
equalityExplorer.register('SolveItScreen', SolveItScreen);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQcm9wZXJ0eSIsIlNjcmVlbiIsIm9wdGlvbml6ZSIsImVxdWFsaXR5RXhwbG9yZXIiLCJFcXVhbGl0eUV4cGxvcmVyU3RyaW5ncyIsIlNvbHZlSXRNb2RlbCIsIlNvbHZlSXRTY3JlZW5WaWV3IiwiU2NyZWVuSWNvbiIsIk1hdGhTeW1ib2xzIiwiUGhldEZvbnQiLCJTdGFyTm9kZSIsIkhCb3giLCJJbWFnZSIsIlRleHQiLCJwaGV0R2lybEp1Z2dsaW5nU3RhcnNfcG5nIiwiRXF1YWxpdHlFeHBsb3JlckNvbG9ycyIsIlNvbHZlSXRTY3JlZW4iLCJjb25zdHJ1Y3RvciIsInByb3ZpZGVkT3B0aW9ucyIsIm9wdGlvbnMiLCJuYW1lIiwic2NyZWVuIiwic29sdmVJdFN0cmluZ1Byb3BlcnR5IiwiYmFja2dyb3VuZENvbG9yUHJvcGVydHkiLCJTT0xWRV9JVF9TQ1JFRU5fQkFDS0dST1VORCIsImhvbWVTY3JlZW5JY29uIiwiY3JlYXRlSG9tZVNjcmVlbkljb24iLCJuYXZpZ2F0aW9uQmFySWNvbiIsImNyZWF0ZU5hdmlnYXRpb25CYXJJY29uIiwidGFuZGVtIiwiY3JlYXRlVGFuZGVtIiwibW9kZWwiLCJkaXNwb3NlIiwiYXNzZXJ0IiwiaWNvbk5vZGUiLCJmaWxsIiwibnVtYmVyVGV4dCIsIlVOQVJZX1BMVVMiLCJmb250Iiwic3Rhck5vZGUiLCJzcGFjaW5nIiwiY2hpbGRyZW4iLCJtYXhJY29uV2lkdGhQcm9wb3J0aW9uIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJTb2x2ZUl0U2NyZWVuLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE4LTIwMjIsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIFRoZSAnU29sdmUgSXQhJyBzY3JlZW4uXHJcbiAqXHJcbiAqIEBhdXRob3IgQ2hyaXMgTWFsbGV5IChQaXhlbFpvb20sIEluYy4pXHJcbiAqL1xyXG5cclxuaW1wb3J0IFByb3BlcnR5IGZyb20gJy4uLy4uLy4uL2F4b24vanMvUHJvcGVydHkuanMnO1xyXG5pbXBvcnQgU2NyZWVuLCB7IFNjcmVlbk9wdGlvbnMgfSBmcm9tICcuLi8uLi8uLi9qb2lzdC9qcy9TY3JlZW4uanMnO1xyXG5pbXBvcnQgb3B0aW9uaXplLCB7IEVtcHR5U2VsZk9wdGlvbnMgfSBmcm9tICcuLi8uLi8uLi9waGV0LWNvcmUvanMvb3B0aW9uaXplLmpzJztcclxuaW1wb3J0IFBpY2tSZXF1aXJlZCBmcm9tICcuLi8uLi8uLi9waGV0LWNvcmUvanMvdHlwZXMvUGlja1JlcXVpcmVkLmpzJztcclxuaW1wb3J0IGVxdWFsaXR5RXhwbG9yZXIgZnJvbSAnLi4vZXF1YWxpdHlFeHBsb3Jlci5qcyc7XHJcbmltcG9ydCBFcXVhbGl0eUV4cGxvcmVyU3RyaW5ncyBmcm9tICcuLi9FcXVhbGl0eUV4cGxvcmVyU3RyaW5ncy5qcyc7XHJcbmltcG9ydCBTb2x2ZUl0TW9kZWwgZnJvbSAnLi9tb2RlbC9Tb2x2ZUl0TW9kZWwuanMnO1xyXG5pbXBvcnQgU29sdmVJdFNjcmVlblZpZXcgZnJvbSAnLi92aWV3L1NvbHZlSXRTY3JlZW5WaWV3LmpzJztcclxuaW1wb3J0IFNjcmVlbkljb24gZnJvbSAnLi4vLi4vLi4vam9pc3QvanMvU2NyZWVuSWNvbi5qcyc7XHJcbmltcG9ydCBNYXRoU3ltYm9scyBmcm9tICcuLi8uLi8uLi9zY2VuZXJ5LXBoZXQvanMvTWF0aFN5bWJvbHMuanMnO1xyXG5pbXBvcnQgUGhldEZvbnQgZnJvbSAnLi4vLi4vLi4vc2NlbmVyeS1waGV0L2pzL1BoZXRGb250LmpzJztcclxuaW1wb3J0IFN0YXJOb2RlIGZyb20gJy4uLy4uLy4uL3NjZW5lcnktcGhldC9qcy9TdGFyTm9kZS5qcyc7XHJcbmltcG9ydCB7IEhCb3gsIEltYWdlLCBUZXh0IH0gZnJvbSAnLi4vLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IHBoZXRHaXJsSnVnZ2xpbmdTdGFyc19wbmcgZnJvbSAnLi4vLi4vLi4vdmVnYXMvaW1hZ2VzL3BoZXRHaXJsSnVnZ2xpbmdTdGFyc19wbmcuanMnO1xyXG5pbXBvcnQgRXF1YWxpdHlFeHBsb3JlckNvbG9ycyBmcm9tICcuLi9jb21tb24vRXF1YWxpdHlFeHBsb3JlckNvbG9ycy5qcyc7XHJcblxyXG50eXBlIFNlbGZPcHRpb25zID0gRW1wdHlTZWxmT3B0aW9ucztcclxuXHJcbnR5cGUgU29sdmVJdFNjcmVlbk9wdGlvbnMgPSBTZWxmT3B0aW9ucyAmIFBpY2tSZXF1aXJlZDxTY3JlZW5PcHRpb25zLCAndGFuZGVtJz47XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTb2x2ZUl0U2NyZWVuIGV4dGVuZHMgU2NyZWVuPFNvbHZlSXRNb2RlbCwgU29sdmVJdFNjcmVlblZpZXc+IHtcclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKCBwcm92aWRlZE9wdGlvbnM6IFNvbHZlSXRTY3JlZW5PcHRpb25zICkge1xyXG5cclxuICAgIGNvbnN0IG9wdGlvbnMgPSBvcHRpb25pemU8U29sdmVJdFNjcmVlbk9wdGlvbnMsIFNlbGZPcHRpb25zLCBTY3JlZW5PcHRpb25zPigpKCB7XHJcblxyXG4gICAgICAvLyBTY3JlZW5PcHRpb25zXHJcbiAgICAgIG5hbWU6IEVxdWFsaXR5RXhwbG9yZXJTdHJpbmdzLnNjcmVlbi5zb2x2ZUl0U3RyaW5nUHJvcGVydHksXHJcbiAgICAgIGJhY2tncm91bmRDb2xvclByb3BlcnR5OiBuZXcgUHJvcGVydHkoIEVxdWFsaXR5RXhwbG9yZXJDb2xvcnMuU09MVkVfSVRfU0NSRUVOX0JBQ0tHUk9VTkQgKSxcclxuICAgICAgaG9tZVNjcmVlbkljb246IGNyZWF0ZUhvbWVTY3JlZW5JY29uKCksXHJcbiAgICAgIG5hdmlnYXRpb25CYXJJY29uOiBjcmVhdGVOYXZpZ2F0aW9uQmFySWNvbigpXHJcbiAgICB9LCBwcm92aWRlZE9wdGlvbnMgKTtcclxuXHJcbiAgICBzdXBlcihcclxuICAgICAgKCkgPT4gbmV3IFNvbHZlSXRNb2RlbCggb3B0aW9ucy50YW5kZW0uY3JlYXRlVGFuZGVtKCAnbW9kZWwnICkgKSxcclxuICAgICAgbW9kZWwgPT4gbmV3IFNvbHZlSXRTY3JlZW5WaWV3KCBtb2RlbCwgb3B0aW9ucy50YW5kZW0uY3JlYXRlVGFuZGVtKCAndmlldycgKSApLFxyXG4gICAgICBvcHRpb25zXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIG92ZXJyaWRlIGRpc3Bvc2UoKTogdm9pZCB7XHJcbiAgICBhc3NlcnQgJiYgYXNzZXJ0KCBmYWxzZSwgJ2Rpc3Bvc2UgaXMgbm90IHN1cHBvcnRlZCwgZXhpc3RzIGZvciB0aGUgbGlmZXRpbWUgb2YgdGhlIHNpbScgKTtcclxuICAgIHN1cGVyLmRpc3Bvc2UoKTtcclxuICB9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDcmVhdGVzIHRoZSBob21lLXNjcmVlbiBpY29uIGZvciB0aGlzIHNjcmVlbjogUGhFVCBnaXJsIGp1Z2dsaW5nIHN0YXJzXHJcbiAqL1xyXG5mdW5jdGlvbiBjcmVhdGVIb21lU2NyZWVuSWNvbigpOiBTY3JlZW5JY29uIHtcclxuICBjb25zdCBpY29uTm9kZSA9IG5ldyBJbWFnZSggcGhldEdpcmxKdWdnbGluZ1N0YXJzX3BuZyApO1xyXG4gIHJldHVybiBuZXcgU2NyZWVuSWNvbiggaWNvbk5vZGUsIHtcclxuICAgIGZpbGw6IEVxdWFsaXR5RXhwbG9yZXJDb2xvcnMuU09MVkVfSVRfU0NSRUVOX0JBQ0tHUk9VTkRcclxuICB9ICk7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDcmVhdGVzIHRoZSBuYXZpZ2F0aW9uIGJhciBpY29uIGZvciB0aGlzIHNjcmVlbjogKzEgc3RhclxyXG4gKi9cclxuZnVuY3Rpb24gY3JlYXRlTmF2aWdhdGlvbkJhckljb24oKTogU2NyZWVuSWNvbiB7XHJcblxyXG4gIGNvbnN0IG51bWJlclRleHQgPSBuZXcgVGV4dCggYCR7TWF0aFN5bWJvbHMuVU5BUllfUExVU30xYCwgeyBmb250OiBuZXcgUGhldEZvbnQoIDI1ICkgfSApO1xyXG4gIGNvbnN0IHN0YXJOb2RlID0gbmV3IFN0YXJOb2RlKCk7XHJcblxyXG4gIGNvbnN0IGljb25Ob2RlID0gbmV3IEhCb3goIHtcclxuICAgIHNwYWNpbmc6IDMsXHJcbiAgICBjaGlsZHJlbjogWyBudW1iZXJUZXh0LCBzdGFyTm9kZSBdXHJcbiAgfSApO1xyXG5cclxuICByZXR1cm4gbmV3IFNjcmVlbkljb24oIGljb25Ob2RlLCB7XHJcbiAgICBtYXhJY29uV2lkdGhQcm9wb3J0aW9uOiAwLjc1LFxyXG4gICAgZmlsbDogRXF1YWxpdHlFeHBsb3JlckNvbG9ycy5TT0xWRV9JVF9TQ1JFRU5fQkFDS0dST1VORFxyXG4gIH0gKTtcclxufVxyXG5cclxuZXF1YWxpdHlFeHBsb3Jlci5yZWdpc3RlciggJ1NvbHZlSXRTY3JlZW4nLCBTb2x2ZUl0U2NyZWVuICk7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLFFBQVEsTUFBTSw4QkFBOEI7QUFDbkQsT0FBT0MsTUFBTSxNQUF5Qiw2QkFBNkI7QUFDbkUsT0FBT0MsU0FBUyxNQUE0QixvQ0FBb0M7QUFFaEYsT0FBT0MsZ0JBQWdCLE1BQU0sd0JBQXdCO0FBQ3JELE9BQU9DLHVCQUF1QixNQUFNLCtCQUErQjtBQUNuRSxPQUFPQyxZQUFZLE1BQU0seUJBQXlCO0FBQ2xELE9BQU9DLGlCQUFpQixNQUFNLDZCQUE2QjtBQUMzRCxPQUFPQyxVQUFVLE1BQU0saUNBQWlDO0FBQ3hELE9BQU9DLFdBQVcsTUFBTSx5Q0FBeUM7QUFDakUsT0FBT0MsUUFBUSxNQUFNLHNDQUFzQztBQUMzRCxPQUFPQyxRQUFRLE1BQU0sc0NBQXNDO0FBQzNELFNBQVNDLElBQUksRUFBRUMsS0FBSyxFQUFFQyxJQUFJLFFBQVEsZ0NBQWdDO0FBQ2xFLE9BQU9DLHlCQUF5QixNQUFNLG9EQUFvRDtBQUMxRixPQUFPQyxzQkFBc0IsTUFBTSxxQ0FBcUM7QUFNeEUsZUFBZSxNQUFNQyxhQUFhLFNBQVNmLE1BQU0sQ0FBa0M7RUFFMUVnQixXQUFXQSxDQUFFQyxlQUFxQyxFQUFHO0lBRTFELE1BQU1DLE9BQU8sR0FBR2pCLFNBQVMsQ0FBbUQsQ0FBQyxDQUFFO01BRTdFO01BQ0FrQixJQUFJLEVBQUVoQix1QkFBdUIsQ0FBQ2lCLE1BQU0sQ0FBQ0MscUJBQXFCO01BQzFEQyx1QkFBdUIsRUFBRSxJQUFJdkIsUUFBUSxDQUFFZSxzQkFBc0IsQ0FBQ1MsMEJBQTJCLENBQUM7TUFDMUZDLGNBQWMsRUFBRUMsb0JBQW9CLENBQUMsQ0FBQztNQUN0Q0MsaUJBQWlCLEVBQUVDLHVCQUF1QixDQUFDO0lBQzdDLENBQUMsRUFBRVYsZUFBZ0IsQ0FBQztJQUVwQixLQUFLLENBQ0gsTUFBTSxJQUFJYixZQUFZLENBQUVjLE9BQU8sQ0FBQ1UsTUFBTSxDQUFDQyxZQUFZLENBQUUsT0FBUSxDQUFFLENBQUMsRUFDaEVDLEtBQUssSUFBSSxJQUFJekIsaUJBQWlCLENBQUV5QixLQUFLLEVBQUVaLE9BQU8sQ0FBQ1UsTUFBTSxDQUFDQyxZQUFZLENBQUUsTUFBTyxDQUFFLENBQUMsRUFDOUVYLE9BQ0YsQ0FBQztFQUNIO0VBRWdCYSxPQUFPQSxDQUFBLEVBQVM7SUFDOUJDLE1BQU0sSUFBSUEsTUFBTSxDQUFFLEtBQUssRUFBRSw4REFBK0QsQ0FBQztJQUN6RixLQUFLLENBQUNELE9BQU8sQ0FBQyxDQUFDO0VBQ2pCO0FBQ0Y7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsU0FBU04sb0JBQW9CQSxDQUFBLEVBQWU7RUFDMUMsTUFBTVEsUUFBUSxHQUFHLElBQUl0QixLQUFLLENBQUVFLHlCQUEwQixDQUFDO0VBQ3ZELE9BQU8sSUFBSVAsVUFBVSxDQUFFMkIsUUFBUSxFQUFFO0lBQy9CQyxJQUFJLEVBQUVwQixzQkFBc0IsQ0FBQ1M7RUFDL0IsQ0FBRSxDQUFDO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsU0FBU0ksdUJBQXVCQSxDQUFBLEVBQWU7RUFFN0MsTUFBTVEsVUFBVSxHQUFHLElBQUl2QixJQUFJLENBQUcsR0FBRUwsV0FBVyxDQUFDNkIsVUFBVyxHQUFFLEVBQUU7SUFBRUMsSUFBSSxFQUFFLElBQUk3QixRQUFRLENBQUUsRUFBRztFQUFFLENBQUUsQ0FBQztFQUN6RixNQUFNOEIsUUFBUSxHQUFHLElBQUk3QixRQUFRLENBQUMsQ0FBQztFQUUvQixNQUFNd0IsUUFBUSxHQUFHLElBQUl2QixJQUFJLENBQUU7SUFDekI2QixPQUFPLEVBQUUsQ0FBQztJQUNWQyxRQUFRLEVBQUUsQ0FBRUwsVUFBVSxFQUFFRyxRQUFRO0VBQ2xDLENBQUUsQ0FBQztFQUVILE9BQU8sSUFBSWhDLFVBQVUsQ0FBRTJCLFFBQVEsRUFBRTtJQUMvQlEsc0JBQXNCLEVBQUUsSUFBSTtJQUM1QlAsSUFBSSxFQUFFcEIsc0JBQXNCLENBQUNTO0VBQy9CLENBQUUsQ0FBQztBQUNMO0FBRUFyQixnQkFBZ0IsQ0FBQ3dDLFFBQVEsQ0FBRSxlQUFlLEVBQUUzQixhQUFjLENBQUMifQ==