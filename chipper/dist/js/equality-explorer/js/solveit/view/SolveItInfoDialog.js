// Copyright 2022, University of Colorado Boulder

/**
 * SolveItInfoDialog describes the game levels in the 'Solve It!' screen.
 * This is intended primarily for use by teachers, to remind them of the types of challenges for each level.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import PhetFont from '../../../../scenery-phet/js/PhetFont.js';
import { Text } from '../../../../scenery/js/imports.js';
import GameInfoDialog from '../../../../vegas/js/GameInfoDialog.js';
import EqualityExplorerQueryParameters from '../../common/EqualityExplorerQueryParameters.js';
import equalityExplorer from '../../equalityExplorer.js';
import EqualityExplorerStrings from '../../EqualityExplorerStrings.js';
export default class SolveItInfoDialog extends GameInfoDialog {
  constructor(descriptionProperties, tandem) {
    const titleText = new Text(EqualityExplorerStrings.levelsStringProperty, {
      font: new PhetFont(32),
      tandem: tandem.createTandem('titleText')
    });
    super(descriptionProperties, {
      gameLevels: EqualityExplorerQueryParameters.gameLevels,
      title: titleText,
      ySpacing: 20,
      bottomMargin: 20,
      tandem: tandem
    });
    this.disposeSolveItInfoDialog = () => {
      titleText.dispose(); // for when titleText is PhET-iO instrumented
    };
  }

  dispose() {
    this.disposeSolveItInfoDialog();
    super.dispose();
  }
}
equalityExplorer.register('SolveItInfoDialog', SolveItInfoDialog);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQaGV0Rm9udCIsIlRleHQiLCJHYW1lSW5mb0RpYWxvZyIsIkVxdWFsaXR5RXhwbG9yZXJRdWVyeVBhcmFtZXRlcnMiLCJlcXVhbGl0eUV4cGxvcmVyIiwiRXF1YWxpdHlFeHBsb3JlclN0cmluZ3MiLCJTb2x2ZUl0SW5mb0RpYWxvZyIsImNvbnN0cnVjdG9yIiwiZGVzY3JpcHRpb25Qcm9wZXJ0aWVzIiwidGFuZGVtIiwidGl0bGVUZXh0IiwibGV2ZWxzU3RyaW5nUHJvcGVydHkiLCJmb250IiwiY3JlYXRlVGFuZGVtIiwiZ2FtZUxldmVscyIsInRpdGxlIiwieVNwYWNpbmciLCJib3R0b21NYXJnaW4iLCJkaXNwb3NlU29sdmVJdEluZm9EaWFsb2ciLCJkaXNwb3NlIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJTb2x2ZUl0SW5mb0RpYWxvZy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogU29sdmVJdEluZm9EaWFsb2cgZGVzY3JpYmVzIHRoZSBnYW1lIGxldmVscyBpbiB0aGUgJ1NvbHZlIEl0IScgc2NyZWVuLlxyXG4gKiBUaGlzIGlzIGludGVuZGVkIHByaW1hcmlseSBmb3IgdXNlIGJ5IHRlYWNoZXJzLCB0byByZW1pbmQgdGhlbSBvZiB0aGUgdHlwZXMgb2YgY2hhbGxlbmdlcyBmb3IgZWFjaCBsZXZlbC5cclxuICpcclxuICogQGF1dGhvciBDaHJpcyBNYWxsZXkgKFBpeGVsWm9vbSwgSW5jLilcclxuICovXHJcblxyXG5pbXBvcnQgVFJlYWRPbmx5UHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vLi4vYXhvbi9qcy9UUmVhZE9ubHlQcm9wZXJ0eS5qcyc7XHJcbmltcG9ydCBQaGV0Rm9udCBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5LXBoZXQvanMvUGhldEZvbnQuanMnO1xyXG5pbXBvcnQgeyBUZXh0IH0gZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcclxuaW1wb3J0IFRhbmRlbSBmcm9tICcuLi8uLi8uLi8uLi90YW5kZW0vanMvVGFuZGVtLmpzJztcclxuaW1wb3J0IEdhbWVJbmZvRGlhbG9nIGZyb20gJy4uLy4uLy4uLy4uL3ZlZ2FzL2pzL0dhbWVJbmZvRGlhbG9nLmpzJztcclxuaW1wb3J0IEVxdWFsaXR5RXhwbG9yZXJRdWVyeVBhcmFtZXRlcnMgZnJvbSAnLi4vLi4vY29tbW9uL0VxdWFsaXR5RXhwbG9yZXJRdWVyeVBhcmFtZXRlcnMuanMnO1xyXG5pbXBvcnQgZXF1YWxpdHlFeHBsb3JlciBmcm9tICcuLi8uLi9lcXVhbGl0eUV4cGxvcmVyLmpzJztcclxuaW1wb3J0IEVxdWFsaXR5RXhwbG9yZXJTdHJpbmdzIGZyb20gJy4uLy4uL0VxdWFsaXR5RXhwbG9yZXJTdHJpbmdzLmpzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNvbHZlSXRJbmZvRGlhbG9nIGV4dGVuZHMgR2FtZUluZm9EaWFsb2cge1xyXG5cclxuICBwcml2YXRlIHJlYWRvbmx5IGRpc3Bvc2VTb2x2ZUl0SW5mb0RpYWxvZzogKCkgPT4gdm9pZDtcclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKCBkZXNjcmlwdGlvblByb3BlcnRpZXM6IFRSZWFkT25seVByb3BlcnR5PHN0cmluZz5bXSwgdGFuZGVtOiBUYW5kZW0gKSB7XHJcblxyXG4gICAgY29uc3QgdGl0bGVUZXh0ID0gbmV3IFRleHQoIEVxdWFsaXR5RXhwbG9yZXJTdHJpbmdzLmxldmVsc1N0cmluZ1Byb3BlcnR5LCB7XHJcbiAgICAgIGZvbnQ6IG5ldyBQaGV0Rm9udCggMzIgKSxcclxuICAgICAgdGFuZGVtOiB0YW5kZW0uY3JlYXRlVGFuZGVtKCAndGl0bGVUZXh0JyApXHJcbiAgICB9ICk7XHJcblxyXG4gICAgc3VwZXIoIGRlc2NyaXB0aW9uUHJvcGVydGllcywge1xyXG4gICAgICBnYW1lTGV2ZWxzOiBFcXVhbGl0eUV4cGxvcmVyUXVlcnlQYXJhbWV0ZXJzLmdhbWVMZXZlbHMsXHJcbiAgICAgIHRpdGxlOiB0aXRsZVRleHQsXHJcbiAgICAgIHlTcGFjaW5nOiAyMCxcclxuICAgICAgYm90dG9tTWFyZ2luOiAyMCxcclxuICAgICAgdGFuZGVtOiB0YW5kZW1cclxuICAgIH0gKTtcclxuXHJcbiAgICB0aGlzLmRpc3Bvc2VTb2x2ZUl0SW5mb0RpYWxvZyA9ICgpID0+IHtcclxuICAgICAgdGl0bGVUZXh0LmRpc3Bvc2UoKTsgLy8gZm9yIHdoZW4gdGl0bGVUZXh0IGlzIFBoRVQtaU8gaW5zdHJ1bWVudGVkXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgcHVibGljIG92ZXJyaWRlIGRpc3Bvc2UoKTogdm9pZCB7XHJcbiAgICB0aGlzLmRpc3Bvc2VTb2x2ZUl0SW5mb0RpYWxvZygpO1xyXG4gICAgc3VwZXIuZGlzcG9zZSgpO1xyXG4gIH1cclxufVxyXG5cclxuZXF1YWxpdHlFeHBsb3Jlci5yZWdpc3RlciggJ1NvbHZlSXRJbmZvRGlhbG9nJywgU29sdmVJdEluZm9EaWFsb2cgKTsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFHQSxPQUFPQSxRQUFRLE1BQU0seUNBQXlDO0FBQzlELFNBQVNDLElBQUksUUFBUSxtQ0FBbUM7QUFFeEQsT0FBT0MsY0FBYyxNQUFNLHdDQUF3QztBQUNuRSxPQUFPQywrQkFBK0IsTUFBTSxpREFBaUQ7QUFDN0YsT0FBT0MsZ0JBQWdCLE1BQU0sMkJBQTJCO0FBQ3hELE9BQU9DLHVCQUF1QixNQUFNLGtDQUFrQztBQUV0RSxlQUFlLE1BQU1DLGlCQUFpQixTQUFTSixjQUFjLENBQUM7RUFJckRLLFdBQVdBLENBQUVDLHFCQUFrRCxFQUFFQyxNQUFjLEVBQUc7SUFFdkYsTUFBTUMsU0FBUyxHQUFHLElBQUlULElBQUksQ0FBRUksdUJBQXVCLENBQUNNLG9CQUFvQixFQUFFO01BQ3hFQyxJQUFJLEVBQUUsSUFBSVosUUFBUSxDQUFFLEVBQUcsQ0FBQztNQUN4QlMsTUFBTSxFQUFFQSxNQUFNLENBQUNJLFlBQVksQ0FBRSxXQUFZO0lBQzNDLENBQUUsQ0FBQztJQUVILEtBQUssQ0FBRUwscUJBQXFCLEVBQUU7TUFDNUJNLFVBQVUsRUFBRVgsK0JBQStCLENBQUNXLFVBQVU7TUFDdERDLEtBQUssRUFBRUwsU0FBUztNQUNoQk0sUUFBUSxFQUFFLEVBQUU7TUFDWkMsWUFBWSxFQUFFLEVBQUU7TUFDaEJSLE1BQU0sRUFBRUE7SUFDVixDQUFFLENBQUM7SUFFSCxJQUFJLENBQUNTLHdCQUF3QixHQUFHLE1BQU07TUFDcENSLFNBQVMsQ0FBQ1MsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3ZCLENBQUM7RUFDSDs7RUFFZ0JBLE9BQU9BLENBQUEsRUFBUztJQUM5QixJQUFJLENBQUNELHdCQUF3QixDQUFDLENBQUM7SUFDL0IsS0FBSyxDQUFDQyxPQUFPLENBQUMsQ0FBQztFQUNqQjtBQUNGO0FBRUFmLGdCQUFnQixDQUFDZ0IsUUFBUSxDQUFFLG1CQUFtQixFQUFFZCxpQkFBa0IsQ0FBQyJ9