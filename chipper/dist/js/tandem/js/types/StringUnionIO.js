// Copyright 2022, University of Colorado Boulder

/**
 *
 * @author Michael Kauzmann (PhET Interactive Simulations)
 * @author Sam Reid (PhET Interactive Simulations)
 */

import tandemNamespace from '../tandemNamespace.js';
import IOType from './IOType.js';
import StateSchema from './StateSchema.js';

// Cache each parameterized IOType so that it is only created once
const cache = new Map();
const StringUnionIO = unionValues => {
  assert && assert(unionValues, 'StringUnionIO needs unionValues');
  if (!cache.has(unionValues)) {
    const typeName = unionValues.join(',');
    cache.set(unionValues, new IOType(`StringUnionIO<${typeName}>`, {
      documentation: 'An IOType validating on specific string values.',
      isValidValue: instance => unionValues.includes(instance),
      // serializing strings here
      toStateObject: _.identity,
      fromStateObject: _.identity,
      stateSchema: StateSchema.asValue(`StringUnionIO<${typeName}>`, {
        isValidValue: value => unionValues.includes(value)
      })
    }));
  }
  return cache.get(unionValues);
};
tandemNamespace.register('StringUnionIO', StringUnionIO);
export default StringUnionIO;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJ0YW5kZW1OYW1lc3BhY2UiLCJJT1R5cGUiLCJTdGF0ZVNjaGVtYSIsImNhY2hlIiwiTWFwIiwiU3RyaW5nVW5pb25JTyIsInVuaW9uVmFsdWVzIiwiYXNzZXJ0IiwiaGFzIiwidHlwZU5hbWUiLCJqb2luIiwic2V0IiwiZG9jdW1lbnRhdGlvbiIsImlzVmFsaWRWYWx1ZSIsImluc3RhbmNlIiwiaW5jbHVkZXMiLCJ0b1N0YXRlT2JqZWN0IiwiXyIsImlkZW50aXR5IiwiZnJvbVN0YXRlT2JqZWN0Iiwic3RhdGVTY2hlbWEiLCJhc1ZhbHVlIiwidmFsdWUiLCJnZXQiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIlN0cmluZ1VuaW9uSU8udHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjIsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqXHJcbiAqIEBhdXRob3IgTWljaGFlbCBLYXV6bWFubiAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcclxuICogQGF1dGhvciBTYW0gUmVpZCAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcclxuICovXHJcblxyXG5pbXBvcnQgdGFuZGVtTmFtZXNwYWNlIGZyb20gJy4uL3RhbmRlbU5hbWVzcGFjZS5qcyc7XHJcbmltcG9ydCBJT1R5cGUgZnJvbSAnLi9JT1R5cGUuanMnO1xyXG5pbXBvcnQgU3RhdGVTY2hlbWEgZnJvbSAnLi9TdGF0ZVNjaGVtYS5qcyc7XHJcblxyXG4vLyBDYWNoZSBlYWNoIHBhcmFtZXRlcml6ZWQgSU9UeXBlIHNvIHRoYXQgaXQgaXMgb25seSBjcmVhdGVkIG9uY2VcclxuY29uc3QgY2FjaGUgPSBuZXcgTWFwPHJlYWRvbmx5IHN0cmluZ1tdLCBJT1R5cGU+KCk7XHJcblxyXG5jb25zdCBTdHJpbmdVbmlvbklPID0gPFBhcmFtZXRlclR5cGUgZXh0ZW5kcyByZWFkb25seSBzdHJpbmdbXT4oIHVuaW9uVmFsdWVzOiBQYXJhbWV0ZXJUeXBlICk6IElPVHlwZTxQYXJhbWV0ZXJUeXBlLCBzdHJpbmc+ID0+IHtcclxuXHJcbiAgYXNzZXJ0ICYmIGFzc2VydCggdW5pb25WYWx1ZXMsICdTdHJpbmdVbmlvbklPIG5lZWRzIHVuaW9uVmFsdWVzJyApO1xyXG5cclxuICBpZiAoICFjYWNoZS5oYXMoIHVuaW9uVmFsdWVzICkgKSB7XHJcbiAgICBjb25zdCB0eXBlTmFtZSA9IHVuaW9uVmFsdWVzLmpvaW4oICcsJyApO1xyXG4gICAgY2FjaGUuc2V0KCB1bmlvblZhbHVlcywgbmV3IElPVHlwZTxzdHJpbmcsIHN0cmluZz4oIGBTdHJpbmdVbmlvbklPPCR7dHlwZU5hbWV9PmAsIHtcclxuICAgICAgZG9jdW1lbnRhdGlvbjogJ0FuIElPVHlwZSB2YWxpZGF0aW5nIG9uIHNwZWNpZmljIHN0cmluZyB2YWx1ZXMuJyxcclxuICAgICAgaXNWYWxpZFZhbHVlOiBpbnN0YW5jZSA9PiB1bmlvblZhbHVlcy5pbmNsdWRlcyggaW5zdGFuY2UgKSxcclxuXHJcbiAgICAgIC8vIHNlcmlhbGl6aW5nIHN0cmluZ3MgaGVyZVxyXG4gICAgICB0b1N0YXRlT2JqZWN0OiBfLmlkZW50aXR5LFxyXG4gICAgICBmcm9tU3RhdGVPYmplY3Q6IF8uaWRlbnRpdHksXHJcblxyXG4gICAgICBzdGF0ZVNjaGVtYTogU3RhdGVTY2hlbWEuYXNWYWx1ZSggYFN0cmluZ1VuaW9uSU88JHt0eXBlTmFtZX0+YCwge1xyXG4gICAgICAgICAgaXNWYWxpZFZhbHVlOiB2YWx1ZSA9PiB1bmlvblZhbHVlcy5pbmNsdWRlcyggdmFsdWUgKVxyXG4gICAgICAgIH1cclxuICAgICAgKVxyXG4gICAgfSApICk7XHJcbiAgfVxyXG5cclxuICByZXR1cm4gY2FjaGUuZ2V0KCB1bmlvblZhbHVlcyApITtcclxufTtcclxuXHJcbnRhbmRlbU5hbWVzcGFjZS5yZWdpc3RlciggJ1N0cmluZ1VuaW9uSU8nLCBTdHJpbmdVbmlvbklPICk7XHJcbmV4cG9ydCBkZWZhdWx0IFN0cmluZ1VuaW9uSU87Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLGVBQWUsTUFBTSx1QkFBdUI7QUFDbkQsT0FBT0MsTUFBTSxNQUFNLGFBQWE7QUFDaEMsT0FBT0MsV0FBVyxNQUFNLGtCQUFrQjs7QUFFMUM7QUFDQSxNQUFNQyxLQUFLLEdBQUcsSUFBSUMsR0FBRyxDQUE0QixDQUFDO0FBRWxELE1BQU1DLGFBQWEsR0FBOENDLFdBQTBCLElBQXFDO0VBRTlIQyxNQUFNLElBQUlBLE1BQU0sQ0FBRUQsV0FBVyxFQUFFLGlDQUFrQyxDQUFDO0VBRWxFLElBQUssQ0FBQ0gsS0FBSyxDQUFDSyxHQUFHLENBQUVGLFdBQVksQ0FBQyxFQUFHO0lBQy9CLE1BQU1HLFFBQVEsR0FBR0gsV0FBVyxDQUFDSSxJQUFJLENBQUUsR0FBSSxDQUFDO0lBQ3hDUCxLQUFLLENBQUNRLEdBQUcsQ0FBRUwsV0FBVyxFQUFFLElBQUlMLE1BQU0sQ0FBbUIsaUJBQWdCUSxRQUFTLEdBQUUsRUFBRTtNQUNoRkcsYUFBYSxFQUFFLGlEQUFpRDtNQUNoRUMsWUFBWSxFQUFFQyxRQUFRLElBQUlSLFdBQVcsQ0FBQ1MsUUFBUSxDQUFFRCxRQUFTLENBQUM7TUFFMUQ7TUFDQUUsYUFBYSxFQUFFQyxDQUFDLENBQUNDLFFBQVE7TUFDekJDLGVBQWUsRUFBRUYsQ0FBQyxDQUFDQyxRQUFRO01BRTNCRSxXQUFXLEVBQUVsQixXQUFXLENBQUNtQixPQUFPLENBQUcsaUJBQWdCWixRQUFTLEdBQUUsRUFBRTtRQUM1REksWUFBWSxFQUFFUyxLQUFLLElBQUloQixXQUFXLENBQUNTLFFBQVEsQ0FBRU8sS0FBTTtNQUNyRCxDQUNGO0lBQ0YsQ0FBRSxDQUFFLENBQUM7RUFDUDtFQUVBLE9BQU9uQixLQUFLLENBQUNvQixHQUFHLENBQUVqQixXQUFZLENBQUM7QUFDakMsQ0FBQztBQUVETixlQUFlLENBQUN3QixRQUFRLENBQUUsZUFBZSxFQUFFbkIsYUFBYyxDQUFDO0FBQzFELGVBQWVBLGFBQWEifQ==