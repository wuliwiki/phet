// Copyright 2021-2022, University of Colorado Boulder

/**
 * Unit tests for InfiniteNumberIO
 *
 * @author Michael Kauzmann (PhET Interactive Simulations)
 */

import InfiniteNumberIO from './InfiniteNumberIO.js';
QUnit.module('InfiniteNumberIO');
QUnit.test('serialization', assert => {
  assert.ok(InfiniteNumberIO.toStateObject(5) === 5, 'simple case');
  assert.ok(InfiniteNumberIO.toStateObject(Number.POSITIVE_INFINITY) === 'POSITIVE_INFINITY', 'serialization positive infinity');
  assert.ok(InfiniteNumberIO.toStateObject(Number.NEGATIVE_INFINITY) === 'NEGATIVE_INFINITY', 'serialization negative infinity');
  assert.ok(InfiniteNumberIO.fromStateObject(InfiniteNumberIO.toStateObject(Number.POSITIVE_INFINITY)) === Number.POSITIVE_INFINITY, 'deserialization positive infinity');
  assert.ok(InfiniteNumberIO.fromStateObject(InfiniteNumberIO.toStateObject(Number.NEGATIVE_INFINITY)) === Number.NEGATIVE_INFINITY, 'deserialization negative infinity');
  window.assert && assert.throws(() => {
    // @ts-expect-error INTENTIONAL for testing
    InfiniteNumberIO.toStateObject(4 * 'oh hello');
  });
  window.assert && assert.throws(() => {
    // @ts-expect-error INTENTIONAL for testing
    InfiniteNumberIO.toStateObject('oh hello');
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJJbmZpbml0ZU51bWJlcklPIiwiUVVuaXQiLCJtb2R1bGUiLCJ0ZXN0IiwiYXNzZXJ0Iiwib2siLCJ0b1N0YXRlT2JqZWN0IiwiTnVtYmVyIiwiUE9TSVRJVkVfSU5GSU5JVFkiLCJORUdBVElWRV9JTkZJTklUWSIsImZyb21TdGF0ZU9iamVjdCIsIndpbmRvdyIsInRocm93cyJdLCJzb3VyY2VzIjpbIkluZmluaXRlTnVtYmVySU9UZXN0cy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDIyLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcclxuXHJcbi8qKlxyXG4gKiBVbml0IHRlc3RzIGZvciBJbmZpbml0ZU51bWJlcklPXHJcbiAqXHJcbiAqIEBhdXRob3IgTWljaGFlbCBLYXV6bWFubiAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcclxuICovXHJcblxyXG5pbXBvcnQgSW5maW5pdGVOdW1iZXJJTyBmcm9tICcuL0luZmluaXRlTnVtYmVySU8uanMnO1xyXG5cclxuUVVuaXQubW9kdWxlKCAnSW5maW5pdGVOdW1iZXJJTycgKTtcclxuXHJcblFVbml0LnRlc3QoICdzZXJpYWxpemF0aW9uJywgYXNzZXJ0ID0+IHtcclxuXHJcbiAgYXNzZXJ0Lm9rKCBJbmZpbml0ZU51bWJlcklPLnRvU3RhdGVPYmplY3QoIDUgKSA9PT0gNSwgJ3NpbXBsZSBjYXNlJyApO1xyXG5cclxuICBhc3NlcnQub2soIEluZmluaXRlTnVtYmVySU8udG9TdGF0ZU9iamVjdCggTnVtYmVyLlBPU0lUSVZFX0lORklOSVRZICkgPT09ICdQT1NJVElWRV9JTkZJTklUWScsICdzZXJpYWxpemF0aW9uIHBvc2l0aXZlIGluZmluaXR5JyApO1xyXG4gIGFzc2VydC5vayggSW5maW5pdGVOdW1iZXJJTy50b1N0YXRlT2JqZWN0KCBOdW1iZXIuTkVHQVRJVkVfSU5GSU5JVFkgKSA9PT0gJ05FR0FUSVZFX0lORklOSVRZJywgJ3NlcmlhbGl6YXRpb24gbmVnYXRpdmUgaW5maW5pdHknICk7XHJcblxyXG4gIGFzc2VydC5vayggSW5maW5pdGVOdW1iZXJJTy5mcm9tU3RhdGVPYmplY3QoIEluZmluaXRlTnVtYmVySU8udG9TdGF0ZU9iamVjdCggTnVtYmVyLlBPU0lUSVZFX0lORklOSVRZICkgKSA9PT0gTnVtYmVyLlBPU0lUSVZFX0lORklOSVRZLCAnZGVzZXJpYWxpemF0aW9uIHBvc2l0aXZlIGluZmluaXR5JyApO1xyXG4gIGFzc2VydC5vayggSW5maW5pdGVOdW1iZXJJTy5mcm9tU3RhdGVPYmplY3QoIEluZmluaXRlTnVtYmVySU8udG9TdGF0ZU9iamVjdCggTnVtYmVyLk5FR0FUSVZFX0lORklOSVRZICkgKSA9PT0gTnVtYmVyLk5FR0FUSVZFX0lORklOSVRZLCAnZGVzZXJpYWxpemF0aW9uIG5lZ2F0aXZlIGluZmluaXR5JyApO1xyXG5cclxuICB3aW5kb3cuYXNzZXJ0ICYmIGFzc2VydC50aHJvd3MoICgpID0+IHtcclxuXHJcbiAgICAvLyBAdHMtZXhwZWN0LWVycm9yIElOVEVOVElPTkFMIGZvciB0ZXN0aW5nXHJcbiAgICBJbmZpbml0ZU51bWJlcklPLnRvU3RhdGVPYmplY3QoIDQgKiAnb2ggaGVsbG8nICk7XHJcbiAgfSApO1xyXG4gIHdpbmRvdy5hc3NlcnQgJiYgYXNzZXJ0LnRocm93cyggKCkgPT4ge1xyXG5cclxuICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgSU5URU5USU9OQUwgZm9yIHRlc3RpbmdcclxuICAgIEluZmluaXRlTnVtYmVySU8udG9TdGF0ZU9iamVjdCggJ29oIGhlbGxvJyApO1xyXG4gIH0gKTtcclxufSApO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsZ0JBQWdCLE1BQU0sdUJBQXVCO0FBRXBEQyxLQUFLLENBQUNDLE1BQU0sQ0FBRSxrQkFBbUIsQ0FBQztBQUVsQ0QsS0FBSyxDQUFDRSxJQUFJLENBQUUsZUFBZSxFQUFFQyxNQUFNLElBQUk7RUFFckNBLE1BQU0sQ0FBQ0MsRUFBRSxDQUFFTCxnQkFBZ0IsQ0FBQ00sYUFBYSxDQUFFLENBQUUsQ0FBQyxLQUFLLENBQUMsRUFBRSxhQUFjLENBQUM7RUFFckVGLE1BQU0sQ0FBQ0MsRUFBRSxDQUFFTCxnQkFBZ0IsQ0FBQ00sYUFBYSxDQUFFQyxNQUFNLENBQUNDLGlCQUFrQixDQUFDLEtBQUssbUJBQW1CLEVBQUUsaUNBQWtDLENBQUM7RUFDbElKLE1BQU0sQ0FBQ0MsRUFBRSxDQUFFTCxnQkFBZ0IsQ0FBQ00sYUFBYSxDQUFFQyxNQUFNLENBQUNFLGlCQUFrQixDQUFDLEtBQUssbUJBQW1CLEVBQUUsaUNBQWtDLENBQUM7RUFFbElMLE1BQU0sQ0FBQ0MsRUFBRSxDQUFFTCxnQkFBZ0IsQ0FBQ1UsZUFBZSxDQUFFVixnQkFBZ0IsQ0FBQ00sYUFBYSxDQUFFQyxNQUFNLENBQUNDLGlCQUFrQixDQUFFLENBQUMsS0FBS0QsTUFBTSxDQUFDQyxpQkFBaUIsRUFBRSxtQ0FBb0MsQ0FBQztFQUM3S0osTUFBTSxDQUFDQyxFQUFFLENBQUVMLGdCQUFnQixDQUFDVSxlQUFlLENBQUVWLGdCQUFnQixDQUFDTSxhQUFhLENBQUVDLE1BQU0sQ0FBQ0UsaUJBQWtCLENBQUUsQ0FBQyxLQUFLRixNQUFNLENBQUNFLGlCQUFpQixFQUFFLG1DQUFvQyxDQUFDO0VBRTdLRSxNQUFNLENBQUNQLE1BQU0sSUFBSUEsTUFBTSxDQUFDUSxNQUFNLENBQUUsTUFBTTtJQUVwQztJQUNBWixnQkFBZ0IsQ0FBQ00sYUFBYSxDQUFFLENBQUMsR0FBRyxVQUFXLENBQUM7RUFDbEQsQ0FBRSxDQUFDO0VBQ0hLLE1BQU0sQ0FBQ1AsTUFBTSxJQUFJQSxNQUFNLENBQUNRLE1BQU0sQ0FBRSxNQUFNO0lBRXBDO0lBQ0FaLGdCQUFnQixDQUFDTSxhQUFhLENBQUUsVUFBVyxDQUFDO0VBQzlDLENBQUUsQ0FBQztBQUNMLENBQUUsQ0FBQyJ9