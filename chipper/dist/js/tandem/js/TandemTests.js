// Copyright 2020-2022, University of Colorado Boulder

/**
 * Unit tests for PhetioObject
 *
 * @author Michael Kauzmann (PhET Interactive Simulations)
 */

import NumberProperty from '../../axon/js/NumberProperty.js';
import Tandem from './Tandem.js';
QUnit.module('Tandem');
QUnit.test('Tandem validation on ROOT', assert => {
  let property = new NumberProperty(0, {
    tandem: Tandem.ROOT_TEST.createTandem('aProperty')
  });
  assert.ok(property.isPhetioInstrumented(), 'should be instrumented');
  property = new NumberProperty(0, {
    tandem: Tandem.ROOT_TEST.createTandem('bProperty')
  });
  assert.ok(property.isPhetioInstrumented(), 'should be instrumented');
  property = new NumberProperty(0, {
    tandem: Tandem.ROOT_TEST.createTandem('cProperty')
  });
  assert.ok(property.isPhetioInstrumented(), 'should be instrumented');

  // Only specific tandems allowed on root when validating tandems
  window.assert && Tandem.VALIDATION && assert.throws(() => {
    property = new NumberProperty(0, {
      tandem: Tandem.ROOT.createTandem('aProperty') // Should fail because aProperty is not allowed on ROOT Tandem
    });
  });
});

QUnit.test('Tandem excluded', assert => {
  assert.ok(true, 'hello beautiful world.');
  Tandem.ROOT_TEST.createTandem('anythingAllowedHere');
  window.assert && Tandem.VALIDATION && assert.throws(() => {
    Tandem.ROOT_TEST.createTandem('pickableProperty');
  }, 'pickableProperty should never be instrumented');
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJOdW1iZXJQcm9wZXJ0eSIsIlRhbmRlbSIsIlFVbml0IiwibW9kdWxlIiwidGVzdCIsImFzc2VydCIsInByb3BlcnR5IiwidGFuZGVtIiwiUk9PVF9URVNUIiwiY3JlYXRlVGFuZGVtIiwib2siLCJpc1BoZXRpb0luc3RydW1lbnRlZCIsIndpbmRvdyIsIlZBTElEQVRJT04iLCJ0aHJvd3MiLCJST09UIl0sInNvdXJjZXMiOlsiVGFuZGVtVGVzdHMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjAtMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogVW5pdCB0ZXN0cyBmb3IgUGhldGlvT2JqZWN0XHJcbiAqXHJcbiAqIEBhdXRob3IgTWljaGFlbCBLYXV6bWFubiAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcclxuICovXHJcblxyXG5pbXBvcnQgTnVtYmVyUHJvcGVydHkgZnJvbSAnLi4vLi4vYXhvbi9qcy9OdW1iZXJQcm9wZXJ0eS5qcyc7XHJcbmltcG9ydCBUYW5kZW0gZnJvbSAnLi9UYW5kZW0uanMnO1xyXG5cclxuUVVuaXQubW9kdWxlKCAnVGFuZGVtJyApO1xyXG5cclxuUVVuaXQudGVzdCggJ1RhbmRlbSB2YWxpZGF0aW9uIG9uIFJPT1QnLCBhc3NlcnQgPT4ge1xyXG5cclxuICBsZXQgcHJvcGVydHkgPSBuZXcgTnVtYmVyUHJvcGVydHkoIDAsIHtcclxuICAgIHRhbmRlbTogVGFuZGVtLlJPT1RfVEVTVC5jcmVhdGVUYW5kZW0oICdhUHJvcGVydHknIClcclxuICB9ICk7XHJcbiAgYXNzZXJ0Lm9rKCBwcm9wZXJ0eS5pc1BoZXRpb0luc3RydW1lbnRlZCgpLCAnc2hvdWxkIGJlIGluc3RydW1lbnRlZCcgKTtcclxuXHJcbiAgcHJvcGVydHkgPSBuZXcgTnVtYmVyUHJvcGVydHkoIDAsIHtcclxuICAgIHRhbmRlbTogVGFuZGVtLlJPT1RfVEVTVC5jcmVhdGVUYW5kZW0oICdiUHJvcGVydHknIClcclxuICB9ICk7XHJcbiAgYXNzZXJ0Lm9rKCBwcm9wZXJ0eS5pc1BoZXRpb0luc3RydW1lbnRlZCgpLCAnc2hvdWxkIGJlIGluc3RydW1lbnRlZCcgKTtcclxuXHJcbiAgcHJvcGVydHkgPSBuZXcgTnVtYmVyUHJvcGVydHkoIDAsIHtcclxuICAgIHRhbmRlbTogVGFuZGVtLlJPT1RfVEVTVC5jcmVhdGVUYW5kZW0oICdjUHJvcGVydHknIClcclxuICB9ICk7XHJcbiAgYXNzZXJ0Lm9rKCBwcm9wZXJ0eS5pc1BoZXRpb0luc3RydW1lbnRlZCgpLCAnc2hvdWxkIGJlIGluc3RydW1lbnRlZCcgKTtcclxuXHJcbiAgLy8gT25seSBzcGVjaWZpYyB0YW5kZW1zIGFsbG93ZWQgb24gcm9vdCB3aGVuIHZhbGlkYXRpbmcgdGFuZGVtc1xyXG4gIHdpbmRvdy5hc3NlcnQgJiYgVGFuZGVtLlZBTElEQVRJT04gJiYgYXNzZXJ0LnRocm93cyggKCkgPT4ge1xyXG4gICAgcHJvcGVydHkgPSBuZXcgTnVtYmVyUHJvcGVydHkoIDAsIHtcclxuICAgICAgdGFuZGVtOiBUYW5kZW0uUk9PVC5jcmVhdGVUYW5kZW0oICdhUHJvcGVydHknICkgLy8gU2hvdWxkIGZhaWwgYmVjYXVzZSBhUHJvcGVydHkgaXMgbm90IGFsbG93ZWQgb24gUk9PVCBUYW5kZW1cclxuICAgIH0gKTtcclxuICB9ICk7XHJcbn0gKTtcclxuXHJcblFVbml0LnRlc3QoICdUYW5kZW0gZXhjbHVkZWQnLCBhc3NlcnQgPT4ge1xyXG4gIGFzc2VydC5vayggdHJ1ZSwgJ2hlbGxvIGJlYXV0aWZ1bCB3b3JsZC4nICk7XHJcblxyXG4gIFRhbmRlbS5ST09UX1RFU1QuY3JlYXRlVGFuZGVtKCAnYW55dGhpbmdBbGxvd2VkSGVyZScgKTtcclxuXHJcbiAgd2luZG93LmFzc2VydCAmJiBUYW5kZW0uVkFMSURBVElPTiAmJiBhc3NlcnQudGhyb3dzKCAoKSA9PiB7XHJcbiAgICBUYW5kZW0uUk9PVF9URVNULmNyZWF0ZVRhbmRlbSggJ3BpY2thYmxlUHJvcGVydHknICk7XHJcbiAgfSwgJ3BpY2thYmxlUHJvcGVydHkgc2hvdWxkIG5ldmVyIGJlIGluc3RydW1lbnRlZCcgKTtcclxufSApOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxjQUFjLE1BQU0saUNBQWlDO0FBQzVELE9BQU9DLE1BQU0sTUFBTSxhQUFhO0FBRWhDQyxLQUFLLENBQUNDLE1BQU0sQ0FBRSxRQUFTLENBQUM7QUFFeEJELEtBQUssQ0FBQ0UsSUFBSSxDQUFFLDJCQUEyQixFQUFFQyxNQUFNLElBQUk7RUFFakQsSUFBSUMsUUFBUSxHQUFHLElBQUlOLGNBQWMsQ0FBRSxDQUFDLEVBQUU7SUFDcENPLE1BQU0sRUFBRU4sTUFBTSxDQUFDTyxTQUFTLENBQUNDLFlBQVksQ0FBRSxXQUFZO0VBQ3JELENBQUUsQ0FBQztFQUNISixNQUFNLENBQUNLLEVBQUUsQ0FBRUosUUFBUSxDQUFDSyxvQkFBb0IsQ0FBQyxDQUFDLEVBQUUsd0JBQXlCLENBQUM7RUFFdEVMLFFBQVEsR0FBRyxJQUFJTixjQUFjLENBQUUsQ0FBQyxFQUFFO0lBQ2hDTyxNQUFNLEVBQUVOLE1BQU0sQ0FBQ08sU0FBUyxDQUFDQyxZQUFZLENBQUUsV0FBWTtFQUNyRCxDQUFFLENBQUM7RUFDSEosTUFBTSxDQUFDSyxFQUFFLENBQUVKLFFBQVEsQ0FBQ0ssb0JBQW9CLENBQUMsQ0FBQyxFQUFFLHdCQUF5QixDQUFDO0VBRXRFTCxRQUFRLEdBQUcsSUFBSU4sY0FBYyxDQUFFLENBQUMsRUFBRTtJQUNoQ08sTUFBTSxFQUFFTixNQUFNLENBQUNPLFNBQVMsQ0FBQ0MsWUFBWSxDQUFFLFdBQVk7RUFDckQsQ0FBRSxDQUFDO0VBQ0hKLE1BQU0sQ0FBQ0ssRUFBRSxDQUFFSixRQUFRLENBQUNLLG9CQUFvQixDQUFDLENBQUMsRUFBRSx3QkFBeUIsQ0FBQzs7RUFFdEU7RUFDQUMsTUFBTSxDQUFDUCxNQUFNLElBQUlKLE1BQU0sQ0FBQ1ksVUFBVSxJQUFJUixNQUFNLENBQUNTLE1BQU0sQ0FBRSxNQUFNO0lBQ3pEUixRQUFRLEdBQUcsSUFBSU4sY0FBYyxDQUFFLENBQUMsRUFBRTtNQUNoQ08sTUFBTSxFQUFFTixNQUFNLENBQUNjLElBQUksQ0FBQ04sWUFBWSxDQUFFLFdBQVksQ0FBQyxDQUFDO0lBQ2xELENBQUUsQ0FBQztFQUNMLENBQUUsQ0FBQztBQUNMLENBQUUsQ0FBQzs7QUFFSFAsS0FBSyxDQUFDRSxJQUFJLENBQUUsaUJBQWlCLEVBQUVDLE1BQU0sSUFBSTtFQUN2Q0EsTUFBTSxDQUFDSyxFQUFFLENBQUUsSUFBSSxFQUFFLHdCQUF5QixDQUFDO0VBRTNDVCxNQUFNLENBQUNPLFNBQVMsQ0FBQ0MsWUFBWSxDQUFFLHFCQUFzQixDQUFDO0VBRXRERyxNQUFNLENBQUNQLE1BQU0sSUFBSUosTUFBTSxDQUFDWSxVQUFVLElBQUlSLE1BQU0sQ0FBQ1MsTUFBTSxDQUFFLE1BQU07SUFDekRiLE1BQU0sQ0FBQ08sU0FBUyxDQUFDQyxZQUFZLENBQUUsa0JBQW1CLENBQUM7RUFDckQsQ0FBQyxFQUFFLCtDQUFnRCxDQUFDO0FBQ3RELENBQUUsQ0FBQyJ9