// Copyright 2017-2022, University of Colorado Boulder

/**
 * Content for the "Keyboard Shortcuts" dialog that can be brought up from the sim navigation bar.
 *
 * @author Michael Kauzmann (PhET Interactive Simulations)
 */

import merge from '../../../../phet-core/js/merge.js';
import BasicActionsKeyboardHelpSection from '../../../../scenery-phet/js/keyboard/help/BasicActionsKeyboardHelpSection.js';
import KeyboardHelpIconFactory from '../../../../scenery-phet/js/keyboard/help/KeyboardHelpIconFactory.js';
import KeyboardHelpSection from '../../../../scenery-phet/js/keyboard/help/KeyboardHelpSection.js';
import KeyboardHelpSectionRow from '../../../../scenery-phet/js/keyboard/help/KeyboardHelpSectionRow.js';
import TwoColumnKeyboardHelpContent from '../../../../scenery-phet/js/keyboard/help/TwoColumnKeyboardHelpContent.js';
import moleculesAndLight from '../../moleculesAndLight.js';
import MoleculesAndLightStrings from '../../MoleculesAndLightStrings.js';
const keyboardHelpDialogObservationWindowString = MoleculesAndLightStrings.keyboardHelpDialog.observationWindow;
const turnLightSourceOnOrOffString = MoleculesAndLightStrings.keyboardHelpDialog.turnLightSourceOnOrOff;
const turnLightSourceOnOrOffDescriptionString = MoleculesAndLightStrings.a11y.keyboardHelpDialog.turnLightSourceOnOrOffDescription;
const pauseOrPlayShortcutString = MoleculesAndLightStrings.keyboardHelpDialog.pauseOrPlayShortcut;
const pauseOrPlayShortcutDescriptionString = MoleculesAndLightStrings.a11y.keyboardHelpDialog.pauseOrPlayShortcutDescription;
const stepForwardShortcutString = MoleculesAndLightStrings.keyboardHelpDialog.stepForwardShortcut;
const stepForwardShortcutDescriptionString = MoleculesAndLightStrings.a11y.keyboardHelpDialog.stepForwardShortcutDescription;
class MoleculesAndLightKeyboardHelpContent extends TwoColumnKeyboardHelpContent {
  constructor() {
    const lightSourceRow = KeyboardHelpSectionRow.labelWithIcon(turnLightSourceOnOrOffString, KeyboardHelpIconFactory.spaceOrEnter(), {
      labelInnerContent: turnLightSourceOnOrOffDescriptionString
    });
    const rowOptions = {
      labelOptions: {
        lineWrap: 200
      }
    };
    const playPauseRow = KeyboardHelpSectionRow.createPlayPauseKeyRow(pauseOrPlayShortcutString, merge({
      labelInnerContent: pauseOrPlayShortcutDescriptionString
    }, rowOptions));
    const stepForwardRow = KeyboardHelpSectionRow.createStepForwardKeyRow(stepForwardShortcutString, merge({
      labelInnerContent: stepForwardShortcutDescriptionString
    }, rowOptions));
    const emitterHelpSection = new KeyboardHelpSection(keyboardHelpDialogObservationWindowString, [lightSourceRow, playPauseRow, stepForwardRow], {
      textMaxWidth: 250
    });
    const basicActionsHelpSection = new BasicActionsKeyboardHelpSection();
    super([emitterHelpSection], [basicActionsHelpSection]);
  }
}
moleculesAndLight.register('MoleculesAndLightKeyboardHelpContent', MoleculesAndLightKeyboardHelpContent);
export default MoleculesAndLightKeyboardHelpContent;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtZXJnZSIsIkJhc2ljQWN0aW9uc0tleWJvYXJkSGVscFNlY3Rpb24iLCJLZXlib2FyZEhlbHBJY29uRmFjdG9yeSIsIktleWJvYXJkSGVscFNlY3Rpb24iLCJLZXlib2FyZEhlbHBTZWN0aW9uUm93IiwiVHdvQ29sdW1uS2V5Ym9hcmRIZWxwQ29udGVudCIsIm1vbGVjdWxlc0FuZExpZ2h0IiwiTW9sZWN1bGVzQW5kTGlnaHRTdHJpbmdzIiwia2V5Ym9hcmRIZWxwRGlhbG9nT2JzZXJ2YXRpb25XaW5kb3dTdHJpbmciLCJrZXlib2FyZEhlbHBEaWFsb2ciLCJvYnNlcnZhdGlvbldpbmRvdyIsInR1cm5MaWdodFNvdXJjZU9uT3JPZmZTdHJpbmciLCJ0dXJuTGlnaHRTb3VyY2VPbk9yT2ZmIiwidHVybkxpZ2h0U291cmNlT25Pck9mZkRlc2NyaXB0aW9uU3RyaW5nIiwiYTExeSIsInR1cm5MaWdodFNvdXJjZU9uT3JPZmZEZXNjcmlwdGlvbiIsInBhdXNlT3JQbGF5U2hvcnRjdXRTdHJpbmciLCJwYXVzZU9yUGxheVNob3J0Y3V0IiwicGF1c2VPclBsYXlTaG9ydGN1dERlc2NyaXB0aW9uU3RyaW5nIiwicGF1c2VPclBsYXlTaG9ydGN1dERlc2NyaXB0aW9uIiwic3RlcEZvcndhcmRTaG9ydGN1dFN0cmluZyIsInN0ZXBGb3J3YXJkU2hvcnRjdXQiLCJzdGVwRm9yd2FyZFNob3J0Y3V0RGVzY3JpcHRpb25TdHJpbmciLCJzdGVwRm9yd2FyZFNob3J0Y3V0RGVzY3JpcHRpb24iLCJNb2xlY3VsZXNBbmRMaWdodEtleWJvYXJkSGVscENvbnRlbnQiLCJjb25zdHJ1Y3RvciIsImxpZ2h0U291cmNlUm93IiwibGFiZWxXaXRoSWNvbiIsInNwYWNlT3JFbnRlciIsImxhYmVsSW5uZXJDb250ZW50Iiwicm93T3B0aW9ucyIsImxhYmVsT3B0aW9ucyIsImxpbmVXcmFwIiwicGxheVBhdXNlUm93IiwiY3JlYXRlUGxheVBhdXNlS2V5Um93Iiwic3RlcEZvcndhcmRSb3ciLCJjcmVhdGVTdGVwRm9yd2FyZEtleVJvdyIsImVtaXR0ZXJIZWxwU2VjdGlvbiIsInRleHRNYXhXaWR0aCIsImJhc2ljQWN0aW9uc0hlbHBTZWN0aW9uIiwicmVnaXN0ZXIiXSwic291cmNlcyI6WyJNb2xlY3VsZXNBbmRMaWdodEtleWJvYXJkSGVscENvbnRlbnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTctMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogQ29udGVudCBmb3IgdGhlIFwiS2V5Ym9hcmQgU2hvcnRjdXRzXCIgZGlhbG9nIHRoYXQgY2FuIGJlIGJyb3VnaHQgdXAgZnJvbSB0aGUgc2ltIG5hdmlnYXRpb24gYmFyLlxyXG4gKlxyXG4gKiBAYXV0aG9yIE1pY2hhZWwgS2F1em1hbm4gKFBoRVQgSW50ZXJhY3RpdmUgU2ltdWxhdGlvbnMpXHJcbiAqL1xyXG5cclxuaW1wb3J0IG1lcmdlIGZyb20gJy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy9tZXJnZS5qcyc7XHJcbmltcG9ydCBCYXNpY0FjdGlvbnNLZXlib2FyZEhlbHBTZWN0aW9uIGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnktcGhldC9qcy9rZXlib2FyZC9oZWxwL0Jhc2ljQWN0aW9uc0tleWJvYXJkSGVscFNlY3Rpb24uanMnO1xyXG5pbXBvcnQgS2V5Ym9hcmRIZWxwSWNvbkZhY3RvcnkgZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS1waGV0L2pzL2tleWJvYXJkL2hlbHAvS2V5Ym9hcmRIZWxwSWNvbkZhY3RvcnkuanMnO1xyXG5pbXBvcnQgS2V5Ym9hcmRIZWxwU2VjdGlvbiBmcm9tICcuLi8uLi8uLi8uLi9zY2VuZXJ5LXBoZXQvanMva2V5Ym9hcmQvaGVscC9LZXlib2FyZEhlbHBTZWN0aW9uLmpzJztcclxuaW1wb3J0IEtleWJvYXJkSGVscFNlY3Rpb25Sb3cgZnJvbSAnLi4vLi4vLi4vLi4vc2NlbmVyeS1waGV0L2pzL2tleWJvYXJkL2hlbHAvS2V5Ym9hcmRIZWxwU2VjdGlvblJvdy5qcyc7XHJcbmltcG9ydCBUd29Db2x1bW5LZXlib2FyZEhlbHBDb250ZW50IGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnktcGhldC9qcy9rZXlib2FyZC9oZWxwL1R3b0NvbHVtbktleWJvYXJkSGVscENvbnRlbnQuanMnO1xyXG5pbXBvcnQgbW9sZWN1bGVzQW5kTGlnaHQgZnJvbSAnLi4vLi4vbW9sZWN1bGVzQW5kTGlnaHQuanMnO1xyXG5pbXBvcnQgTW9sZWN1bGVzQW5kTGlnaHRTdHJpbmdzIGZyb20gJy4uLy4uL01vbGVjdWxlc0FuZExpZ2h0U3RyaW5ncy5qcyc7XHJcblxyXG5jb25zdCBrZXlib2FyZEhlbHBEaWFsb2dPYnNlcnZhdGlvbldpbmRvd1N0cmluZyA9IE1vbGVjdWxlc0FuZExpZ2h0U3RyaW5ncy5rZXlib2FyZEhlbHBEaWFsb2cub2JzZXJ2YXRpb25XaW5kb3c7XHJcbmNvbnN0IHR1cm5MaWdodFNvdXJjZU9uT3JPZmZTdHJpbmcgPSBNb2xlY3VsZXNBbmRMaWdodFN0cmluZ3Mua2V5Ym9hcmRIZWxwRGlhbG9nLnR1cm5MaWdodFNvdXJjZU9uT3JPZmY7XHJcbmNvbnN0IHR1cm5MaWdodFNvdXJjZU9uT3JPZmZEZXNjcmlwdGlvblN0cmluZyA9IE1vbGVjdWxlc0FuZExpZ2h0U3RyaW5ncy5hMTF5LmtleWJvYXJkSGVscERpYWxvZy50dXJuTGlnaHRTb3VyY2VPbk9yT2ZmRGVzY3JpcHRpb247XHJcbmNvbnN0IHBhdXNlT3JQbGF5U2hvcnRjdXRTdHJpbmcgPSBNb2xlY3VsZXNBbmRMaWdodFN0cmluZ3Mua2V5Ym9hcmRIZWxwRGlhbG9nLnBhdXNlT3JQbGF5U2hvcnRjdXQ7XHJcbmNvbnN0IHBhdXNlT3JQbGF5U2hvcnRjdXREZXNjcmlwdGlvblN0cmluZyA9IE1vbGVjdWxlc0FuZExpZ2h0U3RyaW5ncy5hMTF5LmtleWJvYXJkSGVscERpYWxvZy5wYXVzZU9yUGxheVNob3J0Y3V0RGVzY3JpcHRpb247XHJcbmNvbnN0IHN0ZXBGb3J3YXJkU2hvcnRjdXRTdHJpbmcgPSBNb2xlY3VsZXNBbmRMaWdodFN0cmluZ3Mua2V5Ym9hcmRIZWxwRGlhbG9nLnN0ZXBGb3J3YXJkU2hvcnRjdXQ7XHJcbmNvbnN0IHN0ZXBGb3J3YXJkU2hvcnRjdXREZXNjcmlwdGlvblN0cmluZyA9IE1vbGVjdWxlc0FuZExpZ2h0U3RyaW5ncy5hMTF5LmtleWJvYXJkSGVscERpYWxvZy5zdGVwRm9yd2FyZFNob3J0Y3V0RGVzY3JpcHRpb247XHJcblxyXG5jbGFzcyBNb2xlY3VsZXNBbmRMaWdodEtleWJvYXJkSGVscENvbnRlbnQgZXh0ZW5kcyBUd29Db2x1bW5LZXlib2FyZEhlbHBDb250ZW50IHtcclxuICBjb25zdHJ1Y3RvcigpIHtcclxuXHJcbiAgICBjb25zdCBsaWdodFNvdXJjZVJvdyA9IEtleWJvYXJkSGVscFNlY3Rpb25Sb3cubGFiZWxXaXRoSWNvbihcclxuICAgICAgdHVybkxpZ2h0U291cmNlT25Pck9mZlN0cmluZyxcclxuICAgICAgS2V5Ym9hcmRIZWxwSWNvbkZhY3Rvcnkuc3BhY2VPckVudGVyKCksIHtcclxuICAgICAgICBsYWJlbElubmVyQ29udGVudDogdHVybkxpZ2h0U291cmNlT25Pck9mZkRlc2NyaXB0aW9uU3RyaW5nXHJcbiAgICAgIH0gKTtcclxuXHJcbiAgICBjb25zdCByb3dPcHRpb25zID0geyBsYWJlbE9wdGlvbnM6IHsgbGluZVdyYXA6IDIwMCB9IH07XHJcbiAgICBjb25zdCBwbGF5UGF1c2VSb3cgPSBLZXlib2FyZEhlbHBTZWN0aW9uUm93LmNyZWF0ZVBsYXlQYXVzZUtleVJvdyggcGF1c2VPclBsYXlTaG9ydGN1dFN0cmluZywgbWVyZ2UoIHtcclxuICAgICAgbGFiZWxJbm5lckNvbnRlbnQ6IHBhdXNlT3JQbGF5U2hvcnRjdXREZXNjcmlwdGlvblN0cmluZ1xyXG4gICAgfSwgcm93T3B0aW9ucyApICk7XHJcbiAgICBjb25zdCBzdGVwRm9yd2FyZFJvdyA9IEtleWJvYXJkSGVscFNlY3Rpb25Sb3cuY3JlYXRlU3RlcEZvcndhcmRLZXlSb3coIHN0ZXBGb3J3YXJkU2hvcnRjdXRTdHJpbmcsIG1lcmdlKCB7XHJcbiAgICAgIGxhYmVsSW5uZXJDb250ZW50OiBzdGVwRm9yd2FyZFNob3J0Y3V0RGVzY3JpcHRpb25TdHJpbmdcclxuICAgIH0sIHJvd09wdGlvbnMgKSApO1xyXG5cclxuICAgIGNvbnN0IGVtaXR0ZXJIZWxwU2VjdGlvbiA9IG5ldyBLZXlib2FyZEhlbHBTZWN0aW9uKCBrZXlib2FyZEhlbHBEaWFsb2dPYnNlcnZhdGlvbldpbmRvd1N0cmluZywgWyBsaWdodFNvdXJjZVJvdywgcGxheVBhdXNlUm93LCBzdGVwRm9yd2FyZFJvdyBdLCB7XHJcbiAgICAgIHRleHRNYXhXaWR0aDogMjUwXHJcbiAgICB9ICk7XHJcblxyXG4gICAgY29uc3QgYmFzaWNBY3Rpb25zSGVscFNlY3Rpb24gPSBuZXcgQmFzaWNBY3Rpb25zS2V5Ym9hcmRIZWxwU2VjdGlvbigpO1xyXG5cclxuICAgIHN1cGVyKCBbIGVtaXR0ZXJIZWxwU2VjdGlvbiBdLCBbIGJhc2ljQWN0aW9uc0hlbHBTZWN0aW9uIF0gKTtcclxuICB9XHJcbn1cclxuXHJcbm1vbGVjdWxlc0FuZExpZ2h0LnJlZ2lzdGVyKCAnTW9sZWN1bGVzQW5kTGlnaHRLZXlib2FyZEhlbHBDb250ZW50JywgTW9sZWN1bGVzQW5kTGlnaHRLZXlib2FyZEhlbHBDb250ZW50ICk7XHJcbmV4cG9ydCBkZWZhdWx0IE1vbGVjdWxlc0FuZExpZ2h0S2V5Ym9hcmRIZWxwQ29udGVudDsiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsS0FBSyxNQUFNLG1DQUFtQztBQUNyRCxPQUFPQywrQkFBK0IsTUFBTSw4RUFBOEU7QUFDMUgsT0FBT0MsdUJBQXVCLE1BQU0sc0VBQXNFO0FBQzFHLE9BQU9DLG1CQUFtQixNQUFNLGtFQUFrRTtBQUNsRyxPQUFPQyxzQkFBc0IsTUFBTSxxRUFBcUU7QUFDeEcsT0FBT0MsNEJBQTRCLE1BQU0sMkVBQTJFO0FBQ3BILE9BQU9DLGlCQUFpQixNQUFNLDRCQUE0QjtBQUMxRCxPQUFPQyx3QkFBd0IsTUFBTSxtQ0FBbUM7QUFFeEUsTUFBTUMseUNBQXlDLEdBQUdELHdCQUF3QixDQUFDRSxrQkFBa0IsQ0FBQ0MsaUJBQWlCO0FBQy9HLE1BQU1DLDRCQUE0QixHQUFHSix3QkFBd0IsQ0FBQ0Usa0JBQWtCLENBQUNHLHNCQUFzQjtBQUN2RyxNQUFNQyx1Q0FBdUMsR0FBR04sd0JBQXdCLENBQUNPLElBQUksQ0FBQ0wsa0JBQWtCLENBQUNNLGlDQUFpQztBQUNsSSxNQUFNQyx5QkFBeUIsR0FBR1Qsd0JBQXdCLENBQUNFLGtCQUFrQixDQUFDUSxtQkFBbUI7QUFDakcsTUFBTUMsb0NBQW9DLEdBQUdYLHdCQUF3QixDQUFDTyxJQUFJLENBQUNMLGtCQUFrQixDQUFDVSw4QkFBOEI7QUFDNUgsTUFBTUMseUJBQXlCLEdBQUdiLHdCQUF3QixDQUFDRSxrQkFBa0IsQ0FBQ1ksbUJBQW1CO0FBQ2pHLE1BQU1DLG9DQUFvQyxHQUFHZix3QkFBd0IsQ0FBQ08sSUFBSSxDQUFDTCxrQkFBa0IsQ0FBQ2MsOEJBQThCO0FBRTVILE1BQU1DLG9DQUFvQyxTQUFTbkIsNEJBQTRCLENBQUM7RUFDOUVvQixXQUFXQSxDQUFBLEVBQUc7SUFFWixNQUFNQyxjQUFjLEdBQUd0QixzQkFBc0IsQ0FBQ3VCLGFBQWEsQ0FDekRoQiw0QkFBNEIsRUFDNUJULHVCQUF1QixDQUFDMEIsWUFBWSxDQUFDLENBQUMsRUFBRTtNQUN0Q0MsaUJBQWlCLEVBQUVoQjtJQUNyQixDQUFFLENBQUM7SUFFTCxNQUFNaUIsVUFBVSxHQUFHO01BQUVDLFlBQVksRUFBRTtRQUFFQyxRQUFRLEVBQUU7TUFBSTtJQUFFLENBQUM7SUFDdEQsTUFBTUMsWUFBWSxHQUFHN0Isc0JBQXNCLENBQUM4QixxQkFBcUIsQ0FBRWxCLHlCQUF5QixFQUFFaEIsS0FBSyxDQUFFO01BQ25HNkIsaUJBQWlCLEVBQUVYO0lBQ3JCLENBQUMsRUFBRVksVUFBVyxDQUFFLENBQUM7SUFDakIsTUFBTUssY0FBYyxHQUFHL0Isc0JBQXNCLENBQUNnQyx1QkFBdUIsQ0FBRWhCLHlCQUF5QixFQUFFcEIsS0FBSyxDQUFFO01BQ3ZHNkIsaUJBQWlCLEVBQUVQO0lBQ3JCLENBQUMsRUFBRVEsVUFBVyxDQUFFLENBQUM7SUFFakIsTUFBTU8sa0JBQWtCLEdBQUcsSUFBSWxDLG1CQUFtQixDQUFFSyx5Q0FBeUMsRUFBRSxDQUFFa0IsY0FBYyxFQUFFTyxZQUFZLEVBQUVFLGNBQWMsQ0FBRSxFQUFFO01BQy9JRyxZQUFZLEVBQUU7SUFDaEIsQ0FBRSxDQUFDO0lBRUgsTUFBTUMsdUJBQXVCLEdBQUcsSUFBSXRDLCtCQUErQixDQUFDLENBQUM7SUFFckUsS0FBSyxDQUFFLENBQUVvQyxrQkFBa0IsQ0FBRSxFQUFFLENBQUVFLHVCQUF1QixDQUFHLENBQUM7RUFDOUQ7QUFDRjtBQUVBakMsaUJBQWlCLENBQUNrQyxRQUFRLENBQUUsc0NBQXNDLEVBQUVoQixvQ0FBcUMsQ0FBQztBQUMxRyxlQUFlQSxvQ0FBb0MifQ==