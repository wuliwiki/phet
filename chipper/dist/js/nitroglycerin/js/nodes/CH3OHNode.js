// Copyright 2013-2022, University of Colorado Boulder

/**
 * CH3OH Molecule
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import merge from '../../../phet-core/js/merge.js';
import Element from '../Element.js';
import nitroglycerin from '../nitroglycerin.js';
import AtomNode from './AtomNode.js';
import MoleculeNode from './MoleculeNode.js';
export default class CH3OHNode extends MoleculeNode {
  constructor(providedOptions) {
    const atomNodeOptions = providedOptions?.atomNodeOptions;

    // atoms
    const leftNode = new AtomNode(Element.C, atomNodeOptions);
    const smallTopNode = new AtomNode(Element.H, merge({
      centerX: leftNode.centerX,
      centerY: leftNode.top
    }, atomNodeOptions));
    const smallBottomNode = new AtomNode(Element.H, merge({
      centerX: smallTopNode.centerX,
      centerY: leftNode.bottom
    }, atomNodeOptions));
    const smallLeftNode = new AtomNode(Element.H, merge({
      centerX: leftNode.left,
      centerY: leftNode.centerY
    }, atomNodeOptions));
    const rightNode = new AtomNode(Element.O, merge({
      centerX: leftNode.right + 0.25 * leftNode.width,
      centerY: leftNode.centerY
    }, atomNodeOptions));
    const smallRightNode = new AtomNode(Element.H, merge({
      centerX: rightNode.right,
      centerY: rightNode.centerY
    }, atomNodeOptions));
    const atomNodes = [smallBottomNode, smallTopNode, leftNode, smallLeftNode, smallRightNode, rightNode];
    super(atomNodes, providedOptions);
  }
}
nitroglycerin.register('CH3OHNode', CH3OHNode);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtZXJnZSIsIkVsZW1lbnQiLCJuaXRyb2dseWNlcmluIiwiQXRvbU5vZGUiLCJNb2xlY3VsZU5vZGUiLCJDSDNPSE5vZGUiLCJjb25zdHJ1Y3RvciIsInByb3ZpZGVkT3B0aW9ucyIsImF0b21Ob2RlT3B0aW9ucyIsImxlZnROb2RlIiwiQyIsInNtYWxsVG9wTm9kZSIsIkgiLCJjZW50ZXJYIiwiY2VudGVyWSIsInRvcCIsInNtYWxsQm90dG9tTm9kZSIsImJvdHRvbSIsInNtYWxsTGVmdE5vZGUiLCJsZWZ0IiwicmlnaHROb2RlIiwiTyIsInJpZ2h0Iiwid2lkdGgiLCJzbWFsbFJpZ2h0Tm9kZSIsImF0b21Ob2RlcyIsInJlZ2lzdGVyIl0sInNvdXJjZXMiOlsiQ0gzT0hOb2RlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDEzLTIwMjIsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIENIM09IIE1vbGVjdWxlXHJcbiAqXHJcbiAqIEBhdXRob3IgQ2hyaXMgTWFsbGV5IChQaXhlbFpvb20sIEluYy4pXHJcbiAqL1xyXG5cclxuaW1wb3J0IG1lcmdlIGZyb20gJy4uLy4uLy4uL3BoZXQtY29yZS9qcy9tZXJnZS5qcyc7XHJcbmltcG9ydCB7IEVtcHR5U2VsZk9wdGlvbnMgfSBmcm9tICcuLi8uLi8uLi9waGV0LWNvcmUvanMvb3B0aW9uaXplLmpzJztcclxuaW1wb3J0IEVsZW1lbnQgZnJvbSAnLi4vRWxlbWVudC5qcyc7XHJcbmltcG9ydCBuaXRyb2dseWNlcmluIGZyb20gJy4uL25pdHJvZ2x5Y2VyaW4uanMnO1xyXG5pbXBvcnQgQXRvbU5vZGUgZnJvbSAnLi9BdG9tTm9kZS5qcyc7XHJcbmltcG9ydCBNb2xlY3VsZU5vZGUsIHsgTW9sZWN1bGVOb2RlT3B0aW9ucyB9IGZyb20gJy4vTW9sZWN1bGVOb2RlLmpzJztcclxuXHJcbnR5cGUgU2VsZk9wdGlvbnMgPSBFbXB0eVNlbGZPcHRpb25zO1xyXG5leHBvcnQgdHlwZSBDSDNPSE5vZGVPcHRpb25zID0gU2VsZk9wdGlvbnMgJiBNb2xlY3VsZU5vZGVPcHRpb25zO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ0gzT0hOb2RlIGV4dGVuZHMgTW9sZWN1bGVOb2RlIHtcclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKCBwcm92aWRlZE9wdGlvbnM/OiBDSDNPSE5vZGVPcHRpb25zICkge1xyXG5cclxuICAgIGNvbnN0IGF0b21Ob2RlT3B0aW9ucyA9IHByb3ZpZGVkT3B0aW9ucz8uYXRvbU5vZGVPcHRpb25zO1xyXG5cclxuICAgIC8vIGF0b21zXHJcbiAgICBjb25zdCBsZWZ0Tm9kZSA9IG5ldyBBdG9tTm9kZSggRWxlbWVudC5DLCBhdG9tTm9kZU9wdGlvbnMgKTtcclxuICAgIGNvbnN0IHNtYWxsVG9wTm9kZSA9IG5ldyBBdG9tTm9kZSggRWxlbWVudC5ILCBtZXJnZSgge1xyXG4gICAgICBjZW50ZXJYOiBsZWZ0Tm9kZS5jZW50ZXJYLFxyXG4gICAgICBjZW50ZXJZOiBsZWZ0Tm9kZS50b3BcclxuICAgIH0sIGF0b21Ob2RlT3B0aW9ucyApICk7XHJcbiAgICBjb25zdCBzbWFsbEJvdHRvbU5vZGUgPSBuZXcgQXRvbU5vZGUoIEVsZW1lbnQuSCwgbWVyZ2UoIHtcclxuICAgICAgY2VudGVyWDogc21hbGxUb3BOb2RlLmNlbnRlclgsXHJcbiAgICAgIGNlbnRlclk6IGxlZnROb2RlLmJvdHRvbVxyXG4gICAgfSwgYXRvbU5vZGVPcHRpb25zICkgKTtcclxuICAgIGNvbnN0IHNtYWxsTGVmdE5vZGUgPSBuZXcgQXRvbU5vZGUoIEVsZW1lbnQuSCwgbWVyZ2UoIHtcclxuICAgICAgY2VudGVyWDogbGVmdE5vZGUubGVmdCxcclxuICAgICAgY2VudGVyWTogbGVmdE5vZGUuY2VudGVyWVxyXG4gICAgfSwgYXRvbU5vZGVPcHRpb25zICkgKTtcclxuICAgIGNvbnN0IHJpZ2h0Tm9kZSA9IG5ldyBBdG9tTm9kZSggRWxlbWVudC5PLCBtZXJnZSgge1xyXG4gICAgICBjZW50ZXJYOiBsZWZ0Tm9kZS5yaWdodCArICggMC4yNSAqIGxlZnROb2RlLndpZHRoICksXHJcbiAgICAgIGNlbnRlclk6IGxlZnROb2RlLmNlbnRlcllcclxuICAgIH0sIGF0b21Ob2RlT3B0aW9ucyApICk7XHJcbiAgICBjb25zdCBzbWFsbFJpZ2h0Tm9kZSA9IG5ldyBBdG9tTm9kZSggRWxlbWVudC5ILCBtZXJnZSgge1xyXG4gICAgICBjZW50ZXJYOiByaWdodE5vZGUucmlnaHQsXHJcbiAgICAgIGNlbnRlclk6IHJpZ2h0Tm9kZS5jZW50ZXJZXHJcbiAgICB9LCBhdG9tTm9kZU9wdGlvbnMgKSApO1xyXG5cclxuICAgIGNvbnN0IGF0b21Ob2RlcyA9IFsgc21hbGxCb3R0b21Ob2RlLCBzbWFsbFRvcE5vZGUsIGxlZnROb2RlLCBzbWFsbExlZnROb2RlLCBzbWFsbFJpZ2h0Tm9kZSwgcmlnaHROb2RlIF07XHJcblxyXG4gICAgc3VwZXIoIGF0b21Ob2RlcywgcHJvdmlkZWRPcHRpb25zICk7XHJcbiAgfVxyXG59XHJcblxyXG5uaXRyb2dseWNlcmluLnJlZ2lzdGVyKCAnQ0gzT0hOb2RlJywgQ0gzT0hOb2RlICk7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLEtBQUssTUFBTSxnQ0FBZ0M7QUFFbEQsT0FBT0MsT0FBTyxNQUFNLGVBQWU7QUFDbkMsT0FBT0MsYUFBYSxNQUFNLHFCQUFxQjtBQUMvQyxPQUFPQyxRQUFRLE1BQU0sZUFBZTtBQUNwQyxPQUFPQyxZQUFZLE1BQStCLG1CQUFtQjtBQUtyRSxlQUFlLE1BQU1DLFNBQVMsU0FBU0QsWUFBWSxDQUFDO0VBRTNDRSxXQUFXQSxDQUFFQyxlQUFrQyxFQUFHO0lBRXZELE1BQU1DLGVBQWUsR0FBR0QsZUFBZSxFQUFFQyxlQUFlOztJQUV4RDtJQUNBLE1BQU1DLFFBQVEsR0FBRyxJQUFJTixRQUFRLENBQUVGLE9BQU8sQ0FBQ1MsQ0FBQyxFQUFFRixlQUFnQixDQUFDO0lBQzNELE1BQU1HLFlBQVksR0FBRyxJQUFJUixRQUFRLENBQUVGLE9BQU8sQ0FBQ1csQ0FBQyxFQUFFWixLQUFLLENBQUU7TUFDbkRhLE9BQU8sRUFBRUosUUFBUSxDQUFDSSxPQUFPO01BQ3pCQyxPQUFPLEVBQUVMLFFBQVEsQ0FBQ007SUFDcEIsQ0FBQyxFQUFFUCxlQUFnQixDQUFFLENBQUM7SUFDdEIsTUFBTVEsZUFBZSxHQUFHLElBQUliLFFBQVEsQ0FBRUYsT0FBTyxDQUFDVyxDQUFDLEVBQUVaLEtBQUssQ0FBRTtNQUN0RGEsT0FBTyxFQUFFRixZQUFZLENBQUNFLE9BQU87TUFDN0JDLE9BQU8sRUFBRUwsUUFBUSxDQUFDUTtJQUNwQixDQUFDLEVBQUVULGVBQWdCLENBQUUsQ0FBQztJQUN0QixNQUFNVSxhQUFhLEdBQUcsSUFBSWYsUUFBUSxDQUFFRixPQUFPLENBQUNXLENBQUMsRUFBRVosS0FBSyxDQUFFO01BQ3BEYSxPQUFPLEVBQUVKLFFBQVEsQ0FBQ1UsSUFBSTtNQUN0QkwsT0FBTyxFQUFFTCxRQUFRLENBQUNLO0lBQ3BCLENBQUMsRUFBRU4sZUFBZ0IsQ0FBRSxDQUFDO0lBQ3RCLE1BQU1ZLFNBQVMsR0FBRyxJQUFJakIsUUFBUSxDQUFFRixPQUFPLENBQUNvQixDQUFDLEVBQUVyQixLQUFLLENBQUU7TUFDaERhLE9BQU8sRUFBRUosUUFBUSxDQUFDYSxLQUFLLEdBQUssSUFBSSxHQUFHYixRQUFRLENBQUNjLEtBQU87TUFDbkRULE9BQU8sRUFBRUwsUUFBUSxDQUFDSztJQUNwQixDQUFDLEVBQUVOLGVBQWdCLENBQUUsQ0FBQztJQUN0QixNQUFNZ0IsY0FBYyxHQUFHLElBQUlyQixRQUFRLENBQUVGLE9BQU8sQ0FBQ1csQ0FBQyxFQUFFWixLQUFLLENBQUU7TUFDckRhLE9BQU8sRUFBRU8sU0FBUyxDQUFDRSxLQUFLO01BQ3hCUixPQUFPLEVBQUVNLFNBQVMsQ0FBQ047SUFDckIsQ0FBQyxFQUFFTixlQUFnQixDQUFFLENBQUM7SUFFdEIsTUFBTWlCLFNBQVMsR0FBRyxDQUFFVCxlQUFlLEVBQUVMLFlBQVksRUFBRUYsUUFBUSxFQUFFUyxhQUFhLEVBQUVNLGNBQWMsRUFBRUosU0FBUyxDQUFFO0lBRXZHLEtBQUssQ0FBRUssU0FBUyxFQUFFbEIsZUFBZ0IsQ0FBQztFQUNyQztBQUNGO0FBRUFMLGFBQWEsQ0FBQ3dCLFFBQVEsQ0FBRSxXQUFXLEVBQUVyQixTQUFVLENBQUMifQ==