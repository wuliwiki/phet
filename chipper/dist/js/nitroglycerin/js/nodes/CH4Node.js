// Copyright 2013-2022, University of Colorado Boulder

/**
 * CH4 Molecule
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */

import merge from '../../../phet-core/js/merge.js';
import Element from '../Element.js';
import nitroglycerin from '../nitroglycerin.js';
import AtomNode from './AtomNode.js';
import MoleculeNode from './MoleculeNode.js';
export default class CH4Node extends MoleculeNode {
  constructor(providedOptions) {
    const atomNodeOptions = providedOptions?.atomNodeOptions;

    // atoms
    const bigNode = new AtomNode(Element.C, atomNodeOptions);
    const smallOffset = 0.165 * bigNode.width;
    const smallTopLeftNode = new AtomNode(Element.H, merge({
      centerX: bigNode.left + smallOffset,
      centerY: bigNode.top + smallOffset
    }, atomNodeOptions));
    const smallTopRightNode = new AtomNode(Element.H, merge({
      centerX: bigNode.right - smallOffset,
      centerY: smallTopLeftNode.centerY
    }, atomNodeOptions));
    const smallBottomLeftNode = new AtomNode(Element.H, merge({
      centerX: smallTopLeftNode.centerX,
      centerY: bigNode.bottom - smallOffset
    }, atomNodeOptions));
    const smallBottomRightNode = new AtomNode(Element.H, merge({
      centerX: smallTopRightNode.centerX,
      centerY: smallBottomLeftNode.centerY
    }, atomNodeOptions));
    const atomNodes = [smallTopRightNode, smallBottomLeftNode, bigNode, smallTopLeftNode, smallBottomRightNode];
    super(atomNodes, providedOptions);
  }
}
nitroglycerin.register('CH4Node', CH4Node);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtZXJnZSIsIkVsZW1lbnQiLCJuaXRyb2dseWNlcmluIiwiQXRvbU5vZGUiLCJNb2xlY3VsZU5vZGUiLCJDSDROb2RlIiwiY29uc3RydWN0b3IiLCJwcm92aWRlZE9wdGlvbnMiLCJhdG9tTm9kZU9wdGlvbnMiLCJiaWdOb2RlIiwiQyIsInNtYWxsT2Zmc2V0Iiwid2lkdGgiLCJzbWFsbFRvcExlZnROb2RlIiwiSCIsImNlbnRlclgiLCJsZWZ0IiwiY2VudGVyWSIsInRvcCIsInNtYWxsVG9wUmlnaHROb2RlIiwicmlnaHQiLCJzbWFsbEJvdHRvbUxlZnROb2RlIiwiYm90dG9tIiwic21hbGxCb3R0b21SaWdodE5vZGUiLCJhdG9tTm9kZXMiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbIkNINE5vZGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTMtMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXHJcblxyXG4vKipcclxuICogQ0g0IE1vbGVjdWxlXHJcbiAqXHJcbiAqIEBhdXRob3IgQ2hyaXMgTWFsbGV5IChQaXhlbFpvb20sIEluYy4pXHJcbiAqL1xyXG5cclxuaW1wb3J0IG1lcmdlIGZyb20gJy4uLy4uLy4uL3BoZXQtY29yZS9qcy9tZXJnZS5qcyc7XHJcbmltcG9ydCB7IEVtcHR5U2VsZk9wdGlvbnMgfSBmcm9tICcuLi8uLi8uLi9waGV0LWNvcmUvanMvb3B0aW9uaXplLmpzJztcclxuaW1wb3J0IEVsZW1lbnQgZnJvbSAnLi4vRWxlbWVudC5qcyc7XHJcbmltcG9ydCBuaXRyb2dseWNlcmluIGZyb20gJy4uL25pdHJvZ2x5Y2VyaW4uanMnO1xyXG5pbXBvcnQgQXRvbU5vZGUgZnJvbSAnLi9BdG9tTm9kZS5qcyc7XHJcbmltcG9ydCBNb2xlY3VsZU5vZGUsIHsgTW9sZWN1bGVOb2RlT3B0aW9ucyB9IGZyb20gJy4vTW9sZWN1bGVOb2RlLmpzJztcclxuXHJcbnR5cGUgU2VsZk9wdGlvbnMgPSBFbXB0eVNlbGZPcHRpb25zO1xyXG5leHBvcnQgdHlwZSBDSDROb2RlT3B0aW9ucyA9IFNlbGZPcHRpb25zICYgTW9sZWN1bGVOb2RlT3B0aW9ucztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENINE5vZGUgZXh0ZW5kcyBNb2xlY3VsZU5vZGUge1xyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoIHByb3ZpZGVkT3B0aW9ucz86IENINE5vZGVPcHRpb25zICkge1xyXG5cclxuICAgIGNvbnN0IGF0b21Ob2RlT3B0aW9ucyA9IHByb3ZpZGVkT3B0aW9ucz8uYXRvbU5vZGVPcHRpb25zO1xyXG5cclxuICAgIC8vIGF0b21zXHJcbiAgICBjb25zdCBiaWdOb2RlID0gbmV3IEF0b21Ob2RlKCBFbGVtZW50LkMsIGF0b21Ob2RlT3B0aW9ucyApO1xyXG4gICAgY29uc3Qgc21hbGxPZmZzZXQgPSAwLjE2NSAqIGJpZ05vZGUud2lkdGg7XHJcbiAgICBjb25zdCBzbWFsbFRvcExlZnROb2RlID0gbmV3IEF0b21Ob2RlKCBFbGVtZW50LkgsIG1lcmdlKCB7XHJcbiAgICAgIGNlbnRlclg6IGJpZ05vZGUubGVmdCArIHNtYWxsT2Zmc2V0LFxyXG4gICAgICBjZW50ZXJZOiBiaWdOb2RlLnRvcCArIHNtYWxsT2Zmc2V0XHJcbiAgICB9LCBhdG9tTm9kZU9wdGlvbnMgKSApO1xyXG4gICAgY29uc3Qgc21hbGxUb3BSaWdodE5vZGUgPSBuZXcgQXRvbU5vZGUoIEVsZW1lbnQuSCwgbWVyZ2UoIHtcclxuICAgICAgY2VudGVyWDogYmlnTm9kZS5yaWdodCAtIHNtYWxsT2Zmc2V0LFxyXG4gICAgICBjZW50ZXJZOiBzbWFsbFRvcExlZnROb2RlLmNlbnRlcllcclxuICAgIH0sIGF0b21Ob2RlT3B0aW9ucyApICk7XHJcbiAgICBjb25zdCBzbWFsbEJvdHRvbUxlZnROb2RlID0gbmV3IEF0b21Ob2RlKCBFbGVtZW50LkgsIG1lcmdlKCB7XHJcbiAgICAgIGNlbnRlclg6IHNtYWxsVG9wTGVmdE5vZGUuY2VudGVyWCxcclxuICAgICAgY2VudGVyWTogYmlnTm9kZS5ib3R0b20gLSBzbWFsbE9mZnNldFxyXG4gICAgfSwgYXRvbU5vZGVPcHRpb25zICkgKTtcclxuICAgIGNvbnN0IHNtYWxsQm90dG9tUmlnaHROb2RlID0gbmV3IEF0b21Ob2RlKCBFbGVtZW50LkgsIG1lcmdlKCB7XHJcbiAgICAgIGNlbnRlclg6IHNtYWxsVG9wUmlnaHROb2RlLmNlbnRlclgsXHJcbiAgICAgIGNlbnRlclk6IHNtYWxsQm90dG9tTGVmdE5vZGUuY2VudGVyWVxyXG4gICAgfSwgYXRvbU5vZGVPcHRpb25zICkgKTtcclxuXHJcbiAgICBjb25zdCBhdG9tTm9kZXMgPSBbIHNtYWxsVG9wUmlnaHROb2RlLCBzbWFsbEJvdHRvbUxlZnROb2RlLCBiaWdOb2RlLCBzbWFsbFRvcExlZnROb2RlLCBzbWFsbEJvdHRvbVJpZ2h0Tm9kZSBdO1xyXG5cclxuICAgIHN1cGVyKCBhdG9tTm9kZXMsIHByb3ZpZGVkT3B0aW9ucyApO1xyXG4gIH1cclxufVxyXG5cclxubml0cm9nbHljZXJpbi5yZWdpc3RlciggJ0NINE5vZGUnLCBDSDROb2RlICk7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLEtBQUssTUFBTSxnQ0FBZ0M7QUFFbEQsT0FBT0MsT0FBTyxNQUFNLGVBQWU7QUFDbkMsT0FBT0MsYUFBYSxNQUFNLHFCQUFxQjtBQUMvQyxPQUFPQyxRQUFRLE1BQU0sZUFBZTtBQUNwQyxPQUFPQyxZQUFZLE1BQStCLG1CQUFtQjtBQUtyRSxlQUFlLE1BQU1DLE9BQU8sU0FBU0QsWUFBWSxDQUFDO0VBRXpDRSxXQUFXQSxDQUFFQyxlQUFnQyxFQUFHO0lBRXJELE1BQU1DLGVBQWUsR0FBR0QsZUFBZSxFQUFFQyxlQUFlOztJQUV4RDtJQUNBLE1BQU1DLE9BQU8sR0FBRyxJQUFJTixRQUFRLENBQUVGLE9BQU8sQ0FBQ1MsQ0FBQyxFQUFFRixlQUFnQixDQUFDO0lBQzFELE1BQU1HLFdBQVcsR0FBRyxLQUFLLEdBQUdGLE9BQU8sQ0FBQ0csS0FBSztJQUN6QyxNQUFNQyxnQkFBZ0IsR0FBRyxJQUFJVixRQUFRLENBQUVGLE9BQU8sQ0FBQ2EsQ0FBQyxFQUFFZCxLQUFLLENBQUU7TUFDdkRlLE9BQU8sRUFBRU4sT0FBTyxDQUFDTyxJQUFJLEdBQUdMLFdBQVc7TUFDbkNNLE9BQU8sRUFBRVIsT0FBTyxDQUFDUyxHQUFHLEdBQUdQO0lBQ3pCLENBQUMsRUFBRUgsZUFBZ0IsQ0FBRSxDQUFDO0lBQ3RCLE1BQU1XLGlCQUFpQixHQUFHLElBQUloQixRQUFRLENBQUVGLE9BQU8sQ0FBQ2EsQ0FBQyxFQUFFZCxLQUFLLENBQUU7TUFDeERlLE9BQU8sRUFBRU4sT0FBTyxDQUFDVyxLQUFLLEdBQUdULFdBQVc7TUFDcENNLE9BQU8sRUFBRUosZ0JBQWdCLENBQUNJO0lBQzVCLENBQUMsRUFBRVQsZUFBZ0IsQ0FBRSxDQUFDO0lBQ3RCLE1BQU1hLG1CQUFtQixHQUFHLElBQUlsQixRQUFRLENBQUVGLE9BQU8sQ0FBQ2EsQ0FBQyxFQUFFZCxLQUFLLENBQUU7TUFDMURlLE9BQU8sRUFBRUYsZ0JBQWdCLENBQUNFLE9BQU87TUFDakNFLE9BQU8sRUFBRVIsT0FBTyxDQUFDYSxNQUFNLEdBQUdYO0lBQzVCLENBQUMsRUFBRUgsZUFBZ0IsQ0FBRSxDQUFDO0lBQ3RCLE1BQU1lLG9CQUFvQixHQUFHLElBQUlwQixRQUFRLENBQUVGLE9BQU8sQ0FBQ2EsQ0FBQyxFQUFFZCxLQUFLLENBQUU7TUFDM0RlLE9BQU8sRUFBRUksaUJBQWlCLENBQUNKLE9BQU87TUFDbENFLE9BQU8sRUFBRUksbUJBQW1CLENBQUNKO0lBQy9CLENBQUMsRUFBRVQsZUFBZ0IsQ0FBRSxDQUFDO0lBRXRCLE1BQU1nQixTQUFTLEdBQUcsQ0FBRUwsaUJBQWlCLEVBQUVFLG1CQUFtQixFQUFFWixPQUFPLEVBQUVJLGdCQUFnQixFQUFFVSxvQkFBb0IsQ0FBRTtJQUU3RyxLQUFLLENBQUVDLFNBQVMsRUFBRWpCLGVBQWdCLENBQUM7RUFDckM7QUFDRjtBQUVBTCxhQUFhLENBQUN1QixRQUFRLENBQUUsU0FBUyxFQUFFcEIsT0FBUSxDQUFDIn0=